diff --git a/board/linuxhost/linuxhost.mk b/board/linuxhost/linuxhost.mk
index 60e7061..b7c134b 100644
--- a/board/linuxhost/linuxhost.mk
+++ b/board/linuxhost/linuxhost.mk
@@ -26,9 +26,9 @@ CONFIG_SYSINFO_DEVICE_NAME := LINUXHOST
 GLOBAL_CFLAGS += -DSYSINFO_PRODUCT_MODEL=\"$(CONFIG_SYSINFO_PRODUCT_MODEL)\"
 GLOBAL_CFLAGS += -DSYSINFO_DEVICE_NAME=\"$(CONFIG_SYSINFO_DEVICE_NAME)\"
 
-GLOBAL_ASMFLAGS += -m32
-GLOBAL_CFLAGS += -m32  -std=gnu99
-GLOBAL_LDFLAGS += -m32
+GLOBAL_ASMFLAGS += -m64
+GLOBAL_CFLAGS += -m64  -std=gnu99 -Wno-error=format
+GLOBAL_LDFLAGS += -m64
 
 GLOBAL_INCLUDES += .
 
diff --git a/example/linkkitapp/linkkit-example.c b/example/linkkitapp/linkkit-example.c
index ebefd96..092fd87 100755
--- a/example/linkkitapp/linkkit-example.c
+++ b/example/linkkitapp/linkkit-example.c
@@ -83,7 +83,7 @@ static void cloud_service_event(input_event_t *event, void *priv_data) {
 
     if (event->code == CODE_YUNIO_ON_CONNECTED) {
         LOG("user sub and pub here");
-        awss_report_cloud();
+        //awss_report_cloud();
         return;
     }
 
@@ -103,13 +103,13 @@ void do_awss_active()
 {
     LOG("do_awss_active %d\n", awss_running);
     awss_running = 1;
-    awss_config_press();
+    //awss_config_press();
 }
 
 static void do_awss_reset()
 {
     if(linkkit_started) {
-	aos_task_new("reset", awss_report_reset, NULL, 2048);
+	//aos_task_new("reset", awss_report_reset, NULL, 2048);
     }
     netmgr_clear_ap_config();
     LOG("SSID cleared. Please reboot the system.\n");
diff --git a/kernel/vcall/aos/aos_posix.c b/kernel/vcall/aos/aos_posix.c
index 1726a32..528906f 100644
--- a/kernel/vcall/aos/aos_posix.c
+++ b/kernel/vcall/aos/aos_posix.c
@@ -71,7 +71,8 @@ int aos_task_new_ext(aos_task_t *task, const char *name, void (*fn)(void *), voi
 
 void aos_task_exit(int code)
 {
-    pthread_exit((void *)code);
+    size_t codex = code;
+    pthread_exit((void *)codex);
 }
 
 const char *aos_task_name(void)
diff --git a/security/mbedtls/src/mbedtls_ssl.c b/security/mbedtls/src/mbedtls_ssl.c
index 3c0fc90..331b0eb 100644
--- a/security/mbedtls/src/mbedtls_ssl.c
+++ b/security/mbedtls/src/mbedtls_ssl.c
@@ -66,8 +66,8 @@ void *mbedtls_ssl_connect(void *tcp_fd, const char *ca_cert, int ca_cert_len)
         return NULL;
     }
 
-    if ((int)tcp_fd < 0) {
-        printf("ssl_connect: invalid tcp fd - %d\n", (int)tcp_fd);
+    if ((size_t)tcp_fd < 0) {
+        printf("ssl_connect: invalid tcp fd - %d\n", (size_t)tcp_fd);
         return NULL;
     }
 
@@ -99,7 +99,7 @@ void *mbedtls_ssl_connect(void *tcp_fd, const char *ca_cert, int ca_cert_len)
     /* 
      * Initialize the connection
      */
-    ssl_param->net.fd = (int)tcp_fd;
+    ssl_param->net.fd = (size_t)tcp_fd;
 
 #if !defined(STM32_USE_SPI_WIFI)
     ret = mbedtls_net_set_block(&ssl_param->net);
