From 3fc125bcae46945f279023b81e4905c014c7f5fa Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Sun, 15 Jul 2018 22:43:35 +0800
Subject: [PATCH 29/73] rk3308-aarch32: Switch to rkflash and fix compile error

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 arch/arm/configs/rk3308_linux_aarch32_defconfig |     5 +-
 drivers/rkflash/rk_sftl_arm_v7.S                | 43966 +++++++++++-----------
 2 files changed, 21414 insertions(+), 22557 deletions(-)
 mode change 100644 => 100755 drivers/rkflash/rk_sftl_arm_v7.S

diff --git a/arch/arm/configs/rk3308_linux_aarch32_defconfig b/arch/arm/configs/rk3308_linux_aarch32_defconfig
index f5f90c2dcc06..2db4b9ddd138 100644
--- a/arch/arm/configs/rk3308_linux_aarch32_defconfig
+++ b/arch/arm/configs/rk3308_linux_aarch32_defconfig
@@ -191,7 +191,10 @@ CONFIG_PWM_ROCKCHIP=y
 CONFIG_PHY_ROCKCHIP_INNO_USB2=y
 CONFIG_ANDROID=y
 CONFIG_NVMEM=y
-CONFIG_RK_NAND=y
+CONFIG_RK_FLASH=y
+CONFIG_RK_NANDC_NAND=y
+CONFIG_RK_SFC_NAND=y
+CONFIG_RK_SFC_NOR=y
 CONFIG_EXT4_FS=y
 # CONFIG_DNOTIFY is not set
 CONFIG_VFAT_FS=m
diff --git a/drivers/rkflash/rk_sftl_arm_v7.S b/drivers/rkflash/rk_sftl_arm_v7.S
old mode 100644
new mode 100755
index ee7141daed1e..96323f62311a
--- a/drivers/rkflash/rk_sftl_arm_v7.S
+++ b/drivers/rkflash/rk_sftl_arm_v7.S
@@ -1,53 +1,30 @@
-/* SPDX-License-Identifier: GPL-2.0 */
-
-/*
- * Copyright (c) 2018 Rockchip Electronics Co. Ltd.
- * date: 2018-06-13
- */
-	.arch armv7-a
-	.eabi_attribute 20, 1
-	.eabi_attribute 21, 1
-	.eabi_attribute 23, 3
-	.eabi_attribute 24, 1
-	.eabi_attribute 25, 1
-	.eabi_attribute 26, 2
-	.eabi_attribute 30, 4
-	.eabi_attribute 34, 1
-	.eabi_attribute 18, 4
 	.file	"rk_sftl.c"
 	.text
 .Ltext0:
-	.global	__aeabi_uidiv
+	.global	__udivsi3
 	.align	2
 	.syntax unified
 	.arm
 	.fpu softvfp
 	.type	l2p_addr_tran, %function
 l2p_addr_tran:
-	.fnstart
-.LFB261:
+.LFB271:
 	.file 1 "drivers/rkflash/rksftl/sftl_flash.c"
 	.loc 1 18 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
 .LVL0:
-	.movsp ip
 	mov	ip, sp
 .LCFI0:
 	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
 .LCFI1:
-	.setfp fp, ip, #-4
 	sub	fp, ip, #4
 .LCFI2:
-	push	{lr}
-	bl	__gnu_mcount_nc
+	.loc 1 25 0
+	ldr	r3, .L3
 	.loc 1 18 0
 	mov	r8, r1
 	mov	r9, r2
-	.loc 1 25 0
-	ldr	r3, .L3
 	.loc 1 32 0
 	ldr	r6, [r0, #4]
 .LVL1:
@@ -64,18 +41,18 @@ l2p_addr_tran:
 	.loc 1 37 0
 	ubfx	r6, r6, #0, #10
 .LVL4:
+	.loc 1 27 0
+	cmp	r3, #4
 	.loc 1 34 0
 	uxth	r0, r7
 .LVL5:
-	.loc 1 35 0
-	uxth	r7, r7
-	.loc 1 27 0
-	cmp	r3, #4
 	.loc 1 28 0
 	lsreq	r4, r4, #1
 	.loc 1 29 0
 	lsleq	r5, r5, #1
 .LVL6:
+	.loc 1 35 0
+	uxth	r7, r7
 	.loc 1 34 0
 	mov	r1, r4
 .LVL7:
@@ -83,7 +60,7 @@ l2p_addr_tran:
 	uxtheq	r5, r5
 .LVL8:
 	.loc 1 34 0
-	bl	__aeabi_uidiv
+	bl	__udivsi3
 .LVL9:
 	uxth	r0, r0
 .LVL10:
@@ -104,8 +81,7 @@ l2p_addr_tran:
 	.align	2
 .L3:
 	.word	g_nand_phy_info
-.LFE261:
-	.fnend
+.LFE271:
 	.size	l2p_addr_tran, .-l2p_addr_tran
 	.align	2
 	.syntax unified
@@ -113,30 +89,22 @@ l2p_addr_tran:
 	.fpu softvfp
 	.type	ftl_set_blk_mode.part.6, %function
 ftl_set_blk_mode.part.6:
-	.fnstart
-.LFB276:
+.LFB286:
 	.file 2 "drivers/rkflash/rksftl/sftl_sys.c"
-	.loc 2 1346 0
+	.loc 2 1395 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
 .LVL14:
-	.movsp ip
 	mov	ip, sp
 .LCFI3:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
 .LCFI4:
-	.setfp fp, ip, #-4
 	sub	fp, ip, #4
 .LCFI5:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 1346 0
-	.loc 2 1349 0
+	.loc 2 1398 0
+	ldr	r3, .L6
 	lsr	r1, r0, #5
 	mov	ip, #1
-	ldr	r3, .L6
 	and	r0, r0, #31
 .LVL15:
 	ldr	r2, [r3]
@@ -148,8 +116,7 @@ ftl_set_blk_mode.part.6:
 	.align	2
 .L6:
 	.word	.LANCHOR0
-.LFE276:
-	.fnend
+.LFE286:
 	.size	ftl_set_blk_mode.part.6, .-ftl_set_blk_mode.part.6
 	.align	2
 	.global	Ftl_log2
@@ -158,50 +125,41 @@ ftl_set_blk_mode.part.6:
 	.fpu softvfp
 	.type	Ftl_log2, %function
 Ftl_log2:
-	.fnstart
-.LFB142:
+.LFB152:
 	.file 3 "drivers/rkflash/rksftl/sftl_plat.c"
-	.loc 3 128 0
+	.loc 3 127 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
 .LVL16:
-	.movsp ip
 	mov	ip, sp
 .LCFI6:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
 .LCFI7:
-	.setfp fp, ip, #-4
 	sub	fp, ip, #4
 .LCFI8:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 128 0
-	.loc 3 132 0
+	.loc 3 131 0
 	mov	r1, #0
-	.loc 3 130 0
+	.loc 3 129 0
 	mov	r2, #1
 .LVL17:
 .L9:
-	.loc 3 132 0 discriminator 1
+	.loc 3 131 0 discriminator 1
 	cmp	r2, r0
 	uxth	r3, r1
 	add	r1, r1, #1
 	bls	.L10
-	.loc 3 134 0
+	.loc 3 133 0
 	sub	r0, r3, #1
 .LVL18:
-	.loc 3 136 0
+	.loc 3 135 0
 	uxth	r0, r0
 	ldmfd	sp, {fp, sp, pc}
 .LVL19:
 .L10:
-	.loc 3 133 0 discriminator 3
+	.loc 3 132 0 discriminator 3
 	lsl	r2, r2, #1
 	b	.L9
-.LFE142:
-	.fnend
+.LFE152:
 	.size	Ftl_log2, .-Ftl_log2
 	.align	2
 	.global	FtlPrintInfo
@@ -210,28 +168,19 @@ Ftl_log2:
 	.fpu softvfp
 	.type	FtlPrintInfo, %function
 FtlPrintInfo:
-	.fnstart
-.LFB143:
+.LFB153:
 	.loc 3 159 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
 .LVL20:
-	.movsp ip
 	mov	ip, sp
 .LCFI9:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
 .LCFI10:
-	.setfp fp, ip, #-4
 	sub	fp, ip, #4
 .LCFI11:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 159 0
 	ldmfd	sp, {fp, sp, pc}
-.LFE143:
-	.fnend
+.LFE153:
 	.size	FtlPrintInfo, .-FtlPrintInfo
 	.align	2
 	.global	FtlSysBlkNumInit
@@ -240,33 +189,28 @@ FtlPrintInfo:
 	.fpu softvfp
 	.type	FtlSysBlkNumInit, %function
 FtlSysBlkNumInit:
-	.fnstart
-.LFB144:
+.LFB154:
 	.loc 3 165 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
 .LVL21:
-	.movsp ip
+	.loc 3 165 0
 	mov	ip, sp
 .LCFI12:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
 .LCFI13:
-	.setfp fp, ip, #-4
 	sub	fp, ip, #4
 .LCFI14:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 165 0
-	cmp	r0, #24
 	.loc 3 168 0
 	ldr	r3, .L13
-	movcc	r0, #24
+	.loc 3 165 0
+	uxth	r0, r0
 	.loc 3 169 0
 	ldrh	r2, [r3, #8]
+	cmp	r0, #24
 	.loc 3 170 0
 	ldrh	r1, [r3, #18]
+	movcc	r0, #24
 	.loc 3 168 0
 	str	r0, [r3, #4]
 	.loc 3 169 0
@@ -291,10 +235,9 @@ FtlSysBlkNumInit:
 	.align	2
 .L13:
 	.word	.LANCHOR0
-.LFE144:
-	.fnend
+.LFE154:
 	.size	FtlSysBlkNumInit, .-FtlSysBlkNumInit
-	.global	__aeabi_idiv
+	.global	__divsi3
 	.align	2
 	.global	FtlConstantsInit
 	.syntax unified
@@ -302,24 +245,18 @@ FtlSysBlkNumInit:
 	.fpu softvfp
 	.type	FtlConstantsInit, %function
 FtlConstantsInit:
-	.fnstart
-.LFB145:
+.LFB155:
 	.loc 3 183 0
-	@ args = 0, pretend = 0, frame = 0
+	@ args = 0, pretend = 0, frame = 4
 	@ frame_needed = 1, uses_anonymous_args = 0
 .LVL23:
-	.movsp ip
 	mov	ip, sp
 .LCFI15:
-	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
 .LCFI16:
-	.setfp fp, ip, #-4
 	sub	fp, ip, #4
 .LCFI17:
-	push	{lr}
-	bl	__gnu_mcount_nc
+	sub	sp, sp, #4
 	.loc 3 183 0
 	mov	r7, r0
 	.loc 3 191 0
@@ -371,12 +308,12 @@ FtlConstantsInit:
 .LVL26:
 	.loc 3 200 0
 	cmp	r1, #1
-	.loc 3 198 0
-	strh	r2, [r4, #68]	@ movhi
+	.loc 3 202 0
+	mov	ip, #640
 	.loc 3 204 0
 	uxth	r6, r6
-	.loc 3 202 0
-	mov	r3, #640	@ movhi
+	.loc 3 198 0
+	strh	r2, [r4, #68]	@ movhi
 	.loc 3 205 0
 	smulbb	r0, r0, r5
 	.loc 3 199 0
@@ -384,9 +321,11 @@ FtlConstantsInit:
 	.loc 3 201 0
 	strheq	r1, [r4, #68]	@ movhi
 	.loc 3 202 0
-	strh	r3, [r4, #72]	@ movhi
+	strh	ip, [r4, #72]	@ movhi
 	.loc 3 205 0
 	uxth	r0, r0
+	.loc 3 202 0
+	str	ip, [fp, #-44]
 	.loc 3 199 0
 	strh	r2, [r4, #70]	@ movhi
 	.loc 3 204 0
@@ -424,10 +363,12 @@ FtlConstantsInit:
 	strh	r0, [r4, #84]	@ movhi
 	.loc 3 212 0
 	uxth	r2, r2
-	mov	r7, #640
-.LVL29:
+	.loc 3 218 0
+	mul	r1, r9, r10
 	.loc 3 214 0
 	strh	r3, [r4, #90]	@ movhi
+	.loc 3 218 0
+	mov	r0, #5120
 	.loc 3 216 0
 	mul	r3, r5, r6
 	.loc 3 212 0
@@ -436,56 +377,53 @@ FtlConstantsInit:
 	lsr	r2, r2, #8
 	.loc 3 223 0
 	lsl	r5, r5, #6
-	.loc 3 218 0
-	mul	r1, r9, r10
 	.loc 3 213 0
 	strh	r2, [r4, #88]	@ movhi
-	.loc 3 221 0
-	asr	r7, r7, r8
 	.loc 3 216 0
 	str	r3, [r4, #24]
 	.loc 3 217 0
 	mul	r3, r10, r3
-	.loc 3 223 0
-	add	r8, r8, #9
-	.loc 3 218 0
-	mov	r0, #5120
-	.loc 3 223 0
-	asr	r5, r5, r8
-	.loc 3 221 0
-	add	r7, r7, #2
-	.loc 3 217 0
 	mul	r3, r9, r3
 	asr	r3, r3, #11
 	str	r3, [r4, #92]
 	.loc 3 218 0
-	bl	__aeabi_idiv
-.LVL30:
+	bl	__divsi3
+.LVL29:
+	ldr	ip, [fp, #-44]
 	uxth	r0, r0
-	.loc 3 223 0
-	strh	r5, [r4, #100]	@ movhi
-	uxth	r5, r5
 	.loc 3 226 0
 	mov	r1, r6
 	.loc 3 219 0
 	cmp	r0, #4
-	.loc 3 221 0
-	strh	r7, [r4, #98]	@ movhi
 	.loc 3 220 0
 	movls	r3, #4
 	.loc 3 218 0
 	strhhi	r0, [r4, #96]	@ movhi
+	.loc 3 221 0
+	asr	r7, ip, r8
+.LVL30:
+	.loc 3 223 0
+	add	r8, r8, #9
+	asr	r5, r5, r8
 	.loc 3 220 0
 	strhls	r3, [r4, #96]	@ movhi
+	.loc 3 221 0
+	add	r7, r7, #2
+	.loc 3 226 0
+	ldrh	r0, [r4, #96]
+	.loc 3 223 0
+	strh	r5, [r4, #100]	@ movhi
+	uxth	r5, r5
+	.loc 3 221 0
+	strh	r7, [r4, #98]	@ movhi
 	.loc 3 224 0
 	mul	r3, r6, r5
 	.loc 3 226 0
-	ldrh	r0, [r4, #96]
 	add	r5, r5, #8
 	.loc 3 224 0
 	str	r3, [r4, #104]
 	.loc 3 226 0
-	bl	__aeabi_uidiv
+	bl	__udivsi3
 .LVL31:
 	uxtah	r0, r5, r0
 	.loc 3 227 0
@@ -526,14 +464,13 @@ FtlConstantsInit:
 	add	r3, r3, #3
 	str	r3, [r4, #104]
 	.loc 3 263 0
-	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+	ldmib	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
 .L26:
 	.align	2
 .L25:
 	.word	.LANCHOR0
 	.word	.LANCHOR0+36
-.LFE145:
-	.fnend
+.LFE155:
 	.size	FtlConstantsInit, .-FtlConstantsInit
 	.align	2
 	.global	IsBlkInVendorPart
@@ -542,71 +479,66 @@ FtlConstantsInit:
 	.fpu softvfp
 	.type	IsBlkInVendorPart, %function
 IsBlkInVendorPart:
-	.fnstart
-.LFB148:
+.LFB158:
 	.loc 3 514 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
 .LVL33:
-	.movsp ip
 	mov	ip, sp
 .LCFI18:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
 .LCFI19:
-	.setfp fp, ip, #-4
 	sub	fp, ip, #4
 .LCFI20:
-	push	{lr}
-	bl	__gnu_mcount_nc
+	.loc 3 517 0
+	ldr	r2, .L33
 	.loc 3 514 0
+	uxth	r1, r0
+.LVL34:
 	.loc 3 517 0
-	ldr	r2, .L34
-	ldrh	r3, [r2, #120]
-	cmp	r3, #0
-.LBB218:
-.LBB219:
+	ldrh	r0, [r2, #120]
+	cmp	r0, #0
+.LBB222:
+.LBB223:
 	.loc 3 519 0
 	ldrne	r3, [r2, #124]
 	ldrhne	r2, [r2, #96]
 	addne	r2, r3, r2, lsl #1
-.LBE219:
-.LBE218:
+.LBE223:
+.LBE222:
 	.loc 3 517 0
 	bne	.L29
-.L33:
-	.loc 3 524 0
-	mov	r0, #0
-.LVL34:
 	ldmfd	sp, {fp, sp, pc}
-.LVL35:
 .L30:
-.LBB221:
-.LBB220:
+.LBB226:
+.LBB224:
 	.loc 3 519 0
-	ldrh	r1, [r3], #2
-	cmp	r0, r1
+	ldrh	r0, [r3], #2
+	cmp	r1, r0
 	beq	.L32
 .L29:
 	.loc 3 518 0
 	cmp	r3, r2
 	bne	.L30
-	b	.L33
+.LBE224:
+.LBE226:
+	.loc 3 524 0
+	mov	r0, #0
+	ldmfd	sp, {fp, sp, pc}
 .L32:
+.LBB227:
+.LBB225:
 	.loc 3 520 0
 	mov	r0, #1
-.LVL36:
-.LBE220:
-.LBE221:
+.LBE225:
+.LBE227:
 	.loc 3 525 0
 	ldmfd	sp, {fp, sp, pc}
-.L35:
-	.align	2
 .L34:
+	.align	2
+.L33:
 	.word	.LANCHOR0
-.LFE148:
-	.fnend
+.LFE158:
 	.size	IsBlkInVendorPart, .-IsBlkInVendorPart
 	.align	2
 	.global	sftl_get_density
@@ -615,36 +547,27 @@ IsBlkInVendorPart:
 	.fpu softvfp
 	.type	sftl_get_density, %function
 sftl_get_density:
-	.fnstart
-.LFB161:
-	.loc 3 1212 0
+.LFB171:
+	.loc 3 1214 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
 .LCFI21:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
 .LCFI22:
-	.setfp fp, ip, #-4
 	sub	fp, ip, #4
 .LCFI23:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 1212 0
-	.loc 3 1214 0
-	ldr	r3, .L37
+	.loc 3 1216 0
+	ldr	r3, .L36
 	ldr	r0, [r3, #116]
 	ldmfd	sp, {fp, sp, pc}
-.L38:
-	.align	2
 .L37:
+	.align	2
+.L36:
 	.word	.LANCHOR0
-.LFE161:
-	.fnend
+.LFE171:
 	.size	sftl_get_density, .-sftl_get_density
-	.global	__aeabi_uidivmod
+	.global	__umodsi3
 	.align	2
 	.global	FtlBbmMapBadBlock
 	.syntax unified
@@ -652,61 +575,53 @@ sftl_get_density:
 	.fpu softvfp
 	.type	FtlBbmMapBadBlock, %function
 FtlBbmMapBadBlock:
-	.fnstart
-.LFB162:
+.LFB172:
 	.file 4 "drivers/rkflash/rksftl/sftl_bbm.c"
 	.loc 4 5 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL37:
-	.movsp ip
+.LVL35:
 	mov	ip, sp
 .LCFI24:
 	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
 .LCFI25:
-	.setfp fp, ip, #-4
 	sub	fp, ip, #4
 .LCFI26:
-	.pad #8
-	sub	sp, sp, #8
-	push	{lr}
-	bl	__gnu_mcount_nc
+	sub	sp, sp, #4
 	.loc 4 5 0
+	uxth	r5, r0
+.LVL36:
 	.loc 4 10 0
-	ldr	r4, .L40
-	.loc 4 5 0
-	mov	r5, r0
-	.loc 4 10 0
+	ldr	r4, .L39
+	mov	r0, r5
 	ldrh	r7, [r4, #74]
 	mov	r1, r7
-	bl	__aeabi_uidiv
-.LVL38:
+	bl	__udivsi3
+.LVL37:
 	uxth	r6, r0
-.LVL39:
+.LVL38:
 	mov	r1, r7
 	mov	r0, r5
-	bl	__aeabi_uidivmod
-.LVL40:
+	bl	__umodsi3
+.LVL39:
 	.loc 4 13 0
 	add	r2, r4, r6, lsl #2
-	uxth	r3, r1
+	uxth	r3, r0
 	.loc 4 15 0
 	ldr	r2, [r2, #156]
-	lsr	r1, r3, #5
+	lsr	r0, r3, #5
 	and	ip, r3, #31
 	mov	lr, #1
-	ldr	r0, [r2, r1, lsl #2]
-	orr	r0, r0, lr, lsl ip
-	str	r0, [r2, r1, lsl #2]
+	ldr	r1, [r2, r0, lsl #2]
+	orr	r1, r1, lr, lsl ip
+	str	r1, [r2, r0, lsl #2]
 	.loc 4 16 0
 	mov	r2, r6
-	str	r0, [sp]
+	str	r1, [sp]
 	mov	r1, r5
-	ldr	r0, .L40+4
+	ldr	r0, .L39+4
 	bl	printk
-.LVL41:
+.LVL40:
 	.loc 4 17 0
 	ldrh	r3, [r4, #134]
 	.loc 4 19 0
@@ -715,17 +630,13 @@ FtlBbmMapBadBlock:
 	add	r3, r3, #1
 	strh	r3, [r4, #134]	@ movhi
 	.loc 4 19 0
-	sub	sp, fp, #28
-.LCFI27:
-	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.LVL42:
-.L41:
-	.align	2
+	ldmib	sp, {r4, r5, r6, r7, fp, sp, pc}
 .L40:
+	.align	2
+.L39:
 	.word	.LANCHOR0
 	.word	.LC0
-.LFE162:
-	.fnend
+.LFE172:
 	.size	FtlBbmMapBadBlock, .-FtlBbmMapBadBlock
 	.align	2
 	.global	FtlBbmIsBadBlock
@@ -734,64 +645,59 @@ FtlBbmMapBadBlock:
 	.fpu softvfp
 	.type	FtlBbmIsBadBlock, %function
 FtlBbmIsBadBlock:
-	.fnstart
-.LFB163:
+.LFB173:
 	.loc 4 24 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL43:
-	.movsp ip
+.LVL41:
 	mov	ip, sp
-.LCFI28:
+.LCFI27:
 	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI29:
-	.setfp fp, ip, #-4
+.LCFI28:
 	sub	fp, ip, #4
-.LCFI30:
-	push	{lr}
-	bl	__gnu_mcount_nc
+.LCFI29:
+	.loc 4 30 0
+	ldr	r5, .L42
 	.loc 4 24 0
-	mov	r7, r0
+	uxth	r6, r0
+.LVL42:
 	.loc 4 30 0
-	ldr	r5, .L43
-	ldrh	r6, [r5, #74]
+	ldrh	r7, [r5, #74]
 	.loc 4 31 0
-	mov	r1, r6
-	bl	__aeabi_uidivmod
-.LVL44:
+	mov	r0, r6
+	mov	r1, r7
+	bl	__umodsi3
+.LVL43:
 	.loc 4 30 0
-	mov	r0, r7
+	mov	r1, r7
 	.loc 4 31 0
-	uxth	r4, r1
-.LVL45:
+	uxth	r4, r0
+.LVL44:
 	.loc 4 30 0
-	mov	r1, r6
-	bl	__aeabi_uidiv
-.LVL46:
+	mov	r0, r6
+	bl	__udivsi3
+.LVL45:
 	uxth	r0, r0
-.LVL47:
+.LVL46:
 	.loc 4 34 0
 	lsr	r2, r4, #5
 	.loc 4 33 0
 	add	r5, r5, r0, lsl #2
 	.loc 4 34 0
 	and	r4, r4, #31
-.LVL48:
+.LVL47:
 	ldr	r3, [r5, #156]
 	ldr	r0, [r3, r2, lsl #2]
-.LVL49:
+.LVL48:
 	lsr	r0, r0, r4
 	.loc 4 36 0
 	and	r0, r0, #1
 	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L44:
-	.align	2
 .L43:
+	.align	2
+.L42:
 	.word	.LANCHOR0
-.LFE163:
-	.fnend
+.LFE173:
 	.size	FtlBbmIsBadBlock, .-FtlBbmIsBadBlock
 	.align	2
 	.global	FtlBbtInfoPrint
@@ -800,27 +706,18 @@ FtlBbmIsBadBlock:
 	.fpu softvfp
 	.type	FtlBbtInfoPrint, %function
 FtlBbtInfoPrint:
-	.fnstart
-.LFB164:
+.LFB174:
 	.loc 4 39 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI31:
+.LCFI30:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI32:
-	.setfp fp, ip, #-4
+.LCFI31:
 	sub	fp, ip, #4
-.LCFI33:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 4 39 0
+.LCFI32:
 	ldmfd	sp, {fp, sp, pc}
-.LFE164:
-	.fnend
+.LFE174:
 	.size	FtlBbtInfoPrint, .-FtlBbtInfoPrint
 	.align	2
 	.global	FtlBbtMemInit
@@ -829,66 +726,50 @@ FtlBbtInfoPrint:
 	.fpu softvfp
 	.type	FtlBbtMemInit, %function
 FtlBbtMemInit:
-	.fnstart
-.LFB167:
+.LFB177:
 	.loc 4 149 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
+	.loc 4 149 0
 	mov	ip, sp
-.LCFI34:
+.LCFI33:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI35:
-	.setfp fp, ip, #-4
+.LCFI34:
 	sub	fp, ip, #4
-.LCFI36:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 4 149 0
+.LCFI35:
 	.loc 4 150 0
+	ldr	r0, .L46
 	mvn	r3, #0
-.LBB227:
-.LBB228:
-.LBB229:
-	.loc 1 202 0
-	mov	r2, #16
-.LBE229:
-.LBE228:
-.LBE227:
-	.loc 4 150 0
-	ldr	r0, .L47
+.LBB233:
 .LBB234:
-.LBB232:
-.LBB230:
+.LBB235:
 	.loc 1 202 0
+	mov	r2, #16
 	mov	r1, #255
-.LBE230:
-.LBE232:
+.LBE235:
 .LBE234:
+.LBE233:
 	.loc 4 150 0
 	strh	r3, [r0, #128]	@ movhi
 	.loc 4 151 0
 	mov	r3, #0
 	strh	r3, [r0, #134]	@ movhi
-.LBB235:
-.LBB233:
-.LBB231:
+.LBB238:
+.LBB237:
+.LBB236:
 	.loc 1 202 0
 	add	r0, r0, #140
 	bl	memset
-.LVL50:
+.LVL49:
 	ldmfd	sp, {fp, sp, pc}
-.L48:
-	.align	2
 .L47:
+	.align	2
+.L46:
 	.word	.LANCHOR0
-.LBE231:
-.LBE233:
-.LBE235:
-.LFE167:
-	.fnend
+.LBE236:
+.LBE237:
+.LBE238:
+.LFE177:
 	.size	FtlBbtMemInit, .-FtlBbtMemInit
 	.align	2
 	.global	FtlBbtCalcTotleCnt
@@ -897,59 +778,48 @@ FtlBbtMemInit:
 	.fpu softvfp
 	.type	FtlBbtCalcTotleCnt, %function
 FtlBbtCalcTotleCnt:
-	.fnstart
-.LFB168:
+.LFB178:
 	.loc 4 157 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
+.LCFI36:
+	push	{r4, r5, r6, fp, ip, lr, pc}
 .LCFI37:
-	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI38:
-	.setfp fp, ip, #-4
 	sub	fp, ip, #4
-.LCFI39:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 4 157 0
+.LCFI38:
 	.loc 4 160 0
+	ldr	r3, .L55
 	mov	r5, #0
-	ldr	r3, .L56
 	.loc 4 159 0
 	mov	r4, r5
 	.loc 4 160 0
 	ldrh	r2, [r3, #74]
 	ldrh	r6, [r3, #30]
 	mul	r6, r6, r2
-.L50:
-	uxth	r0, r5
-.LVL51:
+.L49:
 	.loc 4 160 0 is_stmt 0 discriminator 1
+	uxth	r0, r5
 	cmp	r0, r6
-.LVL52:
-	blt	.L52
+	blt	.L51
 	.loc 4 169 0 is_stmt 1
 	mov	r0, r4
-	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L52:
+	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
+.L51:
 	.loc 4 162 0
 	bl	FtlBbmIsBadBlock
-.LVL53:
+.LVL50:
 	cmp	r0, #0
 	add	r5, r5, #1
 	.loc 4 164 0
 	addne	r4, r4, #1
 	uxthne	r4, r4
-	b	.L50
-.L57:
-	.align	2
+	b	.L49
 .L56:
+	.align	2
+.L55:
 	.word	.LANCHOR0
-.LFE168:
-	.fnend
+.LFE178:
 	.size	FtlBbtCalcTotleCnt, .-FtlBbtCalcTotleCnt
 	.align	2
 	.global	V2P_block
@@ -958,53 +828,48 @@ FtlBbtCalcTotleCnt:
 	.fpu softvfp
 	.type	V2P_block, %function
 V2P_block:
-	.fnstart
-.LFB172:
+.LFB182:
 	.loc 2 5 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL54:
-	.movsp ip
+.LVL51:
 	mov	ip, sp
-.LCFI40:
+.LCFI39:
 	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI41:
-	.setfp fp, ip, #-4
+.LCFI40:
 	sub	fp, ip, #4
-.LCFI42:
-	push	{lr}
-	bl	__gnu_mcount_nc
+.LCFI41:
+	.loc 2 8 0
+	ldr	r4, .L58
 	.loc 2 5 0
-	mov	r5, r1
-	mov	r7, r0
+	uxth	r7, r0
+.LVL52:
+	uxth	r5, r1
+.LVL53:
 	.loc 2 8 0
-	ldr	r4, .L59
 	ldrh	r6, [r4, #32]
+	mov	r0, r7
 	mov	r1, r6
-.LVL55:
-	bl	__aeabi_uidiv
-.LVL56:
+	bl	__udivsi3
+.LVL54:
 	ldrh	r4, [r4, #74]
 	smulbb	r5, r6, r5
-.LVL57:
+.LVL55:
 	mov	r1, r6
 	smulbb	r4, r4, r0
 	mov	r0, r7
-	bl	__aeabi_uidivmod
-.LVL58:
-	add	r0, r5, r1
+	bl	__umodsi3
+.LVL56:
+	add	r0, r5, r0
 	add	r0, r4, r0
 	.loc 2 10 0
 	uxth	r0, r0
 	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L60:
-	.align	2
 .L59:
+	.align	2
+.L58:
 	.word	.LANCHOR0
-.LFE172:
-	.fnend
+.LFE182:
 	.size	V2P_block, .-V2P_block
 	.align	2
 	.global	P2V_plane
@@ -1013,47 +878,42 @@ V2P_block:
 	.fpu softvfp
 	.type	P2V_plane, %function
 P2V_plane:
-	.fnstart
-.LFB173:
+.LFB183:
 	.loc 2 13 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL59:
-	.movsp ip
+.LVL57:
 	mov	ip, sp
+.LCFI42:
+	push	{r4, r5, r6, fp, ip, lr, pc}
 .LCFI43:
-	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI44:
-	.setfp fp, ip, #-4
 	sub	fp, ip, #4
-.LCFI45:
-	push	{lr}
-	bl	__gnu_mcount_nc
+.LCFI44:
+	.loc 2 16 0
+	ldr	r3, .L61
 	.loc 2 13 0
-	mov	r6, r0
+	uxth	r5, r0
+.LVL58:
 	.loc 2 16 0
-	ldr	r3, .L62
-	ldrh	r5, [r3, #32]
+	ldrh	r6, [r3, #32]
+	mov	r0, r5
 	ldrh	r1, [r3, #74]
-	bl	__aeabi_uidiv
+	bl	__udivsi3
+.LVL59:
+	mov	r1, r6
+	smulbb	r4, r0, r6
+	mov	r0, r5
+	bl	__umodsi3
 .LVL60:
-	mov	r1, r5
-	smulbb	r4, r0, r5
-	mov	r0, r6
-	bl	__aeabi_uidivmod
-.LVL61:
-	add	r1, r4, r1
+	add	r0, r4, r0
 	.loc 2 18 0
-	uxth	r0, r1
-	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L63:
-	.align	2
+	uxth	r0, r0
+	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
 .L62:
+	.align	2
+.L61:
 	.word	.LANCHOR0
-.LFE173:
-	.fnend
+.LFE183:
 	.size	P2V_plane, .-P2V_plane
 	.align	2
 	.global	P2V_block_in_plane
@@ -1062,44 +922,37 @@ P2V_plane:
 	.fpu softvfp
 	.type	P2V_block_in_plane, %function
 P2V_block_in_plane:
-	.fnstart
-.LFB174:
+.LFB184:
 	.loc 2 21 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL62:
-	.movsp ip
+.LVL61:
 	mov	ip, sp
+.LCFI45:
+	push	{r4, fp, ip, lr, pc}
 .LCFI46:
-	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI47:
-	.setfp fp, ip, #-4
 	sub	fp, ip, #4
-.LCFI48:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 21 0
+.LCFI47:
 	.loc 2 24 0
-	ldr	r4, .L65
+	ldr	r4, .L64
+	uxth	r0, r0
+.LVL62:
 	ldrh	r1, [r4, #74]
-	bl	__aeabi_uidivmod
+	bl	__umodsi3
 .LVL63:
-	uxth	r0, r1
 	.loc 2 25 0
 	ldrh	r1, [r4, #32]
-	bl	__aeabi_uidiv
+	uxth	r0, r0
+	bl	__udivsi3
 .LVL64:
 	.loc 2 27 0
 	uxth	r0, r0
-	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L66:
-	.align	2
+	ldmfd	sp, {r4, fp, sp, pc}
 .L65:
+	.align	2
+.L64:
 	.word	.LANCHOR0
-.LFE174:
-	.fnend
+.LFE184:
 	.size	P2V_block_in_plane, .-P2V_block_in_plane
 	.align	2
 	.global	ftl_cmp_data_ver
@@ -1108,28 +961,20 @@ P2V_block_in_plane:
 	.fpu softvfp
 	.type	ftl_cmp_data_ver, %function
 ftl_cmp_data_ver:
-	.fnstart
-.LFB175:
+.LFB185:
 	.loc 2 31 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
 .LVL65:
-	.movsp ip
 	mov	ip, sp
-.LCFI49:
+.LCFI48:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI50:
-	.setfp fp, ip, #-4
+.LCFI49:
 	sub	fp, ip, #4
-.LCFI51:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 31 0
+.LCFI50:
 	.loc 2 34 0
 	cmp	r0, r1
-	bls	.L68
+	bls	.L67
 	.loc 2 36 0
 	sub	r0, r0, r1
 .LVL66:
@@ -1138,7 +983,7 @@ ftl_cmp_data_ver:
 	movls	r0, #1
 	ldmfd	sp, {fp, sp, pc}
 .LVL67:
-.L68:
+.L67:
 	.loc 2 40 0
 	sub	r0, r1, r0
 .LVL68:
@@ -1147,8 +992,7 @@ ftl_cmp_data_ver:
 	movhi	r0, #1
 	.loc 2 44 0
 	ldmfd	sp, {fp, sp, pc}
-.LFE175:
-	.fnend
+.LFE185:
 	.size	ftl_cmp_data_ver, .-ftl_cmp_data_ver
 	.align	2
 	.global	FtlFreeSysBlkQueueInit
@@ -1157,72 +1001,62 @@ ftl_cmp_data_ver:
 	.fpu softvfp
 	.type	FtlFreeSysBlkQueueInit, %function
 FtlFreeSysBlkQueueInit:
-	.fnstart
-.LFB177:
+.LFB187:
 	.loc 2 76 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
 .LVL69:
-	.movsp ip
 	mov	ip, sp
+.LCFI51:
+	push	{r4, fp, ip, lr, pc}
 .LCFI52:
-	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI53:
-	.setfp fp, ip, #-4
 	sub	fp, ip, #4
-.LCFI54:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 76 0
+.LCFI53:
 	.loc 2 79 0
+	ldr	r3, .L70
 	mov	r4, #0
-.LBB241:
-.LBB242:
-.LBB243:
+.LBB244:
+.LBB245:
+.LBB246:
 	.loc 1 202 0
 	mov	r1, #2048
-.LBE243:
-.LBE242:
-.LBE241:
-	.loc 2 79 0
-	ldr	r3, .L71
+.LBE246:
+.LBE245:
+.LBE244:
 	.loc 2 82 0
 	strh	r0, [r3, #188]	@ movhi
-.LBB248:
-.LBB246:
-.LBB244:
+.LBB251:
+.LBB249:
+.LBB247:
 	.loc 1 202 0
 	add	r0, r3, #196
 .LVL70:
-.LBE244:
-.LBE246:
-.LBE248:
+.LBE247:
+.LBE249:
+.LBE251:
 	.loc 2 79 0
 	strh	r4, [r3, #190]	@ movhi
 	.loc 2 80 0
 	strh	r4, [r3, #192]	@ movhi
 	.loc 2 81 0
 	strh	r4, [r3, #194]	@ movhi
-.LBB249:
-.LBB247:
-.LBB245:
+.LBB252:
+.LBB250:
+.LBB248:
 	.loc 1 202 0
 	bl	__memzero
 .LVL71:
-.LBE245:
-.LBE247:
-.LBE249:
+.LBE248:
+.LBE250:
+.LBE252:
 	.loc 2 85 0
 	mov	r0, r4
-	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L72:
-	.align	2
+	ldmfd	sp, {r4, fp, sp, pc}
 .L71:
+	.align	2
+.L70:
 	.word	.LANCHOR0
-.LFE177:
-	.fnend
+.LFE187:
 	.size	FtlFreeSysBlkQueueInit, .-FtlFreeSysBlkQueueInit
 	.align	2
 	.global	FtlFreeSysBlkQueueEmpty
@@ -1231,37 +1065,28 @@ FtlFreeSysBlkQueueInit:
 	.fpu softvfp
 	.type	FtlFreeSysBlkQueueEmpty, %function
 FtlFreeSysBlkQueueEmpty:
-	.fnstart
-.LFB178:
+.LFB188:
 	.loc 2 88 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI55:
+.LCFI54:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI56:
-	.setfp fp, ip, #-4
+.LCFI55:
 	sub	fp, ip, #4
-.LCFI57:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 88 0
+.LCFI56:
 	.loc 2 89 0
-	ldr	r3, .L74
+	ldr	r3, .L73
 	ldrh	r0, [r3, #194]
 	.loc 2 90 0
 	clz	r0, r0
 	lsr	r0, r0, #5
 	ldmfd	sp, {fp, sp, pc}
-.L75:
-	.align	2
 .L74:
+	.align	2
+.L73:
 	.word	.LANCHOR0
-.LFE178:
-	.fnend
+.LFE188:
 	.size	FtlFreeSysBlkQueueEmpty, .-FtlFreeSysBlkQueueEmpty
 	.align	2
 	.global	FtlFreeSysBlkQueueFull
@@ -1270,38 +1095,29 @@ FtlFreeSysBlkQueueEmpty:
 	.fpu softvfp
 	.type	FtlFreeSysBlkQueueFull, %function
 FtlFreeSysBlkQueueFull:
-	.fnstart
-.LFB179:
+.LFB189:
 	.loc 2 93 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI58:
+.LCFI57:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI59:
-	.setfp fp, ip, #-4
+.LCFI58:
 	sub	fp, ip, #4
-.LCFI60:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 93 0
+.LCFI59:
 	.loc 2 94 0
-	ldr	r3, .L77
+	ldr	r3, .L76
 	ldrh	r0, [r3, #194]
 	.loc 2 95 0
 	sub	r0, r0, #1024
 	clz	r0, r0
 	lsr	r0, r0, #5
 	ldmfd	sp, {fp, sp, pc}
-.L78:
-	.align	2
 .L77:
+	.align	2
+.L76:
 	.word	.LANCHOR0
-.LFE179:
-	.fnend
+.LFE189:
 	.size	FtlFreeSysBlkQueueFull, .-FtlFreeSysBlkQueueFull
 	.align	2
 	.global	FtlFreeSysBLkSort
@@ -1310,138 +1126,64 @@ FtlFreeSysBlkQueueFull:
 	.fpu softvfp
 	.type	FtlFreeSysBLkSort, %function
 FtlFreeSysBLkSort:
-	.fnstart
-.LFB181:
-	.loc 2 116 0
+.LFB191:
+	.loc 2 118 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
+.LCFI60:
+	push	{r4, fp, ip, lr, pc}
 .LCFI61:
-	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI62:
-	.setfp fp, ip, #-4
 	sub	fp, ip, #4
-.LCFI63:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 116 0
+.LCFI62:
 	.loc 2 123 0
-	mov	r3, #0
-	ldr	r6, .L88
-	mov	r4, r6
-.L80:
-	.loc 2 123 0 is_stmt 0 discriminator 1
-	ldrh	r1, [r6, #194]
-	uxth	r2, r3
-	add	r7, r3, #1
-	cmp	r1, r2
-	bhi	.L81
-	mov	r1, #0
+	ldr	r3, .L87
+	ldrh	r2, [r3, #194]
+	cmp	r2, #0
+	ldmfdeq	sp, {r4, fp, sp, pc}
+	.loc 2 119 0
+	ldr	r2, .L87+4
+	mov	r4, #0
+	ldrh	r1, [r3, #190]
+	mov	lr, r4
+	ldrh	ip, [r2, #28]
+	ldrh	r2, [r3, #192]
+	and	ip, ip, #31
 .LVL72:
-.L82:
-	.loc 2 128 0 is_stmt 1 discriminator 1
-	ldrh	lr, [r4, #194]
-.LVL73:
-	sub	r3, lr, #1
-.LVL74:
-	cmp	r1, r3
-	blt	.L87
-	.loc 2 144 0
-	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.LVL75:
+.L80:
+	.loc 2 124 0 discriminator 1
+	uxth	r0, r4
+	add	r4, r4, #1
+	cmp	ip, r0
+	bgt	.L81
+	cmp	lr, #0
+	strhne	r1, [r3, #190]	@ movhi
+	strhne	r2, [r3, #192]	@ movhi
+	ldmfd	sp, {r4, fp, sp, pc}
 .L81:
-	.loc 2 124 0 discriminator 3
-	ldrh	r2, [r6, #190]
-	uxth	r5, r3
-	add	r3, r2, r5
-	add	r3, r6, r3, lsl #1
-	ldrh	r0, [r3, #196]
-	bl	P2V_block_in_plane
-.LVL76:
 	.loc 2 125 0 discriminator 3
-	ldr	r2, [r6, #2248]
-	lsl	r0, r0, #1
-	ldr	r3, [r6, #2244]
-	ldrh	r2, [r2, r0]
-	str	r2, [r3, r5, lsl #2]
-	mov	r3, r7
+	add	r0, r3, r1, lsl #1
+	.loc 2 126 0 discriminator 3
+	add	r1, r1, #1
+	ubfx	r1, r1, #0, #10
+	.loc 2 125 0 discriminator 3
+	ldrh	lr, [r0, #196]
+.LVL73:
+	.loc 2 127 0 discriminator 3
+	add	r0, r3, r2, lsl #1
+	strh	lr, [r0, #196]	@ movhi
+	mov	lr, #1
+.LVL74:
+	.loc 2 128 0 discriminator 3
+	add	r2, r2, lr
+	ubfx	r2, r2, #0, #10
 	b	.L80
-.LVL77:
-.L87:
-	.loc 2 130 0
-	add	r0, r1, #1
-	.loc 2 131 0
-	ldr	ip, [r4, #2244]
-.LVL78:
-	.loc 2 130 0
-	uxth	r0, r0
-	mov	r3, r1
-.LVL79:
-	mov	r2, r0
-.L83:
-	.loc 2 130 0 is_stmt 0 discriminator 1
-	cmp	r2, lr
-	bcc	.L85
-	.loc 2 134 0 is_stmt 1
-	cmp	r1, r3
-	beq	.L86
-	.loc 2 136 0
-	ldr	r2, [ip, r1, lsl #2]
-	.loc 2 135 0
-	ldr	lr, [ip, r3, lsl #2]
-.LVL80:
-	.loc 2 136 0
-	str	r2, [ip, r3, lsl #2]
-	.loc 2 137 0
-	ldr	r2, [r4, #2244]
-	str	lr, [r2, r1, lsl #2]
-	.loc 2 139 0
-	ldrh	r2, [r4, #190]
-	add	r3, r3, r2
-.LVL81:
-	.loc 2 140 0
-	add	r2, r1, r2
-	.loc 2 139 0
-	add	r3, r3, #4
-	.loc 2 140 0
-	add	r2, r2, #4
-	.loc 2 139 0
-	add	r3, r4, r3, lsl #1
-	.loc 2 140 0
-	add	r2, r4, r2, lsl #1
-	.loc 2 139 0
-	ldrh	ip, [r3, #188]
-.LVL82:
-	.loc 2 140 0
-	ldrh	r1, [r2, #188]
-	strh	r1, [r3, #188]	@ movhi
-	.loc 2 141 0
-	strh	ip, [r2, #188]	@ movhi
-.LVL83:
-.L86:
-	.loc 2 130 0 discriminator 1
-	mov	r1, r0
-	b	.L82
-.LVL84:
-.L85:
-	.loc 2 131 0
-	ldr	r6, [ip, r3, lsl #2]
-	ldr	r5, [ip, r2, lsl #2]
-	cmp	r6, r5
-	movhi	r3, r2
-	.loc 2 130 0
-	add	r2, r2, #1
-	uxth	r2, r2
-	b	.L83
-.L89:
-	.align	2
 .L88:
+	.align	2
+.L87:
 	.word	.LANCHOR0
-.LFE181:
-	.fnend
+	.word	.LANCHOR0+2244
+.LFE191:
 	.size	FtlFreeSysBLkSort, .-FtlFreeSysBLkSort
 	.align	2
 	.global	IsInFreeQueue
@@ -1450,137 +1192,72 @@ FtlFreeSysBLkSort:
 	.fpu softvfp
 	.type	IsInFreeQueue, %function
 IsInFreeQueue:
-	.fnstart
-.LFB182:
-	.loc 2 147 0
+.LFB192:
+	.loc 2 163 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL85:
-	.movsp ip
+.LVL75:
 	mov	ip, sp
-.LCFI64:
+.LCFI63:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI65:
-	.setfp fp, ip, #-4
+.LCFI64:
 	sub	fp, ip, #4
-.LCFI66:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 147 0
-.LBB250:
-.LBB251:
+.LCFI65:
+.LBB253:
+.LBB254:
+	.loc 2 94 0
+	ldr	r3, .L95
+.LBE254:
+.LBE253:
+	.loc 2 163 0
+	uxth	r0, r0
+.LBB256:
+.LBB255:
 	.loc 2 94 0
-	ldr	r3, .L96
 	ldrh	ip, [r3, #194]
-.LBE251:
-.LBE250:
-	.loc 2 152 0
+.LBE255:
+.LBE256:
+	.loc 2 168 0
 	cmp	ip, #1024
-	.loc 2 155 0
+	.loc 2 171 0
 	ldrhne	lr, [r3, #190]
 	movne	r1, #0
-.LVL86:
-	.loc 2 152 0
-	bne	.L92
-.L94:
-	.loc 2 148 0
+.LVL76:
+	.loc 2 168 0
+	bne	.L91
+.L93:
+	.loc 2 164 0
 	mov	r0, #0
-.LVL87:
+.LVL77:
 	ldmfd	sp, {fp, sp, pc}
-.LVL88:
-.L93:
-	.loc 2 155 0
+.LVL78:
+.L92:
+	.loc 2 171 0
 	add	r2, r1, lr
 	ubfx	r2, r2, #0, #10
 	add	r2, r3, r2, lsl #1
 	ldrh	r2, [r2, #196]
 	cmp	r2, r0
-	beq	.L95
-	.loc 2 154 0 discriminator 2
+	beq	.L94
+	.loc 2 170 0 discriminator 2
 	add	r1, r1, #1
-.L92:
-	.loc 2 154 0 is_stmt 0 discriminator 1
+.L91:
+	.loc 2 170 0 is_stmt 0 discriminator 1
 	cmp	r1, ip
-	bcc	.L93
-	b	.L94
-.L95:
-	.loc 2 156 0 is_stmt 1
+	bcc	.L92
+	b	.L93
+.L94:
+	.loc 2 172 0 is_stmt 1
 	mov	r0, #1
-.LVL89:
-	.loc 2 162 0
+.LVL79:
+	.loc 2 178 0
 	ldmfd	sp, {fp, sp, pc}
-.L97:
-	.align	2
 .L96:
-	.word	.LANCHOR0
-.LFE182:
-	.fnend
-	.size	IsInFreeQueue, .-IsInFreeQueue
 	.align	2
-	.global	FtlFreeSysBlkQueueOut
-	.syntax unified
-	.arm
-	.fpu softvfp
-	.type	FtlFreeSysBlkQueueOut, %function
-FtlFreeSysBlkQueueOut:
-	.fnstart
-.LFB183:
-	.loc 2 165 0
-	@ args = 0, pretend = 0, frame = 0
-	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
-	mov	ip, sp
-.LCFI67:
-	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI68:
-	.setfp fp, ip, #-4
-	sub	fp, ip, #4
-.LCFI69:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 165 0
-.LBB252:
-.LBB253:
-	.loc 2 89 0
-	ldr	r2, .L101
-	ldrh	r1, [r2, #194]
-.LBE253:
-.LBE252:
-	.loc 2 168 0
-	cmp	r1, #0
-.LBB254:
-	.loc 2 170 0
-	ldrhne	r3, [r2, #190]
-	.loc 2 171 0
-	subne	r1, r1, #1
-	strhne	r1, [r2, #194]	@ movhi
-	.loc 2 170 0
-	addne	r0, r2, r3, lsl #1
-	.loc 2 172 0
-	addne	r3, r3, #1
-	ubfxne	r3, r3, #0, #10
-	.loc 2 170 0
-	ldrhne	r0, [r0, #196]
-.LBE254:
-	.loc 2 166 0
-	movweq	r0, #65535
-.LBB255:
-	.loc 2 172 0
-	strhne	r3, [r2, #190]	@ movhi
-.LBE255:
-	.loc 2 176 0
-	ldmfd	sp, {fp, sp, pc}
-.L102:
-	.align	2
-.L101:
+.L95:
 	.word	.LANCHOR0
-.LFE183:
-	.fnend
-	.size	FtlFreeSysBlkQueueOut, .-FtlFreeSysBlkQueueOut
+.LFE192:
+	.size	IsInFreeQueue, .-IsInFreeQueue
 	.align	2
 	.global	insert_data_list
 	.syntax unified
@@ -1588,183 +1265,205 @@ FtlFreeSysBlkQueueOut:
 	.fpu softvfp
 	.type	insert_data_list, %function
 insert_data_list:
-	.fnstart
-.LFB186:
-	.loc 2 217 0
-	@ args = 0, pretend = 0, frame = 8
+.LFB196:
+	.loc 2 249 0
+	@ args = 0, pretend = 0, frame = 12
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL90:
-	.movsp ip
+.LVL80:
 	mov	ip, sp
-.LCFI70:
+.LCFI66:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI71:
-	.setfp fp, ip, #-4
+.LCFI67:
 	sub	fp, ip, #4
-.LCFI72:
-	.pad #12
+.LCFI68:
 	sub	sp, sp, #12
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 217 0
-	.loc 2 225 0
-	movw	r3, #65535
-	cmp	r0, r3
-	beq	.L104
-	.loc 2 230 0
-	ldr	r2, .L116
-	mov	lr, #6
-	mul	lr, lr, r0
-	.loc 2 231 0
+	.loc 2 249 0
+	uxth	r0, r0
+	.loc 2 260 0
+	ldr	r1, .L113
+	ldrh	r3, [r1, #16]
+	mov	lr, r1
+	cmp	r3, r0
+	bls	.L99
+.LBB259:
+.LBB260:
+	.loc 2 265 0
+	ldr	r6, [r1, #2292]
+	lsl	r5, r0, #3
+	.loc 2 266 0
 	mvn	ip, #0
-	.loc 2 230 0
-	ldr	r5, [r2, #2252]
-	mov	r4, r2
-	add	r1, r5, lr
+	.loc 2 265 0
+	add	r2, r6, r5
+.LVL81:
+	.loc 2 266 0
+	strh	ip, [r2, #2]	@ movhi
+	strh	ip, [r6, r5]	@ movhi
+	.loc 2 268 0
+	ldr	r3, [r1, #2296]
+.LVL82:
+	cmp	r3, #0
+	bne	.L100
+.LVL83:
+.L112:
+	.loc 2 317 0
+	str	r2, [r1, #2296]
+	b	.L99
+.LVL84:
+.L100:
+	.loc 2 273 0
+	ldr	r7, [r1, #2300]
+	lsl	r4, r0, #1
+	.loc 2 274 0
+	ldrh	r1, [r2, #4]
+	.loc 2 279 0
+	ldr	r10, [lr, #2292]
+	.loc 2 273 0
+	ldrh	r8, [r7, r4]
+.LVL85:
+	.loc 2 275 0
+	cmp	r1, #0
+	.loc 2 276 0
+	streq	ip, [fp, #-44]
+	.loc 2 274 0
+	mulne	r1, r1, r8
+.LVL86:
+	.loc 2 282 0
+	ldrh	r8, [lr, #16]
+.LVL87:
+	str	r8, [fp, #-48]
+	.loc 2 294 0
+	ldr	r8, [lr, #2304]
+	.loc 2 274 0
+	strne	r1, [fp, #-44]
+	.loc 2 279 0
+	sub	r1, r3, r10
+.LVL88:
+	ubfx	r1, r1, #3, #16
+	.loc 2 294 0
+	add	lr, r8, r4
+	str	lr, [fp, #-52]
+	.loc 2 256 0
+	mov	lr, #0
+.LVL89:
+.L108:
+	.loc 2 282 0
+	ldr	r4, [fp, #-48]
+	.loc 2 281 0
+	add	lr, lr, #1
+.LVL90:
+	uxth	lr, lr
 .LVL91:
-	.loc 2 231 0
-	strh	ip, [r1, #2]	@ movhi
-	strh	ip, [r5, lr]	@ movhi
-	.loc 2 233 0
-	ldr	r3, [r2, #2256]
+	.loc 2 282 0
+	cmp	lr, r4
+	movls	r4, #0
+	movhi	r4, #1
+	.loc 2 285 0
+	cmp	r0, r1
+	orreq	r4, r4, #1
+	cmp	r4, #0
+	bne	.L99
+	.loc 2 288 0
+	lsl	r9, r1, #1
+	ldrh	r4, [r7, r9]
 .LVL92:
-	cmp	r3, #0
-	.loc 2 234 0
-	streq	r1, [r2, #2256]
-	.loc 2 233 0
-	beq	.L104
-	.loc 2 238 0
-	ldr	r7, [r2, #2260]
-	lsl	r9, r0, #1
-	.loc 2 239 0
-	ldrh	r2, [r1, #4]
-	.loc 2 238 0
-	ldrh	r6, [r7, r9]
+	mov	ip, r4
+	.loc 2 289 0
+	ldrh	r4, [r3, #4]
 .LVL93:
-	.loc 2 240 0
-	cmp	r2, #0
-	.loc 2 239 0
-	mulne	ip, r2, r6
+	.loc 2 290 0
+	cmp	r4, #0
+	.loc 2 289 0
+	mulne	r4, r4, ip
 .LVL94:
-	.loc 2 244 0
-	ldr	r6, [r4, #2252]
+	.loc 2 293 0
+	ldr	ip, [fp, #-44]
 .LVL95:
-	sub	r2, r3, r6
-	asr	r8, r2, #1
-	ldr	r2, .L116+4
-	mul	r2, r2, r8
-	.loc 2 252 0
-	ldr	r8, [r4, #2248]
-	add	r4, r8, r9
-	.loc 2 244 0
-	uxth	r2, r2
-	.loc 2 252 0
-	str	r4, [fp, #-48]
-.LVL96:
-.L112:
-	.loc 2 246 0
-	lsl	r9, r2, #1
-	.loc 2 247 0
-	ldrh	r4, [r3, #4]
-	.loc 2 246 0
-	ldrh	r10, [r7, r9]
-	.loc 2 248 0
-	cmp	r4, #0
-	.loc 2 249 0
+	.loc 2 291 0
 	mvneq	r4, #0
-.LVL97:
-	.loc 2 247 0
-	mulne	r4, r4, r10
-.LVL98:
-	.loc 2 251 0
+	.loc 2 293 0
 	cmp	ip, r4
-	bne	.L108
-	.loc 2 252 0
-	ldr	r4, [fp, #-48]
-.LVL99:
+	bne	.L104
+	.loc 2 294 0
+	ldr	ip, [fp, #-52]
+.LVL96:
 	ldrh	r9, [r8, r9]
-	ldrh	r4, [r4]
+	ldrh	r4, [ip]
+.LVL97:
 	cmp	r9, r4
-	bcc	.L110
+	bcc	.L106
+.LVL98:
+.L105:
+	.loc 2 312 0
+	strh	r1, [r6, r5]	@ movhi
+	.loc 2 313 0
+	ldrh	r1, [r3, #2]
+	strh	r1, [r2, #2]	@ movhi
+	.loc 2 315 0
+	ldr	r1, .L113
+	ldr	ip, [r1, #2296]
+.LVL99:
+	cmp	r3, ip
+	bne	.L109
+	.loc 2 316 0
+	strh	r0, [r3, #2]	@ movhi
+	b	.L112
 .LVL100:
-.L109:
-	.loc 2 270 0
-	strh	r2, [r5, lr]	@ movhi
-	.loc 2 273 0
-	ldr	ip, .L116
+.L104:
+	.loc 2 298 0
+	bcc	.L105
+.L106:
+	.loc 2 301 0
+	ldrh	r4, [r3]
 .LVL101:
-	.loc 2 271 0
-	ldrh	r2, [r3, #2]
-	strh	r2, [r1, #2]	@ movhi
-	.loc 2 273 0
-	ldr	r2, [ip, #2256]
-	cmp	r3, r2
-	.loc 2 277 0
-	ldrhne	lr, [r3, #2]
-	movne	r2, #6
-	ldrne	r1, [ip, #2252]
+	movw	ip, #65535
 .LVL102:
-	.loc 2 274 0
-	strheq	r0, [r3, #2]	@ movhi
+	cmp	r4, ip
+	bne	.L107
+	.loc 2 302 0
+	strh	r1, [r2, #2]	@ movhi
+	.loc 2 303 0
+	strh	r0, [r3]	@ movhi
+	.loc 2 304 0
+	ldr	r3, .L113
 .LVL103:
-	.loc 2 275 0
-	streq	r1, [ip, #2256]
-	.loc 2 277 0
-	mulne	r2, r2, lr
-	strhne	r0, [r1, r2]	@ movhi
+	str	r2, [r3, #2308]
 .LVL104:
-	.loc 2 278 0
-	strhne	r0, [r3, #2]	@ movhi
-	b	.L104
+.L99:
+.LBE260:
+.LBE259:
+	.loc 2 323 0
+	mov	r0, #0
 .LVL105:
-.L108:
-	.loc 2 256 0
-	bcc	.L109
-.L110:
-	.loc 2 259 0
-	ldrh	r4, [r3]
+	sub	sp, fp, #40
+.LCFI69:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
 .LVL106:
-	movw	r9, #65535
-	cmp	r4, r9
-	bne	.L111
-	.loc 2 260 0
-	strh	r2, [r1, #2]	@ movhi
-	.loc 2 261 0
-	strh	r0, [r3]	@ movhi
-	.loc 2 262 0
-	ldr	r3, .L116
+.L107:
+.LCFI70:
+.LBB262:
+.LBB261:
+	.loc 2 309 0
+	add	r3, r10, r4, lsl #3
+	mov	r1, r4
+	b	.L108
 .LVL107:
-	str	r1, [r3, #2264]
+.L109:
+	.loc 2 319 0
+	ldrh	r2, [r3, #2]
 .LVL108:
-.L104:
-	.loc 2 281 0
-	mov	r0, #0
-.LVL109:
-	sub	sp, fp, #40
-.LCFI73:
-	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL110:
-.L111:
-.LCFI74:
-	.loc 2 267 0
-	mov	r3, #6
-.LVL111:
-	.loc 2 246 0
-	mov	r2, r4
-	.loc 2 267 0
-	mla	r3, r3, r4, r6
-.LVL112:
-	.loc 2 246 0
-	b	.L112
-.L117:
+	ldr	r1, [r1, #2292]
+	lsl	r2, r2, #3
+	strh	r0, [r1, r2]	@ movhi
+	.loc 2 320 0
+	strh	r0, [r3, #2]	@ movhi
+	b	.L99
+.L114:
 	.align	2
-.L116:
+.L113:
 	.word	.LANCHOR0
-	.word	-1431655765
-.LFE186:
-	.fnend
+.LBE261:
+.LBE262:
+.LFE196:
 	.size	insert_data_list, .-insert_data_list
 	.align	2
 	.global	INSERT_DATA_LIST
@@ -1773,57 +1472,50 @@ insert_data_list:
 	.fpu softvfp
 	.type	INSERT_DATA_LIST, %function
 INSERT_DATA_LIST:
-	.fnstart
-.LFB185:
-	.loc 2 186 0
+.LFB195:
+	.loc 2 218 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL113:
-	.movsp ip
+.LVL109:
 	mov	ip, sp
-.LCFI75:
+.LCFI71:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI76:
-	.setfp fp, ip, #-4
+.LCFI72:
 	sub	fp, ip, #4
-.LCFI77:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 186 0
-	.loc 2 187 0
+.LCFI73:
+	.loc 2 219 0
+	uxth	r0, r0
+.LVL110:
 	bl	insert_data_list
-.LVL114:
-	.loc 2 188 0
-	ldr	r2, .L120
-	movw	r1, #2268
+.LVL111:
+	.loc 2 220 0
+	ldr	r2, .L117
+	movw	r1, #2312
 	ldrh	r3, [r2, r1]
 	add	r3, r3, #1
 	uxth	r3, r3
 	strh	r3, [r2, r1]	@ movhi
-	.loc 2 189 0
+	.loc 2 221 0
 	ldrh	r2, [r2, #16]
 	cmp	r2, r3
 	ldmfdcs	sp, {fp, sp, pc}
-.LBB258:
-.LBB259:
-	mov	r2, #189
-	ldr	r1, .L120+4
-	ldr	r0, .L120+8
+.LBB265:
+.LBB266:
+	mov	r2, #221
+	ldr	r1, .L117+4
+	ldr	r0, .L117+8
 	bl	printk
-.LVL115:
+.LVL112:
 	ldmfd	sp, {fp, sp, pc}
-.L121:
+.L118:
 	.align	2
-.L120:
+.L117:
 	.word	.LANCHOR0
 	.word	.LANCHOR1
 	.word	.LC1
-.LBE259:
-.LBE258:
-.LFE185:
-	.fnend
+.LBE266:
+.LBE265:
+.LFE195:
 	.size	INSERT_DATA_LIST, .-INSERT_DATA_LIST
 	.align	2
 	.global	insert_free_list
@@ -1832,125 +1524,111 @@ INSERT_DATA_LIST:
 	.fpu softvfp
 	.type	insert_free_list, %function
 insert_free_list:
-	.fnstart
-.LFB187:
-	.loc 2 284 0
+.LFB197:
+	.loc 2 326 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL116:
-	.movsp ip
+.LVL113:
 	mov	ip, sp
-.LCFI78:
-	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI79:
-	.setfp fp, ip, #-4
+.LCFI74:
+	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
+.LCFI75:
 	sub	fp, ip, #4
-.LCFI80:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 284 0
-	.loc 2 290 0
-	movw	r4, #65535
-	cmp	r0, r4
-	beq	.L123
-	.loc 2 293 0
-	ldr	r2, .L129
-	mov	lr, #6
-	mul	r5, lr, r0
-	.loc 2 294 0
+.LCFI76:
+	.loc 2 326 0
+	uxth	r0, r0
+	.loc 2 332 0
+	movw	lr, #65535
+	cmp	r0, lr
+	beq	.L120
+	.loc 2 335 0
+	ldr	r2, .L126
+	lsl	r5, r0, #3
+	.loc 2 336 0
 	mvn	r3, #0
-	.loc 2 293 0
-	ldr	r6, [r2, #2252]
+	.loc 2 335 0
+	ldr	r6, [r2, #2292]
 	mov	r1, r2
 	add	ip, r6, r5
-.LVL117:
-	.loc 2 294 0
+.LVL114:
+	.loc 2 336 0
 	strh	r3, [ip, #2]	@ movhi
 	strh	r3, [r6, r5]	@ movhi
-	.loc 2 296 0
-	ldr	r3, [r2, #2272]
-.LVL118:
+	.loc 2 338 0
+	ldr	r3, [r2, #2316]
+.LVL115:
 	cmp	r3, #0
-	.loc 2 297 0
-	streq	ip, [r2, #2272]
-	.loc 2 296 0
-	beq	.L123
-	.loc 2 301 0
-	ldr	r9, [r2, #2248]
+	.loc 2 339 0
+	streq	ip, [r2, #2316]
+	.loc 2 338 0
+	beq	.L120
+	.loc 2 343 0
+	ldr	r8, [r2, #2304]
 	lsl	r2, r0, #1
-	.loc 2 303 0
-	ldr	r8, [r1, #2252]
-	.loc 2 301 0
-	ldrh	r10, [r9, r2]
-.LVL119:
-	.loc 2 303 0
-	sub	r2, r3, r8
-	asr	r7, r2, #1
-	ldr	r2, .L129+4
-	mul	r2, r2, r7
-	uxth	r2, r2
-.L127:
-	.loc 2 306 0
-	lsl	r7, r2, #1
-	.loc 2 307 0
-	ldrh	r7, [r9, r7]
-	cmp	r7, r10
-	bcs	.L125
-	.loc 2 310 0
-	ldrh	r7, [r3]
-	cmp	r7, r4
-	bne	.L126
-	.loc 2 311 0
+	.loc 2 345 0
+	ldr	r7, [r1, #2292]
+	.loc 2 352 0
+	mov	r4, lr
+	.loc 2 343 0
+	ldrh	r9, [r8, r2]
+.LVL116:
+	.loc 2 345 0
+	sub	r2, r3, r7
+	ubfx	r2, r2, #3, #16
+.L124:
+	.loc 2 348 0
+	lsl	lr, r2, #1
+	.loc 2 349 0
+	ldrh	lr, [r8, lr]
+	cmp	lr, r9
+	bcs	.L122
+	.loc 2 352 0
+	ldrh	lr, [r3]
+	cmp	lr, r4
+	bne	.L123
+	.loc 2 353 0
 	strh	r2, [ip, #2]	@ movhi
-	.loc 2 312 0
+	.loc 2 354 0
 	strh	r0, [r3]	@ movhi
-.L123:
-	.loc 2 330 0
+.L120:
+	.loc 2 372 0
 	mov	r0, #0
-.LVL120:
-	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL121:
-.L126:
-	.loc 2 316 0
-	mla	r3, lr, r7, r8
-	.loc 2 306 0
-	mov	r2, r7
-	b	.L127
-.L125:
-	.loc 2 319 0
+.LVL117:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
+.LVL118:
+.L123:
+	.loc 2 358 0
+	add	r3, r7, lr, lsl #3
+	.loc 2 348 0
+	mov	r2, lr
+	b	.L124
+.L122:
+	.loc 2 361 0
 	ldrh	lr, [r3, #2]
 	strh	lr, [ip, #2]	@ movhi
-	.loc 2 320 0
+	.loc 2 362 0
 	strh	r2, [r6, r5]	@ movhi
-	.loc 2 322 0
-	ldr	r2, [r1, #2272]
+	.loc 2 364 0
+	ldr	r2, [r1, #2316]
 	cmp	r3, r2
-	.loc 2 326 0
-	ldrhne	ip, [r3, #2]
-.LVL122:
-	movne	r2, #6
-	ldrne	r1, [r1, #2252]
-	.loc 2 323 0
+	.loc 2 368 0
+	ldrhne	r2, [r3, #2]
+	ldrne	r1, [r1, #2292]
+	.loc 2 365 0
 	strheq	r0, [r3, #2]	@ movhi
-.LVL123:
-	.loc 2 324 0
-	streq	ip, [r1, #2272]
-	.loc 2 326 0
-	mulne	r2, r2, ip
-.LVL124:
+	.loc 2 366 0
+	streq	ip, [r1, #2316]
+	.loc 2 368 0
+	lslne	r2, r2, #3
 	strhne	r0, [r1, r2]	@ movhi
-	.loc 2 327 0
+	.loc 2 369 0
 	strhne	r0, [r3, #2]	@ movhi
-	b	.L123
-.L130:
+	b	.L120
+.L127:
 	.align	2
-.L129:
+.L126:
 	.word	.LANCHOR0
-	.word	-1431655765
-.LFE187:
-	.fnend
+.LFE197:
 	.size	insert_free_list, .-insert_free_list
 	.align	2
 	.global	INSERT_FREE_LIST
@@ -1959,57 +1637,54 @@ insert_free_list:
 	.fpu softvfp
 	.type	INSERT_FREE_LIST, %function
 INSERT_FREE_LIST:
-	.fnstart
-.LFB184:
-	.loc 2 179 0
+.LFB194:
+	.loc 2 211 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL125:
-	.movsp ip
+.LVL119:
 	mov	ip, sp
-.LCFI81:
+.LCFI77:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI82:
-	.setfp fp, ip, #-4
+.LCFI78:
 	sub	fp, ip, #4
-.LCFI83:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 179 0
-	.loc 2 180 0
+.LCFI79:
+	.loc 2 212 0
+	uxth	r0, r0
+.LVL120:
 	bl	insert_free_list
-.LVL126:
-	.loc 2 181 0
-	ldr	r2, .L133
-	movw	r1, #2276
-	ldrh	r3, [r2, r1]
+.LVL121:
+	.loc 2 213 0
+	ldr	r2, .L130
+	add	r1, r2, #2320
+	.loc 2 214 0
+	ldrh	r2, [r2, #16]
+	.loc 2 213 0
+	ldrh	r3, [r1]
 	add	r3, r3, #1
 	uxth	r3, r3
-	strh	r3, [r2, r1]	@ movhi
-	.loc 2 182 0
-	ldrh	r2, [r2, #16]
+	.loc 2 214 0
 	cmp	r2, r3
+	.loc 2 213 0
+	strh	r3, [r1]	@ movhi
+	.loc 2 214 0
 	ldmfdcs	sp, {fp, sp, pc}
-.LBB262:
-.LBB263:
-	mov	r2, #182
-	ldr	r1, .L133+4
-	ldr	r0, .L133+8
+.LBB269:
+.LBB270:
+	mov	r2, #214
+	ldr	r1, .L130+4
+	ldr	r0, .L130+8
 	bl	printk
-.LVL127:
+.LVL122:
 	ldmfd	sp, {fp, sp, pc}
-.L134:
+.L131:
 	.align	2
-.L133:
+.L130:
 	.word	.LANCHOR0
 	.word	.LANCHOR1+17
 	.word	.LC1
-.LBE263:
-.LBE262:
-.LFE184:
-	.fnend
+.LBE270:
+.LBE269:
+.LFE194:
 	.size	INSERT_FREE_LIST, .-INSERT_FREE_LIST
 	.align	2
 	.global	List_remove_node
@@ -2018,121 +1693,116 @@ INSERT_FREE_LIST:
 	.fpu softvfp
 	.type	List_remove_node, %function
 List_remove_node:
-	.fnstart
-.LFB188:
-	.loc 2 333 0
+.LFB198:
+	.loc 2 375 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL128:
-	.movsp ip
+.LVL123:
 	mov	ip, sp
-.LCFI84:
-	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
-.LCFI85:
-	.setfp fp, ip, #-4
+.LCFI80:
+	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
+.LCFI81:
 	sub	fp, ip, #4
-.LCFI86:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 333 0
-	.loc 2 336 0
-	mov	r5, #6
-	.loc 2 337 0
+.LCFI82:
+	.loc 2 378 0
+	ldr	r4, .L139
+	.loc 2 375 0
+	uxth	r1, r1
+	.loc 2 379 0
 	movw	r3, #65535
-	.loc 2 336 0
-	ldr	r7, .L142
-	mul	r5, r5, r1
-	.loc 2 333 0
+	.loc 2 375 0
 	mov	r8, r0
-	.loc 2 336 0
-	ldr	r6, [r7, #2252]
-	add	r4, r6, r5
-.LVL129:
-	.loc 2 337 0
-	ldrh	r2, [r4, #2]
+	.loc 2 378 0
+	ldr	r7, [r4, #2292]
+	lsl	r6, r1, #3
+	add	r5, r7, r6
+.LVL124:
+	.loc 2 379 0
+	ldrh	r2, [r5, #2]
 	cmp	r2, r3
-	bne	.L136
-	.loc 2 337 0 is_stmt 0 discriminator 1
+	bne	.L133
+	.loc 2 379 0 is_stmt 0 discriminator 1
 	ldr	r3, [r0]
-	cmp	r4, r3
-	beq	.L136
-	.loc 2 337 0 discriminator 2
-	movw	r2, #337
-	ldr	r1, .L142+4
-.LVL130:
-	ldr	r0, .L142+8
+	cmp	r5, r3
+	beq	.L133
+	.loc 2 379 0 discriminator 2
+	movw	r2, #379
+	ldr	r1, .L139+4
+.LVL125:
+	ldr	r0, .L139+8
 	bl	printk
-.LVL131:
-.L136:
-	.loc 2 339 0 is_stmt 1
+.LVL126:
+.L133:
+	.loc 2 381 0 is_stmt 1
 	ldr	r3, [r8]
-	movw	r2, #65535
-	cmp	r4, r3
-	ldrh	r3, [r6, r5]
-	bne	.L137
-	.loc 2 340 0
-	cmp	r3, r2
-	.loc 2 343 0
-	ldrne	r2, [r7, #2252]
-	movne	r1, #6
-.LVL132:
-	.loc 2 341 0
+	ldrh	r2, [r7, r6]
+	cmp	r5, r3
+	movw	r3, #65535
+	bne	.L134
+	.loc 2 382 0
+	cmp	r2, r3
+	.loc 2 385 0
+	ldrne	r3, [r4, #2292]
+	.loc 2 383 0
 	moveq	r3, #0
 	streq	r3, [r8]
-	.loc 2 343 0
-	mlane	r3, r1, r3, r2
-	.loc 2 344 0
-	mvnne	r2, #0
-	.loc 2 343 0
-	strne	r3, [r8]
-	.loc 2 344 0
-	strhne	r2, [r3, #2]	@ movhi
-.L139:
-	.loc 2 355 0
+	.loc 2 385 0
+	addne	r2, r3, r2, lsl #3
+	.loc 2 386 0
+	mvnne	r3, #0
+	.loc 2 385 0
+	strne	r2, [r8]
+	.loc 2 386 0
+	strhne	r3, [r2, #2]	@ movhi
+.L136:
+	.loc 2 399 0
 	mvn	r3, #0
-	.loc 2 357 0
+	.loc 2 401 0
 	mov	r0, #0
-	.loc 2 355 0
-	strh	r3, [r6, r5]	@ movhi
-	strh	r3, [r4, #2]	@ movhi
-	.loc 2 357 0
-	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
-.LVL133:
-.L137:
-	.loc 2 346 0
+	.loc 2 399 0
+	strh	r3, [r7, r6]	@ movhi
+	strh	r3, [r5, #2]	@ movhi
+	.loc 2 401 0
+	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
+.L134:
+	.loc 2 388 0
+	cmp	r2, r3
+	ldrh	r3, [r5, #2]
+	bne	.L137
+	.loc 2 389 0
 	cmp	r3, r2
-	mov	r2, #6
-	.loc 2 351 0
-	ldrne	r0, [r7, #2252]
-	ldrh	r1, [r4, #2]
-.LVL134:
-	.loc 2 348 0
-	ldreq	r3, [r7, #2252]
-	.loc 2 351 0
-	mlane	r3, r2, r3, r0
-	.loc 2 348 0
-	muleq	r2, r2, r1
-	mvneq	r1, #0
-	.loc 2 351 0
-	strhne	r1, [r3, #2]	@ movhi
-	.loc 2 352 0
-	ldrhne	r0, [r4, #2]
-	.loc 2 353 0
-	ldrhne	r1, [r6, r5]
-	ldrne	r3, [r7, #2252]
-	mulne	r2, r2, r0
-	strh	r1, [r3, r2]	@ movhi
-	b	.L139
-.L143:
+	.loc 2 391 0
+	ldrne	r2, [r4, #2292]
+	lslne	r3, r3, #3
+	mvnne	r1, #0
+.LVL127:
+	.loc 2 389 0
+	beq	.L136
+.L138:
+	.loc 2 397 0
+	strh	r1, [r2, r3]	@ movhi
+	b	.L136
+.LVL128:
+.L137:
+	.loc 2 395 0
+	ldr	r1, [r4, #2292]
+.LVL129:
+	add	r2, r1, r2, lsl #3
+	strh	r3, [r2, #2]	@ movhi
+	.loc 2 396 0
+	ldrh	r3, [r5, #2]
+	.loc 2 397 0
+	ldrh	r1, [r7, r6]
+	ldr	r2, [r4, #2292]
+	lsl	r3, r3, #3
+	b	.L138
+.L140:
 	.align	2
-.L142:
+.L139:
 	.word	.LANCHOR0
 	.word	.LANCHOR1+34
 	.word	.LC1
-.LFE188:
-	.fnend
+.LFE198:
 	.size	List_remove_node, .-List_remove_node
 	.align	2
 	.global	List_pop_index_node
@@ -2141,84 +1811,73 @@ List_remove_node:
 	.fpu softvfp
 	.type	List_pop_index_node, %function
 List_pop_index_node:
-	.fnstart
-.LFB189:
-	.loc 2 360 0
+.LFB199:
+	.loc 2 404 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL135:
-	.movsp ip
+.LVL130:
 	mov	ip, sp
-.LCFI87:
-	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI88:
-	.setfp fp, ip, #-4
+.LCFI83:
+	push	{r4, fp, ip, lr, pc}
+.LCFI84:
 	sub	fp, ip, #4
-.LCFI89:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 360 0
-	.loc 2 364 0
+.LCFI85:
+	.loc 2 408 0
 	ldr	r3, [r0]
-.LVL136:
+.LVL131:
+	.loc 2 404 0
+	uxth	r1, r1
+	.loc 2 408 0
 	cmp	r3, #0
-	beq	.L150
-	.loc 2 369 0
-	ldr	r2, .L151
-	.loc 2 368 0
-	movw	lr, #65535
-	.loc 2 369 0
-	mov	r4, #6
-	ldr	r2, [r2, #2252]
-.L146:
-	.loc 2 368 0
+	.loc 2 409 0
+	movweq	r4, #65535
+	.loc 2 408 0
+	beq	.L141
+	.loc 2 413 0
+	ldr	r2, .L148
+	.loc 2 412 0
+	movw	ip, #65535
+	.loc 2 413 0
+	ldr	r4, [r2, #2292]
+.L143:
+	.loc 2 412 0
 	cmp	r1, #0
-	bne	.L147
-.L149:
-	.loc 2 372 0
-	ldr	r4, .L151+4
-	sub	r3, r3, r2
-.LVL137:
-	asr	r3, r3, #1
-	mul	r4, r4, r3
-	.loc 2 373 0
-	uxth	r1, r4
-.LVL138:
+	bne	.L144
+.L146:
+	.loc 2 416 0
+	sub	r3, r3, r4
+.LVL132:
+	ubfx	r4, r3, #3, #16
+	.loc 2 417 0
+	mov	r1, r4
+.LVL133:
 	bl	List_remove_node
-.LVL139:
-	uxth	r0, r4
-	.loc 2 375 0
-	ldmfd	sp, {r4, r5, fp, sp, pc}
-.LVL140:
-.L147:
-	.loc 2 368 0 discriminator 1
-	ldrh	ip, [r3]
-	cmp	ip, lr
-	beq	.L149
-	.loc 2 370 0
+.LVL134:
+.L141:
+	.loc 2 420 0
+	mov	r0, r4
+.LVL135:
+	ldmfd	sp, {r4, fp, sp, pc}
+.LVL136:
+.L144:
+	.loc 2 412 0 discriminator 1
+	ldrh	r2, [r3]
+	cmp	r2, ip
+	beq	.L146
+	.loc 2 414 0
 	sub	r1, r1, #1
-.LVL141:
-	.loc 2 369 0
-	mla	r3, r4, ip, r2
-	.loc 2 370 0
+.LVL137:
+	.loc 2 413 0
+	add	r3, r4, r2, lsl #3
+	.loc 2 414 0
 	uxth	r1, r1
-.LVL142:
-	b	.L146
-.L150:
-	.loc 2 365 0
-	movw	r0, #65535
-.LVL143:
-	.loc 2 376 0
-	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L152:
+.LVL138:
+	b	.L143
+.L149:
 	.align	2
-.L151:
+.L148:
 	.word	.LANCHOR0
-	.word	-1431655765
-.LFE189:
-	.fnend
+.LFE199:
 	.size	List_pop_index_node, .-List_pop_index_node
 	.align	2
 	.global	List_pop_head_node
@@ -2227,33 +1886,24 @@ List_pop_index_node:
 	.fpu softvfp
 	.type	List_pop_head_node, %function
 List_pop_head_node:
-	.fnstart
-.LFB190:
-	.loc 2 379 0
+.LFB200:
+	.loc 2 423 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL144:
-	.movsp ip
+.LVL139:
 	mov	ip, sp
-.LCFI90:
+.LCFI86:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI91:
-	.setfp fp, ip, #-4
+.LCFI87:
 	sub	fp, ip, #4
-.LCFI92:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 379 0
-	.loc 2 380 0
+.LCFI88:
+	.loc 2 424 0
 	mov	r1, #0
 	bl	List_pop_index_node
-.LVL145:
-	.loc 2 381 0
+.LVL140:
+	.loc 2 425 0
 	ldmfd	sp, {fp, sp, pc}
-.LFE190:
-	.fnend
+.LFE200:
 	.size	List_pop_head_node, .-List_pop_head_node
 	.align	2
 	.global	List_get_gc_head_node
@@ -2262,82 +1912,69 @@ List_pop_head_node:
 	.fpu softvfp
 	.type	List_get_gc_head_node, %function
 List_get_gc_head_node:
-	.fnstart
-.LFB191:
-	.loc 2 384 0
+.LFB201:
+	.loc 2 428 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL146:
-	.movsp ip
+.LVL141:
 	mov	ip, sp
-.LCFI93:
+.LCFI89:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI94:
-	.setfp fp, ip, #-4
+.LCFI90:
 	sub	fp, ip, #4
-.LCFI95:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 384 0
-	.loc 2 388 0
-	ldr	r2, .L160
-	ldr	r3, [r2, #2256]
-.LVL147:
+.LCFI91:
+	.loc 2 432 0
+	ldr	r1, .L157
+	.loc 2 428 0
+	uxth	r2, r0
+.LVL142:
+	.loc 2 432 0
+	ldr	r3, [r1, #2296]
+.LVL143:
 	cmp	r3, #0
-	.loc 2 393 0
-	ldrne	r1, [r2, #2252]
-	movne	ip, #6
-	.loc 2 392 0
-	movwne	r2, #65535
-	.loc 2 388 0
-	bne	.L156
-.L159:
-	.loc 2 389 0
+	.loc 2 437 0
+	ldrne	r1, [r1, #2292]
+	.loc 2 436 0
+	movwne	r0, #65535
+	.loc 2 432 0
+	bne	.L153
+	.loc 2 433 0
 	movw	r0, #65535
+	ldmfd	sp, {fp, sp, pc}
+.LVL144:
+.L155:
+	.loc 2 438 0
+	sub	r2, r2, #1
+.LVL145:
+	.loc 2 437 0
+	add	r3, r1, r3, lsl #3
+.LVL146:
+	.loc 2 438 0
+	uxth	r2, r2
+.LVL147:
+.L153:
+	.loc 2 436 0
+	cmp	r2, #0
+	beq	.L154
+	.loc 2 436 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r3]
 .LVL148:
+	cmp	r3, r0
+	bne	.L155
 	ldmfd	sp, {fp, sp, pc}
 .LVL149:
-.L158:
-	.loc 2 394 0
-	sub	r0, r0, #1
+.L154:
+	.loc 2 442 0 is_stmt 1
+	sub	r3, r3, r1
 .LVL150:
-	.loc 2 393 0
-	mla	r3, ip, r3, r1
-.LVL151:
-	.loc 2 394 0
-	uxth	r0, r0
-.LVL152:
-.L156:
-	.loc 2 392 0
-	cmp	r0, #0
-	beq	.L157
-	.loc 2 392 0 is_stmt 0 discriminator 1
-	ldrh	r3, [r3]
-.LVL153:
-	cmp	r3, r2
-	bne	.L158
-	b	.L159
-.LVL154:
-.L157:
-	.loc 2 398 0 is_stmt 1
-	ldr	r0, .L160+4
-.LVL155:
-	sub	r3, r3, r1
-.LVL156:
-	asr	r3, r3, #1
-	mul	r3, r0, r3
-	uxth	r0, r3
-	.loc 2 401 0
+	ubfx	r0, r3, #3, #16
+	.loc 2 445 0
 	ldmfd	sp, {fp, sp, pc}
-.L161:
+.L158:
 	.align	2
-.L160:
+.L157:
 	.word	.LANCHOR0
-	.word	-1431655765
-.LFE191:
-	.fnend
+.LFE201:
 	.size	List_get_gc_head_node, .-List_get_gc_head_node
 	.align	2
 	.global	List_update_data_list
@@ -2346,341 +1983,230 @@ List_get_gc_head_node:
 	.fpu softvfp
 	.type	List_update_data_list, %function
 List_update_data_list:
-	.fnstart
-.LFB192:
-	.loc 2 404 0
+.LFB202:
+	.loc 2 448 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL157:
-	.movsp ip
+.LVL151:
 	mov	ip, sp
-.LCFI96:
-	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI97:
-	.setfp fp, ip, #-4
+.LCFI92:
+	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
+.LCFI93:
 	sub	fp, ip, #4
-.LCFI98:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 404 0
-	.loc 2 413 0
-	movw	r3, #2280
-	.loc 2 404 0
-	mov	r5, r0
-	.loc 2 413 0
-	ldr	r4, .L170
+.LCFI94:
+	.loc 2 457 0
+	ldr	r4, .L172
+	movw	r3, #2324
+	.loc 2 448 0
+	uxth	r5, r0
+.LVL152:
+	.loc 2 457 0
 	ldrh	r3, [r4, r3]
-	cmp	r3, r0
-	beq	.L164
-	.loc 2 413 0 is_stmt 0 discriminator 1
-	movw	r3, #2328
+	cmp	r3, r5
+	beq	.L161
+	.loc 2 457 0 is_stmt 0 discriminator 1
+	movw	r3, #2372
 	ldrh	r3, [r4, r3]
-	cmp	r3, r0
-	beq	.L164
-	.loc 2 413 0 discriminator 2
-	movw	r3, #2376
+	cmp	r3, r5
+	beq	.L161
+	.loc 2 457 0 discriminator 2
+	movw	r3, #2420
 	ldrh	r3, [r4, r3]
-	cmp	r3, r0
-	beq	.L164
-.LBB266:
-.LBB267:
-	.loc 2 416 0 is_stmt 1
-	mov	r3, #6
-	ldr	r1, [r4, #2252]
-	mul	r3, r3, r0
-	.loc 2 418 0
-	ldr	r2, [r4, #2256]
-	.loc 2 416 0
-	add	r7, r1, r3
-.LVL158:
-	.loc 2 418 0
-	cmp	r7, r2
-	beq	.L164
-	.loc 2 421 0
-	ldr	r0, [r4, #2260]
-	lsl	r2, r5, #1
-	.loc 2 422 0
-	ldrh	r6, [r0, r2]
-	.loc 2 426 0
-	movw	r0, #65535
-	.loc 2 422 0
-	ldrh	r2, [r7, #4]
-	.loc 2 424 0
-	muls	r6, r2, r6
-.LVL159:
-	.loc 2 426 0
-	ldrh	r2, [r7, #2]
-	.loc 2 424 0
+	cmp	r3, r5
+	beq	.L161
+.LBB273:
+.LBB274:
+	.loc 2 460 0 is_stmt 1
+	ldr	r8, [r4, #2292]
+	.loc 2 462 0
+	ldr	r3, [r4, #2296]
+	.loc 2 460 0
+	add	r7, r8, r5, lsl #3
+.LVL153:
+	.loc 2 462 0
+	cmp	r7, r3
+	beq	.L161
+	.loc 2 465 0
+	ldr	r2, [r4, #2300]
+	lsl	r3, r5, #1
+	.loc 2 466 0
+	ldrh	r6, [r7, #4]
+	.loc 2 465 0
+	ldrh	r3, [r2, r3]
+.LVL154:
+	.loc 2 467 0
+	cmp	r6, #0
+	.loc 2 468 0
 	mvneq	r6, #0
-	.loc 2 426 0
-	cmp	r2, r0
-	bne	.L167
-	ldrh	r3, [r1, r3]
-	cmp	r3, r2
-	bne	.L167
-	movw	r2, #426
-	ldr	r1, .L170+4
-	ldr	r0, .L170+8
+.LVL155:
+	.loc 2 466 0
+	mulne	r6, r6, r3
+.LVL156:
+	.loc 2 470 0
+	ldr	r3, [r8, r5, lsl #3]
+.LVL157:
+	cmn	r3, #1
+	bne	.L164
+	movw	r2, #470
+	ldr	r1, .L172+4
+	ldr	r0, .L172+8
 	bl	printk
-.LVL160:
-.L167:
-	.loc 2 427 0
-	ldrh	r3, [r7, #2]
-	mov	r2, #6
-	mul	r2, r2, r3
-	.loc 2 428 0
-	ldr	r3, .L170+12
-	asr	r1, r2, #1
-	mul	r3, r3, r1
-	.loc 2 429 0
-	ldr	r1, [r4, #2260]
-	lsl	r3, r3, #1
-	.loc 2 430 0
-	ldrh	r3, [r1, r3]
-	ldr	r1, [r4, #2252]
+.LVL158:
+.L164:
+	.loc 2 471 0
+	ldr	r3, [r8, r5, lsl #3]
+	cmn	r3, #1
+	beq	.L161
+	.loc 2 473 0
+	ldrh	r2, [r7, #2]
+	.loc 2 475 0
+	ldr	r1, [r4, #2300]
+	.loc 2 473 0
+	lsl	r2, r2, #3
+	.loc 2 475 0
+	lsr	r3, r2, #2
+	ldrh	r0, [r1, r3]
+.LVL159:
+	.loc 2 476 0
+	ldr	r1, [r4, #2292]
 	add	r2, r1, r2
-	ldrh	r2, [r2, #4]
-	.loc 2 432 0
-	muls	r3, r2, r3
-.LVL161:
+	ldrh	r3, [r2, #4]
+	.loc 2 477 0
+	cmp	r3, #0
+	.loc 2 476 0
+	mulne	r3, r3, r0
+.LVL160:
+	.loc 2 478 0
 	mvneq	r3, #0
-	.loc 2 434 0
+	.loc 2 480 0
 	cmp	r6, r3
-	bcs	.L164
-	.loc 2 435 0
+	bcs	.L161
+	.loc 2 481 0
 	mov	r1, r5
-	ldr	r0, .L170+16
+	ldr	r0, .L172+12
+.LVL161:
 	bl	List_remove_node
 .LVL162:
-	movw	r3, #2268
+	movw	r3, #2312
 	ldrh	r3, [r4, r3]
 	cmp	r3, #0
-	bne	.L169
-	movw	r2, #435
-	ldr	r1, .L170+4
-	ldr	r0, .L170+8
+	bne	.L166
+	movw	r2, #481
+	ldr	r1, .L172+4
+	ldr	r0, .L172+8
 	bl	printk
 .LVL163:
-.L169:
-	movw	r2, #2268
-	.loc 2 436 0
+.L166:
+	movw	r2, #2312
+	.loc 2 482 0
 	mov	r0, r5
-	.loc 2 435 0
+	.loc 2 481 0
 	ldrh	r3, [r4, r2]
 	sub	r3, r3, #1
 	strh	r3, [r4, r2]	@ movhi
-	.loc 2 436 0
+	.loc 2 482 0
 	bl	INSERT_DATA_LIST
 .LVL164:
-.L164:
-.LBE267:
-.LBE266:
-	.loc 2 439 0
+.L161:
+.LBE274:
+.LBE273:
+	.loc 2 485 0
 	mov	r0, #0
-	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L171:
+.LVL165:
+	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
+.L173:
 	.align	2
-.L170:
+.L172:
 	.word	.LANCHOR0
 	.word	.LANCHOR1+51
 	.word	.LC1
-	.word	-1431655765
-	.word	.LANCHOR0+2256
-.LFE192:
-	.fnend
+	.word	.LANCHOR0+2296
+.LFE202:
 	.size	List_update_data_list, .-List_update_data_list
 	.align	2
-	.global	ftl_map_blk_alloc_new_blk
-	.syntax unified
-	.arm
-	.fpu softvfp
-	.type	ftl_map_blk_alloc_new_blk, %function
-ftl_map_blk_alloc_new_blk:
-	.fnstart
-.LFB195:
-	.loc 2 516 0
-	@ args = 0, pretend = 0, frame = 0
-	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL165:
-	.movsp ip
-	mov	ip, sp
-.LCFI99:
-	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI100:
-	.setfp fp, ip, #-4
-	sub	fp, ip, #4
-.LCFI101:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 516 0
-	.loc 2 520 0
-	mov	r3, #0
-	.loc 2 516 0
-	mov	r4, r0
-	.loc 2 520 0
-	ldrh	r1, [r0, #10]
-	ldr	r2, [r0, #12]
-.LVL166:
-.L173:
-	uxth	r5, r3
-	.loc 2 520 0 is_stmt 0 discriminator 1
-	cmp	r5, r1
-	bcc	.L175
-.L176:
-.LBB270:
-.LBB271:
-	.loc 2 532 0 is_stmt 1
-	mov	r2, #532
-	ldr	r1, .L182
-	ldr	r0, .L182+4
-	bl	printk
-.LVL167:
-	b	.L177
-.L175:
-.LBE271:
-.LBE270:
-	.loc 2 521 0
-	mov	r7, r2
-	add	r3, r3, #1
-	ldrh	r6, [r7]
-	add	r2, r2, #2
-	cmp	r6, #0
-	bne	.L173
-	.loc 2 522 0
-	bl	FtlFreeSysBlkQueueOut
-.LVL168:
-	.loc 2 523 0
-	cmp	r0, #0
-	.loc 2 522 0
-	strh	r0, [r7]	@ movhi
-	.loc 2 523 0
-	beq	.L174
-	.loc 2 526 0
-	ldr	r3, [r4, #28]
-	.loc 2 524 0
-	strh	r6, [r4, #2]	@ movhi
-	.loc 2 525 0
-	strh	r5, [r4]	@ movhi
-	.loc 2 526 0
-	add	r3, r3, #1
-	str	r3, [r4, #28]
-	.loc 2 527 0
-	ldrh	r3, [r4, #8]
-	add	r3, r3, #1
-	strh	r3, [r4, #8]	@ movhi
-.L174:
-	.loc 2 532 0
-	ldrh	r3, [r4, #10]
-	cmp	r3, r5
-	bls	.L176
-.L177:
-	.loc 2 534 0
-	mov	r0, #0
-	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L183:
-	.align	2
-.L182:
-	.word	.LANCHOR1+73
-	.word	.LC1
-.LFE195:
-	.fnend
-	.size	ftl_map_blk_alloc_new_blk, .-ftl_map_blk_alloc_new_blk
-	.align	2
 	.global	select_l2p_ram_region
 	.syntax unified
 	.arm
 	.fpu softvfp
 	.type	select_l2p_ram_region, %function
 select_l2p_ram_region:
-	.fnstart
-.LFB200:
-	.loc 2 700 0
+.LFB210:
+	.loc 2 749 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI102:
+.LCFI95:
 	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI103:
-	.setfp fp, ip, #-4
+.LCFI96:
 	sub	fp, ip, #4
-.LCFI104:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 700 0
-	.loc 2 705 0
+.LCFI97:
+	.loc 2 754 0
+	ldr	r0, .L184
 	mov	r1, #0
-	.loc 2 706 0
+	.loc 2 755 0
 	movw	ip, #65535
-	.loc 2 705 0
-	ldr	r0, .L194
+	.loc 2 754 0
 	ldrh	r2, [r0, #114]
 	mov	lr, r0
-	.loc 2 706 0
-	ldr	r3, [r0, #2424]
+	.loc 2 755 0
+	ldr	r3, [r0, #2468]
 	mov	r0, #12
-.L185:
+.L175:
 	uxth	r4, r1
-	.loc 2 705 0 discriminator 1
+	.loc 2 754 0 discriminator 1
 	cmp	r4, r2
-	bcc	.L187
+	bcc	.L177
 	mov	r4, r2
 	mov	r1, #0
 	mov	r0, #-2147483648
-	.loc 2 716 0
+	.loc 2 765 0
 	mov	r6, #12
-.L188:
+.L178:
 	uxth	r5, r1
-	.loc 2 715 0 discriminator 1
+	.loc 2 764 0 discriminator 1
 	cmp	r5, r2
-	bcc	.L190
-	.loc 2 724 0
+	bcc	.L180
+	.loc 2 773 0
 	cmp	r4, r2
-	bcc	.L186
-	.loc 2 730 0
-	movw	r1, #2428
+	bcc	.L176
+	.loc 2 779 0
+	movw	r1, #2472
 	mov	r4, r2
 	ldrh	r5, [lr, r1]
 	mvn	r0, #0
 	mov	r1, #0
-.L191:
+.L181:
 	uxth	ip, r1
-	.loc 2 729 0 discriminator 1
+	.loc 2 778 0 discriminator 1
 	cmp	ip, r2
-	bcc	.L193
-	.loc 2 735 0
+	bcc	.L183
+	.loc 2 784 0
 	cmp	r4, r2
-	bcc	.L186
-	.loc 2 735 0 is_stmt 0 discriminator 1
-	movw	r2, #735
-	ldr	r1, .L194+4
-	ldr	r0, .L194+8
+	bcc	.L176
+	.loc 2 784 0 is_stmt 0 discriminator 1
+	mov	r2, #784
+	ldr	r1, .L184+4
+	ldr	r0, .L184+8
 	bl	printk
-.LVL169:
-	b	.L186
-.L187:
+.LVL166:
+	b	.L176
+.L177:
 	add	r1, r1, #1
-	.loc 2 706 0 is_stmt 1
+	.loc 2 755 0 is_stmt 1
 	mla	r5, r0, r1, r3
 	ldrh	r5, [r5, #-12]
 	cmp	r5, ip
-	bne	.L185
-.L186:
-	.loc 2 737 0
+	bne	.L175
+.L176:
+	.loc 2 786 0
 	mov	r0, r4
 	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L190:
-	.loc 2 716 0
+.L180:
+	.loc 2 765 0
 	mla	ip, r6, r1, r3
 	add	r1, r1, #1
 	ldr	ip, [ip, #4]
-	.loc 2 717 0
+	.loc 2 766 0
 	cmp	r0, ip
 	movls	r7, #0
 	movhi	r7, #1
@@ -2689,29 +2215,28 @@ select_l2p_ram_region:
 	cmp	r7, #0
 	movne	r0, ip
 	movne	r4, r5
-	b	.L188
-.L193:
-	.loc 2 730 0
+	b	.L178
+.L183:
+	.loc 2 779 0
 	ldr	lr, [r3, #4]
 	cmp	r0, lr
-	bls	.L192
-	.loc 2 730 0 is_stmt 0 discriminator 1
+	bls	.L182
+	.loc 2 779 0 is_stmt 0 discriminator 1
 	ldrh	r6, [r3]
 	cmp	r6, r5
 	movne	r0, lr
 	movne	r4, ip
-.L192:
+.L182:
 	add	r1, r1, #1
 	add	r3, r3, #12
-	b	.L191
-.L195:
+	b	.L181
+.L185:
 	.align	2
-.L194:
+.L184:
 	.word	.LANCHOR0
-	.word	.LANCHOR1+99
+	.word	.LANCHOR1+73
 	.word	.LC1
-.LFE200:
-	.fnend
+.LFE210:
 	.size	select_l2p_ram_region, .-select_l2p_ram_region
 	.align	2
 	.global	FtlUpdateVaildLpn
@@ -2720,79 +2245,70 @@ select_l2p_ram_region:
 	.fpu softvfp
 	.type	FtlUpdateVaildLpn, %function
 FtlUpdateVaildLpn:
-	.fnstart
-.LFB206:
-	.loc 2 882 0 is_stmt 1
+.LFB216:
+	.loc 2 931 0 is_stmt 1
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL170:
-	.movsp ip
+.LVL167:
 	mov	ip, sp
-.LCFI105:
+.LCFI98:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI106:
-	.setfp fp, ip, #-4
+.LCFI99:
 	sub	fp, ip, #4
-.LCFI107:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 882 0
-	.loc 2 885 0
-	movw	r1, #2430
-	ldr	ip, .L202
+.LCFI100:
+	.loc 2 934 0
+	ldr	ip, .L192
+	movw	r1, #2474
 	ldrh	r2, [ip, r1]
 	mov	r3, ip
 	cmp	r2, #4
 	cmpls	r0, #0
-	bne	.L197
+	bne	.L187
 	add	r2, r2, #1
 	strh	r2, [ip, r1]	@ movhi
-	.loc 2 894 0
+	.loc 2 943 0
 	ldmfd	sp, {fp, sp, pc}
-.L197:
-	.loc 2 886 0
+.L187:
+	.loc 2 935 0
 	mov	r2, #0
-.LBB274:
-.LBB275:
-	.loc 2 890 0
+.LBB277:
+.LBB278:
+	.loc 2 939 0
 	movw	lr, #65535
-.LBE275:
-.LBE274:
-	.loc 2 886 0
+.LBE278:
+.LBE277:
+	.loc 2 935 0
 	strh	r2, [ip, r1]	@ movhi
-	.loc 2 887 0
-	str	r2, [ip, #2432]
+	.loc 2 936 0
+	str	r2, [ip, #2476]
 	ldrh	r1, [ip, #16]
-.LBB277:
-.LBB276:
-	.loc 2 890 0
-	ldr	r2, [ip, #2260]
+.LBB280:
+.LBB279:
+	.loc 2 939 0
+	ldr	r2, [ip, #2300]
 	add	r1, r2, r1, lsl #1
-.L198:
-	.loc 2 888 0
+.L188:
+	.loc 2 937 0
 	cmp	r2, r1
-	bne	.L200
+	bne	.L190
 	ldmfd	sp, {fp, sp, pc}
-.L200:
-	.loc 2 890 0
+.L190:
+	.loc 2 939 0
 	ldrh	ip, [r2], #2
 	cmp	ip, lr
-	.loc 2 891 0
-	ldrne	r0, [r3, #2432]
-.LVL171:
+	.loc 2 940 0
+	ldrne	r0, [r3, #2476]
+.LVL168:
 	addne	r0, r0, ip
-	strne	r0, [r3, #2432]
-	b	.L198
-.L203:
+	strne	r0, [r3, #2476]
+	b	.L188
+.L193:
 	.align	2
-.L202:
+.L192:
 	.word	.LANCHOR0
-.LBE276:
-.LBE277:
-.LFE206:
-	.fnend
+.LBE279:
+.LBE280:
+.LFE216:
 	.size	FtlUpdateVaildLpn, .-FtlUpdateVaildLpn
 	.align	2
 	.global	ftl_set_blk_mode
@@ -2801,54 +2317,45 @@ FtlUpdateVaildLpn:
 	.fpu softvfp
 	.type	ftl_set_blk_mode, %function
 ftl_set_blk_mode:
-	.fnstart
-.LFB212:
-	.loc 2 1347 0
+.LFB222:
+	.loc 2 1396 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL172:
-	.movsp ip
+.LVL169:
 	mov	ip, sp
-.LCFI108:
+.LCFI101:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI109:
-	.setfp fp, ip, #-4
+.LCFI102:
 	sub	fp, ip, #4
-.LCFI110:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 1347 0
-	.loc 2 1348 0
+.LCFI103:
+	.loc 2 1397 0
 	cmp	r1, #0
-	.loc 2 1347 0
-	mov	r3, r0
-	.loc 2 1348 0
-	beq	.L205
+	.loc 2 1396 0
+	uxth	r0, r0
+	.loc 2 1397 0
+	beq	.L195
 	bl	ftl_set_blk_mode.part.6
-.LVL173:
+.LVL170:
 	ldmfd	sp, {fp, sp, pc}
-.LVL174:
-.L205:
-	.loc 2 1351 0
-	ldr	r2, .L207
-	lsr	r0, r0, #5
-	and	r3, r3, #31
-.LVL175:
+.LVL171:
+.L195:
+	.loc 2 1400 0
+	ldr	r3, .L197
+	lsr	r1, r0, #5
+.LVL172:
 	mov	ip, #1
-	ldr	r1, [r2]
-.LVL176:
-	ldr	r2, [r1, r0, lsl #2]
-	bic	r3, r2, ip, lsl r3
-	str	r3, [r1, r0, lsl #2]
+	and	r0, r0, #31
+.LVL173:
+	ldr	r2, [r3]
+	ldr	r3, [r2, r1, lsl #2]
+	bic	r0, r3, ip, lsl r0
+	str	r0, [r2, r1, lsl #2]
 	ldmfd	sp, {fp, sp, pc}
-.L208:
+.L198:
 	.align	2
-.L207:
+.L197:
 	.word	.LANCHOR0
-.LFE212:
-	.fnend
+.LFE222:
 	.size	ftl_set_blk_mode, .-ftl_set_blk_mode
 	.align	2
 	.global	ftl_get_blk_mode
@@ -2857,42 +2364,36 @@ ftl_set_blk_mode:
 	.fpu softvfp
 	.type	ftl_get_blk_mode, %function
 ftl_get_blk_mode:
-	.fnstart
-.LFB213:
-	.loc 2 1355 0
+.LFB223:
+	.loc 2 1404 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL177:
-	.movsp ip
+.LVL174:
 	mov	ip, sp
-.LCFI111:
+.LCFI104:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI112:
-	.setfp fp, ip, #-4
+.LCFI105:
 	sub	fp, ip, #4
-.LCFI113:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 1355 0
-	.loc 2 1356 0
+.LCFI106:
+	.loc 2 1405 0
+	ldr	r3, .L200
+	.loc 2 1404 0
+	uxth	r0, r0
+	.loc 2 1405 0
+	ldr	r3, [r3]
 	lsr	r2, r0, #5
 	and	r0, r0, #31
-.LVL178:
-	ldr	r3, .L210
-	ldr	r3, [r3]
+.LVL175:
 	ldr	r3, [r3, r2, lsl #2]
 	lsr	r0, r3, r0
-	.loc 2 1357 0
+	.loc 2 1406 0
 	and	r0, r0, #1
 	ldmfd	sp, {fp, sp, pc}
-.L211:
+.L201:
 	.align	2
-.L210:
+.L200:
 	.word	.LANCHOR0
-.LFE213:
-	.fnend
+.LFE223:
 	.size	ftl_get_blk_mode, .-ftl_get_blk_mode
 	.align	2
 	.global	ftl_sb_update_avl_pages
@@ -2901,90 +2402,86 @@ ftl_get_blk_mode:
 	.fpu softvfp
 	.type	ftl_sb_update_avl_pages, %function
 ftl_sb_update_avl_pages:
-	.fnstart
-.LFB219:
-	.loc 2 1608 0
+.LFB229:
+	.loc 2 1657 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL179:
-	.movsp ip
+.LVL176:
 	mov	ip, sp
-.LCFI114:
+.LCFI107:
 	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI115:
-	.setfp fp, ip, #-4
+.LCFI108:
 	sub	fp, ip, #4
-.LCFI116:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 1608 0
-	.loc 2 1610 0
+.LCFI109:
+	.loc 2 1659 0
 	mov	r3, #0
-	add	ip, r0, r2, lsl #1
+	.loc 2 1657 0
+	uxth	r2, r2
+	uxth	r5, r1
+.LVL177:
+	.loc 2 1659 0
 	strh	r3, [r0, #4]	@ movhi
-	.loc 2 1613 0
-	movw	r5, #65535
-	.loc 2 1611 0
-	ldr	r3, .L219
+	.loc 2 1660 0
+	ldr	r3, .L209
+	add	ip, r0, r2, lsl #1
+	.loc 2 1662 0
+	movw	r1, #65535
 	add	ip, ip, #14
+	.loc 2 1660 0
 	ldrh	lr, [r3, #8]
-.L213:
-	.loc 2 1611 0 is_stmt 0 discriminator 1
+.L203:
+	.loc 2 1660 0 is_stmt 0 discriminator 1
 	cmp	r2, lr
-	bcc	.L215
-	ldrh	r3, [r3, #78]
+	bcc	.L205
+	ldrh	r1, [r3, #78]
 	add	ip, r0, #16
-	.loc 2 1620 0 is_stmt 1
-	movw	r4, #65535
-	sub	r3, r3, #1
-	sub	r1, r3, r1
-.LVL180:
-	.loc 2 1622 0
+	.loc 2 1671 0 is_stmt 1
 	mov	r3, #0
+	.loc 2 1669 0
+	movw	r4, #65535
+	sub	r1, r1, #1
+	sub	r1, r1, r5
 	uxth	r1, r1
-.L216:
-	.loc 2 1618 0 discriminator 1
+.L206:
+	.loc 2 1667 0 discriminator 1
 	uxth	r2, r3
-.LVL181:
+.LVL178:
 	cmp	lr, r2
-	bhi	.L218
-	.loc 2 1625 0
+	bhi	.L208
+	.loc 2 1674 0
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.LVL182:
-.L215:
-	.loc 2 1613 0
+.LVL179:
+.L205:
+	.loc 2 1662 0
 	ldrh	r4, [ip, #2]!
-	.loc 2 1611 0
+	.loc 2 1660 0
 	add	r2, r2, #1
-.LVL183:
+.LVL180:
 	uxth	r2, r2
-.LVL184:
-	.loc 2 1613 0
-	cmp	r4, r5
-	.loc 2 1615 0
+.LVL181:
+	.loc 2 1662 0
+	cmp	r4, r1
+	.loc 2 1664 0
 	ldrhne	r4, [r0, #4]
 	addne	r4, r4, #1
 	strhne	r4, [r0, #4]	@ movhi
-	b	.L213
-.LVL185:
-.L218:
-	.loc 2 1620 0
+	b	.L203
+.LVL182:
+.L208:
+	.loc 2 1669 0
 	ldrh	r2, [ip], #2
 	add	r3, r3, #1
 	cmp	r2, r4
-	.loc 2 1622 0
+	.loc 2 1671 0
 	ldrhne	r2, [r0, #4]
 	addne	r2, r1, r2
 	strhne	r2, [r0, #4]	@ movhi
-	b	.L216
-.L220:
+	b	.L206
+.L210:
 	.align	2
-.L219:
+.L209:
 	.word	.LANCHOR0
-.LFE219:
-	.fnend
+.LFE229:
 	.size	ftl_sb_update_avl_pages, .-ftl_sb_update_avl_pages
 	.align	2
 	.global	FtlSlcSuperblockCheck
@@ -2993,82 +2490,73 @@ ftl_sb_update_avl_pages:
 	.fpu softvfp
 	.type	FtlSlcSuperblockCheck, %function
 FtlSlcSuperblockCheck:
-	.fnstart
-.LFB222:
-	.loc 2 2013 0
+.LFB232:
+	.loc 2 2062 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL186:
-	.movsp ip
+.LVL183:
 	mov	ip, sp
-.LCFI117:
+.LCFI110:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI118:
-	.setfp fp, ip, #-4
+.LCFI111:
 	sub	fp, ip, #4
-.LCFI119:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2013 0
-	.loc 2 2016 0
+.LCFI112:
+	.loc 2 2065 0
 	ldrh	r3, [r0, #4]
 	cmp	r3, #0
 	ldmfdeq	sp, {fp, sp, pc}
-	.loc 2 2018 0
+	.loc 2 2067 0
 	ldrh	r2, [r0]
 	movw	r3, #65535
 	cmp	r2, r3
 	ldmfdeq	sp, {fp, sp, pc}
-.LBB280:
-.LBB281:
-	.loc 2 2020 0
+.LBB283:
+.LBB284:
+	.loc 2 2069 0
 	ldrb	r2, [r0, #6]	@ zero_extendqisi2
-	.loc 2 2025 0
+	.loc 2 2074 0
 	mov	lr, #0
-	.loc 2 2020 0
+	.loc 2 2069 0
 	add	r2, r0, r2, lsl #1
 	ldrh	r1, [r2, #16]
-.LVL187:
-	.loc 2 2023 0
-	ldr	r2, .L227
+.LVL184:
+	.loc 2 2072 0
+	ldr	r2, .L217
 	ldrh	ip, [r2, #8]
-	.loc 2 2021 0
+	.loc 2 2070 0
 	mov	r2, r3
-.L224:
+.L214:
 	cmp	r1, r2
-	beq	.L226
+	beq	.L216
 	ldmfd	sp, {fp, sp, pc}
-.L226:
-	.loc 2 2022 0
+.L216:
+	.loc 2 2071 0
 	ldrb	r3, [r0, #6]	@ zero_extendqisi2
 	add	r3, r3, #1
 	uxtb	r3, r3
-	.loc 2 2023 0
+	.loc 2 2072 0
 	cmp	r3, ip
-	.loc 2 2022 0
+	.loc 2 2071 0
 	strb	r3, [r0, #6]
-	.loc 2 2024 0
+	.loc 2 2073 0
 	ldrheq	r3, [r0, #2]
-	.loc 2 2025 0
+	.loc 2 2074 0
 	strbeq	lr, [r0, #6]
-	.loc 2 2024 0
+	.loc 2 2073 0
 	addeq	r3, r3, #1
 	strheq	r3, [r0, #2]	@ movhi
-	.loc 2 2027 0
+	.loc 2 2076 0
 	ldrb	r3, [r0, #6]	@ zero_extendqisi2
 	add	r3, r0, r3, lsl #1
 	ldrh	r1, [r3, #16]
-	b	.L224
-.L228:
+	b	.L214
+.L218:
 	.align	2
-.L227:
+.L217:
 	.word	.LANCHOR0
-.LBE281:
-.LBE280:
-.LFE222:
-	.fnend
+.LBE284:
+.LBE283:
+.LFE232:
 	.size	FtlSlcSuperblockCheck, .-FtlSlcSuperblockCheck
 	.align	2
 	.global	make_superblock
@@ -3077,110 +2565,95 @@ FtlSlcSuperblockCheck:
 	.fpu softvfp
 	.type	make_superblock, %function
 make_superblock:
-	.fnstart
-.LFB224:
-	.loc 2 2045 0
-	@ args = 0, pretend = 0, frame = 8
+.LFB234:
+	.loc 2 2094 0
+	@ args = 0, pretend = 0, frame = 4
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL188:
-	.movsp ip
+.LVL185:
 	mov	ip, sp
-.LCFI120:
+.LCFI113:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI121:
-	.setfp fp, ip, #-4
+.LCFI114:
 	sub	fp, ip, #4
-.LCFI122:
-	.pad #12
-	sub	sp, sp, #12
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2045 0
-	.loc 2 2048 0
-	ldr	r6, .L234
-	.loc 2 2045 0
+.LCFI115:
+	sub	sp, sp, #4
+	.loc 2 2094 0
 	mov	r4, r0
-	.loc 2 2048 0
+	.loc 2 2097 0
+	ldr	r6, .L224
 	ldrh	r2, [r0]
 	ldrh	r3, [r6, #16]
 	cmp	r2, r3
-	bcc	.L230
-	.loc 2 2048 0 is_stmt 0 discriminator 1
-	mov	r2, #2048
-	ldr	r1, .L234+4
-	ldr	r0, .L234+8
+	bcc	.L220
+	.loc 2 2097 0 is_stmt 0 discriminator 1
+	movw	r2, #2097
+	ldr	r1, .L224+4
+	ldr	r0, .L224+8
 	bl	printk
-.LVL189:
-.L230:
-	.loc 2 2051 0 is_stmt 1
+.LVL186:
+.L220:
+	.loc 2 2100 0 is_stmt 1
 	ldrh	r9, [r6, #8]
 	add	r7, r4, #16
-	.loc 2 2052 0
-	ldr	r10, .L234+12
-	.loc 2 2053 0
+	.loc 2 2101 0
+	ldr	r10, .L224+12
+	.loc 2 2102 0
 	mvn	r8, #0
-	.loc 2 2049 0
+	.loc 2 2098 0
 	mov	r5, #0
 	strh	r5, [r4, #4]	@ movhi
-	.loc 2 2050 0
+	.loc 2 2099 0
 	strb	r5, [r4, #7]
-.L231:
-	.loc 2 2051 0 discriminator 1
+.L221:
+	.loc 2 2100 0 discriminator 1
 	uxth	r3, r5
 	cmp	r9, r3
-	bhi	.L233
-	.loc 2 2061 0
+	bhi	.L223
+	.loc 2 2110 0
 	ldrb	r3, [r4, #7]	@ zero_extendqisi2
-	.loc 2 2064 0
+	.loc 2 2113 0
 	mov	r0, #0
-	.loc 2 2061 0
+	.loc 2 2110 0
 	ldrh	r2, [r6, #78]
 	smulbb	r3, r3, r2
 	strh	r3, [r4, #4]	@ movhi
-	.loc 2 2062 0
+	.loc 2 2111 0
 	mov	r3, #1
 	strb	r3, [r4, #9]
-	.loc 2 2064 0
-	sub	sp, fp, #40
-.LCFI123:
-	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL190:
-.L233:
-.LCFI124:
-	.loc 2 2052 0
+	.loc 2 2113 0
+	ldmib	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.L223:
+	.loc 2 2101 0
 	ldrb	r0, [r10, r5]	@ zero_extendqisi2
 	add	r7, r7, #2
 	ldrh	r1, [r4]
 	add	r5, r5, #1
 	bl	V2P_block
-.LVL191:
-	.loc 2 2053 0
+.LVL187:
+	.loc 2 2102 0
 	strh	r8, [r7, #-2]	@ movhi
-	.loc 2 2052 0
-	str	r0, [fp, #-48]
-	.loc 2 2054 0
+	.loc 2 2101 0
+	str	r0, [fp, #-44]
+	.loc 2 2103 0
 	bl	FtlBbmIsBadBlock
-.LVL192:
+.LVL188:
 	cmp	r0, #0
-	.loc 2 2055 0
-	ldreq	r3, [fp, #-48]
+	.loc 2 2104 0
+	ldreq	r3, [fp, #-44]
 	strheq	r3, [r7, #-2]	@ movhi
-	.loc 2 2056 0
+	.loc 2 2105 0
 	ldrbeq	r3, [r4, #7]	@ zero_extendqisi2
 	addeq	r3, r3, #1
 	strbeq	r3, [r4, #7]
-	b	.L231
-.L235:
+	b	.L221
+.L225:
 	.align	2
-.L234:
+.L224:
 	.word	.LANCHOR0
-	.word	.LANCHOR1+121
+	.word	.LANCHOR1+95
 	.word	.LC1
 	.word	.LANCHOR0+36
-.LFE224:
-	.fnend
+.LFE234:
 	.size	make_superblock, .-make_superblock
 	.align	2
 	.global	update_multiplier_value
@@ -3189,85 +2662,74 @@ make_superblock:
 	.fpu softvfp
 	.type	update_multiplier_value, %function
 update_multiplier_value:
-	.fnstart
-.LFB233:
-	.loc 2 2401 0
+.LFB243:
+	.loc 2 2451 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL193:
-	.movsp ip
+.LVL189:
 	mov	ip, sp
-.LCFI125:
-	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI126:
-	.setfp fp, ip, #-4
+.LCFI116:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+.LCFI117:
 	sub	fp, ip, #4
-.LCFI127:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2401 0
-	.loc 2 2405 0
+.LCFI118:
+	.loc 2 2455 0
+	ldr	r3, .L232
 	mov	r5, #0
-	.loc 2 2401 0
-	mov	r7, r0
-	.loc 2 2405 0
-	ldr	r3, .L242
-	.loc 2 2403 0
+	.loc 2 2451 0
+	uxth	r6, r0
+.LVL190:
+	.loc 2 2453 0
 	mov	r4, r5
-	.loc 2 2405 0
+	.loc 2 2455 0
 	ldrh	r8, [r3, #8]
-	mov	r6, r3
-	.loc 2 2408 0
+	mov	r7, r3
+	.loc 2 2458 0
 	ldrh	r9, [r3, #78]
-	.loc 2 2406 0
+	.loc 2 2456 0
 	add	r10, r3, #36
-.L237:
-	.loc 2 2405 0 discriminator 1
+.L227:
+	.loc 2 2455 0 discriminator 1
 	uxth	r3, r5
 	cmp	r8, r3
-	bhi	.L239
-	.loc 2 2410 0
+	bhi	.L229
+	.loc 2 2460 0
 	cmp	r4, #0
 	moveq	r0, r4
-	beq	.L240
-	.loc 2 2411 0
+	beq	.L230
+	.loc 2 2461 0
 	mov	r1, r4
 	mov	r0, #32768
-	bl	__aeabi_idiv
-.LVL194:
-.L240:
-	.loc 2 2412 0
-	ldr	r1, [r6, #2252]
-	mov	r3, #6
-	mla	r1, r3, r7, r1
+	bl	__divsi3
+.LVL191:
+.L230:
+	.loc 2 2462 0
+	ldr	r1, [r7, #2292]
+	add	r1, r1, r6, lsl #3
 	strh	r0, [r1, #4]	@ movhi
-	.loc 2 2414 0
+	.loc 2 2464 0
 	mov	r0, #0
-	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL195:
-.L239:
-	.loc 2 2406 0
-	mov	r1, r7
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.L229:
+	.loc 2 2456 0
+	mov	r1, r6
 	ldrb	r0, [r10, r5]	@ zero_extendqisi2
 	bl	V2P_block
-.LVL196:
-	.loc 2 2407 0
+.LVL192:
+	.loc 2 2457 0
 	bl	FtlBbmIsBadBlock
-.LVL197:
+.LVL193:
 	cmp	r0, #0
 	add	r5, r5, #1
-	.loc 2 2408 0
+	.loc 2 2458 0
 	addeq	r4, r4, r9
 	uxtheq	r4, r4
-	b	.L237
-.L243:
+	b	.L227
+.L233:
 	.align	2
-.L242:
+.L232:
 	.word	.LANCHOR0
-.LFE233:
-	.fnend
+.LFE243:
 	.size	update_multiplier_value, .-update_multiplier_value
 	.align	2
 	.global	GetFreeBlockMinEraseCount
@@ -3276,48 +2738,34 @@ update_multiplier_value:
 	.fpu softvfp
 	.type	GetFreeBlockMinEraseCount, %function
 GetFreeBlockMinEraseCount:
-	.fnstart
-.LFB234:
-	.loc 2 2417 0
+.LFB244:
+	.loc 2 2467 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI128:
+.LCFI119:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI129:
-	.setfp fp, ip, #-4
+.LCFI120:
 	sub	fp, ip, #4
-.LCFI130:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2417 0
-	.loc 2 2420 0
-	ldr	r2, .L247
-	ldr	r0, [r2, #2272]
+.LCFI121:
+	.loc 2 2470 0
+	ldr	r3, .L237
+	ldr	r0, [r3, #2316]
 	cmp	r0, #0
-	ldmfdeq	sp, {fp, sp, pc}
-	.loc 2 2421 0
-	ldr	r3, [r2, #2252]
-	sub	r0, r0, r3
-	ldr	r3, .L247+4
-	asr	r0, r0, #1
-	mul	r0, r3, r0
-	ldr	r3, [r2, #2248]
-	uxth	r0, r0
-	lsl	r0, r0, #1
-	ldrh	r0, [r3, r0]
-	.loc 2 2423 0
+	.loc 2 2471 0
+	ldrne	r2, [r3, #2292]
+	ldrne	r3, [r3, #2304]
+	subne	r0, r0, r2
+	ubfxne	r0, r0, #3, #16
+	lslne	r0, r0, #1
+	ldrhne	r0, [r3, r0]
+	.loc 2 2473 0
 	ldmfd	sp, {fp, sp, pc}
-.L248:
+.L238:
 	.align	2
-.L247:
+.L237:
 	.word	.LANCHOR0
-	.word	-1431655765
-.LFE234:
-	.fnend
+.LFE244:
 	.size	GetFreeBlockMinEraseCount, .-GetFreeBlockMinEraseCount
 	.align	2
 	.global	GetFreeBlockMaxEraseCount
@@ -3326,90 +2774,70 @@ GetFreeBlockMinEraseCount:
 	.fpu softvfp
 	.type	GetFreeBlockMaxEraseCount, %function
 GetFreeBlockMaxEraseCount:
-	.fnstart
-.LFB235:
-	.loc 2 2426 0
+.LFB245:
+	.loc 2 2476 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL198:
-	.movsp ip
+.LVL194:
 	mov	ip, sp
-.LCFI131:
+.LCFI122:
 	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI132:
-	.setfp fp, ip, #-4
+.LCFI123:
 	sub	fp, ip, #4
-.LCFI133:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2426 0
-	.loc 2 2431 0
-	ldr	r1, .L257
-	ldr	r3, [r1, #2272]
-	cmp	r3, #0
-	beq	.L255
-	.loc 2 2432 0
-	movw	r2, #2276
-	.loc 2 2434 0
-	ldr	ip, [r1, #2252]
-	.loc 2 2432 0
-	ldrh	r2, [r1, r2]
-	.loc 2 2436 0
-	mov	r4, #6
+.LCFI124:
+	.loc 2 2481 0
+	ldr	r2, .L247
+	.loc 2 2476 0
+	uxth	r4, r0
+.LVL195:
+	.loc 2 2481 0
+	ldr	r0, [r2, #2316]
+	cmp	r0, #0
+	ldmfdeq	sp, {r4, r5, fp, sp, pc}
+	.loc 2 2482 0
+	add	r3, r2, #2320
+	.loc 2 2484 0
+	ldr	ip, [r2, #2292]
+	.loc 2 2482 0
+	ldrh	r3, [r3]
+	.loc 2 2485 0
+	mov	r1, #0
+	.loc 2 2486 0
 	movw	r5, #65535
-	.loc 2 2434 0
-	sub	r3, r3, ip
-	asr	r3, r3, #1
-	.loc 2 2432 0
-	rsb	r2, r2, r2, lsl #3
-	asr	r2, r2, #3
-	cmp	r0, r2
-	.loc 2 2433 0
-	uxthgt	r0, r2
-	.loc 2 2434 0
-	ldr	r2, .L257+4
-	mul	r3, r2, r3
-	.loc 2 2435 0
-	mov	r2, #0
-	.loc 2 2434 0
-	uxth	r3, r3
-.L252:
-	.loc 2 2435 0 discriminator 1
-	uxth	lr, r2
-	cmp	r0, lr
-	bls	.L254
-	.loc 2 2436 0
-	mul	lr, r4, r3
-	add	r2, r2, #1
-	ldrh	lr, [ip, lr]
+	.loc 2 2482 0
+	rsb	r3, r3, r3, lsl #3
+	asr	r3, r3, #3
+	cmp	r4, r3
+	.loc 2 2483 0
+	uxthgt	r4, r3
+	.loc 2 2484 0
+	sub	r3, r0, ip
+	ubfx	r3, r3, #3, #16
+.L242:
+	.loc 2 2485 0 discriminator 1
+	uxth	r0, r1
+	cmp	r4, r0
+	bls	.L244
+	.loc 2 2486 0
+	lsl	r0, r3, #3
+	add	r1, r1, #1
+	ldrh	lr, [ip, r0]
 	cmp	lr, r5
-	bne	.L256
-.L254:
-	.loc 2 2440 0
-	ldr	r2, [r1, #2248]
+	bne	.L246
+.L244:
+	.loc 2 2490 0
+	ldr	r2, [r2, #2304]
 	lsl	r3, r3, #1
 	ldrh	r0, [r2, r3]
-.LVL199:
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.LVL200:
-.L256:
+.L246:
 	mov	r3, lr
-	b	.L252
-.L255:
-	.loc 2 2427 0
-	mov	r0, r3
-.LVL201:
-	.loc 2 2443 0
-	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L258:
+	b	.L242
+.L248:
 	.align	2
-.L257:
+.L247:
 	.word	.LANCHOR0
-	.word	-1431655765
-.LFE235:
-	.fnend
+.LFE245:
 	.size	GetFreeBlockMaxEraseCount, .-GetFreeBlockMaxEraseCount
 	.align	2
 	.global	FtlPrintInfo2buf
@@ -3418,687 +2846,668 @@ GetFreeBlockMaxEraseCount:
 	.fpu softvfp
 	.type	FtlPrintInfo2buf, %function
 FtlPrintInfo2buf:
-	.fnstart
-.LFB140:
+.LFB150:
 	.loc 3 11 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL202:
-	.movsp ip
+.LVL196:
 	mov	ip, sp
-.LCFI134:
+.LCFI125:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI135:
-	.setfp fp, ip, #-4
+.LCFI126:
 	sub	fp, ip, #4
-.LCFI136:
-	.pad #20
-	sub	sp, sp, #20
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 11 0
-	.loc 3 17 0
-	ldr	r6, .L271
+.LCFI127:
+	sub	sp, sp, #12
 	.loc 3 11 0
 	mov	r7, r0
+	.loc 3 16 0
+	ldr	r6, .L261
 	.loc 3 15 0
-	ldr	r1, .L271+4
 	add	r5, r7, #12
+	ldr	r1, .L261+4
+	.loc 3 49 0
+	movw	r4, #2324
+	.loc 3 15 0
 	bl	strcpy
-.LVL203:
-	.loc 3 17 0
+.LVL197:
+	.loc 3 16 0
 	ldr	r2, [r6, #92]
 	mov	r0, r5
-	ldr	r1, .L271+8
-	.loc 3 32 0
-	movw	r9, #2276
-	.loc 3 17 0
+	ldr	r1, .L261+8
+	.loc 3 31 0
+	add	r9, r6, #2320
+	.loc 3 16 0
 	bl	sprintf
-.LVL204:
+.LVL198:
 	add	r5, r5, r0
-	.loc 3 18 0
-	ldr	r1, .L271+12
+	.loc 3 17 0
+	ldr	r1, .L261+12
 	mov	r0, r5
 	add	r5, r5, #10
 	bl	strcpy
-.LVL205:
+.LVL199:
+	.loc 3 18 0
+	ldr	r2, [r6, #2480]
+	mov	r0, r5
+	ldr	r1, .L261+16
+	.loc 3 66 0
+	movw	r8, #2564
+	.loc 3 18 0
+	bl	sprintf
+.LVL200:
+	add	r5, r5, r0
 	.loc 3 19 0
-	ldr	r2, [r6, #2436]
+	ldr	r2, [r6, #2476]
+	ldr	r1, .L261+20
 	mov	r0, r5
-	ldr	r1, .L271+16
 	bl	sprintf
-.LVL206:
+.LVL201:
 	add	r5, r5, r0
 	.loc 3 20 0
-	ldr	r2, [r6, #2432]
-	ldr	r1, .L271+20
+	ldr	r2, [r6, #2484]
+	ldr	r1, .L261+24
 	mov	r0, r5
 	bl	sprintf
-.LVL207:
+.LVL202:
 	add	r5, r5, r0
 	.loc 3 21 0
-	ldr	r2, [r6, #2440]
-	ldr	r1, .L271+24
+	ldr	r2, [r6, #2488]
+	ldr	r1, .L261+28
 	mov	r0, r5
 	bl	sprintf
-.LVL208:
+.LVL203:
 	add	r5, r5, r0
 	.loc 3 22 0
-	ldr	r2, [r6, #2444]
-	ldr	r1, .L271+28
+	ldr	r2, [r6, #2492]
+	ldr	r1, .L261+32
 	mov	r0, r5
 	bl	sprintf
-.LVL209:
+.LVL204:
 	add	r5, r5, r0
 	.loc 3 23 0
-	ldr	r2, [r6, #2448]
-	ldr	r1, .L271+32
+	ldr	r2, [r6, #2496]
+	ldr	r1, .L261+36
 	mov	r0, r5
 	bl	sprintf
-.LVL210:
+.LVL205:
 	add	r5, r5, r0
 	.loc 3 24 0
-	ldr	r2, [r6, #2452]
-	ldr	r1, .L271+36
+	ldr	r2, [r6, #2500]
+	ldr	r1, .L261+40
 	mov	r0, r5
 	bl	sprintf
-.LVL211:
+.LVL206:
 	add	r5, r5, r0
 	.loc 3 25 0
-	ldr	r2, [r6, #2456]
-	ldr	r1, .L271+40
+	ldr	r2, [r6, #2504]
+	ldr	r1, .L261+44
 	mov	r0, r5
 	bl	sprintf
-.LVL212:
+.LVL207:
+	.loc 3 26 0
+	ldr	r2, [r6, #2508]
+	.loc 3 25 0
 	add	r5, r5, r0
 	.loc 3 26 0
-	ldr	r2, [r6, #2460]
-	ldr	r1, .L271+44
+	ldr	r1, .L261+48
 	mov	r0, r5
+	lsr	r2, r2, #11
 	bl	sprintf
-.LVL213:
+.LVL208:
 	.loc 3 27 0
-	ldr	r2, [r6, #2464]
+	ldr	r2, [r6, #2512]
 	.loc 3 26 0
 	add	r5, r5, r0
 	.loc 3 27 0
-	ldr	r1, .L271+48
+	ldr	r1, .L261+52
 	mov	r0, r5
-	.loc 3 39 0
-	ldr	r4, .L271+52
-	.loc 3 50 0
-	ldr	r8, .L271+56
-	.loc 3 27 0
 	lsr	r2, r2, #11
 	bl	sprintf
-.LVL214:
-	.loc 3 28 0
-	ldr	r2, [r6, #2468]
-	.loc 3 27 0
+.LVL209:
 	add	r5, r5, r0
 	.loc 3 28 0
-	ldr	r1, .L271+60
+	ldr	r2, [r6, #2516]
+	ldr	r1, .L261+56
 	mov	r0, r5
-	lsr	r2, r2, #11
 	bl	sprintf
-.LVL215:
+.LVL210:
 	add	r5, r5, r0
 	.loc 3 29 0
-	ldr	r2, [r6, #2472]
-	ldr	r1, .L271+64
+	ldr	r2, [r6, #2520]
+	ldr	r1, .L261+60
 	mov	r0, r5
 	bl	sprintf
-.LVL216:
+.LVL211:
 	add	r5, r5, r0
 	.loc 3 30 0
-	ldr	r2, [r6, #2476]
-	ldr	r1, .L271+68
+	ldrh	r2, [r6, #134]
+	ldr	r1, .L261+64
 	mov	r0, r5
 	bl	sprintf
-.LVL217:
+.LVL212:
 	add	r5, r5, r0
 	.loc 3 31 0
-	ldrh	r2, [r6, #134]
-	ldr	r1, .L271+72
+	ldrh	r2, [r9]
+	ldr	r1, .L261+68
 	mov	r0, r5
 	bl	sprintf
-.LVL218:
+.LVL213:
 	add	r5, r5, r0
 	.loc 3 32 0
-	ldrh	r2, [r6, r9]
-	ldr	r1, .L271+76
+	ldr	r2, [r6, #2524]
+	ldr	r1, .L261+72
 	mov	r0, r5
 	bl	sprintf
-.LVL219:
+.LVL214:
 	add	r5, r5, r0
 	.loc 3 33 0
-	ldr	r2, [r6, #2480]
-	ldr	r1, .L271+80
+	ldr	r2, [r6, #2528]
+	ldr	r1, .L261+76
 	mov	r0, r5
 	bl	sprintf
-.LVL220:
+.LVL215:
 	add	r5, r5, r0
 	.loc 3 34 0
-	ldr	r2, [r6, #2484]
-	ldr	r1, .L271+84
+	ldr	r2, [r6, #2532]
+	ldr	r1, .L261+80
 	mov	r0, r5
 	bl	sprintf
-.LVL221:
+.LVL216:
 	add	r5, r5, r0
 	.loc 3 35 0
-	ldr	r2, [r6, #2488]
-	ldr	r1, .L271+88
+	ldr	r2, [r6, #2536]
+	ldr	r1, .L261+84
 	mov	r0, r5
 	bl	sprintf
-.LVL222:
+.LVL217:
 	add	r5, r5, r0
 	.loc 3 36 0
-	ldr	r2, [r6, #2492]
-	ldr	r1, .L271+92
+	ldr	r2, [r6, #2540]
+	ldr	r1, .L261+88
 	mov	r0, r5
 	bl	sprintf
-.LVL223:
+.LVL218:
 	add	r5, r5, r0
 	.loc 3 37 0
-	ldr	r2, [r6, #2496]
-	ldr	r1, .L271+96
+	ldr	r2, [r6, #2544]
+	ldr	r1, .L261+92
 	mov	r0, r5
 	bl	sprintf
-.LVL224:
+.LVL219:
 	add	r5, r5, r0
 	.loc 3 38 0
-	ldr	r2, [r6, #2500]
-	ldr	r1, .L271+100
+	ldrh	r2, [r9, #-46]
+	ldr	r1, .L261+96
 	mov	r0, r5
 	bl	sprintf
-.LVL225:
+.LVL220:
 	add	r5, r5, r0
 	.loc 3 39 0
-	ldrh	r2, [r4, #30]
-	ldr	r1, .L271+104
+	ldrh	r2, [r9, #-48]
+	ldr	r1, .L261+100
 	mov	r0, r5
 	bl	sprintf
-.LVL226:
+.LVL221:
 	add	r5, r5, r0
 	.loc 3 40 0
-	ldrh	r2, [r4, #28]
-	ldr	r1, .L271+108
+	ldr	r2, [r6, #116]
+	ldr	r1, .L261+104
 	mov	r0, r5
 	bl	sprintf
-.LVL227:
+.LVL222:
 	add	r5, r5, r0
 	.loc 3 41 0
-	ldr	r2, [r6, #116]
-	ldr	r1, .L271+112
+	ldr	r2, [r6, #108]
+	ldr	r1, .L261+108
 	mov	r0, r5
 	bl	sprintf
-.LVL228:
+.LVL223:
 	add	r5, r5, r0
 	.loc 3 42 0
-	ldr	r2, [r6, #108]
-	ldr	r1, .L271+116
+	ldr	r2, [r6, #4]
+	ldr	r1, .L261+112
 	mov	r0, r5
 	bl	sprintf
-.LVL229:
+.LVL224:
 	add	r5, r5, r0
 	.loc 3 43 0
-	ldr	r2, [r6, #4]
-	ldr	r1, .L271+120
+	ldrh	r2, [r6, #194]
+	ldr	r1, .L261+116
 	mov	r0, r5
 	bl	sprintf
-.LVL230:
+.LVL225:
 	add	r5, r5, r0
 	.loc 3 44 0
-	ldrh	r2, [r6, #194]
-	ldr	r1, .L271+124
+	ldrh	r2, [r6, #16]
+	ldr	r1, .L261+120
 	mov	r0, r5
 	bl	sprintf
-.LVL231:
+.LVL226:
+	.loc 3 45 0
+	movw	r3, #2548
+	.loc 3 44 0
 	add	r5, r5, r0
 	.loc 3 45 0
-	ldrh	r2, [r6, #16]
-	ldr	r1, .L271+128
+	ldrh	r2, [r6, r3]
 	mov	r0, r5
+	ldr	r1, .L261+124
 	bl	sprintf
-.LVL232:
-	.loc 3 46 0
-	movw	r3, #2552
-	.loc 3 45 0
+.LVL227:
 	add	r5, r5, r0
 	.loc 3 46 0
-	ldrh	r2, [r6, r3]
+	ldr	r2, [r6, #20]
+	ldr	r1, .L261+128
 	mov	r0, r5
-	ldr	r1, .L271+132
-	.loc 3 50 0
-	movw	r4, #2280
-	.loc 3 46 0
 	bl	sprintf
-.LVL233:
+.LVL228:
+	.loc 3 47 0
+	movw	r3, #2552
+	.loc 3 46 0
 	add	r5, r5, r0
 	.loc 3 47 0
-	ldr	r2, [r6, #20]
-	ldr	r1, .L271+136
+	ldrh	r2, [r6, r3]
 	mov	r0, r5
+	ldr	r1, .L261+132
 	bl	sprintf
-.LVL234:
-	.loc 3 48 0
-	movw	r3, #2556
-	.loc 3 47 0
+.LVL229:
 	add	r5, r5, r0
 	.loc 3 48 0
-	ldrh	r2, [r6, r3]
+	ldrh	r2, [r6, #128]
+	ldr	r1, .L261+136
 	mov	r0, r5
-	ldr	r1, .L271+140
 	bl	sprintf
-.LVL235:
+.LVL230:
 	add	r5, r5, r0
 	.loc 3 49 0
-	ldrh	r2, [r6, #128]
-	ldr	r1, .L271+144
+	ldrh	r2, [r9, #6]
+	ldr	r1, .L261+140
 	mov	r0, r5
 	bl	sprintf
-.LVL236:
+.LVL231:
 	add	r5, r5, r0
 	.loc 3 50 0
-	ldrh	r2, [r8, #2]
-	ldr	r1, .L271+148
+	ldrb	r2, [r6, #2330]	@ zero_extendqisi2
+	ldr	r1, .L261+144
 	mov	r0, r5
 	bl	sprintf
-.LVL237:
+.LVL232:
 	add	r5, r5, r0
 	.loc 3 51 0
-	ldrb	r2, [r6, #2286]	@ zero_extendqisi2
-	ldr	r1, .L271+152
+	ldrh	r2, [r6, r4]
+	ldr	r1, .L261+148
 	mov	r0, r5
 	bl	sprintf
-.LVL238:
+.LVL233:
 	add	r5, r5, r0
 	.loc 3 52 0
-	ldrh	r2, [r6, r4]
-	ldr	r1, .L271+156
+	ldrb	r2, [r6, #2332]	@ zero_extendqisi2
+	ldr	r1, .L261+152
 	mov	r0, r5
 	bl	sprintf
-.LVL239:
+.LVL234:
 	add	r5, r5, r0
 	.loc 3 53 0
-	ldrb	r2, [r6, #2288]	@ zero_extendqisi2
-	ldr	r1, .L271+160
+	ldrh	r2, [r9, #8]
+	ldr	r1, .L261+156
 	mov	r0, r5
 	bl	sprintf
-.LVL240:
+.LVL235:
+	.loc 3 54 0
+	ldrh	r3, [r6, r4]
+	.loc 3 53 0
 	add	r5, r5, r0
 	.loc 3 54 0
-	ldrh	r2, [r8, #4]
-	ldr	r1, .L271+164
+	ldr	r2, [r6, #2300]
 	mov	r0, r5
-	bl	sprintf
-.LVL241:
+	ldr	r1, .L261+160
 	.loc 3 55 0
-	ldrh	r3, [r6, r4]
+	movw	r4, #2372
 	.loc 3 54 0
+	lsl	r3, r3, #1
+	ldrh	r2, [r2, r3]
+	bl	sprintf
+.LVL236:
 	add	r5, r5, r0
 	.loc 3 55 0
-	ldr	r2, [r6, #2260]
+	ldrh	r2, [r9, #54]
+	ldr	r1, .L261+164
 	mov	r0, r5
-	ldr	r1, .L271+168
-	.loc 3 56 0
-	movw	r4, #2328
-	.loc 3 55 0
-	lsl	r3, r3, #1
-	ldrh	r2, [r2, r3]
 	bl	sprintf
-.LVL242:
+.LVL237:
 	add	r5, r5, r0
 	.loc 3 56 0
-	ldrh	r2, [r8, #50]
-	ldr	r1, .L271+172
+	ldrb	r2, [r6, #2378]	@ zero_extendqisi2
+	ldr	r1, .L261+168
 	mov	r0, r5
 	bl	sprintf
-.LVL243:
+.LVL238:
 	add	r5, r5, r0
 	.loc 3 57 0
-	ldrb	r2, [r6, #2334]	@ zero_extendqisi2
-	ldr	r1, .L271+176
+	ldrh	r2, [r6, r4]
+	ldr	r1, .L261+172
 	mov	r0, r5
 	bl	sprintf
-.LVL244:
+.LVL239:
 	add	r5, r5, r0
 	.loc 3 58 0
-	ldrh	r2, [r6, r4]
-	ldr	r1, .L271+180
+	ldrb	r2, [r6, #2380]	@ zero_extendqisi2
+	ldr	r1, .L261+176
 	mov	r0, r5
 	bl	sprintf
-.LVL245:
+.LVL240:
 	add	r5, r5, r0
 	.loc 3 59 0
-	ldrb	r2, [r6, #2336]	@ zero_extendqisi2
-	ldr	r1, .L271+184
+	ldrh	r2, [r9, #56]
+	ldr	r1, .L261+180
 	mov	r0, r5
 	bl	sprintf
-.LVL246:
+.LVL241:
+	.loc 3 60 0
+	ldrh	r3, [r6, r4]
+	.loc 3 59 0
 	add	r5, r5, r0
 	.loc 3 60 0
-	ldrh	r2, [r8, #52]
-	ldr	r1, .L271+188
+	ldr	r2, [r6, #2300]
 	mov	r0, r5
-	bl	sprintf
-.LVL247:
+	ldr	r1, .L261+184
 	.loc 3 61 0
-	ldrh	r3, [r6, r4]
+	add	r4, r9, #100
 	.loc 3 60 0
+	lsl	r3, r3, #1
+	ldrh	r2, [r2, r3]
+	bl	sprintf
+.LVL242:
 	add	r5, r5, r0
 	.loc 3 61 0
-	ldr	r2, [r6, #2260]
+	ldrh	r2, [r9, #102]
+	ldr	r1, .L261+188
 	mov	r0, r5
-	ldr	r1, .L271+192
-	.loc 3 62 0
-	add	r4, r8, #96
-	.loc 3 61 0
-	lsl	r3, r3, #1
-	ldrh	r2, [r2, r3]
 	bl	sprintf
-.LVL248:
+.LVL243:
 	add	r5, r5, r0
 	.loc 3 62 0
-	ldrh	r2, [r8, #98]
-	ldr	r1, .L271+196
+	ldrb	r2, [r6, #2426]	@ zero_extendqisi2
+	ldr	r1, .L261+192
 	mov	r0, r5
 	bl	sprintf
-.LVL249:
+.LVL244:
+	.loc 3 63 0
+	movw	r3, #2420
+	.loc 3 62 0
 	add	r5, r5, r0
 	.loc 3 63 0
-	ldrb	r2, [r6, #2382]	@ zero_extendqisi2
-	ldr	r1, .L271+200
+	ldrh	r2, [r6, r3]
 	mov	r0, r5
+	ldr	r1, .L261+196
 	bl	sprintf
-.LVL250:
-	.loc 3 64 0
-	movw	r3, #2376
-	.loc 3 63 0
+.LVL245:
 	add	r5, r5, r0
 	.loc 3 64 0
-	ldrh	r2, [r6, r3]
+	ldrb	r2, [r6, #2428]	@ zero_extendqisi2
+	ldr	r1, .L261+200
 	mov	r0, r5
-	ldr	r1, .L271+204
 	bl	sprintf
-.LVL251:
+.LVL246:
 	add	r5, r5, r0
 	.loc 3 65 0
-	ldrb	r2, [r6, #2384]	@ zero_extendqisi2
-	ldr	r1, .L271+208
+	ldrh	r2, [r9, #104]
+	ldr	r1, .L261+204
 	mov	r0, r5
 	bl	sprintf
-.LVL252:
+.LVL247:
 	add	r5, r5, r0
 	.loc 3 66 0
-	ldrh	r2, [r8, #100]
-	ldr	r1, .L271+212
+	ldrh	r2, [r4, #146]
+	ldr	r1, .L261+208
 	mov	r0, r5
 	bl	sprintf
-.LVL253:
+.LVL248:
 	add	r5, r5, r0
 	.loc 3 67 0
-	ldrh	r2, [r4, #194]
-	ldr	r1, .L271+216
+	ldrb	r2, [r6, #2570]	@ zero_extendqisi2
+	ldr	r1, .L261+212
 	mov	r0, r5
 	bl	sprintf
-.LVL254:
+.LVL249:
 	add	r5, r5, r0
 	.loc 3 68 0
-	ldrb	r2, [r6, #2574]	@ zero_extendqisi2
-	ldr	r1, .L271+220
+	ldrh	r2, [r6, r8]
+	ldr	r1, .L261+216
 	mov	r0, r5
 	bl	sprintf
-.LVL255:
-	.loc 3 67 0
-	movw	r8, #2568
-	.loc 3 68 0
+.LVL250:
 	add	r5, r5, r0
 	.loc 3 69 0
-	ldrh	r2, [r6, r8]
+	ldrb	r2, [r6, #2572]	@ zero_extendqisi2
+	ldr	r1, .L261+220
 	mov	r0, r5
-	ldr	r1, .L271+224
 	bl	sprintf
-.LVL256:
+.LVL251:
 	add	r5, r5, r0
 	.loc 3 70 0
-	ldrb	r2, [r6, #2576]	@ zero_extendqisi2
-	ldr	r1, .L271+228
-	mov	r0, r5
-	bl	sprintf
-.LVL257:
-	add	r5, r5, r0
-	.loc 3 71 0
-	ldrh	r2, [r4, #196]
-	ldr	r1, .L271+232
+	ldrh	r2, [r4, #148]
+	ldr	r1, .L261+224
 	mov	r0, r5
 	bl	sprintf
-.LVL258:
-	.loc 3 72 0
-	ldr	r3, [r6, #2692]
+.LVL252:
 	.loc 3 71 0
+	ldr	r3, [r6, #2688]
+	.loc 3 70 0
 	add	r5, r5, r0
-	.loc 3 72 0
-	ldr	r2, [r6, #2696]
+	.loc 3 71 0
+	ldr	r2, [r6, #2692]
 	mov	r0, r5
-	ldr	r1, .L271+236
+	ldr	r1, .L261+228
 	str	r3, [sp]
-	ldr	r3, [r6, #2700]
+	ldr	r3, [r6, #2696]
 	bl	sprintf
-.LVL259:
+.LVL253:
 	add	r4, r5, r0
+	.loc 3 72 0
+	ldr	r2, [r6, #2684]
+	ldr	r1, .L261+232
+	mov	r0, r4
+	bl	sprintf
+.LVL254:
+	add	r4, r4, r0
 	.loc 3 73 0
-	ldr	r2, [r6, #2688]
-	ldr	r1, .L271+240
+	ldr	r2, [r6, #2708]
+	ldr	r1, .L261+236
 	mov	r0, r4
 	bl	sprintf
-.LVL260:
+.LVL255:
+	.loc 3 74 0
+	movw	r3, #3124
+	.loc 3 73 0
 	add	r4, r4, r0
 	.loc 3 74 0
-	ldr	r2, [r6, #2712]
-	ldr	r1, .L271+244
+	ldrh	r2, [r6, r3]
 	mov	r0, r4
+	ldr	r1, .L261+240
 	bl	sprintf
-.LVL261:
+.LVL256:
 	.loc 3 75 0
-	movw	r3, #3128
+	movw	r3, #3126
 	.loc 3 74 0
 	add	r4, r4, r0
 	.loc 3 75 0
 	ldrh	r2, [r6, r3]
 	mov	r0, r4
-	ldr	r1, .L271+248
+	ldr	r1, .L261+244
 	bl	sprintf
-.LVL262:
-	.loc 3 76 0
-	movw	r3, #3130
-	.loc 3 75 0
+.LVL257:
 	add	r4, r4, r0
 	.loc 3 76 0
-	ldrh	r2, [r6, r3]
+	ldr	r2, [r6, #3128]
+	ldr	r1, .L261+248
 	mov	r0, r4
-	ldr	r1, .L271+252
 	bl	sprintf
-.LVL263:
+.LVL258:
+	.loc 3 77 0
+	movw	r3, #3132
+	.loc 3 76 0
 	add	r4, r4, r0
 	.loc 3 77 0
-	ldr	r2, [r6, #3132]
-	ldr	r1, .L271+256
+	ldrh	r2, [r6, r3]
 	mov	r0, r4
+	ldr	r1, .L261+252
 	bl	sprintf
-.LVL264:
-	.loc 3 78 0
-	add	r3, r6, #3136
-	.loc 3 77 0
+.LVL259:
 	add	r4, r4, r0
 	.loc 3 78 0
-	ldrh	r2, [r3]
-	mov	r0, r4
-	ldr	r1, .L271+260
-	bl	sprintf
-.LVL265:
-	add	r4, r4, r0
-	.loc 3 79 0
 	bl	GetFreeBlockMinEraseCount
-.LVL266:
-	ldr	r1, .L271+264
+.LVL260:
+	ldr	r1, .L261+256
 	mov	r2, r0
 	mov	r0, r4
 	bl	sprintf
-.LVL267:
+.LVL261:
 	add	r4, r4, r0
-	.loc 3 80 0
-	ldrh	r0, [r6, r9]
+	.loc 3 79 0
+	ldrh	r0, [r9]
 	bl	GetFreeBlockMaxEraseCount
-.LVL268:
-	ldr	r1, .L271+268
+.LVL262:
+	ldr	r1, .L261+260
 	mov	r2, r0
 	mov	r0, r4
 	bl	sprintf
-.LVL269:
-	.loc 3 81 0
-	ldr	r3, .L271+272
+.LVL263:
 	.loc 3 80 0
+	ldr	r3, .L261+264
+	.loc 3 79 0
 	add	r4, r4, r0
-	.loc 3 81 0
+	.loc 3 80 0
 	ldr	r3, [r3]
 	cmp	r3, #1
-	beq	.L260
-.LVL270:
-.L265:
-	.loc 3 104 0
+	beq	.L250
+.LVL264:
+.L255:
+	.loc 3 103 0
 	sub	r0, r4, r7
-	.loc 3 105 0
+	.loc 3 104 0
 	sub	sp, fp, #40
-.LCFI137:
+.LCFI128:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL271:
-.L260:
-.LCFI138:
-	.loc 3 84 0
+.LVL265:
+.L250:
+.LCFI129:
+	.loc 3 83 0
 	ldrh	r3, [r6, r8]
 	movw	r2, #65535
 	cmp	r3, r2
-	beq	.L262
-	.loc 3 85 0
-	ldr	r2, [r6, #2260]
+	beq	.L252
+	.loc 3 84 0
+	ldr	r2, [r6, #2300]
 	lsl	r3, r3, #1
 	mov	r0, r4
-	ldr	r1, .L271+276
+	ldr	r1, .L261+268
 	ldrh	r2, [r2, r3]
 	bl	sprintf
-.LVL272:
+.LVL266:
 	add	r4, r4, r0
-.L262:
-.LBB282:
-	.loc 3 87 0
+.L252:
+.LBB285:
+	.loc 3 86 0
 	mov	r0, #0
-	.loc 3 91 0
-	ldr	r9, .L271+280
-	.loc 3 87 0
+	.loc 3 90 0
+	ldr	r9, .L261+272
+	.loc 3 86 0
 	bl	List_get_gc_head_node
-.LVL273:
+.LVL267:
 	uxth	r3, r0
-.LVL274:
-	.loc 3 88 0
+.LVL268:
+	.loc 3 87 0
 	mov	r5, #0
-	.loc 3 89 0
+	.loc 3 88 0
 	movw	r10, #65535
-.L264:
+.L254:
 	cmp	r3, r10
-	beq	.L263
-	.loc 3 91 0 discriminator 2
-	ldr	r2, [r6, #2248]
+	beq	.L253
+	.loc 3 90 0 discriminator 2
+	ldr	r2, [r6, #2304]
 	lsl	r1, r3, #1
-	mov	r8, #6
-	mul	r8, r8, r3
+	lsl	r8, r3, #3
 	mov	r0, r4
 	ldrh	r2, [r2, r1]
 	str	r2, [sp, #8]
-	ldr	r2, [r6, #2252]
+	ldr	r2, [r6, #2292]
 	add	r2, r2, r8
 	ldrh	r2, [r2, #4]
 	str	r2, [sp, #4]
-	ldr	r2, [r6, #2260]
+	ldr	r2, [r6, #2300]
 	ldrh	r2, [r2, r1]
 	mov	r1, r9
 	str	r2, [sp]
 	mov	r2, r5
 	bl	sprintf
-.LVL275:
-	.loc 3 88 0 discriminator 2
+.LVL269:
+	.loc 3 87 0 discriminator 2
 	add	r5, r5, #1
-	.loc 3 92 0 discriminator 2
-	ldr	r3, [r6, #2252]
-	.loc 3 88 0 discriminator 2
-	cmp	r5, #16
 	.loc 3 91 0 discriminator 2
+	ldr	r3, [r6, #2292]
+	.loc 3 87 0 discriminator 2
+	cmp	r5, #16
+	.loc 3 90 0 discriminator 2
 	add	r4, r4, r0
-	.loc 3 92 0 discriminator 2
+	.loc 3 91 0 discriminator 2
 	ldrh	r3, [r3, r8]
-.LVL276:
-	.loc 3 88 0 discriminator 2
-	bne	.L264
-.L263:
-.LBE282:
-.LBB283:
+.LVL270:
+	.loc 3 87 0 discriminator 2
+	bne	.L254
+.L253:
+.LBE285:
+.LBB286:
+	.loc 3 95 0
+	ldr	r3, [r6, #2316]
+.LVL271:
 	.loc 3 96 0
-	ldr	r2, [r6, #2252]
+	mov	r5, #0
+	.loc 3 95 0
+	ldr	r2, [r6, #2292]
 	.loc 3 97 0
-	mov	r8, #0
-	.loc 3 96 0
-	ldr	r3, [r6, #2272]
-.LVL277:
-	.loc 3 98 0
 	movw	r9, #65535
-	.loc 3 100 0
-	ldr	r10, .L271+284
-	.loc 3 96 0
+	.loc 3 99 0
+	ldr	r10, .L261+276
+	.loc 3 95 0
 	sub	r3, r3, r2
-	ldr	r2, .L271+288
-	asr	r3, r3, #1
-	mul	r3, r2, r3
-	uxth	r3, r3
-.LVL278:
-.L266:
-	.loc 3 98 0
+	ubfx	r3, r3, #3, #16
+.LVL272:
+.L256:
+	.loc 3 97 0
 	cmp	r3, r9
-	beq	.L265
-	.loc 3 100 0 discriminator 2
-	ldr	r1, [r6, #2248]
+	beq	.L255
+	.loc 3 99 0 discriminator 2
+	ldr	r1, [r6, #2304]
 	lsl	r2, r3, #1
-	mov	r5, #6
-	mul	r5, r5, r3
+	lsl	r8, r3, #3
 	mov	r0, r4
 	ldrh	r2, [r1, r2]
 	mov	r1, r10
 	str	r2, [sp, #4]
-	ldr	r2, [r6, #2252]
-	add	r2, r2, r5
+	ldr	r2, [r6, #2292]
+	add	r2, r2, r8
 	ldrh	r2, [r2, #4]
 	str	r2, [sp]
-	mov	r2, r8
-	.loc 3 97 0 discriminator 2
-	add	r8, r8, #1
-	.loc 3 100 0 discriminator 2
+	mov	r2, r5
+	.loc 3 96 0 discriminator 2
+	add	r5, r5, #1
+	.loc 3 99 0 discriminator 2
 	bl	sprintf
-.LVL279:
-	.loc 3 97 0 discriminator 2
-	cmp	r8, #4
-	.loc 3 100 0 discriminator 2
+.LVL273:
+	.loc 3 96 0 discriminator 2
+	cmp	r5, #4
+	.loc 3 99 0 discriminator 2
 	add	r4, r4, r0
-	.loc 3 97 0 discriminator 2
-	beq	.L265
-	.loc 3 101 0
-	ldr	r3, [r6, #2252]
-	ldrh	r3, [r3, r5]
-.LVL280:
-	b	.L266
-.L272:
+	.loc 3 96 0 discriminator 2
+	beq	.L255
+	.loc 3 100 0
+	ldr	r3, [r6, #2292]
+	ldrh	r3, [r3, r8]
+.LVL274:
+	b	.L256
+.L262:
 	.align	2
-.L271:
+.L261:
 	.word	.LANCHOR0
 	.word	.LC2
 	.word	.LC3
@@ -4112,8 +3521,6 @@ FtlPrintInfo2buf:
 	.word	.LC11
 	.word	.LC12
 	.word	.LC13
-	.word	.LANCHOR0+2504
-	.word	.LANCHOR0+2280
 	.word	.LC14
 	.word	.LC15
 	.word	.LC16
@@ -4171,10 +3578,8 @@ FtlPrintInfo2buf:
 	.word	.LC67
 	.word	.LC68
 	.word	.LC69
-	.word	-1431655765
-.LBE283:
-.LFE140:
-	.fnend
+.LBE286:
+.LFE150:
 	.size	FtlPrintInfo2buf, .-FtlPrintInfo2buf
 	.align	2
 	.global	rknand_proc_ftlread
@@ -4183,47 +3588,40 @@ FtlPrintInfo2buf:
 	.fpu softvfp
 	.type	rknand_proc_ftlread, %function
 rknand_proc_ftlread:
-	.fnstart
-.LFB141:
-	.loc 3 114 0
+.LFB151:
+	.loc 3 113 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL281:
-	.movsp ip
+.LVL275:
 	mov	ip, sp
-.LCFI139:
+.LCFI130:
 	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI140:
-	.setfp fp, ip, #-4
+.LCFI131:
 	sub	fp, ip, #4
-.LCFI141:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 114 0
+.LCFI132:
+	.loc 3 119 0
+	ldr	r2, .L264
+	.loc 3 113 0
 	mov	r5, r0
-	.loc 3 120 0
-	ldr	r2, .L274
-	ldr	r1, .L274+4
+	.loc 3 119 0
+	ldr	r1, .L264+4
 	bl	sprintf
-.LVL282:
+.LVL276:
 	add	r4, r5, r0
-	.loc 3 122 0
+	.loc 3 121 0
 	mov	r0, r4
 	bl	FtlPrintInfo2buf
-.LVL283:
+.LVL277:
 	add	r0, r4, r0
-	.loc 3 124 0
+	.loc 3 123 0
 	sub	r0, r0, r5
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L275:
+.L265:
 	.align	2
-.L274:
+.L264:
 	.word	.LC70
 	.word	.LC71
-.LFE141:
-	.fnend
+.LFE151:
 	.size	rknand_proc_ftlread, .-rknand_proc_ftlread
 	.align	2
 	.global	GetSwlReplaceBlock
@@ -4232,258 +3630,251 @@ rknand_proc_ftlread:
 	.fpu softvfp
 	.type	GetSwlReplaceBlock, %function
 GetSwlReplaceBlock:
-	.fnstart
-.LFB236:
-	.loc 2 2447 0
-	@ args = 0, pretend = 0, frame = 8
+.LFB246:
+	.loc 2 2497 0
+	@ args = 0, pretend = 0, frame = 4
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI142:
+.LCFI133:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI143:
-	.setfp fp, ip, #-4
+.LCFI134:
 	sub	fp, ip, #4
-.LCFI144:
-	.pad #28
-	sub	sp, sp, #28
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2447 0
-	.loc 2 2456 0
-	ldr	r4, .L300
-	ldr	r2, [r4, #2488]
-	ldr	r3, [r4, #2500]
+.LCFI135:
+	sub	sp, sp, #16
+	.loc 2 2507 0
+	ldr	r4, .L290
+	ldr	r2, [r4, #2532]
+	ldr	r3, [r4, #2544]
 	cmp	r2, r3
-	bcs	.L277
-	ldr	r2, [r4, #2248]
-	.loc 2 2458 0
+	bcs	.L267
+	ldr	r2, [r4, #2304]
+	.loc 2 2509 0
 	mov	r3, #0
-	.loc 2 2459 0
+	.loc 2 2510 0
 	ldrh	r1, [r4, #16]
-	.loc 2 2458 0
-	str	r3, [r4, #2480]
+	.loc 2 2509 0
+	str	r3, [r4, #2524]
 	sub	r2, r2, #2
-.L278:
-	.loc 2 2459 0 discriminator 1
+.L268:
+	.loc 2 2510 0 discriminator 1
 	cmp	r3, r1
-	bcc	.L279
-	.loc 2 2461 0
-	ldr	r5, [r4, #2480]
+	bcc	.L269
+	.loc 2 2512 0
+	ldr	r5, [r4, #2524]
 	mov	r0, r5
-	bl	__aeabi_uidiv
-.LVL284:
-	str	r0, [r4, #2488]
-	.loc 2 2462 0
-	ldr	r0, [r4, #2484]
+	bl	__udivsi3
+.LVL278:
+	str	r0, [r4, #2532]
+	.loc 2 2513 0
+	ldr	r0, [r4, #2528]
 	ldrh	r1, [r4, #68]
 	sub	r0, r5, r0
-	bl	__aeabi_uidiv
-.LVL285:
-	str	r0, [r4, #2480]
-.L280:
-	.loc 2 2468 0
-	ldr	r6, [r4, #2500]
-	ldr	r8, [r4, #2488]
+	bl	__udivsi3
+.LVL279:
+	str	r0, [r4, #2524]
+.L270:
+	.loc 2 2519 0
+	ldr	r6, [r4, #2544]
+	ldr	r7, [r4, #2532]
 	add	r3, r6, #256
-	cmp	r3, r8
-	bls	.L285
-	.loc 2 2468 0 is_stmt 0 discriminator 1
-	ldr	r2, [r4, #2496]
+	cmp	r3, r7
+	bls	.L275
+	.loc 2 2519 0 is_stmt 0 discriminator 1
+	ldr	r2, [r4, #2540]
 	add	r3, r6, #768
 	cmp	r3, r2
-	bls	.L285
-.LVL286:
-.L287:
-	.loc 2 2469 0 is_stmt 1
+	bls	.L275
+.LVL280:
+.L277:
+	.loc 2 2520 0 is_stmt 1
 	movw	r5, #65535
-.L286:
-	.loc 2 2518 0
+.L276:
+	.loc 2 2566 0
 	mov	r0, r5
+.LVL281:
 	sub	sp, fp, #40
-.LCFI145:
+.LCFI136:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL287:
-.L279:
-.LCFI146:
-	.loc 2 2460 0 discriminator 3
+.LVL282:
+.L269:
+.LCFI137:
+	.loc 2 2511 0 discriminator 3
 	ldrh	r0, [r2, #2]!
-	.loc 2 2459 0 discriminator 3
+	.loc 2 2510 0 discriminator 3
 	add	r3, r3, #1
-	.loc 2 2460 0 discriminator 3
-	ldr	ip, [r4, #2480]
+	.loc 2 2511 0 discriminator 3
+	ldr	ip, [r4, #2524]
 	add	r0, r0, ip
-	str	r0, [r4, #2480]
-	b	.L278
-.L277:
-	.loc 2 2463 0
-	ldr	r3, [r4, #2496]
+	str	r0, [r4, #2524]
+	b	.L268
+.L267:
+	.loc 2 2514 0
+	ldr	r3, [r4, #2540]
 	cmp	r2, r3
-	.loc 2 2464 0
+	.loc 2 2515 0
 	addhi	r3, r3, #1
-	strhi	r3, [r4, #2496]
-	.loc 2 2465 0
+	strhi	r3, [r4, #2540]
+	.loc 2 2516 0
 	movhi	r3, #0
-	.loc 2 2463 0
-	bls	.L280
-.L282:
-	.loc 2 2465 0 discriminator 1
+	.loc 2 2514 0
+	bls	.L270
+.L272:
+	.loc 2 2516 0 discriminator 1
 	ldrh	r2, [r4, #16]
 	cmp	r3, r2
-	bcs	.L280
-	.loc 2 2466 0 discriminator 3
-	ldr	r0, [r4, #2248]
+	bcs	.L270
+	.loc 2 2517 0 discriminator 3
+	ldr	r0, [r4, #2304]
 	lsl	r1, r3, #1
-	.loc 2 2465 0 discriminator 3
+	.loc 2 2516 0 discriminator 3
 	add	r3, r3, #1
-	.loc 2 2466 0 discriminator 3
+	.loc 2 2517 0 discriminator 3
 	ldrh	r2, [r0, r1]
 	add	r2, r2, #1
 	strh	r2, [r0, r1]	@ movhi
-	b	.L282
-.L285:
-	.loc 2 2471 0
-	movw	r3, #2276
-	ldrh	r0, [r4, r3]
+	b	.L272
+.L275:
+	.loc 2 2522 0
+	ldr	r3, .L290+4
+	ldrh	r0, [r3]
 	add	r0, r0, r0, lsl #1
-	ubfx	r0, r0, #2, #16
+	asr	r0, r0, #2
 	bl	GetFreeBlockMaxEraseCount
-.LVL288:
-	.loc 2 2472 0
+.LVL283:
+	.loc 2 2523 0
 	add	r3, r6, #64
-	.loc 2 2471 0
-	mov	r10, r0
-.LVL289:
-	.loc 2 2472 0
+	.loc 2 2522 0
+	mov	r9, r0
+.LVL284:
+	.loc 2 2523 0
 	cmp	r0, r3
-	movcs	r3, #0
-	movcc	r3, #1
-	cmp	r6, #30
-	movls	r3, #0
-	cmp	r3, #0
-	bne	.L287
-	.loc 2 2476 0
-	ldr	r3, [r4, #2256]
-.LVL290:
+	bcc	.L277
+	.loc 2 2526 0
+	ldr	r3, [r4, #2296]
+.LVL285:
 	cmp	r3, #0
-	beq	.L287
-	.loc 2 2483 0
-	ldr	r0, [r4, #2252]
-	.loc 2 2484 0
-	movw	r7, #65535
-.LVL291:
-	ldr	r9, [r4, #2248]
-	mov	r2, r7
-	.loc 2 2483 0
-	ldr	ip, .L300+4
-	.loc 2 2495 0
-	mov	lr, #6
-.L288:
-	.loc 2 2479 0
-	ldrh	r1, [r3]
+	beq	.L277
+	.loc 2 2530 0
+	ldrh	r10, [r4, #16]
+	.loc 2 2534 0
+	movw	r1, #65535
+.LVL286:
+	.loc 2 2533 0
+	ldr	lr, [r4, #2292]
+	.loc 2 2534 0
+	mov	r0, #0
+.LVL287:
+	ldr	r8, [r4, #2304]
+	mov	r2, r1
+.L278:
+	.loc 2 2528 0
+	ldrh	ip, [r3]
 	movw	r5, #65535
-	cmp	r1, r5
-	bne	.L291
+	cmp	ip, r5
+	bne	.L281
 	mov	r5, r2
-.L290:
-	.loc 2 2498 0
+.L280:
+	.loc 2 2546 0
 	movw	r3, #65535
-.LVL292:
+.LVL288:
 	cmp	r5, r3
-	beq	.L287
-	.loc 2 2500 0
-	lsl	r2, r5, #1
-	ldrh	r3, [r9, r2]
-.LVL293:
-	.loc 2 2501 0
-	cmp	r6, r3
-	bcs	.L292
-	str	r3, [fp, #-52]
-	str	r2, [fp, #-48]
-	.loc 2 2503 0
+	beq	.L277
+	.loc 2 2548 0
+	lsl	r3, r5, #1
+	ldrh	r10, [r8, r3]
+.LVL289:
+	.loc 2 2549 0
+	cmp	r6, r10
+	bcs	.L282
+	str	r3, [fp, #-44]
+	.loc 2 2551 0
 	bl	GetFreeBlockMinEraseCount
-.LVL294:
-	ldr	r2, [fp, #-48]
+.LVL290:
+	ldr	r3, [fp, #-44]
 	cmp	r6, r0
-	ldr	r3, [fp, #-52]
+	.loc 2 2552 0
+	strcc	r1, [r4, #2544]
+.LVL291:
+.L282:
+	.loc 2 2554 0
+	cmp	r7, r10
+	bls	.L277
+	.loc 2 2554 0 is_stmt 0 discriminator 1
+	add	r2, r10, #128
+	cmp	r9, r2
+	ble	.L277
+	.loc 2 2556 0 is_stmt 1
+	add	r2, r10, #256
+	cmp	r7, r2
+	bhi	.L283
+	.loc 2 2556 0 is_stmt 0 discriminator 1
+	ldr	r2, [r4, #2540]
+	add	r10, r10, #768
+.LVL292:
+	cmp	r10, r2
+	bcs	.L277
+.LVL293:
+.L283:
+	.loc 2 2558 0 is_stmt 1
+	str	r9, [sp, #8]
+	mov	r1, r5
+.LVL294:
+	ldrh	r2, [r8, r3]
+	ldr	r0, .L290+8
 .LVL295:
-	.loc 2 2504 0
-	strcc	r7, [r4, #2500]
-.L292:
-	.loc 2 2506 0
-	cmp	r8, r3
-	bls	.L287
-	.loc 2 2506 0 is_stmt 0 discriminator 1
-	add	r1, r3, #128
-	cmp	r10, r1
-	ble	.L287
-	.loc 2 2508 0 is_stmt 1
-	add	r1, r3, #256
-	cmp	r8, r1
-	bhi	.L293
-	.loc 2 2508 0 is_stmt 0 discriminator 1
-	ldr	r1, [r4, #2496]
-	add	r3, r3, #768
+	str	r2, [sp, #4]
+	ldr	r2, [r4, #2300]
+	ldrh	r3, [r2, r3]
+	mov	r2, r7
+	str	r3, [sp]
+	ldr	r3, [r4, #2540]
+	bl	printk
 .LVL296:
-	cmp	r3, r1
-	bcs	.L287
+	.loc 2 2559 0
+	mov	r3, #1
+	str	r3, [r4, #3136]
+	.loc 2 2560 0
+	b	.L276
 .LVL297:
-.L293:
-	.loc 2 2510 0 is_stmt 1
-	str	r10, [sp, #8]
-	mov	r1, r5
-	ldrh	r3, [r9, r2]
+.L281:
+	.loc 2 2529 0
+	add	r0, r0, #1
 .LVL298:
-	ldr	r0, .L300+8
-	str	r3, [sp, #4]
-	ldr	r3, [r4, #2260]
-	ldrh	r3, [r3, r2]
-	mov	r2, r8
-	str	r3, [sp]
-	ldr	r3, [r4, #2496]
-	bl	printk
+	uxth	r0, r0
 .LVL299:
-	.loc 2 2511 0
-	mov	r3, #1
-	str	r3, [r4, #3140]
-	.loc 2 2512 0
-	b	.L286
-.LVL300:
-.L291:
-	.loc 2 2481 0
+	.loc 2 2530 0
+	cmp	r0, r10
+	bhi	.L277
+	.loc 2 2532 0
 	ldrh	r5, [r3, #4]
 	cmp	r5, #0
-	beq	.L289
-	.loc 2 2483 0
-	sub	r3, r3, r0
-.LVL301:
-	asr	r3, r3, #1
-	mul	r3, ip, r3
+	beq	.L279
+	.loc 2 2533 0
+	sub	r3, r3, lr
+.LVL300:
+	asr	r3, r3, #3
 	uxth	r5, r3
-	.loc 2 2484 0
+	.loc 2 2534 0
 	lsl	r3, r5, #1
-	ldrh	r3, [r9, r3]
+	ldrh	r3, [r8, r3]
 	cmp	r6, r3
-	bcs	.L290
-	.loc 2 2483 0
-	cmp	r7, r3
-	movhi	r7, r3
+	bcs	.L280
+	.loc 2 2533 0
+	cmp	r1, r3
+	movhi	r1, r3
 	movhi	r2, r5
-.LVL302:
-.L289:
-	.loc 2 2495 0
-	mla	r3, lr, r1, r0
-	b	.L288
-.L301:
+.LVL301:
+.L279:
+	.loc 2 2543 0
+	add	r3, lr, ip, lsl #3
+	b	.L278
+.L291:
 	.align	2
-.L300:
+.L290:
 	.word	.LANCHOR0
-	.word	-1431655765
+	.word	.LANCHOR0+2320
 	.word	.LC72
-.LFE236:
-	.fnend
+.LFE246:
 	.size	GetSwlReplaceBlock, .-GetSwlReplaceBlock
 	.align	2
 	.global	free_data_superblock
@@ -4492,53 +3883,46 @@ GetSwlReplaceBlock:
 	.fpu softvfp
 	.type	free_data_superblock, %function
 free_data_superblock:
-	.fnstart
-.LFB237:
-	.loc 2 2522 0
+.LFB247:
+	.loc 2 2570 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL303:
-	.movsp ip
+.LVL302:
 	mov	ip, sp
-.LCFI147:
+.LCFI138:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI148:
-	.setfp fp, ip, #-4
+.LCFI139:
 	sub	fp, ip, #4
-.LCFI149:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2522 0
-	.loc 2 2523 0
-	movw	r2, #65535
-	cmp	r0, r2
-	beq	.L303
-.LBB286:
-.LBB287:
-	.loc 2 2525 0
-	ldr	r2, .L304
-	lsl	r3, r0, #1
+.LCFI140:
+	.loc 2 2570 0
+	uxth	r0, r0
+	.loc 2 2571 0
+	movw	r3, #65535
+	cmp	r0, r3
+	beq	.L293
+.LBB289:
+.LBB290:
+	.loc 2 2573 0
+	ldr	r3, .L294
 	mov	r1, #0
-	ldr	r2, [r2, #2260]
+	ldr	r2, [r3, #2300]
+	lsl	r3, r0, #1
 	strh	r1, [r2, r3]	@ movhi
-	.loc 2 2526 0
+	.loc 2 2574 0
 	bl	INSERT_FREE_LIST
-.LVL304:
-.L303:
-.LBE287:
-.LBE286:
-	.loc 2 2528 0
+.LVL303:
+.L293:
+.LBE290:
+.LBE289:
+	.loc 2 2576 0
 	mov	r0, #0
-.LVL305:
+.LVL304:
 	ldmfd	sp, {fp, sp, pc}
-.L305:
+.L295:
 	.align	2
-.L304:
+.L294:
 	.word	.LANCHOR0
-.LFE237:
-	.fnend
+.LFE247:
 	.size	free_data_superblock, .-free_data_superblock
 	.align	2
 	.global	get_new_active_ppa
@@ -4547,118 +3931,110 @@ free_data_superblock:
 	.fpu softvfp
 	.type	get_new_active_ppa, %function
 get_new_active_ppa:
-	.fnstart
-.LFB240:
-	.loc 2 2655 0
+.LFB250:
+	.loc 2 2703 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL306:
-	.movsp ip
+.LVL305:
 	mov	ip, sp
-.LCFI150:
-	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI151:
-	.setfp fp, ip, #-4
+.LCFI141:
+	push	{r4, r5, r6, fp, ip, lr, pc}
+.LCFI142:
 	sub	fp, ip, #4
-.LCFI152:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2655 0
-	.loc 2 2659 0
+.LCFI143:
+	.loc 2 2707 0
+	ldrh	r2, [r0]
 	movw	r3, #65535
-	.loc 2 2655 0
+	.loc 2 2703 0
 	mov	r4, r0
-	.loc 2 2659 0
-	ldrh	r2, [r0]
+	.loc 2 2707 0
 	cmp	r2, r3
-	bne	.L307
-	.loc 2 2659 0 is_stmt 0 discriminator 1
-	movw	r2, #2659
-	ldr	r1, .L320
-	ldr	r0, .L320+4
+	bne	.L297
+	.loc 2 2707 0 is_stmt 0 discriminator 1
+	movw	r2, #2707
+	ldr	r1, .L310
+	ldr	r0, .L310+4
 	bl	printk
-.LVL307:
-.L307:
-	.loc 2 2660 0 is_stmt 1
-	ldr	r5, .L320+8
+.LVL306:
+.L297:
+	.loc 2 2708 0 is_stmt 1
+	ldr	r5, .L310+8
 	ldrh	r2, [r4, #2]
 	ldrh	r3, [r5, #78]
 	cmp	r2, r3
-	bne	.L308
-	.loc 2 2660 0 is_stmt 0 discriminator 1
-	movw	r2, #2660
-	ldr	r1, .L320
-	ldr	r0, .L320+4
+	bne	.L298
+	.loc 2 2708 0 is_stmt 0 discriminator 1
+	movw	r2, #2708
+	ldr	r1, .L310
+	ldr	r0, .L310+4
 	bl	printk
-.LVL308:
-.L308:
-	.loc 2 2661 0 is_stmt 1
+.LVL307:
+.L298:
+	.loc 2 2709 0 is_stmt 1
 	ldrh	r3, [r4, #4]
 	cmp	r3, #0
-	bne	.L309
-	.loc 2 2661 0 is_stmt 0 discriminator 1
-	movw	r2, #2661
-	ldr	r1, .L320
-	ldr	r0, .L320+4
+	bne	.L299
+	.loc 2 2709 0 is_stmt 0 discriminator 1
+	movw	r2, #2709
+	ldr	r1, .L310
+	ldr	r0, .L310+4
 	bl	printk
-.LVL309:
-.L309:
-	.loc 2 2663 0 is_stmt 1
+.LVL308:
+.L299:
+	.loc 2 2711 0 is_stmt 1
 	ldrb	r2, [r4, #6]	@ zero_extendqisi2
-	.loc 2 2662 0
+	.loc 2 2710 0
 	mov	r3, #0
-	.loc 2 2666 0
+	.loc 2 2714 0
 	ldrh	r1, [r5, #8]
-	.loc 2 2664 0
+	.loc 2 2712 0
 	movw	ip, #65535
-	.loc 2 2662 0
+	.loc 2 2710 0
 	strb	r3, [r4, #10]
-	.loc 2 2663 0
+	.loc 2 2711 0
 	add	r2, r4, r2, lsl #1
 	ldrh	r0, [r2, #16]
-.LVL310:
-	.loc 2 2668 0
+.LVL309:
+	.loc 2 2716 0
 	mov	r2, r3
-.L310:
-	.loc 2 2664 0
+.L300:
+	.loc 2 2712 0
 	cmp	r0, ip
 	ldrb	r3, [r4, #6]	@ zero_extendqisi2
-	beq	.L312
-	.loc 2 2673 0
+	beq	.L302
+	.loc 2 2721 0
 	ldrh	r2, [r4, #4]
-	.loc 2 2672 0
+	.loc 2 2720 0
 	ldrh	r6, [r4, #2]
-	.loc 2 2673 0
+	.loc 2 2721 0
 	sub	r2, r2, #1
 	uxth	r2, r2
-	.loc 2 2672 0
+	.loc 2 2720 0
 	orr	r6, r6, r0, lsl #10
-	.loc 2 2680 0
+	.loc 2 2728 0
 	movw	r0, #65535
-.LVL311:
-	.loc 2 2673 0
+.LVL310:
+	.loc 2 2721 0
 	strh	r2, [r4, #4]	@ movhi
-.L314:
-	.loc 2 2675 0
+.L304:
+	.loc 2 2723 0
 	add	r3, r3, #1
 	uxtb	r3, r3
-	.loc 2 2676 0
+	.loc 2 2724 0
 	cmp	r1, r3
-	.loc 2 2677 0
+	.loc 2 2725 0
 	ldrheq	r3, [r4, #2]
 	addeq	r3, r3, #1
 	strheq	r3, [r4, #2]	@ movhi
-	.loc 2 2678 0
+	.loc 2 2726 0
 	moveq	r3, #0
-	.loc 2 2680 0
+	.loc 2 2728 0
 	add	ip, r4, r3, lsl #1
 	ldrh	ip, [ip, #16]
 	cmp	ip, r0
-	beq	.L314
+	beq	.L304
 	strb	r3, [r4, #6]
-	.loc 2 2682 0
+	.loc 2 2730 0
 	cmp	r2, #0
 	ldrh	r3, [r4, #2]
 	ldrh	r1, [r5, #78]
@@ -4667,46 +4043,45 @@ get_new_active_ppa:
 	lsr	r3, r3, #5
 	moveq	r3, #0
 	cmp	r3, #0
-	beq	.L306
-	.loc 2 2682 0 is_stmt 0 discriminator 2
-	movw	r2, #2682
-	ldr	r1, .L320
-	ldr	r0, .L320+4
+	beq	.L296
+	.loc 2 2730 0 is_stmt 0 discriminator 2
+	movw	r2, #2730
+	ldr	r1, .L310
+	ldr	r0, .L310+4
 	bl	printk
-.LVL312:
-.L306:
-	.loc 2 2684 0 is_stmt 1
+.LVL311:
+.L296:
+	.loc 2 2732 0 is_stmt 1
 	mov	r0, r6
-	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.LVL313:
-.L312:
-	.loc 2 2665 0
+	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
+.LVL312:
+.L302:
+	.loc 2 2713 0
 	add	r3, r3, #1
 	uxtb	r3, r3
-	.loc 2 2666 0
+	.loc 2 2714 0
 	cmp	r3, r1
-	.loc 2 2665 0
+	.loc 2 2713 0
 	strb	r3, [r4, #6]
-	.loc 2 2667 0
+	.loc 2 2715 0
 	ldrheq	r3, [r4, #2]
-	.loc 2 2668 0
+	.loc 2 2716 0
 	strbeq	r2, [r4, #6]
-	.loc 2 2667 0
+	.loc 2 2715 0
 	addeq	r3, r3, #1
 	strheq	r3, [r4, #2]	@ movhi
-	.loc 2 2670 0
+	.loc 2 2718 0
 	ldrb	r3, [r4, #6]	@ zero_extendqisi2
 	add	r3, r4, r3, lsl #1
 	ldrh	r0, [r3, #16]
-	b	.L310
-.L321:
+	b	.L300
+.L311:
 	.align	2
-.L320:
-	.word	.LANCHOR1+137
+.L310:
+	.word	.LANCHOR1+111
 	.word	.LC1
 	.word	.LANCHOR0
-.LFE240:
-	.fnend
+.LFE250:
 	.size	get_new_active_ppa, .-get_new_active_ppa
 	.align	2
 	.global	FtlGcBufInit
@@ -4715,56 +4090,48 @@ get_new_active_ppa:
 	.fpu softvfp
 	.type	FtlGcBufInit, %function
 FtlGcBufInit:
-	.fnstart
-.LFB243:
+.LFB253:
 	.file 5 "drivers/rkflash/rksftl/sftl_gc.c"
 	.loc 5 22 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI153:
-	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
-.LCFI154:
-	.setfp fp, ip, #-4
+.LCFI144:
+	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
+.LCFI145:
 	sub	fp, ip, #4
-.LCFI155:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 5 22 0
+.LCFI146:
+	.loc 5 25 0
+	ldr	r3, .L317
 	.loc 5 27 0
 	mov	lr, #12
 	mov	r4, #1
-	.loc 5 25 0
-	ldr	r3, .L327
 	.loc 5 30 0
 	mov	r5, #20
 	.loc 5 25 0
 	mov	r2, #0
-	str	r2, [r3, #3144]
-.L323:
+	str	r2, [r3, #3140]
+.L313:
 	.loc 5 26 0 discriminator 1
 	ldrh	r1, [r3, #8]
 	uxth	r0, r2
 	add	ip, r2, #1
 	cmp	r0, r1
-	bcc	.L324
+	bcc	.L314
 	.loc 5 35 0 discriminator 1
 	mov	ip, #12
 	mov	lr, #0
-.L325:
+.L315:
 	.loc 5 34 0 discriminator 1
-	ldr	r2, [r3, #3164]
+	ldr	r2, [r3, #3160]
 	cmp	r1, r2
-	bcc	.L326
+	bcc	.L316
 	.loc 5 39 0
-	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
-.L324:
+	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
+.L314:
 	uxth	r2, r2
 	.loc 5 27 0 discriminator 3
-	ldr	r6, [r3, #3148]
+	ldr	r6, [r3, #3144]
 	mul	r0, lr, r2
 	add	r1, r6, r0
 	str	r4, [r1, #8]
@@ -4774,24 +4141,24 @@ FtlGcBufInit:
 	add	r7, r1, #3
 	cmp	r1, #0
 	movlt	r1, r7
-	ldr	r7, [r3, #3152]
+	ldr	r7, [r3, #3148]
 	bic	r1, r1, #3
 	add	r1, r7, r1
 	str	r1, [r6, r0]
 	.loc 5 29 0 discriminator 3
 	ldrh	r1, [r3, #88]
-	ldr	r7, [r3, #3148]
+	ldr	r7, [r3, #3144]
 	mul	r1, r2, r1
 	add	r6, r7, r0
 	add	r8, r1, #3
 	cmp	r1, #0
 	movlt	r1, r8
-	ldr	r8, [r3, #3156]
+	ldr	r8, [r3, #3152]
 	bic	r1, r1, #3
 	add	r1, r8, r1
 	str	r1, [r6, #4]
 	.loc 5 30 0 discriminator 3
-	ldr	r1, [r3, #3160]
+	ldr	r1, [r3, #3156]
 	mla	r2, r5, r2, r1
 	ldr	r1, [r7, r0]
 	str	r1, [r2, #8]
@@ -4799,11 +4166,11 @@ FtlGcBufInit:
 	ldr	r1, [r6, #4]
 	str	r1, [r2, #12]
 	mov	r2, ip
-	b	.L323
-.L326:
+	b	.L313
+.L316:
 	.loc 5 35 0 discriminator 3
 	mul	r4, ip, r1
-	ldr	r5, [r3, #3148]
+	ldr	r5, [r3, #3144]
 	add	r2, r5, r4
 	str	lr, [r2, #8]
 	.loc 5 36 0 discriminator 3
@@ -4812,13 +4179,13 @@ FtlGcBufInit:
 	add	r0, r2, #3
 	cmp	r2, #0
 	movlt	r2, r0
-	ldr	r0, [r3, #3152]
+	ldr	r0, [r3, #3148]
 	bic	r2, r2, #3
 	add	r2, r0, r2
 	str	r2, [r5, r4]
 	.loc 5 37 0 discriminator 3
 	ldrh	r2, [r3, #88]
-	ldr	r0, [r3, #3148]
+	ldr	r0, [r3, #3144]
 	mul	r2, r1, r2
 	add	r0, r0, r4
 	.loc 5 34 0 discriminator 3
@@ -4828,17 +4195,16 @@ FtlGcBufInit:
 	add	r4, r2, #3
 	cmp	r2, #0
 	movlt	r2, r4
-	ldr	r4, [r3, #3156]
+	ldr	r4, [r3, #3152]
 	bic	r2, r2, #3
 	add	r2, r4, r2
 	str	r2, [r0, #4]
-	b	.L325
-.L328:
+	b	.L315
+.L318:
 	.align	2
-.L327:
+.L317:
 	.word	.LANCHOR0
-.LFE243:
-	.fnend
+.LFE253:
 	.size	FtlGcBufInit, .-FtlGcBufInit
 	.align	2
 	.global	FtlGcBufFree
@@ -4847,52 +4213,43 @@ FtlGcBufInit:
 	.fpu softvfp
 	.type	FtlGcBufFree, %function
 FtlGcBufFree:
-	.fnstart
-.LFB244:
+.LFB254:
 	.loc 5 42 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL314:
-	.movsp ip
+.LVL313:
 	mov	ip, sp
-.LCFI156:
-	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI157:
-	.setfp fp, ip, #-4
+.LCFI147:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+.LCFI148:
 	sub	fp, ip, #4
-.LCFI158:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 5 42 0
+.LCFI149:
+	.loc 5 47 0
+	ldr	r3, .L326
 	.loc 5 46 0
 	mov	lr, #0
 	.loc 5 48 0
 	mov	r5, #20
-	.loc 5 47 0
-	ldr	r3, .L336
-	.loc 5 48 0
 	mov	r7, #12
 	.loc 5 49 0
 	mov	r8, lr
 	.loc 5 47 0
-	ldr	r6, [r3, #3164]
+	ldr	r6, [r3, #3160]
 	.loc 5 48 0
-	ldr	r4, [r3, #3148]
-.L330:
+	ldr	r4, [r3, #3144]
+.L320:
 	uxth	r3, lr
 	.loc 5 46 0 discriminator 1
 	cmp	r1, r3
-	ldmfdls	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+	ldmfdls	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
 	.loc 5 48 0
 	mla	ip, r5, r3, r0
 	mov	r2, #0
-.L331:
+.L321:
 	uxth	r3, r2
 	.loc 5 47 0 discriminator 1
 	cmp	r6, r3
-	bls	.L332
+	bls	.L322
 	.loc 5 48 0
 	mul	r3, r7, r3
 	add	r2, r2, #1
@@ -4900,18 +4257,17 @@ FtlGcBufFree:
 	add	r9, r4, r3
 	ldr	r3, [ip, #8]
 	cmp	r10, r3
-	bne	.L331
+	bne	.L321
 	.loc 5 49 0
 	str	r8, [r9, #8]
-.L332:
+.L322:
 	add	lr, lr, #1
-	b	.L330
-.L337:
+	b	.L320
+.L327:
 	.align	2
-.L336:
+.L326:
 	.word	.LANCHOR0
-.LFE244:
-	.fnend
+.LFE254:
 	.size	FtlGcBufFree, .-FtlGcBufFree
 	.align	2
 	.global	FtlGcBufAlloc
@@ -4920,59 +4276,51 @@ FtlGcBufFree:
 	.fpu softvfp
 	.type	FtlGcBufAlloc, %function
 FtlGcBufAlloc:
-	.fnstart
-.LFB245:
+.LFB255:
 	.loc 5 57 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL315:
-	.movsp ip
+.LVL314:
 	mov	ip, sp
-.LCFI159:
+.LCFI150:
 	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
-.LCFI160:
-	.setfp fp, ip, #-4
+.LCFI151:
 	sub	fp, ip, #4
-.LCFI161:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 5 57 0
+.LCFI152:
+	.loc 5 62 0
+	ldr	r3, .L335
 	.loc 5 61 0
 	mov	ip, #0
 	.loc 5 63 0
 	mov	r6, #12
-	.loc 5 62 0
-	ldr	r3, .L345
 	.loc 5 64 0
 	mov	r7, #1
 	.loc 5 65 0
 	mov	r8, #20
 	.loc 5 62 0
-	ldr	r4, [r3, #3164]
+	ldr	r4, [r3, #3160]
 	.loc 5 63 0
-	ldr	r5, [r3, #3148]
-.L339:
+	ldr	r5, [r3, #3144]
+.L329:
 	uxth	r2, ip
 	.loc 5 61 0 discriminator 1
 	cmp	r1, r2
-	bhi	.L343
+	bhi	.L333
 	.loc 5 71 0
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
-.L343:
+.L333:
 	mov	lr, #0
-.L340:
+.L330:
 	uxth	r3, lr
 	.loc 5 62 0 discriminator 1
 	cmp	r4, r3
-	bls	.L341
+	bls	.L331
 	.loc 5 63 0
 	mla	r3, r6, r3, r5
 	add	lr, lr, #1
 	ldr	r9, [r3, #8]
 	cmp	r9, #0
-	bne	.L340
+	bne	.L330
 	.loc 5 65 0
 	mla	r2, r8, r2, r0
 	ldr	lr, [r3]
@@ -4983,15 +4331,14 @@ FtlGcBufAlloc:
 	.loc 5 66 0
 	ldr	r3, [r3, #4]
 	str	r3, [r2, #12]
-.L341:
+.L331:
 	add	ip, ip, #1
-	b	.L339
-.L346:
+	b	.L329
+.L336:
 	.align	2
-.L345:
+.L335:
 	.word	.LANCHOR0
-.LFE245:
-	.fnend
+.LFE255:
 	.size	FtlGcBufAlloc, .-FtlGcBufAlloc
 	.align	2
 	.global	IsBlkInGcList
@@ -5000,57 +4347,51 @@ FtlGcBufAlloc:
 	.fpu softvfp
 	.type	IsBlkInGcList, %function
 IsBlkInGcList:
-	.fnstart
-.LFB246:
+.LFB256:
 	.loc 5 74 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL316:
-	.movsp ip
+.LVL315:
 	mov	ip, sp
-.LCFI162:
+.LCFI153:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI163:
-	.setfp fp, ip, #-4
+.LCFI154:
 	sub	fp, ip, #4
-.LCFI164:
-	push	{lr}
-	bl	__gnu_mcount_nc
+.LCFI155:
+	.loc 5 78 0
+	ldr	r2, .L342
 	.loc 5 74 0
-	.loc 5 77 0
-	movw	r1, #3172
+	uxth	r0, r0
 	.loc 5 78 0
-	ldr	r2, .L352
-	ldr	r3, [r2, #3168]
-	ldrh	r2, [r2, r1]
+	ldr	r3, [r2, #3164]
+	.loc 5 77 0
+	add	r2, r2, #3168
+	ldrh	r2, [r2]
 	add	r2, r3, r2, lsl #1
-.L348:
-	.loc 5 77 0 discriminator 1
+.L338:
+	.loc 5 77 0 is_stmt 0 discriminator 1
 	cmp	r3, r2
-	bne	.L350
-	.loc 5 81 0
+	bne	.L340
+	.loc 5 81 0 is_stmt 1
 	mov	r0, #0
-.LVL317:
+.LVL316:
 	ldmfd	sp, {fp, sp, pc}
-.LVL318:
-.L350:
+.LVL317:
+.L340:
 	.loc 5 78 0
 	ldrh	r1, [r3], #2
 	cmp	r1, r0
-	bne	.L348
+	bne	.L338
 	.loc 5 79 0
 	mov	r0, #1
-.LVL319:
+.LVL318:
 	.loc 5 82 0
 	ldmfd	sp, {fp, sp, pc}
-.L353:
+.L343:
 	.align	2
-.L352:
+.L342:
 	.word	.LANCHOR0
-.LFE246:
-	.fnend
+.LFE256:
 	.size	IsBlkInGcList, .-IsBlkInGcList
 	.align	2
 	.global	FtlGcUpdatePage
@@ -5059,98 +4400,85 @@ IsBlkInGcList:
 	.fpu softvfp
 	.type	FtlGcUpdatePage, %function
 FtlGcUpdatePage:
-	.fnstart
-.LFB247:
+.LFB257:
 	.loc 5 85 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL320:
-	.movsp ip
+.LVL319:
 	mov	ip, sp
-.LCFI165:
-	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI166:
-	.setfp fp, ip, #-4
+.LCFI156:
+	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
+.LCFI157:
 	sub	fp, ip, #4
-.LCFI167:
-	push	{lr}
-	bl	__gnu_mcount_nc
+.LCFI158:
 	.loc 5 85 0
 	mov	r4, r0
 	.loc 5 88 0
 	ubfx	r0, r0, #10, #16
-.LVL321:
+.LVL320:
 	.loc 5 85 0
 	mov	r5, r1
 	mov	r6, r2
 	.loc 5 88 0
 	bl	P2V_block_in_plane
-.LVL322:
+.LVL321:
 	.loc 5 91 0
-	ldr	r3, .L358
-	movw	r2, #3172
+	ldr	r3, .L348
 	mov	ip, #0
-	ldrh	lr, [r3, r2]
+	add	lr, r3, #3168
 	.loc 5 92 0
-	ldr	r2, [r3, #3168]
-	sub	r1, r2, #2
+	ldr	r1, [r3, #3164]
+	.loc 5 91 0
+	ldrh	r7, [lr]
+	sub	r2, r1, #2
+.LVL322:
+.L345:
+	uxth	r8, ip
 .LVL323:
-.L355:
-	uxth	r7, ip
-.LVL324:
-	.loc 5 91 0 discriminator 1
-	cmp	r7, lr
-	bcc	.L357
-	.loc 5 96 0
-	bne	.L356
-	.loc 5 97 0
-	lsl	ip, r7, #1
-.LVL325:
+	.loc 5 91 0 is_stmt 0 discriminator 1
+	cmp	r8, r7
+	bcc	.L347
+	.loc 5 97 0 is_stmt 1
+	moveq	ip, r8
+	lsleq	ip, ip, #1
+	strheq	r0, [r1, ip]	@ movhi
 	.loc 5 98 0
-	movw	r1, #3172
-	.loc 5 97 0
-	strh	r0, [r2, ip]	@ movhi
-	.loc 5 98 0
-	ldrh	r2, [r3, r1]
-	add	r2, r2, #1
-	strh	r2, [r3, r1]	@ movhi
-	b	.L356
-.LVL326:
-.L357:
+	ldrheq	r2, [lr]
+	addeq	r2, r2, #1
+	strheq	r2, [lr]	@ movhi
+	b	.L346
+.L347:
 	.loc 5 92 0
-	ldrh	r7, [r1, #2]!
-.LVL327:
+	ldrh	r8, [r2, #2]!
+.LVL324:
 	add	ip, ip, #1
-	cmp	r7, r0
-	bne	.L355
-.LVL328:
-.L356:
+	cmp	r8, r0
+	bne	.L345
+.LVL325:
+.L346:
 	.loc 5 101 0
-	movw	ip, #3180
+	movw	ip, #3176
 	mov	r0, #12
-.LVL329:
+.LVL326:
 	ldrh	r2, [r3, ip]
 	mul	r0, r0, r2
-	ldr	r2, [r3, #3176]
+	ldr	r2, [r3, #3172]
 	add	r1, r2, r0
 	.loc 5 102 0
 	stmib	r1, {r5, r6}
-.LVL330:
+.LVL327:
 	.loc 5 103 0
 	str	r4, [r2, r0]
 	.loc 5 107 0
 	ldrh	r2, [r3, ip]
 	add	r2, r2, #1
 	strh	r2, [r3, ip]	@ movhi
-	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L359:
+	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
+.L349:
 	.align	2
-.L358:
+.L348:
 	.word	.LANCHOR0
-.LFE247:
-	.fnend
+.LFE257:
 	.size	FtlGcUpdatePage, .-FtlGcUpdatePage
 	.align	2
 	.global	FtlGcRefreshBlock
@@ -5159,65 +4487,57 @@ FtlGcUpdatePage:
 	.fpu softvfp
 	.type	FtlGcRefreshBlock, %function
 FtlGcRefreshBlock:
-	.fnstart
-.LFB254:
+.LFB264:
 	.loc 5 345 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL331:
-	.movsp ip
+.LVL328:
 	mov	ip, sp
-.LCFI168:
-	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI169:
-	.setfp fp, ip, #-4
+.LCFI159:
+	push	{r4, fp, ip, lr, pc}
+.LCFI160:
 	sub	fp, ip, #4
-.LCFI170:
-	push	{lr}
-	bl	__gnu_mcount_nc
+.LCFI161:
 	.loc 5 345 0
-	mov	r4, r0
+	uxth	r4, r0
+.LVL329:
 	.loc 5 347 0
-	mov	r1, r0
-	ldr	r0, .L363
-.LVL332:
+	ldr	r0, .L353
+	mov	r1, r4
 	bl	printk
-.LVL333:
+.LVL330:
 	.loc 5 349 0
-	ldr	r3, .L363+4
-	movw	ip, #3182
+	ldr	r3, .L353+4
+	movw	ip, #3178
 	ldrh	lr, [r3, ip]
 	cmp	r4, lr
-	beq	.L361
+	beq	.L351
 	.loc 5 349 0 is_stmt 0 discriminator 1
-	add	r2, r3, #3184
-	ldrh	r0, [r2]
+	movw	r2, #3180
+	ldrh	r0, [r3, r2]
 	cmp	r4, r0
-	beq	.L361
+	beq	.L351
 	.loc 5 351 0 is_stmt 1
 	movw	r1, #65535
 	cmp	lr, r1
 	.loc 5 352 0
 	strheq	r4, [r3, ip]	@ movhi
 	.loc 5 351 0
-	beq	.L361
+	beq	.L351
 	.loc 5 353 0
 	cmp	r0, r1
 	.loc 5 354 0
-	strheq	r4, [r2]	@ movhi
-.L361:
+	strheq	r4, [r3, r2]	@ movhi
+.L351:
 	.loc 5 356 0
 	mov	r0, #0
-	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L364:
+	ldmfd	sp, {r4, fp, sp, pc}
+.L354:
 	.align	2
-.L363:
+.L353:
 	.word	.LC73
 	.word	.LANCHOR0
-.LFE254:
-	.fnend
+.LFE264:
 	.size	FtlGcRefreshBlock, .-FtlGcRefreshBlock
 	.align	2
 	.global	FtlGcMarkBadPhyBlk
@@ -5226,86 +4546,79 @@ FtlGcRefreshBlock:
 	.fpu softvfp
 	.type	FtlGcMarkBadPhyBlk, %function
 FtlGcMarkBadPhyBlk:
-	.fnstart
-.LFB255:
+.LFB265:
 	.loc 5 359 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL334:
-	.movsp ip
+.LVL331:
 	mov	ip, sp
-.LCFI171:
+.LCFI162:
 	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI172:
-	.setfp fp, ip, #-4
+.LCFI163:
 	sub	fp, ip, #4
-.LCFI173:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 5 359 0
+.LCFI164:
 	.loc 5 364 0
-	movw	r6, #3186
+	ldr	r4, .L359
 	.loc 5 359 0
-	mov	r5, r0
+	uxth	r5, r0
+.LVL332:
 	.loc 5 364 0
-	ldr	r4, .L369
+	movw	r6, #3182
 	.loc 5 361 0
+	mov	r0, r5
 	bl	P2V_block_in_plane
-.LVL335:
+.LVL333:
 	.loc 5 364 0
 	mov	r2, r5
 	.loc 5 361 0
 	mov	r7, r0
 	.loc 5 364 0
 	ldrh	r1, [r4, r6]
-	ldr	r0, .L369+4
+	ldr	r0, .L359+4
 	bl	printk
-.LVL336:
+.LVL334:
 	.loc 5 366 0
 	mov	r0, r7
 	bl	FtlGcRefreshBlock
-.LVL337:
+.LVL335:
 	.loc 5 368 0
 	ldrh	r3, [r4, r6]
 	mov	r2, #0
 	.loc 5 369 0
-	ldr	r0, .L369+8
-.L366:
+	add	r0, r4, #3184
+.L356:
 	.loc 5 368 0 discriminator 1
 	uxth	r1, r2
 	cmp	r3, r1
-	bhi	.L368
+	bhi	.L358
 	.loc 5 372 0
 	cmp	r3, #15
 	.loc 5 373 0
-	movwls	r2, #3186
+	movwls	r2, #3182
 	addls	r1, r3, #1
 	strhls	r1, [r4, r2]	@ movhi
 	lslls	r3, r3, #1
-	ldrls	r2, .L369+8
+	ldrls	r2, .L359+8
 	strhls	r5, [r2, r3]	@ movhi
-	b	.L367
-.L368:
+	b	.L357
+.L358:
 	add	r2, r2, #1
 	.loc 5 369 0
 	add	r1, r0, r2, lsl #1
 	ldrh	r1, [r1, #-2]
 	cmp	r1, r5
-	bne	.L366
-.L367:
+	bne	.L356
+.L357:
 	.loc 5 375 0
 	mov	r0, #0
 	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L370:
+.L360:
 	.align	2
-.L369:
+.L359:
 	.word	.LANCHOR0
 	.word	.LC74
-	.word	.LANCHOR0+3188
-.LFE255:
-	.fnend
+	.word	.LANCHOR0+3184
+.LFE265:
 	.size	FtlGcMarkBadPhyBlk, .-FtlGcMarkBadPhyBlk
 	.align	2
 	.global	FtlGcReFreshBadBlk
@@ -5314,78 +4627,69 @@ FtlGcMarkBadPhyBlk:
 	.fpu softvfp
 	.type	FtlGcReFreshBadBlk, %function
 FtlGcReFreshBadBlk:
-	.fnstart
-.LFB256:
+.LFB266:
 	.loc 5 379 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI174:
+.LCFI165:
 	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI175:
-	.setfp fp, ip, #-4
+.LCFI166:
 	sub	fp, ip, #4
-.LCFI176:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 5 379 0
+.LCFI167:
 	.loc 5 380 0
-	movw	r3, #3186
-	ldr	r4, .L377
+	ldr	r4, .L367
+	movw	r3, #3182
 	ldrh	r2, [r4, r3]
 	cmp	r2, #0
-	beq	.L372
+	beq	.L362
 	.loc 5 380 0 is_stmt 0 discriminator 1
-	movw	r3, #3182
+	movw	r3, #3178
 	ldrh	r1, [r4, r3]
 	movw	r3, #65535
 	cmp	r1, r3
-	bne	.L372
+	bne	.L362
 	.loc 5 381 0 is_stmt 1
-	movw	r3, #3222
-.LBB290:
-.LBB291:
+	movw	r3, #3218
+.LBB293:
+.LBB294:
 	.loc 5 383 0
-	movw	r5, #3222
-.LBE291:
-.LBE290:
+	movw	r5, #3218
+.LBE294:
+.LBE293:
 	.loc 5 381 0
 	ldrh	r1, [r4, r3]
 	cmp	r1, r2
 	.loc 5 382 0
 	movcs	r2, #0
 	strhcs	r2, [r4, r3]	@ movhi
-.LBB293:
-.LBB292:
+.LBB296:
+.LBB295:
 	.loc 5 383 0
 	ldrh	r3, [r4, r5]
-	ldr	r2, .L377+4
+	ldr	r2, .L367+4
 	lsl	r3, r3, #1
 	ldrh	r0, [r2, r3]
 	bl	P2V_block_in_plane
-.LVL338:
+.LVL336:
 	bl	FtlGcRefreshBlock
-.LVL339:
+.LVL337:
 	.loc 5 384 0
 	ldrh	r3, [r4, r5]
 	add	r3, r3, #1
 	strh	r3, [r4, r5]	@ movhi
-.L372:
-.LBE292:
-.LBE293:
+.L362:
+.LBE295:
+.LBE296:
 	.loc 5 387 0
 	mov	r0, #0
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L378:
+.L368:
 	.align	2
-.L377:
+.L367:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+3188
-.LFE256:
-	.fnend
+	.word	.LANCHOR0+3184
+.LFE266:
 	.size	FtlGcReFreshBadBlk, .-FtlGcReFreshBadBlk
 	.align	2
 	.global	FlashReadPages
@@ -5394,146 +4698,138 @@ FtlGcReFreshBadBlk:
 	.fpu softvfp
 	.type	FlashReadPages, %function
 FlashReadPages:
-	.fnstart
-.LFB262:
+.LFB272:
 	.loc 1 44 0
-	@ args = 0, pretend = 0, frame = 16
+	@ args = 0, pretend = 0, frame = 12
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL340:
-	.movsp ip
+.LVL338:
 	mov	ip, sp
-.LCFI177:
+.LCFI168:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI178:
-	.setfp fp, ip, #-4
+.LCFI169:
 	sub	fp, ip, #4
-.LCFI179:
-	.pad #20
-	sub	sp, sp, #20
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 1 44 0
+.LCFI170:
+	sub	sp, sp, #12
+	.loc 1 50 0
+	mov	r6, #0
+.LVL339:
 	.loc 1 46 0
-	ldr	r3, .L397
+	ldr	r5, .L387
 	.loc 1 44 0
-	mov	r7, r1
+	mov	r8, r1
 	.loc 1 51 0
-	ldr	r8, .L397+4
+	ldr	r9, .L387+4
 	mov	r4, r0
-	ldr	r9, .L397+8
-	.loc 1 50 0
-	mov	r5, #0
-.LVL341:
+	ldr	r10, .L387+8
 	.loc 1 46 0
-	ldrh	r10, [r3, #12]
-.LVL342:
-	str	r3, [fp, #-56]
-.LVL343:
-.L380:
+	ldrh	r3, [r5, #12]
+.LVL340:
+	str	r3, [fp, #-52]
+.LVL341:
+.L370:
 	.loc 1 50 0 discriminator 1
-	cmp	r5, r7
-	bne	.L387
+	cmp	r6, r8
+	bne	.L377
 	.loc 1 71 0
 	mov	r0, #0
-.LVL344:
+.LVL342:
 	sub	sp, fp, #40
-.LCFI180:
+.LCFI171:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL345:
-.L387:
-.LCFI181:
+.LVL343:
+.L377:
+.LCFI172:
 	.loc 1 51 0
 	ldr	r3, [r4, #8]
+.LVL344:
 	cmp	r3, #0
-	beq	.L381
+	beq	.L371
 	.loc 1 51 0 is_stmt 0 discriminator 2
 	ldr	r3, [r4, #12]
 	cmp	r3, #0
-	bne	.L382
-.L381:
+	bne	.L372
+.L371:
 	.loc 1 51 0 discriminator 3
 	mov	r2, #51
+.LVL345:
+	mov	r1, r9
+	mov	r0, r10
 .LVL346:
-	mov	r1, r8
-	mov	r0, r9
-.LVL347:
 	bl	printk
-.LVL348:
-.L382:
+.LVL347:
+.L372:
 	.loc 1 53 0 is_stmt 1
-	ldr	r6, .L397+12
+	ldr	r7, .L387+12
 	.loc 1 52 0
-	sub	r2, fp, #52
-.LVL349:
-	sub	r1, fp, #48
+	sub	r2, fp, #48
+.LVL348:
+	sub	r1, fp, #44
 	mov	r0, r4
-.LVL350:
+.LVL349:
 	bl	l2p_addr_tran
-.LVL351:
+.LVL350:
 	.loc 1 53 0
 	ldr	r3, [r4, #12]
+	ldr	ip, [r7, #12]
 	ldr	r2, [r4, #8]
-	ldr	r1, [fp, #-48]
-	ldrb	r0, [fp, #-52]	@ zero_extendqisi2
-	ldr	ip, [r6, #12]
+	ldr	r1, [fp, #-44]
+	ldrb	r0, [fp, #-48]	@ zero_extendqisi2
 	blx	ip
-.LVL352:
-	.loc 1 58 0
-	ldr	r3, [fp, #-56]
+.LVL351:
 	.loc 1 57 0
 	str	r0, [r4]
 	.loc 1 58 0
-	ldrh	r3, [r3, #14]
+	ldrh	r3, [r5, #14]
 	cmp	r3, #4
-	bne	.L384
+	bne	.L374
 	.loc 1 59 0
+	ldr	r0, [fp, #-52]
+.LVL352:
 	ldr	r3, [r4, #12]
 	ldr	r2, [r4, #8]
-	ldr	r1, [fp, #-48]
-	ldr	r6, [r6, #12]
+	ldr	r1, [fp, #-44]
+	ldr	ip, [r7, #12]
 	add	r3, r3, #8
 	add	r2, r2, #2048
-	ldrb	r0, [fp, #-52]	@ zero_extendqisi2
-	add	r1, r10, r1
-	blx	r6
+	add	r1, r0, r1
+	ldrb	r0, [fp, #-48]	@ zero_extendqisi2
 .LVL353:
+	blx	ip
+.LVL354:
 	.loc 1 63 0
 	cmn	r0, #1
-	beq	.L385
+	beq	.L375
 	.loc 1 64 0 discriminator 1
 	ldr	r3, [r4, #12]
 	.loc 1 63 0 discriminator 1
 	ldr	r2, [r3, #12]
 	cmn	r2, #1
-	bne	.L384
+	bne	.L374
 	.loc 1 64 0
 	ldr	r2, [r3, #8]
 	cmn	r2, #1
-	bne	.L384
+	bne	.L374
 	.loc 1 65 0
 	ldr	r3, [r3]
 	cmn	r3, #1
-	beq	.L384
-.L385:
+	beq	.L374
+.L375:
 	.loc 1 67 0
 	mvn	r3, #0
 	str	r3, [r4]
-.L384:
+.L374:
 	.loc 1 50 0 discriminator 2
-	add	r5, r5, #1
+	add	r6, r6, #1
 	add	r4, r4, #20
-	b	.L380
-.L398:
+	b	.L370
+.L388:
 	.align	2
-.L397:
+.L387:
 	.word	g_nand_phy_info
-	.word	.LANCHOR1+156
+	.word	.LANCHOR1+130
 	.word	.LC1
 	.word	g_nand_ops
-.LFE262:
-	.fnend
+.LFE272:
 	.size	FlashReadPages, .-FlashReadPages
 	.align	2
 	.global	FtlLoadFactoryBbt
@@ -5542,68 +4838,60 @@ FlashReadPages:
 	.fpu softvfp
 	.type	FtlLoadFactoryBbt, %function
 FtlLoadFactoryBbt:
-	.fnstart
-.LFB170:
+.LFB180:
 	.loc 4 279 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI182:
-	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI183:
-	.setfp fp, ip, #-4
+.LCFI173:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+.LCFI174:
 	sub	fp, ip, #4
-.LCFI184:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 4 279 0
+.LCFI175:
+	.loc 4 286 0
+	ldr	r4, .L399
 	.loc 4 289 0
 	mov	r6, #0
-.LVL354:
+.LVL355:
 	.loc 4 290 0
 	mvn	r9, #0
-	.loc 4 286 0
-	ldr	r4, .L409
 	.loc 4 294 0
-	ldr	r10, .L409+4
+	ldr	r10, .L399+4
 	.loc 4 286 0
-	ldr	r3, [r4, #2244]
+	ldr	r3, [r4, #3240]
 	add	r7, r4, #138
 	.loc 4 287 0
 	ldr	r8, [r4, #3244]
 	.loc 4 286 0
-	str	r3, [r4, #3232]
+	str	r3, [r4, #3228]
 	.loc 4 287 0
-	str	r8, [r4, #3236]
-.LVL355:
-.L400:
+	str	r8, [r4, #3232]
+.LVL356:
+.L390:
 	.loc 4 289 0 discriminator 1
 	ldrh	r3, [r4, #30]
 	cmp	r6, r3
-	bcc	.L405
+	bcc	.L395
 	.loc 4 314 0
 	mov	r0, #0
-	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.L405:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.L395:
 	.loc 4 291 0
 	ldrh	r5, [r4, #74]
-.LVL356:
+.LVL357:
 	.loc 4 290 0
 	strh	r9, [r7, #2]!	@ movhi
-.LVL357:
-.L402:
+.LVL358:
+.L392:
 	.loc 4 291 0 discriminator 2
 	ldrh	r3, [r4, #74]
 	sub	r5, r5, #1
-.LVL358:
-	uxth	r5, r5
 .LVL359:
+	uxth	r5, r5
+.LVL360:
 	sub	r2, r3, #16
 	cmp	r5, r2
-	ble	.L403
+	ble	.L393
 	.loc 4 292 0
 	mla	r3, r6, r3, r5
 	.loc 4 294 0
@@ -5612,34 +4900,33 @@ FtlLoadFactoryBbt:
 	mov	r0, r10
 	.loc 4 292 0
 	lsl	r3, r3, #10
-.LVL360:
+.LVL361:
 	.loc 4 293 0
-	str	r3, [r4, #3228]
+	str	r3, [r4, #3224]
 	.loc 4 294 0
 	bl	FlashReadPages
-.LVL361:
+.LVL362:
 	.loc 4 295 0
-	ldr	r3, [r4, #3224]
+	ldr	r3, [r4, #3220]
 	cmn	r3, #1
-	beq	.L402
+	beq	.L392
 	.loc 4 301 0
 	ldrh	r2, [r8]
 	movw	r3, #61664
 	cmp	r2, r3
-	bne	.L402
+	bne	.L392
 	.loc 4 303 0
 	strh	r5, [r7]	@ movhi
-.L403:
+.L393:
 	.loc 4 289 0 discriminator 2
 	add	r6, r6, #1
-	b	.L400
-.L410:
+	b	.L390
+.L400:
 	.align	2
-.L409:
+.L399:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+3224
-.LFE170:
-	.fnend
+	.word	.LANCHOR0+3220
+.LFE180:
 	.size	FtlLoadFactoryBbt, .-FtlLoadFactoryBbt
 	.align	2
 	.global	FtlGetLastWrittenPage
@@ -5648,124 +4935,114 @@ FtlLoadFactoryBbt:
 	.fpu softvfp
 	.type	FtlGetLastWrittenPage, %function
 FtlGetLastWrittenPage:
-	.fnstart
-.LFB176:
+.LFB186:
 	.loc 2 47 0
-	@ args = 0, pretend = 0, frame = 88
+	@ args = 0, pretend = 0, frame = 84
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL362:
-	.movsp ip
+.LVL363:
 	mov	ip, sp
-.LCFI185:
+.LCFI176:
 	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, fp, ip, lr}
-.LCFI186:
-	.setfp fp, ip, #-4
+.LCFI177:
 	sub	fp, ip, #4
-.LCFI187:
-	.pad #92
-	sub	sp, sp, #92
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 47 0
-	ldr	r3, .L419
+.LCFI178:
+	sub	sp, sp, #84
 	.loc 2 51 0
 	cmp	r1, #1
+	ldr	r3, .L409
 	.loc 2 57 0
-	lsl	r7, r0, #10
+	lsl	r6, r0, #10
 	.loc 2 58 0
 	mov	r2, r1
 	.loc 2 47 0
-	mov	r6, r1
+	mov	r7, r1
+	.loc 2 58 0
+	sub	r0, fp, #116
+.LVL364:
 	.loc 2 51 0
-	ldrheq	r5, [r3, #80]
+	ldrheq	r4, [r3, #80]
 	.loc 2 58 0
 	mov	r1, #1
-.LVL363:
+.LVL365:
 	.loc 2 51 0
-	ldrhne	r5, [r3, #78]
-	.loc 2 58 0
-	sub	r0, fp, #120
-.LVL364:
+	ldrhne	r4, [r3, #78]
 	.loc 2 53 0
-	ldr	r3, .L419+4
+	ldr	r3, .L409+4
 	.loc 2 56 0
-	sub	r5, r5, #1
-	sxth	r5, r5
-.LVL365:
+	sub	r4, r4, #1
+	sxth	r5, r4
+.LVL366:
 	.loc 2 53 0
-	str	r3, [fp, #-112]
-	.loc 2 54 0
-	sub	r3, fp, #100
 	str	r3, [fp, #-108]
+	.loc 2 54 0
+	sub	r3, fp, #96
+	str	r3, [fp, #-104]
 	.loc 2 57 0
-	orr	r3, r5, r7
-	str	r3, [fp, #-116]
+	orr	r3, r5, r6
+	str	r3, [fp, #-112]
 	.loc 2 58 0
 	bl	FlashReadPages
-.LVL366:
+.LVL367:
 	.loc 2 59 0
-	ldr	r3, [fp, #-100]
+	ldr	r3, [fp, #-96]
 	cmn	r3, #1
 	moveq	r8, #0
-.LVL367:
-	beq	.L415
-.L414:
+.LVL368:
+	beq	.L405
+.L404:
 	.loc 2 73 0
 	mov	r0, r5
 	sub	sp, fp, #32
-.LCFI188:
+.LCFI179:
 	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
-.LVL368:
-.L418:
-.LCFI189:
+.LVL369:
+.L408:
+.LCFI180:
 	.loc 2 61 0
-	add	r3, r8, r5
+	add	r4, r8, r5
 	.loc 2 63 0
-	mov	r2, r6
+	mov	r2, r7
 	.loc 2 61 0
-	add	r3, r3, r3, lsr #31
+	add	r4, r4, r4, lsr #31
 	.loc 2 63 0
 	mov	r1, #1
-	sub	r0, fp, #120
+	sub	r0, fp, #116
 	.loc 2 61 0
-	asr	r4, r3, #1
+	asr	r4, r4, #1
 	.loc 2 62 0
 	sxth	r3, r4
-	orr	r3, r3, r7
-	str	r3, [fp, #-116]
+	orr	r3, r3, r6
+	str	r3, [fp, #-112]
 	.loc 2 63 0
 	bl	FlashReadPages
-.LVL369:
+.LVL370:
 	.loc 2 65 0
-	ldr	r3, [fp, #-100]
+	ldr	r3, [fp, #-96]
 	cmn	r3, #1
-	bne	.L416
+	bne	.L406
 	.loc 2 65 0 is_stmt 0 discriminator 1
-	ldr	r3, [fp, #-96]
+	ldr	r3, [fp, #-92]
 	cmn	r3, #1
 	.loc 2 66 0 is_stmt 1 discriminator 1
 	subeq	r4, r4, #1
 	sxtheq	r5, r4
 	.loc 2 65 0 discriminator 1
-	beq	.L415
-.L416:
+	beq	.L405
+.L406:
 	.loc 2 68 0
 	add	r4, r4, #1
 	sxth	r8, r4
-.L415:
+.L405:
 	.loc 2 60 0
 	cmp	r8, r5
-	ble	.L418
-	b	.L414
-.L420:
+	ble	.L408
+	b	.L404
+.L410:
 	.align	2
-.L419:
+.L409:
 	.word	.LANCHOR0
 	.word	ftl_temp_buf
-.LFE176:
-	.fnend
+.LFE186:
 	.size	FtlGetLastWrittenPage, .-FtlGetLastWrittenPage
 	.align	2
 	.global	FlashProgPages
@@ -5774,96 +5051,91 @@ FtlGetLastWrittenPage:
 	.fpu softvfp
 	.type	FlashProgPages, %function
 FlashProgPages:
-	.fnstart
-.LFB263:
+.LFB273:
 	.loc 1 74 0
-	@ args = 0, pretend = 0, frame = 40
+	@ args = 0, pretend = 0, frame = 36
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL370:
-	.movsp ip
+.LVL371:
 	mov	ip, sp
-.LCFI190:
+.LCFI181:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI191:
-	.setfp fp, ip, #-4
+.LCFI182:
 	sub	fp, ip, #4
-.LCFI192:
-	.pad #44
-	sub	sp, sp, #44
-	push	{lr}
-	bl	__gnu_mcount_nc
+.LCFI183:
+	sub	sp, sp, #36
 	.loc 1 74 0
 	mov	r8, r3
 	.loc 1 76 0
-	ldr	r3, .L451
-.LVL371:
+	ldr	r3, .L441
+.LVL372:
 	.loc 1 74 0
 	mov	r7, r2
+	.loc 1 81 0
+	ldr	r10, .L441+4
+	.loc 1 74 0
 	mov	r9, r1
 	mov	r4, r0
 	.loc 1 80 0
 	mov	r5, r0
-.LVL372:
+.LVL373:
 	.loc 1 76 0
 	ldrh	r2, [r3, #12]
-.LVL373:
+.LVL374:
 	.loc 1 80 0
 	mov	r6, #0
-	str	r3, [fp, #-84]
+	str	r3, [fp, #-76]
 	.loc 1 76 0
-	str	r2, [fp, #-80]
-.LVL374:
-.L422:
+	str	r2, [fp, #-72]
+.LVL375:
+.L412:
 	.loc 1 80 0 discriminator 1
 	cmp	r6, r9
-	bne	.L430
+	bne	.L420
 	.loc 1 101 0
 	cmp	r8, #0
-	bne	.L437
-.L450:
+	bne	.L427
+.L440:
 	.loc 1 131 0
 	mov	r0, #0
 	sub	sp, fp, #40
-.LCFI193:
+.LCFI184:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL375:
-.L430:
-.LCFI194:
+.LVL376:
+.L420:
+.LCFI185:
 	.loc 1 81 0
 	ldr	r3, [r5, #8]
 	cmp	r3, #0
-	beq	.L423
+	beq	.L413
 	.loc 1 81 0 is_stmt 0 discriminator 2
 	ldr	r3, [r5, #12]
 	cmp	r3, #0
-	bne	.L424
-.L423:
+	bne	.L414
+.L413:
 	.loc 1 81 0 discriminator 3
 	mov	r2, #81
-.LVL376:
-	ldr	r1, .L451+4
-	ldr	r0, .L451+8
-	bl	printk
 .LVL377:
-.L424:
-	.loc 1 82 0 is_stmt 1
-	sub	r2, fp, #72
+	ldr	r1, .L441+8
+	mov	r0, r10
+	bl	printk
 .LVL378:
-	sub	r1, fp, #68
+.L414:
+	.loc 1 82 0 is_stmt 1
+	sub	r2, fp, #68
+.LVL379:
+	sub	r1, fp, #64
 	mov	r0, r5
 	bl	l2p_addr_tran
-.LVL379:
+.LVL380:
 	.loc 1 83 0
-	ldr	r3, .L451+12
+	ldr	r3, .L441+12
 	ldr	r2, [r5, #8]
-	ldr	r1, [fp, #-68]
-	ldr	r10, [r3, #8]
-	ldrb	r0, [fp, #-72]	@ zero_extendqisi2
+	ldr	r1, [fp, #-64]
+	ldr	ip, [r3, #8]
+	ldrb	r0, [fp, #-68]	@ zero_extendqisi2
 	ldr	r3, [r5, #12]
-	blx	r10
-.LVL380:
+	blx	ip
+.LVL381:
 	.loc 1 88 0
 	cmp	r0, #0
 	.loc 1 89 0
@@ -5873,150 +5145,149 @@ FlashProgPages:
 	.loc 1 89 0
 	strne	r3, [r5]
 	.loc 1 91 0
-	ldr	r3, [fp, #-84]
+	ldr	r3, [fp, #-76]
 	ldrh	r3, [r3, #14]
 	cmp	r3, #4
-	bne	.L428
+	bne	.L418
 	.loc 1 92 0
-	ldr	r1, .L451+12
-	ldr	r0, [fp, #-80]
-.LVL381:
+	ldr	r1, .L441+12
+	ldr	r0, [fp, #-72]
+.LVL382:
 	ldr	r3, [r5, #12]
 	ldr	r2, [r5, #8]
-	ldr	r10, [r1, #8]
-	ldr	r1, [fp, #-68]
+	ldr	ip, [r1, #8]
+	ldr	r1, [fp, #-64]
 	add	r3, r3, #8
 	add	r2, r2, #2048
 	add	r1, r0, r1
-	ldrb	r0, [fp, #-72]	@ zero_extendqisi2
-.LVL382:
-	blx	r10
+	ldrb	r0, [fp, #-68]	@ zero_extendqisi2
 .LVL383:
+	blx	ip
+.LVL384:
 	.loc 1 96 0
 	cmp	r0, #0
 	.loc 1 97 0
 	mvnne	r3, #0
 	strne	r3, [r5]
-.L428:
+.L418:
 	.loc 1 80 0 discriminator 2
 	add	r6, r6, #1
 	add	r5, r5, #20
-	b	.L422
-.LVL384:
-.L435:
-.LBB294:
-	.loc 1 106 0
-	ldr	r9, .L451+16
+	b	.L412
 .LVL385:
+.L425:
+.LBB297:
+	.loc 1 106 0
+	ldr	r9, .L441+16
+.LVL386:
 	mov	r3, #0
 	.loc 1 107 0
 	str	r3, [r8, #3248]
 	.loc 1 112 0
 	mov	r2, r7
-.LVL386:
-	mov	r1, #1
 .LVL387:
-	sub	r0, fp, #64
+	mov	r1, #1
+.LVL388:
+	sub	r0, fp, #60
 	.loc 1 106 0
 	str	r3, [r9]
 	.loc 1 108 0
 	ldr	r3, [r4, #4]
 	.loc 1 109 0
-	str	r9, [fp, #-56]
+	str	r9, [fp, #-52]
 	.loc 1 110 0
-	str	r10, [fp, #-52]
+	str	r10, [fp, #-48]
 	.loc 1 108 0
-	str	r3, [fp, #-60]
+	str	r3, [fp, #-56]
 	.loc 1 112 0
 	bl	FlashReadPages
-.LVL388:
+.LVL389:
 	.loc 1 113 0
-	ldr	r3, [fp, #-64]
+	ldr	r3, [fp, #-60]
 	cmn	r3, #1
-	bne	.L432
+	bne	.L422
 	.loc 1 114 0
 	ldr	r1, [r4, #4]
-	ldr	r0, .L451+20
-	str	r3, [fp, #-80]
+	ldr	r0, .L441+20
+	str	r3, [fp, #-72]
 	bl	printk
-.LVL389:
+.LVL390:
 	.loc 1 115 0
-	ldr	r3, [fp, #-80]
+	ldr	r3, [fp, #-72]
 	str	r3, [r4]
-.L432:
+.L422:
 	.loc 1 117 0
 	ldr	r3, [r4, #12]
 	cmp	r3, #0
-	beq	.L433
+	beq	.L423
 	.loc 1 118 0
 	ldr	r2, [r3]
 	ldr	r3, [r8, #3248]
 	cmp	r2, r3
-	beq	.L433
+	beq	.L423
 	.loc 1 119 0
 	ldr	r1, [r4, #4]
-	ldr	r0, .L451+24
+	ldr	r0, .L441+24
 	bl	printk
-.LVL390:
+.LVL391:
 	.loc 1 120 0
 	mvn	r3, #0
 	str	r3, [r4]
-.L433:
+.L423:
 	.loc 1 123 0
 	ldr	r3, [r4, #8]
 	cmp	r3, #0
-	beq	.L434
+	beq	.L424
 	.loc 1 124 0
 	ldr	r2, [r3]
 	ldr	r3, [r9]
 	cmp	r2, r3
-	beq	.L434
+	beq	.L424
 	.loc 1 125 0
 	ldr	r1, [r4, #4]
-	ldr	r0, .L451+28
+	ldr	r0, .L441+28
 	bl	printk
-.LVL391:
+.LVL392:
 	.loc 1 126 0
 	mvn	r3, #0
 	str	r3, [r4]
-.L434:
-.LBE294:
+.L424:
+.LBE297:
 	.loc 1 103 0 discriminator 2
 	add	r5, r5, #1
 	add	r4, r4, #20
-.LVL392:
-.L431:
+.LVL393:
+.L421:
 	.loc 1 103 0 is_stmt 0 discriminator 1
 	cmp	r6, r5
-	bne	.L435
-	b	.L450
-.LVL393:
-.L437:
-.LBB295:
-	.loc 1 107 0 is_stmt 1
-	ldr	r8, .L451+32
+	bne	.L425
+	b	.L440
 .LVL394:
-.LBE295:
+.L427:
+.LBB298:
+	.loc 1 107 0 is_stmt 1
+	ldr	r8, .L441+32
+.LVL395:
+.LBE298:
 	mov	r5, #0
-.LBB296:
+.LBB299:
 	.loc 1 110 0
 	add	r10, r8, #3248
-	b	.L431
-.L452:
+	b	.L421
+.L442:
 	.align	2
-.L451:
+.L441:
 	.word	g_nand_phy_info
-	.word	.LANCHOR1+171
 	.word	.LC1
+	.word	.LANCHOR1+145
 	.word	g_nand_ops
 	.word	check_buf
 	.word	.LC75
 	.word	.LC76
 	.word	.LC77
 	.word	.LANCHOR0
-.LBE296:
-.LFE263:
-	.fnend
+.LBE299:
+.LFE273:
 	.size	FlashProgPages, .-FlashProgPages
 	.align	2
 	.global	FlashEraseBlocks
@@ -6025,69 +5296,60 @@ FlashProgPages:
 	.fpu softvfp
 	.type	FlashEraseBlocks, %function
 FlashEraseBlocks:
-	.fnstart
-.LFB264:
+.LFB274:
 	.loc 1 134 0
 	@ args = 0, pretend = 0, frame = 8
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL395:
-	.movsp ip
+.LVL396:
 	mov	ip, sp
-.LCFI195:
+.LCFI186:
 	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
-.LCFI196:
-	.setfp fp, ip, #-4
+.LCFI187:
 	sub	fp, ip, #4
-.LCFI197:
-	.pad #8
+.LCFI188:
 	sub	sp, sp, #8
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 1 134 0
+	.loc 1 140 0
+	mov	r5, #0
+.LVL397:
 	.loc 1 137 0
-	ldr	r3, .L464
+	ldr	r3, .L454
 	.loc 1 134 0
 	mov	r8, r2
 	.loc 1 142 0
-	ldr	r7, .L464+4
+	ldr	r7, .L454+4
 	mov	r4, r0
-	.loc 1 140 0
-	mov	r6, #0
-.LVL396:
 	.loc 1 137 0
 	ldrh	r9, [r3, #12]
-.LVL397:
-	mov	r5, r3
 .LVL398:
-.L454:
+	mov	r6, r3
+.LVL399:
+.L444:
 	.loc 1 140 0 discriminator 1
-	cmp	r6, r8
-	bne	.L460
+	cmp	r5, r8
+	bne	.L450
 	.loc 1 153 0
 	mov	r0, #0
-.LVL399:
+.LVL400:
 	sub	sp, fp, #36
-.LCFI198:
+.LCFI189:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
-.LVL400:
-.L460:
-.LCFI199:
+.LVL401:
+.L450:
+.LCFI190:
 	.loc 1 141 0
 	sub	r2, fp, #44
 	sub	r1, fp, #40
-.LVL401:
-	mov	r0, r4
 .LVL402:
-	bl	l2p_addr_tran
+	mov	r0, r4
 .LVL403:
+	bl	l2p_addr_tran
+.LVL404:
 	.loc 1 142 0
 	ldr	r3, [r7, #4]
 	ldr	r1, [fp, #-40]
 	ldrb	r0, [fp, #-44]	@ zero_extendqisi2
 	blx	r3
-.LVL404:
+.LVL405:
 	.loc 1 144 0
 	cmp	r0, #0
 	.loc 1 145 0
@@ -6097,33 +5359,32 @@ FlashEraseBlocks:
 	.loc 1 145 0
 	strne	r3, [r4]
 	.loc 1 146 0
-	ldrh	r3, [r5, #14]
+	ldrh	r3, [r6, #14]
 	cmp	r3, #4
-	bne	.L458
+	bne	.L448
 	.loc 1 147 0
 	ldr	r1, [fp, #-40]
 	ldr	r3, [r7, #4]
 	ldrb	r0, [fp, #-44]	@ zero_extendqisi2
 	add	r1, r9, r1
 	blx	r3
-.LVL405:
+.LVL406:
 	.loc 1 148 0
 	cmp	r0, #0
 	.loc 1 149 0
 	mvnne	r3, #0
 	strne	r3, [r4]
-.L458:
+.L448:
 	.loc 1 140 0 discriminator 2
-	add	r6, r6, #1
+	add	r5, r5, #1
 	add	r4, r4, #20
-	b	.L454
-.L465:
+	b	.L444
+.L455:
 	.align	2
-.L464:
+.L454:
 	.word	g_nand_phy_info
 	.word	g_nand_ops
-.LFE264:
-	.fnend
+.LFE274:
 	.size	FlashEraseBlocks, .-FlashEraseBlocks
 	.align	2
 	.global	FtlFreeSysBlkQueueIn
@@ -6132,91 +5393,96 @@ FlashEraseBlocks:
 	.fpu softvfp
 	.type	FtlFreeSysBlkQueueIn, %function
 FtlFreeSysBlkQueueIn:
-	.fnstart
-.LFB180:
+.LFB190:
 	.loc 2 98 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL406:
-	.movsp ip
+.LVL407:
 	mov	ip, sp
-.LCFI200:
-	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI201:
-	.setfp fp, ip, #-4
+.LCFI191:
+	push	{r4, r5, r6, fp, ip, lr, pc}
+.LCFI192:
 	sub	fp, ip, #4
-.LCFI202:
-	push	{lr}
-	bl	__gnu_mcount_nc
+.LCFI193:
 	.loc 2 98 0
-	mov	r6, r0
-.LBB297:
-.LBB298:
-	.loc 2 94 0
-	ldr	r4, .L475
-.LBE298:
-.LBE297:
+	uxth	r5, r0
+.LVL408:
+	.loc 2 99 0
+	movw	r2, #65533
+	.loc 2 98 0
+	uxth	r1, r1
 	.loc 2 99 0
+	sub	r3, r5, #1
+	uxth	r3, r3
+	cmp	r3, r2
+	ldmfdhi	sp, {r4, r5, r6, fp, sp, pc}
+.LBB308:
+.LBB309:
+	.loc 2 94 0
+	ldr	r4, .L465
+.LBE309:
+.LBE308:
+	.loc 2 101 0
 	ldrh	r3, [r4, #194]
 	cmp	r3, #1024
-	ldmfdeq	sp, {r4, r5, r6, r7, fp, sp, pc}
-.LBB299:
-	.loc 2 101 0
+	ldmfdeq	sp, {r4, r5, r6, fp, sp, pc}
+.LBB310:
+.LBB311:
+	.loc 2 103 0
 	cmp	r1, #0
-	beq	.L468
-.LBB300:
-	.loc 2 102 0
+	beq	.L458
+.LBB312:
+	.loc 2 104 0
+	mov	r0, r5
 	bl	P2V_block_in_plane
-.LVL407:
-	mov	r5, r0
-	.loc 2 103 0
+.LVL409:
+	mov	r6, r0
+	.loc 2 105 0
 	ldr	r0, [r4, #3760]
-	lsl	r3, r6, #10
-	.loc 2 104 0
+	lsl	r3, r5, #10
+	.loc 2 106 0
 	mov	r2, #1
 	mov	r1, r2
-	.loc 2 103 0
+	.loc 2 105 0
 	str	r3, [r0, #4]
-	.loc 2 104 0
+	.loc 2 106 0
 	bl	FlashEraseBlocks
-.LVL408:
-	.loc 2 105 0
-	ldr	r2, [r4, #2248]
-	lsl	r0, r5, #1
+.LVL410:
+	.loc 2 107 0
+	ldr	r2, [r4, #2304]
+	lsl	r0, r6, #1
 	ldrh	r3, [r2, r0]
 	add	r3, r3, #1
 	strh	r3, [r2, r0]	@ movhi
-	.loc 2 106 0
-	ldr	r3, [r4, #2492]
-	add	r3, r3, #1
-	str	r3, [r4, #2492]
-.LVL409:
-.L468:
-.LBE300:
 	.loc 2 108 0
+	ldr	r3, [r4, #2536]
+	add	r3, r3, #1
+	str	r3, [r4, #2536]
+.LVL411:
+.L458:
+.LBE312:
+	.loc 2 110 0
 	ldrh	r3, [r4, #194]
 	add	r3, r3, #1
 	strh	r3, [r4, #194]	@ movhi
-	.loc 2 109 0
+	.loc 2 111 0
 	ldrh	r3, [r4, #192]
 	add	r2, r4, r3, lsl #1
-	.loc 2 110 0
+	.loc 2 112 0
 	add	r3, r3, #1
 	ubfx	r3, r3, #0, #10
-	.loc 2 109 0
-	strh	r6, [r2, #196]	@ movhi
-	.loc 2 110 0
+	.loc 2 111 0
+	strh	r5, [r2, #196]	@ movhi
+	.loc 2 112 0
 	strh	r3, [r4, #192]	@ movhi
-	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L476:
+	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
+.L466:
 	.align	2
-.L475:
+.L465:
 	.word	.LANCHOR0
-.LBE299:
-.LFE180:
-	.fnend
+.LBE311:
+.LBE310:
+.LFE190:
 	.size	FtlFreeSysBlkQueueIn, .-FtlFreeSysBlkQueueIn
 	.align	2
 	.global	FtlLowFormatEraseBlock
@@ -6225,55 +5491,53 @@ FtlFreeSysBlkQueueIn:
 	.fpu softvfp
 	.type	FtlLowFormatEraseBlock, %function
 FtlLowFormatEraseBlock:
-	.fnstart
-.LFB149:
+.LFB159:
 	.loc 3 528 0
 	@ args = 0, pretend = 0, frame = 24
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL410:
-	.movsp ip
+.LVL412:
 	mov	ip, sp
-.LCFI203:
+.LCFI194:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI204:
-	.setfp fp, ip, #-4
+.LCFI195:
 	sub	fp, ip, #4
-.LCFI205:
-	.pad #28
-	sub	sp, sp, #28
-	push	{lr}
-	bl	__gnu_mcount_nc
+.LCFI196:
+	sub	sp, sp, #24
 	.loc 3 528 0
-	.loc 3 538 0
-	ldr	r3, .L519
+	uxth	r3, r0
+.LVL413:
 	.loc 3 539 0
 	mov	r10, #0
 	.loc 3 528 0
-	mov	r6, r1
+	uxtb	r6, r1
+.LVL414:
+	str	r3, [fp, #-48]
 	.loc 3 536 0
 	mov	r5, r10
+	.loc 3 538 0
+	ldr	r3, .L509
+.LVL415:
 	.loc 3 537 0
 	mov	r4, r10
-.LVL411:
+.LVL416:
+	.loc 3 538 0
+	ldr	r2, [fp, #-48]
+.LVL417:
 	.loc 3 540 0
 	mov	r9, #20
 	mov	r8, r3
-	.loc 3 528 0
-	str	r0, [fp, #-52]
 	.loc 3 538 0
-	str	r0, [r3, #3764]
-.L478:
+	str	r2, [r3, #3764]
+.L468:
 	.loc 3 539 0 discriminator 1
-	ldrh	r0, [r8, #8]
-.LVL412:
-	uxth	r1, r10
-	cmp	r0, r1
-	bhi	.L482
+	ldrh	r1, [r8, #8]
+	uxth	r2, r10
+.LVL418:
+	cmp	r1, r2
+	bhi	.L472
 	.loc 3 559 0
 	cmp	r5, #0
-	beq	.L477
+	beq	.L467
 	.loc 3 563 0
 	mov	r7, #0
 	.loc 3 564 0
@@ -6283,270 +5547,273 @@ FtlLowFormatEraseBlock:
 	mov	r1, #0
 	ldr	r0, [r8, #3760]
 	bl	FlashEraseBlocks
-.LVL413:
-.L485:
+.LVL419:
+.L475:
 	.loc 3 563 0 discriminator 1
 	uxth	r2, r7
 	cmp	r5, r2
-	bhi	.L487
-.L488:
+	bhi	.L477
+.L478:
 	.loc 3 571 0
 	cmp	r6, #0
-	.loc 3 578 0
-	ldr	r7, .L519
 	.loc 3 573 0
 	ldrhne	r3, [r8, #80]
-.LVL414:
+.LVL420:
 	.loc 3 533 0
 	moveq	r3, #6
-.LVL415:
-	streq	r3, [fp, #-64]
+.LVL421:
+	.loc 3 578 0
+	ldr	r8, .L509
+	.loc 3 533 0
+	streq	r3, [fp, #-60]
 	.loc 3 531 0
 	moveq	r3, #1
-.LVL416:
-	mov	r10, r7
-	streq	r3, [fp, #-56]
+.LVL422:
 	.loc 3 573 0
-	strne	r3, [fp, #-56]
+	strne	r3, [fp, #-52]
 	.loc 3 574 0
 	lsrne	r3, r3, #2
-.LVL417:
-	.loc 3 534 0
-	streq	r6, [fp, #-60]
+.LVL423:
+	mov	r10, r8
+.LVL424:
+	.loc 3 531 0
+	streq	r3, [fp, #-52]
 	.loc 3 574 0
-	strne	r3, [fp, #-64]
+	strne	r3, [fp, #-60]
 	.loc 3 572 0
 	movne	r3, #1
-.LVL418:
-	strne	r3, [fp, #-60]
+.LVL425:
+	strne	r3, [fp, #-56]
 	mov	r3, #0
-.LVL419:
-	str	r3, [fp, #-48]
-.LVL420:
-.L497:
+.LVL426:
+	.loc 3 534 0
+	streq	r6, [fp, #-56]
+	str	r3, [fp, #-44]
+.LVL427:
+.L487:
 	.loc 3 578 0
-	mov	r8, #0
+	mov	r7, #0
 	.loc 3 577 0
-	mov	r5, r8
-.L489:
+	mov	r5, r7
+.L479:
 	.loc 3 578 0 discriminator 1
-	ldrh	r1, [r7, #8]
-	uxth	r3, r8
-.LVL421:
+	ldrh	r1, [r8, #8]
+	uxth	r3, r7
+.LVL428:
 	cmp	r1, r3
-	bhi	.L492
+	bhi	.L482
 	.loc 3 593 0
 	cmp	r5, #0
-	beq	.L477
+	beq	.L467
 	.loc 3 596 0
-	ldr	r2, [fp, #-60]
-.LVL422:
+	ldr	r2, [fp, #-56]
+.LVL429:
 	mov	r3, #1
 	mov	r1, r5
-	ldr	r0, [r7, #3760]
+	ldr	r0, [r8, #3760]
 	bl	FlashProgPages
-.LVL423:
+.LVL430:
 	.loc 3 597 0
 	mov	r9, #0
 	.loc 3 598 0
 	mov	r2, #20
-.L494:
+.L484:
 	.loc 3 597 0 discriminator 1
 	uxth	r3, r9
 	cmp	r5, r3
-	bhi	.L496
+	bhi	.L486
 	.loc 3 604 0
-	ldr	r3, [fp, #-48]
-.LVL424:
-	ldr	r2, [fp, #-64]
-.LVL425:
-	add	r3, r3, r2
-.LVL426:
-	uxth	r3, r3
-.LVL427:
-	str	r3, [fp, #-48]
+	ldr	r3, [fp, #-44]
+.LVL431:
+	ldr	r2, [fp, #-60]
+.LVL432:
+	add	r7, r3, r2
+	uxth	r3, r7
+	str	r3, [fp, #-44]
 	.loc 3 605 0
-	ldr	r2, [fp, #-48]
-.LVL428:
-	ldr	r3, [fp, #-56]
-.LVL429:
+	ldr	r2, [fp, #-44]
+.LVL433:
+	ldr	r3, [fp, #-52]
+.LVL434:
 	cmp	r3, r2
-	bhi	.L497
+	bhi	.L487
 	mov	r7, #0
 	.loc 3 611 0 discriminator 1
 	mov	r9, #20
-.L498:
+.L488:
 	.loc 3 610 0 discriminator 1
 	uxth	r3, r7
-.LVL430:
+.LVL435:
 	cmp	r5, r3
-	bhi	.L500
+	bhi	.L490
 	.loc 3 615 0
-	ldr	r3, [fp, #-52]
-.LVL431:
+	ldr	r3, [fp, #-48]
+.LVL436:
 	adds	r6, r6, #0
-.LVL432:
+.LVL437:
 	movne	r6, #1
 	cmp	r3, #63
 	movhi	r8, r6
 	orrls	r8, r6, #1
 	cmp	r8, #0
-	beq	.L477
+	beq	.L467
 	.loc 3 616 0
 	mov	r2, r5
-.LVL433:
-	ldr	r1, [fp, #-60]
+.LVL438:
+	ldr	r1, [fp, #-56]
 	ldr	r0, [r10, #3760]
 	bl	FlashEraseBlocks
-.LVL434:
-.L477:
+.LVL439:
+.L467:
 	.loc 3 619 0
 	mov	r0, r4
 	sub	sp, fp, #40
-.LCFI206:
+.LCFI197:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL435:
-.L482:
-.LCFI207:
+.LVL440:
+.L472:
+.LCFI198:
 	.loc 3 540 0
-	uxth	r1, r10
-	ldr	ip, [r8, #3760]
+	uxth	r2, r10
+	ldr	r0, [r8, #3760]
 	mov	r3, #0
-	mul	r0, r9, r1
-	str	r3, [ip, r0]
+	mul	r1, r9, r2
 	.loc 3 541 0
-	add	r0, r8, r1
-	ldrb	r0, [r0, #36]	@ zero_extendqisi2
-	ldr	r1, [fp, #-52]
+	add	r2, r8, r2
+	.loc 3 540 0
+	str	r3, [r0, r1]
+	.loc 3 541 0
+	ldr	r1, [fp, #-48]
+	ldrb	r0, [r2, #36]	@ zero_extendqisi2
 	bl	V2P_block
-.LVL436:
+.LVL441:
 	.loc 3 543 0
 	cmp	r6, #0
 	.loc 3 541 0
 	mov	r7, r0
 	.loc 3 543 0
-	beq	.L479
+	beq	.L469
 	.loc 3 544 0
 	bl	IsBlkInVendorPart
-.LVL437:
+.LVL442:
 	cmp	r0, #0
-	bne	.L480
-.L479:
+	bne	.L470
+.L469:
 	.loc 3 548 0
 	mov	r0, r7
 	bl	FtlBbmIsBadBlock
-.LVL438:
+.LVL443:
 	cmp	r0, #0
 	.loc 3 554 0
 	addne	r4, r4, #1
-.LVL439:
+.LVL444:
 	uxthne	r4, r4
-.LVL440:
+.LVL445:
 	.loc 3 548 0
-	bne	.L480
+	bne	.L470
 	.loc 3 549 0
-	ldr	r0, [r8, #3760]
+	ldr	r1, [r8, #3760]
 	lsl	r7, r7, #10
 	.loc 3 550 0
-	ldr	r1, [r8, #3768]
+	ldr	r2, [r8, #3768]
 	.loc 3 549 0
-	mla	r0, r9, r5, r0
+	mla	r1, r9, r5, r1
 	.loc 3 550 0
-	str	r1, [r0, #8]
+	str	r2, [r1, #8]
 	.loc 3 551 0
-	ldrh	r1, [r8, #88]
+	ldrh	r2, [r8, #88]
 	.loc 3 549 0
-	str	r7, [r0, #4]
+	str	r7, [r1, #4]
 	.loc 3 551 0
-	mul	r1, r5, r1
+	mul	r2, r5, r2
 	.loc 3 552 0
 	add	r5, r5, #1
 	uxth	r5, r5
 	.loc 3 551 0
-	add	ip, r1, #3
-	cmp	r1, #0
-	movlt	r1, ip
-	ldr	ip, [r8, #3772]
-	bic	r1, r1, #3
-	add	r1, ip, r1
-	str	r1, [r0, #12]
-.L480:
+	add	r0, r2, #3
+	cmp	r2, #0
+	movlt	r2, r0
+	ldr	r0, [r8, #3772]
+	bic	r2, r2, #3
+	add	r2, r0, r2
+	str	r2, [r1, #12]
+.L470:
 	add	r10, r10, #1
-	b	.L478
-.L487:
+	b	.L468
+.L477:
 	.loc 3 564 0
 	mul	r2, r9, r7
 	ldr	r1, [r8, #3760]
 	add	r0, r1, r2
 	ldr	r2, [r1, r2]
 	cmn	r2, #1
-	bne	.L486
+	bne	.L476
 	.loc 3 566 0
 	ldr	r0, [r0, #4]
 	.loc 3 565 0
 	add	r4, r4, #1
-.LVL441:
+.LVL446:
 	uxth	r4, r4
-.LVL442:
+.LVL447:
 	.loc 3 566 0
 	ubfx	r0, r0, #10, #16
 	bl	FtlBbmMapBadBlock
-.LVL443:
-.L486:
+.LVL448:
+.L476:
 	add	r7, r7, #1
-	b	.L485
-.LVL444:
-.L492:
+	b	.L475
+.LVL449:
+.L482:
 	.loc 3 579 0
-	uxth	r3, r8
+	uxth	r3, r7
 	mov	r2, #20
-.LVL445:
-	ldr	r0, [r7, #3760]
+.LVL450:
+	ldr	r0, [r8, #3760]
 	mul	r1, r2, r3
 	mov	r2, #0
 	.loc 3 580 0
-	add	r3, r7, r3
+	add	r3, r8, r3
 	.loc 3 579 0
 	str	r2, [r0, r1]
 	.loc 3 580 0
-	ldr	r1, [fp, #-52]
+	ldr	r1, [fp, #-48]
 	ldrb	r0, [r3, #36]	@ zero_extendqisi2
 	bl	V2P_block
-.LVL446:
+.LVL451:
 	.loc 3 581 0
 	cmp	r6, #0
 	.loc 3 580 0
 	mov	r9, r0
 	.loc 3 581 0
-	beq	.L490
+	beq	.L480
 	.loc 3 582 0
 	bl	IsBlkInVendorPart
-.LVL447:
+.LVL452:
 	cmp	r0, #0
-	bne	.L491
-.L490:
+	bne	.L481
+.L480:
 	.loc 3 585 0
 	mov	r0, r9
 	bl	FtlBbmIsBadBlock
-.LVL448:
+.LVL453:
 	cmp	r0, #0
-	bne	.L491
+	bne	.L481
 	.loc 3 586 0
-	ldr	r1, [r7, #3760]
+	ldr	r1, [r8, #3760]
 	mov	r3, #20
 	mla	r1, r3, r5, r1
-	ldr	r3, [fp, #-48]
-.LVL449:
+	ldr	r3, [fp, #-44]
+.LVL454:
 	add	r9, r3, r9, lsl #10
 	.loc 3 587 0
-	ldr	r3, [r7, #3776]
-.LVL450:
+	ldr	r3, [r8, #3776]
+.LVL455:
 	.loc 3 586 0
 	str	r9, [r1, #4]
 	.loc 3 587 0
 	str	r3, [r1, #8]
 	.loc 3 588 0
-	ldrh	r3, [r7, #88]
+	ldrh	r3, [r8, #88]
 	mul	r3, r5, r3
 	.loc 3 589 0
 	add	r5, r5, #1
@@ -6555,167 +5822,372 @@ FtlLowFormatEraseBlock:
 	add	r0, r3, #3
 	cmp	r3, #0
 	movlt	r3, r0
-	ldr	r0, [r7, #3768]
+	ldr	r0, [r8, #3768]
 	bic	r3, r3, #3
 	add	r3, r0, r3
 	str	r3, [r1, #12]
-.L491:
-	add	r8, r8, #1
-	b	.L489
-.L496:
+.L481:
+	add	r7, r7, #1
+	b	.L479
+.L486:
 	.loc 3 598 0
 	mul	r3, r2, r9
 	ldr	r1, [r10, #3760]
 	add	r0, r1, r3
 	ldr	r3, [r1, r3]
 	cmp	r3, #0
-	beq	.L495
+	beq	.L485
 	.loc 3 600 0
 	ldr	r0, [r0, #4]
 	.loc 3 599 0
 	add	r4, r4, #1
-.LVL451:
-	str	r2, [fp, #-68]
+.LVL456:
+	str	r2, [fp, #-64]
 	uxth	r4, r4
-.LVL452:
+.LVL457:
 	.loc 3 600 0
 	ubfx	r0, r0, #10, #16
 	bl	FtlBbmMapBadBlock
-.LVL453:
-	ldr	r2, [fp, #-68]
-.L495:
+.LVL458:
+	ldr	r2, [fp, #-64]
+.L485:
 	add	r9, r9, #1
-	b	.L494
-.LVL454:
-.L500:
+	b	.L484
+.LVL459:
+.L490:
 	.loc 3 611 0
 	cmp	r6, #0
-	beq	.L499
+	beq	.L489
 	.loc 3 611 0 is_stmt 0 discriminator 1
 	mul	r3, r9, r7
 	ldr	r2, [r10, #3760]
-.LVL455:
+.LVL460:
 	add	r1, r2, r3
 	ldr	r3, [r2, r3]
 	cmp	r3, #0
-	bne	.L499
+	bne	.L489
 	.loc 3 612 0 is_stmt 1
 	ldr	r0, [r1, #4]
 	mov	r1, #1
 	ubfx	r0, r0, #10, #16
 	bl	FtlFreeSysBlkQueueIn
-.LVL456:
-.L499:
+.LVL461:
+.L489:
 	add	r7, r7, #1
-	b	.L498
-.L520:
+	b	.L488
+.L510:
 	.align	2
-.L519:
+.L509:
 	.word	.LANCHOR0
-.LFE149:
-	.fnend
+.LFE159:
 	.size	FtlLowFormatEraseBlock, .-FtlLowFormatEraseBlock
 	.align	2
+	.global	FtlFreeSysBlkQueueOut
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlFreeSysBlkQueueOut, %function
+FtlFreeSysBlkQueueOut:
+.LFB193:
+	.loc 2 181 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	mov	ip, sp
+.LCFI199:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+.LCFI200:
+	sub	fp, ip, #4
+.LCFI201:
+.LBB313:
+.LBB314:
+	.loc 2 89 0
+	ldr	r4, .L518
+.LBE314:
+.LBE313:
+	.loc 2 203 0
+	ldr	r6, .L518+4
+.L512:
+.LBB316:
+.LBB315:
+	.loc 2 89 0
+	ldrh	r1, [r4, #194]
+.LBE315:
+.LBE316:
+	.loc 2 186 0
+	cmp	r1, #0
+	beq	.L513
+	.loc 2 187 0
+	ldrh	r3, [r4, #190]
+	.loc 2 188 0
+	sub	r1, r1, #1
+	strh	r1, [r4, #194]	@ movhi
+	.loc 2 187 0
+	add	r2, r4, r3, lsl #1
+	.loc 2 189 0
+	add	r3, r3, #1
+	ubfx	r3, r3, #0, #10
+	.loc 2 187 0
+	ldrh	r5, [r2, #196]
+	.loc 2 189 0
+	strh	r3, [r4, #190]	@ movhi
+.LBB317:
+	.loc 2 191 0
+	mov	r0, r5
+	bl	P2V_block_in_plane
+.LVL462:
+	mov	r7, r0
+	.loc 2 192 0
+	ldr	r0, [r4, #3760]
+	lsl	r3, r5, #10
+	.loc 2 193 0
+	mov	r2, #1
+	mov	r1, r2
+	.loc 2 192 0
+	str	r3, [r0, #4]
+	.loc 2 193 0
+	bl	FlashEraseBlocks
+.LVL463:
+	.loc 2 194 0
+	ldr	r2, [r4, #2304]
+	lsl	r0, r7, #1
+	ldrh	r3, [r2, r0]
+	add	r3, r3, #1
+	strh	r3, [r2, r0]	@ movhi
+.LBE317:
+	.loc 2 202 0
+	movw	r2, #65533
+.LBB318:
+	.loc 2 195 0
+	ldr	r3, [r4, #2536]
+	add	r3, r3, #1
+	str	r3, [r4, #2536]
+.LBE318:
+	.loc 2 202 0
+	sub	r3, r5, #1
+	uxth	r3, r3
+	cmp	r3, r2
+	bls	.L517
+	.loc 2 203 0
+	ldrh	r2, [r4, #194]
+	mov	r1, r5
+	mov	r0, r6
+	bl	printk
+.LVL464:
+	.loc 2 205 0
+	b	.L512
+.L513:
+	.loc 2 199 0
+	ldr	r0, .L518+8
+	bl	printk
+.LVL465:
+.L516:
+	b	.L516
+.L517:
+	.loc 2 208 0
+	mov	r0, r5
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L519:
+	.align	2
+.L518:
+	.word	.LANCHOR0
+	.word	.LC79
+	.word	.LC78
+.LFE193:
+	.size	FtlFreeSysBlkQueueOut, .-FtlFreeSysBlkQueueOut
+	.align	2
+	.global	ftl_map_blk_alloc_new_blk
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	ftl_map_blk_alloc_new_blk, %function
+ftl_map_blk_alloc_new_blk:
+.LFB205:
+	.loc 2 562 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL466:
+	mov	ip, sp
+.LCFI202:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+.LCFI203:
+	sub	fp, ip, #4
+.LCFI204:
+	.loc 2 566 0
+	ldrh	r1, [r0, #10]
+	.loc 2 562 0
+	mov	r4, r0
+	.loc 2 566 0
+	mov	r3, #0
+	ldr	r2, [r0, #12]
+.LVL467:
+.L521:
+	uxth	r5, r3
+	.loc 2 566 0 is_stmt 0 discriminator 1
+	cmp	r5, r1
+	bcs	.L524
+	.loc 2 567 0 is_stmt 1
+	mov	r7, r2
+	add	r3, r3, #1
+	ldrh	r6, [r7]
+	add	r2, r2, #2
+	cmp	r6, #0
+	bne	.L521
+	.loc 2 568 0
+	bl	FtlFreeSysBlkQueueOut
+.LVL468:
+	.loc 2 569 0
+	sub	r3, r0, #1
+	movw	r2, #65533
+	uxth	r3, r3
+	.loc 2 568 0
+	mov	r1, r0
+	strh	r0, [r7]	@ movhi
+	.loc 2 569 0
+	cmp	r3, r2
+	bls	.L522
+	.loc 2 570 0
+	ldr	r3, .L528
+	ldr	r0, .L528+4
+	ldrh	r2, [r3, #194]
+	bl	printk
+.LVL469:
+.L523:
+	b	.L523
+.L522:
+	.loc 2 576 0
+	ldr	r3, [r4, #28]
+	.loc 2 574 0
+	strh	r6, [r4, #2]	@ movhi
+	.loc 2 575 0
+	strh	r5, [r4]	@ movhi
+	.loc 2 576 0
+	add	r3, r3, #1
+	str	r3, [r4, #28]
+	.loc 2 577 0
+	ldrh	r3, [r4, #8]
+	add	r3, r3, #1
+	strh	r3, [r4, #8]	@ movhi
+.LVL470:
+.L524:
+	.loc 2 581 0
+	ldrh	r3, [r4, #10]
+	cmp	r3, r5
+	bhi	.L526
+.LBB321:
+.LBB322:
+	movw	r2, #581
+	ldr	r1, .L528+8
+	ldr	r0, .L528+12
+	bl	printk
+.LVL471:
+.L526:
+.LBE322:
+.LBE321:
+	.loc 2 583 0
+	mov	r0, #0
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L529:
+	.align	2
+.L528:
+	.word	.LANCHOR0
+	.word	.LC80
+	.word	.LANCHOR1+160
+	.word	.LC1
+.LFE205:
+	.size	ftl_map_blk_alloc_new_blk, .-ftl_map_blk_alloc_new_blk
+	.align	2
 	.global	FlashTestBlk
 	.syntax unified
 	.arm
 	.fpu softvfp
 	.type	FlashTestBlk, %function
 FlashTestBlk:
-	.fnstart
-.LFB265:
+.LFB275:
 	.loc 1 156 0
-	@ args = 0, pretend = 0, frame = 88
+	@ args = 0, pretend = 0, frame = 84
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL457:
-	.movsp ip
+.LVL472:
 	mov	ip, sp
-.LCFI208:
+.LCFI205:
 	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI209:
-	.setfp fp, ip, #-4
+.LCFI206:
 	sub	fp, ip, #4
-.LCFI210:
-	.pad #88
-	sub	sp, sp, #88
-	push	{lr}
-	bl	__gnu_mcount_nc
+.LCFI207:
+	sub	sp, sp, #84
 	.loc 1 156 0
+	uxth	r4, r0
+.LVL473:
 	.loc 1 161 0
-	cmp	r0, #11
-	.loc 1 156 0
-	mov	r4, r0
+	cmp	r4, #11
 	.loc 1 162 0
 	movls	r4, #0
+.LVL474:
 	.loc 1 161 0
-	bls	.L521
-.LBB313:
-.LBB314:
+	bls	.L530
+.LBB335:
+.LBB336:
 	.loc 1 165 0
-	ldr	r5, .L524
+	ldr	r5, .L533
 	.loc 1 166 0
 	sub	r0, fp, #84
-.LVL458:
-.LBB315:
-.LBB316:
-.LBB317:
+.LBB337:
+.LBB338:
+.LBB339:
 	.loc 1 202 0
 	mov	r2, #32
 	mov	r1, #165
-.LBE317:
-.LBE316:
-.LBE315:
+.LBE339:
+.LBE338:
+.LBE337:
 	.loc 1 166 0
 	str	r0, [fp, #-92]
-.LVL459:
+.LVL475:
 	.loc 1 169 0
 	lsl	r4, r4, #10
-.LVL460:
+.LVL476:
 	.loc 1 165 0
 	str	r5, [fp, #-96]
-.LBB320:
-.LBB319:
-.LBB318:
+.LBB342:
+.LBB341:
+.LBB340:
 	.loc 1 202 0
 	bl	memset
-.LVL461:
-.LBE318:
-.LBE319:
-.LBE320:
-.LBB321:
-.LBB322:
-.LBB323:
-	ldr	r3, .L524+4
-.LBE323:
-.LBE322:
-.LBE321:
+.LVL477:
+.LBE340:
+.LBE341:
+.LBE342:
+.LBB343:
+.LBB344:
+.LBB345:
+	ldr	r3, .L533+4
+.LBE345:
+.LBE344:
+.LBE343:
 	.loc 1 170 0
 	mov	r2, #1
 	mov	r1, r2
 	sub	r0, fp, #104
 	.loc 1 169 0
 	str	r4, [fp, #-100]
-.LBB326:
-.LBB325:
-.LBB324:
+.LBB348:
+.LBB347:
+.LBB346:
 	.loc 1 202 0
 	str	r3, [r5]
 	str	r3, [r5, #4]
-.LBE324:
-.LBE325:
-.LBE326:
+.LBE346:
+.LBE347:
+.LBE348:
 	.loc 1 170 0
 	bl	FlashEraseBlocks
-.LVL462:
+.LVL478:
 	.loc 1 171 0
 	mov	r3, #1
 	sub	r0, fp, #104
 	mov	r2, r3
 	mov	r1, r3
 	bl	FlashProgPages
-.LVL463:
+.LVL479:
 	.loc 1 172 0
 	ldr	r4, [fp, #-104]
 	.loc 1 178 0
@@ -6728,23 +6200,21 @@ FlashTestBlk:
 	rsb	r4, r4, #0
 	.loc 1 178 0
 	bl	FlashEraseBlocks
-.LVL464:
-.L521:
-.LBE314:
-.LBE313:
+.LVL480:
+.L530:
+.LBE336:
+.LBE335:
 	.loc 1 180 0
 	mov	r0, r4
-.LVL465:
 	sub	sp, fp, #20
-.LCFI211:
+.LCFI208:
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L525:
+.L534:
 	.align	2
-.L524:
+.L533:
 	.word	ftl_temp_buf
 	.word	1515870810
-.LFE265:
-	.fnend
+.LFE275:
 	.size	FlashTestBlk, .-FlashTestBlk
 	.align	2
 	.global	FlashGetBadBlockList
@@ -6753,113 +6223,104 @@ FlashTestBlk:
 	.fpu softvfp
 	.type	FlashGetBadBlockList, %function
 FlashGetBadBlockList:
-	.fnstart
-.LFB266:
+.LFB276:
 	.loc 1 183 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL466:
-	.movsp ip
+.LVL481:
 	mov	ip, sp
-.LCFI212:
+.LCFI209:
 	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI213:
-	.setfp fp, ip, #-4
+.LCFI210:
 	sub	fp, ip, #4
-.LCFI214:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 1 183 0
-.LBB337:
-.LBB338:
-.LBB339:
+.LCFI211:
+.LBB359:
+.LBB360:
+.LBB361:
 	.loc 1 202 0
 	mov	r2, #256
-.LBE339:
-.LBE338:
-.LBE337:
+.LBE361:
+.LBE360:
+.LBE359:
 	.loc 1 183 0
 	mov	r5, r1
-.LBB344:
-.LBB342:
-.LBB340:
+.LBB366:
+.LBB364:
+.LBB362:
 	.loc 1 202 0
 	mov	r1, #255
-.LVL467:
-.LBE340:
-.LBE342:
-.LBE344:
+.LVL482:
+.LBE362:
+.LBE364:
+.LBE366:
 	.loc 1 183 0
 	mov	r4, r0
-.LBB345:
-.LBB343:
-.LBB341:
+.LBB367:
+.LBB365:
+.LBB363:
 	.loc 1 202 0
 	bl	memset
-.LVL468:
-.LBE341:
-.LBE343:
-.LBE345:
+.LVL483:
+.LBE363:
+.LBE365:
+.LBE367:
 	.loc 1 187 0
-	ldr	r3, .L533
+	ldr	r3, .L542
 	mov	r1, r5
 	mov	r0, r4
 	ldr	r3, [r3]
 	blx	r3
-.LVL469:
+.LVL484:
 	uxth	r0, r0
-.LVL470:
+.LVL485:
 	.loc 1 188 0
 	cmp	r0, #50
-	bls	.L527
-.LBB346:
-.LBB347:
-.LBB348:
+	bls	.L536
+.LBB368:
+.LBB369:
+.LBB370:
 	.loc 1 202 0
 	mov	r2, #256
 	mov	r1, #255
 	mov	r0, r4
-.LVL471:
+.LVL486:
 	bl	memset
-.LVL472:
-.LBE348:
-.LBE347:
-.LBE346:
+.LVL487:
+.LBE370:
+.LBE369:
+.LBE368:
 	.loc 1 190 0
 	mov	r0, #0
-.LVL473:
-.L527:
+.LVL488:
+.L536:
 	.loc 1 192 0
-	ldr	r3, .L533+4
-.LVL474:
+	ldr	r3, .L542+4
+.LVL489:
 	ldrh	r3, [r3, #14]
 	cmp	r3, #4
 	moveq	r3, r4
-.LVL475:
+.LVL490:
 	addeq	r1, r3, r0, lsl #1
-	beq	.L529
+	beq	.L538
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L530:
+.L539:
 	.loc 1 194 0 discriminator 3
 	ldrh	r2, [r3]
 	lsr	r2, r2, #1
 	strh	r2, [r3], #2	@ movhi
-.L529:
+.L538:
 	.loc 1 193 0 discriminator 1
 	cmp	r3, r1
-	bne	.L530
-.LVL476:
+	bne	.L539
+.LVL491:
 	.loc 1 198 0
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L534:
+.L543:
 	.align	2
-.L533:
+.L542:
 	.word	g_nand_ops
 	.word	g_nand_phy_info
-.LFE266:
-	.fnend
+.LFE276:
 	.size	FlashGetBadBlockList, .-FlashGetBadBlockList
 	.align	2
 	.global	ftl_memset
@@ -6868,47 +6329,38 @@ FlashGetBadBlockList:
 	.fpu softvfp
 	.type	ftl_memset, %function
 ftl_memset:
-	.fnstart
-.LFB267:
+.LFB277:
 	.loc 1 201 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL477:
-	.movsp ip
+.LVL492:
 	mov	ip, sp
-.LCFI215:
-	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI216:
-	.setfp fp, ip, #-4
+.LCFI212:
+	push	{r4, fp, ip, lr, pc}
+.LCFI213:
 	sub	fp, ip, #4
-.LCFI217:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 1 201 0
-.LBB353:
+.LCFI214:
+.LBB375:
 	.loc 1 202 0
 	cmp	r2, #0
-.LBE353:
+.LBE375:
 	.loc 1 201 0
 	mov	r4, r0
-.LBB354:
+.LBB376:
 	.loc 1 202 0
-	beq	.L536
-.LBE354:
-.LBB355:
-.LBB356:
+	beq	.L545
+.LBE376:
+.LBB377:
+.LBB378:
 	bl	memset
-.LVL478:
-.L536:
-.LBE356:
-.LBE355:
+.LVL493:
+.L545:
+.LBE378:
+.LBE377:
 	.loc 1 203 0 discriminator 8
 	mov	r0, r4
-	ldmfd	sp, {r4, r5, fp, sp, pc}
-.LFE267:
-	.fnend
+	ldmfd	sp, {r4, fp, sp, pc}
+.LFE277:
 	.size	ftl_memset, .-ftl_memset
 	.align	2
 	.global	FtlMemInit
@@ -6917,202 +6369,195 @@ ftl_memset:
 	.fpu softvfp
 	.type	FtlMemInit, %function
 FtlMemInit:
-	.fnstart
-.LFB146:
+.LFB156:
 	.loc 3 279 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI218:
-	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
-.LCFI219:
-	.setfp fp, ip, #-4
+.LCFI215:
+	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
+.LCFI216:
 	sub	fp, ip, #4
-.LCFI220:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 279 0
+.LCFI217:
+	.loc 3 282 0
+	ldr	r4, .L650
 	.loc 3 297 0
 	movw	r3, #65535
 	.loc 3 301 0
-	movw	r2, #3182
+	movw	r2, #3178
 	.loc 3 282 0
-	ldr	r4, .L641
 	mov	r5, #0
 	.loc 3 311 0
 	mov	r6, #12
-	.loc 3 312 0
-	mov	r7, #20
 	.loc 3 297 0
 	str	r3, [r4, #3784]
 	.loc 3 301 0
 	mvn	r3, #0
 	strh	r3, [r4, r2]	@ movhi
 	.loc 3 302 0
-	add	r2, r4, #3184
-	strh	r3, [r2]	@ movhi
+	movw	r2, #3180
+	strh	r3, [r4, r2]	@ movhi
 	.loc 3 303 0
 	mov	r2, #32
-	movw	r3, #3128
+	movw	r3, #3124
 	.loc 3 310 0
 	ldrh	r0, [r4, #82]
 	.loc 3 303 0
 	strh	r2, [r4, r3]	@ movhi
 	.loc 3 304 0
 	mov	r2, #128
-	movw	r3, #3130
+	movw	r3, #3126
 	.loc 3 282 0
-	str	r5, [r4, #2472]
+	str	r5, [r4, #2516]
 	.loc 3 304 0
 	strh	r2, [r4, r3]	@ movhi
 	.loc 3 305 0
-	add	r3, r4, #3136
-	strh	r5, [r3]	@ movhi
+	movw	r3, #3132
+	strh	r5, [r4, r3]	@ movhi
 	.loc 3 306 0
-	movw	r3, #3186
+	movw	r3, #3182
 	strh	r5, [r4, r3]	@ movhi
 	.loc 3 310 0
 	lsl	r0, r0, #1
 	.loc 3 307 0
-	movw	r3, #3222
+	movw	r3, #3218
 	.loc 3 283 0
-	str	r5, [r4, #2476]
+	str	r5, [r4, #2520]
 	.loc 3 307 0
 	strh	r5, [r4, r3]	@ movhi
+	.loc 3 312 0
+	mov	r7, #20
 	.loc 3 284 0
-	str	r5, [r4, #2460]
+	str	r5, [r4, #2504]
 	.loc 3 285 0
-	str	r5, [r4, #2448]
+	str	r5, [r4, #2492]
 	.loc 3 286 0
-	str	r5, [r4, #2444]
+	str	r5, [r4, #2488]
 	.loc 3 287 0
-	str	r5, [r4, #2452]
+	str	r5, [r4, #2496]
 	.loc 3 288 0
-	str	r5, [r4, #2456]
+	str	r5, [r4, #2500]
 	.loc 3 289 0
-	str	r5, [r4, #2440]
+	str	r5, [r4, #2484]
 	.loc 3 290 0
-	str	r5, [r4, #2480]
+	str	r5, [r4, #2524]
 	.loc 3 291 0
-	str	r5, [r4, #2484]
+	str	r5, [r4, #2528]
 	.loc 3 292 0
-	str	r5, [r4, #2492]
+	str	r5, [r4, #2536]
 	.loc 3 293 0
-	str	r5, [r4, #2496]
+	str	r5, [r4, #2540]
 	.loc 3 294 0
-	str	r5, [r4, #2500]
+	str	r5, [r4, #2544]
 	.loc 3 295 0
 	str	r5, [r4, #3780]
 	.loc 3 296 0
-	str	r5, [r4, #3140]
+	str	r5, [r4, #3136]
 	.loc 3 298 0
 	str	r5, [r4, #3788]
 	.loc 3 299 0
-	str	r5, [r4, #3132]
+	str	r5, [r4, #3128]
 	.loc 3 300 0
 	str	r5, [r4, #3764]
 	.loc 3 310 0
 	bl	ftl_malloc
-.LVL479:
-	str	r0, [r4, #3168]
+.LVL494:
+	str	r0, [r4, #3164]
 	.loc 3 311 0
 	ldrh	r0, [r4, #82]
 	mul	r0, r6, r0
 	bl	ftl_malloc
-.LVL480:
+.LVL495:
 	.loc 3 312 0
 	ldrh	r3, [r4, #8]
 	.loc 3 311 0
-	str	r0, [r4, #3176]
+	str	r0, [r4, #3172]
 	.loc 3 312 0
 	mul	r7, r7, r3
 	.loc 3 313 0
 	lsl	r8, r7, #2
 	mov	r0, r8
 	bl	ftl_malloc
-.LVL481:
+.LVL496:
 	str	r0, [r4, #3792]
 	.loc 3 314 0
 	mov	r0, r7
 	bl	ftl_malloc
-.LVL482:
+.LVL497:
 	str	r0, [r4, #3796]
 	.loc 3 315 0
 	mov	r0, r8
 	bl	ftl_malloc
-.LVL483:
+.LVL498:
 	str	r0, [r4, #3800]
 	.loc 3 316 0
 	mov	r0, r7
 	bl	ftl_malloc
-.LVL484:
+.LVL499:
 	str	r0, [r4, #3760]
 	.loc 3 317 0
 	mov	r0, r7
 	bl	ftl_malloc
-.LVL485:
+.LVL500:
 	.loc 3 320 0
 	ldrh	r3, [r4, #8]
 	.loc 3 319 0
 	ldrh	r7, [r4, #86]
 	.loc 3 317 0
-	str	r0, [r4, #3160]
+	str	r0, [r4, #3156]
 	.loc 3 320 0
 	lsl	r3, r3, #1
 	.loc 3 321 0
 	mov	r0, r7
 	.loc 3 320 0
 	add	r3, r3, #1
-	str	r3, [r4, #3164]
+	str	r3, [r4, #3160]
 	.loc 3 321 0
 	bl	ftl_malloc
-.LVL486:
-	str	r0, [r4, #2244]
+.LVL501:
+	str	r0, [r4, #3240]
 	.loc 3 322 0
 	mov	r0, r7
 	bl	ftl_malloc
-.LVL487:
+.LVL502:
 	str	r0, [r4, #3804]
 	.loc 3 323 0
 	mov	r0, r7
 	bl	ftl_malloc
-.LVL488:
+.LVL503:
 	str	r0, [r4, #3808]
 	.loc 3 324 0
-	ldr	r0, [r4, #3164]
+	ldr	r0, [r4, #3160]
 	mul	r0, r0, r7
 	bl	ftl_malloc
-.LVL489:
-	str	r0, [r4, #3152]
+.LVL504:
+	str	r0, [r4, #3148]
 	.loc 3 325 0
 	mov	r0, r7
 	bl	ftl_malloc
-.LVL490:
+.LVL505:
 	str	r0, [r4, #3776]
 	.loc 3 326 0
 	mov	r0, r7
 	bl	ftl_malloc
-.LVL491:
+.LVL506:
 	str	r0, [r4, #3768]
 	.loc 3 327 0
-	ldr	r0, [r4, #3164]
+	ldr	r0, [r4, #3160]
 	mul	r0, r6, r0
 	bl	ftl_malloc
-.LVL492:
+.LVL507:
 	.loc 3 329 0
 	ldrh	r3, [r4, #88]
 	ldrh	r7, [r4, #8]
 	.loc 3 327 0
-	str	r0, [r4, #3148]
+	str	r0, [r4, #3144]
 	.loc 3 329 0
 	mul	r7, r7, r3
 	.loc 3 330 0
 	mov	r0, r7
 	bl	ftl_malloc
-.LVL493:
+.LVL508:
 	str	r0, [r4, #3244]
 	.loc 3 331 0
 	lsl	r0, r7, #2
@@ -7120,17 +6565,17 @@ FtlMemInit:
 	movw	r7, #3812
 	.loc 3 331 0
 	bl	ftl_malloc
-.LVL494:
+.LVL509:
 	.loc 3 332 0
 	ldrh	r3, [r4, #88]
 	.loc 3 331 0
 	str	r0, [r4, #3772]
 	.loc 3 332 0
-	ldr	r0, [r4, #3164]
+	ldr	r0, [r4, #3160]
 	mul	r0, r0, r3
 	bl	ftl_malloc
-.LVL495:
-	str	r0, [r4, #3156]
+.LVL510:
+	str	r0, [r4, #3152]
 	.loc 3 335 0
 	ldrh	r0, [r4, #18]
 	lsl	r0, r0, #1
@@ -7138,12 +6583,12 @@ FtlMemInit:
 	strh	r0, [r4, r7]	@ movhi
 	.loc 3 336 0
 	bl	ftl_malloc
-.LVL496:
+.LVL511:
 	str	r0, [r4, #3816]
 	.loc 3 337 0
 	ldrh	r0, [r4, r7]
 	.loc 3 338 0
-	ldr	r3, .L641+4
+	ldr	r3, .L650+4
 	.loc 3 337 0
 	add	r0, r0, #544
 	add	r0, r0, #3
@@ -7152,71 +6597,71 @@ FtlMemInit:
 	.loc 3 338 0
 	and	r0, r3, r0, lsl #9
 	bl	ftl_malloc
-.LVL497:
+.LVL512:
 	.loc 3 345 0
 	ldrh	r7, [r4, #18]
 	.loc 3 338 0
 	str	r0, [r4, #3820]
 	.loc 3 339 0
 	add	r0, r0, #32
-	str	r0, [r4, #2248]
+	str	r0, [r4, #2304]
 	.loc 3 345 0
 	lsl	r7, r7, #1
 	.loc 3 347 0
 	mov	r0, r7
 	bl	ftl_malloc
-.LVL498:
+.LVL513:
 	str	r0, [r4, #3824]
 	.loc 3 349 0
 	mov	r0, r7
 	bl	ftl_malloc
-.LVL499:
+.LVL514:
 	.loc 3 350 0
 	ldr	r7, [r4, #104]
 	.loc 3 349 0
-	str	r0, [r4, #2260]
+	str	r0, [r4, #2300]
 	.loc 3 350 0
 	lsl	r7, r7, #1
 	.loc 3 351 0
 	mov	r0, r7
 	bl	ftl_malloc
-.LVL500:
+.LVL515:
 	str	r0, [r4, #3828]
 	.loc 3 352 0
 	mov	r0, r7
 	bl	ftl_malloc
-.LVL501:
+.LVL516:
 	str	r0, [r4, #3832]
 	.loc 3 353 0
 	ldrh	r0, [r4, #18]
 	lsr	r0, r0, #3
 	add	r0, r0, #4
 	bl	ftl_malloc
-.LVL502:
+.LVL517:
 	str	r0, [r4]
 	.loc 3 354 0
 	ldrh	r0, [r4, #96]
 	lsl	r0, r0, #1
 	bl	ftl_malloc
-.LVL503:
+.LVL518:
 	str	r0, [r4, #124]
 	.loc 3 355 0
 	ldrh	r0, [r4, #96]
 	lsl	r0, r0, #1
 	bl	ftl_malloc
-.LVL504:
+.LVL519:
 	str	r0, [r4, #3836]
 	.loc 3 356 0
 	ldrh	r0, [r4, #96]
 	lsl	r0, r0, #2
 	bl	ftl_malloc
-.LVL505:
+.LVL520:
 	str	r0, [r4, #3840]
 	.loc 3 357 0
 	ldrh	r0, [r4, #98]
 	lsl	r0, r0, #2
 	bl	ftl_malloc
-.LVL506:
+.LVL521:
 	.loc 3 358 0
 	ldrh	r2, [r4, #98]
 	mov	r1, r5
@@ -7227,47 +6672,45 @@ FtlMemInit:
 	.loc 3 358 0
 	lsl	r2, r2, #2
 	bl	ftl_memset
-.LVL507:
+.LVL522:
 	.loc 3 360 0
 	ldrh	r0, [r4, #112]
 	.loc 3 361 0
 	lsl	r0, r0, #2
 	bl	ftl_malloc
-.LVL508:
+.LVL523:
 	str	r0, [r4, #3848]
 	.loc 3 362 0
 	ldr	r0, [r4, #104]
 	.loc 3 363 0
 	lsl	r0, r0, #2
 	bl	ftl_malloc
-.LVL509:
+.LVL524:
 	str	r0, [r4, #3852]
 	.loc 3 364 0
 	ldrh	r0, [r4, #114]
 	.loc 3 365 0
 	mul	r0, r6, r0
 	bl	ftl_malloc
-.LVL510:
+.LVL525:
 	.loc 3 366 0
 	ldrh	r3, [r4, #114]
 	.loc 3 365 0
-	str	r0, [r4, #2424]
+	str	r0, [r4, #2468]
 	.loc 3 366 0
 	ldrh	r0, [r4, #86]
 	.loc 3 367 0
 	mul	r0, r0, r3
 	bl	ftl_malloc
-.LVL511:
-	.loc 3 368 0
-	ldrh	r3, [r4, #18]
-	.loc 3 367 0
+.LVL526:
 	str	r0, [r4, #3856]
+	.loc 3 368 0
+	ldrh	r0, [r4, #18]
 	.loc 3 369 0
-	mov	r0, #6
-	mul	r0, r0, r3
+	lsl	r0, r0, #3
 	bl	ftl_malloc
-.LVL512:
-	str	r0, [r4, #2252]
+.LVL527:
+	str	r0, [r4, #2292]
 	.loc 3 370 0
 	ldrh	r0, [r4, #74]
 	.loc 3 371 0
@@ -7281,49 +6724,49 @@ FtlMemInit:
 	.loc 3 372 0
 	lsl	r0, r0, #2
 	bl	ftl_malloc
-.LVL513:
+.LVL528:
 	.loc 3 374 0
 	ldrh	r2, [r4, r5]
 	add	ip, r4, #156
 	.loc 3 373 0
 	ldrh	lr, [r4, #30]
 	mov	r3, #1
-.LVL514:
+.LVL529:
 	.loc 3 372 0
 	str	r0, [r4, #156]
 	lsl	r2, r2, #2
 	.loc 3 373 0
 	mov	r1, r2
-.L541:
+.L550:
 	.loc 3 373 0 is_stmt 0 discriminator 1
 	cmp	r3, lr
-	bcc	.L542
-	ldr	r2, .L641+8
+	bcc	.L551
+	ldr	r2, .L650+8
 	.loc 3 379 0 is_stmt 1
 	mov	r1, #0
 	add	r3, r2, r3, lsl #2
-.LVL515:
+.LVL530:
 	add	r2, r2, #56
 	add	r3, r3, #24
-.L543:
+.L552:
 	.loc 3 377 0 discriminator 1
 	cmp	r2, r3
-	bne	.L544
+	bne	.L553
 	.loc 3 383 0
 	ldr	r3, [r4, #3828]
 	cmp	r3, #0
-	bne	.L545
-.L547:
+	bne	.L554
+.L556:
 	.loc 3 385 0
-	ldr	r1, .L641+12
-	ldr	r0, .L641+16
+	ldr	r1, .L650+12
+	ldr	r0, .L650+16
 	bl	printk
-.LVL516:
+.LVL531:
 	.loc 3 386 0
 	mvn	r0, #0
-	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
-.LVL517:
-.L542:
+	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
+.LVL532:
+.L551:
 	.loc 3 374 0 discriminator 3
 	ldr	r0, [r4, #156]
 	.loc 3 373 0 discriminator 3
@@ -7332,152 +6775,151 @@ FtlMemInit:
 	add	r0, r0, r1
 	add	r1, r1, r2
 	str	r0, [ip, #4]!
-	b	.L541
-.LVL518:
-.L544:
+	b	.L550
+.LVL533:
+.L553:
 	.loc 3 379 0 discriminator 2
 	str	r1, [r3, #4]!
-	b	.L543
-.L545:
+	b	.L552
+.L554:
 	.loc 3 388 0
 	ldr	r3, [r4, #3832]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 393 0
 	ldr	r3, [r4, #3848]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 398 0
 	ldr	r3, [r4, #3852]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 404 0
-	ldr	r3, [r4, #2424]
+	ldr	r3, [r4, #2468]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 409 0
 	ldr	r3, [r4, #3856]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 414 0
-	ldr	r3, [r4, #2252]
+	ldr	r3, [r4, #2292]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 419 0
 	ldr	r3, [r4, #156]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 425 0
-	ldr	r3, [r4, #2260]
+	ldr	r3, [r4, #2300]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 430 0
-	ldr	r3, [r4, #3168]
+	ldr	r3, [r4, #3164]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 430 0 is_stmt 0 discriminator 1
-	ldr	r3, [r4, #3176]
+	ldr	r3, [r4, #3172]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 435 0 is_stmt 1
 	ldr	r3, [r4, #3792]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 435 0 is_stmt 0 discriminator 1
 	ldr	r3, [r4, #3800]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 435 0 discriminator 2
 	ldr	r3, [r4, #3760]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 435 0 discriminator 3
-	ldr	r3, [r4, #3160]
+	ldr	r3, [r4, #3156]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 435 0 discriminator 4
 	ldr	r3, [r4, #3796]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 440 0 is_stmt 1
-	ldr	r3, [r4, #2244]
+	ldr	r3, [r4, #3240]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 440 0 is_stmt 0 discriminator 1
 	ldr	r3, [r4, #3804]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 440 0 discriminator 2
 	ldr	r3, [r4, #3808]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 440 0 discriminator 3
-	ldr	r3, [r4, #3152]
+	ldr	r3, [r4, #3148]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 441 0 is_stmt 1
 	ldr	r3, [r4, #3776]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 441 0 is_stmt 0 discriminator 1
 	ldr	r3, [r4, #3768]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 441 0 discriminator 2
-	ldr	r3, [r4, #3148]
+	ldr	r3, [r4, #3144]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 446 0 is_stmt 1
 	ldr	r3, [r4, #3244]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 446 0 is_stmt 0 discriminator 1
 	ldr	r3, [r4, #3772]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 446 0 discriminator 2
-	ldr	r3, [r4, #3156]
+	ldr	r3, [r4, #3152]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 452 0 is_stmt 1
-	ldr	r3, [r4, #2248]
+	ldr	r3, [r4, #2304]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 452 0 is_stmt 0 discriminator 1
 	ldr	r3, [r4, #3816]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 458 0 is_stmt 1
 	ldr	r3, [r4, #124]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 464 0
-	ldr	r3, .L641
+	ldr	r3, .L650
 	ldr	r2, [r3, #3836]
 	cmp	r2, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 470 0
 	ldr	r2, [r3, #3840]
 	cmp	r2, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 476 0
 	ldr	r3, [r3, #3844]
 	cmp	r3, #0
-	beq	.L547
+	beq	.L556
 	.loc 3 483 0
 	mov	r0, #0
 	.loc 3 484 0
-	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
-.L642:
+	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
+.L651:
 	.align	2
-.L641:
+.L650:
 	.word	.LANCHOR0
 	.word	33553920
 	.word	.LANCHOR0+128
 	.word	.LANCHOR1+186
-	.word	.LC78
-.LFE146:
-	.fnend
+	.word	.LC81
+.LFE156:
 	.size	FtlMemInit, .-FtlMemInit
 	.align	2
 	.global	FtlBbt2Bitmap
@@ -7486,49 +6928,42 @@ FtlMemInit:
 	.fpu softvfp
 	.type	FtlBbt2Bitmap, %function
 FtlBbt2Bitmap:
-	.fnstart
-.LFB165:
+.LFB175:
 	.loc 4 66 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL519:
-	.movsp ip
+.LVL534:
 	mov	ip, sp
-.LCFI221:
+.LCFI218:
 	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
-.LCFI222:
-	.setfp fp, ip, #-4
+.LCFI219:
 	sub	fp, ip, #4
-.LCFI223:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 4 66 0
+.LCFI220:
 	.loc 4 69 0
+	ldr	r6, .L658
 	movw	r3, #3860
 	.loc 4 66 0
 	mov	r4, r0
-	.loc 4 69 0
-	ldr	r6, .L649
-	sub	r5, r4, #2
 	.loc 4 74 0
-	ldr	r8, .L649+4
+	ldr	r8, .L658+4
+	sub	r5, r4, #2
+	.loc 4 69 0
+	ldrh	r2, [r6, r3]
 	add	r4, r4, #1020
-	ldr	r9, .L649+8
+	.loc 4 74 0
+	ldr	r9, .L658+8
 	.loc 4 66 0
 	mov	r7, r1
-	.loc 4 69 0
-	ldrh	r2, [r6, r3]
 	add	r4, r4, #2
+	.loc 4 69 0
 	mov	r1, #0
-.LVL520:
+.LVL535:
 	mov	r0, r7
-.LVL521:
+.LVL536:
 	lsl	r2, r2, #2
 	bl	ftl_memset
-.LVL522:
-.L646:
+.LVL537:
+.L655:
 	.loc 4 72 0
 	ldrh	r3, [r5, #2]
 	movw	r2, #65535
@@ -7537,14 +6972,14 @@ FtlBbt2Bitmap:
 	.loc 4 74 0
 	ldrh	r2, [r6, #74]
 	cmp	r2, r3
-	bhi	.L645
+	bhi	.L654
 	.loc 4 74 0 is_stmt 0 discriminator 1
 	mov	r2, #74
 	mov	r1, r8
 	mov	r0, r9
 	bl	printk
-.LVL523:
-.L645:
+.LVL538:
+.L654:
 	.loc 4 75 0 is_stmt 1 discriminator 2
 	ldrh	r3, [r5, #2]!
 	mov	r0, #1
@@ -7557,16 +6992,15 @@ FtlBbt2Bitmap:
 	orr	r3, r2, r0, lsl r3
 	str	r3, [r7, r1, lsl #2]
 	.loc 4 70 0 discriminator 2
-	bne	.L646
+	bne	.L655
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
-.L650:
+.L659:
 	.align	2
-.L649:
+.L658:
 	.word	.LANCHOR0
 	.word	.LANCHOR1+197
 	.word	.LC1
-.LFE165:
-	.fnend
+.LFE175:
 	.size	FtlBbt2Bitmap, .-FtlBbt2Bitmap
 	.align	2
 	.global	load_l2p_region
@@ -7575,149 +7009,144 @@ FtlBbt2Bitmap:
 	.fpu softvfp
 	.type	load_l2p_region, %function
 load_l2p_region:
-	.fnstart
-.LFB193:
-	.loc 2 442 0
+.LFB203:
+	.loc 2 488 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL524:
-	.movsp ip
+.LVL539:
 	mov	ip, sp
-.LCFI224:
-	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
-.LCFI225:
-	.setfp fp, ip, #-4
+.LCFI221:
+	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
+.LCFI222:
 	sub	fp, ip, #4
-.LCFI226:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 442 0
-	mov	r6, r0
-	mov	r8, r1
-	.loc 2 446 0
-	ldr	r4, .L657
+.LCFI223:
+	.loc 2 492 0
+	ldr	r4, .L666
+	.loc 2 488 0
+	uxth	r6, r0
+.LVL540:
+	uxth	r8, r1
+.LVL541:
+	.loc 2 492 0
 	ldrh	r3, [r4, #112]
-	cmp	r3, r0
-	bcs	.L652
-	.loc 2 446 0 is_stmt 0 discriminator 1
-	movw	r2, #446
-	ldr	r1, .L657+4
-	ldr	r0, .L657+8
+	cmp	r3, r6
+	bcs	.L661
+	.loc 2 492 0 is_stmt 0 discriminator 1
+	mov	r2, #492
+	ldr	r1, .L666+4
+	ldr	r0, .L666+8
 	bl	printk
-.LVL525:
-.L652:
-	.loc 2 447 0 is_stmt 1
+.LVL542:
+.L661:
+	.loc 2 493 0 is_stmt 1
 	ldr	r3, [r4, #3848]
 	mov	r5, #12
 	ldr	r7, [r3, r6, lsl #2]
-.LVL526:
-	.loc 2 449 0
+.LVL543:
+	.loc 2 495 0
 	cmp	r7, #0
-	bne	.L653
-	.loc 2 450 0
+	bne	.L662
+	.loc 2 496 0
 	mul	r5, r5, r8
-	ldr	r3, [r4, #2424]
+	ldr	r3, [r4, #2468]
 	ldrh	r2, [r4, #86]
 	mov	r1, #255
 	add	r3, r3, r5
 	ldr	r0, [r3, #8]
 	bl	ftl_memset
-.LVL527:
-	.loc 2 451 0
-	ldr	r3, [r4, #2424]
+.LVL544:
+	.loc 2 497 0
+	ldr	r3, [r4, #2468]
 	strh	r6, [r3, r5]	@ movhi
-	.loc 2 452 0
-	ldr	r3, [r4, #2424]
+	.loc 2 498 0
+	ldr	r3, [r4, #2468]
 	add	r5, r3, r5
 	str	r7, [r5, #4]
-.LVL528:
-.L654:
-	.loc 2 473 0
+.LVL545:
+.L663:
+	.loc 2 519 0
 	mov	r0, #0
-	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
-.LVL529:
-.L653:
-	.loc 2 456 0
+	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
+.LVL546:
+.L662:
+	.loc 2 502 0
 	mul	r5, r5, r8
-	ldr	r3, [r4, #2424]
-	.loc 2 458 0
+	ldr	r3, [r4, #2468]
+	.loc 2 504 0
 	mov	r2, #1
-	ldr	r0, .L657+12
+	ldr	r0, .L666+12
 	mov	r1, r2
-	.loc 2 455 0
-	str	r7, [r4, #3228]
-	.loc 2 456 0
+	.loc 2 501 0
+	str	r7, [r4, #3224]
+	.loc 2 502 0
 	add	r3, r3, r5
 	ldr	r3, [r3, #8]
-	str	r3, [r4, #3232]
-	.loc 2 457 0
+	str	r3, [r4, #3228]
+	.loc 2 503 0
 	ldr	r3, [r4, #3244]
-	str	r3, [r4, #3236]
-	.loc 2 458 0
+	str	r3, [r4, #3232]
+	.loc 2 504 0
 	bl	FlashReadPages
-.LVL530:
-	.loc 2 459 0
-	ldr	r8, [r4, #3236]
-.LVL531:
-	.loc 2 461 0
+.LVL547:
+	.loc 2 505 0
+	ldr	r8, [r4, #3232]
+.LVL548:
+	.loc 2 507 0
 	ldrh	r3, [r8, #8]
 	cmp	r3, r6
-	beq	.L655
-	.loc 2 462 0
+	beq	.L664
+	.loc 2 508 0
 	mov	r2, r7
 	mov	r1, r6
-	ldr	r0, .L657+16
+	ldr	r0, .L666+16
 	bl	printk
-.LVL532:
-	.loc 2 463 0
+.LVL549:
+	.loc 2 509 0
 	mov	r3, #4
-	ldr	r1, [r4, #3236]
+	ldr	r1, [r4, #3232]
 	mov	r2, r3
-	ldr	r0, .L657+20
+	ldr	r0, .L666+20
 	bl	rknand_print_hex
-.LVL533:
-	.loc 2 464 0
+.LVL550:
+	.loc 2 510 0
 	ldrh	r3, [r4, #112]
 	mov	r2, #4
 	ldr	r1, [r4, #3848]
-	ldr	r0, .L657+24
+	ldr	r0, .L666+24
 	bl	rknand_print_hex
-.LVL534:
-.L655:
-	.loc 2 467 0
+.LVL551:
+.L664:
+	.loc 2 513 0
 	ldrh	r3, [r8, #8]
 	cmp	r3, r6
-	beq	.L656
-	.loc 2 467 0 is_stmt 0 discriminator 1
-	movw	r2, #467
-	ldr	r1, .L657+4
-	ldr	r0, .L657+8
+	beq	.L665
+	.loc 2 513 0 is_stmt 0 discriminator 1
+	movw	r2, #513
+	ldr	r1, .L666+4
+	ldr	r0, .L666+8
 	bl	printk
-.LVL535:
-.L656:
-	.loc 2 470 0 is_stmt 1
-	ldr	r3, [r4, #2424]
+.LVL552:
+.L665:
+	.loc 2 516 0 is_stmt 1
+	ldr	r3, [r4, #2468]
 	mov	r1, #0
 	add	r2, r3, r5
 	str	r1, [r2, #4]
-	.loc 2 471 0
+	.loc 2 517 0
 	strh	r6, [r3, r5]	@ movhi
-	.loc 2 472 0
-	b	.L654
-.L658:
+	.loc 2 518 0
+	b	.L663
+.L667:
 	.align	2
-.L657:
+.L666:
 	.word	.LANCHOR0
 	.word	.LANCHOR1+211
 	.word	.LC1
-	.word	.LANCHOR0+3224
-	.word	.LC79
-	.word	.LC80
-	.word	.LC81
-.LFE193:
-	.fnend
+	.word	.LANCHOR0+3220
+	.word	.LC82
+	.word	.LC83
+	.word	.LC84
+.LFE203:
 	.size	load_l2p_region, .-load_l2p_region
 	.align	2
 	.global	ftl_free_no_use_map_blk
@@ -7726,163 +7155,156 @@ load_l2p_region:
 	.fpu softvfp
 	.type	ftl_free_no_use_map_blk, %function
 ftl_free_no_use_map_blk:
-	.fnstart
-.LFB194:
-	.loc 2 476 0
+.LFB204:
+	.loc 2 522 0
 	@ args = 0, pretend = 0, frame = 8
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL536:
-	.movsp ip
+.LVL553:
 	mov	ip, sp
-.LCFI227:
+.LCFI224:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI228:
-	.setfp fp, ip, #-4
+.LCFI225:
 	sub	fp, ip, #4
-.LCFI229:
-	.pad #12
-	sub	sp, sp, #12
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 476 0
-	.loc 2 485 0
+.LCFI226:
+	sub	sp, sp, #8
+	.loc 2 531 0
+	mov	r1, #0
 	ldrh	r2, [r0, #10]
-	.loc 2 476 0
+	.loc 2 522 0
 	mov	r4, r0
-	.loc 2 479 0
+	.loc 2 525 0
 	ldr	r5, [r0, #20]
-.LVL537:
-	.loc 2 485 0
-	mov	r1, #0
-	.loc 2 477 0
+.LVL554:
+	.loc 2 523 0
 	ldr	r9, [r0, #12]
-.LVL538:
-	.loc 2 478 0
+.LVL555:
+	.loc 2 524 0
 	ldr	r6, [r0, #24]
-.LVL539:
-	.loc 2 485 0
+.LVL556:
+	.loc 2 531 0
 	lsl	r2, r2, #1
 	mov	r0, r5
-.LVL540:
+.LVL557:
 	bl	ftl_memset
-.LVL541:
-	.loc 2 486 0
+.LVL558:
+	.loc 2 532 0
 	mov	r2, #0
-.LVL542:
-.L660:
-	.loc 2 486 0 is_stmt 0 discriminator 1
+.LVL559:
+.L669:
+	.loc 2 532 0 is_stmt 0 discriminator 1
 	ldrh	r1, [r4, #6]
 	uxth	r3, r2
 	cmp	r1, r3
-	bhi	.L664
-	.loc 2 494 0 is_stmt 1
-	ldrh	r3, [r5]
-.LVL543:
-	.loc 2 497 0
+	bhi	.L673
+	.loc 2 540 0 is_stmt 1
+	ldrh	r2, [r5]
+.LVL560:
+	.loc 2 543 0
 	mov	r7, #0
-	.loc 2 498 0
-	ldr	r2, .L673
-	.loc 2 495 0
+	.loc 2 544 0
+	ldr	ip, .L682
+	.loc 2 541 0
 	mov	r10, r7
-.LVL544:
-.L665:
-	.loc 2 497 0 discriminator 1
-	ldrh	r0, [r4, #10]
-.LVL545:
-	uxth	r1, r7
-	cmp	r0, r1
-	bhi	.L669
-	.loc 2 513 0
+.LVL561:
+.L674:
+	.loc 2 543 0 discriminator 1
+	ldrh	r1, [r4, #10]
+	uxth	r3, r7
+	cmp	r1, r3
+	bhi	.L678
+	.loc 2 559 0
 	mov	r0, r10
+.LVL562:
 	sub	sp, fp, #40
-.LCFI230:
+.LCFI227:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL546:
-.L664:
-.LCFI231:
-	.loc 2 487 0
+.LVL563:
+.L673:
+.LCFI228:
+	.loc 2 533 0
 	uxth	r3, r2
-	.loc 2 488 0
+	.loc 2 534 0
 	mov	r1, #0
-	.loc 2 487 0
+	.loc 2 533 0
 	ldr	r0, [r6, r3, lsl #2]
-.LVL547:
+.LVL564:
 	ubfx	r0, r0, #10, #16
-.LVL548:
-.L661:
-	.loc 2 488 0 discriminator 1
+.LVL565:
+.L670:
+	.loc 2 534 0 discriminator 1
 	ldrh	ip, [r4, #10]
 	uxth	r3, r1
 	cmp	ip, r3
 	addls	r2, r2, #1
-	bls	.L660
-.L663:
-	.loc 2 489 0
+	bls	.L669
+.L672:
+	.loc 2 535 0
 	uxth	r3, r1
 	add	r1, r1, #1
 	lsl	r3, r3, #1
 	ldrh	ip, [r9, r3]
 	cmp	ip, r0
-	.loc 2 490 0
+	.loc 2 536 0
 	ldrheq	ip, [r5, r3]
 	addeq	ip, ip, #1
 	strheq	ip, [r5, r3]	@ movhi
-	b	.L661
-.LVL549:
-.L669:
-	.loc 2 498 0
-	ldrh	r0, [r4]
+	b	.L670
+.LVL566:
+.L678:
+	.loc 2 544 0
+	ldrh	r1, [r4]
 	uxth	r6, r7
-.LVL550:
+.LVL567:
+	cmp	r1, r3
+	bne	.L675
+	.loc 2 544 0 is_stmt 0 discriminator 1
+	ldrh	r0, [r4, #2]
+.LVL568:
+	ldrh	r1, [ip, #80]
 	cmp	r0, r1
-	bne	.L666
-	.loc 2 498 0 is_stmt 0 discriminator 1
-	ldrh	ip, [r4, #2]
-	ldrh	r0, [r2, #80]
-	cmp	ip, r0
-	.loc 2 499 0 is_stmt 1 discriminator 1
-	lslcc	ip, r6, #1
-	strhcc	r0, [r5, ip]	@ movhi
-.L666:
-	.loc 2 500 0
+	.loc 2 545 0 is_stmt 1 discriminator 1
+	lslcc	r0, r6, #1
+	strhcc	r1, [r5, r0]	@ movhi
+.LVL569:
+.L675:
+	.loc 2 546 0
 	lsl	r6, r6, #1
 	ldrh	r8, [r5, r6]
-	cmp	r3, r8
-	movhi	r10, r1
-	movhi	r3, r8
-	.loc 2 504 0
+	cmp	r2, r8
+	movhi	r10, r3
+	movhi	r2, r8
+	.loc 2 550 0
 	cmp	r8, #0
-	bne	.L668
-	.loc 2 504 0 is_stmt 0 discriminator 1
+	bne	.L677
+	.loc 2 550 0 is_stmt 0 discriminator 1
 	ldrh	r0, [r9, r6]
+.LVL570:
 	cmp	r0, #0
-	beq	.L668
-	.loc 2 506 0 is_stmt 1
+	beq	.L677
+	.loc 2 552 0 is_stmt 1
 	mov	r1, #1
-	str	r2, [fp, #-52]
-	str	r3, [fp, #-48]
+	str	ip, [fp, #-48]
+	str	r2, [fp, #-44]
 	bl	FtlFreeSysBlkQueueIn
-.LVL551:
-	.loc 2 507 0
+.LVL571:
+	.loc 2 553 0
 	strh	r8, [r9, r6]	@ movhi
-	.loc 2 508 0
-	ldr	r2, [fp, #-52]
-	ldrh	r1, [r4, #8]
-	ldr	r3, [fp, #-48]
-.LVL552:
-	sub	r1, r1, #1
-	strh	r1, [r4, #8]	@ movhi
-.L668:
+	.loc 2 554 0
+	ldr	ip, [fp, #-48]
+	ldrh	r3, [r4, #8]
+	ldr	r2, [fp, #-44]
+.LVL572:
+	sub	r3, r3, #1
+	strh	r3, [r4, #8]	@ movhi
+.LVL573:
+.L677:
 	add	r7, r7, #1
-	b	.L665
-.L674:
+	b	.L674
+.L683:
 	.align	2
-.L673:
+.L682:
 	.word	.LANCHOR0
-.LFE194:
-	.fnend
+.LFE204:
 	.size	ftl_free_no_use_map_blk, .-ftl_free_no_use_map_blk
 	.align	2
 	.global	Ftl_write_map_blk_to_last_page
@@ -7891,180 +7313,170 @@ ftl_free_no_use_map_blk:
 	.fpu softvfp
 	.type	Ftl_write_map_blk_to_last_page, %function
 Ftl_write_map_blk_to_last_page:
-	.fnstart
-.LFB197:
-	.loc 2 583 0
+.LFB207:
+	.loc 2 632 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL553:
-	.movsp ip
+.LVL574:
 	mov	ip, sp
-.LCFI232:
+.LCFI229:
 	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI233:
-	.setfp fp, ip, #-4
+.LCFI230:
 	sub	fp, ip, #4
-.LCFI234:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 583 0
-	.loc 2 591 0
+.LCFI231:
+	.loc 2 640 0
+	ldrh	r3, [r0]
 	movw	r2, #65535
-	.loc 2 583 0
+	.loc 2 632 0
 	mov	r4, r0
-	.loc 2 591 0
-	ldrh	r3, [r0]
-	.loc 2 586 0
+	.loc 2 635 0
 	ldr	r5, [r0, #12]
-.LVL554:
-	.loc 2 591 0
+.LVL575:
+	.loc 2 640 0
 	cmp	r3, r2
-	bne	.L676
-	.loc 2 592 0
+	bne	.L685
+	.loc 2 641 0
 	ldrh	r3, [r0, #8]
 	cmp	r3, #0
-	beq	.L677
-	.loc 2 592 0 is_stmt 0 discriminator 1
-	mov	r2, #592
-	ldr	r1, .L685
-	ldr	r0, .L685+4
+	beq	.L686
+	.loc 2 641 0 is_stmt 0 discriminator 1
+	movw	r2, #641
+	ldr	r1, .L694
+	ldr	r0, .L694+4
 	bl	printk
-.LVL555:
-.L677:
-	.loc 2 593 0 is_stmt 1
+.LVL576:
+.L686:
+	.loc 2 642 0 is_stmt 1
 	ldrh	r3, [r4, #8]
 	add	r3, r3, #1
 	strh	r3, [r4, #8]	@ movhi
-	.loc 2 594 0
+	.loc 2 643 0
 	bl	FtlFreeSysBlkQueueOut
-.LVL556:
-	.loc 2 595 0
+.LVL577:
+	.loc 2 644 0
 	mov	r3, #0
-	.loc 2 594 0
+	.loc 2 643 0
 	strh	r0, [r5]	@ movhi
-	.loc 2 595 0
+	.loc 2 644 0
 	strh	r3, [r4, #2]	@ movhi
-	.loc 2 596 0
+	.loc 2 645 0
 	strh	r3, [r4]	@ movhi
-	.loc 2 597 0
+	.loc 2 646 0
 	ldr	r3, [r4, #28]
 	add	r3, r3, #1
 	str	r3, [r4, #28]
-.LVL557:
-.L678:
-	.loc 2 628 0
+.LVL578:
+.L687:
+	.loc 2 677 0
 	mov	r0, #0
 	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.LVL558:
-.L676:
-	.loc 2 601 0
+.LVL579:
+.L685:
+	.loc 2 650 0
 	lsl	r3, r3, #1
-	.loc 2 607 0
+	.loc 2 656 0
 	ldr	r2, [r0, #28]
-	.loc 2 587 0
+	.loc 2 636 0
 	ldr	r6, [r0, #24]
-.LVL559:
-	.loc 2 612 0
+.LVL580:
+	.loc 2 661 0
 	mov	r1, #255
-	.loc 2 601 0
+	.loc 2 650 0
 	ldrh	r7, [r5, r3]
-	.loc 2 602 0
+	.loc 2 651 0
 	ldrh	r3, [r0, #2]
-	ldr	r5, .L685+8
-.LVL560:
+	ldr	r5, .L694+8
+.LVL581:
 	orr	r3, r3, r7, lsl #10
+	str	r3, [r5, #3224]
+	.loc 2 652 0
+	ldr	r3, [r5, #3240]
 	str	r3, [r5, #3228]
-	.loc 2 603 0
-	ldr	r3, [r5, #2244]
-	str	r3, [r5, #3232]
-	.loc 2 604 0
+	.loc 2 653 0
 	ldr	r3, [r5, #3244]
-	str	r3, [r5, #3236]
-	.loc 2 607 0
+	str	r3, [r5, #3232]
+	.loc 2 656 0
 	str	r2, [r3, #4]
-	.loc 2 608 0
-	ldr	r2, .L685+12
+	.loc 2 657 0
+	ldr	r2, .L694+12
 	strh	r2, [r3, #8]	@ movhi
-	.loc 2 609 0
+	.loc 2 658 0
 	ldrh	r2, [r0, #4]
-	.loc 2 610 0
+	.loc 2 659 0
 	strh	r7, [r3, #2]	@ movhi
-	.loc 2 609 0
+	.loc 2 658 0
 	strh	r2, [r3]	@ movhi
-	.loc 2 612 0
+	.loc 2 661 0
 	ldrh	r2, [r5, #80]
-	ldr	r0, [r5, #2244]
-.LVL561:
+	ldr	r0, [r5, #3240]
+.LVL582:
 	lsl	r2, r2, #3
 	bl	ftl_memset
-.LVL562:
-	.loc 2 614 0
+.LVL583:
+	.loc 2 663 0
 	mov	r2, #0
-	.loc 2 613 0
+	.loc 2 662 0
 	mov	r3, r2
-.LVL563:
-.L679:
-	.loc 2 614 0 discriminator 1
+.LVL584:
+.L688:
+	.loc 2 663 0 discriminator 1
 	ldrh	r0, [r4, #6]
 	uxth	r1, r2
 	cmp	r0, r1
-	bhi	.L681
-	.loc 2 621 0
+	bhi	.L690
+	.loc 2 670 0
 	mov	r2, #1
 	mov	r3, #0
-.LVL564:
+.LVL585:
 	mov	r1, r2
-	ldr	r0, .L685+16
+	ldr	r0, .L694+16
 	bl	FlashProgPages
-.LVL565:
-	.loc 2 622 0
+.LVL586:
+	.loc 2 671 0
 	ldrh	r3, [r4, #2]
-	.loc 2 626 0
+	.loc 2 675 0
 	mov	r0, r4
-	.loc 2 622 0
+	.loc 2 671 0
 	add	r3, r3, #1
 	strh	r3, [r4, #2]	@ movhi
-	.loc 2 626 0
+	.loc 2 675 0
 	bl	ftl_map_blk_gc
-.LVL566:
-	.loc 2 627 0
-	b	.L678
-.LVL567:
-.L681:
+.LVL587:
+	.loc 2 676 0
+	b	.L687
+.LVL588:
+.L690:
 	uxth	r1, r2
-	.loc 2 615 0
+	.loc 2 664 0
 	ldr	r0, [r6, r1, lsl #2]
 	cmp	r7, r0, lsr #10
-	bne	.L680
-	.loc 2 617 0
-	ldr	r0, [r5, #2244]
-	.loc 2 616 0
+	bne	.L689
+	.loc 2 666 0
+	ldr	r0, [r5, #3240]
+	.loc 2 665 0
 	add	r3, r3, #1
-.LVL568:
+.LVL589:
 	uxth	r3, r3
-.LVL569:
-	.loc 2 617 0
+.LVL590:
+	.loc 2 666 0
 	str	r1, [r0, r3, lsl #3]
-	.loc 2 618 0
+	.loc 2 667 0
 	ldr	r0, [r6, r1, lsl #2]
-	ldr	r1, [r5, #2244]
+	ldr	r1, [r5, #3240]
 	add	r1, r1, r3, lsl #3
 	str	r0, [r1, #4]
-.L680:
+.L689:
 	add	r2, r2, #1
-	b	.L679
-.L686:
+	b	.L688
+.L695:
 	.align	2
-.L685:
+.L694:
 	.word	.LANCHOR1+227
 	.word	.LC1
 	.word	.LANCHOR0
 	.word	-1291
-	.word	.LANCHOR0+3224
-.LFE197:
-	.fnend
+	.word	.LANCHOR0+3220
+.LFE207:
 	.size	Ftl_write_map_blk_to_last_page, .-Ftl_write_map_blk_to_last_page
 	.align	2
 	.global	FtlMapWritePage
@@ -8073,214 +7485,204 @@ Ftl_write_map_blk_to_last_page:
 	.fpu softvfp
 	.type	FtlMapWritePage, %function
 FtlMapWritePage:
-	.fnstart
-.LFB198:
-	.loc 2 631 0
+.LFB208:
+	.loc 2 680 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL570:
-	.movsp ip
+.LVL591:
 	mov	ip, sp
-.LCFI235:
-	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI236:
-	.setfp fp, ip, #-4
+.LCFI232:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+.LCFI233:
 	sub	fp, ip, #4
-.LCFI237:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 631 0
-	.loc 2 634 0
-	mov	r6, #0
-.LVL571:
-	.loc 2 631 0
+.LCFI234:
+	.loc 2 686 0
+	ldr	r7, .L715
+	.loc 2 680 0
 	mov	r4, r0
-	.loc 2 637 0
-	ldr	r7, .L706
-	.loc 2 631 0
 	mov	r8, r1
 	mov	r9, r2
+	.loc 2 683 0
+	mov	r6, #0
+.LVL592:
 	mov	r5, r7
-.L688:
-	.loc 2 637 0
-	ldr	r3, [r7, #2456]
+.L697:
+	.loc 2 686 0
+	ldr	r3, [r7, #2500]
 	add	r3, r3, #1
-	str	r3, [r7, #2456]
-	.loc 2 638 0
+	str	r3, [r7, #2500]
+	.loc 2 687 0
 	ldrh	r3, [r7, #80]
 	ldrh	r2, [r4, #2]
 	sub	r3, r3, #1
 	cmp	r2, r3
-	bge	.L689
-	.loc 2 638 0 is_stmt 0 discriminator 1
+	bge	.L698
+	.loc 2 687 0 is_stmt 0 discriminator 1
 	ldrh	r2, [r4]
 	movw	r3, #65535
 	cmp	r2, r3
-	bne	.L690
-.L689:
-	.loc 2 639 0 is_stmt 1
+	bne	.L699
+.L698:
+	.loc 2 688 0 is_stmt 1
 	mov	r0, r4
 	bl	Ftl_write_map_blk_to_last_page
-.LVL572:
-.L690:
-	.loc 2 650 0
+.LVL593:
+.L699:
+	.loc 2 699 0
 	ldrh	r3, [r4]
 	ldr	r2, [r4, #12]
 	lsl	r3, r3, #1
 	ldrh	r3, [r2, r3]
 	cmp	r3, #0
-	bne	.L691
-	.loc 2 650 0 is_stmt 0 discriminator 1
-	movw	r2, #650
-	ldr	r1, .L706+4
-	ldr	r0, .L706+8
+	bne	.L700
+	.loc 2 699 0 is_stmt 0 discriminator 1
+	movw	r2, #699
+	ldr	r1, .L715+4
+	ldr	r0, .L715+8
 	bl	printk
-.LVL573:
-.L691:
-	.loc 2 651 0 is_stmt 1
+.LVL594:
+.L700:
+	.loc 2 700 0 is_stmt 1
 	ldrh	r2, [r4]
 	ldrh	r3, [r4, #10]
 	cmp	r2, r3
-	bcc	.L692
-	.loc 2 651 0 is_stmt 0 discriminator 1
-	movw	r2, #651
-	ldr	r1, .L706+4
-	ldr	r0, .L706+8
+	bcc	.L701
+	.loc 2 700 0 is_stmt 0 discriminator 1
+	mov	r2, #700
+	ldr	r1, .L715+4
+	ldr	r0, .L715+8
 	bl	printk
-.LVL574:
-.L692:
-	.loc 2 652 0 is_stmt 1
+.LVL595:
+.L701:
+	.loc 2 701 0 is_stmt 1
 	ldrh	r3, [r4]
-.LBB362:
-.LBB363:
-.LBB364:
+.LBB384:
+.LBB385:
+.LBB386:
 	.loc 1 202 0
 	mov	r1, #16
-.LBE364:
-.LBE363:
-.LBE362:
-	.loc 2 652 0
+.LBE386:
+.LBE385:
+.LBE384:
+	.loc 2 701 0
 	ldr	r2, [r4, #12]
-	.loc 2 656 0
+	.loc 2 705 0
 	ldr	r0, [r5, #3244]
-	.loc 2 652 0
+	.loc 2 701 0
 	lsl	r3, r3, #1
 	ldrh	r10, [r2, r3]
-	.loc 2 654 0
+	.loc 2 703 0
 	ldrh	r3, [r4, #2]
-	.loc 2 656 0
-	str	r0, [r5, #3236]
-	.loc 2 655 0
-	str	r9, [r5, #3232]
-	.loc 2 654 0
+	.loc 2 705 0
+	str	r0, [r5, #3232]
+	.loc 2 704 0
+	str	r9, [r5, #3228]
+	.loc 2 703 0
 	orr	r3, r3, r10, lsl #10
-	str	r3, [r5, #3228]
-.LBB367:
-.LBB366:
-.LBB365:
+	str	r3, [r5, #3224]
+.LBB389:
+.LBB388:
+.LBB387:
 	.loc 1 202 0
 	bl	__memzero
-.LVL575:
-.LBE365:
-.LBE366:
-.LBE367:
-	.loc 2 659 0
-	ldr	r3, [r5, #3236]
-.LVL576:
-	.loc 2 660 0
+.LVL596:
+.LBE387:
+.LBE388:
+.LBE389:
+	.loc 2 708 0
+	ldr	r3, [r5, #3232]
+.LVL597:
+	.loc 2 709 0
 	ldr	r2, [r4, #28]
-	.loc 2 664 0
-	ldr	r0, .L706+12
-	.loc 2 661 0
+	.loc 2 713 0
+	ldr	r0, .L715+12
+	.loc 2 710 0
 	strh	r8, [r3, #8]	@ movhi
-	.loc 2 660 0
+	.loc 2 709 0
 	str	r2, [r3, #4]
-	.loc 2 662 0
+	.loc 2 711 0
 	ldrh	r2, [r4, #4]
-	.loc 2 663 0
+	.loc 2 712 0
 	strh	r10, [r3, #2]	@ movhi
-	.loc 2 662 0
+	.loc 2 711 0
 	strh	r2, [r3]	@ movhi
-	.loc 2 664 0
+	.loc 2 713 0
 	mov	r3, #1
-.LVL577:
+.LVL598:
 	mov	r2, r3
 	mov	r1, r3
 	bl	FlashProgPages
-.LVL578:
-	.loc 2 665 0
+.LVL599:
+	.loc 2 714 0
 	ldrh	r3, [r4, #2]
 	add	r3, r3, #1
 	uxth	r3, r3
 	strh	r3, [r4, #2]	@ movhi
-	.loc 2 667 0
-	ldr	r2, [r5, #3224]
+	.loc 2 716 0
+	ldr	r2, [r5, #3220]
 	cmn	r2, #1
-	bne	.L693
-	.loc 2 668 0
-	ldr	r1, [r5, #3228]
-	.loc 2 669 0
+	bne	.L702
+	.loc 2 717 0
+	ldr	r1, [r5, #3224]
+	.loc 2 718 0
 	add	r6, r6, #1
-.LVL579:
-	.loc 2 668 0
-	ldr	r0, .L706+16
-	.loc 2 669 0
+.LVL600:
+	.loc 2 717 0
+	ldr	r0, .L715+16
+	.loc 2 718 0
 	uxth	r6, r6
-.LVL580:
-	.loc 2 668 0
+.LVL601:
+	.loc 2 717 0
 	bl	printk
-.LVL581:
-	.loc 2 670 0
+.LVL602:
+	.loc 2 719 0
 	ldrh	r3, [r4, #2]
 	cmp	r3, #2
-	.loc 2 671 0
+	.loc 2 720 0
 	ldrhls	r3, [r5, #80]
 	subls	r3, r3, #1
 	strhls	r3, [r4, #2]	@ movhi
-	.loc 2 673 0
+	.loc 2 722 0
 	cmp	r6, #3
-	bls	.L695
-	.loc 2 674 0
+	bls	.L704
+	.loc 2 723 0
 	mov	r2, r6
-	ldr	r1, [r5, #3228]
-	ldr	r0, .L706+20
+	ldr	r1, [r5, #3224]
+	ldr	r0, .L715+20
 	bl	printk
-.LVL582:
-.L696:
-	b	.L696
-.L695:
-	.loc 2 678 0
-	ldr	r3, [r4, #32]
-	cmp	r3, #0
-	beq	.L688
+.LVL603:
 .L705:
 	b	.L705
-.L693:
-	.loc 2 682 0
+.L704:
+	.loc 2 727 0
+	ldr	r3, [r4, #32]
+	cmp	r3, #0
+	beq	.L697
+.L714:
+	b	.L714
+.L702:
+	.loc 2 731 0
 	cmp	r3, #1
-	beq	.L688
-	.loc 2 685 0
-	ldr	r2, [r5, #3228]
-	.loc 2 687 0
+	beq	.L697
+	.loc 2 734 0
+	ldr	r2, [r5, #3224]
+	.loc 2 736 0
 	mov	r0, #0
-	.loc 2 685 0
+	.loc 2 734 0
 	ldr	r3, [r4, #24]
 	str	r2, [r3, r8, lsl #2]
-	.loc 2 687 0
-	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.L707:
+	.loc 2 736 0
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.L716:
 	.align	2
-.L706:
+.L715:
 	.word	.LANCHOR0
 	.word	.LANCHOR1+258
 	.word	.LC1
-	.word	.LANCHOR0+3224
-	.word	.LC82
-	.word	.LC83
-.LFE198:
-	.fnend
+	.word	.LANCHOR0+3220
+	.word	.LC85
+	.word	.LC86
+.LFE208:
 	.size	FtlMapWritePage, .-FtlMapWritePage
 	.align	2
 	.global	ftl_map_blk_gc
@@ -8289,177 +7691,175 @@ FtlMapWritePage:
 	.fpu softvfp
 	.type	ftl_map_blk_gc, %function
 ftl_map_blk_gc:
-	.fnstart
-.LFB196:
-	.loc 2 537 0
+.LFB206:
+	.loc 2 586 0
 	@ args = 0, pretend = 0, frame = 8
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL583:
-	.movsp ip
+.LVL604:
 	mov	ip, sp
-.LCFI238:
+.LCFI235:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI239:
-	.setfp fp, ip, #-4
+.LCFI236:
 	sub	fp, ip, #4
-.LCFI240:
-	.pad #12
-	sub	sp, sp, #12
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 537 0
+.LCFI237:
+	sub	sp, sp, #8
+	.loc 2 586 0
 	mov	r4, r0
-	.loc 2 541 0
+	.loc 2 590 0
 	ldr	r6, [r0, #12]
-.LVL584:
-	.loc 2 542 0
+.LVL605:
+	.loc 2 591 0
 	ldr	r9, [r0, #24]
-.LVL585:
-	.loc 2 545 0
+.LVL606:
+	.loc 2 594 0
 	bl	ftl_free_no_use_map_blk
-.LVL586:
-	.loc 2 547 0
+.LVL607:
+	.loc 2 596 0
 	ldrh	r3, [r4, #10]
 	ldrh	r2, [r4, #8]
-	ldr	r5, .L720
+	ldr	r5, .L729
 	sub	r3, r3, #4
 	cmp	r2, r3
-	blt	.L709
-	.loc 2 548 0
+	blt	.L718
+	.loc 2 597 0
 	uxth	r0, r0
 	lsl	r0, r0, #1
 	ldrh	r8, [r6, r0]
-.LVL587:
-	.loc 2 549 0
+.LVL608:
+	.loc 2 598 0
 	cmp	r8, #0
-	beq	.L709
-	.loc 2 549 0 is_stmt 0 discriminator 1
+	beq	.L718
+	.loc 2 598 0 is_stmt 0 discriminator 1
 	ldr	r3, [r4, #32]
 	cmp	r3, #0
-	bne	.L709
-	.loc 2 550 0 is_stmt 1
+	bne	.L718
+	.loc 2 599 0 is_stmt 1
 	mov	r2, #1
 	str	r2, [r4, #32]
-	.loc 2 551 0
+	.loc 2 600 0
 	strh	r3, [r6, r0]	@ movhi
-	.loc 2 552 0
+	.loc 2 601 0
 	ldrh	r3, [r4, #8]
-	.loc 2 553 0
+	.loc 2 602 0
 	ldrh	r2, [r4, #2]
-	.loc 2 552 0
+	.loc 2 601 0
 	sub	r3, r3, #1
 	strh	r3, [r4, #8]	@ movhi
-	.loc 2 553 0
+	.loc 2 602 0
 	ldrh	r3, [r5, #80]
 	cmp	r2, r3
-	bcc	.L710
-	.loc 2 554 0
+	bcc	.L719
+	.loc 2 603 0
 	mov	r0, r4
 	bl	ftl_map_blk_alloc_new_blk
-.LVL588:
-.L710:
-	.loc 2 537 0 discriminator 1
+.LVL609:
+.L719:
+	.loc 2 613 0 discriminator 1
+	ldr	r10, .L729+4
+	.loc 2 586 0 discriminator 1
 	mov	r6, #0
-.LVL589:
-.L711:
-	.loc 2 556 0 discriminator 1
-	ldrh	r3, [r4, #6]
-	uxth	r10, r6
-	cmp	r3, r10
-	bhi	.L715
-	.loc 2 572 0
+.LVL610:
+.L720:
+	.loc 2 605 0 discriminator 1
+	ldrh	r2, [r4, #6]
+	uxth	r3, r6
+	cmp	r2, r3
+	bhi	.L724
+	.loc 2 621 0
 	mov	r1, #1
 	mov	r0, r8
 	bl	FtlFreeSysBlkQueueIn
-.LVL590:
-	.loc 2 573 0
+.LVL611:
+	.loc 2 622 0
 	mov	r3, #0
 	str	r3, [r4, #32]
-.LVL591:
-.L709:
-	.loc 2 577 0
+.LVL612:
+.L718:
+	.loc 2 626 0
 	ldrh	r2, [r4, #2]
 	ldrh	r3, [r5, #80]
 	cmp	r2, r3
-	bcc	.L716
-	.loc 2 578 0
+	bcc	.L725
+	.loc 2 627 0
 	mov	r0, r4
 	bl	ftl_map_blk_alloc_new_blk
-.LVL592:
-.L716:
-	.loc 2 580 0
+.LVL613:
+.L725:
+	.loc 2 629 0
 	mov	r0, #0
 	sub	sp, fp, #40
-.LCFI241:
+.LCFI238:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL593:
-.L715:
-.LCFI242:
+.LVL614:
+.L724:
+.LCFI239:
 	uxth	r7, r6
-	.loc 2 557 0
-	ldr	r3, [r9, r7, lsl #2]
-	cmp	r8, r3, lsr #10
-	bne	.L712
-	.loc 2 558 0
-	ldr	r3, [r5, #3804]
-	.loc 2 562 0
-	ldr	r0, .L720+4
-	.loc 2 558 0
-	str	r3, [r5, #3232]
-	.loc 2 559 0
-	ldr	r3, [r5, #3244]
-	str	r3, [r5, #3236]
-	.loc 2 560 0
+	.loc 2 606 0
 	ldr	r2, [r9, r7, lsl #2]
-	.loc 2 559 0
-	str	r3, [fp, #-48]
-	.loc 2 560 0
+	cmp	r8, r2, lsr #10
+	bne	.L721
+	.loc 2 608 0
+	ldr	ip, [r5, #3244]
+	.loc 2 607 0
+	ldr	r2, [r5, #3804]
+	.loc 2 611 0
+	ldr	r0, .L729+8
+	.loc 2 608 0
+	str	ip, [r5, #3232]
+	.loc 2 607 0
 	str	r2, [r5, #3228]
-	.loc 2 562 0
+	.loc 2 609 0
+	ldr	r2, [r9, r7, lsl #2]
+	str	r3, [fp, #-48]
+	.loc 2 608 0
+	str	ip, [fp, #-44]
+	.loc 2 609 0
+	str	r2, [r5, #3224]
+	.loc 2 611 0
 	mov	r2, #1
 	mov	r1, r2
 	bl	FlashReadPages
-.LVL594:
-	.loc 2 564 0
+.LVL615:
+	.loc 2 613 0
+	ldr	ip, [fp, #-44]
 	ldr	r3, [fp, #-48]
-	ldrh	r3, [r3, #8]
-	cmp	r3, r10
-	beq	.L713
-	.loc 2 564 0 is_stmt 0 discriminator 1
-	mov	r2, #564
-	ldr	r1, .L720+8
-	ldr	r0, .L720+12
+.LVL616:
+	ldrh	r2, [ip, #8]
+	cmp	r2, r3
+	beq	.L722
+	.loc 2 613 0 is_stmt 0 discriminator 1
+	movw	r2, #613
+	mov	r1, r10
+	ldr	r0, .L729+12
 	bl	printk
-.LVL595:
-.L713:
-	.loc 2 565 0 is_stmt 1
-	ldr	r3, [r5, #3224]
+.LVL617:
+.L722:
+	.loc 2 614 0 is_stmt 1
+	ldr	r3, [r5, #3220]
+.LVL618:
 	cmn	r3, #1
-	.loc 2 566 0
+	.loc 2 615 0
 	moveq	r3, #0
 	streq	r3, [r9, r7, lsl #2]
-	.loc 2 565 0
-	beq	.L712
-	.loc 2 568 0
-	ldr	r2, [r5, #3232]
+	.loc 2 614 0
+	beq	.L721
+	.loc 2 617 0
+	ldr	r2, [r5, #3228]
 	mov	r1, r7
 	mov	r0, r4
 	bl	FtlMapWritePage
-.LVL596:
-.L712:
-	add	r6, r6, #1
-	b	.L711
+.LVL619:
 .L721:
+	add	r6, r6, #1
+	b	.L720
+.L730:
 	.align	2
-.L720:
+.L729:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+3224
 	.word	.LANCHOR1+274
+	.word	.LANCHOR0+3220
 	.word	.LC1
-.LFE196:
-	.fnend
+.LFE206:
 	.size	ftl_map_blk_gc, .-ftl_map_blk_gc
 	.align	2
 	.global	flush_l2p_region
@@ -8468,58 +7868,52 @@ ftl_map_blk_gc:
 	.fpu softvfp
 	.type	flush_l2p_region, %function
 flush_l2p_region:
-	.fnstart
-.LFB199:
-	.loc 2 690 0
+.LFB209:
+	.loc 2 739 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL597:
-	.movsp ip
+.LVL620:
 	mov	ip, sp
-.LCFI243:
+.LCFI240:
 	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI244:
-	.setfp fp, ip, #-4
+.LCFI241:
 	sub	fp, ip, #4
-.LCFI245:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 690 0
-	.loc 2 693 0
+.LCFI242:
+	.loc 2 742 0
+	ldr	r5, .L732
+	.loc 2 739 0
+	uxth	r0, r0
+	.loc 2 742 0
 	mov	r4, #12
-	ldr	r5, .L723
 	mul	r4, r4, r0
-	ldr	r3, [r5, #2424]
-	.loc 2 694 0
+	ldr	r3, [r5, #2468]
+	.loc 2 743 0
 	add	r0, r5, #3856
-.LVL598:
+.LVL621:
 	add	r0, r0, #8
-	.loc 2 693 0
+	.loc 2 742 0
 	add	r2, r3, r4
-	.loc 2 694 0
+	.loc 2 743 0
 	ldrh	r1, [r3, r4]
 	ldr	r2, [r2, #8]
 	bl	FtlMapWritePage
-.LVL599:
-	.loc 2 695 0
-	ldr	r3, [r5, #2424]
-	.loc 2 697 0
+.LVL622:
+	.loc 2 744 0
+	ldr	r0, [r5, #2468]
+	add	r4, r0, r4
+	.loc 2 746 0
 	mov	r0, #0
-	.loc 2 695 0
-	add	r4, r3, r4
+	.loc 2 744 0
 	ldr	r3, [r4, #4]
 	bic	r3, r3, #-2147483648
 	str	r3, [r4, #4]
-	.loc 2 697 0
+	.loc 2 746 0
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L724:
+.L733:
 	.align	2
-.L723:
+.L732:
 	.word	.LANCHOR0
-.LFE199:
-	.fnend
+.LFE209:
 	.size	flush_l2p_region, .-flush_l2p_region
 	.align	2
 	.global	log2phys
@@ -8528,162 +7922,154 @@ flush_l2p_region:
 	.fpu softvfp
 	.type	log2phys, %function
 log2phys:
-	.fnstart
-.LFB202:
-	.loc 2 753 0
-	@ args = 0, pretend = 0, frame = 0
+.LFB212:
+	.loc 2 802 0
+	@ args = 0, pretend = 0, frame = 4
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL600:
-	.movsp ip
+.LVL623:
 	mov	ip, sp
-.LCFI246:
-	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI247:
-	.setfp fp, ip, #-4
+.LCFI243:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+.LCFI244:
 	sub	fp, ip, #4
-.LCFI248:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 753 0
-	.loc 2 757 0
+.LCFI245:
+	sub	sp, sp, #4
+	.loc 2 806 0
 	mvn	r6, #0
-	.loc 2 753 0
+	.loc 2 805 0
+	ldr	r4, .L748
+	.loc 2 802 0
 	mov	r7, r1
-	.loc 2 756 0
-	ldr	r4, .L739
-	.loc 2 753 0
 	mov	r10, r2
-	.loc 2 756 0
+	.loc 2 805 0
 	ldrh	r3, [r4, #84]
 	add	r3, r3, #7
-	lsr	r8, r0, r3
-	.loc 2 757 0
+	lsr	r9, r0, r3
+	.loc 2 806 0
 	bic	r6, r0, r6, lsl r3
-	.loc 2 759 0
-	ldr	r3, [r4, #2436]
-	.loc 2 756 0
-	uxth	r8, r8
-.LVL601:
-	.loc 2 757 0
+	.loc 2 808 0
+	ldr	r3, [r4, #2480]
+	.loc 2 805 0
+	uxth	r8, r9
+.LVL624:
+	.loc 2 806 0
 	uxth	r6, r6
-.LVL602:
-	.loc 2 759 0
+.LVL625:
+	.loc 2 808 0
 	cmp	r0, r3
-	bcc	.L726
-	.loc 2 759 0 is_stmt 0 discriminator 1
-	movw	r2, #759
-	ldr	r1, .L739+4
-	ldr	r0, .L739+8
-.LVL603:
+	bcc	.L735
+	.loc 2 808 0 is_stmt 0 discriminator 1
+	mov	r2, #808
+	ldr	r1, .L748+4
+	ldr	r0, .L748+8
+.LVL626:
 	bl	printk
-.LVL604:
-.L726:
-	.loc 2 761 0 is_stmt 1
-	ldrh	r2, [r4, #114]
-	mov	r3, #0
-	.loc 2 762 0
-	ldr	r1, [r4, #2424]
-	mov	r9, #12
-.LVL605:
-.L727:
-	uxth	r5, r3
-	.loc 2 761 0 discriminator 1
-	cmp	r5, r2
-	bcc	.L732
-	.loc 2 776 0
+.LVL627:
+.L735:
+	.loc 2 810 0 is_stmt 1
+	ldrh	r1, [r4, #114]
+	mov	r2, #0
+	.loc 2 811 0
+	ldr	r0, [r4, #2468]
+.LVL628:
+	mov	r3, #12
+.LVL629:
+.L736:
+	uxth	r5, r2
+	.loc 2 810 0 discriminator 1
+	cmp	r5, r1
+	bcc	.L741
+	str	r3, [fp, #-44]
+	.loc 2 825 0
 	bl	select_l2p_ram_region
-.LVL606:
-	.loc 2 777 0
-	mul	r9, r9, r0
-	ldr	r3, [r4, #2424]
-	.loc 2 776 0
+.LVL630:
+	.loc 2 826 0
+	ldr	r3, [fp, #-44]
+	.loc 2 825 0
 	mov	r5, r0
-	.loc 2 777 0
-	ldrh	r1, [r3, r9]
-	add	r2, r3, r9
+	.loc 2 826 0
+	ldr	r2, [r4, #2468]
+	mul	r3, r3, r0
+	add	r1, r2, r3
+	ldrh	r2, [r2, r3]
 	movw	r3, #65535
-	cmp	r1, r3
-	beq	.L733
-	.loc 2 777 0 is_stmt 0 discriminator 1
-	ldr	r3, [r2, #4]
+	cmp	r2, r3
+	beq	.L742
+	.loc 2 826 0 is_stmt 0 discriminator 1
+	ldr	r3, [r1, #4]
 	cmp	r3, #0
-	bge	.L733
-	.loc 2 778 0 is_stmt 1
+	bge	.L742
+	.loc 2 827 0 is_stmt 1
 	bl	flush_l2p_region
-.LVL607:
-.L733:
-	.loc 2 781 0
+.LVL631:
+.L742:
+	.loc 2 830 0
 	mov	r1, r5
-	mov	r0, r8
+	uxth	r0, r9
 	bl	load_l2p_region
-.LVL608:
-	.loc 2 782 0
-	b	.L728
-.LVL609:
-.L732:
-	add	r3, r3, #1
-	.loc 2 762 0
-	mla	r0, r9, r3, r1
-.LVL610:
-	ldrh	r0, [r0, #-12]
-	cmp	r0, r8
-	bne	.L727
-.L728:
-	.loc 2 764 0
+.LVL632:
+	.loc 2 831 0
+	b	.L737
+.L741:
+	add	r2, r2, #1
+	.loc 2 811 0
+	mla	ip, r3, r2, r0
+	ldrh	ip, [ip, #-12]
+	cmp	ip, r8
+	bne	.L736
+.L737:
+	.loc 2 813 0
 	cmp	r10, #0
 	mov	r3, #12
-	bne	.L729
-	.loc 2 765 0
-	ldr	r2, [r4, #2424]
+	bne	.L738
+	.loc 2 814 0
+	ldr	r2, [r4, #2468]
 	mla	r3, r3, r5, r2
 	ldr	r3, [r3, #8]
 	ldr	r3, [r3, r6, lsl #2]
 	str	r3, [r7]
-.L730:
-	.loc 2 771 0
-	ldr	r2, [r4, #2424]
+.L739:
+	.loc 2 820 0
+	ldr	r2, [r4, #2468]
 	mov	r3, #12
-	.loc 2 783 0
+	.loc 2 832 0
 	mov	r0, #0
-	.loc 2 771 0
+	.loc 2 820 0
 	mla	r5, r3, r5, r2
-.LVL611:
+.LVL633:
 	ldr	r3, [r5, #4]
 	cmn	r3, #1
-	.loc 2 772 0
+	.loc 2 821 0
 	addne	r3, r3, #1
 	strne	r3, [r5, #4]
-	.loc 2 783 0
-	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL612:
-.L729:
-	.loc 2 767 0
+	.loc 2 832 0
+	ldmib	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL634:
+.L738:
+	.loc 2 816 0
 	mul	r3, r3, r5
-	ldr	r2, [r4, #2424]
+	ldr	r2, [r4, #2468]
 	ldr	r1, [r7]
 	add	r2, r2, r3
 	ldr	r2, [r2, #8]
 	str	r1, [r2, r6, lsl #2]
-	.loc 2 768 0
-	ldr	r2, [r4, #2424]
+	.loc 2 817 0
+	ldr	r2, [r4, #2468]
 	add	r3, r2, r3
 	ldr	r2, [r3, #4]
 	orr	r2, r2, #-2147483648
 	str	r2, [r3, #4]
-	.loc 2 769 0
-	movw	r3, #2428
+	.loc 2 818 0
+	movw	r3, #2472
 	strh	r8, [r4, r3]	@ movhi
-	b	.L730
-.L740:
+	b	.L739
+.L749:
 	.align	2
-.L739:
+.L748:
 	.word	.LANCHOR0
 	.word	.LANCHOR1+289
 	.word	.LC1
-.LFE202:
-	.fnend
+.LFE212:
 	.size	log2phys, .-log2phys
 	.align	2
 	.global	FtlReUsePrevPpa
@@ -8692,153 +8078,129 @@ log2phys:
 	.fpu softvfp
 	.type	FtlReUsePrevPpa, %function
 FtlReUsePrevPpa:
-	.fnstart
-.LFB220:
-	.loc 2 1628 0
-	@ args = 0, pretend = 0, frame = 8
+.LFB230:
+	.loc 2 1677 0
+	@ args = 0, pretend = 0, frame = 4
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL613:
-	.movsp ip
+.LVL635:
 	mov	ip, sp
-.LCFI249:
+.LCFI246:
 	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, fp, ip, lr}
-.LCFI250:
-	.setfp fp, ip, #-4
+.LCFI247:
 	sub	fp, ip, #4
-.LCFI251:
-	.pad #12
-	sub	sp, sp, #12
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 1628 0
-	.loc 2 1631 0
-	ldr	r5, .L751
-	.loc 2 1628 0
+.LCFI248:
+	sub	sp, sp, #4
+	.loc 2 1677 0
 	mov	r7, r0
-	.loc 2 1629 0
+	.loc 2 1680 0
+	ldr	r5, .L760
+	.loc 2 1678 0
 	ubfx	r0, r1, #10, #16
-.LVL614:
-	.loc 2 1628 0
-	str	r1, [fp, #-40]
-	.loc 2 1629 0
+.LVL636:
+	.loc 2 1677 0
+	str	r1, [fp, #-36]
+	.loc 2 1678 0
 	bl	P2V_block_in_plane
-.LVL615:
-	.loc 2 1631 0
-	ldr	r2, [r5, #2260]
-.LVL616:
+.LVL637:
+	.loc 2 1680 0
+	ldr	r2, [r5, #2300]
+.LVL638:
 	lsl	r6, r0, #1
 	ldrh	r3, [r2, r6]
 	cmp	r3, #0
-	bne	.L742
-	.loc 2 1632 0
-	ldr	r4, [r5, #2272]
+	bne	.L751
+	.loc 2 1681 0
+	ldr	r4, [r5, #2316]
 	cmp	r4, #0
-	beq	.L743
-.LBB368:
-	.loc 2 1635 0
-	movw	r2, #2276
-	.loc 2 1636 0
-	ldr	ip, .L751+4
-	.loc 2 1635 0
-	ldrh	r1, [r5, r2]
-.LVL617:
-	.loc 2 1644 0
-	mov	lr, #6
-	.loc 2 1636 0
-	ldr	r2, [r5, #2252]
-	.loc 2 1644 0
-	movw	r8, #65535
-	.loc 2 1636 0
+	beq	.L752
+.LBB390:
+	.loc 2 1685 0
+	ldr	r2, [r5, #2292]
+	.loc 2 1684 0
+	add	r8, r5, #2320
+	ldrh	r1, [r8]
+.LVL639:
+	.loc 2 1693 0
+	movw	lr, #65535
+	.loc 2 1685 0
 	sub	r4, r4, r2
-	asr	r4, r4, #1
-	mul	r4, ip, r4
-	uxth	r4, r4
-.LVL618:
-.L744:
-	.loc 2 1637 0 discriminator 1
+	ubfx	r4, r4, #3, #16
+.LVL640:
+.L753:
+	.loc 2 1686 0 discriminator 1
 	uxth	ip, r3
 	cmp	r1, ip
-	bls	.L743
-	.loc 2 1638 0
+	bls	.L752
+	.loc 2 1687 0
 	cmp	r4, r0
-	bne	.L745
-	.loc 2 1639 0
+	bne	.L754
+	.loc 2 1688 0
 	mov	r1, r4
-.LVL619:
-	ldr	r0, .L751+8
-.LVL620:
+.LVL641:
+	ldr	r0, .L760+4
+.LVL642:
 	bl	List_remove_node
-.LVL621:
-	movw	r3, #2276
-	ldrh	r3, [r5, r3]
+.LVL643:
+	ldrh	r3, [r8]
 	cmp	r3, #0
-	bne	.L746
-	.loc 2 1639 0 is_stmt 0 discriminator 1
-	movw	r2, #1639
-	ldr	r1, .L751+12
-	ldr	r0, .L751+16
+	bne	.L755
+	.loc 2 1688 0 is_stmt 0 discriminator 1
+	movw	r2, #1688
+	ldr	r1, .L760+8
+	ldr	r0, .L760+12
 	bl	printk
-.LVL622:
-.L746:
-	.loc 2 1639 0 discriminator 3
-	movw	r2, #2276
-	.loc 2 1640 0 is_stmt 1 discriminator 3
+.LVL644:
+.L755:
+	.loc 2 1688 0 discriminator 3
+	ldrh	r3, [r8]
+	.loc 2 1689 0 is_stmt 1 discriminator 3
 	mov	r0, r4
-	.loc 2 1639 0 discriminator 3
-	ldrh	r3, [r5, r2]
+	.loc 2 1688 0 discriminator 3
 	sub	r3, r3, #1
-	strh	r3, [r5, r2]	@ movhi
-	.loc 2 1640 0 discriminator 3
+	strh	r3, [r8]	@ movhi
+	.loc 2 1689 0 discriminator 3
 	bl	INSERT_DATA_LIST
-.LVL623:
-	.loc 2 1641 0 discriminator 3
-	ldr	r2, [r5, #2260]
+.LVL645:
+	.loc 2 1690 0 discriminator 3
+	ldr	r2, [r5, #2300]
 	ldrh	r3, [r2, r6]
-.LVL624:
-.L742:
-.LBE368:
-	.loc 2 1650 0
+.LVL646:
+.L751:
+.LBE390:
+	.loc 2 1699 0
 	add	r3, r3, #1
 	strh	r3, [r2, r6]	@ movhi
-	b	.L743
-.LVL625:
-.L745:
-.LBB369:
-	.loc 2 1644 0
-	mul	r4, lr, r4
-.LVL626:
+	b	.L752
+.LVL647:
+.L754:
+.LBB391:
+	.loc 2 1693 0
+	lsl	r4, r4, #3
+.LVL648:
 	add	r3, r3, #1
 	ldrh	r4, [r2, r4]
-.LVL627:
-	cmp	r4, r8
-	bne	.L744
-.L743:
-.LBE369:
-	.loc 2 1652 0
+.LVL649:
+	cmp	r4, lr
+	bne	.L753
+.L752:
+.LBE391:
+	.loc 2 1701 0
 	mov	r2, #1
-	sub	r1, fp, #40
-.LVL628:
+	sub	r1, fp, #36
+.LVL650:
 	mov	r0, r7
-.LVL629:
+.LVL651:
 	bl	log2phys
-.LVL630:
-	.loc 2 1653 0
-	sub	sp, fp, #32
-.LCFI252:
-	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
-.LVL631:
-.L752:
+.LVL652:
+	ldmib	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
+.L761:
 	.align	2
-.L751:
+.L760:
 	.word	.LANCHOR0
-	.word	-1431655765
-	.word	.LANCHOR0+2272
+	.word	.LANCHOR0+2316
 	.word	.LANCHOR1+298
 	.word	.LC1
-.LFE220:
-	.fnend
+.LFE230:
 	.size	FtlReUsePrevPpa, .-FtlReUsePrevPpa
 	.align	2
 	.global	ftl_scan_all_data
@@ -8847,107 +8209,98 @@ FtlReUsePrevPpa:
 	.fpu softvfp
 	.type	ftl_scan_all_data, %function
 ftl_scan_all_data:
-	.fnstart
-.LFB231:
-	.loc 2 2275 0
-	@ args = 0, pretend = 0, frame = 8
+.LFB241:
+	.loc 2 2325 0
+	@ args = 0, pretend = 0, frame = 4
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI253:
+.LCFI249:
 	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI254:
-	.setfp fp, ip, #-4
+.LCFI250:
 	sub	fp, ip, #4
-.LCFI255:
-	.pad #32
-	sub	sp, sp, #32
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2275 0
-	.loc 2 2281 0
-	ldr	r6, .L761
+.LCFI251:
+	sub	sp, sp, #24
+	.loc 2 2331 0
 	mov	r5, #0
-.LVL632:
-	.loc 2 2280 0
+.LVL653:
+	ldr	r6, .L770
+	.loc 2 2330 0
 	mov	r1, #0
-	ldr	r0, .L761+4
+	ldr	r0, .L770+4
 	bl	printk
-.LVL633:
+.LVL654:
 	mov	r4, r6
-.LVL634:
-.L754:
-	.loc 2 2281 0 discriminator 1
-	ldr	r3, [r6, #2436]
+.LVL655:
+.L763:
+	.loc 2 2331 0 discriminator 1
+	ldr	r3, [r6, #2480]
 	cmp	r5, r3
-	bcc	.L760
-	.loc 2 2303 0
+	bcc	.L769
+	.loc 2 2353 0
 	sub	sp, fp, #28
-.LCFI256:
+.LCFI252:
 	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.LVL635:
-.L760:
-.LCFI257:
-	.loc 2 2282 0
+.LVL656:
+.L769:
+.LCFI253:
+	.loc 2 2332 0
 	mov	r2, #0
 	sub	r1, fp, #32
 	mov	r0, r5
 	bl	log2phys
-.LVL636:
-	.loc 2 2283 0
+.LVL657:
+	.loc 2 2333 0
 	ubfx	r3, r5, #0, #11
 	cmp	r3, #0
-	bne	.L755
-	.loc 2 2284 0
+	bne	.L764
+	.loc 2 2334 0
 	ldr	r2, [fp, #-32]
 	mov	r1, r5
-	ldr	r0, .L761+8
+	ldr	r0, .L770+8
 	bl	printk
-.LVL637:
-.L755:
-	.loc 2 2285 0
+.LVL658:
+.L764:
+	.loc 2 2335 0
 	ldr	r3, [fp, #-32]
 	cmn	r3, #1
-	beq	.L757
-	.loc 2 2286 0
-	str	r3, [r4, #3228]
-	.loc 2 2290 0
+	beq	.L766
+	.loc 2 2336 0
+	str	r3, [r4, #3224]
+	.loc 2 2340 0
 	mov	r2, #0
-	.loc 2 2288 0
-	ldr	r3, [r4, #2244]
-	.loc 2 2292 0
+	.loc 2 2338 0
+	ldr	r3, [r4, #3240]
+	.loc 2 2342 0
 	mov	r1, #1
-	.loc 2 2289 0
+	.loc 2 2339 0
 	ldr	r7, [r4, #3244]
-	.loc 2 2292 0
-	ldr	r0, .L761+12
-	.loc 2 2288 0
-	str	r3, [r4, #3232]
-	.loc 2 2287 0
-	str	r5, [r4, #3240]
-	.loc 2 2289 0
-	str	r7, [r4, #3236]
-	.loc 2 2290 0
-	str	r2, [r4, #3224]
-	.loc 2 2292 0
+	.loc 2 2342 0
+	ldr	r0, .L770+12
+	.loc 2 2338 0
+	str	r3, [r4, #3228]
+	.loc 2 2337 0
+	str	r5, [r4, #3236]
+	.loc 2 2339 0
+	str	r7, [r4, #3232]
+	.loc 2 2340 0
+	str	r2, [r4, #3220]
+	.loc 2 2342 0
 	bl	FlashReadPages
-.LVL638:
-	.loc 2 2293 0
-	ldr	r3, [r4, #3224]
+.LVL659:
+	.loc 2 2343 0
+	ldr	r3, [r4, #3220]
 	cmn	r3, #1
 	cmpne	r3, #256
-	beq	.L758
-	.loc 2 2294 0
+	beq	.L767
+	.loc 2 2344 0
 	ldr	r3, [r7, #8]
 	cmp	r5, r3
-	beq	.L757
-.L758:
-	.loc 2 2297 0
-	ldr	r2, [r4, #3232]
-	ldr	r3, [r4, #3236]
-	ldr	r0, .L761+16
+	beq	.L766
+.L767:
+	.loc 2 2347 0
+	ldr	r2, [r4, #3228]
+	ldr	r3, [r4, #3232]
+	ldr	r0, .L770+16
 	ldr	r1, [r2, #4]
 	str	r1, [sp, #16]
 	mov	r1, r5
@@ -8960,23 +8313,22 @@ ftl_scan_all_data:
 	ldr	r2, [r3, #4]
 	str	r2, [sp]
 	ldr	r3, [r3]
-	ldr	r2, [r4, #3228]
+	ldr	r2, [r4, #3224]
 	bl	printk
-.LVL639:
-.L757:
-	.loc 2 2281 0 discriminator 2
+.LVL660:
+.L766:
+	.loc 2 2331 0 discriminator 2
 	add	r5, r5, #1
-	b	.L754
-.L762:
+	b	.L763
+.L771:
 	.align	2
-.L761:
+.L770:
 	.word	.LANCHOR0
-	.word	.LC84
-	.word	.LC85
-	.word	.LANCHOR0+3224
-	.word	.LC86
-.LFE231:
-	.fnend
+	.word	.LC87
+	.word	.LC88
+	.word	.LANCHOR0+3220
+	.word	.LC89
+.LFE241:
 	.size	ftl_scan_all_data, .-ftl_scan_all_data
 	.align	2
 	.global	FtlReadRefresh
@@ -8985,70 +8337,61 @@ ftl_scan_all_data:
 	.fpu softvfp
 	.type	FtlReadRefresh, %function
 FtlReadRefresh:
-	.fnstart
-.LFB258:
+.LFB268:
 	.loc 5 419 0
 	@ args = 0, pretend = 0, frame = 88
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI258:
+.LCFI254:
 	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI259:
-	.setfp fp, ip, #-4
+.LCFI255:
 	sub	fp, ip, #4
-.LCFI260:
-	.pad #88
+.LCFI256:
 	sub	sp, sp, #88
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 5 419 0
 	.loc 5 425 0
-	ldr	r3, .L776
-	ldr	r0, [r3, #2696]
+	ldr	r3, .L785
+	ldr	r0, [r3, #2692]
 	mov	r4, r3
 	cmp	r0, #0
-	beq	.L764
+	beq	.L773
 	.loc 5 426 0
-	ldr	r1, [r3, #2700]
-	ldr	r2, [r3, #2436]
+	ldr	r1, [r3, #2696]
+	ldr	r2, [r3, #2480]
 	cmp	r1, r2
-	bcs	.L765
+	bcs	.L774
 	mov	r5, #2048
-.LVL640:
-.L770:
-.LBB375:
-.LBB376:
+.LVL661:
+.L779:
+.LBB397:
+.LBB398:
 	.loc 5 428 0
-	ldr	r0, [r4, #2700]
-	ldr	r3, [r4, #2436]
+	ldr	r0, [r4, #2696]
+	ldr	r3, [r4, #2480]
 	cmp	r0, r3
-	bcs	.L767
+	bcs	.L776
 	.loc 5 430 0
 	mov	r2, #0
 	sub	r1, fp, #108
 	bl	log2phys
-.LVL641:
+.LVL662:
 	.loc 5 432 0
 	ldr	r2, [fp, #-108]
 	.loc 5 431 0
-	ldr	r3, [r4, #2700]
+	ldr	r3, [r4, #2696]
 	.loc 5 432 0
 	cmn	r2, #1
 	.loc 5 431 0
 	add	r3, r3, #1
-	str	r3, [r4, #2700]
+	str	r3, [r4, #2696]
 	.loc 5 432 0
-	beq	.L768
-.LBB377:
+	beq	.L777
+.LBB399:
 	.loc 5 435 0
 	str	r3, [fp, #-88]
 	.loc 5 438 0
 	sub	r0, fp, #20
 	.loc 5 436 0
-	ldr	r3, .L776+4
+	ldr	r3, .L785+4
 	.loc 5 439 0
 	mov	r1, #1
 	.loc 5 434 0
@@ -9063,60 +8406,60 @@ FtlReadRefresh:
 	str	r3, [fp, #-92]
 	.loc 5 439 0
 	bl	FlashReadPages
-.LVL642:
+.LVL663:
 	.loc 5 440 0
 	ldr	r3, [fp, #-104]
 	cmp	r3, #256
-	bne	.L767
+	bne	.L776
 	.loc 5 442 0
 	ldr	r0, [fp, #-108]
 	ubfx	r0, r0, #10, #16
 	bl	P2V_block_in_plane
-.LVL643:
+.LVL664:
 	bl	FtlGcRefreshBlock
-.LVL644:
-.L767:
-.LBE377:
+.LVL665:
+.L776:
+.LBE399:
 	mvn	r0, #0
-.L763:
-.LBE376:
-.LBE375:
+.L772:
+.LBE398:
+.LBE397:
 	.loc 5 466 0
 	sub	sp, fp, #20
-.LCFI261:
+.LCFI257:
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L768:
-.LCFI262:
-.LBB379:
-.LBB378:
+.L777:
+.LCFI258:
+.LBB401:
+.LBB400:
 	.loc 5 427 0
 	subs	r5, r5, #1
-	bne	.L770
-	b	.L767
-.LVL645:
-.L765:
-.LBE378:
-.LBE379:
+	bne	.L779
+	b	.L776
+.LVL666:
+.L774:
+.LBE400:
+.LBE401:
 	.loc 5 451 0
-	ldr	r2, [r3, #2440]
+	ldr	r2, [r3, #2484]
 	.loc 5 449 0
 	mov	r0, #0
-	str	r0, [r3, #2696]
+	str	r0, [r3, #2692]
 	.loc 5 450 0
-	str	r0, [r3, #2700]
+	str	r0, [r3, #2696]
 	.loc 5 451 0
-	str	r2, [r3, #2692]
-	b	.L763
-.L764:
-.LBB380:
+	str	r2, [r3, #2688]
+	b	.L772
+.L773:
+.LBB402:
 	.loc 5 456 0
-	ldr	r1, [r3, #2440]
-	ldr	r2, [r3, #2692]
+	ldr	r1, [r3, #2484]
+	ldr	r2, [r3, #2688]
 	add	ip, r1, #1048576
 	cmp	r2, ip
-	bhi	.L773
+	bhi	.L782
 	.loc 5 454 0
-	ldr	r3, [r3, #2496]
+	ldr	r3, [r3, #2540]
 	.loc 5 457 0
 	mov	ip, #33554432
 	.loc 5 454 0
@@ -9124,33 +8467,32 @@ FtlReadRefresh:
 	.loc 5 457 0
 	add	r2, r2, ip, asr r3
 	cmp	r1, r2
-	bhi	.L773
+	bhi	.L782
 	.loc 5 458 0
-	ldr	r3, .L776+8
+	ldr	r3, .L785+8
 	ldrb	r3, [r3, #28]	@ zero_extendqisi2
 	cmp	r3, #0
-	bne	.L763
-.L773:
+	bne	.L772
+.L782:
 	.loc 5 460 0
 	mov	r3, #1
 	.loc 5 461 0
 	mov	r0, #0
 	.loc 5 460 0
-	str	r3, [r4, #2696]
+	str	r3, [r4, #2692]
 	.loc 5 461 0
-	str	r0, [r4, #2700]
+	str	r0, [r4, #2696]
 	.loc 5 462 0
-	str	r1, [r4, #2692]
-	b	.L763
-.L777:
+	str	r1, [r4, #2688]
+	b	.L772
+.L786:
 	.align	2
-.L776:
+.L785:
 	.word	.LANCHOR0
 	.word	ftl_temp_buf
-	.word	.LANCHOR0+2504
-.LBE380:
-.LFE258:
-	.fnend
+	.word	.LANCHOR0+2244
+.LBE402:
+.LFE268:
 	.size	FtlReadRefresh, .-FtlReadRefresh
 	.align	2
 	.global	ftl_check_vpc
@@ -9159,203 +8501,182 @@ FtlReadRefresh:
 	.fpu softvfp
 	.type	ftl_check_vpc, %function
 ftl_check_vpc:
-	.fnstart
-.LFB230:
-	.loc 2 2223 0
-	@ args = 0, pretend = 0, frame = 8
+.LFB240:
+	.loc 2 2273 0
+	@ args = 0, pretend = 0, frame = 4
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI263:
+.LCFI259:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI264:
-	.setfp fp, ip, #-4
+.LCFI260:
 	sub	fp, ip, #4
-.LCFI265:
-	.pad #12
-	sub	sp, sp, #12
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2223 0
-	.loc 2 2232 0
-	ldr	r6, .L802
+.LCFI261:
+	sub	sp, sp, #4
+	.loc 2 2282 0
 	mov	r4, #0
-.LVL646:
-	.loc 2 2229 0
-	ldr	r1, .L802+4
-	ldr	r0, .L802+8
+.LVL667:
+	ldr	r6, .L811
+	.loc 2 2279 0
+	ldr	r1, .L811+4
+	ldr	r0, .L811+8
 	mov	r5, r6
 	bl	printk
-.LVL647:
-.LBB387:
-.LBB388:
-.LBB389:
+.LVL668:
+.LBB409:
+.LBB410:
+.LBB411:
 	.loc 1 202 0
 	mov	r1, #8192
-	ldr	r0, .L802+12
+	ldr	r0, .L811+12
 	bl	__memzero
-.LVL648:
-.L779:
-.LBE389:
-.LBE388:
-.LBE387:
-	.loc 2 2232 0 discriminator 1
-	ldr	r3, [r6, #2436]
+.LVL669:
+.L788:
+.LBE411:
+.LBE410:
+.LBE409:
+	.loc 2 2282 0 discriminator 1
+	ldr	r3, [r6, #2480]
 	cmp	r4, r3
-	bcc	.L781
-	.loc 2 2245 0 discriminator 1
-	ldr	r8, .L802+12
+	bcc	.L790
+	.loc 2 2295 0 discriminator 1
+	ldr	r8, .L811+12
 	mov	r4, #0
-.LVL649:
-	.loc 2 2247 0 discriminator 1
-	ldr	r9, .L802+16
+.LVL670:
+	.loc 2 2297 0 discriminator 1
+	ldr	r9, .L811+16
 	mov	r6, r4
-.LVL650:
-.L782:
-	.loc 2 2243 0 discriminator 1
+.LVL671:
+.L791:
+	.loc 2 2293 0 discriminator 1
 	ldrh	r2, [r5, #16]
 	uxth	r3, r4
 	cmp	r2, r3
-	bhi	.L784
-	.loc 2 2255 0
-	ldr	r4, [r5, #2272]
+	bhi	.L793
+	.loc 2 2305 0
+	ldr	r4, [r5, #2316]
 	cmp	r4, #0
-	beq	.L785
-.LBB390:
-	.loc 2 2257 0
-	movw	r3, #2276
-	.loc 2 2263 0
-	ldr	r9, .L802+12
-	.loc 2 2257 0
-	ldrh	r7, [r5, r3]
-.LVL651:
-	.loc 2 2259 0
-	mov	r8, #0
-	.loc 2 2258 0
-	ldr	r3, [r5, #2252]
-	.loc 2 2263 0
-	ldr	r10, .L802+20
-	.loc 2 2258 0
+	beq	.L794
+.LBB412:
+	.loc 2 2307 0
+	ldr	r3, .L811+20
+	.loc 2 2309 0
+	mov	r7, #0
+	.loc 2 2313 0
+	ldr	r9, .L811+12
+	ldr	r10, .L811+24
+	.loc 2 2307 0
+	ldrh	r8, [r3]
+.LVL672:
+	.loc 2 2308 0
+	ldr	r3, [r5, #2292]
 	sub	r4, r4, r3
-	ldr	r3, .L802+24
-	asr	r4, r4, #1
-	mul	r4, r3, r4
-	uxth	r4, r4
-.L786:
-	.loc 2 2259 0 discriminator 1
-	uxth	r3, r8
-	cmp	r7, r3
-	bls	.L785
-	.loc 2 2261 0
-	ldr	r2, [r5, #2260]
+	ubfx	r4, r4, #3, #16
+.L795:
+	.loc 2 2309 0 discriminator 1
+	uxth	r3, r7
+	cmp	r8, r3
+	bls	.L794
+	.loc 2 2311 0
+	ldr	r2, [r5, #2300]
 	lsl	r3, r4, #1
 	ldrh	r2, [r2, r3]
 	cmp	r2, #0
-	beq	.L787
-	.loc 2 2264 0
+	beq	.L796
+	.loc 2 2314 0
 	mov	r6, #1
-	.loc 2 2263 0
+	.loc 2 2313 0
 	ldrh	r3, [r9, r3]
 	mov	r1, r4
 	mov	r0, r10
 	bl	printk
-.LVL652:
-.L787:
-	.loc 2 2266 0
-	mov	r3, #6
-	ldr	r2, [r5, #2252]
-	mul	r4, r3, r4
+.LVL673:
+.L796:
+	.loc 2 2316 0
+	ldr	r3, [r5, #2292]
+	lsl	r4, r4, #3
+	add	r7, r7, #1
+	ldrh	r4, [r3, r4]
 	movw	r3, #65535
-	add	r8, r8, #1
-	ldrh	r4, [r2, r4]
 	cmp	r4, r3
-	bne	.L786
-.L785:
-.LBE390:
-	.loc 2 2271 0
+	bne	.L795
+.L794:
+.LBE412:
+	.loc 2 2321 0
 	cmp	r6, #0
-	beq	.L778
-	.loc 2 2271 0 is_stmt 0 discriminator 1
-	movw	r2, #2271
-	ldr	r1, .L802+4
-	ldr	r0, .L802+28
+	ldmibeq	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+	.loc 2 2321 0 is_stmt 0 discriminator 1
+	movw	r2, #2321
+	ldr	r1, .L811+4
+	ldr	r0, .L811+28
 	bl	printk
-.LVL653:
-.L778:
-	.loc 2 2272 0 is_stmt 1
-	sub	sp, fp, #40
-.LCFI266:
-	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL654:
-.L781:
-.LCFI267:
-	.loc 2 2234 0
+.LVL674:
+	ldmib	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL675:
+.L790:
+	.loc 2 2284 0 is_stmt 1
 	mov	r2, #0
-	sub	r1, fp, #48
+	sub	r1, fp, #44
 	mov	r0, r4
 	bl	log2phys
-.LVL655:
-	.loc 2 2235 0
-	ldr	r0, [fp, #-48]
+.LVL676:
+	.loc 2 2285 0
+	ldr	r0, [fp, #-44]
 	cmn	r0, #1
-	beq	.L780
-	.loc 2 2237 0
+	beq	.L789
+	.loc 2 2287 0
 	ubfx	r0, r0, #10, #16
 	bl	P2V_block_in_plane
-.LVL656:
-	.loc 2 2238 0
-	ldr	r2, .L802+12
+.LVL677:
+	.loc 2 2288 0
+	ldr	r2, .L811+12
 	lsl	r0, r0, #1
 	ldrh	r3, [r2, r0]
 	add	r3, r3, #1
 	strh	r3, [r2, r0]	@ movhi
-.L780:
-	.loc 2 2232 0 discriminator 2
+.L789:
+	.loc 2 2282 0 discriminator 2
 	add	r4, r4, #1
-	b	.L779
-.LVL657:
-.L784:
-	.loc 2 2245 0
+	b	.L788
+.LVL678:
+.L793:
+	.loc 2 2295 0
 	uxth	r1, r4
-	ldr	r3, [r5, #2260]
+	ldr	r3, [r5, #2300]
 	lsl	r7, r1, #1
 	ldrh	r2, [r3, r7]
 	ldrh	r3, [r8, r7]
 	cmp	r2, r3
-	beq	.L783
-	.loc 2 2247 0
+	beq	.L792
+	.loc 2 2297 0
 	mov	r0, r9
 	bl	printk
-.LVL658:
-	.loc 2 2248 0
-	ldr	r3, [r5, #2260]
+.LVL679:
+	.loc 2 2298 0
+	ldr	r3, [r5, #2300]
 	movw	r2, #65535
 	ldrh	r3, [r3, r7]
 	cmp	r3, r2
-	beq	.L783
-	.loc 2 2248 0 is_stmt 0 discriminator 1
+	beq	.L792
+	.loc 2 2298 0 is_stmt 0 discriminator 1
 	ldrh	r2, [r8, r7]
-	.loc 2 2250 0 is_stmt 1 discriminator 1
+	.loc 2 2300 0 is_stmt 1 discriminator 1
 	cmp	r2, r3
 	movhi	r6, #1
-.L783:
+.L792:
 	add	r4, r4, #1
-	b	.L782
-.L803:
+	b	.L791
+.L812:
 	.align	2
-.L802:
+.L811:
 	.word	.LANCHOR0
 	.word	.LANCHOR1+314
-	.word	.LC87
+	.word	.LC90
 	.word	check_vpc_table
-	.word	.LC88
-	.word	.LC89
-	.word	-1431655765
+	.word	.LC91
+	.word	.LANCHOR0+2320
+	.word	.LC92
 	.word	.LC1
-.LFE230:
-	.fnend
+.LFE240:
 	.size	ftl_check_vpc, .-ftl_check_vpc
 	.align	2
 	.global	FtlMapBlkWriteDump_data
@@ -9364,94 +8685,88 @@ ftl_check_vpc:
 	.fpu softvfp
 	.type	FtlMapBlkWriteDump_data, %function
 FtlMapBlkWriteDump_data:
-	.fnstart
-.LFB207:
-	.loc 2 897 0
+.LFB217:
+	.loc 2 946 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL659:
-	.movsp ip
+.LVL680:
 	mov	ip, sp
-.LCFI268:
-	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI269:
-	.setfp fp, ip, #-4
+.LCFI262:
+	push	{r4, r5, r6, fp, ip, lr, pc}
+.LCFI263:
 	sub	fp, ip, #4
-.LCFI270:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 897 0
-	mov	r6, r0
-	.loc 2 903 0
+.LCFI264:
+	.loc 2 952 0
 	ldr	r3, [r0, #36]
+	.loc 2 946 0
+	mov	r6, r0
+	.loc 2 952 0
 	cmp	r3, #0
-	ldmfdeq	sp, {r4, r5, r6, r7, fp, sp, pc}
-	.loc 2 905 0
+	ldmfdeq	sp, {r4, r5, r6, fp, sp, pc}
+	.loc 2 954 0
 	mov	r3, #0
-	.loc 2 899 0
+	.loc 2 948 0
 	ldrh	r5, [r0, #6]
-	.loc 2 905 0
+	.loc 2 954 0
 	str	r3, [r0, #36]
-	.loc 2 907 0
-	ldr	r3, .L811
-	.loc 2 900 0
+	.loc 2 956 0
+	ldr	r3, .L820
+	.loc 2 949 0
 	ldr	r2, [r0, #24]
-.LVL660:
-	.loc 2 899 0
+.LVL681:
+	.loc 2 948 0
 	sub	r5, r5, #1
-	.loc 2 930 0
+	.loc 2 979 0
 	uxth	r5, r5
-	.loc 2 907 0
+	.loc 2 956 0
 	ldr	r0, [r3, #3804]
+.LVL682:
 	mov	r4, r3
-	.loc 2 908 0
+	.loc 2 957 0
 	ldr	r1, [r3, #3244]
-	.loc 2 907 0
-	str	r0, [r3, #3232]
-	.loc 2 908 0
-	str	r1, [r3, #3236]
-	.loc 2 930 0
+	.loc 2 956 0
+	str	r0, [r3, #3228]
+	.loc 2 957 0
+	str	r1, [r3, #3232]
+	.loc 2 979 0
 	ldr	r2, [r2, r5, lsl #2]
-.LVL661:
-	.loc 2 932 0
+.LVL683:
+	.loc 2 981 0
 	cmp	r2, #0
-	.loc 2 931 0
-	str	r2, [r3, #3228]
-	.loc 2 932 0
-	beq	.L806
-	.loc 2 934 0
+	.loc 2 980 0
+	str	r2, [r3, #3224]
+	.loc 2 981 0
+	beq	.L815
+	.loc 2 983 0
 	mov	r2, #1
-.LVL662:
-	ldr	r0, .L811+4
+.LVL684:
+	ldr	r0, .L820+4
 	mov	r1, r2
 	bl	FlashReadPages
-.LVL663:
-.L807:
-	.loc 2 941 0
-	ldr	r2, [r4, #3232]
-	mov	r1, r5
-	mov	r0, r6
-	bl	FtlMapWritePage
-.LVL664:
-	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.LVL665:
-.L806:
-	.loc 2 938 0
+.LVL685:
+.L816:
+	.loc 2 990 0
+	ldr	r2, [r4, #3228]
+	mov	r1, r5
+	mov	r0, r6
+	bl	FtlMapWritePage
+.LVL686:
+	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
+.LVL687:
+.L815:
+	.loc 2 987 0
 	ldrh	r2, [r3, #86]
-.LVL666:
+.LVL688:
 	mov	r1, #255
 	bl	ftl_memset
-.LVL667:
-	b	.L807
-.L812:
+.LVL689:
+	b	.L816
+.L821:
 	.align	2
-.L811:
+.L820:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+3224
-.LFE207:
-	.fnend
+	.word	.LANCHOR0+3220
+.LFE217:
 	.size	FtlMapBlkWriteDump_data, .-FtlMapBlkWriteDump_data
 	.align	2
 	.global	FtlScanSysBlk
@@ -9460,704 +8775,685 @@ FtlMapBlkWriteDump_data:
 	.fpu softvfp
 	.type	FtlScanSysBlk, %function
 FtlScanSysBlk:
-	.fnstart
-.LFB210:
-	.loc 2 1095 0
+.LFB220:
+	.loc 2 1144 0
 	@ args = 0, pretend = 0, frame = 24
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI271:
+.LCFI265:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI272:
-	.setfp fp, ip, #-4
+.LCFI266:
 	sub	fp, ip, #4
-.LCFI273:
-	.pad #28
-	sub	sp, sp, #28
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 1095 0
-	.loc 2 1101 0
-	ldr	r4, .L895
+.LCFI267:
+	sub	sp, sp, #24
+	.loc 2 1150 0
 	mov	r5, #0
-	.loc 2 1103 0
+	ldr	r4, .L903
+	.loc 2 1152 0
 	mov	r1, r5
 	ldr	r2, [r4, #104]
-	.loc 2 1101 0
-	add	r6, r4, #3904
-	.loc 2 1103 0
+	.loc 2 1150 0
+	add	r3, r4, #3904
+	.loc 2 1152 0
 	ldr	r0, [r4, #3852]
-	mov	r8, r4
-	.loc 2 1101 0
-	strh	r5, [r6]	@ movhi
-	.loc 2 1102 0
+	.loc 2 1158 0
+	mov	r6, r4
+	.loc 2 1150 0
+	strh	r5, [r3]	@ movhi
+	.loc 2 1151 0
 	strh	r5, [r4, #120]	@ movhi
-	.loc 2 1103 0
+	.loc 2 1152 0
 	lsl	r2, r2, #2
 	bl	ftl_memset
-.LVL668:
-	.loc 2 1104 0
+.LVL690:
+	.loc 2 1153 0
 	ldr	r2, [r4, #104]
 	mov	r1, r5
 	ldr	r0, [r4, #3828]
 	lsl	r2, r2, #1
 	bl	ftl_memset
-.LVL669:
-	.loc 2 1105 0
+.LVL691:
+	.loc 2 1154 0
 	ldrh	r2, [r4, #96]
 	mov	r1, r5
 	ldr	r0, [r4, #3840]
 	lsl	r2, r2, #2
 	bl	ftl_memset
-.LVL670:
-	.loc 2 1106 0
+.LVL692:
+	.loc 2 1155 0
 	ldrh	r2, [r4, #96]
 	mov	r1, r5
 	ldr	r0, [r4, #124]
-	.loc 2 1109 0
 	mov	r5, r4
-	.loc 2 1106 0
 	lsl	r2, r2, #1
 	bl	ftl_memset
-.LVL671:
-.LBB396:
-.LBB397:
-.LBB398:
+.LVL693:
+.LBB418:
+.LBB419:
+.LBB420:
 	.loc 1 202 0
-	ldr	r2, .L895+4
+	ldr	r2, .L903+4
 	mvn	r3, #0
-	str	r3, [r4, #2556]
-	str	r6, [fp, #-60]
+	str	r3, [r4, #2552]
 	str	r3, [r2, #4]
 	str	r3, [r2, #8]
-.LBE398:
-.LBE397:
-.LBE396:
-	.loc 2 1109 0
+.LBE420:
+.LBE419:
+.LBE418:
+	.loc 2 1158 0
 	ldrh	r3, [r4, #16]
-.LVL672:
-	str	r3, [fp, #-52]
-.LVL673:
-.L814:
-	.loc 2 1109 0 is_stmt 0 discriminator 1
-	ldrh	r3, [r5, #18]
-.LVL674:
-	ldr	r2, [fp, #-52]
-.LVL675:
+.LVL694:
+	str	r3, [fp, #-44]
+.LVL695:
+.L823:
+	.loc 2 1158 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r6, #18]
+.LVL696:
+	ldr	r2, [fp, #-44]
+.LVL697:
 	cmp	r3, r2
-	bls	.L855
-	.loc 2 1120 0 is_stmt 1 discriminator 1
-	mov	r6, #0
-	.loc 2 1113 0 discriminator 1
-	ldrh	r3, [r5, #8]
-	.loc 2 1118 0 discriminator 1
-	ldr	r7, [r5, #3792]
-.LVL676:
-	.loc 2 1119 0 discriminator 1
-	ldr	r10, [r5, #3152]
-	.loc 2 1120 0 discriminator 1
-	ldr	r9, [r5, #3156]
-	ldrh	r2, [r5, #88]
-.LVL677:
-	str	r6, [fp, #-48]
-	b	.L856
-.L816:
+	bls	.L864
+	.loc 2 1169 0 is_stmt 1 discriminator 1
+	ldr	r1, [r6, #3152]
+	mov	r7, #0
+.LVL698:
+	.loc 2 1162 0 discriminator 1
+	ldrh	r2, [r6, #8]
+.LVL699:
+	.loc 2 1169 0 discriminator 1
+	mov	r10, r7
+	.loc 2 1167 0 discriminator 1
+	ldr	r8, [r6, #3792]
+	.loc 2 1168 0 discriminator 1
+	ldr	r3, [r6, #3148]
+	.loc 2 1169 0 discriminator 1
+	str	r1, [fp, #-48]
+	ldrh	r9, [r6, #88]
+	.loc 2 1164 0 discriminator 1
+	ldr	ip, .L903+8
+	b	.L865
+.L825:
+	.loc 2 1164 0 is_stmt 0
+	ldrb	r0, [ip, r7]	@ zero_extendqisi2
+	ldr	r1, [fp, #-44]
 	str	r3, [fp, #-64]
-	.loc 2 1115 0
-	ldr	r3, .L895+8
-	ldr	r1, [fp, #-52]
-	str	r2, [fp, #-68]
-	ldrb	r0, [r3, r6]	@ zero_extendqisi2
+	str	r2, [fp, #-60]
+	str	ip, [fp, #-56]
 	bl	V2P_block
-.LVL678:
-	str	r0, [fp, #-56]
-	.loc 2 1116 0
+.LVL700:
+	str	r0, [fp, #-52]
+	.loc 2 1165 0 is_stmt 1
 	bl	FtlBbmIsBadBlock
-.LVL679:
+.LVL701:
 	cmp	r0, #0
+	ldr	ip, [fp, #-56]
+	ldr	r2, [fp, #-60]
 	ldr	r3, [fp, #-64]
-	ldr	r2, [fp, #-68]
-	bne	.L815
-	.loc 2 1118 0
-	ldr	r1, [fp, #-48]
-.LVL680:
-	mov	r0, #20
-	mla	r0, r0, r1, r7
-	ldr	r1, [fp, #-56]
-.LVL681:
+	bne	.L824
+	.loc 2 1167 0
+	mov	r1, #20
+	mla	r0, r1, r10, r8
+	ldr	r1, [fp, #-52]
 	lsl	r1, r1, #10
-	.loc 2 1119 0
-	stmib	r0, {r1, r10}
-	.loc 2 1120 0
-	ldr	r1, [fp, #-48]
-.LVL682:
-	mul	r1, r2, r1
-.LVL683:
-	add	ip, r1, #3
+	.loc 2 1168 0
+	stmib	r0, {r1, r3}
+	.loc 2 1169 0
+	mul	r1, r9, r10
+	add	lr, r1, #3
 	cmp	r1, #0
-	movlt	r1, ip
+	movlt	r1, lr
+	ldr	lr, [fp, #-48]
 	bic	r1, r1, #3
-	add	r1, r9, r1
+	add	r1, lr, r1
 	str	r1, [r0, #12]
-	.loc 2 1121 0
-	ldr	r1, [fp, #-48]
-.LVL684:
-	add	r1, r1, #1
-.LVL685:
-	uxth	r1, r1
-.LVL686:
-	str	r1, [fp, #-48]
-.L815:
-	add	r6, r6, #1
-.L856:
-	.loc 2 1113 0 discriminator 1
-	uxth	r1, r6
-.LVL687:
-	cmp	r3, r1
-	bhi	.L816
-	.loc 2 1124 0
-	ldr	r3, [fp, #-48]
-.LVL688:
-	cmp	r3, #0
-	bne	.L817
-.LVL689:
-.L854:
-	.loc 2 1109 0
-	ldr	r3, [fp, #-52]
-.LVL690:
+	.loc 2 1170 0
+	add	r1, r10, #1
+	uxth	r10, r1
+.L824:
+	add	r7, r7, #1
+.L865:
+	.loc 2 1162 0 discriminator 1
+	uxth	r1, r7
+	cmp	r2, r1
+	bhi	.L825
+	.loc 2 1173 0
+	cmp	r10, #0
+	bne	.L826
+.LVL702:
+.L863:
+	.loc 2 1158 0
+	ldr	r3, [fp, #-44]
+.LVL703:
 	add	r3, r3, #1
-.LVL691:
+.LVL704:
 	uxth	r3, r3
-.LVL692:
-	str	r3, [fp, #-52]
-	b	.L814
-.LVL693:
-.L817:
-	.loc 2 1127 0
+.LVL705:
+	str	r3, [fp, #-44]
+	b	.L823
+.LVL706:
+.L826:
+	.loc 2 1176 0
 	mov	r2, #1
-	ldr	r1, [fp, #-48]
-	mov	r0, r7
+	mov	r1, r10
+	mov	r0, r8
 	bl	FlashReadPages
-.LVL694:
-	.loc 2 1128 0
+.LVL707:
+	.loc 2 1177 0
 	mov	r3, #0
-.LVL695:
-.L894:
-	str	r3, [fp, #-56]
-	.loc 2 1128 0 is_stmt 0 discriminator 2
-	ldr	r2, [fp, #-48]
-.LVL696:
-	ldrh	r3, [fp, #-56]
-	cmp	r2, r3
-	bls	.L854
-	ldr	r3, [fp, #-56]
+.LVL708:
+.L902:
+	str	r3, [fp, #-48]
+	.loc 2 1177 0 is_stmt 0 discriminator 2
+	ldrh	r3, [fp, #-48]
+	cmp	r10, r3
+	bls	.L863
+	ldr	r3, [fp, #-48]
 	mov	r9, #20
 	mul	r9, r9, r3
-	.loc 2 1129 0 is_stmt 1
+	.loc 2 1178 0 is_stmt 1
 	ldr	r3, [r4, #3792]
 	add	r2, r3, r9
-.LVL697:
-	.loc 2 1132 0
+	.loc 2 1181 0
 	ldr	r3, [r3, r9]
-	.loc 2 1129 0
-	ldr	r6, [r2, #4]
-	.loc 2 1130 0
+	.loc 2 1178 0
+	ldr	r1, [r2, #4]
+	.loc 2 1179 0
 	ldr	r7, [r2, #12]
-	.loc 2 1132 0
+	.loc 2 1181 0
 	cmn	r3, #1
-	.loc 2 1129 0
-	ubfx	r6, r6, #10, #16
-	.loc 2 1132 0
-	bne	.L821
-	mov	r10, #16
-	.loc 2 1136 0
-	movw	r3, #65535
-.L823:
-	.loc 2 1134 0
+	.loc 2 1178 0
+	lsr	ip, r1, #10
+	uxth	r8, ip
+	.loc 2 1181 0
+	bne	.L830
+	mov	r3, #16
+.L832:
+	.loc 2 1183 0
 	ldr	r0, [r4, #3792]
-	str	r3, [fp, #-64]
+	str	ip, [fp, #-56]
+	str	r3, [fp, #-52]
 	add	r0, r0, r9
 	ldr	r2, [r0, #4]
 	add	r2, r2, #1
 	str	r2, [r0, #4]
-	.loc 2 1135 0
+	.loc 2 1184 0
 	mov	r2, #1
 	mov	r1, r2
 	bl	FlashReadPages
-.LVL698:
-	.loc 2 1136 0
+.LVL709:
+	.loc 2 1185 0
 	ldrh	r2, [r7]
-	ldr	r3, [fp, #-64]
+	movw	r3, #65535
+	ldr	ip, [fp, #-56]
 	cmp	r2, r3
-	bne	.L820
-	.loc 2 1137 0
+	ldr	r3, [fp, #-52]
+	bne	.L829
+	.loc 2 1186 0
 	ldr	r3, [r4, #3792]
 	mvn	r2, #0
 	str	r2, [r3, r9]
-	.loc 2 1145 0
+	.loc 2 1194 0
 	ldr	r3, [r4, #3792]
 	ldr	r3, [r3, r9]
 	cmp	r3, r2
-	bne	.L821
-.L822:
-	.loc 2 1287 0
-	mov	r1, #1
-	b	.L893
-.L820:
-	.loc 2 1139 0
+	bne	.L830
+.L831:
+	.loc 2 1336 0
+	mov	r1, #0
+	uxth	r0, ip
+	bl	FtlFreeSysBlkQueueIn
+.LVL710:
+	b	.L835
+.L829:
+	.loc 2 1188 0
 	ldr	r2, [r4, #3792]
 	ldr	r2, [r2, r9]
 	cmn	r2, #1
-	bne	.L821
-	sub	r10, r10, #1
-	uxth	r10, r10
-	.loc 2 1133 0 discriminator 2
-	cmp	r10, #0
-	bne	.L823
-	b	.L822
-.L821:
-	.loc 2 1147 0
-	ldr	r2, [r5, #2472]
+	bne	.L830
+	sub	r3, r3, #1
+	uxth	r3, r3
+	.loc 2 1182 0 discriminator 2
+	cmp	r3, #0
+	bne	.L832
+	b	.L831
+.L830:
+	.loc 2 1196 0
+	ldr	r2, [r6, #2516]
 	ldr	r3, [r7, #4]
 	cmn	r2, #1
-	beq	.L824
-	.loc 2 1147 0 is_stmt 0 discriminator 1
+	beq	.L833
+	.loc 2 1196 0 is_stmt 0 discriminator 1
 	cmp	r2, r3
-	bhi	.L825
-.L824:
-	.loc 2 1149 0 is_stmt 1
+	bhi	.L834
+.L833:
+	.loc 2 1198 0 is_stmt 1
 	cmn	r3, #1
-	.loc 2 1152 0
+	.loc 2 1201 0
 	addne	r2, r3, #1
-	strne	r2, [r8, #2472]
-.L825:
-	.loc 2 1157 0
+	strne	r2, [r5, #2516]
+.L834:
+	.loc 2 1206 0
 	ldrh	r2, [r7]
 	movw	r1, #61604
 	cmp	r2, r1
-	beq	.L827
-	bhi	.L828
+	beq	.L836
+	bhi	.L837
 	movw	r3, #61574
 	cmp	r2, r3
-	beq	.L829
-.L826:
-	ldr	r3, [fp, #-56]
+	beq	.L838
+.L835:
+	ldr	r3, [fp, #-48]
 	add	r3, r3, #1
-	b	.L894
-.L828:
+	b	.L902
+.L837:
 	movw	r3, #61634
 	cmp	r2, r3
-	beq	.L830
+	beq	.L839
 	movw	r3, #65535
 	cmp	r2, r3
-	.loc 2 1280 0
-	moveq	r1, #0
-	.loc 2 1157 0
-	bne	.L826
-.L893:
-	.loc 2 1287 0
-	mov	r0, r6
-	bl	FtlFreeSysBlkQueueIn
-.LVL699:
-	b	.L826
-.L830:
-	.loc 2 1162 0
-	ldr	r3, [fp, #-60]
-	ldrh	r2, [r3]
+	beq	.L831
+	b	.L835
+.L839:
+	.loc 2 1211 0
+	ldr	r9, .L903+12
 	ldr	r3, [r4, #104]
+	ldrh	r2, [r9]
 	cmp	r2, r3
-	bls	.L832
-	.loc 2 1162 0 is_stmt 0 discriminator 1
-	movw	r2, #1162
-	ldr	r1, .L895+12
-	ldr	r0, .L895+16
+	bls	.L841
+	.loc 2 1211 0 is_stmt 0 discriminator 1
+	movw	r2, #1211
+	ldr	r1, .L903+16
+	ldr	r0, .L903+20
 	bl	printk
-.LVL700:
-.L832:
-	.loc 2 1163 0 is_stmt 1
+.LVL711:
+.L841:
+	.loc 2 1212 0 is_stmt 1
 	ldr	r0, [r4, #104]
-	ldr	r2, [fp, #-60]
-	.loc 2 1165 0
+	ldrh	r2, [r9]
+	.loc 2 1214 0
 	ldr	ip, [r4, #3852]
-	.loc 2 1163 0
-	ldrh	r2, [r2]
+	.loc 2 1212 0
 	uxth	r1, r0
 	sub	r3, r1, #1
 	sub	r1, r1, r2
-	sxth	r3, r3
 	sub	r1, r1, #1
+	sxth	r3, r3
 	sxth	r1, r1
-.L833:
-	.loc 2 1163 0 is_stmt 0 discriminator 1
+	str	r1, [fp, #-52]
+.L842:
+	.loc 2 1212 0 is_stmt 0 discriminator 1
+	ldr	r1, [fp, #-52]
 	cmp	r3, r1
-	bgt	.L839
-	.loc 2 1186 0 is_stmt 1
+	bgt	.L848
+	.loc 2 1235 0 is_stmt 1
 	cmp	r3, #0
-	bge	.L871
-	b	.L826
-.L839:
-	.loc 2 1165 0
-	ldr	r10, [r7, #4]
+	bge	.L880
+	b	.L835
+.L848:
+	.loc 2 1214 0
 	lsl	lr, r3, #2
-	ldr	r9, [ip, r3, lsl #2]
-	cmp	r10, r9
-	bls	.L834
-	.loc 2 1167 0
+	ldr	r1, [r7, #4]
+	str	lr, [fp, #-56]
+	ldr	lr, [ip, r3, lsl #2]
+	cmp	r1, lr
+	bls	.L843
+	.loc 2 1216 0
 	ldr	r1, [ip]
 	cmp	r1, #0
-	bne	.L835
-	.loc 2 1167 0 is_stmt 0 discriminator 1
+	bne	.L844
+	.loc 2 1216 0 is_stmt 0 discriminator 1
 	cmp	r0, r2
-	.loc 2 1172 0 is_stmt 1 discriminator 1
-	ldrne	r1, .L895+20
+	.loc 2 1221 0 is_stmt 1 discriminator 1
 	addne	r2, r2, #1
-	strhne	r2, [r1]	@ movhi
-.L835:
-	.loc 2 1175 0 discriminator 1
+	strhne	r2, [r9]	@ movhi
+.L844:
+	.loc 2 1224 0 discriminator 1
 	uxth	ip, r3
 	mov	r1, #0
-.L836:
+.L845:
 	uxth	r0, r1
 	sxth	r2, r1
 	cmp	ip, r0
-	bhi	.L837
-	.loc 2 1180 0
+	bhi	.L846
+	.loc 2 1229 0
 	ldr	r1, [r7, #4]
-	.loc 2 1186 0
+	.loc 2 1235 0
 	cmp	r3, #0
-	.loc 2 1180 0
+	.loc 2 1229 0
 	ldr	r2, [r5, #3852]
-	str	r1, [r2, lr]
-	.loc 2 1181 0
+	ldr	r0, [fp, #-56]
+	str	r1, [r2, r0]
+	.loc 2 1230 0
 	lsl	r2, r3, #1
 	ldr	r1, [r5, #3828]
-	strh	r6, [r1, r2]	@ movhi
-	.loc 2 1186 0
-	blt	.L826
-	.loc 2 1193 0
-	ldr	r2, .L895+20
+	strh	r8, [r1, r2]	@ movhi
+	.loc 2 1235 0
+	blt	.L835
+	.loc 2 1242 0
+	ldr	r2, .L903+12
 	ldr	r1, [r5, #104]
 	ldrh	r2, [r2]
 	sub	r1, r1, r2
 	sub	r1, r1, #1
 	sxth	r1, r1
 	cmp	r3, r1
-	bgt	.L826
-.L871:
-	.loc 2 1195 0
-	ldr	r1, [fp, #-60]
+	bgt	.L835
+.L880:
+	.loc 2 1244 0
 	add	r2, r2, #1
-	strh	r2, [r1]	@ movhi
-	.loc 2 1196 0
-	ldr	r2, [r4, #3852]
+	.loc 2 1245 0
 	ldr	r1, [r7, #4]
+	.loc 2 1244 0
+	strh	r2, [r9]	@ movhi
+	.loc 2 1245 0
+	ldr	r2, [r4, #3852]
 	str	r1, [r2, r3, lsl #2]
-	.loc 2 1197 0
+	.loc 2 1246 0
 	lsl	r3, r3, #1
 	ldr	r2, [r4, #3828]
-.L891:
-	.loc 2 1241 0
-	strh	r6, [r2, r3]	@ movhi
-	b	.L826
-.L837:
-	.loc 2 1177 0 discriminator 3
-	ldr	r0, [r5, #3852]
+.L900:
+	.loc 2 1290 0
+	strh	r8, [r2, r3]	@ movhi
+	b	.L835
+.L846:
+	.loc 2 1226 0 discriminator 3
+	ldr	r0, [r6, #3852]
 	add	r1, r1, #1
-	add	r9, r0, r2, lsl #2
-	ldr	r9, [r9, #4]
-	str	r9, [r0, r2, lsl #2]
-	.loc 2 1178 0 discriminator 3
+	add	lr, r0, r2, lsl #2
+	ldr	lr, [lr, #4]
+	str	lr, [r0, r2, lsl #2]
+	.loc 2 1227 0 discriminator 3
 	lsl	r2, r2, #1
-	ldr	r0, [r5, #3828]
-	add	r9, r0, r2
-	ldrh	r9, [r9, #2]
-	strh	r9, [r0, r2]	@ movhi
-	b	.L836
-.L834:
+	ldr	r0, [r6, #3828]
+	add	lr, r0, r2
+	ldrh	lr, [lr, #2]
+	strh	lr, [r0, r2]	@ movhi
+	b	.L845
+.L843:
 	sub	r3, r3, #1
 	sxth	r3, r3
-	b	.L833
-.L829:
-	.loc 2 1203 0
+	b	.L842
+.L838:
+	.loc 2 1252 0
 	ldrh	r2, [r4, #120]
 	ldrh	r3, [r4, #96]
 	cmp	r2, r3
-	bls	.L842
-	.loc 2 1203 0 is_stmt 0 discriminator 1
-	movw	r2, #1203
-	ldr	r1, .L895+12
-	ldr	r0, .L895+16
+	bls	.L851
+	.loc 2 1252 0 is_stmt 0 discriminator 1
+	movw	r2, #1252
+	ldr	r1, .L903+16
+	ldr	r0, .L903+20
 	bl	printk
-.LVL701:
-.L842:
-	.loc 2 1204 0 is_stmt 1
+.LVL712:
+.L851:
+	.loc 2 1253 0 is_stmt 1
 	ldrh	r2, [r4, #96]
 	ldrh	r1, [r4, #120]
-	.loc 2 1206 0
+	.loc 2 1255 0
 	ldr	ip, [r4, #3840]
-	.loc 2 1204 0
+	.loc 2 1253 0
 	sub	r0, r2, #1
 	sxth	r3, r0
 	sub	r0, r0, r1
-.L843:
-	.loc 2 1204 0 is_stmt 0 discriminator 1
+	str	r0, [fp, #-52]
+.L852:
+	.loc 2 1253 0 is_stmt 0 discriminator 1
+	ldr	r0, [fp, #-52]
 	cmp	r3, r0
-	ble	.L848
-	.loc 2 1206 0 is_stmt 1
-	ldr	r10, [r7, #4]
-	lsl	lr, r3, #2
+	ble	.L857
+	.loc 2 1255 0 is_stmt 1
 	ldr	r9, [ip, r3, lsl #2]
-	cmp	r10, r9
-	bls	.L844
-	.loc 2 1208 0
+	lsl	lr, r3, #2
+	ldr	r0, [r7, #4]
+	cmp	r0, r9
+	bls	.L853
+	.loc 2 1257 0
 	sub	r2, r2, r1
 	ldr	r0, [ip]
 	clz	r2, r2
-	.loc 2 1218 0
+	.loc 2 1267 0
 	uxth	ip, r3
-	.loc 2 1208 0
+	.loc 2 1257 0
 	lsr	r2, r2, #5
 	cmp	r0, #0
 	orrne	r2, r2, #1
 	cmp	r2, #0
-	.loc 2 1216 0
+	.loc 2 1265 0
 	addeq	r1, r1, #1
-	strheq	r1, [r8, #120]	@ movhi
+	strheq	r1, [r5, #120]	@ movhi
 	mov	r1, #0
-.L846:
-	.loc 2 1218 0 discriminator 1
+.L855:
+	.loc 2 1267 0 discriminator 1
 	uxth	r0, r1
 	sxth	r2, r1
 	cmp	ip, r0
-	bhi	.L847
-	.loc 2 1223 0
+	bhi	.L856
+	.loc 2 1272 0
 	ldr	r1, [r7, #4]
 	ldr	r2, [r5, #3840]
 	str	r1, [r2, lr]
-	.loc 2 1224 0
+	.loc 2 1273 0
 	lsl	r2, r3, #1
 	ldr	r1, [r5, #124]
-	strh	r6, [r1, r2]	@ movhi
-.L848:
-	.loc 2 1229 0
+	strh	r8, [r1, r2]	@ movhi
+.L857:
+	.loc 2 1278 0
 	cmp	r3, #0
-	blt	.L826
-	.loc 2 1237 0
+	blt	.L835
+	.loc 2 1286 0
 	ldrh	r2, [r5, #96]
 	ldrh	r1, [r5, #120]
 	sub	r2, r2, #1
 	sub	r2, r2, r1
 	sxth	r2, r2
 	cmp	r3, r2
-	bgt	.L826
-	.loc 2 1239 0
+	bgt	.L835
+	.loc 2 1288 0
 	add	r1, r1, #1
-	.loc 2 1240 0
+	.loc 2 1289 0
 	ldr	r2, [r5, #3840]
-	.loc 2 1239 0
+	.loc 2 1288 0
 	strh	r1, [r5, #120]	@ movhi
-	.loc 2 1240 0
+	.loc 2 1289 0
 	ldr	r1, [r7, #4]
 	str	r1, [r2, r3, lsl #2]
-	.loc 2 1241 0
+	.loc 2 1290 0
 	lsl	r3, r3, #1
 	ldr	r2, [r5, #124]
-	b	.L891
-.L847:
-	.loc 2 1220 0 discriminator 3
-	ldr	r0, [r5, #3840]
+	b	.L900
+.L856:
+	.loc 2 1269 0 discriminator 3
+	ldr	r0, [r6, #3840]
 	add	r1, r1, #1
 	add	r9, r0, r2, lsl #2
 	ldr	r9, [r9, #4]
 	str	r9, [r0, r2, lsl #2]
-	.loc 2 1221 0 discriminator 3
+	.loc 2 1270 0 discriminator 3
 	lsl	r2, r2, #1
-	ldr	r0, [r5, #124]
+	ldr	r0, [r6, #124]
 	add	r9, r0, r2
 	ldrh	r9, [r9, #2]
 	strh	r9, [r0, r2]	@ movhi
-	b	.L846
-.L844:
+	b	.L855
+.L853:
 	sub	r3, r3, #1
 	sxth	r3, r3
-	b	.L843
-.L827:
-	.loc 2 1248 0
-	ldr	r9, .L895+4
+	b	.L852
+.L836:
+	.loc 2 1297 0
+	ldr	r9, .L903+4
 	movw	r2, #65535
 	ldrh	r1, [r9]
 	cmp	r1, r2
-	.loc 2 1250 0
-	strheq	r6, [r9]	@ movhi
-	.loc 2 1248 0
-	beq	.L892
-	.loc 2 1255 0
+	.loc 2 1299 0
+	strheq	r8, [r9]	@ movhi
+	.loc 2 1297 0
+	beq	.L901
+	.loc 2 1304 0
 	ldrh	r0, [r9, #4]
 	cmp	r0, r2
-	beq	.L851
-	.loc 2 1256 0
+	beq	.L860
+	.loc 2 1305 0
 	mov	r1, #1
 	bl	FtlFreeSysBlkQueueIn
-.LVL702:
-.L851:
-	.loc 2 1257 0
+.LVL713:
+.L860:
+	.loc 2 1306 0
 	ldr	r3, [r7, #4]
-	ldr	r2, [r4, #2564]
+	ldr	r2, [r4, #2560]
 	cmp	r2, r3
-	.loc 2 1265 0
-	strhcs	r6, [r9, #4]	@ movhi
-	.loc 2 1257 0
-	bcs	.L826
-	.loc 2 1259 0
+	.loc 2 1314 0
+	strhcs	r8, [r9, #4]	@ movhi
+	.loc 2 1306 0
+	bcs	.L835
+	.loc 2 1308 0
 	ldrh	r3, [r9]
-	.loc 2 1260 0
-	strh	r6, [r9]	@ movhi
-	.loc 2 1259 0
+	.loc 2 1309 0
+	strh	r8, [r9]	@ movhi
+	.loc 2 1308 0
 	strh	r3, [r9, #4]	@ movhi
-	.loc 2 1261 0
+	.loc 2 1310 0
 	ldr	r3, [r7, #4]
-.L892:
-	str	r3, [r4, #2564]
-	b	.L826
-.LVL703:
-.L855:
-	.loc 2 1292 0
-	ldr	r1, [r5, #3828]
-	ldrh	r3, [r1]
+.L901:
+	str	r3, [r4, #2560]
+	b	.L835
+.LVL714:
+.L864:
+	.loc 2 1341 0
+	ldr	r2, [r6, #3828]
+.LVL715:
+	ldrh	r3, [r2]
 	cmp	r3, #0
-	beq	.L857
-.L860:
-	.loc 2 1310 0
+	beq	.L866
+.L869:
+	.loc 2 1359 0
 	ldr	r1, [r4, #124]
 	ldrh	r2, [r1]
-.LVL704:
 	cmp	r2, #0
-	beq	.L858
-.L859:
-	.loc 2 1328 0
-	ldr	r3, [fp, #-60]
+	beq	.L867
+.L868:
+	.loc 2 1377 0
+	ldr	r3, .L903+12
 	ldrh	r2, [r3]
 	ldr	r3, [r4, #104]
 	cmp	r2, r3
-	bls	.L890
-	.loc 2 1328 0 is_stmt 0 discriminator 1
-	mov	r2, #1328
-	ldr	r1, .L895+12
-	ldr	r0, .L895+16
+	bls	.L899
+	.loc 2 1377 0 is_stmt 0 discriminator 1
+	movw	r2, #1377
+	ldr	r1, .L903+16
+	ldr	r0, .L903+20
 	bl	printk
-.LVL705:
-.L890:
-	.loc 2 1330 0 is_stmt 1
+.LVL716:
+.L899:
+	.loc 2 1379 0 is_stmt 1
 	mov	r0, #0
 	sub	sp, fp, #40
-.LCFI274:
+.LCFI268:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL706:
-.L857:
-.LCFI275:
-	.loc 2 1292 0 discriminator 1
-	ldr	r2, .L895+20
-.LVL707:
-	ldrh	r2, [r2]
-	cmp	r2, #0
-	.loc 2 1294 0 discriminator 1
-	ldrne	r0, [r5, #104]
-	.loc 2 1292 0 discriminator 1
-	beq	.L860
-.L861:
-	sxth	r2, r3
-	.loc 2 1294 0 discriminator 1
-	cmp	r2, r0
-	bcs	.L860
-	.loc 2 1296 0
-	lsl	ip, r2, #1
+.LVL717:
+.L866:
+.LCFI269:
+	.loc 2 1341 0 discriminator 1
+	ldr	r1, .L903+12
+	ldrh	r1, [r1]
+	cmp	r1, #0
+	.loc 2 1343 0 discriminator 1
+	ldrne	r1, [r6, #104]
+	.loc 2 1341 0 discriminator 1
+	beq	.L869
+.L870:
+	sxth	ip, r3
+	.loc 2 1343 0 discriminator 1
+	cmp	ip, r1
+	bcs	.L869
+	.loc 2 1345 0
+	lsl	r0, ip, #1
 	add	r3, r3, #1
-	ldrh	ip, [r1, ip]
-	cmp	ip, #0
-	beq	.L861
-	mov	r3, r2
-	.loc 2 1302 0 discriminator 1
+	ldrh	r0, [r2, r0]
+	cmp	r0, #0
+	beq	.L870
+	mov	r3, ip
+	.loc 2 1351 0 discriminator 1
 	mov	lr, #0
-.L862:
-	.loc 2 1298 0 discriminator 1
-	ldr	r1, [r8, #104]
-	cmp	r3, r1
-	bcs	.L860
-	.loc 2 1300 0 discriminator 3
-	ldr	r0, [r8, #3828]
-	lsl	r1, r3, #1
-	sub	ip, r3, r2
-	lsl	r5, ip, #1
-	ldrh	r6, [r0, r1]
-	strh	r6, [r0, r5]	@ movhi
-	.loc 2 1301 0 discriminator 3
-	ldr	r0, [r8, #3852]
-	ldr	r5, [r0, r3, lsl #2]
+.L871:
+	.loc 2 1347 0 discriminator 1
+	ldr	r2, [r5, #104]
+	cmp	r3, r2
+	bcs	.L869
+	.loc 2 1349 0 discriminator 3
+	ldr	r1, [r5, #3828]
+	lsl	r2, r3, #1
+	sub	r0, r3, ip
+	lsl	r6, r0, #1
+	ldrh	r7, [r1, r2]
+.LVL718:
+	strh	r7, [r1, r6]	@ movhi
+	.loc 2 1350 0 discriminator 3
+	ldr	r1, [r5, #3852]
+	ldr	r6, [r1, r3, lsl #2]
 	add	r3, r3, #1
 	sxth	r3, r3
-	str	r5, [r0, ip, lsl #2]
-	.loc 2 1302 0 discriminator 3
-	ldr	r0, [r8, #3828]
-	strh	lr, [r0, r1]	@ movhi
-	b	.L862
-.L858:
-	.loc 2 1310 0 discriminator 1
+	str	r6, [r1, r0, lsl #2]
+	.loc 2 1351 0 discriminator 3
+	ldr	r1, [r5, #3828]
+	strh	lr, [r1, r2]	@ movhi
+	b	.L871
+.LVL719:
+.L867:
+	.loc 2 1359 0 discriminator 1
 	ldrh	r3, [r4, #120]
 	cmp	r3, #0
-	.loc 2 1312 0 discriminator 1
+	.loc 2 1361 0 discriminator 1
 	ldrhne	r0, [r4, #96]
-	.loc 2 1310 0 discriminator 1
-	beq	.L859
-.L867:
+	.loc 2 1359 0 discriminator 1
+	beq	.L868
+.L876:
 	sxth	r3, r2
-	.loc 2 1312 0 discriminator 1
+	.loc 2 1361 0 discriminator 1
 	cmp	r3, r0
 	mov	ip, r3
-	bge	.L859
-	.loc 2 1314 0
+	bge	.L868
+	.loc 2 1363 0
 	lsl	lr, r3, #1
 	add	r2, r2, #1
 	ldrh	lr, [r1, lr]
 	cmp	lr, #0
-	beq	.L867
-	.loc 2 1320 0 discriminator 1
+	beq	.L876
+	.loc 2 1369 0 discriminator 1
 	mov	lr, #0
-.L868:
-	.loc 2 1316 0 discriminator 1
-	ldrh	r2, [r8, #96]
+.L877:
+	.loc 2 1365 0 discriminator 1
+	ldrh	r2, [r5, #96]
 	cmp	r3, r2
-	bge	.L859
-	.loc 2 1318 0 discriminator 3
-	ldr	r1, [r8, #124]
+	bge	.L868
+	.loc 2 1367 0 discriminator 3
+	ldr	r1, [r5, #124]
 	lsl	r2, r3, #1
 	sub	r0, r3, ip
-	lsl	r5, r0, #1
-	ldrh	r6, [r1, r2]
-	strh	r6, [r1, r5]	@ movhi
-	.loc 2 1319 0 discriminator 3
-	ldr	r1, [r8, #3840]
-	ldr	r5, [r1, r3, lsl #2]
+	lsl	r6, r0, #1
+	ldrh	r7, [r1, r2]
+.LVL720:
+	strh	r7, [r1, r6]	@ movhi
+	.loc 2 1368 0 discriminator 3
+	ldr	r1, [r5, #3840]
+	ldr	r6, [r1, r3, lsl #2]
 	add	r3, r3, #1
 	sxth	r3, r3
-	str	r5, [r1, r0, lsl #2]
-	.loc 2 1320 0 discriminator 3
-	ldr	r1, [r8, #124]
+	str	r6, [r1, r0, lsl #2]
+	.loc 2 1369 0 discriminator 3
+	ldr	r1, [r5, #124]
 	strh	lr, [r1, r2]	@ movhi
-	b	.L868
-.L896:
+	b	.L877
+.L904:
 	.align	2
-.L895:
+.L903:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+2556
+	.word	.LANCHOR0+2552
 	.word	.LANCHOR0+36
+	.word	.LANCHOR0+3904
 	.word	.LANCHOR1+328
 	.word	.LC1
-	.word	.LANCHOR0+3904
-.LFE210:
-	.fnend
+.LFE220:
 	.size	FtlScanSysBlk, .-FtlScanSysBlk
 	.align	2
 	.global	FtlMapTblRecovery
@@ -10166,353 +9462,333 @@ FtlScanSysBlk:
 	.fpu softvfp
 	.type	FtlMapTblRecovery, %function
 FtlMapTblRecovery:
-	.fnstart
-.LFB215:
-	.loc 2 1466 0
-	@ args = 0, pretend = 0, frame = 24
+.LFB225:
+	.loc 2 1515 0
+	@ args = 0, pretend = 0, frame = 20
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL708:
-	.movsp ip
+.LVL721:
 	mov	ip, sp
-.LCFI276:
+.LCFI270:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI277:
-	.setfp fp, ip, #-4
+.LCFI271:
 	sub	fp, ip, #4
-.LCFI278:
-	.pad #28
-	sub	sp, sp, #28
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 1466 0
-	.loc 2 1470 0
+.LCFI272:
+	sub	sp, sp, #20
+	.loc 2 1526 0
+	mov	r1, #0
+	.loc 2 1519 0
 	ldr	r3, [r0, #24]
-.LVL709:
-	.loc 2 1466 0
+.LVL722:
+	.loc 2 1515 0
 	mov	r4, r0
-	.loc 2 1478 0
-	ldr	r6, .L924
-	.loc 2 1477 0
-	mov	r1, #0
-	.loc 2 1471 0
-	ldr	r9, [r0, #12]
-.LVL710:
-	.loc 2 1483 0
+	.loc 2 1527 0
+	ldr	r6, .L932
+	.loc 2 1532 0
 	mov	r7, #0
-	.loc 2 1470 0
-	str	r3, [fp, #-48]
-	.loc 2 1472 0
+	.loc 2 1520 0
+	ldr	r8, [r0, #12]
+.LVL723:
+	.loc 2 1519 0
+	str	r3, [fp, #-44]
+	.loc 2 1521 0
 	ldr	r3, [r0, #16]
-.LVL711:
+.LVL724:
 	mov	r5, r6
-	str	r3, [fp, #-60]
-	.loc 2 1473 0
+	str	r3, [fp, #-56]
+	.loc 2 1522 0
 	ldrh	r3, [r0, #6]
-.LVL712:
-	str	r3, [fp, #-52]
-	.loc 2 1474 0
+.LVL725:
+	str	r3, [fp, #-48]
+	.loc 2 1523 0
 	ldrh	r3, [r0, #8]
-.LVL713:
-	.loc 2 1477 0
-	ldr	r0, [fp, #-48]
-.LVL714:
-	.loc 2 1474 0
-	str	r3, [fp, #-56]
-	.loc 2 1477 0
-	ldr	r3, [fp, #-52]
-.LVL715:
+.LVL726:
+	.loc 2 1526 0
+	ldr	r0, [fp, #-44]
+.LVL727:
+	.loc 2 1523 0
+	str	r3, [fp, #-52]
+	.loc 2 1526 0
+	ldr	r3, [fp, #-48]
+.LVL728:
 	lsl	r2, r3, #2
 	bl	ftl_memset
-.LVL716:
-	.loc 2 1478 0
-	ldr	r3, [r6, #2244]
-	.loc 2 1479 0
-	ldr	r8, [r6, #3244]
-	.loc 2 1483 0
+.LVL729:
+	.loc 2 1527 0
+	ldr	r3, [r6, #3240]
+	.loc 2 1530 0
+	mvn	r2, #0
+	.loc 2 1528 0
+	ldr	r9, [r6, #3244]
+	.loc 2 1532 0
 	str	r7, [r4, #32]
-	.loc 2 1478 0
-	str	r3, [r6, #3232]
-	.loc 2 1481 0
-	mvn	r3, #0
-	.loc 2 1479 0
-	str	r8, [r6, #3236]
-	.loc 2 1481 0
-	strh	r3, [r4]	@ movhi
-	.loc 2 1482 0
-	strh	r3, [r4, #2]	@ movhi
-	.loc 2 1485 0
-	mov	r3, #1
-	.loc 2 1484 0
+	.loc 2 1527 0
+	str	r3, [r6, #3228]
+	.loc 2 1528 0
+	str	r9, [r6, #3232]
+	.loc 2 1530 0
+	strh	r2, [r4]	@ movhi
+	.loc 2 1531 0
+	strh	r2, [r4, #2]	@ movhi
+	.loc 2 1534 0
+	mov	r2, #1
+	.loc 2 1533 0
 	str	r7, [r4, #28]
-	.loc 2 1485 0
-	str	r3, [r4, #36]
-.LVL717:
-.L898:
-	.loc 2 1486 0 discriminator 1
-	ldr	r2, [fp, #-56]
-.LVL718:
-	sxth	r3, r7
-.LVL719:
-	cmp	r3, r2
-	bge	.L915
-	.loc 2 1488 0
-	ldr	r2, [fp, #-56]
-	sub	r2, r2, #1
-.LVL720:
-	cmp	r3, r2
-	lsl	r2, r3, #1
-	bne	.L899
-	.loc 2 1490 0
-	ldrh	r0, [r9, r2]
-.LVL721:
+	.loc 2 1534 0
+	str	r2, [r4, #36]
+.LVL730:
+.L906:
+	.loc 2 1535 0 discriminator 1
+	ldr	r3, [fp, #-52]
+.LVL731:
+	sxth	r2, r7
+.LVL732:
+	cmp	r2, r3
+	bge	.L923
+	.loc 2 1537 0
+	ldr	r3, [fp, #-52]
+	lsl	r0, r2, #1
+	sub	r1, r3, #1
+	cmp	r2, r1
+	bne	.L907
+	.loc 2 1539 0
+	add	r10, r8, r0
 	mov	r1, #1
-.LVL722:
-	add	r10, r9, r2
-.LVL723:
-	str	r3, [fp, #-56]
+	ldrh	r0, [r8, r0]
+	.loc 2 1543 0
+	mov	r8, #0
+.LVL733:
+	str	r2, [fp, #-52]
+	.loc 2 1539 0
 	bl	FtlGetLastWrittenPage
-.LVL724:
-	.loc 2 1493 0
-	ldr	r1, [fp, #-60]
-.LVL725:
-	.loc 2 1490 0
-	sxth	r2, r0
-.LVL726:
-	.loc 2 1493 0
+.LVL734:
+	.loc 2 1542 0
 	ldr	r3, [fp, #-56]
-.LVL727:
-	.loc 2 1491 0
+.LVL735:
+	.loc 2 1539 0
+	sxth	r1, r0
+.LVL736:
+	.loc 2 1542 0
+	ldr	r2, [fp, #-52]
+.LVL737:
+	.loc 2 1540 0
 	add	r0, r0, #1
-	.loc 2 1492 0
+	.loc 2 1546 0
+	ldr	ip, .L932+4
+	.loc 2 1541 0
 	strh	r7, [r4]	@ movhi
-	.loc 2 1494 0
-	mov	r9, #0
-.LVL728:
-	.loc 2 1491 0
+	.loc 2 1543 0
+	add	r7, r1, #1
+	.loc 2 1540 0
 	strh	r0, [r4, #2]	@ movhi
-	.loc 2 1494 0
-	add	r7, r2, #1
-	.loc 2 1493 0
-	ldr	r3, [r1, r3, lsl #2]
-.LVL729:
-	str	r3, [r4, #28]
-	.loc 2 1497 0
-	ldr	r3, .L924+4
-.LVL730:
-.L900:
-	.loc 2 1494 0 discriminator 1
-	sxth	r2, r9
-.LVL731:
+	.loc 2 1542 0
+	ldr	r2, [r3, r2, lsl #2]
+.LVL738:
+	str	r2, [r4, #28]
+.LVL739:
+.L908:
+	.loc 2 1543 0 discriminator 1
+	sxth	r2, r8
 	cmp	r2, r7
-	blt	.L902
-.LVL732:
-.L915:
-	.loc 2 1547 0
+	blt	.L910
+.LVL740:
+.L923:
+	.loc 2 1596 0
 	mov	r0, r4
-.LVL733:
 	bl	ftl_free_no_use_map_blk
-.LVL734:
-	.loc 2 1548 0
+.LVL741:
+	.loc 2 1597 0
 	ldrh	r2, [r4, #2]
 	ldrh	r3, [r5, #80]
 	cmp	r2, r3
-	bne	.L904
-	.loc 2 1550 0
+	bne	.L912
+	.loc 2 1599 0
 	mov	r0, r4
 	bl	ftl_map_blk_alloc_new_blk
-.LVL735:
-.L904:
-	.loc 2 1553 0
+.LVL742:
+.L912:
+	.loc 2 1602 0
 	mov	r0, r4
 	bl	ftl_map_blk_gc
-.LVL736:
-	.loc 2 1555 0
+.LVL743:
+	.loc 2 1604 0
 	mov	r0, r4
 	bl	ftl_map_blk_gc
-.LVL737:
-	.loc 2 1557 0
+.LVL744:
+	.loc 2 1606 0
 	mov	r0, #0
 	sub	sp, fp, #40
-.LCFI279:
+.LCFI273:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL738:
-.L902:
-.LCFI280:
-	.loc 2 1496 0
+.LVL745:
+.L910:
+.LCFI274:
+	.loc 2 1545 0
 	ldrh	r1, [r10]
-.LVL739:
-	.loc 2 1497 0
-	mov	r0, r3
-.LVL740:
-	str	r3, [fp, #-56]
-	.loc 2 1496 0
+.LVL746:
+	.loc 2 1546 0
+	mov	r0, ip
+	str	ip, [fp, #-52]
+	.loc 2 1545 0
 	orr	r2, r2, r1, lsl #10
-	str	r2, [r6, #3228]
-	.loc 2 1497 0
+	str	r2, [r6, #3224]
+	.loc 2 1546 0
 	mov	r2, #1
 	mov	r1, r2
 	bl	FlashReadPages
-.LVL741:
-	.loc 2 1500 0
-	ldr	r2, [r6, #3224]
-	ldr	r3, [fp, #-56]
+.LVL747:
+	.loc 2 1549 0
+	ldr	r2, [r6, #3220]
+	ldr	ip, [fp, #-52]
 	cmn	r2, #1
-	beq	.L901
-	.loc 2 1502 0
-	ldrh	r2, [r8, #8]
-	ldr	r1, [fp, #-52]
-.LVL742:
-	cmp	r1, r2
-	bls	.L901
-	.loc 2 1502 0 is_stmt 0 discriminator 1
-	ldrh	r0, [r8]
+	beq	.L909
+	.loc 2 1551 0
+	ldrh	r2, [r9, #8]
+	ldr	r3, [fp, #-48]
+.LVL748:
+	cmp	r3, r2
+	bls	.L909
+	.loc 2 1551 0 is_stmt 0 discriminator 1
 	ldrh	r1, [r4, #4]
-.LVL743:
+	ldrh	r0, [r9]
 	cmp	r0, r1
-	.loc 2 1504 0 is_stmt 1 discriminator 1
-	ldreq	r1, [r6, #3228]
-	ldreq	r0, [fp, #-48]
-.LVL744:
-	streq	r1, [r0, r2, lsl #2]
-.LVL745:
-.L901:
-	add	r9, r9, #1
-	b	.L900
-.LVL746:
-.L899:
-	.loc 2 1510 0
-	ldr	r3, [r5, #2244]
-.LVL747:
-	.loc 2 1512 0
-	ldr	r0, .L924+4
-.LVL748:
-	.loc 2 1510 0
-	str	r3, [r5, #3232]
-	.loc 2 1511 0
-	add	r3, r9, r2
-	str	r3, [fp, #-64]
-	ldrh	r2, [r9, r2]
-	ldrh	r3, [r5, #80]
-	sub	r3, r3, #1
-	orr	r3, r3, r2, lsl #10
-	.loc 2 1512 0
-	mov	r2, #1
-	mov	r1, r2
+	.loc 2 1553 0 is_stmt 1 discriminator 1
+	ldreq	r1, [r6, #3224]
+	ldreq	r3, [fp, #-44]
 .LVL749:
-	.loc 2 1511 0
-	str	r3, [r5, #3228]
-	.loc 2 1512 0
-	bl	FlashReadPages
+	streq	r1, [r3, r2, lsl #2]
 .LVL750:
-	.loc 2 1515 0
-	ldr	r3, [r5, #3224]
-	cmn	r3, #1
-	beq	.L917
-	.loc 2 1515 0 is_stmt 0 discriminator 1
-	ldrh	r2, [r8]
-	ldrh	r3, [r4, #4]
-	cmp	r2, r3
-	bne	.L917
-	.loc 2 1515 0 discriminator 2
-	ldrh	r2, [r8, #8]
-	movw	r3, #64245
-	cmp	r2, r3
-	beq	.L906
-.L917:
-	mov	r10, #0
+.L909:
+	add	r8, r8, #1
+	b	.L908
 .LVL751:
 .L907:
-	.loc 2 1530 0 is_stmt 1 discriminator 1
-	ldrh	r2, [r5, #80]
+	.loc 2 1559 0
+	ldr	r2, [r5, #3240]
 .LVL752:
-	sxth	r3, r10
-	cmp	r3, r2
-	bge	.L913
-	.loc 2 1532 0
-	ldr	r2, [fp, #-64]
-	.loc 2 1533 0
-	ldr	r0, .L924+4
-	.loc 2 1532 0
-	ldrh	r2, [r2]
-	orr	r3, r3, r2, lsl #10
-	.loc 2 1533 0
+	.loc 2 1560 0
+	add	r3, r8, r0
+.LVL753:
+	str	r3, [fp, #-60]
+	.loc 2 1559 0
+	str	r2, [r5, #3228]
+	.loc 2 1560 0
+	ldrh	r2, [r5, #80]
+	ldrh	r1, [r8, r0]
+	.loc 2 1561 0
+	ldr	r0, .L932+4
+	.loc 2 1560 0
+	sub	r2, r2, #1
+	orr	r2, r2, r1, lsl #10
+	str	r2, [r5, #3224]
+	.loc 2 1561 0
 	mov	r2, #1
 	mov	r1, r2
-.LVL753:
-	.loc 2 1532 0
-	str	r3, [r5, #3228]
-	.loc 2 1533 0
 	bl	FlashReadPages
 .LVL754:
-	.loc 2 1536 0
-	ldr	r3, [r5, #3224]
-	cmn	r3, #1
-	beq	.L911
-	.loc 2 1538 0
-	ldrh	r3, [r8, #8]
-	ldr	r2, [fp, #-52]
-.LVL755:
-	cmp	r2, r3
-	bls	.L911
-	.loc 2 1538 0 is_stmt 0 discriminator 1
-	ldrh	r1, [r8]
+	.loc 2 1564 0
+	ldr	r2, [r5, #3220]
+	cmn	r2, #1
+	beq	.L925
+	.loc 2 1564 0 is_stmt 0 discriminator 1
+	ldrh	r1, [r9]
 	ldrh	r2, [r4, #4]
-.LVL756:
 	cmp	r1, r2
-	.loc 2 1540 0 is_stmt 1 discriminator 1
-	ldreq	r2, [r5, #3228]
-	ldreq	r1, [fp, #-48]
+	bne	.L925
+	.loc 2 1564 0 discriminator 2
+	ldrh	r1, [r9, #8]
+	movw	r2, #64245
+	cmp	r1, r2
+	beq	.L914
+.L925:
+	mov	r10, #0
+.LVL755:
+.L915:
+	.loc 2 1579 0 is_stmt 1 discriminator 1
+	ldrh	r1, [r5, #80]
+	sxth	r2, r10
+	cmp	r2, r1
+	bge	.L921
+	.loc 2 1581 0
+	ldr	r3, [fp, #-60]
+.LVL756:
+	.loc 2 1582 0
+	ldr	r0, .L932+4
+	.loc 2 1581 0
+	ldrh	r1, [r3]
+	orr	r2, r2, r1, lsl #10
+	str	r2, [r5, #3224]
+	.loc 2 1582 0
+	mov	r2, #1
+	mov	r1, r2
+	bl	FlashReadPages
 .LVL757:
-	streq	r2, [r1, r3, lsl #2]
+	.loc 2 1585 0
+	ldr	r2, [r5, #3220]
+	cmn	r2, #1
+	beq	.L919
+	.loc 2 1587 0
+	ldrh	r2, [r9, #8]
+	ldr	r3, [fp, #-48]
 .LVL758:
-.L911:
-	add	r10, r10, #1
-	b	.L907
+	cmp	r3, r2
+	bls	.L919
+	.loc 2 1587 0 is_stmt 0 discriminator 1
+	ldrh	r1, [r4, #4]
+	ldrh	r0, [r9]
+	cmp	r0, r1
+	.loc 2 1589 0 is_stmt 1 discriminator 1
+	ldreq	r1, [r5, #3224]
+	ldreq	r3, [fp, #-44]
 .LVL759:
-.L906:
-	mov	r1, #0
-	.loc 2 1523 0 discriminator 1
-	mov	ip, #4
+	streq	r1, [r3, r2, lsl #2]
 .LVL760:
-.L908:
-	.loc 2 1518 0 discriminator 1
-	ldrh	r2, [r5, #80]
-	sxth	r3, r1
-	sub	r2, r2, #1
-	cmp	r3, r2
-	blt	.L910
-.L913:
-	add	r7, r7, #1
-	b	.L898
-.L910:
-	.loc 2 1520 0
-	ldr	r0, [r5, #2244]
+.L919:
+	add	r10, r10, #1
+	b	.L915
 .LVL761:
-	add	r1, r1, #1
-	.loc 2 1521 0
-	ldr	r10, [fp, #-52]
-	.loc 2 1520 0
-	ldr	r2, [r0, r3, lsl #3]
-	.loc 2 1521 0
-	uxth	lr, r2
-	cmp	r10, lr
-	.loc 2 1523 0
-	addhi	r3, ip, r3, lsl #3
-	movhi	r2, lr
-	ldrhi	r3, [r0, r3]
-	ldrhi	r0, [fp, #-48]
+.L914:
+	mov	r0, #0
+	.loc 2 1572 0 discriminator 1
+	mov	lr, #4
 .LVL762:
-	strhi	r3, [r0, r2, lsl #2]
-	b	.L908
-.L925:
+.L916:
+	.loc 2 1567 0 discriminator 1
+	ldrh	r1, [r5, #80]
+	sxth	r2, r0
+	sub	r1, r1, #1
+	cmp	r2, r1
+	blt	.L918
+.LVL763:
+.L921:
+	add	r7, r7, #1
+	b	.L906
+.LVL764:
+.L918:
+	.loc 2 1569 0
+	ldr	ip, [r5, #3240]
+	add	r0, r0, #1
+	.loc 2 1570 0
+	ldr	r3, [fp, #-48]
+.LVL765:
+	.loc 2 1569 0
+	ldr	r1, [ip, r2, lsl #3]
+	.loc 2 1570 0
+	uxth	r10, r1
+	cmp	r3, r10
+	.loc 2 1572 0
+	addhi	r2, lr, r2, lsl #3
+	ldrhi	r3, [fp, #-44]
+.LVL766:
+	movhi	r1, r10
+	ldrhi	r2, [ip, r2]
+	strhi	r2, [r3, r1, lsl #2]
+	b	.L916
+.L933:
 	.align	2
-.L924:
+.L932:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+3224
-.LFE215:
-	.fnend
+	.word	.LANCHOR0+3220
+.LFE225:
 	.size	FtlMapTblRecovery, .-FtlMapTblRecovery
 	.align	2
 	.global	FtlLoadVonderInfo
@@ -10521,64 +9797,55 @@ FtlMapTblRecovery:
 	.fpu softvfp
 	.type	FtlLoadVonderInfo, %function
 FtlLoadVonderInfo:
-	.fnstart
-.LFB216:
-	.loc 2 1560 0
+.LFB226:
+	.loc 2 1609 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI281:
+.LCFI275:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI282:
-	.setfp fp, ip, #-4
+.LCFI276:
 	sub	fp, ip, #4
-.LCFI283:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 1560 0
-	.loc 2 1561 0
-	ldr	r3, .L927
+.LCFI277:
+	.loc 2 1610 0
+	ldr	r3, .L935
 	ldrh	r2, [r3, #96]
 	add	r0, r3, #3904
 	add	r0, r0, #4
 	strh	r2, [r0, #10]	@ movhi
-	.loc 2 1562 0
-	ldr	r2, .L927+4
+	.loc 2 1611 0
+	ldr	r2, .L935+4
 	strh	r2, [r0, #4]	@ movhi
-	.loc 2 1563 0
+	.loc 2 1612 0
 	ldrh	r2, [r3, #120]
 	strh	r2, [r0, #8]	@ movhi
-	.loc 2 1564 0
+	.loc 2 1613 0
 	ldrh	r2, [r3, #98]
 	strh	r2, [r0, #6]	@ movhi
-	.loc 2 1565 0
+	.loc 2 1614 0
 	ldr	r2, [r3, #124]
 	str	r2, [r3, #3920]
-	.loc 2 1566 0
+	.loc 2 1615 0
 	ldr	r2, [r3, #3840]
 	str	r2, [r3, #3924]
-	.loc 2 1567 0
+	.loc 2 1616 0
 	ldr	r2, [r3, #3836]
 	str	r2, [r3, #3928]
-	.loc 2 1568 0
+	.loc 2 1617 0
 	ldr	r2, [r3, #3844]
 	str	r2, [r3, #3932]
-	.loc 2 1570 0
+	.loc 2 1619 0
 	bl	FtlMapTblRecovery
-.LVL763:
-	.loc 2 1573 0
+.LVL767:
+	.loc 2 1622 0
 	mov	r0, #0
 	ldmfd	sp, {fp, sp, pc}
-.L928:
+.L936:
 	.align	2
-.L927:
+.L935:
 	.word	.LANCHOR0
 	.word	-3962
-.LFE216:
-	.fnend
+.LFE226:
 	.size	FtlLoadVonderInfo, .-FtlLoadVonderInfo
 	.align	2
 	.global	FtlL2PDataInit
@@ -10587,100 +9854,92 @@ FtlLoadVonderInfo:
 	.fpu softvfp
 	.type	FtlL2PDataInit, %function
 FtlL2PDataInit:
-	.fnstart
-.LFB217:
-	.loc 2 1576 0
+.LFB227:
+	.loc 2 1625 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI284:
-	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI285:
-	.setfp fp, ip, #-4
+.LCFI278:
+	push	{r4, r5, r6, fp, ip, lr, pc}
+.LCFI279:
 	sub	fp, ip, #4
-.LCFI286:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 1576 0
-	.loc 2 1578 0
+.LCFI280:
+	.loc 2 1627 0
+	ldr	r4, .L940
 	mov	r1, #0
-	.loc 2 1583 0
+	.loc 2 1632 0
 	mvn	r5, #0
-	.loc 2 1578 0
-	ldr	r4, .L932
+	.loc 2 1627 0
 	ldr	r2, [r4, #104]
 	ldr	r0, [r4, #3832]
 	lsl	r2, r2, #1
 	bl	ftl_memset
-.LVL764:
-	.loc 2 1579 0
+.LVL768:
+	.loc 2 1628 0
 	ldrh	r3, [r4, #86]
 	mov	r1, #255
 	ldrh	r2, [r4, #114]
 	ldr	r0, [r4, #3856]
 	mul	r2, r2, r3
 	bl	ftl_memset
-.LVL765:
-	.loc 2 1580 0
+.LVL769:
+	.loc 2 1629 0
 	mov	r2, #0
 	mov	r3, r4
-	.loc 2 1582 0
+	.loc 2 1631 0
 	mov	lr, #12
 	mov	r4, r2
-.L930:
-	.loc 2 1580 0 discriminator 1
+.L938:
+	.loc 2 1629 0 discriminator 1
 	ldrh	r0, [r3, #114]
 	uxth	r1, r2
 	add	ip, r2, #1
 	cmp	r0, r1
-	bhi	.L931
-	.loc 2 1586 0
-	ldr	r2, .L932+4
+	bhi	.L939
+	.loc 2 1635 0
+	ldr	r2, .L940+4
 	mvn	r1, #0
-	.loc 2 1587 0
+	.loc 2 1636 0
 	movw	r0, #3864
 	strh	r1, [r3, r0]	@ movhi
-	.loc 2 1586 0
+	.loc 2 1635 0
 	strh	r1, [r2, #2]	@ movhi
-	.loc 2 1588 0
+	.loc 2 1637 0
 	ldr	r1, [r3, #104]
 	strh	r1, [r2, #10]	@ movhi
-	.loc 2 1589 0
-	ldr	r1, .L932+8
+	.loc 2 1638 0
+	ldr	r1, .L940+8
 	strh	r1, [r2, #4]	@ movhi
-	.loc 2 1590 0
+	.loc 2 1639 0
 	ldrh	r1, [r2, #40]
 	strh	r1, [r2, #8]	@ movhi
-	.loc 2 1591 0
+	.loc 2 1640 0
 	ldrh	r1, [r3, #112]
 	strh	r1, [r2, #6]	@ movhi
-	.loc 2 1592 0
+	.loc 2 1641 0
 	ldr	r2, [r3, #3828]
 	str	r2, [r3, #3876]
-	.loc 2 1593 0
+	.loc 2 1642 0
 	ldr	r2, [r3, #3852]
 	str	r2, [r3, #3880]
-	.loc 2 1594 0
+	.loc 2 1643 0
 	ldr	r2, [r3, #3832]
 	str	r2, [r3, #3884]
-	.loc 2 1595 0
+	.loc 2 1644 0
 	ldr	r2, [r3, #3848]
 	str	r2, [r3, #3888]
-	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L931:
-	.loc 2 1582 0 discriminator 3
+	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
+.L939:
+	.loc 2 1631 0 discriminator 3
 	uxth	r2, r2
-	ldr	r1, [r3, #2424]
+	ldr	r1, [r3, #2468]
 	mul	r0, lr, r2
 	add	r6, r1, r0
 	str	r4, [r6, #4]
-	.loc 2 1583 0 discriminator 3
+	.loc 2 1632 0 discriminator 3
 	strh	r5, [r1, r0]	@ movhi
-	.loc 2 1584 0 discriminator 3
-	ldr	r1, [r3, #2424]
+	.loc 2 1633 0 discriminator 3
+	ldr	r1, [r3, #2468]
 	add	r1, r1, r0
 	ldrh	r0, [r3, #86]
 	mul	r2, r2, r0
@@ -10689,15 +9948,14 @@ FtlL2PDataInit:
 	add	r2, r0, r2
 	str	r2, [r1, #8]
 	mov	r2, ip
-	b	.L930
-.L933:
+	b	.L938
+.L941:
 	.align	2
-.L932:
+.L940:
 	.word	.LANCHOR0
 	.word	.LANCHOR0+3864
 	.word	-3902
-.LFE217:
-	.fnend
+.LFE227:
 	.size	FtlL2PDataInit, .-FtlL2PDataInit
 	.align	2
 	.global	FtlLoadMapInfo
@@ -10706,40 +9964,31 @@ FtlL2PDataInit:
 	.fpu softvfp
 	.type	FtlLoadMapInfo, %function
 FtlLoadMapInfo:
-	.fnstart
-.LFB218:
-	.loc 2 1599 0
+.LFB228:
+	.loc 2 1648 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI287:
+.LCFI281:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI288:
-	.setfp fp, ip, #-4
+.LCFI282:
 	sub	fp, ip, #4
-.LCFI289:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 1599 0
-	.loc 2 1600 0
+.LCFI283:
+	.loc 2 1649 0
 	bl	FtlL2PDataInit
-.LVL766:
-	.loc 2 1602 0
-	ldr	r0, .L935
+.LVL770:
+	.loc 2 1651 0
+	ldr	r0, .L943
 	bl	FtlMapTblRecovery
-.LVL767:
-	.loc 2 1605 0
+.LVL771:
+	.loc 2 1654 0
 	mov	r0, #0
 	ldmfd	sp, {fp, sp, pc}
-.L936:
+.L944:
 	.align	2
-.L935:
+.L943:
 	.word	.LANCHOR0+3864
-.LFE218:
-	.fnend
+.LFE228:
 	.size	FtlLoadMapInfo, .-FtlLoadMapInfo
 	.align	2
 	.global	FtlVariablesInit
@@ -10748,29 +9997,22 @@ FtlLoadMapInfo:
 	.fpu softvfp
 	.type	FtlVariablesInit, %function
 FtlVariablesInit:
-	.fnstart
-.LFB147:
+.LFB157:
 	.loc 3 493 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI290:
+.LCFI284:
 	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI291:
-	.setfp fp, ip, #-4
+.LCFI285:
 	sub	fp, ip, #4
-.LCFI292:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 493 0
+.LCFI286:
+	.loc 3 496 0
+	ldr	r4, .L946
 	.loc 3 497 0
 	mvn	r3, #0
 	.loc 3 496 0
 	mov	r5, #0
-	ldr	r4, .L938
 	.loc 3 502 0
 	mov	r1, r5
 	.loc 3 497 0
@@ -10795,59 +10037,58 @@ FtlVariablesInit:
 	strh	r5, [r4, #120]	@ movhi
 	.loc 3 502 0
 	bl	ftl_memset
-.LVL768:
+.LVL772:
 	.loc 3 503 0
 	ldrh	r2, [r4, #18]
 	mov	r1, r5
-	ldr	r0, [r4, #2248]
+	ldr	r0, [r4, #2304]
 	lsl	r2, r2, #1
 	bl	ftl_memset
-.LVL769:
+.LVL773:
 	.loc 3 504 0
 	ldrh	r2, [r4, #18]
 	mov	r1, r5
 	ldr	r0, [r4, #3816]
 	lsl	r2, r2, #1
 	bl	ftl_memset
-.LVL770:
-.LBB409:
-.LBB410:
-.LBB411:
+.LVL774:
+.LBB431:
+.LBB432:
+.LBB433:
 	.loc 1 202 0
-	add	r0, r4, #2496
+	add	r0, r4, #2240
 	mov	r1, #48
-	add	r0, r0, #8
+	add	r0, r0, #4
 	bl	__memzero
-.LVL771:
-.LBE411:
-.LBE410:
-.LBE409:
-.LBB412:
-.LBB413:
-.LBB414:
+.LVL775:
+.LBE433:
+.LBE432:
+.LBE431:
+.LBB434:
+.LBB435:
+.LBB436:
 	add	r0, r4, #2608
 	mov	r1, #512
-	add	r0, r0, #8
+	add	r0, r0, #4
 	bl	__memzero
-.LVL772:
-.LBE414:
-.LBE413:
-.LBE412:
+.LVL776:
+.LBE436:
+.LBE435:
+.LBE434:
 	.loc 3 507 0
 	bl	FtlGcBufInit
-.LVL773:
+.LVL777:
 	.loc 3 508 0
 	bl	FtlL2PDataInit
-.LVL774:
+.LVL778:
 	.loc 3 510 0
 	mov	r0, r5
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L939:
+.L947:
 	.align	2
-.L938:
+.L946:
 	.word	.LANCHOR0
-.LFE147:
-	.fnend
+.LFE157:
 	.size	FtlVariablesInit, .-FtlVariablesInit
 	.align	2
 	.global	SupperBlkListInit
@@ -10856,200 +10097,189 @@ FtlVariablesInit:
 	.fpu softvfp
 	.type	SupperBlkListInit, %function
 SupperBlkListInit:
-	.fnstart
-.LFB225:
-	.loc 2 2067 0
+.LFB235:
+	.loc 2 2116 0
 	@ args = 0, pretend = 0, frame = 16
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI293:
+.LCFI287:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI294:
-	.setfp fp, ip, #-4
+.LCFI288:
 	sub	fp, ip, #4
-.LCFI295:
-	.pad #20
-	sub	sp, sp, #20
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2067 0
-	.loc 2 2071 0
-	ldr	r4, .L951
-	mov	r2, #6
-	.loc 2 2072 0
+.LCFI289:
+	sub	sp, sp, #16
+	.loc 2 2121 0
 	mov	r5, #0
-	.loc 2 2071 0
+	.loc 2 2120 0
+	ldr	r4, .L959
 	mov	r1, #0
-	.loc 2 2077 0
-	mov	r9, r5
-.LVL775:
+	.loc 2 2126 0
+	mov	r8, r5
+.LVL779:
 	mov	r7, r5
-.LVL776:
-	.loc 2 2071 0
-	ldrh	r3, [r4, #18]
-	.loc 2 2082 0
-	add	r10, r4, #36
-	.loc 2 2071 0
-	ldr	r0, [r4, #2252]
-	mul	r2, r2, r3
+.LVL780:
+	.loc 2 2120 0
+	ldrh	r2, [r4, #18]
+	ldr	r0, [r4, #2292]
+	lsl	r2, r2, #3
 	bl	ftl_memset
-.LVL777:
-	.loc 2 2075 0
-	movw	r3, #2268
-	.loc 2 2072 0
-	str	r5, [r4, #2272]
-	.loc 2 2075 0
-	strh	r5, [r4, r3]	@ movhi
-	.loc 2 2076 0
-	movw	r3, #2276
-	.loc 2 2073 0
-	str	r5, [r4, #2256]
-	.loc 2 2074 0
-	str	r5, [r4, #2264]
-	.loc 2 2076 0
+.LVL781:
+	.loc 2 2124 0
+	movw	r3, #2312
+	.loc 2 2121 0
+	str	r5, [r4, #2316]
+	.loc 2 2124 0
 	strh	r5, [r4, r3]	@ movhi
-.LVL778:
-.L941:
-	.loc 2 2079 0 discriminator 1
+	.loc 2 2125 0
+	add	r3, r4, #2320
+	.loc 2 2122 0
+	str	r5, [r4, #2296]
+	.loc 2 2123 0
+	str	r5, [r4, #2308]
+	.loc 2 2125 0
+	strh	r5, [r3]	@ movhi
+	str	r3, [fp, #-48]
+.LVL782:
+.L949:
+	.loc 2 2128 0 discriminator 1
 	ldrh	r3, [r4, #16]
-	uxth	r8, r5
-	cmp	r8, r3
-	bcs	.L947
-	.loc 2 2084 0
+	uxth	r10, r5
+	cmp	r10, r3
+	bcs	.L955
+	.loc 2 2133 0
 	ldrh	r3, [r4, #78]
-	.loc 2 2081 0
-	ldrh	r2, [r4, #8]
-	.loc 2 2084 0
-	str	r3, [fp, #-48]
+	mov	r9, r10
+	.loc 2 2130 0
+	ldrh	ip, [r4, #8]
+	.loc 2 2133 0
+	str	r3, [fp, #-44]
 	mov	r3, #0
 	mov	r6, r3
-	b	.L948
-.L943:
-	.loc 2 2082 0
-	mov	r1, r8
-	ldrb	r0, [r10, r3]	@ zero_extendqisi2
-	str	r2, [fp, #-56]
+	b	.L956
+.L951:
+	.loc 2 2131 0
+	ldr	r2, .L959+4
+	mov	r1, r9
+	str	ip, [fp, #-56]
 	str	r3, [fp, #-52]
+	ldrb	r0, [r2, r3]	@ zero_extendqisi2
 	bl	V2P_block
-.LVL779:
-	.loc 2 2083 0
+.LVL783:
+	.loc 2 2132 0
 	bl	FtlBbmIsBadBlock
-.LVL780:
+.LVL784:
 	cmp	r0, #0
 	ldr	r3, [fp, #-52]
-	.loc 2 2084 0
-	ldreq	r1, [fp, #-48]
-	.loc 2 2083 0
-	ldr	r2, [fp, #-56]
+	.loc 2 2133 0
+	ldreq	r2, [fp, #-44]
+	.loc 2 2132 0
+	ldr	ip, [fp, #-56]
 	add	r3, r3, #1
-	.loc 2 2084 0
-	addeq	r6, r6, r1
+	.loc 2 2133 0
+	addeq	r6, r6, r2
 	uxtheq	r6, r6
-.L948:
-	.loc 2 2081 0 discriminator 1
+.L956:
+	.loc 2 2130 0 discriminator 1
 	uxth	r1, r3
-	cmp	r2, r1
-	bhi	.L943
-	.loc 2 2086 0
+	cmp	ip, r1
+	bhi	.L951
+	.loc 2 2135 0
 	cmp	r6, #0
 	moveq	r0, r6
-	beq	.L944
-	.loc 2 2087 0
+	beq	.L952
+	.loc 2 2136 0
 	mov	r1, r6
 	mov	r0, #32768
-	bl	__aeabi_idiv
-.LVL781:
-.L944:
-	.loc 2 2088 0
-	ldr	r1, [r4, #2252]
-	uxth	r3, r5
-	mov	r2, #6
-	mla	r2, r2, r3, r1
-	strh	r0, [r2, #4]	@ movhi
-	.loc 2 2090 0
-	ldr	r2, .L951+4
-	ldrh	r1, [r2]
-	cmp	r1, r8
-	beq	.L945
-	.loc 2 2090 0 is_stmt 0 discriminator 1
-	ldrh	r1, [r2, #48]
-	cmp	r1, r8
-	beq	.L945
-	.loc 2 2091 0 is_stmt 1
-	ldrh	r2, [r2, #96]
-	cmp	r2, r8
-	beq	.L945
-	.loc 2 2094 0
-	ldr	r2, [r4, #2260]
-	lsl	r3, r3, #1
+	bl	__divsi3
+.LVL785:
+.L952:
+	.loc 2 2137 0
+	ldr	r3, [r4, #2292]
+	add	r3, r3, r9, lsl #3
+	strh	r0, [r3, #4]	@ movhi
+	.loc 2 2139 0
+	ldr	r3, .L959+8
+	ldrh	r1, [r3]
+	cmp	r1, r10
+	beq	.L953
+	.loc 2 2139 0 is_stmt 0 discriminator 1
+	ldrh	r1, [r3, #48]
+	cmp	r1, r10
+	beq	.L953
+	.loc 2 2140 0 is_stmt 1
+	ldrh	r3, [r3, #96]
+	cmp	r3, r10
+	beq	.L953
+	.loc 2 2143 0
+	ldr	r2, [r4, #2300]
+	lsl	r3, r9, #1
 	ldrh	r3, [r2, r3]
 	cmp	r3, #0
-	bne	.L946
-	.loc 2 2095 0
-	add	r9, r9, #1
-.LVL782:
-	.loc 2 2096 0
-	mov	r0, r8
-	.loc 2 2095 0
-	uxth	r9, r9
-.LVL783:
-	.loc 2 2096 0
+	bne	.L954
+	.loc 2 2144 0
+	add	r8, r8, #1
+.LVL786:
+	.loc 2 2145 0
+	mov	r0, r9
+	.loc 2 2144 0
+	uxth	r8, r8
+.LVL787:
+	.loc 2 2145 0
 	bl	INSERT_FREE_LIST
-.LVL784:
-.L945:
+.LVL788:
+.L953:
 	add	r5, r5, #1
-	b	.L941
-.L946:
-	.loc 2 2098 0
+	b	.L949
+.L954:
+	.loc 2 2147 0
 	add	r7, r7, #1
-.LVL785:
-	.loc 2 2099 0
-	mov	r0, r8
-	.loc 2 2098 0
+.LVL789:
+	.loc 2 2148 0
+	mov	r0, r9
+	.loc 2 2147 0
 	uxth	r7, r7
-.LVL786:
-	.loc 2 2099 0
+.LVL790:
+	.loc 2 2148 0
 	bl	INSERT_DATA_LIST
-.LVL787:
-	b	.L945
-.L947:
-	.loc 2 2103 0
-	movw	r2, #2268
+.LVL791:
+	b	.L953
+.L955:
+	.loc 2 2152 0
+	movw	r2, #2312
 	strh	r7, [r4, r2]	@ movhi
-	.loc 2 2105 0
-	add	r7, r7, r9
-.LVL788:
+	.loc 2 2154 0
+	add	r7, r7, r8
+.LVL792:
+	.loc 2 2153 0
+	ldr	r2, [fp, #-48]
+	.loc 2 2154 0
 	cmp	r7, r3
-	.loc 2 2104 0
-	movw	r2, #2276
-	strh	r9, [r4, r2]	@ movhi
-	.loc 2 2105 0
-	ble	.L949
-	.loc 2 2105 0 is_stmt 0 discriminator 1
-	movw	r2, #2105
-	ldr	r1, .L951+8
-	ldr	r0, .L951+12
+	.loc 2 2153 0
+	strh	r8, [r2]	@ movhi
+	.loc 2 2154 0
+	ble	.L957
+	.loc 2 2154 0 is_stmt 0 discriminator 1
+	movw	r2, #2154
+	ldr	r1, .L959+12
+	ldr	r0, .L959+16
 	bl	printk
-.LVL789:
-.L949:
-	.loc 2 2107 0 is_stmt 1
+.LVL793:
+.L957:
+	.loc 2 2156 0 is_stmt 1
 	mov	r0, #0
 	sub	sp, fp, #40
-.LCFI296:
+.LCFI290:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL790:
-.L952:
+.LVL794:
+.L960:
 	.align	2
-.L951:
+.L959:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+2280
+	.word	.LANCHOR0+36
+	.word	.LANCHOR0+2324
 	.word	.LANCHOR1+342
 	.word	.LC1
-.LFE225:
-	.fnend
+.LFE235:
 	.size	SupperBlkListInit, .-SupperBlkListInit
 	.align	2
 	.global	FtlGcPageVarInit
@@ -11058,59 +10288,52 @@ SupperBlkListInit:
 	.fpu softvfp
 	.type	FtlGcPageVarInit, %function
 FtlGcPageVarInit:
-	.fnstart
-.LFB249:
+.LFB259:
 	.loc 5 202 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI297:
-	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI298:
-	.setfp fp, ip, #-4
+.LCFI291:
+	push	{r4, fp, ip, lr, pc}
+.LCFI292:
 	sub	fp, ip, #4
-.LCFI299:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 5 202 0
+.LCFI293:
 	.loc 5 203 0
+	ldr	r4, .L962
 	mov	r3, #0
-	movw	r2, #3172
-	ldr	r4, .L954
 	.loc 5 205 0
 	mov	r1, #255
 	.loc 5 203 0
-	strh	r3, [r4, r2]	@ movhi
+	add	r2, r4, #3168
+	.loc 5 205 0
+	ldr	r0, [r4, #3164]
+	.loc 5 203 0
+	strh	r3, [r2]	@ movhi
 	.loc 5 204 0
-	movw	r2, #3180
+	movw	r2, #3176
 	strh	r3, [r4, r2]	@ movhi
 	.loc 5 205 0
 	ldrh	r2, [r4, #82]
-	ldr	r0, [r4, #3168]
 	lsl	r2, r2, #1
 	bl	ftl_memset
-.LVL791:
+.LVL795:
 	.loc 5 206 0
 	ldrh	r3, [r4, #82]
 	mov	r2, #12
 	mov	r1, #255
-	ldr	r0, [r4, #3176]
+	ldr	r0, [r4, #3172]
 	mul	r2, r2, r3
 	bl	ftl_memset
-.LVL792:
+.LVL796:
 	.loc 5 207 0
 	bl	FtlGcBufInit
-.LVL793:
-	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L955:
+.LVL797:
+	ldmfd	sp, {r4, fp, sp, pc}
+.L963:
 	.align	2
-.L954:
+.L962:
 	.word	.LANCHOR0
-.LFE249:
-	.fnend
+.LFE259:
 	.size	FtlGcPageVarInit, .-FtlGcPageVarInit
 	.align	2
 	.global	FtlGcScanTempBlk
@@ -11119,235 +10342,224 @@ FtlGcPageVarInit:
 	.fpu softvfp
 	.type	FtlGcScanTempBlk, %function
 FtlGcScanTempBlk:
-	.fnstart
-.LFB250:
+.LFB260:
 	.loc 5 211 0
-	@ args = 0, pretend = 0, frame = 24
+	@ args = 0, pretend = 0, frame = 20
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL794:
-	.movsp ip
+.LVL798:
 	mov	ip, sp
-.LCFI300:
+.LCFI294:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI301:
-	.setfp fp, ip, #-4
+.LCFI295:
 	sub	fp, ip, #4
-.LCFI302:
-	.pad #28
-	sub	sp, sp, #28
-	push	{lr}
-	bl	__gnu_mcount_nc
+.LCFI296:
+	sub	sp, sp, #20
 	.loc 5 211 0
+	mov	r6, r0
 	.loc 5 220 0
-	ldr	r3, .L979
+	ldr	r3, .L987
 	.loc 5 211 0
-	mov	r6, r0
-	str	r1, [fp, #-48]
+	mov	r10, r1
 	.loc 5 220 0
 	ldrh	r4, [r3, #4]
-.LVL795:
+.LVL799:
 	.loc 5 221 0
 	movw	r3, #65535
 	cmp	r4, r3
-	beq	.L973
+	beq	.L981
 	.loc 5 223 0
 	cmp	r4, #0
-	bne	.L957
-.LVL796:
-.L958:
+	bne	.L965
+.L966:
 	.loc 5 224 0
 	bl	FtlGcPageVarInit
-.LVL797:
-	b	.L959
-.LVL798:
-.L973:
-	.loc 5 222 0
-	mov	r4, #0
-.L957:
+.LVL800:
+	b	.L967
+.LVL801:
+.L981:
+	.loc 5 222 0
+	mov	r4, #0
+.L965:
 	.loc 5 223 0 discriminator 1
-	ldr	r3, .L979+4
-	ldr	r2, [fp, #-48]
-.LVL799:
+	ldr	r3, .L987+4
 	ldrh	r3, [r3, #78]
-	cmp	r3, r2
-	beq	.L958
-.L959:
+	cmp	r3, r10
+	beq	.L966
+.L967:
 	.loc 5 231 0
-	ldr	r5, .L979+4
+	ldr	r5, .L987+4
 	.loc 5 222 0
 	mov	r8, #0
-.LVL800:
-.L967:
+.LVL802:
+.L975:
 	.loc 5 228 0
 	ldrh	r2, [r6]
-.LVL801:
 	movw	r3, #65535
 	.loc 5 226 0
 	mov	r0, #0
 	strb	r0, [r6, #8]
 	.loc 5 228 0
 	cmp	r2, r3
-	beq	.L960
-.L970:
+	beq	.L968
+.L978:
 	.loc 5 231 0
 	ldrh	r3, [r5, #8]
 	mov	r2, #0
 	.loc 5 234 0
 	ldr	r0, [r5, #3792]
 	add	ip, r6, #16
-	.loc 5 236 0
-	ldrh	r10, [r5, #88]
 	.loc 5 230 0
 	mov	r7, r2
-	.loc 5 231 0
-	str	r3, [fp, #-52]
 	.loc 5 233 0
 	movw	r9, #65535
+	.loc 5 231 0
+	str	r3, [fp, #-44]
 	.loc 5 235 0
+	ldr	r3, [r5, #3148]
+	str	r3, [fp, #-48]
+	ldrh	r3, [r5, #86]
+	str	r3, [fp, #-52]
+	.loc 5 236 0
 	ldr	r3, [r5, #3152]
 	str	r3, [fp, #-56]
-	ldrh	r3, [r5, #86]
+	ldrh	r3, [r5, #88]
 	str	r3, [fp, #-60]
-	.loc 5 236 0
-	ldr	r3, [r5, #3156]
-	str	r3, [fp, #-64]
-.LVL802:
-.L961:
+.LVL803:
+.L969:
 	.loc 5 231 0 discriminator 1
-	ldr	r1, [fp, #-52]
+	ldr	r1, [fp, #-44]
 	uxth	r3, r2
-.LVL803:
+.LVL804:
 	cmp	r1, r3
-	bhi	.L963
+	bhi	.L971
 	.loc 5 241 0
 	mov	r9, #0
 	.loc 5 240 0
 	mov	r2, #0
 	mov	r1, r7
 	bl	FlashReadPages
-.LVL804:
-.L964:
+.LVL805:
+.L972:
 	.loc 5 241 0 discriminator 1
 	uxth	r3, r9
 	cmp	r7, r3
-	bhi	.L968
-	.loc 5 268 0
-	ldr	r3, [fp, #-48]
-.LVL805:
+	bhi	.L976
 	.loc 5 266 0
 	add	r8, r8, #1
 	.loc 5 264 0
 	add	r4, r4, #1
 .LVL806:
+	.loc 5 268 0
+	cmp	r10, r8
+	.loc 5 264 0
 	uxth	r4, r4
 .LVL807:
 	.loc 5 268 0
-	cmp	r3, r8
-	bls	.L969
-.L971:
+	bls	.L977
+.L979:
 	.loc 5 274 0
 	ldrh	r3, [r5, #78]
-.LVL808:
 	cmp	r3, r4
-	bhi	.L970
+	bhi	.L978
 	.loc 5 265 0
 	mov	r0, #0
+.LVL808:
+	b	.L968
 .LVL809:
-	b	.L960
-.LVL810:
-.L963:
+.L971:
 	.loc 5 232 0
 	ldrh	r3, [ip], #2
-.LVL811:
+.LVL810:
 	.loc 5 233 0
 	cmp	r3, r9
-	beq	.L962
+	beq	.L970
 	.loc 5 234 0
 	mov	r1, #20
 	orr	r3, r4, r3, lsl #10
-.LVL812:
+.LVL811:
 	mla	r1, r1, r7, r0
 	str	r3, [r1, #4]
 	.loc 5 235 0
-	ldr	r3, [fp, #-60]
+	ldr	r3, [fp, #-52]
 	mul	r3, r3, r7
 	add	lr, r3, #3
 	cmp	r3, #0
 	movlt	r3, lr
-	ldr	lr, [fp, #-56]
+	ldr	lr, [fp, #-48]
 	bic	r3, r3, #3
 	add	r3, lr, r3
 	str	r3, [r1, #8]
 	.loc 5 236 0
-	mul	r3, r10, r7
+	ldr	r3, [fp, #-60]
+	mul	r3, r3, r7
 	.loc 5 237 0
 	add	r7, r7, #1
-.LVL813:
+.LVL812:
 	uxth	r7, r7
-.LVL814:
+.LVL813:
 	.loc 5 236 0
 	add	lr, r3, #3
 	cmp	r3, #0
 	movlt	r3, lr
-	ldr	lr, [fp, #-64]
+	ldr	lr, [fp, #-56]
 	bic	r3, r3, #3
 	add	r3, lr, r3
 	str	r3, [r1, #12]
-.LVL815:
-.L962:
+.LVL814:
+.L970:
 	add	r2, r2, #1
-	b	.L961
-.LVL816:
-.L968:
+	b	.L969
+.LVL815:
+.L976:
 	.loc 5 242 0
 	mov	r3, #20
 	ldr	r2, [r5, #3792]
-	mul	r10, r3, r9
-	str	r2, [fp, #-60]
-	add	r3, r2, r10
-	ldr	r1, [r3, #4]
-.LVL817:
+	mul	r3, r3, r9
+	str	r2, [fp, #-52]
+	add	ip, r2, r3
 	str	r3, [fp, #-56]
+	ldr	r1, [ip, #4]
+.LVL816:
+	str	ip, [fp, #-48]
 	.loc 5 243 0
 	ubfx	r0, r1, #10, #16
-	str	r1, [fp, #-52]
+	str	r1, [fp, #-44]
 	bl	P2V_plane
-.LVL818:
+.LVL817:
 	.loc 5 245 0
-	ldr	r2, [fp, #-60]
-	ldr	r2, [r2, r10]
-	cmp	r2, #0
-	bne	.L965
-	.loc 5 247 0
+	ldr	r2, [fp, #-52]
 	ldr	r3, [fp, #-56]
+	ldr	r3, [r2, r3]
+	cmp	r3, #0
+	bne	.L973
+	.loc 5 247 0
+	ldr	ip, [fp, #-48]
 	.loc 5 248 0
 	movw	r2, #65535
 	add	r9, r9, #1
-	ldr	r1, [fp, #-52]
-.LVL819:
+	ldr	r1, [fp, #-44]
+.LVL818:
 	.loc 5 247 0
-	ldr	r3, [r3, #12]
-.LVL820:
+	ldr	r3, [ip, #12]
+.LVL819:
 	.loc 5 248 0
 	ldrh	ip, [r3]
 	cmp	ip, r2
-	bne	.L966
+	bne	.L974
 	.loc 5 249 0
 	mov	r3, #1
-.LVL821:
+.LVL820:
 	str	r3, [r5, #3960]
-.LVL822:
-.L960:
+.LVL821:
+.L968:
 	.loc 5 281 0
-	ldr	r3, .L979
+	ldr	r3, .L987
 	mvn	r2, #0
 	.loc 5 283 0
 	strb	r0, [r6, #6]
 	.loc 5 284 0
 	mov	r1, r4
-.LVL823:
+.LVL822:
 	.loc 5 282 0
 	strh	r4, [r6, #2]	@ movhi
 	.loc 5 281 0
@@ -11355,69 +10567,67 @@ FtlGcScanTempBlk:
 	.loc 5 284 0
 	mov	r2, r0
 	mov	r0, r6
-.LVL824:
+.LVL823:
 	bl	ftl_sb_update_avl_pages
-.LVL825:
+.LVL824:
 	.loc 5 285 0
-	b	.L972
-.LVL826:
-.L966:
+	b	.L980
+.LVL825:
+.L974:
 	.loc 5 252 0
 	ldr	r2, [r3, #8]
 	ldr	r0, [r3, #12]
 	bl	FtlGcUpdatePage
-.LVL827:
-	b	.L964
-.L965:
+.LVL826:
+	b	.L972
+.L973:
 	.loc 5 256 0
 	ldrh	r3, [r6]
 	mov	r4, #0
-.LVL828:
-	ldr	r2, [r5, #2260]
+.LVL827:
+	ldr	r2, [r5, #2300]
 	lsl	r3, r3, #1
 	strh	r4, [r2, r3]	@ movhi
 	.loc 5 257 0
 	ldrh	r0, [r6]
 	bl	INSERT_FREE_LIST
-.LVL829:
+.LVL828:
 	.loc 5 258 0
 	mvn	r3, #0
 	strh	r3, [r6]	@ movhi
 	.loc 5 260 0
 	bl	FtlGcPageVarInit
-.LVL830:
+.LVL829:
 	.loc 5 261 0
-	b	.L967
-.LVL831:
-.L969:
+	b	.L975
+.LVL830:
+.L977:
 	.loc 5 268 0 discriminator 1
-	ldr	r2, .L979
+	ldr	r2, .L987
 	movw	r1, #65535
 	ldrh	r3, [r2, #4]
-.LVL832:
 	cmp	r3, r1
-	beq	.L971
+	beq	.L979
 	.loc 5 269 0
 	add	r3, r3, r8
 	strh	r3, [r2, #4]	@ movhi
 	.loc 5 270 0
 	ldrh	r3, [r5, #78]
 	cmp	r3, r4
-	bls	.L971
-.L972:
+	bls	.L979
+.L980:
 	.loc 5 286 0
 	mvn	r0, #0
 	sub	sp, fp, #40
-.LCFI303:
+.LCFI297:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL833:
-.L980:
+.LVL831:
+.L988:
 	.align	2
-.L979:
+.L987:
 	.word	.LANCHOR2
 	.word	.LANCHOR0
-.LFE250:
-	.fnend
+.LFE260:
 	.size	FtlGcScanTempBlk, .-FtlGcScanTempBlk
 	.align	2
 	.global	ftl_memcpy
@@ -11426,32 +10636,23 @@ FtlGcScanTempBlk:
 	.fpu softvfp
 	.type	ftl_memcpy, %function
 ftl_memcpy:
-	.fnstart
-.LFB268:
+.LFB278:
 	.loc 1 206 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL834:
-	.movsp ip
+.LVL832:
 	mov	ip, sp
-.LCFI304:
+.LCFI298:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI305:
-	.setfp fp, ip, #-4
+.LCFI299:
 	sub	fp, ip, #4
-.LCFI306:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 1 206 0
+.LCFI300:
 	.loc 1 207 0
 	bl	memcpy
-.LVL835:
+.LVL833:
 	.loc 1 208 0
 	ldmfd	sp, {fp, sp, pc}
-.LFE268:
-	.fnend
+.LFE278:
 	.size	ftl_memcpy, .-ftl_memcpy
 	.align	2
 	.global	FtlBbmTblFlush
@@ -11460,95 +10661,86 @@ ftl_memcpy:
 	.fpu softvfp
 	.type	FtlBbmTblFlush, %function
 FtlBbmTblFlush:
-	.fnstart
-.LFB166:
+.LFB176:
 	.loc 4 80 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI307:
+.LCFI301:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI308:
-	.setfp fp, ip, #-4
+.LCFI302:
 	sub	fp, ip, #4
-.LCFI309:
-	.pad #12
-	sub	sp, sp, #12
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 4 80 0
-	.loc 4 87 0
-	ldr	r4, .L991
+.LCFI303:
+	sub	sp, sp, #4
 	.loc 4 91 0
 	mov	r5, #0
-.LVL836:
-	.loc 4 92 0
-	ldr	r7, .L991+4
+.LVL834:
+	.loc 4 87 0
+	ldr	r4, .L999
 	.loc 4 89 0
 	mov	r1, #0
+	.loc 4 92 0
+	ldr	r7, .L999+4
 	.loc 4 87 0
-	ldr	r0, [r4, #2244]
+	ldr	r0, [r4, #3240]
 	add	r6, r4, #152
 	.loc 4 88 0
 	ldr	r3, [r4, #3244]
 	.loc 4 89 0
 	ldrh	r2, [r4, #86]
 	.loc 4 87 0
-	str	r0, [r4, #3232]
+	str	r0, [r4, #3228]
 	.loc 4 88 0
-	str	r3, [r4, #3236]
+	str	r3, [r4, #3232]
 	.loc 4 89 0
 	bl	ftl_memset
-.LVL837:
-.L983:
+.LVL835:
+.L991:
 	.loc 4 91 0 discriminator 1
 	ldrh	r3, [r4, #30]
 	cmp	r5, r3
-	blt	.L984
+	blt	.L992
 	.loc 4 94 0
-	ldr	r6, [r4, #3236]
-.LVL838:
-.LBB420:
-.LBB421:
-.LBB422:
+	ldr	r6, [r4, #3232]
+.LVL836:
+.LBB442:
+.LBB443:
+.LBB444:
 	.loc 1 202 0
 	mov	r2, #16
 	mov	r1, #255
-.LBE422:
-.LBE421:
-.LBE420:
+.LBE444:
+.LBE443:
+.LBE442:
 	.loc 4 108 0
-	ldr	r9, .L991+8
+	ldr	r9, .L999+8
 	.loc 4 109 0
-	ldr	r8, .L991+12
+	ldr	r8, .L999+12
 	.loc 4 84 0
 	mov	r5, #0
-.LVL839:
-.LBB427:
-.LBB425:
-.LBB423:
+.LVL837:
+.LBB449:
+.LBB447:
+.LBB445:
 	.loc 1 202 0
 	mov	r0, r6
-.LBE423:
-.LBE425:
-.LBE427:
+.LBE445:
+.LBE447:
+.LBE449:
 	.loc 4 82 0
 	mov	r7, r5
-.LVL840:
-.LBB428:
-.LBB426:
-.LBB424:
+.LVL838:
+.LBB450:
+.LBB448:
+.LBB446:
 	.loc 1 202 0
 	bl	memset
-.LVL841:
-.LBE424:
-.LBE426:
-.LBE428:
+.LVL839:
+.LBE446:
+.LBE448:
+.LBE450:
 	.loc 4 97 0
-	ldr	r3, .L991+16
+	ldr	r3, .L999+16
 	strh	r3, [r6]	@ movhi
 	.loc 4 98 0
 	ldr	r3, [r4, #136]
@@ -11565,47 +10757,47 @@ FtlBbmTblFlush:
 	.loc 4 102 0
 	ldr	r3, [r4, #4]
 	strh	r3, [r6, #12]	@ movhi
-.L985:
+.L993:
 	.loc 4 104 0
-	ldr	r3, [r4, #2244]
+	ldr	r3, [r4, #3240]
 	.loc 4 106 0
 	mov	r10, #0
 	.loc 4 107 0
 	ldrh	r1, [r4, #128]
 	ldrh	r2, [r4, #130]
 	.loc 4 104 0
-	str	r3, [r4, #3232]
+	str	r3, [r4, #3228]
 	.loc 4 105 0
 	ldr	r3, [r4, #3244]
 	.loc 4 106 0
-	str	r10, [r4, #3224]
+	str	r10, [r4, #3220]
 	.loc 4 105 0
-	str	r3, [r4, #3236]
+	str	r3, [r4, #3232]
 	.loc 4 107 0
 	orr	r3, r2, r1, lsl #10
 	.loc 4 108 0
 	ldrh	r0, [r6, #10]
 	.loc 4 107 0
-	str	r3, [r4, #3228]
+	str	r3, [r4, #3224]
 	.loc 4 108 0
 	ldrh	r3, [r4, #132]
 	str	r0, [sp]
 	mov	r0, r9
 	bl	printk
-.LVL842:
+.LVL840:
 	.loc 4 109 0
 	mov	r3, #1
 	mov	r0, r8
 	mov	r2, r3
 	mov	r1, r3
 	bl	FlashProgPages
-.LVL843:
+.LVL841:
 	.loc 4 110 0
 	ldrh	r3, [r4, #80]
 	ldrh	r2, [r4, #130]
 	sub	r3, r3, #1
 	cmp	r2, r3
-	blt	.L986
+	blt	.L994
 	.loc 4 113 0
 	ldr	r3, [r4, #136]
 	.loc 4 115 0
@@ -11634,56 +10826,56 @@ FtlBbmTblFlush:
 	mov	r1, r2
 	.loc 4 119 0
 	lsl	r3, r3, #10
-	str	r3, [r4, #3228]
+	str	r3, [r4, #3224]
 	.loc 4 121 0
 	str	r3, [r0, #4]
 	.loc 4 122 0
 	bl	FlashEraseBlocks
-.LVL844:
+.LVL842:
 	.loc 4 123 0
 	mov	r3, #1
 	mov	r0, r8
 	mov	r2, r3
 	mov	r1, r3
 	bl	FlashProgPages
-.LVL845:
-.L986:
+.LVL843:
+.L994:
 	.loc 4 126 0
 	ldrh	r3, [r4, #130]
 	add	r3, r3, #1
 	strh	r3, [r4, #130]	@ movhi
 	.loc 4 127 0
-	ldr	r3, [r4, #3224]
+	ldr	r3, [r4, #3220]
 	cmn	r3, #1
-	bne	.L987
+	bne	.L995
 	.loc 4 130 0
 	add	r5, r5, #1
-.LVL846:
+.LVL844:
 	.loc 4 129 0
-	ldr	r1, [r4, #3228]
+	ldr	r1, [r4, #3224]
 	.loc 4 130 0
 	uxth	r5, r5
-.LVL847:
+.LVL845:
 	.loc 4 129 0
-	ldr	r0, .L991+20
+	ldr	r0, .L999+20
 	bl	printk
-.LVL848:
+.LVL846:
 	.loc 4 131 0
 	cmp	r5, #3
-	bls	.L985
+	bls	.L993
 	.loc 4 132 0
 	mov	r2, r5
-	ldr	r1, [r4, #3228]
-	ldr	r0, .L991+24
+	ldr	r1, [r4, #3224]
+	ldr	r0, .L999+24
 	bl	printk
-.LVL849:
-.L989:
-	b	.L989
-.LVL850:
-.L984:
+.LVL847:
+.L997:
+	b	.L997
+.LVL848:
+.L992:
 	.loc 4 92 0 discriminator 3
 	ldrh	r2, [r7]
-	ldr	r3, [r4, #3232]
+	ldr	r3, [r4, #3228]
 	ldr	r1, [r6, #4]!
 	mul	r0, r2, r5
 	lsl	r2, r2, #2
@@ -11692,34 +10884,30 @@ FtlBbmTblFlush:
 	.loc 4 92 0 discriminator 3
 	add	r0, r3, r0, lsl #2
 	bl	ftl_memcpy
-.LVL851:
-	b	.L983
-.LVL852:
-.L990:
+.LVL849:
+	b	.L991
+.LVL850:
+.L998:
 	mov	r7, #1
-	b	.L985
-.L987:
+	b	.L993
+.L995:
 	.loc 4 139 0
 	cmp	r7, #0
-	beq	.L990
+	beq	.L998
 	.loc 4 146 0
 	mov	r0, #0
-	sub	sp, fp, #40
-.LCFI310:
-	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL853:
-.L992:
+	ldmib	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.L1000:
 	.align	2
-.L991:
+.L999:
 	.word	.LANCHOR0
 	.word	.LANCHOR0+3860
-	.word	.LC90
-	.word	.LANCHOR0+3224
+	.word	.LC93
+	.word	.LANCHOR0+3220
 	.word	-3887
-	.word	.LC91
-	.word	.LC92
-.LFE166:
-	.fnend
+	.word	.LC94
+	.word	.LC95
+.LFE176:
 	.size	FtlBbmTblFlush, .-FtlBbmTblFlush
 	.align	2
 	.global	allocate_data_superblock
@@ -11728,458 +10916,444 @@ FtlBbmTblFlush:
 	.fpu softvfp
 	.type	allocate_data_superblock, %function
 allocate_data_superblock:
-	.fnstart
-.LFB238:
-	.loc 2 2531 0
+.LFB248:
+	.loc 2 2579 0
 	@ args = 0, pretend = 0, frame = 16
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL854:
-	.movsp ip
+.LVL851:
 	mov	ip, sp
-.LCFI311:
+.LCFI304:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI312:
-	.setfp fp, ip, #-4
+.LCFI305:
 	sub	fp, ip, #4
-.LCFI313:
-	.pad #20
-	sub	sp, sp, #20
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2531 0
-	.loc 2 2537 0
-	ldr	r9, .L1028
-	.loc 2 2531 0
+.LCFI306:
+	sub	sp, sp, #16
+	.loc 2 2579 0
 	mov	r5, r0
-	mov	r4, r9
-.LVL855:
-.L994:
-	.loc 2 2537 0
-	ldr	r7, .L1028+4
-.LVL856:
-	ldrh	r2, [r7, #-8]
-	ldrh	r3, [r7]
+	.loc 2 2585 0
+	ldr	r4, .L1036
+	add	r8, r4, #2320
+.LVL852:
+.L1002:
+	ldr	r7, .L1036+4
+.LVL853:
+	ldrh	r3, [r8]
+	ldrh	r2, [r7]
 	add	r3, r3, r2
-	ldrh	r2, [r9, #16]
+	ldrh	r2, [r4, #16]
 	cmp	r3, r2
-	ble	.L995
-	.loc 2 2537 0 is_stmt 0 discriminator 1
-	movw	r2, #2537
-	ldr	r1, .L1028+8
-	ldr	r0, .L1028+12
+	ble	.L1003
+	.loc 2 2585 0 is_stmt 0 discriminator 1
+	movw	r2, #2585
+	ldr	r1, .L1036+8
+	ldr	r0, .L1036+12
 	bl	printk
-.LVL857:
-.L995:
-	.loc 2 2539 0 is_stmt 1
-	ldr	r3, .L1028+16
+.LVL854:
+.L1003:
+	.loc 2 2587 0 is_stmt 1
+	ldr	r3, .L1036+16
 	cmp	r5, r3
 	movne	r1, #0
-.LVL858:
-	bne	.L996
-	.loc 2 2540 0
-	ldrh	r3, [r7]
-	ldr	r1, [r4, #3140]
-.LVL859:
+.LVL855:
+	bne	.L1004
+	.loc 2 2588 0
+	ldrh	r3, [r8]
+	ldr	r1, [r4, #3136]
+.LVL856:
 	mul	r2, r1, r3
 	lsr	r1, r3, #1
 	add	r1, r1, #1
 	add	r1, r1, r2, lsr #2
 	uxth	r1, r1
-.LVL860:
-	.loc 2 2544 0
+.LVL857:
+	.loc 2 2592 0
 	cmp	r1, #0
-	.loc 2 2545 0
+	.loc 2 2593 0
 	subne	r1, r1, #1
-.LVL861:
+.LVL858:
 	uxthne	r1, r1
-.LVL862:
-.L996:
-	.loc 2 2546 0
-	ldr	r0, .L1028+20
+.LVL859:
+.L1004:
+	.loc 2 2594 0
+	ldr	r0, .L1036+20
 	bl	List_pop_index_node
-.LVL863:
-	ldrh	r3, [r7]
+.LVL860:
+	ldrh	r3, [r8]
 	mov	r6, r0
-	uxth	r8, r0
+	uxth	r9, r0
 	cmp	r3, #0
-	bne	.L997
-	.loc 2 2546 0 is_stmt 0 discriminator 1
-	movw	r2, #2546
-	ldr	r1, .L1028+8
-	ldr	r0, .L1028+12
+	bne	.L1005
+	.loc 2 2594 0 is_stmt 0 discriminator 1
+	movw	r2, #2594
+	ldr	r1, .L1036+8
+	ldr	r0, .L1036+12
 	bl	printk
-.LVL864:
-.L997:
-	.loc 2 2546 0 discriminator 3
-	ldrh	r3, [r7]
-	.loc 2 2550 0 is_stmt 1 discriminator 3
+.LVL861:
+.L1005:
+	.loc 2 2594 0 discriminator 3
+	ldrh	r3, [r8]
+	.loc 2 2598 0 is_stmt 1 discriminator 3
 	mov	r0, r5
-	.loc 2 2546 0 discriminator 3
+	.loc 2 2594 0 discriminator 3
 	sub	r3, r3, #1
-	strh	r3, [r7]	@ movhi
-	.loc 2 2549 0 discriminator 3
-	strh	r8, [r5]	@ movhi
-	.loc 2 2550 0 discriminator 3
+	strh	r3, [r8]	@ movhi
+	.loc 2 2597 0 discriminator 3
+	strh	r9, [r5]	@ movhi
+	.loc 2 2598 0 discriminator 3
 	bl	make_superblock
-.LVL865:
-	.loc 2 2551 0 discriminator 3
+.LVL862:
+	.loc 2 2599 0 discriminator 3
 	ldrb	r3, [r5, #7]	@ zero_extendqisi2
 	cmp	r3, #0
-	bne	.L998
-	.loc 2 2555 0
-	uxth	r6, r6
-	ldr	r3, [r4, #2260]
-	mvn	r2, #0
-	lsl	r6, r6, #1
-	.loc 2 2556 0
-	mov	r0, r8
-	.loc 2 2555 0
-	strh	r2, [r3, r6]	@ movhi
-	.loc 2 2556 0
+	bne	.L1006
+	uxth	r0, r6
+	.loc 2 2603 0
+	ldr	r2, [r4, #2300]
+	mvn	r1, #0
+	lsl	r3, r0, #1
+	strh	r1, [r2, r3]	@ movhi
+	.loc 2 2604 0
 	bl	INSERT_DATA_LIST
-.LVL866:
-	.loc 2 2557 0
-	ldrh	r2, [r7, #-8]
-	ldrh	r3, [r7]
+.LVL863:
+	.loc 2 2605 0
+	ldrh	r2, [r7]
+	ldrh	r3, [r8]
 	add	r3, r3, r2
 	ldrh	r2, [r4, #16]
 	cmp	r3, r2
-	ble	.L994
-	.loc 2 2557 0 is_stmt 0 discriminator 1
-	movw	r2, #2557
-	ldr	r1, .L1028+8
-	ldr	r0, .L1028+12
+	ble	.L1002
+	.loc 2 2605 0 is_stmt 0 discriminator 1
+	movw	r2, #2605
+	ldr	r1, .L1036+8
+	ldr	r0, .L1036+12
 	bl	printk
-.LVL867:
-	b	.L994
-.L998:
-	.loc 2 2560 0 is_stmt 1
-	ldrh	r2, [r7, #-8]
-	ldrh	r3, [r7]
+.LVL864:
+	b	.L1002
+.L1006:
+	.loc 2 2608 0 is_stmt 1
+	ldrh	r2, [r7]
+	ldrh	r3, [r8]
 	add	r3, r3, r2
 	ldrh	r2, [r4, #16]
 	cmp	r3, r2
-	ble	.L1000
-	.loc 2 2560 0 is_stmt 0 discriminator 1
-	mov	r2, #2560
-	ldr	r1, .L1028+8
-	ldr	r0, .L1028+12
+	ble	.L1008
+	.loc 2 2608 0 is_stmt 0 discriminator 1
+	mov	r2, #2608
+	ldr	r1, .L1036+8
+	ldr	r0, .L1036+12
 	bl	printk
-.LVL868:
-.L1000:
-	.loc 2 2564 0 is_stmt 1 discriminator 1
+.LVL865:
+.L1008:
+	.loc 2 2612 0 is_stmt 1 discriminator 1
 	ldr	r0, [r4, #3760]
 	mov	r2, #20
 	ldrh	r1, [r4, #8]
 	mov	r7, #0
-.LVL869:
+.LVL866:
 	add	ip, r5, #16
 	mov	lr, r7
 	mov	r3, r0
 	mla	r1, r2, r1, r0
-	str	r1, [fp, #-48]
-.L1001:
-	.loc 2 2563 0 discriminator 1
-	ldr	r1, [fp, #-48]
+	str	r1, [fp, #-44]
+.L1009:
+	.loc 2 2611 0 discriminator 1
+	ldr	r1, [fp, #-44]
 	cmp	r1, r3
-	bne	.L1003
-	.loc 2 2571 0
+	bne	.L1011
+	.loc 2 2619 0
 	cmp	r7, #0
-	bne	.L1004
-	.loc 2 2571 0 is_stmt 0 discriminator 1
-	movw	r2, #2571
-	ldr	r1, .L1028+8
-	ldr	r0, .L1028+12
+	bne	.L1012
+	.loc 2 2619 0 is_stmt 0 discriminator 1
+	movw	r2, #2619
+	ldr	r1, .L1036+8
+	ldr	r0, .L1036+12
 	bl	printk
-.LVL870:
-.L1004:
-	.loc 2 2573 0 is_stmt 1
-	ldr	r3, .L1028+24
+.LVL867:
+.L1012:
+	.loc 2 2621 0 is_stmt 1
+	ldr	r3, .L1036+24
 	ldrh	r3, [r3]
-	cmp	r3, r8
-	bne	.L1005
-	.loc 2 2573 0 is_stmt 0 discriminator 1
-	movw	r2, #2573
-	ldr	r1, .L1028+8
-	ldr	r0, .L1028+12
+	cmp	r3, r9
+	bne	.L1013
+	.loc 2 2621 0 is_stmt 0 discriminator 1
+	movw	r2, #2621
+	ldr	r1, .L1036+8
+	ldr	r0, .L1036+12
 	bl	printk
-.LVL871:
-.L1005:
-	.loc 2 2574 0 is_stmt 1
+.LVL868:
+.L1013:
+	.loc 2 2622 0 is_stmt 1
 	ldrb	r3, [r5, #8]	@ zero_extendqisi2
 	uxth	r6, r6
 	cmp	r3, #0
-	bne	.L1006
-	.loc 2 2575 0
-	ldr	r1, [r4, #2248]
+	bne	.L1014
+	.loc 2 2623 0
+	ldr	r1, [r4, #2304]
 	lsl	r2, r6, #1
 	ldrh	r3, [r1, r2]
 	cmp	r3, #0
-	.loc 2 2576 0
+	.loc 2 2624 0
 	ldrhne	r0, [r4, #68]
-	.loc 2 2578 0
+	.loc 2 2626 0
 	moveq	r3, #2
-	.loc 2 2576 0
+	.loc 2 2624 0
 	addne	r3, r3, r0
-	.loc 2 2580 0
-	mov	r0, r8
-	.loc 2 2578 0
+	.loc 2 2628 0
+	mov	r0, r6
+	.loc 2 2626 0
 	strh	r3, [r1, r2]	@ movhi
-	.loc 2 2580 0
+	.loc 2 2628 0
 	mov	r1, #0
-	.loc 2 2579 0
-	ldr	r3, [r4, #2480]
+	.loc 2 2627 0
+	ldr	r3, [r4, #2524]
 	add	r3, r3, #1
-	str	r3, [r4, #2480]
-	.loc 2 2580 0
+	str	r3, [r4, #2524]
+	.loc 2 2628 0
 	bl	ftl_set_blk_mode
-.LVL872:
-.L1009:
-	.loc 2 2587 0
-	ldr	r3, [r4, #2248]
-	lsl	r6, r6, #1
-	ldr	r2, [r4, #2496]
-	.loc 2 2590 0
-	ldr	r0, [r4, #2480]
-	.loc 2 2587 0
-	ldrh	r3, [r3, r6]
-	.loc 2 2590 0
+.LVL869:
+.L1017:
+	.loc 2 2635 0
+	ldr	r3, [r4, #2304]
+	lsl	r10, r6, #1
+	ldr	r2, [r4, #2540]
+	.loc 2 2638 0
+	ldr	r0, [r4, #2524]
+	.loc 2 2635 0
+	ldrh	r3, [r3, r10]
+	.loc 2 2638 0
 	ldrh	r1, [r4, #16]
-	.loc 2 2587 0
+	.loc 2 2635 0
 	cmp	r3, r2
-	.loc 2 2590 0
+	.loc 2 2638 0
 	ldrh	r2, [r4, #68]
-	.loc 2 2588 0
-	strhi	r3, [r4, #2496]
-	.loc 2 2590 0
-	ldr	r3, [r4, #2484]
+	.loc 2 2636 0
+	strhi	r3, [r4, #2540]
+	.loc 2 2638 0
+	ldr	r3, [r4, #2528]
 	mla	r0, r0, r2, r3
-	bl	__aeabi_uidiv
-.LVL873:
-	.loc 2 2591 0
+	bl	__udivsi3
+.LVL870:
+	.loc 2 2639 0
 	ldr	r2, [r4, #3820]
-	.loc 2 2594 0
+	.loc 2 2642 0
 	ldr	r1, [r4, #3760]
-	.loc 2 2590 0
-	str	r0, [r4, #2488]
-	.loc 2 2591 0
+	.loc 2 2638 0
+	str	r0, [r4, #2532]
+	.loc 2 2639 0
 	ldr	r3, [r2, #16]
-	.loc 2 2594 0
-	ldr	r0, .L1028+28
-	.loc 2 2591 0
+	.loc 2 2642 0
+	ldr	r0, .L1036+28
+	.loc 2 2639 0
 	add	r3, r3, #1
 	str	r3, [r2, #16]
 	mov	r2, #20
 	mla	r2, r2, r7, r1
 	add	r3, r1, #4
 	add	r2, r2, #24
-.L1011:
+.L1019:
 	add	r3, r3, #20
-	.loc 2 2593 0 discriminator 1
+	.loc 2 2641 0 discriminator 1
 	cmp	r2, r3
-	bne	.L1012
-	.loc 2 2595 0
-	mov	r2, r7
+	bne	.L1020
+	.loc 2 2643 0
 	ldrb	r1, [r5, #8]	@ zero_extendqisi2
+	mov	r2, r7
 	ldr	r0, [r4, #3760]
-	.loc 2 2597 0
-	mov	r10, #0
-	.loc 2 2595 0
 	bl	FlashEraseBlocks
-.LVL874:
-	.loc 2 2596 0
-	mov	r2, r10
-.LVL875:
-	.loc 2 2598 0
-	mov	r1, #20
-.L1013:
-	.loc 2 2597 0 discriminator 1
-	uxth	r3, r10
-	cmp	r7, r3
-	bhi	.L1015
-	.loc 2 2608 0
-	cmp	r2, #0
-	ble	.L1016
-	.loc 2 2609 0
-	mov	r0, r8
+.LVL871:
+	.loc 2 2645 0
+	mov	r3, #0
+	.loc 2 2646 0
+	mov	ip, #20
+	.loc 2 2644 0
+	mov	r1, r3
+.LVL872:
+.L1021:
+	.loc 2 2645 0 discriminator 1
+	uxth	r2, r3
+	cmp	r7, r2
+	bhi	.L1023
+	.loc 2 2656 0
+	cmp	r1, #0
+	ble	.L1024
+	.loc 2 2657 0
+	mov	r0, r6
 	bl	update_multiplier_value
-.LVL876:
-	.loc 2 2610 0
+.LVL873:
+	.loc 2 2658 0
 	bl	FtlBbmTblFlush
-.LVL877:
-.L1016:
-	.loc 2 2613 0
+.LVL874:
+.L1024:
+	.loc 2 2661 0
 	ldrb	r2, [r5, #7]	@ zero_extendqisi2
-.LVL878:
 	cmp	r2, #0
-	bne	.L1017
-	.loc 2 2615 0
-	ldr	r3, [r4, #2260]
+	bne	.L1025
+	.loc 2 2663 0
+	ldr	r3, [r4, #2300]
 	mvn	r2, #0
-	.loc 2 2616 0
-	mov	r0, r8
-	.loc 2 2615 0
-	strh	r2, [r3, r6]	@ movhi
-	.loc 2 2616 0
+	.loc 2 2664 0
+	mov	r0, r6
+	.loc 2 2663 0
+	strh	r2, [r3, r10]	@ movhi
+	.loc 2 2664 0
 	bl	INSERT_DATA_LIST
-.LVL879:
-	.loc 2 2617 0
-	b	.L994
-.L1003:
-	.loc 2 2564 0
+.LVL875:
+	.loc 2 2665 0
+	b	.L1002
+.L1011:
+	.loc 2 2612 0
 	str	lr, [r3, #8]
-	.loc 2 2566 0
+	.loc 2 2614 0
 	movw	r10, #65535
-	.loc 2 2565 0
+	.loc 2 2613 0
 	str	lr, [r3, #12]
 	add	r3, r3, #20
-	.loc 2 2566 0
+	.loc 2 2614 0
 	ldrh	r1, [ip], #2
 	cmp	r1, r10
-	.loc 2 2567 0
+	.loc 2 2615 0
 	mlane	r10, r2, r7, r0
 	lslne	r1, r1, #10
-	.loc 2 2568 0
+	.loc 2 2616 0
 	addne	r7, r7, #1
-.LVL880:
+.LVL876:
 	uxthne	r7, r7
-.LVL881:
-	.loc 2 2567 0
+.LVL877:
+	.loc 2 2615 0
 	strne	r1, [r10, #4]
-	b	.L1001
-.L1006:
-	.loc 2 2582 0
-	ldr	r1, [r4, #2248]
+	b	.L1009
+.L1014:
+	.loc 2 2630 0
+	ldr	r1, [r4, #2304]
 	lsl	r3, r6, #1
-.LBB429:
-.LBB430:
-	mov	r0, r8
-.LBE430:
-.LBE429:
+.LBB451:
+.LBB452:
+	mov	r0, r6
+.LBE452:
+.LBE451:
 	ldrh	r2, [r1, r3]
 	add	r2, r2, #1
 	strh	r2, [r1, r3]	@ movhi
-	.loc 2 2583 0
-	ldr	r3, [r4, #2484]
+	.loc 2 2631 0
+	ldr	r3, [r4, #2528]
 	add	r3, r3, #1
-	str	r3, [r4, #2484]
-.LBB432:
-.LBB431:
+	str	r3, [r4, #2528]
+.LBB454:
+.LBB453:
 	bl	ftl_set_blk_mode.part.6
-.LVL882:
-	b	.L1009
-.L1012:
-.LBE431:
-.LBE432:
-	.loc 2 2594 0 discriminator 3
+.LVL878:
+	b	.L1017
+.L1020:
+.LBE453:
+.LBE454:
+	.loc 2 2642 0 discriminator 3
 	ldr	r1, [r3, #-20]
 	and	r1, r1, r0
 	str	r1, [r3, #-20]
-	b	.L1011
-.LVL883:
-.L1015:
-	.loc 2 2598 0
-	mul	r3, r1, r10
-	ldr	r0, [r4, #3760]
-	add	ip, r0, r3
-	ldr	r3, [r0, r3]
-	cmn	r3, #1
-	bne	.L1014
-	.loc 2 2600 0
-	ldr	r0, [ip, #4]
-	.loc 2 2599 0
-	add	r2, r2, #1
-	str	r1, [fp, #-56]
-	str	r3, [fp, #-52]
-	.loc 2 2601 0
+	b	.L1019
+.LVL879:
+.L1023:
+	.loc 2 2646 0
+	mul	r2, ip, r3
+	ldr	lr, [r4, #3760]
+	add	r0, lr, r2
+	ldr	r2, [lr, r2]
+	cmn	r2, #1
+	bne	.L1022
+	.loc 2 2648 0
+	ldr	r0, [r0, #4]
+	.loc 2 2647 0
+	add	r1, r1, #1
+	str	ip, [fp, #-56]
+	str	r2, [fp, #-52]
+	.loc 2 2649 0
 	ubfx	r0, r0, #10, #16
-	.loc 2 2599 0
-	str	r2, [fp, #-48]
-	.loc 2 2601 0
+	str	r3, [fp, #-48]
+	.loc 2 2647 0
+	str	r1, [fp, #-44]
+	.loc 2 2649 0
 	bl	FtlBbmMapBadBlock
-.LVL884:
-	.loc 2 2602 0
-	ldr	r3, [fp, #-52]
-	add	r0, r5, r10, lsl #1
-	.loc 2 2603 0
-	ldr	r1, [fp, #-56]
-	ldr	r2, [fp, #-48]
-.LVL885:
-	.loc 2 2602 0
-	strh	r3, [r0, #16]	@ movhi
-	.loc 2 2603 0
-	ldrb	r3, [r5, #7]	@ zero_extendqisi2
-	sub	r3, r3, #1
-	strb	r3, [r5, #7]
-.L1014:
-	add	r10, r10, #1
-	b	.L1013
-.LVL886:
-.L1017:
-	.loc 2 2620 0
+.LVL880:
+	.loc 2 2650 0
+	ldr	r3, [fp, #-48]
+	ldr	r2, [fp, #-52]
+	.loc 2 2651 0
+	ldr	ip, [fp, #-56]
+	ldr	r1, [fp, #-44]
+.LVL881:
+	.loc 2 2650 0
+	add	r0, r5, r3, lsl #1
+	strh	r2, [r0, #16]	@ movhi
+	.loc 2 2651 0
+	ldrb	r2, [r5, #7]	@ zero_extendqisi2
+	sub	r2, r2, #1
+	strb	r2, [r5, #7]
+.L1022:
+	add	r3, r3, #1
+	b	.L1021
+.L1025:
+	.loc 2 2668 0
 	ldrh	r3, [r4, #78]
-	.loc 2 2621 0
-	strh	r8, [r5]	@ movhi
-	.loc 2 2620 0
+	.loc 2 2669 0
+	strh	r9, [r5]	@ movhi
+	.loc 2 2668 0
 	smulbb	r3, r3, r2
-	.loc 2 2622 0
+	.loc 2 2670 0
 	mov	r2, #0
 	strh	r2, [r5, #2]	@ movhi
-	.loc 2 2623 0
+	.loc 2 2671 0
 	strb	r2, [r5, #6]
-	.loc 2 2624 0
-	ldr	r2, [r4, #2472]
-	.loc 2 2620 0
+	.loc 2 2672 0
+	ldr	r2, [r4, #2516]
+	.loc 2 2668 0
 	uxth	r3, r3
-	.loc 2 2625 0
-	ldr	r1, [r4, #2260]
-	.loc 2 2620 0
+	.loc 2 2673 0
+	ldr	r1, [r4, #2300]
+.LVL882:
+	.loc 2 2668 0
 	strh	r3, [r5, #4]	@ movhi
-	.loc 2 2624 0
+	.loc 2 2672 0
 	str	r2, [r5, #12]
 	add	r2, r2, #1
-	str	r2, [r4, #2472]
-	.loc 2 2625 0
+	str	r2, [r4, #2516]
+	.loc 2 2673 0
 	ldrh	r2, [r5]
 	lsl	r2, r2, #1
 	strh	r3, [r1, r2]	@ movhi
-	.loc 2 2626 0
+	.loc 2 2674 0
 	ldrh	r3, [r5, #4]
 	cmp	r3, #0
-	beq	.L1018
-	.loc 2 2626 0 is_stmt 0 discriminator 2
+	beq	.L1026
+	.loc 2 2674 0 is_stmt 0 discriminator 2
 	ldrb	r3, [r5, #7]	@ zero_extendqisi2
 	cmp	r3, #0
-	bne	.L1019
-.L1018:
-	.loc 2 2626 0 discriminator 3
-	movw	r2, #2626
-	ldr	r1, .L1028+8
-	ldr	r0, .L1028+12
+	bne	.L1027
+.L1026:
+	.loc 2 2674 0 discriminator 3
+	movw	r2, #2674
+	ldr	r1, .L1036+8
+	ldr	r0, .L1036+12
 	bl	printk
-.LVL887:
-.L1019:
-	.loc 2 2628 0 is_stmt 1
+.LVL883:
+.L1027:
+	.loc 2 2676 0 is_stmt 1
 	mov	r0, #0
 	sub	sp, fp, #40
-.LCFI314:
+.LCFI307:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL888:
-.L1029:
+.LVL884:
+.L1037:
 	.align	2
-.L1028:
+.L1036:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+2276
+	.word	.LANCHOR0+2312
 	.word	.LANCHOR1+360
 	.word	.LC1
-	.word	.LANCHOR0+2376
-	.word	.LANCHOR0+2272
-	.word	.LANCHOR0+2568
+	.word	.LANCHOR0+2420
+	.word	.LANCHOR0+2316
+	.word	.LANCHOR0+2564
 	.word	-1024
-.LFE238:
-	.fnend
+.LFE248:
 	.size	allocate_data_superblock, .-allocate_data_superblock
 	.align	2
 	.global	FtlGcFreeBadSuperBlk
@@ -12188,140 +11362,131 @@ allocate_data_superblock:
 	.fpu softvfp
 	.type	FtlGcFreeBadSuperBlk, %function
 FtlGcFreeBadSuperBlk:
-	.fnstart
-.LFB257:
+.LFB267:
 	.loc 5 390 0
 	@ args = 0, pretend = 0, frame = 8
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL889:
-	.movsp ip
+.LVL885:
 	mov	ip, sp
-.LCFI315:
+.LCFI308:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI316:
-	.setfp fp, ip, #-4
+.LCFI309:
 	sub	fp, ip, #4
-.LCFI317:
-	.pad #12
-	sub	sp, sp, #12
-	push	{lr}
-	bl	__gnu_mcount_nc
+.LCFI310:
+	sub	sp, sp, #8
 	.loc 5 390 0
+	uxth	r3, r0
+.LVL886:
 	.loc 5 395 0
-	ldr	r6, .L1042
-	movw	r3, #3186
+	ldr	r6, .L1050
 	.loc 5 390 0
-	str	r0, [fp, #-48]
+	str	r3, [fp, #-44]
 	.loc 5 395 0
+	movw	r3, #3182
+.LVL887:
 	ldrh	r3, [r6, r3]
 	cmp	r3, #0
 	movne	r7, #0
-.LBB435:
-.LBB436:
+.LBB457:
+.LBB458:
 	.loc 5 398 0
-	ldrne	r10, .L1042+4
-.LBE436:
-.LBE435:
+	ldrne	r10, .L1050+4
+.LBE458:
+.LBE457:
 	.loc 5 395 0
-	bne	.L1032
-.LVL890:
-.L1031:
+	bne	.L1040
+.LVL888:
+.L1039:
 	.loc 5 415 0
 	mov	r0, #0
-.LVL891:
 	sub	sp, fp, #40
-.LCFI318:
+.LCFI311:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL892:
-.L1038:
-.LCFI319:
-.LBB438:
-.LBB437:
+.LVL889:
+.L1046:
+.LCFI312:
+.LBB460:
+.LBB459:
 	.loc 5 397 0
 	uxtah	r3, r6, r7
-	ldr	r1, [fp, #-48]
+	ldr	r1, [fp, #-44]
 	mov	r8, #0
 	ldrb	r0, [r3, #36]	@ zero_extendqisi2
-.LVL893:
 	bl	V2P_block
-.LVL894:
+.LVL890:
 	mov	r9, r0
-.L1033:
+.L1041:
 	.loc 5 398 0
 	ldrh	r3, [r10]
 	uxth	r4, r8
 	cmp	r3, r4
-	bhi	.L1037
+	bhi	.L1045
 	add	r7, r7, #1
-.LVL895:
-.L1032:
+.L1040:
 	.loc 5 396 0
 	ldrh	r2, [r6, #8]
 	uxth	r3, r7
 	cmp	r2, r3
-	bhi	.L1038
+	bhi	.L1046
 	.loc 5 412 0
 	bl	FtlGcReFreshBadBlk
-.LVL896:
-	b	.L1031
-.L1037:
+.LVL891:
+	b	.L1039
+.L1045:
 	.loc 5 399 0
 	uxth	r3, r8
-	ldr	r5, .L1042+8
-	lsl	r1, r3, #1
-	ldrh	r1, [r5, r1]
-	cmp	r1, r9
-	bne	.L1034
+	ldr	r5, .L1050+8
+	lsl	r2, r3, #1
+	ldrh	r2, [r5, r2]
+	cmp	r2, r9
+	bne	.L1042
 	.loc 5 401 0
 	mov	r1, r9
-	ldr	r0, .L1042+12
-	str	r3, [fp, #-52]
+	ldr	r0, .L1050+12
+	str	r3, [fp, #-48]
 	bl	printk
-.LVL897:
+.LVL892:
 	.loc 5 403 0
 	mov	r0, r9
 	bl	FtlBbmMapBadBlock
-.LVL898:
+.LVL893:
 	.loc 5 404 0
 	bl	FtlBbmTblFlush
-.LVL899:
-	ldr	r3, [fp, #-52]
+.LVL894:
+	ldr	r3, [fp, #-48]
 	.loc 5 405 0
-	ldrh	r1, [r10]
+	ldrh	r2, [r10]
 	add	r3, r5, r3, lsl #1
-.L1035:
-	cmp	r4, r1
-	bcc	.L1036
+.L1043:
+	cmp	r4, r2
+	bcc	.L1044
 	.loc 5 407 0
-	sub	r1, r1, #1
-	strh	r1, [r10]	@ movhi
-.L1034:
+	sub	r2, r2, #1
+	strh	r2, [r10]	@ movhi
+.L1042:
 	add	r8, r8, #1
-	b	.L1033
-.L1036:
+	b	.L1041
+.L1044:
 	.loc 5 406 0
-	ldrh	r0, [r3, #2]!
+	ldrh	r1, [r3, #2]!
 	.loc 5 405 0
 	add	r4, r4, #1
-.LVL900:
+.LVL895:
 	uxth	r4, r4
-.LVL901:
+.LVL896:
 	.loc 5 406 0
-	strh	r0, [r3, #-2]	@ movhi
-	b	.L1035
-.L1043:
+	strh	r1, [r3, #-2]	@ movhi
+	b	.L1043
+.L1051:
 	.align	2
-.L1042:
+.L1050:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+3186
-	.word	.LANCHOR0+3188
-	.word	.LC93
-.LBE437:
-.LBE438:
-.LFE257:
-	.fnend
+	.word	.LANCHOR0+3182
+	.word	.LANCHOR0+3184
+	.word	.LC96
+.LBE459:
+.LBE460:
+.LFE267:
 	.size	FtlGcFreeBadSuperBlk, .-FtlGcFreeBadSuperBlk
 	.align	2
 	.global	update_vpc_list
@@ -12330,130 +11495,121 @@ FtlGcFreeBadSuperBlk:
 	.fpu softvfp
 	.type	update_vpc_list, %function
 update_vpc_list:
-	.fnstart
-.LFB241:
-	.loc 2 2687 0
+.LFB251:
+	.loc 2 2735 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL902:
-	.movsp ip
+.LVL897:
 	mov	ip, sp
-.LCFI320:
-	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI321:
-	.setfp fp, ip, #-4
+.LCFI313:
+	push	{r4, r5, r6, fp, ip, lr, pc}
+.LCFI314:
 	sub	fp, ip, #4
-.LCFI322:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2687 0
-	.loc 2 2688 0
-	lsl	r3, r0, #1
-	.loc 2 2687 0
-	mov	r5, r0
-	.loc 2 2688 0
-	ldr	r2, .L1054
-	ldr	r1, [r2, #2260]
-	mov	r4, r2
-	ldrh	r3, [r1, r3]
-	cmp	r3, #0
-	bne	.L1045
-	.loc 2 2689 0
-	movw	r1, #2568
-	ldrh	r0, [r2, r1]
-	cmp	r0, r5
-	.loc 2 2691 0
+.LCFI315:
+	.loc 2 2736 0
+	ldr	r3, .L1062
+	.loc 2 2735 0
+	uxth	r4, r0
+.LVL898:
+	.loc 2 2736 0
+	ldr	r1, [r3, #2300]
+	lsl	r2, r4, #1
+	mov	r5, r3
+	ldrh	r0, [r1, r2]
+	cmp	r0, #0
+	bne	.L1053
+	.loc 2 2737 0
+	movw	r2, #2564
+	ldrh	r1, [r3, r2]
+	cmp	r1, r4
+	.loc 2 2739 0
 	mvneq	r3, #0
-	strheq	r3, [r2, r1]	@ movhi
-	.loc 2 2689 0
-	beq	.L1047
-	.loc 2 2692 0
-	movw	r1, #2280
-	ldrh	r1, [r2, r1]
-	cmp	r1, r5
-	beq	.L1044
-	.loc 2 2692 0 is_stmt 0 discriminator 1
-	movw	r1, #2328
-	ldrh	r1, [r2, r1]
-	cmp	r1, r5
-	beq	.L1044
-	.loc 2 2692 0 discriminator 2
-	movw	r1, #2376
-	ldrh	r2, [r2, r1]
-	cmp	r2, r5
-	beq	.L1044
-.L1047:
-.LBB441:
-.LBB442:
-	.loc 2 2696 0 is_stmt 1
-	mov	r1, r5
-	ldr	r0, .L1054+4
+	strheq	r3, [r5, r2]	@ movhi
+	.loc 2 2737 0
+	beq	.L1055
+	.loc 2 2740 0
+	movw	r2, #2324
+	ldrh	r2, [r3, r2]
+	cmp	r2, r4
+	ldmfdeq	sp, {r4, r5, r6, fp, sp, pc}
+	.loc 2 2740 0 is_stmt 0 discriminator 1
+	movw	r2, #2372
+	ldrh	r2, [r3, r2]
+	cmp	r2, r4
+	ldmfdeq	sp, {r4, r5, r6, fp, sp, pc}
+	.loc 2 2740 0 discriminator 2
+	movw	r2, #2420
+	ldrh	r3, [r3, r2]
+	cmp	r3, r4
+	ldmfdeq	sp, {r4, r5, r6, fp, sp, pc}
+.L1055:
+.LBB463:
+.LBB464:
+	.loc 2 2744 0 is_stmt 1
+	mov	r1, r4
+	ldr	r0, .L1062+4
 	bl	List_remove_node
-.LVL903:
-	movw	r3, #2268
-	ldrh	r3, [r4, r3]
+.LVL899:
+	movw	r3, #2312
+	ldrh	r3, [r5, r3]
 	cmp	r3, #0
-	bne	.L1049
-	movw	r2, #2696
-	ldr	r1, .L1054+8
-	ldr	r0, .L1054+12
+	bne	.L1057
+	movw	r2, #2744
+	ldr	r1, .L1062+8
+	ldr	r0, .L1062+12
 	bl	printk
-.LVL904:
-.L1049:
-	movw	r6, #2268
-	.loc 2 2697 0
-	mov	r0, r5
-	.loc 2 2696 0
-	ldrh	r3, [r4, r6]
+.LVL900:
+.L1057:
+	movw	r6, #2312
+	.loc 2 2745 0
+	mov	r0, r4
+	.loc 2 2744 0
+	ldrh	r3, [r5, r6]
 	sub	r3, r3, #1
-	strh	r3, [r4, r6]	@ movhi
-	.loc 2 2697 0
+	strh	r3, [r5, r6]	@ movhi
+	.loc 2 2745 0
 	bl	free_data_superblock
-.LVL905:
-	.loc 2 2698 0
-	mov	r0, r5
+.LVL901:
+	.loc 2 2746 0
+	mov	r0, r4
 	bl	FtlGcFreeBadSuperBlk
-.LVL906:
-	.loc 2 2699 0
-	movw	r3, #2276
-	ldrh	r2, [r4, r6]
-	ldrh	r3, [r4, r3]
+.LVL902:
+	.loc 2 2747 0
+	ldr	r3, .L1062+16
+	ldrh	r2, [r5, r6]
+	ldrh	r3, [r3]
 	add	r3, r3, r2
-	ldrh	r2, [r4, #16]
+	ldrh	r2, [r5, #16]
 	cmp	r3, r2
-	ble	.L1053
-	movw	r2, #2699
-	ldr	r1, .L1054+8
-	ldr	r0, .L1054+12
+	ble	.L1061
+	movw	r2, #2747
+	ldr	r1, .L1062+8
+	ldr	r0, .L1062+12
 	bl	printk
-.LVL907:
+.LVL903:
+.L1061:
+	mov	r0, #1
+.LBE464:
+.LBE463:
+	.loc 2 2753 0
+	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
 .L1053:
-	mov	r3, #1
-	b	.L1044
-.LVL908:
-.L1045:
-.LBE442:
-.LBE441:
-	.loc 2 2702 0
+	.loc 2 2750 0
+	mov	r0, r4
 	bl	List_update_data_list
-.LVL909:
-	.loc 2 2704 0
-	mov	r3, #0
-.L1044:
-	.loc 2 2705 0
-	mov	r0, r3
-	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L1055:
+.LVL904:
+	.loc 2 2752 0
+	mov	r0, #0
+	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
+.L1063:
 	.align	2
-.L1054:
+.L1062:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+2256
+	.word	.LANCHOR0+2296
 	.word	.LANCHOR1+385
 	.word	.LC1
-.LFE241:
-	.fnend
+	.word	.LANCHOR0+2320
+.LFE251:
 	.size	update_vpc_list, .-update_vpc_list
 	.align	2
 	.global	decrement_vpc_count
@@ -12462,104 +11618,93 @@ update_vpc_list:
 	.fpu softvfp
 	.type	decrement_vpc_count, %function
 decrement_vpc_count:
-	.fnstart
-.LFB242:
-	.loc 2 2708 0
+.LFB252:
+	.loc 2 2756 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL910:
-	.movsp ip
+.LVL905:
 	mov	ip, sp
-.LCFI323:
+.LCFI316:
 	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI324:
-	.setfp fp, ip, #-4
+.LCFI317:
 	sub	fp, ip, #4
-.LCFI325:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2708 0
-	.loc 2 2711 0
+.LCFI318:
+	.loc 2 2756 0
+	uxth	r5, r0
+.LVL906:
+	.loc 2 2759 0
 	movw	r3, #65535
-	.loc 2 2708 0
-	mov	r5, r0
-	.loc 2 2711 0
-	cmp	r0, r3
-	ldr	r6, .L1068
-	beq	.L1057
-	.loc 2 2712 0
-	ldr	r3, [r6, #2260]
-	lsl	r4, r0, #1
+	cmp	r5, r3
+	ldr	r6, .L1076
+	beq	.L1065
+	.loc 2 2760 0
+	ldr	r3, [r6, #2300]
+	lsl	r4, r5, #1
 	ldrh	r2, [r3, r4]
 	cmp	r2, #0
-	.loc 2 2717 0
+	.loc 2 2765 0
 	subne	r2, r2, #1
 	strhne	r2, [r3, r4]	@ movhi
-	.loc 2 2712 0
-	bne	.L1057
-	.loc 2 2713 0
-	mov	r1, r0
-	ldr	r0, .L1068+4
+	.loc 2 2760 0
+	bne	.L1065
+	.loc 2 2761 0
+	mov	r1, r5
+	ldr	r0, .L1076+4
 	bl	printk
-.LVL911:
-	.loc 2 2714 0
-	ldr	r3, [r6, #2260]
+.LVL907:
+	.loc 2 2762 0
+	ldr	r3, [r6, #2300]
 	ldrh	r4, [r3, r4]
 	cmp	r4, #0
-	beq	.L1059
-.L1066:
-	.loc 2 2723 0
+	beq	.L1067
+.L1074:
+	.loc 2 2771 0
 	mov	r4, #0
-.L1056:
-	.loc 2 2733 0
+.L1064:
+	.loc 2 2781 0
 	mov	r0, r4
 	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L1059:
-	.loc 2 2714 0 discriminator 1
-	movw	r2, #2714
 .L1067:
-	.loc 2 2730 0 discriminator 2
-	ldr	r1, .L1068+8
-	ldr	r0, .L1068+12
+	.loc 2 2762 0 discriminator 1
+	movw	r2, #2762
+.L1075:
+	.loc 2 2778 0 discriminator 2
+	ldr	r1, .L1076+8
+	ldr	r0, .L1076+12
 	bl	printk
-.LVL912:
-	b	.L1056
-.L1057:
-	.loc 2 2721 0
-	ldr	r7, .L1068+16
+.LVL908:
+	b	.L1064
+.L1065:
+	.loc 2 2769 0
+	ldr	r7, .L1076+16
 	movw	r3, #65535
 	ldrh	r0, [r7]
-.LVL913:
 	cmp	r0, r3
-	.loc 2 2722 0
+	.loc 2 2770 0
 	strheq	r5, [r7]	@ movhi
-	beq	.L1066
-.L1061:
-	.loc 2 2724 0
+	beq	.L1074
+.L1069:
+	.loc 2 2772 0
 	cmp	r5, r0
-	beq	.L1066
-	.loc 2 2727 0
+	beq	.L1074
+	.loc 2 2775 0
 	bl	update_vpc_list
-.LVL914:
-	.loc 2 2730 0
-	ldr	r2, [r6, #2252]
-	.loc 2 2727 0
+.LVL909:
+	.loc 2 2778 0
+	ldr	r2, [r6, #2292]
+	.loc 2 2775 0
 	adds	r4, r0, #0
-	.loc 2 2730 0
-	ldr	r3, [r6, #2256]
-	.loc 2 2727 0
+	.loc 2 2778 0
+	ldr	r3, [r6, #2296]
+	.loc 2 2775 0
 	movne	r4, #1
-	.loc 2 2730 0
-	ldr	r1, [r6, #2260]
-	.loc 2 2729 0
+	.loc 2 2778 0
+	ldr	r1, [r6, #2300]
+	.loc 2 2777 0
 	strh	r5, [r7]	@ movhi
-	.loc 2 2730 0
+	.loc 2 2778 0
 	sub	r3, r3, r2
-	asr	r2, r3, #1
-	ldr	r3, .L1068+20
-	mul	r3, r3, r2
+	asr	r3, r3, #3
 	uxth	r2, r3
 	uxth	r3, r3
 	lsl	r2, r2, #1
@@ -12569,21 +11714,19 @@ decrement_vpc_count:
 	lsr	r2, r2, #5
 	moveq	r2, #0
 	cmp	r2, #0
-	beq	.L1056
-	.loc 2 2730 0 is_stmt 0 discriminator 2
-	movw	r2, #2730
-	b	.L1067
-.L1069:
+	beq	.L1064
+	.loc 2 2778 0 is_stmt 0 discriminator 2
+	movw	r2, #2778
+	b	.L1075
+.L1077:
 	.align	2
-.L1068:
+.L1076:
 	.word	.LANCHOR0
-	.word	.LC94
+	.word	.LC97
 	.word	.LANCHOR1+401
 	.word	.LC1
 	.word	.LANCHOR0+3952
-	.word	-1431655765
-.LFE242:
-	.fnend
+.LFE252:
 	.size	decrement_vpc_count, .-decrement_vpc_count
 	.align	2
 	.global	FtlWriteDump_data
@@ -12592,187 +11735,182 @@ decrement_vpc_count:
 	.fpu softvfp
 	.type	FtlWriteDump_data, %function
 FtlWriteDump_data:
-	.fnstart
-.LFB208:
-	.loc 2 947 0 is_stmt 1
-	@ args = 0, pretend = 0, frame = 24
+.LFB218:
+	.loc 2 996 0 is_stmt 1
+	@ args = 0, pretend = 0, frame = 28
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI326:
+.LCFI319:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI327:
-	.setfp fp, ip, #-4
+.LCFI320:
 	sub	fp, ip, #4
-.LCFI328:
-	.pad #28
+.LCFI321:
 	sub	sp, sp, #28
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 947 0
-	.loc 2 948 0
-	ldr	r6, .L1088
-	ldr	r4, .L1088+4
+	.loc 2 997 0
+	ldr	r6, .L1096
+	ldr	r4, .L1096+4
 	ldrh	r2, [r6, #4]
 	cmp	r2, #0
-	beq	.L1071
-	.loc 2 948 0 is_stmt 0 discriminator 1
-	ldrb	r3, [r4, #2288]	@ zero_extendqisi2
+	beq	.L1079
+	.loc 2 997 0 is_stmt 0 discriminator 1
+	ldrb	r3, [r4, #2332]	@ zero_extendqisi2
 	cmp	r3, #0
-	bne	.L1071
-	.loc 2 949 0 is_stmt 1
-	ldrb	r1, [r4, #2287]	@ zero_extendqisi2
+	bne	.L1079
+	.loc 2 998 0 is_stmt 1
+	ldrb	r1, [r4, #2331]	@ zero_extendqisi2
 	ldrh	r3, [r4, #78]
 	mul	r3, r3, r1
 	cmp	r2, r3
-	beq	.L1071
-.LBB446:
-.LBB447:
-	.loc 2 956 0
-	ldrb	r8, [r4, #2290]	@ zero_extendqisi2
+	beq	.L1079
+.LBB468:
+.LBB469:
+	.loc 2 1005 0
+	ldrb	r8, [r4, #2334]	@ zero_extendqisi2
 	cmp	r8, #0
-	bne	.L1070
-	.loc 2 951 0
-	ldr	r7, [r4, #2436]
-	.loc 2 958 0
+	bne	.L1078
+	.loc 2 1000 0
+	ldr	r7, [r4, #2480]
+	.loc 2 1007 0
 	mov	r2, r8
-	sub	r1, fp, #68
-	.loc 2 953 0
+	sub	r1, fp, #64
+	.loc 2 1002 0
 	ldrh	r9, [r4, #8]
-	.loc 2 951 0
+	.loc 2 1000 0
 	sub	r7, r7, #1
-.LVL915:
-	.loc 2 958 0
+.LVL910:
+	.loc 2 1007 0
 	mov	r0, r7
 	bl	log2phys
-.LVL916:
-	.loc 2 961 0
-	ldr	r3, [fp, #-68]
-	.loc 2 964 0
+.LVL911:
+	.loc 2 1010 0
+	ldr	r3, [fp, #-64]
+	.loc 2 1013 0
 	ldr	r5, [r4, #3244]
-	.loc 2 963 0
-	ldr	r0, [r4, #2244]
-	.loc 2 967 0
+	.loc 2 1012 0
+	ldr	r0, [r4, #3240]
+	.loc 2 1016 0
 	cmn	r3, #1
-	.loc 2 961 0
-	str	r3, [fp, #-60]
-	.loc 2 962 0
-	str	r7, [fp, #-48]
-	.loc 2 963 0
-	str	r0, [fp, #-56]
-	.loc 2 964 0
-	str	r5, [fp, #-52]
-	.loc 2 966 0
+	.loc 2 1010 0
+	str	r3, [fp, #-56]
+	.loc 2 1011 0
+	str	r7, [fp, #-44]
+	.loc 2 1012 0
+	str	r0, [fp, #-52]
+	.loc 2 1013 0
+	str	r5, [fp, #-48]
+	.loc 2 1015 0
 	str	r8, [r5, #4]
-	.loc 2 967 0
-	beq	.L1073
-	.loc 2 969 0
+	.loc 2 1016 0
+	beq	.L1081
+	.loc 2 1018 0
 	mov	r2, r8
 	mov	r1, #1
-	sub	r0, fp, #64
+	sub	r0, fp, #60
 	bl	FlashReadPages
-.LVL917:
-.L1074:
-	.loc 2 975 0
-	ldr	r3, .L1088+8
+.LVL912:
+.L1082:
+	.loc 2 1035 0
+	ldr	ip, .L1096
+	.loc 2 1024 0
 	mov	r8, #0
-	.loc 2 953 0
+	ldr	r3, .L1096+8
+	.loc 2 1002 0
 	lsl	r9, r9, #2
-.LVL918:
-	.loc 2 987 0
+.LVL913:
+	.loc 2 1036 0
 	mov	r10, r8
-	.loc 2 975 0
+	.loc 2 1024 0
 	strh	r3, [r5]	@ movhi
-.L1075:
-	.loc 2 976 0
+.L1083:
+	.loc 2 1025 0
 	cmp	r9, r8
-	bne	.L1079
-.L1076:
-	.loc 2 992 0
+	bne	.L1087
+.L1084:
+	.loc 2 1041 0
 	mov	r3, #1
-.L1087:
-.LBE447:
-.LBE446:
-	.loc 2 998 0
-	strb	r3, [r4, #2290]
-.L1070:
-	.loc 2 1000 0
+.L1095:
+.LBE469:
+.LBE468:
+	.loc 2 1047 0
+	strb	r3, [r4, #2334]
+.L1078:
+	.loc 2 1049 0
 	sub	sp, fp, #40
-.LCFI329:
+.LCFI322:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL919:
-.L1073:
-.LCFI330:
-.LBB449:
-.LBB448:
-	.loc 2 973 0
+.LVL914:
+.L1081:
+.LCFI323:
+.LBB471:
+.LBB470:
+	.loc 2 1022 0
 	ldrh	r2, [r4, #86]
 	mov	r1, #255
 	bl	ftl_memset
-.LVL920:
-	b	.L1074
-.LVL921:
-.L1079:
-	.loc 2 978 0
+.LVL915:
+	b	.L1082
+.LVL916:
+.L1087:
+	.loc 2 1027 0
 	ldrh	r3, [r6, #4]
 	cmp	r3, #0
-	beq	.L1076
-	.loc 2 983 0
-	ldr	r3, [fp, #-60]
-	add	r8, r8, #1
-	.loc 2 982 0
+	beq	.L1084
+	.loc 2 1032 0
+	ldr	r3, [fp, #-56]
+	.loc 2 1035 0
+	mov	r0, ip
+	.loc 2 1031 0
 	str	r7, [r5, #8]
-	.loc 2 986 0
-	ldr	r0, .L1088
-	.loc 2 983 0
+	add	r8, r8, #1
+	.loc 2 1035 0
+	str	ip, [fp, #-68]
+	.loc 2 1032 0
 	str	r3, [r5, #12]
-	.loc 2 984 0
+	.loc 2 1033 0
 	ldrh	r3, [r6]
 	strh	r3, [r5, #2]	@ movhi
-	.loc 2 986 0
+	.loc 2 1035 0
 	bl	get_new_active_ppa
-.LVL922:
-	.loc 2 987 0
-	ldr	r3, [r4, #2476]
-	.loc 2 988 0
+.LVL917:
+	.loc 2 1036 0
+	ldr	r3, [r4, #2520]
+	.loc 2 1037 0
 	mov	r1, #1
-	.loc 2 986 0
-	str	r0, [fp, #-60]
-	.loc 2 988 0
-	sub	r0, fp, #64
-	.loc 2 987 0
+	.loc 2 1035 0
+	str	r0, [fp, #-56]
+	.loc 2 1037 0
+	sub	r0, fp, #60
+	.loc 2 1036 0
 	str	r3, [r5, #4]
 	add	r3, r3, #1
 	cmn	r3, #1
 	moveq	r3, r10
-	str	r3, [r4, #2476]
-	.loc 2 988 0
+	str	r3, [r4, #2520]
+	.loc 2 1037 0
 	mov	r3, #0
 	mov	r2, r3
 	bl	FlashProgPages
-.LVL923:
-	.loc 2 990 0
+.LVL918:
+	.loc 2 1039 0
 	ldrh	r0, [r6]
 	bl	decrement_vpc_count
-.LVL924:
-	b	.L1075
-.LVL925:
-.L1071:
-.LBE448:
-.LBE449:
-	.loc 2 998 0
+.LVL919:
+	ldr	ip, [fp, #-68]
+	b	.L1083
+.LVL920:
+.L1079:
+.LBE470:
+.LBE471:
+	.loc 2 1047 0
 	mov	r3, #0
-	b	.L1087
-.L1089:
+	b	.L1095
+.L1097:
 	.align	2
-.L1088:
-	.word	.LANCHOR0+2280
+.L1096:
+	.word	.LANCHOR0+2324
 	.word	.LANCHOR0
 	.word	-3947
-.LFE208:
-	.fnend
+.LFE218:
 	.size	FtlWriteDump_data, .-FtlWriteDump_data
 	.align	2
 	.global	l2p_flush
@@ -12781,64 +11919,52 @@ FtlWriteDump_data:
 	.fpu softvfp
 	.type	l2p_flush, %function
 l2p_flush:
-	.fnstart
-.LFB201:
-	.loc 2 740 0
+.LFB211:
+	.loc 2 789 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI331:
-	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI332:
-	.setfp fp, ip, #-4
+.LCFI324:
+	push	{r4, r5, r6, fp, ip, lr, pc}
+.LCFI325:
 	sub	fp, ip, #4
-.LCFI333:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 740 0
-	.loc 2 746 0
+.LCFI326:
+	.loc 2 795 0
+	ldr	r5, .L1102
 	mov	r4, #0
-	.loc 2 747 0
+	.loc 2 796 0
 	mov	r6, #12
-	.loc 2 746 0
-	ldr	r5, .L1094
-	.loc 2 744 0
+	.loc 2 793 0
 	bl	FtlWriteDump_data
-.LVL926:
-.L1091:
-	.loc 2 746 0 discriminator 1
-	ldrh	r3, [r5, #114]
-	uxth	r0, r4
-	cmp	r3, r0
-	bhi	.L1093
-	.loc 2 750 0
-	mov	r0, #0
-.LVL927:
-	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.LVL928:
-.L1093:
-	.loc 2 747 0
-	ldr	r2, [r5, #2424]
+.LVL921:
+.L1099:
+	.loc 2 795 0 discriminator 1
+	ldrh	r2, [r5, #114]
 	uxth	r3, r4
-	mla	r3, r6, r3, r2
+	cmp	r2, r3
+	bhi	.L1101
+	.loc 2 799 0
+	mov	r0, #0
+	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
+.L1101:
+	.loc 2 796 0
+	ldr	r3, [r5, #2468]
+	uxth	r0, r4
+	mla	r3, r6, r0, r3
 	ldr	r3, [r3, #4]
 	cmp	r3, #0
-	bge	.L1092
-	.loc 2 748 0
+	bge	.L1100
+	.loc 2 797 0
 	bl	flush_l2p_region
-.LVL929:
-.L1092:
+.LVL922:
+.L1100:
 	add	r4, r4, #1
-	b	.L1091
-.L1095:
+	b	.L1099
+.L1103:
 	.align	2
-.L1094:
+.L1102:
 	.word	.LANCHOR0
-.LFE201:
-	.fnend
+.LFE211:
 	.size	l2p_flush, .-l2p_flush
 	.align	2
 	.global	FtlRecoverySuperblock
@@ -12847,1018 +11973,1008 @@ l2p_flush:
 	.fpu softvfp
 	.type	FtlRecoverySuperblock, %function
 FtlRecoverySuperblock:
-	.fnstart
-.LFB221:
-	.loc 2 1656 0
-	@ args = 0, pretend = 0, frame = 56
+.LFB231:
+	.loc 2 1705 0
+	@ args = 0, pretend = 0, frame = 44
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL930:
-	.movsp ip
+.LVL923:
 	mov	ip, sp
-.LCFI334:
+.LCFI327:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI335:
-	.setfp fp, ip, #-4
+.LCFI328:
 	sub	fp, ip, #4
-.LCFI336:
-	.pad #60
-	sub	sp, sp, #60
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 1656 0
-	.loc 2 1670 0
-	ldrh	r3, [r0]
+.LCFI329:
+	sub	sp, sp, #44
+	.loc 2 1719 0
 	movw	r2, #65535
-	.loc 2 1656 0
+	ldrh	r3, [r0]
+	.loc 2 1705 0
 	mov	r4, r0
-	.loc 2 1670 0
+	.loc 2 1719 0
 	cmp	r3, r2
-	beq	.L1217
-	.loc 2 1675 0
+	beq	.L1225
+	.loc 2 1724 0
 	ldrh	r3, [r0, #2]
-.LVL931:
-	.loc 2 1681 0
-	ldr	r6, .L1225
-	.loc 2 1675 0
-	str	r3, [fp, #-68]
-	.loc 2 1676 0
+.LVL924:
+	.loc 2 1730 0
+	ldr	r6, .L1232
+	.loc 2 1724 0
+	str	r3, [fp, #-64]
+	.loc 2 1725 0
 	ldrb	r3, [r0, #6]	@ zero_extendqisi2
-.LVL932:
-	.loc 2 1681 0
-	ldr	r1, [fp, #-68]
-.LVL933:
-	.loc 2 1676 0
-	str	r3, [fp, #-88]
-	.loc 2 1681 0
+.LVL925:
+	.loc 2 1730 0
+	ldr	r1, [fp, #-64]
+.LVL926:
+	.loc 2 1725 0
+	str	r3, [fp, #-80]
+	.loc 2 1730 0
 	ldrh	r3, [r6, #78]
-.LVL934:
+.LVL927:
 	cmp	r3, r1
 	mov	r3, #0
-	.loc 2 1682 0
+	.loc 2 1731 0
 	strheq	r3, [r0, #4]	@ movhi
-	.loc 2 1689 0
+	.loc 2 1738 0
 	ldrhne	r0, [r0, #16]
-.LVL935:
-	.loc 2 1681 0
-	bne	.L1100
-.LVL936:
-.L1223:
-	.loc 2 1989 0
+.LVL928:
+	.loc 2 1730 0
+	bne	.L1108
+.LVL929:
+.L1230:
+	.loc 2 2038 0
 	strb	r3, [r4, #6]
-.L1217:
-	.loc 2 2010 0
+.L1225:
+	.loc 2 2059 0
 	mov	r0, #0
 	sub	sp, fp, #40
-.LCFI337:
+.LCFI330:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL937:
-.L1101:
-.LCFI338:
-	.loc 2 1692 0
+.LVL930:
+.L1109:
+.LCFI331:
+	.loc 2 1741 0
 	uxth	r1, r3
-.LVL938:
+.LVL931:
 	add	r1, r4, r1, lsl #1
 	ldrh	r0, [r1, #16]
-.LVL939:
-.L1100:
-	.loc 2 1690 0
+.LVL932:
+.L1108:
+	.loc 2 1739 0
 	cmp	r0, r2
 	uxth	r7, r3
 	add	r3, r3, #1
-	beq	.L1101
-	.loc 2 1697 0
+	beq	.L1109
+	.loc 2 1746 0
 	mov	r1, #1
-.LVL940:
+.LVL933:
 	bl	FtlGetLastWrittenPage
-.LVL941:
-	.loc 2 1705 0
+.LVL934:
+	.loc 2 1754 0
 	cmn	r0, #1
-	.loc 2 1697 0
+	.loc 2 1746 0
 	mov	r5, r0
-.LVL942:
-	.loc 2 1705 0
-	beq	.L1102
-	.loc 2 1717 0
+.LVL935:
+	.loc 2 1754 0
+	beq	.L1110
+	.loc 2 1766 0
 	ldrh	r3, [r6, #8]
-	.loc 2 1722 0
+	.loc 2 1771 0
 	mov	r2, #0
-	.loc 2 1720 0
+	.loc 2 1769 0
 	ldr	r0, [r6, #3792]
-	.loc 2 1719 0
+	.loc 2 1768 0
 	movw	r8, #65535
-	.loc 2 1722 0
-	ldr	lr, [r6, #3156]
-	.loc 2 1720 0
+	.loc 2 1771 0
+	ldr	lr, [r6, #3152]
+	.loc 2 1769 0
 	mov	r9, #20
-	.loc 2 1717 0
-	str	r3, [fp, #-64]
-	.loc 2 1721 0
-	ldr	r3, [r6, #3152]
-	.loc 2 1722 0
+	.loc 2 1766 0
+	str	r3, [fp, #-56]
+	.loc 2 1770 0
+	ldr	r3, [r6, #3148]
+	.loc 2 1771 0
 	ldrh	r7, [r6, #88]
-	.loc 2 1721 0
-	str	r3, [fp, #-72]
+	.loc 2 1770 0
+	str	r3, [fp, #-60]
 	ldrh	r3, [r6, #86]
-	.loc 2 1722 0
+	.loc 2 1771 0
 	mov	r6, r2
-	.loc 2 1721 0
-	str	r3, [fp, #-76]
+	.loc 2 1770 0
+	str	r3, [fp, #-68]
 	add	r3, r4, #16
-	.loc 2 1722 0
+	.loc 2 1771 0
 	mov	ip, r3
-	str	r3, [fp, #-84]
-.L1103:
-	.loc 2 1717 0 discriminator 1
-	ldr	r1, [fp, #-64]
+	str	r3, [fp, #-76]
+.L1111:
+	.loc 2 1766 0 discriminator 1
+	ldr	r1, [fp, #-56]
 	uxth	r3, r2
 	cmp	r1, r3
-	bhi	.L1107
-	.loc 2 1728 0
-	ldr	r7, .L1225
-	.loc 2 1727 0
+	bhi	.L1115
+	.loc 2 1777 0
+	ldr	r7, .L1232
+	.loc 2 1776 0
 	mov	r2, #0
 	mov	r1, r6
-	.loc 2 1729 0
-	mov	r8, #0
-	.loc 2 1727 0
 	bl	FlashReadPages
-.LVL943:
-	.loc 2 1728 0
-	ldr	r3, [r7, #2476]
-	.loc 2 1666 0
+.LVL936:
+	.loc 2 1777 0
+	ldr	r3, [r7, #2520]
+	.loc 2 1715 0
 	movw	r2, #65535
-	str	r2, [fp, #-76]
-	.loc 2 1742 0
+	.loc 2 1779 0
+	ldr	r9, [r7, #3792]
+	.loc 2 1782 0
+	mov	r10, r7
+	.loc 2 1715 0
+	str	r2, [fp, #-72]
+	.loc 2 1791 0
 	uxth	r2, r5
-	.loc 2 1728 0
+	.loc 2 1777 0
 	sub	r3, r3, #1
-.LVL944:
-	.loc 2 1742 0
-	str	r2, [fp, #-72]
-	.loc 2 1728 0
-	str	r3, [fp, #-64]
-	.loc 2 1730 0
-	ldr	r3, [r7, #3792]
-.LVL945:
-	mov	r10, r3
-.L1108:
-	uxth	r2, r8
-.LVL946:
-	.loc 2 1729 0 discriminator 1
+.LVL937:
+	str	r3, [fp, #-56]
+	mov	r8, r9
+	.loc 2 1778 0
+	mov	r3, #0
+.LVL938:
+	.loc 2 1791 0
+	str	r2, [fp, #-60]
+.L1116:
+	uxth	r2, r3
+.LVL939:
+	.loc 2 1778 0 discriminator 1
 	cmp	r6, r2
-	bhi	.L1113
-	.loc 2 1747 0
-	addeq	r2, r5, #1
-.LVL947:
-	uxtheq	r9, r2
-.LVL948:
-	.loc 2 1745 0
-	bne	.L1111
-.L1218:
-	.loc 2 1753 0
-	ldr	r0, [r3, #4]
+	bhi	.L1121
+	.loc 2 1796 0
+	addeq	r3, r5, #1
+	uxtheq	r3, r3
+.LVL940:
+	streq	r3, [fp, #-60]
+	.loc 2 1794 0
+	bne	.L1119
+.L1226:
+	.loc 2 1802 0
+	ldr	r0, [r9, #4]
 	ubfx	r0, r0, #10, #16
 	bl	P2V_plane
-.LVL949:
-	.loc 2 1758 0
+.LVL941:
+	.loc 2 1807 0
 	ldrh	r3, [r7, #78]
-	.loc 2 1753 0
-	str	r0, [fp, #-72]
-	.loc 2 1764 0
-	ldr	r2, [fp, #-72]
-.LVL950:
-	.loc 2 1758 0
-	cmp	r3, r9
-	.loc 2 1764 0
-	ldr	r1, [fp, #-88]
-.LVL951:
-	.loc 2 1760 0
+	.loc 2 1813 0
+	sub	r1, fp, #68
+	.loc 2 1807 0
+	ldr	r2, [fp, #-60]
+.LVL942:
+	.loc 2 1802 0
+	str	r0, [fp, #-68]
+	.loc 2 1813 0
+	ldr	r0, [fp, #-80]
+.LVL943:
+	.loc 2 1807 0
+	cmp	r3, r2
+	.loc 2 1808 0
+	ldrheq	r3, [fp, #-60]
+	strheq	r3, [r4, #2]	@ movhi
+	.loc 2 1809 0
 	moveq	r3, #0
-	.loc 2 1759 0
-	strheq	r9, [r4, #2]	@ movhi
-	.loc 2 1760 0
 	strbeq	r3, [r4, #6]
-	.loc 2 1761 0
+	.loc 2 1810 0
 	strheq	r3, [r4, #4]	@ movhi
-	.loc 2 1764 0
-	ldr	r3, [fp, #-68]
-.LVL952:
-	cmp	r9, r3
-	cmpeq	r2, r1
-	bne	.L1116
-.LVL953:
-.L1224:
-	.loc 2 2004 0
-	mov	r1, r9
-.LVL954:
-	mov	r0, r4
-	bl	ftl_sb_update_avl_pages
-.LVL955:
-	b	.L1217
-.LVL956:
-.L1102:
-	.loc 2 1706 0
-	ldr	r3, [fp, #-68]
-.LVL957:
+	.loc 2 1813 0
+	ldm	r1, {r1, r2, r3}
+.LVL944:
+	cmp	r3, r2
+	cmpeq	r1, r0
+	.loc 2 1814 0
+	moveq	r2, r1
+.LVL945:
+	moveq	r1, r3
+.LVL946:
+	.loc 2 1813 0
+	beq	.L1231
+	.loc 2 1819 0
+	ldr	r2, [fp, #-72]
+	movw	r3, #65535
+.LVL947:
+	cmp	r2, r3
+	bne	.L1125
+	.loc 2 1819 0 is_stmt 0 discriminator 1
+	ldrb	r3, [r4, #8]	@ zero_extendqisi2
+	cmp	r3, #0
+	bne	.L1126
+.L1125:
+.LBB472:
+	.loc 2 1824 0 is_stmt 1
+	ldr	r3, [r7, #3964]
+	.loc 2 1823 0
+	uxth	r8, r5
+	.loc 2 1827 0
+	uxth	r5, r5
+.LVL948:
+	.loc 2 1824 0
+	cmn	r3, #1
+	.loc 2 1825 0
+	ldreq	r3, [fp, #-56]
+.LVL949:
+	streq	r3, [r7, #3964]
+	.loc 2 1827 0
+	ldr	r3, [fp, #-64]
+.LVL950:
+	ldr	r7, .L1232
+	add	r3, r3, #7
+.LVL951:
+	cmp	r5, r3
+	.loc 2 1828 0
+	subgt	r5, r8, #7
+	ldrle	r5, [fp, #-64]
+	uxthgt	r5, r5
+.L1129:
+	.loc 2 1829 0 discriminator 1
+	cmp	r5, r8
+	bhi	.L1136
+	.loc 2 1834 0
+	mov	r3, #0
+	.loc 2 1831 0
+	ldrh	r9, [r7, #8]
+	.loc 2 1834 0
+	ldr	r0, [r7, #3792]
+.LVL952:
+	mov	r6, r3
+	ldr	r1, [fp, #-76]
+	.loc 2 1833 0
+	movw	lr, #65535
+	.loc 2 1834 0
+	mov	ip, #20
+	b	.L1137
+.LVL953:
+.L1110:
+.LBE472:
+	.loc 2 1755 0
+	ldr	r3, [fp, #-64]
+.LVL954:
 	cmp	r3, #0
-	beq	.L1104
-	.loc 2 1706 0 is_stmt 0 discriminator 1
-	movw	r2, #1706
-	ldr	r1, .L1225+4
-	ldr	r0, .L1225+8
+	beq	.L1112
+	.loc 2 1755 0 is_stmt 0 discriminator 1
+	movw	r2, #1755
+	ldr	r1, .L1232+4
+	ldr	r0, .L1232+8
 	bl	printk
-.LVL958:
-.L1104:
-	.loc 2 1707 0 is_stmt 1
-	ldr	r3, [fp, #-88]
-.LVL959:
+.LVL955:
+.L1112:
+	.loc 2 1756 0 is_stmt 1
+	ldr	r3, [fp, #-80]
+.LVL956:
 	cmp	r3, #0
 	cmpne	r7, r3
-	beq	.L1105
-	.loc 2 1707 0 is_stmt 0 discriminator 1
-	movw	r2, #1707
-	ldr	r1, .L1225+4
-	ldr	r0, .L1225+8
+	beq	.L1113
+	.loc 2 1756 0 is_stmt 0 discriminator 1
+	movw	r2, #1756
+	ldr	r1, .L1232+4
+	ldr	r0, .L1232+8
 	bl	printk
-.LVL960:
-.L1105:
-	.loc 2 1708 0 is_stmt 1
+.LVL957:
+.L1113:
+	.loc 2 1757 0 is_stmt 1
 	mov	r3, #0
-.LVL961:
+.LVL958:
 	strh	r3, [r4, #2]	@ movhi
-	b	.L1223
-.L1107:
-	.loc 2 1718 0
+	b	.L1230
+.L1115:
+	.loc 2 1767 0
 	ldrh	r3, [ip], #2
-	.loc 2 1719 0
+	.loc 2 1768 0
 	cmp	r3, r8
-	beq	.L1106
-	.loc 2 1720 0
+	beq	.L1114
+	.loc 2 1769 0
 	mla	r1, r9, r6, r0
 	orr	r3, r5, r3, lsl #10
 	str	r3, [r1, #4]
-	.loc 2 1721 0
-	ldr	r3, [fp, #-76]
+	.loc 2 1770 0
+	ldr	r3, [fp, #-68]
 	mul	r3, r3, r6
 	add	r10, r3, #3
 	cmp	r3, #0
 	movlt	r3, r10
-	ldr	r10, [fp, #-72]
+	ldr	r10, [fp, #-60]
 	bic	r3, r3, #3
 	add	r3, r10, r3
 	str	r3, [r1, #8]
-	.loc 2 1722 0
+	.loc 2 1771 0
 	mul	r3, r7, r6
-	.loc 2 1723 0
+	.loc 2 1772 0
 	add	r6, r6, #1
 	uxth	r6, r6
-	.loc 2 1722 0
+	.loc 2 1771 0
 	add	r10, r3, #3
 	cmp	r3, #0
 	movlt	r3, r10
 	bic	r3, r3, #3
 	add	r3, lr, r3
 	str	r3, [r1, #12]
-.L1106:
+.L1114:
 	add	r2, r2, #1
-	b	.L1103
-.LVL962:
-.L1113:
-	.loc 2 1730 0
-	ldr	r2, [r10]
-.LVL963:
+	b	.L1111
+.LVL959:
+.L1121:
+	.loc 2 1779 0
+	ldr	r2, [r8]
+.LVL960:
 	cmp	r2, #0
-	bne	.L1109
-	.loc 2 1731 0
-	ldr	r2, [r10, #12]
-	.loc 2 1732 0
-	ldr	r9, [r2, #4]
-	cmn	r9, #1
-	beq	.L1110
-	str	r3, [fp, #-80]
-	.loc 2 1733 0
-	mov	r0, r9
-	ldr	r3, .L1225
-	str	r2, [fp, #-92]
-	ldr	r1, [r3, #2476]
+	bne	.L1117
+	.loc 2 1780 0
+	ldr	ip, [r8, #12]
+	.loc 2 1781 0
+	ldr	r2, [ip, #4]
+	cmn	r2, #1
+	beq	.L1118
+	.loc 2 1782 0
+	ldr	r1, [r10, #2520]
+	mov	r0, r2
+	str	ip, [fp, #-68]
 	bl	ftl_cmp_data_ver
-.LVL964:
-	ldr	r3, [fp, #-80]
+.LVL961:
+	ldr	ip, [fp, #-68]
 	cmp	r0, #0
-	ldr	r2, [fp, #-92]
-	.loc 2 1735 0
-	addne	r9, r9, #1
-	ldrne	r1, .L1225
-	strne	r9, [r1, #2476]
-.L1110:
-	.loc 2 1738 0
-	ldr	r2, [r2]
+	.loc 2 1784 0
+	addne	r2, r2, #1
+	strne	r2, [r10, #2520]
+.L1118:
+	.loc 2 1787 0
+	ldr	r2, [ip]
 	cmn	r2, #1
-	bne	.L1112
-.LVL965:
-.L1111:
-	.loc 2 1753 0
-	uxth	r8, r8
+	bne	.L1120
+.LVL962:
+.L1119:
+	.loc 2 1801 0
+	uxth	r2, r5
+.LVL963:
+	.loc 2 1802 0
+	uxth	r3, r3
+	.loc 2 1801 0
+	str	r2, [fp, #-60]
+	.loc 2 1802 0
 	mov	r2, #20
-	.loc 2 1752 0
-	uxth	r9, r5
-	.loc 2 1753 0
-	mla	r3, r2, r8, r3
-	b	.L1218
-.LVL966:
-.L1109:
-	.loc 2 1742 0
-	ldr	r2, [fp, #-72]
-	str	r2, [fp, #-76]
-.L1112:
-	add	r8, r8, #1
-	add	r10, r10, #20
-	b	.L1108
-.LVL967:
-.L1116:
-	.loc 2 1770 0
-	ldr	r2, [fp, #-76]
-.LVL968:
-	movw	r3, #65535
-.LVL969:
-	cmp	r2, r3
-	bne	.L1117
-	.loc 2 1770 0 is_stmt 0 discriminator 1
-	ldrb	r3, [r4, #8]	@ zero_extendqisi2
-	cmp	r3, #0
-	bne	.L1118
+.LVL964:
+	mla	r9, r2, r3, r9
+	b	.L1226
 .L1117:
-.LBB450:
-	.loc 2 1775 0 is_stmt 1
-	ldr	r3, [r7, #3964]
-	.loc 2 1774 0
-	uxth	r8, r5
-	.loc 2 1778 0
-	uxth	r5, r5
-.LVL970:
-	.loc 2 1775 0
-	cmn	r3, #1
-	.loc 2 1776 0
-	ldreq	r3, [fp, #-64]
-.LVL971:
-	streq	r3, [r7, #3964]
-	.loc 2 1778 0
-	ldr	r3, [fp, #-68]
-.LVL972:
-	ldr	r7, .L1225
-	add	r3, r3, #7
-.LVL973:
-	cmp	r5, r3
-	.loc 2 1779 0
-	subgt	r5, r8, #7
-	ldrle	r5, [fp, #-68]
-	uxthgt	r5, r5
-.L1121:
-	.loc 2 1780 0 discriminator 1
-	cmp	r5, r8
-	bhi	.L1128
-	.loc 2 1782 0
-	ldrh	r3, [r7, #8]
-	.loc 2 1784 0
-	movw	lr, #65535
-	.loc 2 1785 0
-	ldr	r0, [r7, #3792]
-	mov	ip, #20
-	ldr	r1, [fp, #-84]
-.LVL974:
-	.loc 2 1782 0
-	str	r3, [fp, #-76]
-	.loc 2 1785 0
-	mov	r3, #0
-	mov	r6, r3
-	b	.L1129
-.L1123:
-	.loc 2 1783 0
+	.loc 2 1791 0
+	ldr	r2, [fp, #-60]
+	str	r2, [fp, #-72]
+.L1120:
+	add	r3, r3, #1
+	add	r8, r8, #20
+	b	.L1116
+.LVL965:
+.L1131:
+.LBB473:
+	.loc 2 1832 0
 	ldrh	r2, [r1], #2
 	add	r3, r3, #1
-	.loc 2 1784 0
+	.loc 2 1833 0
 	cmp	r2, lr
-	.loc 2 1785 0
+	.loc 2 1834 0
 	mlane	r10, ip, r6, r0
-	.loc 2 1786 0
+	.loc 2 1835 0
 	addne	r6, r6, #1
-	.loc 2 1785 0
+	.loc 2 1834 0
 	orrne	r2, r5, r2, lsl #10
-	.loc 2 1786 0
+	.loc 2 1835 0
 	uxthne	r6, r6
-	.loc 2 1785 0
+	.loc 2 1834 0
 	strne	r2, [r10, #4]
-.L1129:
-	.loc 2 1782 0 discriminator 1
-	ldr	r10, [fp, #-76]
+.L1137:
+	.loc 2 1831 0 discriminator 1
 	uxth	r2, r3
-	cmp	r10, r2
-	bhi	.L1123
-	.loc 2 1789 0
+	cmp	r9, r2
+	bhi	.L1131
+	.loc 2 1838 0
 	mov	r1, r6
 	mov	r2, #0
 	bl	FlashReadPages
-.LVL975:
-	.loc 2 1791 0
+.LVL966:
+	.loc 2 1840 0
 	ldr	r3, [r7, #3792]
 	mov	r2, #20
-	.loc 2 1793 0
+	.loc 2 1842 0
 	movw	r1, #65535
 	mla	r6, r2, r6, r3
-.L1124:
-	.loc 2 1790 0 discriminator 1
+.L1132:
+	.loc 2 1839 0 discriminator 1
 	cmp	r6, r3
-	.loc 2 1780 0
+	.loc 2 1829 0
 	addeq	r5, r5, #1
 	uxtheq	r5, r5
-	beq	.L1121
-.L1127:
-	.loc 2 1791 0
+	beq	.L1129
+.L1135:
+	.loc 2 1840 0
 	ldr	r2, [r3]
 	cmp	r2, #0
-	bne	.L1118
-	.loc 2 1792 0
+	bne	.L1126
+	.loc 2 1841 0
 	ldr	r2, [r3, #12]
-	.loc 2 1793 0
+	.loc 2 1842 0
 	ldrh	r0, [r2]
 	cmp	r0, r1
-	beq	.L1126
-	.loc 2 1795 0
+	beq	.L1134
+	.loc 2 1844 0
 	ldr	r2, [r2, #4]
 	cmn	r2, #1
-	.loc 2 1797 0
+	.loc 2 1846 0
 	strne	r2, [r7, #3964]
-.L1126:
+.L1134:
 	add	r3, r3, #20
-	b	.L1124
-.LVL976:
-.L1128:
-	.loc 2 1809 0
+	b	.L1132
+.LVL967:
+.L1136:
+	.loc 2 1858 0
 	mvn	r3, #0
 	str	r3, [r7, #3964]
-.LVL977:
-.L1118:
-.LBE450:
-	.loc 2 1814 0
-	ldr	r5, .L1225+12
-.LVL978:
+.LVL968:
+.L1126:
+.LBE473:
+	.loc 2 1863 0
+	ldr	r5, .L1232+12
+.LVL969:
 	mov	r3, #1
 	mov	r0, r5
-	.loc 2 1821 0
+.LVL970:
+	.loc 2 1870 0
 	sub	r5, r5, #3968
-	.loc 2 1814 0
+	.loc 2 1863 0
 	strh	r3, [r0], #-104	@ movhi
-	.loc 2 1815 0
+	.loc 2 1864 0
 	bl	FtlMapBlkWriteDump_data
-.LVL979:
-	ldr	r10, [fp, #-68]
-.LVL980:
-.L1130:
-	.loc 2 1821 0
+.LVL971:
+	ldr	r9, [fp, #-64]
+.LVL972:
+.L1138:
+	.loc 2 1870 0
 	ldrh	ip, [r5, #8]
-	.loc 2 1823 0
-	movw	lr, #65535
-	.loc 2 1824 0
+	mov	r3, #0
+	.loc 2 1873 0
 	ldr	r0, [r5, #3792]
+	.loc 2 1869 0
+	mov	r10, r3
+	.loc 2 1870 0
+	ldr	r1, [fp, #-76]
+	.loc 2 1872 0
+	movw	lr, #65535
+	.loc 2 1873 0
 	mov	r6, #20
-.LVL981:
-	.loc 2 1821 0
-	ldr	r1, [fp, #-84]
-	mov	r3, #0
-	.loc 2 1820 0
-	str	r3, [fp, #-76]
-.L1131:
-	.loc 2 1821 0 discriminator 1
+.LVL973:
+.L1139:
+	.loc 2 1870 0 discriminator 1
 	uxth	r2, r3
+.LVL974:
 	cmp	ip, r2
-	bhi	.L1133
-	.loc 2 1828 0
+	bhi	.L1141
+	.loc 2 1877 0
 	mov	r2, #0
-	ldr	r1, [fp, #-76]
+	mov	r1, r10
 	bl	FlashReadPages
-.LVL982:
-	.loc 2 1829 0
+.LVL975:
+	.loc 2 1878 0
 	mov	r3, #0
-.LVL983:
-.L1222:
-	str	r3, [fp, #-80]
-	.loc 2 1829 0 is_stmt 0 discriminator 2
-	ldr	r2, [fp, #-76]
-.LVL984:
-	ldrh	r3, [fp, #-80]
-	cmp	r2, r3
-	bhi	.L1161
-	.loc 2 1982 0 is_stmt 1
-	add	r3, r10, #1
-	uxth	r10, r3
-	.loc 2 1983 0
+.LVL976:
+.L1229:
+	str	r3, [fp, #-72]
+	.loc 2 1878 0 is_stmt 0 discriminator 2
+	ldrh	r3, [fp, #-72]
+	cmp	r10, r3
+	bhi	.L1169
+	.loc 2 2031 0 is_stmt 1
+	add	r9, r9, #1
+	.loc 2 2032 0
 	ldrh	r3, [r5, #78]
-	cmp	r3, r10
-	bne	.L1130
-	.loc 2 1986 0
+	.loc 2 2031 0
+	uxth	r9, r9
+	.loc 2 2032 0
+	cmp	r3, r9
+	bne	.L1138
+	.loc 2 2035 0
 	ldrh	r2, [r5, #8]
-	.loc 2 1988 0
+.LVL977:
+	.loc 2 2037 0
 	movw	r0, #65535
-	.loc 2 1985 0
+	.loc 2 2034 0
 	mov	r3, #0
-	.loc 2 1984 0
-	strh	r10, [r4, #2]	@ movhi
-	.loc 2 1985 0
+	.loc 2 2033 0
+	strh	r9, [r4, #2]	@ movhi
+	.loc 2 2034 0
 	strh	r3, [r4, #4]	@ movhi
-.L1162:
-	.loc 2 1986 0 discriminator 1
+.L1170:
+	.loc 2 2035 0 discriminator 1
 	uxth	r1, r3
 	cmp	r1, r2
-	bcs	.L1217
-	.loc 2 1987 0
-	ldr	r1, [fp, #-84]
+	bcs	.L1225
+	.loc 2 2036 0
+	ldr	r1, [fp, #-76]
 	ldrh	ip, [r1], #2
-	.loc 2 1988 0
+	.loc 2 2037 0
 	cmp	ip, r0
-	.loc 2 1987 0
-	str	r1, [fp, #-84]
+	.loc 2 2036 0
+	str	r1, [fp, #-76]
 	add	r1, r3, #1
-	.loc 2 1988 0
-	bne	.L1223
+	.loc 2 2037 0
+	bne	.L1230
 	mov	r3, r1
-	b	.L1162
-.LVL985:
-.L1133:
-	.loc 2 1822 0
+	b	.L1170
+.LVL978:
+.L1141:
+	.loc 2 1871 0
 	ldrh	r2, [r1], #2
-	.loc 2 1823 0
-	cmp	r2, lr
-	beq	.L1132
-	.loc 2 1824 0
-	ldr	r7, [fp, #-76]
-.LVL986:
-	orr	r2, r10, r2, lsl #10
-	mla	r7, r6, r7, r0
-	str	r2, [r7, #4]
-	.loc 2 1825 0
-	ldr	r2, [fp, #-76]
-	add	r2, r2, #1
-	uxth	r2, r2
-	str	r2, [fp, #-76]
-.LVL987:
-.L1132:
 	add	r3, r3, #1
-	b	.L1131
-.LVL988:
-.L1161:
-	ldr	r3, [fp, #-80]
+	.loc 2 1872 0
+	cmp	r2, lr
+	.loc 2 1873 0
+	mlane	r7, r6, r10, r0
+	orrne	r2, r9, r2, lsl #10
+	.loc 2 1874 0
+	addne	r10, r10, #1
+	uxthne	r10, r10
+	.loc 2 1873 0
+	strne	r2, [r7, #4]
+	b	.L1139
+.LVL979:
+.L1169:
+	ldr	r3, [fp, #-72]
 	mov	r7, #20
-.LVL989:
-	.loc 2 1830 0
+	.loc 2 1879 0
 	ldr	r2, [r5, #3792]
+.LVL980:
 	mul	r7, r7, r3
-	str	r2, [fp, #-92]
+	str	r2, [fp, #-84]
 	add	r8, r2, r7
 	ldr	r6, [r8, #4]
-.LVL990:
-	.loc 2 1831 0
+.LVL981:
+	.loc 2 1880 0
 	ubfx	r0, r6, #10, #16
-	.loc 2 1830 0
-	str	r6, [fp, #-48]
-	.loc 2 1831 0
+	.loc 2 1879 0
+	str	r6, [fp, #-44]
+	.loc 2 1880 0
 	bl	P2V_plane
-.LVL991:
-	.loc 2 1833 0
-	ldr	r3, [fp, #-68]
-.LVL992:
-	cmp	r10, r3
-	bcc	.L1135
-	.loc 2 1833 0 is_stmt 0 discriminator 1
-	ldr	r2, [fp, #-88]
-.LVL993:
-	.loc 2 1834 0 is_stmt 1 discriminator 1
+.LVL982:
+	.loc 2 1882 0
+	ldr	r3, [fp, #-64]
+.LVL983:
+	cmp	r9, r3
+	bcc	.L1143
+	.loc 2 1882 0 is_stmt 0 discriminator 1
+	ldr	r2, [fp, #-80]
+.LVL984:
+	.loc 2 1883 0 is_stmt 1 discriminator 1
 	moveq	r3, #1
-.LVL994:
+.LVL985:
 	movne	r3, #0
-	.loc 2 1833 0 discriminator 1
+	.loc 2 1882 0 discriminator 1
 	cmp	r2, r0
 	movls	r3, #0
 	andhi	r3, r3, #1
 	cmp	r3, #0
-	bne	.L1135
-	.loc 2 1837 0
-	ldr	r3, [fp, #-72]
-.LVL995:
-	cmp	r10, r9
-	cmpeq	r3, r0
-	beq	.L1136
-	.loc 2 1841 0
-	ldr	r2, [fp, #-92]
-.LVL996:
+	bne	.L1143
+	.loc 2 1886 0
+	ldr	r3, [fp, #-60]
+.LVL986:
+	ldr	r2, [fp, #-68]
+.LVL987:
+	cmp	r9, r3
+	cmpeq	r2, r0
+	beq	.L1144
+	.loc 2 1890 0
+	ldr	r2, [fp, #-84]
+.LVL988:
 	ldr	r3, [r2, r7]
-.LVL997:
+.LVL989:
 	cmn	r3, #1
-	beq	.L1137
-	.loc 2 1842 0
+	beq	.L1145
+	.loc 2 1891 0
 	ldr	r8, [r8, #12]
-	.loc 2 1843 0
+	.loc 2 1892 0
 	movw	r3, #61589
 	ldrh	r2, [r8]
 	cmp	r2, r3
-	beq	.L1138
-.LVL998:
-.L1145:
-.LBB451:
-	.loc 2 1876 0
+	beq	.L1146
+.LVL990:
+.L1153:
+.LBB474:
+	.loc 2 1925 0
 	ldrh	r0, [r4]
-.LVL999:
-.L1221:
-.LBE451:
-	.loc 2 1960 0
+.LVL991:
+.L1228:
+.LBE474:
+	.loc 2 2009 0
 	bl	decrement_vpc_count
-.LVL1000:
-.L1135:
-	ldr	r3, [fp, #-80]
-.LVL1001:
+.LVL992:
+.L1143:
+	ldr	r3, [fp, #-72]
+.LVL993:
 	add	r3, r3, #1
-	b	.L1222
-.LVL1002:
-.L1138:
-	.loc 2 1849 0
+	b	.L1229
+.LVL994:
+.L1146:
+	.loc 2 1898 0
 	ldr	r3, [r8, #4]
-.LVL1003:
-	.loc 2 1850 0
+.LVL995:
+	.loc 2 1899 0
 	cmn	r3, #1
-	.loc 2 1849 0
-	str	r3, [fp, #-64]
-	.loc 2 1850 0
-	beq	.L1139
-	.loc 2 1851 0 discriminator 1
+	.loc 2 1898 0
+	str	r3, [fp, #-56]
+	.loc 2 1899 0
+	beq	.L1147
+	.loc 2 1900 0 discriminator 1
 	mov	r0, r3
-	ldr	r1, [r5, #2476]
+	ldr	r1, [r5, #2520]
 	bl	ftl_cmp_data_ver
-.LVL1004:
-	.loc 2 1850 0 discriminator 1
+.LVL996:
+	.loc 2 1899 0 discriminator 1
 	cmp	r0, #0
-	.loc 2 1853 0 discriminator 1
-	ldrne	r3, [fp, #-64]
-.LVL1005:
+	.loc 2 1902 0 discriminator 1
+	ldrne	r3, [fp, #-56]
 	addne	r3, r3, #1
-.LVL1006:
-	strne	r3, [r5, #2476]
-.LVL1007:
-.L1139:
-	.loc 2 1856 0
+.LVL997:
+	strne	r3, [r5, #2520]
+.LVL998:
+.L1147:
+	.loc 2 1905 0
 	ldrh	r2, [r8]
 	movw	r3, #61589
-.LVL1008:
+.LVL999:
 	cmp	r2, r3
-	beq	.L1140
-	.loc 2 1856 0 is_stmt 0 discriminator 1
-	mov	r2, #1856
-	ldr	r1, .L1225+4
-	ldr	r0, .L1225+8
+	beq	.L1148
+	.loc 2 1905 0 is_stmt 0 discriminator 1
+	movw	r2, #1905
+	ldr	r1, .L1232+4
+	ldr	r0, .L1232+8
 	bl	printk
-.LVL1009:
-.L1140:
-	.loc 2 1857 0 is_stmt 1
+.LVL1000:
+.L1148:
+	.loc 2 1906 0 is_stmt 1
 	ldr	r6, [r8, #8]
-.LVL1010:
-	.loc 2 1859 0
-	sub	r1, fp, #52
-	.loc 2 1858 0
+.LVL1001:
+	.loc 2 1908 0
+	sub	r1, fp, #48
+	.loc 2 1907 0
 	ldr	r3, [r8, #12]
-	.loc 2 1859 0
+	.loc 2 1908 0
 	mov	r2, #0
 	mov	r0, r6
-	.loc 2 1858 0
-	str	r3, [fp, #-56]
-	.loc 2 1859 0
+	.loc 2 1907 0
+	str	r3, [fp, #-52]
+	.loc 2 1908 0
 	bl	log2phys
-.LVL1011:
-	.loc 2 1860 0
+.LVL1002:
+	.loc 2 1909 0
 	ldr	r1, [r5, #3964]
 	cmn	r1, #1
-	beq	.L1141
-	.loc 2 1861 0 discriminator 1
-	ldr	r0, [fp, #-64]
+	beq	.L1149
+	.loc 2 1910 0 discriminator 1
+	ldr	r0, [fp, #-56]
 	bl	ftl_cmp_data_ver
-.LVL1012:
-	.loc 2 1860 0 discriminator 1
+.LVL1003:
+	.loc 2 1909 0 discriminator 1
 	cmp	r0, #0
-	beq	.L1141
-.LBB452:
-	.loc 2 1865 0
-	ldr	r3, [fp, #-56]
-	cmn	r3, #1
-	beq	.L1142
-	.loc 2 1866 0
+	beq	.L1149
+.LBB475:
+	.loc 2 1914 0
+	ldr	r2, [fp, #-52]
+	cmn	r2, #1
+	beq	.L1150
+	.loc 2 1915 0
 	ldr	r0, [r5, #3792]
-	.loc 2 1868 0
-	mov	r2, #0
+	.loc 2 1917 0
 	mov	r1, #1
-	.loc 2 1866 0
+	.loc 2 1915 0
 	add	r0, r0, r7
-	.loc 2 1867 0
-	str	r3, [r0, #4]
-	.loc 2 1866 0
+	.loc 2 1916 0
+	str	r2, [r0, #4]
+	.loc 2 1917 0
+	mov	r2, #0
+	.loc 2 1915 0
 	ldr	r8, [r0, #12]
-	.loc 2 1868 0
+	.loc 2 1917 0
 	bl	FlashReadPages
-.LVL1013:
-	.loc 2 1881 0
-	ldr	r3, [r5, #3792]
-	add	r2, r3, r7
-	str	r2, [fp, #-92]
-	ldr	r2, [r3, r7]
-	cmn	r2, #1
-	bne	.L1143
-.LVL1014:
-.L1144:
-	.loc 2 1913 0
+.LVL1004:
+	.loc 2 1930 0
+	ldr	r2, [r5, #3792]
+	ldr	r1, [r2, r7]
+	add	r3, r2, r7
+	cmn	r1, #1
+	bne	.L1151
+.LVL1005:
+.L1152:
+	.loc 2 1962 0
 	mvn	r3, #0
-	.loc 2 1914 0
+.LVL1006:
+	.loc 2 1963 0
 	ldrh	r0, [r4]
-	.loc 2 1913 0
-	str	r3, [fp, #-56]
-	.loc 2 1914 0
+	.loc 2 1962 0
+	str	r3, [fp, #-52]
+	.loc 2 1963 0
 	bl	decrement_vpc_count
-.LVL1015:
-.L1152:
-.LBE452:
-	.loc 2 1954 0
-	ldr	r8, [fp, #-56]
-	cmn	r8, #1
-	beq	.L1135
-.L1165:
-	.loc 2 1956 0
-	ubfx	r0, r8, #10, #16
+.LVL1007:
+.L1160:
+.LBE475:
+	.loc 2 2003 0
+	ldr	r7, [fp, #-52]
+	cmn	r7, #1
+	beq	.L1143
+.L1173:
+	.loc 2 2005 0
+	ubfx	r0, r7, #10, #16
 	bl	P2V_block_in_plane
-.LVL1016:
-	.loc 2 1957 0
+.LVL1008:
+	.loc 2 2006 0
 	ldrh	r3, [r5, #16]
-	.loc 2 1956 0
+	.loc 2 2005 0
 	mov	r6, r0
-.LVL1017:
-	.loc 2 1957 0
+.LVL1009:
+	.loc 2 2006 0
 	cmp	r3, r0
-	bhi	.L1157
-	.loc 2 1957 0 is_stmt 0 discriminator 1
-	movw	r2, #1957
-	ldr	r1, .L1225+4
-	ldr	r0, .L1225+8
+	bhi	.L1165
+	.loc 2 2006 0 is_stmt 0 discriminator 1
+	movw	r2, #2006
+	ldr	r1, .L1232+4
+	ldr	r0, .L1232+8
 	bl	printk
-.LVL1018:
-.L1157:
-	.loc 2 1958 0 is_stmt 1
-	ldr	r2, [r5, #2260]
+.LVL1010:
+.L1165:
+	.loc 2 2007 0 is_stmt 1
+	ldr	r2, [r5, #2300]
 	lsl	r3, r6, #1
 	ldrh	r3, [r2, r3]
 	cmp	r3, #0
-	beq	.L1158
-	.loc 2 1960 0
+	beq	.L1166
+	.loc 2 2009 0
 	mov	r0, r6
-	b	.L1221
-.LVL1019:
-.L1142:
-.LBB453:
-	.loc 2 1872 0
-	ldr	r3, [fp, #-48]
-	ldr	r2, [fp, #-52]
+	b	.L1228
+.LVL1011:
+.L1150:
+.LBB476:
+	.loc 2 1921 0
+	ldr	r3, [fp, #-44]
+.LVL1012:
+	ldr	r2, [fp, #-48]
 	cmp	r2, r3
-	bne	.L1145
-	.loc 2 1873 0
+	bne	.L1153
+	.loc 2 1922 0
 	mov	r2, #1
-	sub	r1, fp, #56
+	sub	r1, fp, #52
 	mov	r0, r6
 	bl	log2phys
-.LVL1020:
-	b	.L1145
-.L1143:
-	.loc 2 1881 0 discriminator 1
-	ldr	r2, [r8, #8]
-	cmp	r6, r2
-	bne	.L1144
-	str	r3, [fp, #-100]
-	.loc 2 1869 0 discriminator 2
-	ldr	r3, [r8, #4]
-.LVL1021:
-	.loc 2 1882 0 discriminator 2
+.LVL1013:
+	b	.L1153
+.L1151:
+	.loc 2 1930 0 discriminator 1
+	ldr	r1, [r8, #8]
+	cmp	r6, r1
+	bne	.L1152
+	.loc 2 1918 0 discriminator 2
+	ldr	r1, [r8, #4]
+.LVL1014:
+	.loc 2 1931 0 discriminator 2
 	ldr	r0, [r5, #3964]
-	mov	r1, r3
-	.loc 2 1869 0 discriminator 2
-	str	r3, [fp, #-96]
-	.loc 2 1882 0 discriminator 2
+	.loc 2 1918 0 discriminator 2
+	str	r1, [fp, #-84]
+	.loc 2 1931 0 discriminator 2
 	bl	ftl_cmp_data_ver
-.LVL1022:
-	.loc 2 1881 0 discriminator 2
+.LVL1015:
+	.loc 2 1930 0 discriminator 2
 	cmp	r0, #0
-	beq	.L1144
-	.loc 2 1883 0
+	beq	.L1152
+	.loc 2 1932 0
 	ldr	r1, [fp, #-48]
-	ldr	r2, [fp, #-52]
-	ldr	r3, [fp, #-100]
-	cmp	r2, r1
-	.loc 2 1885 0
-	ldr	r1, [fp, #-56]
-	.loc 2 1883 0
-	bne	.L1147
-.LVL1023:
-.L1219:
-	.loc 2 1909 0
+.LVL1016:
+	ldr	r0, [fp, #-44]
+.LVL1017:
+	cmp	r1, r0
+	bne	.L1155
+.LVL1018:
+.L1158:
+	.loc 2 1958 0
+	ldr	r1, [fp, #-52]
 	mov	r0, r6
 	bl	FtlReUsePrevPpa
-.LVL1024:
-	b	.L1144
-.LVL1025:
-.L1147:
-	.loc 2 1886 0
-	cmp	r2, r1
-	beq	.L1144
-	.loc 2 1887 0
-	cmn	r2, #1
-	.loc 2 1892 0
-	streq	r2, [r3, r7]
-	.loc 2 1887 0
-	beq	.L1149
-	.loc 2 1888 0
-	ldr	r3, [fp, #-92]
-	.loc 2 1890 0
+.LVL1019:
+	b	.L1152
+.L1155:
+	.loc 2 1935 0
+	ldr	r0, [fp, #-52]
+.LVL1020:
+	cmp	r1, r0
+	beq	.L1152
+	.loc 2 1936 0
+	cmn	r1, #1
+	.loc 2 1941 0
+	streq	r1, [r2, r7]
+	.loc 2 1936 0
+	beq	.L1157
+	.loc 2 1938 0
+	str	r1, [r3, #4]
+	.loc 2 1939 0
+	mov	r2, #0
 	mov	r1, #1
-	.loc 2 1889 0
-	str	r2, [r3, #4]
-	.loc 2 1890 0
 	mov	r0, r3
-	mov	r2, #0
-	.loc 2 1888 0
+	.loc 2 1937 0
 	ldr	r8, [r3, #12]
-	.loc 2 1890 0
+	.loc 2 1939 0
 	bl	FlashReadPages
-.LVL1026:
-.L1149:
-	.loc 2 1895 0
-	ldr	r3, [r5, #3792]
-	ldr	r3, [r3, r7]
-	cmn	r3, #1
-	beq	.L1150
-	.loc 2 1896 0
-	ldr	r7, [r8, #4]
-.LVL1027:
-	.loc 2 1897 0
+.LVL1021:
+.L1157:
+	.loc 2 1944 0
+	ldr	r2, [r5, #3792]
+	ldr	r2, [r2, r7]
+	cmn	r2, #1
+	beq	.L1158
+	.loc 2 1945 0
+	ldr	r3, [r8, #4]
+.LVL1022:
+	.loc 2 1946 0
 	ldr	r0, [r5, #3964]
-	mov	r1, r7
+	mov	r1, r3
 	bl	ftl_cmp_data_ver
-.LVL1028:
+.LVL1023:
 	cmp	r0, #0
-	beq	.L1150
-	.loc 2 1898 0
-	mov	r1, r7
-	ldr	r0, [fp, #-96]
+	beq	.L1158
+	.loc 2 1947 0
+	mov	r1, r3
+	ldr	r0, [fp, #-84]
 	bl	ftl_cmp_data_ver
-.LVL1029:
+.LVL1024:
 	cmp	r0, #0
-	beq	.L1144
-.L1150:
-	.loc 2 1909 0
-	ldr	r1, [fp, #-56]
-	b	.L1219
-.LVL1030:
-.L1141:
-.LBE453:
-	.loc 2 1915 0
-	ldr	r3, [fp, #-48]
-	ldr	r2, [fp, #-52]
-	cmp	r2, r3
 	beq	.L1152
-	.loc 2 1917 0
+	b	.L1158
+.LVL1025:
+.L1149:
+.LBE476:
+	.loc 2 1964 0
+	ldr	r3, [fp, #-44]
+.LVL1026:
+	ldr	r2, [fp, #-48]
+	cmp	r2, r3
+	beq	.L1160
+	.loc 2 1966 0
 	mov	r2, #1
-	sub	r1, fp, #48
+	sub	r1, fp, #44
 	mov	r0, r6
 	bl	log2phys
-.LVL1031:
-	.loc 2 1918 0
-	ldr	r8, [fp, #-52]
-	cmn	r8, #1
-	beq	.L1152
-	.loc 2 1918 0 is_stmt 0 discriminator 1
-	ldr	r3, [fp, #-56]
-	cmp	r8, r3
-	beq	.L1165
-	.loc 2 1919 0 is_stmt 1
-	ubfx	r0, r8, #10, #16
+.LVL1027:
+	.loc 2 1967 0
+	ldr	r7, [fp, #-48]
+	cmn	r7, #1
+	beq	.L1160
+	.loc 2 1967 0 is_stmt 0 discriminator 1
+	ldr	r3, [fp, #-52]
+	cmp	r7, r3
+	beq	.L1173
+	.loc 2 1968 0 is_stmt 1
+	ubfx	r0, r7, #10, #16
 	bl	P2V_block_in_plane
-.LVL1032:
-	.loc 2 1921 0
-	ldr	r3, .L1225+16
+.LVL1028:
+	.loc 2 1970 0
+	ldr	r3, .L1232+16
 	ldrh	r2, [r3]
 	cmp	r2, r0
-	beq	.L1156
-	.loc 2 1921 0 is_stmt 0 discriminator 1
+	beq	.L1164
+	.loc 2 1970 0 is_stmt 0 discriminator 1
 	ldrh	r2, [r3, #48]
 	cmp	r2, r0
-	beq	.L1156
-	.loc 2 1922 0 is_stmt 1
+	beq	.L1164
+	.loc 2 1971 0 is_stmt 1
 	ldrh	r3, [r3, #96]
 	cmp	r3, r0
-	bne	.L1152
-.L1156:
-.LBB454:
-	.loc 2 1927 0
+	bne	.L1160
+.L1164:
+.LBB477:
+	.loc 2 1976 0
 	ldr	r0, [r5, #3792]
-	.loc 2 1930 0
+	.loc 2 1979 0
 	mov	r2, #0
 	mov	r1, #1
-	.loc 2 1929 0
-	str	r8, [r0, #4]
-	.loc 2 1927 0
-	ldr	r7, [r0, #12]
-	.loc 2 1930 0
+	.loc 2 1978 0
+	str	r7, [r0, #4]
+	.loc 2 1976 0
+	ldr	r8, [r0, #12]
+	.loc 2 1979 0
 	bl	FlashReadPages
-.LVL1033:
-	.loc 2 1933 0
+.LVL1029:
+	.loc 2 1982 0
 	ldr	r3, [r5, #3792]
 	ldr	r3, [r3]
 	cmn	r3, #1
-	beq	.L1152
-	.loc 2 1934 0
-	ldr	r1, [r7, #4]
-	ldr	r0, [fp, #-64]
+	beq	.L1160
+	.loc 2 1983 0
+	ldr	r1, [r8, #4]
+	ldr	r0, [fp, #-56]
 	bl	ftl_cmp_data_ver
-.LVL1034:
+.LVL1030:
 	cmp	r0, #0
-	bne	.L1152
-	.loc 2 1941 0
+	bne	.L1160
+	.loc 2 1990 0
 	mov	r2, #1
-	sub	r1, fp, #52
+	sub	r1, fp, #48
 	mov	r0, r6
 	bl	log2phys
-.LVL1035:
-	b	.L1152
-.LVL1036:
-.L1158:
-.LBE454:
-	.loc 2 1962 0
+.LVL1031:
+	b	.L1160
+.LVL1032:
+.L1166:
+.LBE477:
+	.loc 2 2011 0
 	mov	r1, r6
-	ldr	r0, .L1225+20
+	ldr	r0, .L1232+20
 	bl	printk
-.LVL1037:
-	b	.L1135
-.LVL1038:
-.L1137:
-	.loc 2 1969 0
+.LVL1033:
+	b	.L1143
+.LVL1034:
+.L1145:
+	.loc 2 2018 0
 	ldr	r3, [r5, #3972]
 	cmp	r3, #31
-	.loc 2 1970 0
+	.loc 2 2019 0
 	addls	r2, r5, r3, lsl #2
-	.loc 2 1971 0
+	.loc 2 2020 0
 	addls	r3, r3, #1
 	strls	r3, [r5, #3972]
-	.loc 2 1970 0
+	.loc 2 2019 0
 	strls	r6, [r2, #3976]
-	.loc 2 1973 0
+	.loc 2 2022 0
 	ldrh	r0, [r4]
 	bl	decrement_vpc_count
-.LVL1039:
-	.loc 2 1975 0
+.LVL1035:
+	.loc 2 2024 0
 	ldr	r3, [r5, #3964]
 	cmn	r3, #1
-	.loc 2 1976 0
-	ldreq	r3, [fp, #-64]
-.LVL1040:
-	.loc 2 1975 0
-	beq	.L1220
-	.loc 2 1977 0
-	ldr	r2, [fp, #-64]
-.LVL1041:
+	.loc 2 2025 0
+	ldreq	r3, [fp, #-56]
+.LVL1036:
+	.loc 2 2024 0
+	beq	.L1227
+	.loc 2 2026 0
+	ldr	r2, [fp, #-56]
+.LVL1037:
 	cmp	r2, r3
-	bcs	.L1135
-	.loc 2 1978 0
+	bcs	.L1143
+	.loc 2 2027 0
 	mov	r3, r2
-.LVL1042:
-.L1220:
+.LVL1038:
+.L1227:
 	str	r3, [r5, #3964]
-	b	.L1135
+	b	.L1143
+.LVL1039:
+.L1144:
+	.loc 2 2051 0
+	ldrb	r3, [fp, #-68]	@ zero_extendqisi2
+.LVL1040:
+	.loc 2 2053 0
+	ldr	r2, [fp, #-68]
+.LVL1041:
+	ldr	r1, [fp, #-60]
+	.loc 2 2051 0
+	strb	r3, [r4, #6]
+	.loc 2 2052 0
+	ldrh	r3, [fp, #-60]
+	strh	r3, [r4, #2]	@ movhi
+.LVL1042:
+.L1231:
+	.loc 2 2053 0
+	mov	r0, r4
 .LVL1043:
-.L1136:
-	.loc 2 2002 0
-	ldrb	r3, [fp, #-72]	@ zero_extendqisi2
+	bl	ftl_sb_update_avl_pages
 .LVL1044:
-	.loc 2 2003 0
-	strh	r9, [r4, #2]	@ movhi
-	.loc 2 2004 0
-	ldr	r2, [fp, #-72]
-.LVL1045:
-	.loc 2 2002 0
-	strb	r3, [r4, #6]
-	b	.L1224
-.L1226:
+	b	.L1225
+.L1233:
 	.align	2
-.L1225:
+.L1232:
 	.word	.LANCHOR0
 	.word	.LANCHOR1+421
 	.word	.LC1
 	.word	.LANCHOR0+3968
-	.word	.LANCHOR0+2280
-	.word	.LC95
-.LFE221:
-	.fnend
+	.word	.LANCHOR0+2324
+	.word	.LC98
+.LFE231:
 	.size	FtlRecoverySuperblock, .-FtlRecoverySuperblock
 	.align	2
 	.global	FtlSuperblockPowerLostFix
@@ -13867,122 +12983,130 @@ FtlRecoverySuperblock:
 	.fpu softvfp
 	.type	FtlSuperblockPowerLostFix, %function
 FtlSuperblockPowerLostFix:
-	.fnstart
-.LFB228:
-	.loc 2 2156 0
-	@ args = 0, pretend = 0, frame = 24
+.LFB238:
+	.loc 2 2205 0
+	@ args = 0, pretend = 0, frame = 20
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL1046:
-	.movsp ip
+.LVL1045:
 	mov	ip, sp
-.LCFI339:
-	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI340:
-	.setfp fp, ip, #-4
+.LCFI332:
+	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
+.LCFI333:
 	sub	fp, ip, #4
-.LCFI341:
-	.pad #24
-	sub	sp, sp, #24
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2156 0
-	ldr	r5, .L1238
+.LCFI334:
+	sub	sp, sp, #20
+	.loc 2 2211 0
+	mvn	r3, #0
+	str	r3, [fp, #-36]
+	.loc 2 2219 0
+	mov	r7, #0
+	.loc 2 2212 0
+	ldr	r3, .L1245
+	.loc 2 2220 0
+	movw	r1, #61589
+	.loc 2 2205 0
 	mov	r4, r0
-	.loc 2 2162 0
+	.loc 2 2223 0
 	mov	r6, #7
-	.loc 2 2168 0
-	mvn	r7, #0
-.L1228:
-	.loc 2 2162 0
+	.loc 2 2212 0
+	ldr	r2, [r3, #3240]
+	mov	r8, r3
+	.loc 2 2213 0
+	ldr	r5, [r3, #3244]
+	.loc 2 2212 0
+	str	r2, [fp, #-44]
+	.loc 2 2216 0
+	mvn	r2, #2
+	.loc 2 2213 0
+	str	r5, [fp, #-40]
+	.loc 2 2216 0
+	str	r2, [r5, #8]
+	.loc 2 2217 0
+	mvn	r2, #1
+	str	r2, [r5, #12]
+	.loc 2 2218 0
+	ldrh	r2, [r0]
+	.loc 2 2219 0
+	strh	r7, [r5]	@ movhi
+	.loc 2 2218 0
+	strh	r2, [r5, #2]	@ movhi
+	.loc 2 2220 0
+	ldr	r2, [r3, #3240]
+	str	r1, [r2]
+	.loc 2 2221 0
+	ldr	r1, .L1245+4
+	ldr	r2, [r3, #3240]
+	str	r1, [r2, #4]
+.L1235:
+	.loc 2 2223 0
 	subs	r6, r6, #1
-	beq	.L1230
-	.loc 2 2163 0
+	beq	.L1237
+.LVL1046:
+	.loc 2 2224 0
 	ldrh	r3, [r4, #4]
 	cmp	r3, #0
-	bne	.L1229
-.L1230:
-	.loc 2 2183 0
+	bne	.L1236
+.L1237:
+	.loc 2 2234 0
 	ldrh	r3, [r4]
-	ldr	r1, [r5, #2260]
+	ldr	r1, [r8, #2300]
 	ldrh	r0, [r4, #4]
 	lsl	r3, r3, #1
 	ldrh	r2, [r1, r3]
 	sub	r2, r2, r0
 	strh	r2, [r1, r3]	@ movhi
-	.loc 2 2184 0
-	ldrh	r3, [r5, #78]
+	.loc 2 2235 0
+	ldrh	r3, [r8, #78]
 	strh	r3, [r4, #2]	@ movhi
-	.loc 2 2185 0
+	.loc 2 2236 0
 	mov	r3, #0
 	strb	r3, [r4, #6]
-	.loc 2 2186 0
+	.loc 2 2237 0
 	strh	r3, [r4, #4]	@ movhi
-	.loc 2 2188 0
-	sub	sp, fp, #28
-.LCFI342:
-	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+	.loc 2 2238 0
+	sub	sp, fp, #32
+.LCFI335:
+	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
 .LVL1047:
-.L1229:
-.LCFI343:
-	.loc 2 2165 0
+.L1236:
+.LCFI336:
+	.loc 2 2226 0
 	mov	r0, r4
 	bl	get_new_active_ppa
 .LVL1048:
-	.loc 2 2166 0
+	.loc 2 2227 0
 	cmn	r0, #1
-	.loc 2 2165 0
-	str	r0, [fp, #-44]
-	.loc 2 2166 0
-	beq	.L1230
-	.loc 2 2170 0
-	ldr	r1, [r5, #3244]
-	.loc 2 2179 0
-	sub	r0, fp, #48
-	.loc 2 2169 0
-	ldr	r3, [r5, #2244]
-	.loc 2 2168 0
-	str	r7, [fp, #-32]
-	.loc 2 2170 0
-	str	r1, [fp, #-36]
-	.loc 2 2169 0
-	str	r3, [fp, #-40]
-	.loc 2 2174 0
-	str	r7, [r1, #12]
-	.loc 2 2173 0
-	str	r7, [r1, #8]
-	.loc 2 2175 0
-	ldrh	r3, [r4]
-	strh	r3, [r1, #2]	@ movhi
-	.loc 2 2176 0
-	mov	r3, #0
-	strh	r3, [r1]	@ movhi
-	.loc 2 2178 0
-	ldr	r2, [r5, #2476]
-	str	r2, [r1, #4]
-	add	r2, r2, #1
-	cmn	r2, #1
-	.loc 2 2179 0
+	.loc 2 2226 0
+	str	r0, [fp, #-48]
+	.loc 2 2227 0
+	beq	.L1237
+	.loc 2 2229 0
+	ldr	r3, [r8, #2520]
+	.loc 2 2230 0
 	mov	r1, #1
-	.loc 2 2178 0
-	moveq	r2, r3
-	str	r2, [r5, #2476]
-	.loc 2 2179 0
+	sub	r0, fp, #52
+	.loc 2 2229 0
+	str	r3, [r5, #4]
+	add	r3, r3, #1
+	cmn	r3, #1
+	moveq	r3, r7
+	str	r3, [r8, #2520]
+	.loc 2 2230 0
+	mov	r3, #0
 	mov	r2, r3
 	bl	FlashProgPages
 .LVL1049:
-	.loc 2 2180 0
+	.loc 2 2231 0
 	ldrh	r0, [r4]
 	bl	decrement_vpc_count
 .LVL1050:
-	b	.L1228
-.L1239:
+	b	.L1235
+.L1246:
 	.align	2
-.L1238:
+.L1245:
 	.word	.LANCHOR0
-.LFE228:
-	.fnend
+	.word	305419896
+.LFE238:
 	.size	FtlSuperblockPowerLostFix, .-FtlSuperblockPowerLostFix
 	.align	2
 	.global	FtlLoadBbt
@@ -13991,36 +13115,28 @@ FtlSuperblockPowerLostFix:
 	.fpu softvfp
 	.type	FtlLoadBbt, %function
 FtlLoadBbt:
-	.fnstart
-.LFB169:
+.LFB179:
 	.loc 4 173 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI344:
+.LCFI337:
 	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI345:
-	.setfp fp, ip, #-4
+.LCFI338:
 	sub	fp, ip, #4
-.LCFI346:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 4 173 0
+.LCFI339:
 	.loc 4 180 0
-	ldr	r4, .L1272
+	ldr	r4, .L1279
 	.loc 4 186 0
-	ldr	r7, .L1272+4
+	ldr	r7, .L1279+4
 	.loc 4 180 0
-	ldr	r3, [r4, #2244]
+	ldr	r3, [r4, #3240]
 	.loc 4 181 0
 	ldr	r6, [r4, #3244]
 	.loc 4 180 0
-	str	r3, [r4, #3232]
+	str	r3, [r4, #3228]
 	.loc 4 181 0
-	str	r6, [r4, #3236]
+	str	r6, [r4, #3232]
 	.loc 4 183 0
 	bl	FtlBbtMemInit
 .LVL1051:
@@ -14029,12 +13145,12 @@ FtlLoadBbt:
 	sub	r5, r5, #1
 	uxth	r5, r5
 .LVL1052:
-.L1241:
+.L1248:
 	.loc 4 184 0 is_stmt 0 discriminator 1
 	ldrh	r3, [r4, #74]
 	sub	r3, r3, #16
 	cmp	r5, r3
-	ble	.L1244
+	ble	.L1251
 	.loc 4 185 0 is_stmt 1
 	lsl	r3, r5, #10
 	.loc 4 186 0
@@ -14042,36 +13158,36 @@ FtlLoadBbt:
 	mov	r1, r2
 	mov	r0, r7
 	.loc 4 185 0
-	str	r3, [r4, #3228]
+	str	r3, [r4, #3224]
 	.loc 4 186 0
 	bl	FlashReadPages
 .LVL1053:
 	.loc 4 187 0
-	ldr	r3, [r4, #3224]
+	ldr	r3, [r4, #3220]
 	cmn	r3, #1
-	bne	.L1242
+	bne	.L1249
 	.loc 4 188 0
-	ldr	r3, [r4, #3228]
+	ldr	r3, [r4, #3224]
 	.loc 4 189 0
 	mov	r2, #1
 	mov	r1, r2
 	mov	r0, r7
 	.loc 4 188 0
 	add	r3, r3, #1
-	str	r3, [r4, #3228]
+	str	r3, [r4, #3224]
 	.loc 4 189 0
 	bl	FlashReadPages
 .LVL1054:
-.L1242:
+.L1249:
 	.loc 4 191 0
-	ldr	r3, [r4, #3224]
+	ldr	r3, [r4, #3220]
 	cmn	r3, #1
-	beq	.L1243
+	beq	.L1250
 	.loc 4 196 0
 	ldrh	r2, [r6]
 	movw	r3, #61649
 	cmp	r2, r3
-	bne	.L1243
+	bne	.L1250
 	.loc 4 199 0
 	ldr	r3, [r6, #4]
 	.loc 4 198 0
@@ -14081,36 +13197,36 @@ FtlLoadBbt:
 	.loc 4 200 0
 	ldrh	r3, [r6, #8]
 	strh	r3, [r4, #132]	@ movhi
-.L1244:
+.L1251:
 	.loc 4 216 0
 	ldrh	r3, [r4, #128]
 	movw	r2, #65535
 	cmp	r3, r2
-	beq	.L1258
+	beq	.L1265
 	.loc 4 222 0
 	ldrh	r3, [r4, #132]
 	cmp	r3, r2
-	beq	.L1248
+	beq	.L1255
 	.loc 4 224 0
 	lsl	r3, r3, #10
 	.loc 4 225 0
 	mov	r2, #1
 	mov	r1, r2
-	ldr	r0, .L1272+4
+	ldr	r0, .L1279+4
 	.loc 4 224 0
-	str	r3, [r4, #3228]
+	str	r3, [r4, #3224]
 	.loc 4 225 0
 	bl	FlashReadPages
 .LVL1055:
 	.loc 4 226 0
-	ldr	r3, [r4, #3224]
+	ldr	r3, [r4, #3220]
 	cmn	r3, #1
-	beq	.L1248
+	beq	.L1255
 	.loc 4 229 0
 	ldrh	r2, [r6]
 	movw	r3, #61649
 	cmp	r2, r3
-	bne	.L1248
+	bne	.L1255
 	.loc 4 229 0 is_stmt 0 discriminator 1
 	ldr	r3, [r6, #4]
 	ldr	r2, [r4, #136]
@@ -14125,9 +13241,9 @@ FtlLoadBbt:
 	strhhi	r2, [r4, #128]	@ movhi
 	.loc 4 233 0 discriminator 1
 	strhhi	r3, [r4, #132]	@ movhi
-.L1248:
+.L1255:
 	.loc 4 245 0
-	ldr	r7, .L1272+4
+	ldr	r7, .L1279+4
 	.loc 4 238 0
 	mov	r1, #1
 	ldrh	r0, [r4, #128]
@@ -14138,17 +13254,17 @@ FtlLoadBbt:
 	.loc 4 239 0
 	add	r0, r0, #1
 	strh	r0, [r4, #130]	@ movhi
-.L1250:
+.L1257:
 	.loc 4 241 0
 	cmp	r5, #0
-	bge	.L1253
+	bge	.L1260
 	.loc 4 254 0
 	mov	r2, #254
-	ldr	r1, .L1272+8
-	ldr	r0, .L1272+12
+	ldr	r1, .L1279+8
+	ldr	r0, .L1279+12
 	bl	printk
 .LVL1058:
-.L1252:
+.L1259:
 	.loc 4 255 0
 	ldrh	r3, [r6, #10]
 	.loc 4 257 0
@@ -14158,46 +13274,46 @@ FtlLoadBbt:
 	.loc 4 257 0
 	movw	r3, #65535
 	cmp	r0, r3
-	beq	.L1255
+	beq	.L1262
 	.loc 4 259 0
 	ldr	r2, [r4, #4]
 	cmp	r0, r2
-	beq	.L1255
+	beq	.L1262
 	.loc 4 259 0 is_stmt 0 discriminator 1
 	ldrh	r3, [r4, #18]
 	lsr	r3, r3, #2
 	.loc 4 261 0 is_stmt 1 discriminator 1
 	cmp	r0, r3
 	cmpcc	r2, r3
-	bcs	.L1255
+	bcs	.L1262
 	.loc 4 263 0
 	bl	FtlSysBlkNumInit
 .LVL1059:
-.L1255:
-	ldr	r6, .L1272+16
+.L1262:
+	ldr	r6, .L1279+16
 	.loc 4 173 0 discriminator 1
 	mov	r5, #0
 .LVL1060:
 	.loc 4 269 0 discriminator 1
-	ldr	r7, .L1272+20
-.L1256:
+	ldr	r7, .L1279+20
+.L1263:
 	.loc 4 268 0 discriminator 1
 	ldrh	r3, [r4, #30]
 	cmp	r5, r3
-	bcc	.L1257
+	bcc	.L1264
 	.loc 4 275 0
 	mov	r0, #0
 	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
 .LVL1061:
-.L1243:
+.L1250:
 	.loc 4 184 0 discriminator 2
 	sub	r5, r5, #1
 .LVL1062:
 	uxth	r5, r5
 .LVL1063:
-	b	.L1241
+	b	.L1248
 .LVL1064:
-.L1253:
+.L1260:
 	.loc 4 243 0
 	ldrh	r3, [r4, #128]
 	.loc 4 245 0
@@ -14206,33 +13322,33 @@ FtlLoadBbt:
 	mov	r0, r7
 	.loc 4 243 0
 	orr	r3, r5, r3, lsl #10
-	str	r3, [r4, #3228]
+	str	r3, [r4, #3224]
 	.loc 4 244 0
-	ldr	r3, [r4, #2244]
-	str	r3, [r4, #3232]
+	ldr	r3, [r4, #3240]
+	str	r3, [r4, #3228]
 	.loc 4 245 0
 	bl	FlashReadPages
 .LVL1065:
 	.loc 4 247 0
-	ldr	r3, [r4, #3224]
+	ldr	r3, [r4, #3220]
 	cmn	r3, #1
-	beq	.L1251
+	beq	.L1258
 	.loc 4 247 0 is_stmt 0 discriminator 1
 	ldrh	r2, [r6]
 	movw	r3, #61649
 	cmp	r2, r3
-	beq	.L1252
-.L1251:
+	beq	.L1259
+.L1258:
 	sub	r5, r5, #1
 .LVL1066:
 	sxth	r5, r5
 .LVL1067:
-	b	.L1250
+	b	.L1257
 .LVL1068:
-.L1257:
+.L1264:
 	.loc 4 269 0 is_stmt 1 discriminator 3
 	ldrh	r2, [r7]
-	ldr	r1, [r4, #3232]
+	ldr	r1, [r4, #3228]
 	ldr	r0, [r6, #4]!
 	lsl	r2, r2, #2
 	mla	r1, r5, r2, r1
@@ -14241,23 +13357,22 @@ FtlLoadBbt:
 	.loc 4 269 0 discriminator 3
 	bl	ftl_memcpy
 .LVL1069:
-	b	.L1256
+	b	.L1263
 .LVL1070:
-.L1258:
+.L1265:
 	.loc 4 218 0
 	mvn	r0, #0
 	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L1273:
+.L1280:
 	.align	2
-.L1272:
+.L1279:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+3224
+	.word	.LANCHOR0+3220
 	.word	.LANCHOR1+443
 	.word	.LC1
 	.word	.LANCHOR0+152
 	.word	.LANCHOR0+3860
-.LFE169:
-	.fnend
+.LFE179:
 	.size	FtlLoadBbt, .-FtlLoadBbt
 	.align	2
 	.global	FtlMakeBbt
@@ -14266,30 +13381,21 @@ FtlLoadBbt:
 	.fpu softvfp
 	.type	FtlMakeBbt, %function
 FtlMakeBbt:
-	.fnstart
-.LFB171:
+.LFB181:
 	.loc 4 317 0
-	@ args = 0, pretend = 0, frame = 8
+	@ args = 0, pretend = 0, frame = 4
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI347:
+.LCFI340:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI348:
-	.setfp fp, ip, #-4
+.LCFI341:
 	sub	fp, ip, #4
-.LCFI349:
-	.pad #12
-	sub	sp, sp, #12
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 4 317 0
-	ldr	r8, .L1294
+.LCFI342:
+	sub	sp, sp, #4
 	.loc 4 327 0
 	mov	r7, #0
 .LVL1071:
+	ldr	r8, .L1300
 	.loc 4 325 0
 	bl	FtlBbtMemInit
 .LVL1072:
@@ -14300,167 +13406,162 @@ FtlMakeBbt:
 	sub	r5, r8, #156
 	sub	r9, r8, #18
 	mov	r4, r5
-.LVL1074:
-.L1275:
+.L1282:
 	.loc 4 327 0 is_stmt 0 discriminator 1
 	ldrh	r3, [r5, #30]
 	cmp	r7, r3
-	bcc	.L1281
-	mov	r5, #0
-.L1282:
+	bcc	.L1288
+	mov	r0, #0
+.L1289:
 	.loc 4 381 0 is_stmt 1 discriminator 1
-	ldrh	r3, [r4, #90]
-	uxth	r0, r5
-	add	r5, r5, #1
-	cmp	r3, r0
-	bhi	.L1283
+	ldrh	r2, [r4, #90]
+	uxth	r3, r0
+	add	r5, r0, #1
+	cmp	r2, r3
+	bhi	.L1290
 	.loc 4 387 0
 	ldrh	r5, [r4, #140]
 	.loc 4 396 0
 	movw	r6, #65535
-.LVL1075:
 	.loc 4 387 0
 	sub	r5, r5, #1
 	uxth	r5, r5
-.L1284:
+.L1291:
 	.loc 4 387 0 is_stmt 0 discriminator 1
 	ldrh	r3, [r4, #140]
 	sub	r3, r3, #48
 	cmp	r5, r3
-	ble	.L1288
+	ble	.L1295
 	.loc 4 389 0 is_stmt 1
 	mov	r0, r5
 	bl	FtlBbmIsBadBlock
-.LVL1076:
+.LVL1074:
 	cmp	r0, #1
-	beq	.L1285
+	beq	.L1292
 	.loc 4 391 0
 	mov	r0, r5
 	bl	FlashTestBlk
-.LVL1077:
+.LVL1075:
 	cmp	r0, #0
-	beq	.L1286
+	beq	.L1293
 	.loc 4 393 0
 	mov	r0, r5
 	bl	FtlBbmMapBadBlock
-.LVL1078:
-.L1285:
+.LVL1076:
+.L1292:
 	.loc 4 387 0 discriminator 2
 	sub	r5, r5, #1
 	uxth	r5, r5
-	b	.L1284
-.LVL1079:
-.L1281:
+	b	.L1291
+.L1288:
 	.loc 4 331 0
 	ldrh	r3, [r9, #2]!
 	movw	r2, #65535
 	.loc 4 328 0
-	ldr	r0, [r5, #2244]
+	ldr	r0, [r5, #3240]
 	.loc 4 329 0
 	ldr	r10, [r5, #3244]
 	.loc 4 331 0
 	cmp	r3, r2
 	.loc 4 328 0
-	str	r0, [r5, #3232]
+	str	r0, [r5, #3228]
 	.loc 4 329 0
-	str	r10, [r5, #3236]
+	str	r10, [r5, #3232]
 	.loc 4 331 0
-	beq	.L1276
+	beq	.L1283
 	.loc 4 333 0
-	ldrh	r6, [r5, #74]
-.LVL1080:
+	ldrh	ip, [r5, #74]
 	.loc 4 335 0
 	mov	r2, #1
 	mov	r1, r2
-	ldr	r0, .L1294+4
+	ldr	r0, .L1300+4
 	.loc 4 333 0
-	mla	r6, r7, r6, r3
-.LVL1081:
+	mla	ip, r7, ip, r3
+.LVL1077:
 	.loc 4 334 0
-	lsl	r3, r6, #10
-	str	r3, [r5, #3228]
+	lsl	r3, ip, #10
+	str	ip, [fp, #-44]
+	str	r3, [r5, #3224]
 	.loc 4 335 0
 	bl	FlashReadPages
-.LVL1082:
+.LVL1078:
 	.loc 4 336 0
 	ldrh	r2, [r5, #74]
-	ldr	r1, [r5, #3232]
+	ldr	r1, [r5, #3228]
 	ldr	r0, [r8]
 	add	r2, r2, #7
 	asr	r2, r2, #3
 	bl	ftl_memcpy
-.LVL1083:
-.L1277:
+.LVL1079:
+	ldr	ip, [fp, #-44]
+.LVL1080:
+.L1284:
 	.loc 4 376 0 discriminator 2
-	uxth	r0, r6
+	uxth	r0, ip
 	.loc 4 327 0 discriminator 2
 	add	r7, r7, #1
 	add	r8, r8, #4
 	.loc 4 376 0 discriminator 2
 	bl	FtlBbmMapBadBlock
-.LVL1084:
-	b	.L1275
-.L1276:
+.LVL1081:
+	b	.L1282
+.L1283:
 	.loc 4 340 0
 	mov	r1, r7
 	bl	FlashGetBadBlockList
-.LVL1085:
+.LVL1082:
 	.loc 4 341 0
 	ldr	r1, [r8]
-	ldr	r0, [r5, #3232]
+	ldr	r0, [r5, #3228]
 	bl	FtlBbt2Bitmap
-.LVL1086:
+.LVL1083:
 	.loc 4 343 0
-	ldrh	r3, [r5, #74]
-.L1293:
+	ldrh	r6, [r5, #74]
+.L1286:
 	.loc 4 347 0
-	sub	r3, r3, #1
-	uxth	r3, r3
-	str	r3, [fp, #-48]
-.L1278:
+	sub	r6, r6, #1
+	uxth	r6, r6
+.L1285:
 	.loc 4 345 0
-	ldr	r3, [fp, #-48]
 	ldrh	r0, [r4, #74]
-	smlabb	r0, r0, r7, r3
+	smlabb	r0, r0, r7, r6
 	uxth	r0, r0
 	bl	FtlBbmIsBadBlock
-.LVL1087:
+.LVL1084:
 	cmp	r0, #1
-	beq	.L1279
-	.loc 4 349 0
-	ldrh	r3, [fp, #-48]
-.LBB465:
-.LBB466:
-.LBB467:
+	beq	.L1286
+.LBB488:
+.LBB489:
+.LBB490:
 	.loc 1 202 0
 	mov	r1, #16
 	ldr	r0, [r4, #3244]
-.LBE467:
-.LBE466:
-.LBE465:
+.LBE490:
+.LBE489:
+.LBE488:
 	.loc 4 349 0
-	strh	r3, [r9]	@ movhi
-.LBB470:
-.LBB469:
-.LBB468:
+	strh	r6, [r9]	@ movhi
+.LBB493:
+.LBB492:
+.LBB491:
 	.loc 1 202 0
 	bl	__memzero
-.LVL1088:
-.LBE468:
-.LBE469:
-.LBE470:
-.LBB471:
-.LBB472:
-.LBB473:
+.LVL1085:
+.LBE491:
+.LBE492:
+.LBE493:
+.LBB494:
+.LBB495:
+.LBB496:
 	mov	r1, #4096
-	ldr	r0, [r4, #2244]
+	ldr	r0, [r4, #3240]
 	bl	__memzero
-.LVL1089:
-.LBE473:
-.LBE472:
-.LBE471:
+.LVL1086:
+.LBE496:
+.LBE495:
+.LBE494:
 	.loc 4 352 0
-	ldr	r3, .L1294+8
+	ldr	r3, .L1300+8
 	strh	r3, [r10]	@ movhi
 	.loc 4 353 0
 	mov	r3, #0
@@ -14468,71 +13569,70 @@ FtlMakeBbt:
 	.loc 4 354 0
 	ldrh	r3, [r9]
 	.loc 4 355 0
-	ldrh	r6, [r4, #74]
-.LVL1090:
+	ldrh	ip, [r4, #74]
 	.loc 4 354 0
 	strh	r3, [r10, #2]	@ movhi
 	.loc 4 355 0
 	ldrh	r3, [r9]
 	.loc 4 357 0
 	ldr	r1, [r8]
-	ldr	r0, [r4, #3232]
+	ldr	r0, [r4, #3228]
 	.loc 4 355 0
-	mla	r6, r7, r6, r3
-.LVL1091:
+	mla	ip, r7, ip, r3
+.LVL1087:
 	.loc 4 356 0
-	lsl	r3, r6, #10
-	str	r3, [r4, #3228]
+	lsl	r3, ip, #10
+	str	ip, [fp, #-44]
+	str	r3, [r4, #3224]
 	.loc 4 357 0
-	ldr	r3, .L1294+12
+	ldr	r3, .L1300+12
 	ldrh	r2, [r3]
 	lsl	r2, r2, #2
 	bl	ftl_memcpy
-.LVL1092:
+.LVL1088:
 	.loc 4 358 0
 	mov	r2, #1
-	ldr	r0, .L1294+4
+	ldr	r0, .L1300+4
 	mov	r1, r2
 	bl	FlashEraseBlocks
-.LVL1093:
+.LVL1089:
 	.loc 4 359 0
 	mov	r3, #1
-	ldr	r0, .L1294+4
+	ldr	r0, .L1300+4
 	mov	r2, r3
 	mov	r1, r3
 	bl	FlashProgPages
-.LVL1094:
+.LVL1090:
 	.loc 4 360 0
-	ldr	r3, [r4, #3224]
+	ldr	r3, [r4, #3220]
+	ldr	ip, [fp, #-44]
+.LVL1091:
 	cmn	r3, #1
-	bne	.L1277
+	bne	.L1284
 	.loc 4 362 0
-	uxth	r0, r6
+	uxth	r0, ip
 	bl	FtlBbmMapBadBlock
-.LVL1095:
+.LVL1092:
 	.loc 4 363 0
-	b	.L1278
-.L1279:
-	.loc 4 347 0
-	ldr	r3, [fp, #-48]
-	b	.L1293
-.L1283:
+	b	.L1285
+.L1290:
 	.loc 4 383 0 discriminator 3
+	uxth	r0, r0
 	bl	FtlBbmMapBadBlock
-.LVL1096:
-	b	.L1282
-.LVL1097:
-.L1286:
+.LVL1093:
+	mov	r0, r5
+	b	.L1289
+.L1293:
 	.loc 4 396 0
 	ldrh	r3, [r4, #128]
 	cmp	r3, r6
 	.loc 4 398 0
 	strheq	r5, [r4, #128]	@ movhi
-	beq	.L1285
-.L1287:
+	beq	.L1292
+.L1294:
 	.loc 4 402 0
 	strh	r5, [r4, #132]	@ movhi
-.L1288:
+.L1295:
 	.loc 4 414 0
 	ldrh	r3, [r4, #128]
 	.loc 4 411 0
@@ -14556,18 +13656,18 @@ FtlMakeBbt:
 	str	r3, [r0, #24]
 	.loc 4 416 0
 	bl	FlashEraseBlocks
-.LVL1098:
+.LVL1094:
 	.loc 4 418 0
 	ldrh	r0, [r4, #128]
 	bl	FtlBbmMapBadBlock
-.LVL1099:
+.LVL1095:
 	.loc 4 419 0
 	ldrh	r0, [r4, #132]
 	bl	FtlBbmMapBadBlock
-.LVL1100:
+.LVL1096:
 	.loc 4 421 0
 	bl	FtlBbmTblFlush
-.LVL1101:
+.LVL1097:
 	.loc 4 422 0
 	ldr	r3, [r4, #136]
 	.loc 4 425 0
@@ -14585,22 +13685,18 @@ FtlMakeBbt:
 	strh	r3, [r4, #132]	@ movhi
 	.loc 4 429 0
 	bl	FtlBbmTblFlush
-.LVL1102:
+.LVL1098:
 	.loc 4 432 0
 	mov	r0, r5
-	sub	sp, fp, #40
-.LCFI350:
-	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL1103:
-.L1295:
+	ldmib	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.L1301:
 	.align	2
-.L1294:
+.L1300:
 	.word	.LANCHOR0+156
-	.word	.LANCHOR0+3224
+	.word	.LANCHOR0+3220
 	.word	-3872
 	.word	.LANCHOR0+3860
-.LFE171:
-	.fnend
+.LFE181:
 	.size	FtlMakeBbt, .-FtlMakeBbt
 	.align	2
 	.global	FtlVendorPartWrite
@@ -14609,178 +13705,161 @@ FtlMakeBbt:
 	.fpu softvfp
 	.type	FtlVendorPartWrite, %function
 FtlVendorPartWrite:
-	.fnstart
-.LFB203:
-	.loc 2 786 0
-	@ args = 0, pretend = 0, frame = 104
+.LFB213:
+	.loc 2 835 0
+	@ args = 0, pretend = 0, frame = 100
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL1104:
-	.movsp ip
+.LVL1099:
 	mov	ip, sp
-.LCFI351:
+.LCFI343:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI352:
-	.setfp fp, ip, #-4
+.LCFI344:
 	sub	fp, ip, #4
-.LCFI353:
-	.pad #108
-	sub	sp, sp, #108
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 786 0
-	.loc 2 794 0
-	ldr	r4, .L1305
-	.loc 2 786 0
-	mov	r8, r0
-	str	r2, [fp, #-136]
-	.loc 2 794 0
+.LCFI345:
+	sub	sp, sp, #100
+	.loc 2 835 0
+	mov	r7, r0
+	.loc 2 843 0
+	ldr	r4, .L1311
+	.loc 2 835 0
+	mov	r5, r1
+	str	r2, [fp, #-128]
+	.loc 2 843 0
 	add	r2, r0, r1
-.LVL1105:
-	.loc 2 786 0
-	mov	r6, r1
-	.loc 2 794 0
+.LVL1100:
 	ldrh	r3, [r4, #72]
 	cmp	r2, r3
-	.loc 2 795 0
-	mvnhi	r9, #0
-	.loc 2 794 0
-	bhi	.L1296
-	.loc 2 791 0
-	ldrh	r7, [r4, #84]
-	mov	r9, #0
-	lsr	r7, r0, r7
-.LVL1106:
-	lsl	r10, r7, #2
-.LVL1107:
-.L1298:
-	.loc 2 797 0
-	cmp	r6, #0
-	bne	.L1303
-.L1296:
-	.loc 2 820 0
-	mov	r0, r9
+	.loc 2 844 0
+	mvnhi	r8, #0
+	.loc 2 843 0
+	bhi	.L1302
+	.loc 2 840 0
+	ldrh	r6, [r4, #84]
+	mov	r8, #0
+	lsr	r6, r0, r6
+.LVL1101:
+	lsl	r10, r6, #2
+.LVL1102:
+.L1304:
+	.loc 2 846 0
+	cmp	r5, #0
+	bne	.L1309
+.L1302:
+	.loc 2 869 0
+	mov	r0, r8
 	sub	sp, fp, #40
-.LCFI354:
+.LCFI346:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL1108:
-.L1303:
-.LCFI355:
-	.loc 2 798 0
+.LVL1103:
+.L1309:
+.LCFI347:
+	.loc 2 847 0
 	ldr	r3, [r4, #3844]
-.LVL1109:
-	.loc 2 799 0
-	mov	r0, r8
-	.loc 2 798 0
-	ldr	r2, [r3, r10]
-.LVL1110:
-	.loc 2 799 0
-	ldrh	r3, [r4, #34]
-	.loc 2 798 0
-	str	r2, [fp, #-148]
-	.loc 2 799 0
-	mov	r1, r3
-	str	r3, [fp, #-144]
-	bl	__aeabi_uidivmod
-.LVL1111:
-	.loc 2 800 0
-	ldr	r3, [fp, #-144]
-	.loc 2 801 0
-	ldr	r2, [fp, #-148]
-.LVL1112:
-	.loc 2 799 0
-	str	r1, [fp, #-140]
-	.loc 2 800 0
-	sub	r5, r3, r1
-.LVL1113:
-	uxth	r5, r5
-.LVL1114:
-	.loc 2 801 0
-	cmp	r6, r5
-	.loc 2 802 0
-	uxthcc	r5, r6
-	.loc 2 803 0
-	cmp	r2, #0
-	cmpne	r5, r3
+.LVL1104:
+	.loc 2 848 0
+	mov	r0, r7
+	ldrh	r2, [r4, #34]
+	.loc 2 847 0
+	ldr	ip, [r3, r10]
+.LVL1105:
+	.loc 2 848 0
+	mov	r1, r2
+	str	r2, [fp, #-136]
+	.loc 2 847 0
+	str	ip, [fp, #-140]
+	.loc 2 848 0
+	bl	__umodsi3
+.LVL1106:
+	.loc 2 849 0
+	ldr	r2, [fp, #-136]
+	.loc 2 850 0
+	ldr	ip, [fp, #-140]
+.LVL1107:
+	.loc 2 848 0
+	str	r0, [fp, #-132]
+	.loc 2 849 0
+	sub	r3, r2, r0
+	uxth	r9, r3
+	.loc 2 850 0
+	cmp	r5, r9
+	.loc 2 851 0
+	uxthcc	r9, r5
+	.loc 2 852 0
+	cmp	ip, #0
+	cmpne	r9, r2
 	movne	r1, #1
 	moveq	r1, #0
-	beq	.L1300
-	.loc 2 805 0
-	ldr	r3, [r4, #3808]
-	.loc 2 807 0
-	sub	r0, fp, #128
-	.loc 2 804 0
-	str	r2, [fp, #-124]
-	.loc 2 807 0
+	beq	.L1306
+	.loc 2 854 0
+	ldr	r2, [r4, #3808]
+	.loc 2 856 0
+	sub	r0, fp, #124
+	.loc 2 853 0
+	str	ip, [fp, #-120]
+	.loc 2 854 0
+	str	r2, [fp, #-116]
+	.loc 2 855 0
+	sub	r2, fp, #104
+	str	r2, [fp, #-112]
+	.loc 2 856 0
 	mov	r2, #1
-.LVL1115:
 	mov	r1, r2
-	.loc 2 805 0
-	str	r3, [fp, #-120]
-	.loc 2 806 0
-	sub	r3, fp, #108
-	str	r3, [fp, #-116]
-	.loc 2 807 0
 	bl	FlashReadPages
-.LVL1116:
-.L1301:
-	.loc 2 811 0
-	lsl	r3, r5, #9
+.LVL1108:
+.L1307:
+	.loc 2 860 0
+	ldr	r3, [fp, #-132]
+	lsl	ip, r9, #9
 	ldr	r0, [r4, #3808]
-	ldr	r1, [fp, #-136]
-	.loc 2 815 0
-	sub	r6, r6, r5
-	.loc 2 811 0
-	mov	r2, r3
-	str	r3, [fp, #-144]
-	ldr	r3, [fp, #-140]
-	.loc 2 816 0
-	add	r8, r8, r5
+	.loc 2 864 0
+	sub	r5, r5, r9
+	.loc 2 860 0
+	mov	r2, ip
+	ldr	r1, [fp, #-128]
+	str	ip, [fp, #-136]
+	.loc 2 865 0
+	add	r7, r7, r9
 	add	r10, r10, #4
-	.loc 2 811 0
+	.loc 2 860 0
 	add	r0, r0, r3, lsl #9
 	bl	ftl_memcpy
-.LVL1117:
-	.loc 2 812 0
+.LVL1109:
+	.loc 2 861 0
+	mov	r1, r6
 	ldr	r2, [r4, #3808]
-	mov	r1, r7
-	ldr	r0, .L1305+4
-	.loc 2 814 0
-	add	r7, r7, #1
-	.loc 2 812 0
+	ldr	r0, .L1311+4
+	.loc 2 863 0
+	add	r6, r6, #1
+	.loc 2 861 0
 	bl	FtlMapWritePage
-.LVL1118:
-	.loc 2 817 0
-	ldr	r2, [fp, #-136]
-.LVL1119:
-	.loc 2 813 0
-	cmn	r0, #1
-	.loc 2 817 0
-	ldr	r3, [fp, #-144]
-	.loc 2 813 0
-	mvneq	r9, #0
-	.loc 2 817 0
-	add	r3, r2, r3
-.LVL1120:
-	str	r3, [fp, #-136]
-	b	.L1298
-.LVL1121:
-.L1300:
-	.loc 2 809 0
+.LVL1110:
+	.loc 2 866 0
+	ldr	r3, [fp, #-128]
+.LVL1111:
+	.loc 2 862 0
+	cmn	r0, #1
+	.loc 2 866 0
+	ldr	ip, [fp, #-136]
+	.loc 2 862 0
+	mvneq	r8, #0
+	.loc 2 866 0
+	add	r3, r3, ip
+	str	r3, [fp, #-128]
+	b	.L1304
+.LVL1112:
+.L1306:
+	.loc 2 858 0
 	ldrh	r2, [r4, #86]
-.LVL1122:
 	ldr	r0, [r4, #3808]
 	bl	ftl_memset
-.LVL1123:
-	b	.L1301
-.L1306:
+.LVL1113:
+	b	.L1307
+.L1312:
 	.align	2
-.L1305:
+.L1311:
 	.word	.LANCHOR0
 	.word	.LANCHOR0+3908
-.LFE203:
-	.fnend
+.LFE213:
 	.size	FtlVendorPartWrite, .-FtlVendorPartWrite
 	.align	2
 	.global	Ftl_save_ext_data
@@ -14789,91 +13868,82 @@ FtlVendorPartWrite:
 	.fpu softvfp
 	.type	Ftl_save_ext_data, %function
 Ftl_save_ext_data:
-	.fnstart
-.LFB226:
-	.loc 2 2110 0
+.LFB236:
+	.loc 2 2159 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI356:
+.LCFI348:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI357:
-	.setfp fp, ip, #-4
+.LCFI349:
 	sub	fp, ip, #4
-.LCFI358:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2110 0
-	.loc 2 2111 0
-	ldr	r3, .L1309
-	ldr	r2, .L1309+4
-	ldr	r1, [r3, #2616]
+.LCFI350:
+	.loc 2 2160 0
+	ldr	r3, .L1315
+	ldr	r2, .L1315+4
+	ldr	r1, [r3, #2612]
 	cmp	r1, r2
 	ldmfdne	sp, {fp, sp, pc}
-.LBB476:
-.LBB477:
-	.loc 2 2112 0
-	ldr	r2, .L1309+8
-	.loc 2 2125 0
+.LBB499:
+.LBB500:
+	.loc 2 2161 0
+	ldr	r2, .L1315+8
+	.loc 2 2174 0
 	mov	r1, #1
 	mov	r0, #0
-	.loc 2 2112 0
-	str	r2, [r3, #2620]
-	.loc 2 2113 0
-	ldr	r2, [r3, #2464]
+	.loc 2 2161 0
+	str	r2, [r3, #2616]
+	.loc 2 2162 0
+	ldr	r2, [r3, #2508]
+	str	r2, [r3, #2700]
+	.loc 2 2163 0
+	ldr	r2, [r3, #2512]
 	str	r2, [r3, #2704]
-	.loc 2 2114 0
-	ldr	r2, [r3, #2468]
-	str	r2, [r3, #2708]
-	.loc 2 2115 0
-	ldr	r2, [r3, #2460]
+	.loc 2 2164 0
+	ldr	r2, [r3, #2504]
+	str	r2, [r3, #2620]
+	.loc 2 2165 0
+	ldr	r2, [r3, #2492]
 	str	r2, [r3, #2624]
-	.loc 2 2116 0
-	ldr	r2, [r3, #2448]
+	.loc 2 2166 0
+	ldr	r2, [r3, #2484]
 	str	r2, [r3, #2628]
-	.loc 2 2117 0
-	ldr	r2, [r3, #2440]
+	.loc 2 2167 0
+	ldr	r2, [r3, #2500]
 	str	r2, [r3, #2632]
-	.loc 2 2118 0
-	ldr	r2, [r3, #2456]
-	str	r2, [r3, #2636]
-	.loc 2 2119 0
-	ldr	r2, [r3, #2484]
+	.loc 2 2168 0
+	ldr	r2, [r3, #2528]
+	str	r2, [r3, #2640]
+	.loc 2 2169 0
+	ldr	r2, [r3, #2536]
 	str	r2, [r3, #2644]
-	.loc 2 2120 0
-	ldr	r2, [r3, #2492]
+	.loc 2 2170 0
+	ldr	r2, [r3, #2488]
 	str	r2, [r3, #2648]
-	.loc 2 2121 0
-	ldr	r2, [r3, #2444]
+	.loc 2 2171 0
+	ldr	r2, [r3, #2496]
 	str	r2, [r3, #2652]
-	.loc 2 2122 0
-	ldr	r2, [r3, #2452]
+	.loc 2 2172 0
+	ldr	r2, [r3, #2540]
 	str	r2, [r3, #2656]
-	.loc 2 2123 0
-	ldr	r2, [r3, #2496]
+	.loc 2 2173 0
+	ldr	r2, [r3, #2544]
 	str	r2, [r3, #2660]
-	.loc 2 2124 0
-	ldr	r2, [r3, #2500]
-	str	r2, [r3, #2664]
-	.loc 2 2125 0
-	ldr	r2, .L1309+12
+	.loc 2 2174 0
+	ldr	r2, .L1315+12
 	bl	FtlVendorPartWrite
-.LVL1124:
+.LVL1114:
 	ldmfd	sp, {fp, sp, pc}
-.L1310:
+.L1316:
 	.align	2
-.L1309:
+.L1315:
 	.word	.LANCHOR0
 	.word	1179929683
-	.word	1342177344
-	.word	.LANCHOR0+2616
-.LBE477:
-.LBE476:
-.LFE226:
-	.fnend
+	.word	1342177348
+	.word	.LANCHOR0+2612
+.LBE500:
+.LBE499:
+.LFE236:
 	.size	Ftl_save_ext_data, .-Ftl_save_ext_data
 	.align	2
 	.global	FtlEctTblFlush
@@ -14882,98 +13952,89 @@ Ftl_save_ext_data:
 	.fpu softvfp
 	.type	FtlEctTblFlush, %function
 FtlEctTblFlush:
-	.fnstart
-.LFB205:
-	.loc 2 861 0
+.LFB215:
+	.loc 2 910 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL1125:
-	.movsp ip
+.LVL1115:
 	mov	ip, sp
-.LCFI359:
+.LCFI351:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI360:
-	.setfp fp, ip, #-4
+.LCFI352:
 	sub	fp, ip, #4
-.LCFI361:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 861 0
-	.loc 2 864 0
-	ldr	r2, .L1316
+.LCFI353:
+	.loc 2 913 0
+	ldr	r2, .L1322
 	ldrh	r3, [r2]
 	cmp	r3, #31
-	.loc 2 865 0
+	.loc 2 914 0
 	addls	r3, r3, #1
-	.loc 2 862 0
+	.loc 2 911 0
 	movhi	r2, #32
-.LVL1126:
-	.loc 2 865 0
+.LVL1116:
+	.loc 2 914 0
 	strhls	r3, [r2]	@ movhi
-.LVL1127:
-	.loc 2 866 0
+.LVL1117:
+	.loc 2 915 0
 	movls	r2, #1
-.LVL1128:
-	.loc 2 868 0
+.LVL1118:
+	.loc 2 917 0
 	cmp	r0, #0
-	ldr	r3, .L1316+4
-	bne	.L1313
-	.loc 2 868 0 is_stmt 0 discriminator 1
+	ldr	r3, .L1322+4
+	bne	.L1319
+	.loc 2 917 0 is_stmt 0 discriminator 1
 	ldr	r1, [r3, #3820]
 	ldr	r0, [r1, #20]
-.LVL1129:
+.LVL1119:
 	ldr	r1, [r1, #16]
 	add	r2, r2, r0
-.LVL1130:
+.LVL1120:
 	cmp	r1, r2
-	bcc	.L1314
-.LVL1131:
-.L1313:
-	.loc 2 870 0 is_stmt 1
+	bcc	.L1320
+.LVL1121:
+.L1319:
+	.loc 2 919 0 is_stmt 1
 	ldr	r2, [r3, #3820]
-.LVL1132:
-	.loc 2 875 0
+.LVL1122:
+	.loc 2 924 0
 	mov	r0, #64
-.LVL1133:
-	.loc 2 870 0
+.LVL1123:
+	.loc 2 919 0
 	ldr	r1, [r2, #16]
 	str	r1, [r2, #20]
-	.loc 2 871 0
-	ldr	r1, .L1316+8
+	.loc 2 920 0
+	ldr	r1, .L1322+8
 	str	r1, [r2]
-	.loc 2 872 0
+	.loc 2 921 0
 	movw	r1, #3812
 	ldrh	r1, [r3, r1]
 	ldr	r2, [r3, #3820]
 	lsl	r3, r1, #9
 	str	r3, [r2, #12]
-	.loc 2 873 0
+	.loc 2 922 0
 	ldr	r3, [r2, #8]
 	add	r3, r3, #1
 	str	r3, [r2, #8]
-	.loc 2 874 0
+	.loc 2 923 0
 	mov	r3, #0
 	str	r3, [r2, #4]
-	.loc 2 875 0
+	.loc 2 924 0
 	bl	FtlVendorPartWrite
-.LVL1134:
-	.loc 2 876 0
+.LVL1124:
+	.loc 2 925 0
 	bl	Ftl_save_ext_data
-.LVL1135:
-.L1314:
-	.loc 2 878 0
+.LVL1125:
+.L1320:
+	.loc 2 927 0
 	mov	r0, #0
 	ldmfd	sp, {fp, sp, pc}
-.L1317:
+.L1323:
 	.align	2
-.L1316:
+.L1322:
 	.word	.LANCHOR3-4080
 	.word	.LANCHOR0
 	.word	1112818501
-.LFE205:
-	.fnend
+.LFE215:
 	.size	FtlEctTblFlush, .-FtlEctTblFlush
 	.align	2
 	.global	FtlVendorPartRead
@@ -14982,155 +14043,150 @@ FtlEctTblFlush:
 	.fpu softvfp
 	.type	FtlVendorPartRead, %function
 FtlVendorPartRead:
-	.fnstart
-.LFB204:
-	.loc 2 823 0
-	@ args = 0, pretend = 0, frame = 104
+.LFB214:
+	.loc 2 872 0
+	@ args = 0, pretend = 0, frame = 92
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL1136:
-	.movsp ip
+.LVL1126:
 	mov	ip, sp
-.LCFI362:
+.LCFI354:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI363:
-	.setfp fp, ip, #-4
+.LCFI355:
 	sub	fp, ip, #4
-.LCFI364:
-	.pad #108
-	sub	sp, sp, #108
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 823 0
-	.loc 2 832 0
-	ldr	r5, .L1327
-	.loc 2 823 0
+.LCFI356:
+	sub	sp, sp, #92
+	.loc 2 872 0
 	mov	r9, r2
-	.loc 2 832 0
-	add	r2, r0, r1
-.LVL1137:
-	.loc 2 823 0
-	mov	r7, r0
-	mov	r6, r1
-	.loc 2 832 0
-	ldrh	r3, [r5, #72]
-	cmp	r2, r3
-	.loc 2 833 0
+	.loc 2 881 0
+	ldr	r5, .L1333
+	.loc 2 872 0
+	mov	r7, r1
+	.loc 2 881 0
+	add	r1, r0, r1
+.LVL1127:
+	.loc 2 872 0
+	mov	r10, r0
+	.loc 2 881 0
+	ldrh	r2, [r5, #72]
+.LVL1128:
+	cmp	r1, r2
+	.loc 2 882 0
 	mvnhi	r8, #0
-	.loc 2 832 0
-	bhi	.L1318
-	.loc 2 828 0
-	ldrh	r3, [r5, #84]
+	.loc 2 881 0
+	bhi	.L1324
+	.loc 2 877 0
+	ldrh	r6, [r5, #84]
 	mov	r8, #0
-	lsr	r3, r0, r3
-.LVL1138:
-	lsl	r3, r3, #2
-.LVL1139:
-	str	r3, [fp, #-136]
-.LVL1140:
-.L1320:
-	.loc 2 834 0
-	cmp	r6, #0
-	bne	.L1325
-.L1318:
-	.loc 2 857 0
+	lsr	r6, r0, r6
+.LVL1129:
+	lsl	r6, r6, #2
+.LVL1130:
+.L1326:
+	.loc 2 883 0
+	cmp	r7, #0
+	bne	.L1331
+.L1324:
+	.loc 2 906 0
 	mov	r0, r8
 	sub	sp, fp, #40
-.LCFI365:
+.LCFI357:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL1141:
-.L1325:
-.LCFI366:
-	.loc 2 836 0
+.LVL1131:
+.L1331:
+.LCFI358:
+	.loc 2 884 0
+	ldr	r2, [r5, #3844]
+	.loc 2 885 0
+	mov	r0, r10
 	ldrh	r4, [r5, #34]
-.LVL1142:
-	mov	r0, r7
-	.loc 2 835 0
-	ldr	r3, [r5, #3844]
-	ldr	r2, [fp, #-136]
-	.loc 2 836 0
+.LVL1132:
+	.loc 2 884 0
+	ldr	ip, [r2, r6]
+.LVL1133:
+	.loc 2 885 0
 	mov	r1, r4
-	.loc 2 835 0
-	ldr	r10, [r3, r2]
-	.loc 2 836 0
-	bl	__aeabi_uidivmod
-.LVL1143:
-	.loc 2 837 0
-	sub	r4, r4, r1
-	str	r1, [fp, #-144]
+	.loc 2 884 0
+	str	ip, [fp, #-128]
+	.loc 2 885 0
+	bl	__umodsi3
+.LVL1134:
+	.loc 2 886 0
+	sub	r4, r4, r0
+	.loc 2 887 0
+	ldr	ip, [fp, #-128]
+.LVL1135:
+	.loc 2 886 0
 	uxth	r4, r4
-.LVL1144:
-	.loc 2 838 0
-	cmp	r6, r4
-	.loc 2 839 0
-	uxthcc	r4, r6
-	.loc 2 840 0
-	cmp	r10, #0
+.LVL1136:
+	str	r0, [fp, #-132]
+	.loc 2 887 0
+	cmp	r7, r4
+	.loc 2 888 0
+	uxthcc	r4, r7
+	.loc 2 889 0
+	cmp	ip, #0
 	lsl	r3, r4, #9
-	str	r3, [fp, #-140]
-	beq	.L1322
-	.loc 2 842 0
+	str	r3, [fp, #-128]
+	beq	.L1328
+	.loc 2 891 0
 	ldr	r2, [r5, #3808]
-	.loc 2 843 0
-	sub	r3, fp, #108
-	.loc 2 844 0
-	sub	r0, fp, #128
-	.loc 2 843 0
-	str	r3, [fp, #-116]
-	.loc 2 841 0
-	str	r10, [fp, #-124]
-	.loc 2 842 0
-	str	r2, [fp, #-120]
-	.loc 2 844 0
+	.loc 2 892 0
+	sub	r3, fp, #104
+	.loc 2 893 0
+	sub	r0, fp, #124
+	.loc 2 892 0
+	str	r3, [fp, #-112]
+	.loc 2 890 0
+	str	ip, [fp, #-120]
+	.loc 2 891 0
+	str	r2, [fp, #-116]
+	.loc 2 893 0
 	mov	r2, #1
 	mov	r1, r2
 	bl	FlashReadPages
-.LVL1145:
-	.loc 2 847 0
+.LVL1137:
+	.loc 2 896 0
 	ldr	r1, [r5, #3808]
 	mov	r0, r9
-	ldr	r3, [fp, #-144]
-	.loc 2 845 0
-	ldr	r2, [fp, #-128]
-	.loc 2 847 0
+	ldr	r3, [fp, #-132]
+	.loc 2 894 0
+	ldr	r2, [fp, #-124]
+	.loc 2 896 0
 	add	r1, r1, r3, lsl #9
-	.loc 2 846 0
+	.loc 2 895 0
 	cmn	r2, #1
-	.loc 2 847 0
+	.loc 2 896 0
 	lsl	r2, r4, #9
-	.loc 2 846 0
+	.loc 2 895 0
 	mvneq	r8, #0
-	.loc 2 847 0
+	.loc 2 896 0
 	bl	ftl_memcpy
-.LVL1146:
-.L1324:
-	.loc 2 854 0
-	ldr	r3, [fp, #-140]
-	.loc 2 852 0
-	sub	r6, r6, r4
-	.loc 2 853 0
-	add	r7, r7, r4
-	.loc 2 854 0
+.LVL1138:
+.L1330:
+	.loc 2 903 0
+	ldr	r3, [fp, #-128]
+	.loc 2 901 0
+	sub	r7, r7, r4
+	.loc 2 902 0
+	add	r10, r10, r4
+	add	r6, r6, #4
+	.loc 2 903 0
 	add	r9, r9, r3
-	ldr	r3, [fp, #-136]
-	add	r3, r3, #4
-	str	r3, [fp, #-136]
-	b	.L1320
-.L1322:
-	.loc 2 849 0
+	b	.L1326
+.LVL1139:
+.L1328:
+	.loc 2 898 0
 	lsl	r2, r4, #9
-	mov	r1, r10
+	mov	r1, ip
 	mov	r0, r9
 	bl	ftl_memset
-.LVL1147:
-	b	.L1324
-.L1328:
+.LVL1140:
+	b	.L1330
+.L1334:
 	.align	2
-.L1327:
+.L1333:
 	.word	.LANCHOR0
-.LFE204:
-	.fnend
+.LFE214:
 	.size	FtlVendorPartRead, .-FtlVendorPartRead
 	.align	2
 	.global	FtlLoadEctTbl
@@ -15139,67 +14195,58 @@ FtlVendorPartRead:
 	.fpu softvfp
 	.type	FtlLoadEctTbl, %function
 FtlLoadEctTbl:
-	.fnstart
-.LFB211:
-	.loc 2 1334 0
+.LFB221:
+	.loc 2 1383 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI367:
+.LCFI359:
 	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI368:
-	.setfp fp, ip, #-4
+.LCFI360:
 	sub	fp, ip, #4
-.LCFI369:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 1334 0
-	.loc 2 1335 0
+.LCFI361:
+	.loc 2 1384 0
+	ldr	r4, .L1337
 	movw	r5, #3812
 	mov	r0, #64
-	ldr	r4, .L1331
 	ldr	r2, [r4, #3820]
 	ldrh	r1, [r4, r5]
 	bl	FtlVendorPartRead
-.LVL1148:
-	.loc 2 1336 0
+.LVL1141:
+	.loc 2 1385 0
 	ldr	r3, [r4, #3820]
 	ldr	r2, [r3]
-	ldr	r3, .L1331+4
+	ldr	r3, .L1337+4
 	cmp	r2, r3
-	beq	.L1330
-.LBB480:
-.LBB481:
-	.loc 2 1338 0
-	ldr	r1, .L1331+8
-	ldr	r0, .L1331+12
+	beq	.L1336
+.LBB503:
+.LBB504:
+	.loc 2 1387 0
+	ldr	r1, .L1337+8
+	ldr	r0, .L1337+12
 	bl	printk
-.LVL1149:
-	.loc 2 1339 0
+.LVL1142:
+	.loc 2 1388 0
 	ldrh	r2, [r4, r5]
 	mov	r1, #0
 	ldr	r0, [r4, #3820]
 	lsl	r2, r2, #9
 	bl	ftl_memset
-.LVL1150:
-.L1330:
-.LBE481:
-.LBE480:
-	.loc 2 1344 0
+.LVL1143:
+.L1336:
+.LBE504:
+.LBE503:
+	.loc 2 1393 0
 	mov	r0, #0
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L1332:
+.L1338:
 	.align	2
-.L1331:
+.L1337:
 	.word	.LANCHOR0
 	.word	1112818501
-	.word	.LC96
+	.word	.LC99
 	.word	.LC71
-.LFE211:
-	.fnend
+.LFE221:
 	.size	FtlLoadEctTbl, .-FtlLoadEctTbl
 	.align	2
 	.global	Ftl_load_ext_data
@@ -15208,109 +14255,100 @@ FtlLoadEctTbl:
 	.fpu softvfp
 	.type	Ftl_load_ext_data, %function
 Ftl_load_ext_data:
-	.fnstart
-.LFB227:
-	.loc 2 2130 0
+.LFB237:
+	.loc 2 2179 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI370:
+.LCFI362:
 	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI371:
-	.setfp fp, ip, #-4
+.LCFI363:
 	sub	fp, ip, #4
-.LCFI372:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2130 0
-	.loc 2 2131 0
+.LCFI364:
+	.loc 2 2180 0
+	ldr	r4, .L1342
 	mov	r1, #1
 	mov	r0, #0
-	ldr	r4, .L1336
-	ldr	r2, .L1336+4
+	ldr	r2, .L1342+4
 	bl	FtlVendorPartRead
-.LVL1151:
-	.loc 2 2132 0
-	ldr	r5, .L1336+8
-	ldr	r3, [r4, #2616]
+.LVL1144:
+	.loc 2 2181 0
+	ldr	r5, .L1342+8
+	ldr	r3, [r4, #2612]
 	cmp	r3, r5
-	beq	.L1334
-.LBB487:
-.LBB488:
-.LBB489:
+	beq	.L1340
+.LBB510:
+.LBB511:
+.LBB512:
 	.loc 1 202 0
 	mov	r1, #512
-	ldr	r0, .L1336+4
+	ldr	r0, .L1342+4
 	bl	__memzero
-.LVL1152:
-.LBE489:
-.LBE488:
-.LBE487:
-	.loc 2 2134 0
-	str	r5, [r4, #2616]
-.L1334:
-	.loc 2 2137 0
-	ldr	r3, [r4, #2616]
+.LVL1145:
+.LBE512:
+.LBE511:
+.LBE510:
+	.loc 2 2183 0
+	str	r5, [r4, #2612]
+.L1340:
+	.loc 2 2186 0
+	ldr	r3, [r4, #2612]
 	cmp	r3, r5
-	bne	.L1335
-	.loc 2 2138 0
+	bne	.L1341
+	.loc 2 2187 0
+	ldr	r3, [r4, #2700]
+	str	r3, [r4, #2508]
+	.loc 2 2188 0
 	ldr	r3, [r4, #2704]
-	str	r3, [r4, #2464]
-	.loc 2 2139 0
-	ldr	r3, [r4, #2708]
-	str	r3, [r4, #2468]
-	.loc 2 2140 0
+	str	r3, [r4, #2512]
+	.loc 2 2189 0
+	ldr	r3, [r4, #2620]
+	str	r3, [r4, #2504]
+	.loc 2 2190 0
 	ldr	r3, [r4, #2624]
-	str	r3, [r4, #2460]
-	.loc 2 2141 0
+	str	r3, [r4, #2492]
+	.loc 2 2191 0
 	ldr	r3, [r4, #2628]
-	str	r3, [r4, #2448]
-	.loc 2 2142 0
+	str	r3, [r4, #2484]
+	.loc 2 2192 0
 	ldr	r3, [r4, #2632]
-	str	r3, [r4, #2440]
-	.loc 2 2143 0
-	ldr	r3, [r4, #2636]
-	str	r3, [r4, #2456]
-	.loc 2 2144 0
+	str	r3, [r4, #2500]
+	.loc 2 2193 0
+	ldr	r3, [r4, #2640]
+	str	r3, [r4, #2528]
+	.loc 2 2194 0
 	ldr	r3, [r4, #2644]
-	str	r3, [r4, #2484]
-	.loc 2 2145 0
+	str	r3, [r4, #2536]
+	.loc 2 2195 0
 	ldr	r3, [r4, #2648]
-	str	r3, [r4, #2492]
-	.loc 2 2146 0
+	str	r3, [r4, #2488]
+	.loc 2 2196 0
 	ldr	r3, [r4, #2652]
-	str	r3, [r4, #2444]
-	.loc 2 2147 0
+	str	r3, [r4, #2496]
+	.loc 2 2197 0
 	ldr	r3, [r4, #2656]
-	str	r3, [r4, #2452]
-	.loc 2 2148 0
+	str	r3, [r4, #2540]
+	.loc 2 2198 0
 	ldr	r3, [r4, #2660]
-	str	r3, [r4, #2496]
-	.loc 2 2149 0
-	ldr	r3, [r4, #2664]
-	str	r3, [r4, #2500]
-.L1335:
-	.loc 2 2152 0
+	str	r3, [r4, #2544]
+.L1341:
+	.loc 2 2201 0
 	ldrh	r2, [r4, #68]
-	ldr	r3, [r4, #2484]
-	ldr	r0, [r4, #2480]
+	ldr	r3, [r4, #2528]
+	ldr	r0, [r4, #2524]
 	ldrh	r1, [r4, #16]
 	mla	r0, r0, r2, r3
-	bl	__aeabi_uidiv
-.LVL1153:
-	str	r0, [r4, #2488]
+	bl	__udivsi3
+.LVL1146:
+	str	r0, [r4, #2532]
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L1337:
+.L1343:
 	.align	2
-.L1336:
+.L1342:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+2616
+	.word	.LANCHOR0+2612
 	.word	1179929683
-.LFE227:
-	.fnend
+.LFE237:
 	.size	Ftl_load_ext_data, .-Ftl_load_ext_data
 	.align	2
 	.global	FtlVpcTblFlush
@@ -15319,152 +14357,144 @@ Ftl_load_ext_data:
 	.fpu softvfp
 	.type	FtlVpcTblFlush, %function
 FtlVpcTblFlush:
-	.fnstart
-.LFB209:
-	.loc 2 1004 0
+.LFB219:
+	.loc 2 1053 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI373:
-	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI374:
-	.setfp fp, ip, #-4
+.LCFI365:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+.LCFI366:
 	sub	fp, ip, #4
-.LCFI375:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 1004 0
-	.loc 2 1016 0
+.LCFI367:
+	.loc 2 1059 0
+	ldr	r4, .L1356
+	.loc 2 1065 0
 	mov	r6, #0
-	.loc 2 1047 0
+	.loc 2 1096 0
 	mov	r1, #255
-	.loc 2 1010 0
-	ldr	r4, .L1350
-	.loc 2 1013 0
-	ldr	r5, .L1350+4
-	.loc 2 1075 0
-	ldr	r10, .L1350+8
-	.loc 2 1010 0
-	ldr	r3, [r4, #2244]
-	.loc 2 1011 0
+	.loc 2 1062 0
+	ldr	r5, .L1356+4
+	.loc 2 1059 0
+	ldr	r3, [r4, #3240]
+	.loc 2 1060 0
 	ldr	r7, [r4, #3244]
-	.loc 2 1021 0
-	sub	r8, r5, #52
-	.loc 2 1056 0
-	add	r9, r5, #668
-	.loc 2 1010 0
-	str	r3, [r4, #3232]
-	.loc 2 1013 0
-	movw	r3, #2556
+	.loc 2 1070 0
+	sub	r8, r5, #308
+	.loc 2 1124 0
+	ldr	r10, .L1356+8
+	.loc 2 1059 0
+	str	r3, [r4, #3228]
+	.loc 2 1062 0
+	movw	r3, #2552
 	ldrh	r3, [r4, r3]
-	.loc 2 1011 0
-	str	r7, [r4, #3236]
-	.loc 2 1017 0
+	.loc 2 1105 0
+	add	r9, r5, #668
+	.loc 2 1060 0
+	str	r7, [r4, #3232]
+	.loc 2 1066 0
 	str	r6, [r7, #12]
-	.loc 2 1013 0
+	.loc 2 1062 0
 	strh	r3, [r7, #2]	@ movhi
-	.loc 2 1014 0
-	ldr	r3, .L1350+12
+	.loc 2 1063 0
+	ldr	r3, .L1356+12
 	strh	r3, [r7]	@ movhi
-	.loc 2 1015 0
-	ldr	r3, [r4, #2564]
-	.loc 2 1016 0
+	.loc 2 1064 0
+	ldr	r3, [r4, #2560]
+	.loc 2 1065 0
 	str	r6, [r7, #8]
-	.loc 2 1015 0
+	.loc 2 1074 0
+	ldrh	r2, [r5, #-226]
+	.loc 2 1064 0
 	str	r3, [r7, #4]
-	.loc 2 1019 0
-	ldr	r3, .L1350+16
-	str	r3, [r4, #2504]
-	.loc 2 1020 0
-	ldr	r3, .L1350+20
-	str	r3, [r4, #2508]
-	.loc 2 1021 0
+	.loc 2 1068 0
+	ldr	r3, .L1356+16
+	str	r3, [r4, #2244]
+	.loc 2 1069 0
+	ldr	r3, .L1356+20
+	str	r3, [r4, #2248]
+	.loc 2 1070 0
 	ldrh	r3, [r5, #6]
-	strh	r3, [r5, #-44]	@ movhi
-	.loc 2 1022 0
+	strh	r3, [r8, #8]	@ movhi
+	.loc 2 1071 0
 	ldrh	r3, [r4, #30]
-	strb	r3, [r4, #2514]
-	.loc 2 1024 0
-	movw	r3, #2280
+	strb	r3, [r4, #2254]
+	.loc 2 1073 0
+	movw	r3, #2324
 	ldrh	r3, [r4, r3]
-	strh	r3, [r5, #-38]	@ movhi
-	.loc 2 1025 0
-	sub	r3, r5, #276
-	ldrh	r2, [r3, #2]
-	ldrb	r3, [r4, #2286]	@ zero_extendqisi2
+	strh	r3, [r8, #14]	@ movhi
+	.loc 2 1074 0
+	ldrb	r3, [r4, #2330]	@ zero_extendqisi2
 	orr	r3, r3, r2, lsl #6
-	.loc 2 1029 0
-	ldrh	r2, [r5, #-226]
-	.loc 2 1025 0
-	strh	r3, [r5, #-36]	@ movhi
-	.loc 2 1026 0
-	ldrb	r3, [r4, #2288]	@ zero_extendqisi2
-	strb	r3, [r4, #2515]
-	.loc 2 1028 0
-	movw	r3, #2328
+	.loc 2 1078 0
+	ldrh	r2, [r5, #-178]
+	.loc 2 1074 0
+	strh	r3, [r8, #16]	@ movhi
+	.loc 2 1075 0
+	ldrb	r3, [r4, #2332]	@ zero_extendqisi2
+	strb	r3, [r4, #2255]
+	.loc 2 1077 0
+	movw	r3, #2372
 	ldrh	r3, [r4, r3]
-	strh	r3, [r5, #-34]	@ movhi
-	.loc 2 1029 0
-	ldrb	r3, [r4, #2334]	@ zero_extendqisi2
+	strh	r3, [r8, #18]	@ movhi
+	.loc 2 1078 0
+	ldrb	r3, [r4, #2378]	@ zero_extendqisi2
 	orr	r3, r3, r2, lsl #6
-	strh	r3, [r5, #-32]	@ movhi
-	.loc 2 1030 0
-	ldrb	r3, [r4, #2336]	@ zero_extendqisi2
-	strb	r3, [r4, #2516]
-	.loc 2 1032 0
-	movw	r3, #2376
+	strh	r3, [r8, #20]	@ movhi
+	.loc 2 1079 0
+	ldrb	r3, [r4, #2380]	@ zero_extendqisi2
+	strb	r3, [r4, #2256]
+	.loc 2 1081 0
+	movw	r3, #2420
 	ldrh	r3, [r4, r3]
-	strh	r3, [r5, #-30]	@ movhi
-	.loc 2 1033 0
-	ldrh	r2, [r5, #-178]
-	ldrb	r3, [r4, #2382]	@ zero_extendqisi2
-	.loc 2 1047 0
-	ldr	r0, [r4, #3232]
-	.loc 2 1033 0
+	strh	r3, [r8, #22]	@ movhi
+	.loc 2 1082 0
+	ldrh	r2, [r5, #-130]
+	ldrb	r3, [r4, #2426]	@ zero_extendqisi2
+	.loc 2 1096 0
+	ldr	r0, [r4, #3228]
+	.loc 2 1082 0
 	orr	r3, r3, r2, lsl #6
-	.loc 2 1047 0
+	.loc 2 1096 0
 	ldrh	r2, [r4, #86]
-	.loc 2 1033 0
-	strh	r3, [r5, #-28]	@ movhi
-	.loc 2 1034 0
-	ldrb	r3, [r4, #2384]	@ zero_extendqisi2
-	strb	r3, [r4, #2517]
-	.loc 2 1036 0
-	ldr	r3, [r4, #2480]
-	str	r3, [r4, #2536]
-	.loc 2 1041 0
-	ldr	r3, [r4, #2472]
-	str	r3, [r4, #2544]
-	.loc 2 1042 0
-	ldr	r3, [r4, #2476]
-	str	r3, [r4, #2540]
-	.loc 2 1047 0
+	.loc 2 1082 0
+	strh	r3, [r8, #24]	@ movhi
+	.loc 2 1083 0
+	ldrb	r3, [r4, #2428]	@ zero_extendqisi2
+	strb	r3, [r4, #2257]
+	.loc 2 1085 0
+	ldr	r3, [r4, #2524]
+	str	r3, [r4, #2276]
+	.loc 2 1090 0
+	ldr	r3, [r4, #2516]
+	str	r3, [r4, #2284]
+	.loc 2 1091 0
+	ldr	r3, [r4, #2520]
+	str	r3, [r4, #2280]
+	.loc 2 1096 0
 	bl	ftl_memset
-.LVL1154:
-	.loc 2 1048 0
+.LVL1147:
+	.loc 2 1097 0
 	mov	r1, r8
 	mov	r2, #48
-	ldr	r0, [r4, #3232]
-	.loc 2 1005 0
+	ldr	r0, [r4, #3228]
+	.loc 2 1054 0
 	movw	r8, #65535
-.LVL1155:
-	.loc 2 1048 0
+.LVL1148:
+	.loc 2 1097 0
 	bl	ftl_memcpy
-.LVL1156:
-	.loc 2 1049 0
+.LVL1149:
+	.loc 2 1098 0
 	ldrh	r2, [r4, #16]
-	ldr	r0, [r4, #3232]
-	ldr	r1, [r4, #2260]
+	ldr	r0, [r4, #3228]
+	ldr	r1, [r4, #2300]
 	lsl	r2, r2, #1
 	add	r0, r0, #48
 	bl	ftl_memcpy
-.LVL1157:
-	.loc 2 1050 0
+.LVL1150:
+	.loc 2 1099 0
 	ldrh	r0, [r4, #16]
-	ldr	r3, [r4, #3232]
+	ldr	r3, [r4, #3228]
 	ldr	r1, [r4]
 	lsr	r2, r0, #3
 	add	r0, r0, #24
@@ -15473,152 +14503,151 @@ FtlVpcTblFlush:
 	bic	r0, r0, #3
 	add	r0, r3, r0
 	bl	ftl_memcpy
-.LVL1158:
-	.loc 2 1051 0
+.LVL1151:
+	.loc 2 1100 0
 	mov	r0, r6
 	bl	FtlUpdateVaildLpn
-.LVL1159:
-.L1339:
-	.loc 2 1053 0
-	ldr	r3, [r4, #2244]
-	.loc 2 1056 0
+.LVL1152:
+.L1345:
+	.loc 2 1102 0
+	ldr	r3, [r4, #3240]
+	.loc 2 1105 0
 	mov	r0, r9
-	.loc 2 1055 0
+	.loc 2 1104 0
 	ldrh	r2, [r5]
-	.loc 2 1053 0
-	str	r3, [r4, #3232]
-	.loc 2 1054 0
+	.loc 2 1102 0
+	str	r3, [r4, #3228]
+	.loc 2 1103 0
 	ldr	r3, [r4, #3244]
-	str	r3, [r4, #3236]
-	.loc 2 1055 0
+	str	r3, [r4, #3232]
+	.loc 2 1104 0
 	ldrh	r3, [r5, #2]
 	orr	r3, r3, r2, lsl #10
-	str	r3, [r4, #3228]
-	.loc 2 1056 0
+	str	r3, [r4, #3224]
+	.loc 2 1105 0
 	mov	r3, #1
 	mov	r2, r3
 	mov	r1, r3
 	bl	FlashProgPages
-.LVL1160:
-	.loc 2 1057 0
+.LVL1153:
+	.loc 2 1106 0
 	ldrh	r3, [r4, #80]
 	ldrh	r2, [r5, #2]
 	sub	r3, r3, #1
 	cmp	r2, r3
-	blt	.L1340
-	.loc 2 1059 0
+	blt	.L1346
+	.loc 2 1108 0
 	ldrh	r3, [r5]
-	.loc 2 1058 0
+	.loc 2 1107 0
 	ldrh	r8, [r5, #4]
-	.loc 2 1059 0
+	.loc 2 1108 0
 	strh	r3, [r5, #4]	@ movhi
-	.loc 2 1060 0
+	.loc 2 1109 0
 	mov	r3, #0
 	strh	r3, [r5, #2]	@ movhi
-	.loc 2 1061 0
+	.loc 2 1110 0
 	bl	FtlFreeSysBlkQueueOut
-.LVL1161:
-	.loc 2 1066 0
-	ldr	r3, [r4, #2472]
-	.loc 2 1061 0
+.LVL1154:
+	.loc 2 1115 0
+	ldr	r3, [r4, #2516]
+	.loc 2 1110 0
 	strh	r0, [r5]	@ movhi
-	.loc 2 1066 0
+	.loc 2 1115 0
 	add	r2, r3, #1
-	str	r3, [r4, #2564]
-	str	r2, [r4, #2472]
-	.loc 2 1067 0
+	str	r3, [r4, #2560]
+	str	r2, [r4, #2516]
+	.loc 2 1116 0
 	lsl	r2, r0, #10
-	str	r2, [r4, #3228]
-	.loc 2 1068 0
+	str	r2, [r4, #3224]
+	.loc 2 1117 0
 	str	r3, [r7, #4]
-	.loc 2 1070 0
+	.loc 2 1119 0
 	mov	r3, #1
-	.loc 2 1069 0
+	.loc 2 1118 0
 	strh	r0, [r7, #2]	@ movhi
-	.loc 2 1070 0
+	.loc 2 1119 0
 	mov	r2, r3
 	mov	r1, r3
 	mov	r0, r9
 	bl	FlashProgPages
-.LVL1162:
-.L1340:
-	.loc 2 1072 0
+.LVL1155:
+.L1346:
+	.loc 2 1121 0
 	ldrh	r3, [r5, #2]
-	.loc 2 1073 0
-	ldr	r2, [r4, #3224]
-	.loc 2 1072 0
+	.loc 2 1122 0
+	ldr	r2, [r4, #3220]
+	.loc 2 1121 0
 	add	r3, r3, #1
 	uxth	r3, r3
-	.loc 2 1073 0
+	.loc 2 1122 0
 	cmn	r2, #1
-	.loc 2 1072 0
+	.loc 2 1121 0
 	strh	r3, [r5, #2]	@ movhi
-	.loc 2 1073 0
-	bne	.L1341
-	.loc 2 1075 0
+	.loc 2 1122 0
+	bne	.L1347
+	.loc 2 1124 0
 	cmp	r3, #1
-	bne	.L1342
-	.loc 2 1075 0 is_stmt 0 discriminator 1
-	movw	r2, #1075
+	bne	.L1348
+	.loc 2 1124 0 is_stmt 0 discriminator 1
+	movw	r2, #1124
 	mov	r1, r10
-	ldr	r0, .L1350+24
+	ldr	r0, .L1356+24
 	bl	printk
-.LVL1163:
-.L1342:
-	.loc 2 1076 0 is_stmt 1
+.LVL1156:
+.L1348:
+	.loc 2 1125 0 is_stmt 1
 	ldrh	r3, [r5, #2]
-	.loc 2 1078 0
+	.loc 2 1127 0
 	add	r6, r6, #1
-.LVL1164:
+.LVL1157:
 	uxth	r6, r6
-.LVL1165:
-	.loc 2 1076 0
+.LVL1158:
+	.loc 2 1125 0
 	cmp	r3, #1
-	.loc 2 1077 0
+	.loc 2 1126 0
 	ldrheq	r3, [r4, #80]
 	subeq	r3, r3, #1
 	strheq	r3, [r5, #2]	@ movhi
-	.loc 2 1079 0
+	.loc 2 1128 0
 	cmp	r6, #3
-	bls	.L1339
-	.loc 2 1080 0
+	bls	.L1345
+	.loc 2 1129 0
 	mov	r2, r6
-	ldr	r1, [r4, #3228]
-	ldr	r0, .L1350+28
+	ldr	r1, [r4, #3224]
+	ldr	r0, .L1356+28
 	bl	printk
-.LVL1166:
-.L1345:
-	b	.L1345
-.L1341:
-	.loc 2 1086 0
+.LVL1159:
+.L1351:
+	b	.L1351
+.L1347:
+	.loc 2 1135 0
 	cmp	r3, #1
-	beq	.L1339
-	.loc 2 1089 0
+	beq	.L1345
+	.loc 2 1138 0
 	movw	r3, #65535
 	cmp	r8, r3
-	beq	.L1346
-	.loc 2 1090 0
+	beq	.L1352
+	.loc 2 1139 0
 	mov	r1, #1
 	mov	r0, r8
 	bl	FtlFreeSysBlkQueueIn
-.LVL1167:
-.L1346:
-	.loc 2 1092 0
+.LVL1160:
+.L1352:
+	.loc 2 1141 0
 	mov	r0, #0
-	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.L1351:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.L1357:
 	.align	2
-.L1350:
+.L1356:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+2556
+	.word	.LANCHOR0+2552
 	.word	.LANCHOR1+454
 	.word	-3932
 	.word	1179929683
-	.word	1342177344
+	.word	1342177348
 	.word	.LC1
-	.word	.LC97
-.LFE209:
-	.fnend
+	.word	.LC100
+.LFE219:
 	.size	FtlVpcTblFlush, .-FtlVpcTblFlush
 	.align	2
 	.global	FtlVpcCheckAndModify
@@ -15627,153 +14656,141 @@ FtlVpcTblFlush:
 	.fpu softvfp
 	.type	FtlVpcCheckAndModify, %function
 FtlVpcCheckAndModify:
-	.fnstart
-.LFB229:
-	.loc 2 2192 0
-	@ args = 0, pretend = 0, frame = 8
+.LFB239:
+	.loc 2 2242 0
+	@ args = 0, pretend = 0, frame = 4
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI376:
-	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
-.LCFI377:
-	.setfp fp, ip, #-4
+.LCFI368:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+.LCFI369:
 	sub	fp, ip, #4
-.LCFI378:
-	.pad #8
-	sub	sp, sp, #8
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2192 0
-	.loc 2 2198 0
-	ldr	r4, .L1364
-	.loc 2 2199 0
+.LCFI370:
+	sub	sp, sp, #4
+	.loc 2 2249 0
 	mov	r5, #0
-.LVL1168:
-	.loc 2 2197 0
-	ldr	r1, .L1364+4
-	ldr	r0, .L1364+8
+.LVL1161:
+	.loc 2 2248 0
+	ldr	r4, .L1370
+	.loc 2 2247 0
+	ldr	r1, .L1370+4
+	ldr	r0, .L1370+8
 	bl	printk
-.LVL1169:
-	.loc 2 2198 0
+.LVL1162:
+	.loc 2 2248 0
 	ldrh	r2, [r4, #18]
 	mov	r1, #0
 	ldr	r0, [r4, #3824]
 	lsl	r2, r2, #1
 	bl	ftl_memset
-.LVL1170:
-.L1353:
-	.loc 2 2199 0 discriminator 1
-	ldr	r3, [r4, #2436]
+.LVL1163:
+.L1359:
+	.loc 2 2249 0 discriminator 1
+	ldr	r3, [r4, #2480]
 	cmp	r5, r3
-	bcc	.L1355
-	.loc 2 2209 0 discriminator 1
-	ldr	r8, .L1364+12
+	bcc	.L1361
+	.loc 2 2259 0 discriminator 1
+	ldr	r9, .L1370+12
 	mov	r6, #0
-	.loc 2 2210 0 discriminator 1
-	ldr	r9, .L1364+16
-.LVL1171:
-.L1356:
-	.loc 2 2206 0 discriminator 1
+	.loc 2 2260 0 discriminator 1
+	ldr	r10, .L1370+16
+.LVL1164:
+.L1362:
+	.loc 2 2256 0 discriminator 1
 	ldrh	r3, [r4, #16]
 	uxth	r5, r6
-.LVL1172:
+.LVL1165:
 	cmp	r3, r5
-	bhi	.L1360
-	.loc 2 2218 0
-	sub	sp, fp, #36
-.LCFI379:
-	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
-.LVL1173:
-.L1355:
-.LCFI380:
-	.loc 2 2200 0
+	bhi	.L1366
+	.loc 2 2268 0
+	ldmib	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL1166:
+.L1361:
+	.loc 2 2250 0
 	mov	r2, #0
-	sub	r1, fp, #40
+	sub	r1, fp, #44
 	mov	r0, r5
 	bl	log2phys
-.LVL1174:
-	.loc 2 2201 0
-	ldr	r0, [fp, #-40]
+.LVL1167:
+	.loc 2 2251 0
+	ldr	r0, [fp, #-44]
 	cmn	r0, #1
-	beq	.L1354
-	.loc 2 2202 0
+	beq	.L1360
+	.loc 2 2252 0
 	ubfx	r0, r0, #10, #16
 	bl	P2V_block_in_plane
-.LVL1175:
-	.loc 2 2203 0
+.LVL1168:
+	.loc 2 2253 0
 	ldr	r2, [r4, #3824]
 	lsl	r0, r0, #1
 	ldrh	r3, [r2, r0]
 	add	r3, r3, #1
 	strh	r3, [r2, r0]	@ movhi
-.L1354:
-	.loc 2 2199 0 discriminator 2
-	add	r5, r5, #1
-	b	.L1353
-.LVL1176:
 .L1360:
-	.loc 2 2207 0
-	uxth	r1, r6
-	ldr	r3, [r4, #2260]
-	movw	r0, #65535
-	lsl	r7, r1, #1
+	.loc 2 2249 0 discriminator 2
+	add	r5, r5, #1
+	b	.L1359
+.LVL1169:
+.L1366:
+	.loc 2 2257 0
+	uxth	r8, r6
+	ldr	r3, [r4, #2300]
+	movw	r1, #65535
+	lsl	r7, r8, #1
 	ldrh	r2, [r3, r7]
 	ldr	r3, [r4, #3824]
 	ldrh	r3, [r3, r7]
-	cmp	r2, r0
+	cmp	r2, r1
 	cmpne	r2, r3
-	beq	.L1358
-	.loc 2 2209 0
-	mov	r0, r8
+	beq	.L1364
+	.loc 2 2259 0
+	mov	r1, r8
+	mov	r0, r9
 	bl	printk
-.LVL1177:
-	.loc 2 2210 0
-	ldrh	r3, [r9]
+.LVL1170:
+	.loc 2 2260 0
+	ldrh	r3, [r10]
 	cmp	r3, r5
-	beq	.L1358
-	.loc 2 2210 0 is_stmt 0 discriminator 1
-	ldr	r3, .L1364+20
+	beq	.L1364
+	.loc 2 2260 0 is_stmt 0 discriminator 1
+	ldr	r3, .L1370+20
 	ldrh	r2, [r3]
 	cmp	r2, r5
-	beq	.L1358
-	.loc 2 2210 0 discriminator 2
+	beq	.L1364
+	.loc 2 2260 0 discriminator 2
 	ldrh	r3, [r3, #-48]
 	cmp	r3, r5
-	beq	.L1358
-	.loc 2 2211 0 is_stmt 1
+	beq	.L1364
+	.loc 2 2261 0 is_stmt 1
 	ldr	r3, [r4, #3824]
-	.loc 2 2212 0
-	mov	r0, r5
-	.loc 2 2211 0
+	.loc 2 2262 0
+	mov	r0, r8
+	.loc 2 2261 0
 	ldrh	r2, [r3, r7]
-	ldr	r3, [r4, #2260]
+	ldr	r3, [r4, #2300]
 	strh	r2, [r3, r7]	@ movhi
-	.loc 2 2212 0
+	.loc 2 2262 0
 	bl	update_vpc_list
-.LVL1178:
-	.loc 2 2213 0
+.LVL1171:
+	.loc 2 2263 0
 	bl	l2p_flush
-.LVL1179:
-	.loc 2 2214 0
+.LVL1172:
+	.loc 2 2264 0
 	bl	FtlVpcTblFlush
-.LVL1180:
-.L1358:
+.LVL1173:
+.L1364:
 	add	r6, r6, #1
-	b	.L1356
-.L1365:
+	b	.L1362
+.L1371:
 	.align	2
-.L1364:
+.L1370:
 	.word	.LANCHOR0
 	.word	.LANCHOR1+469
-	.word	.LC87
-	.word	.LC98
-	.word	.LANCHOR0+2280
-	.word	.LANCHOR0+2376
-.LFE229:
-	.fnend
+	.word	.LC90
+	.word	.LC101
+	.word	.LANCHOR0+2324
+	.word	.LANCHOR0+2420
+.LFE239:
 	.size	FtlVpcCheckAndModify, .-FtlVpcCheckAndModify
 	.align	2
 	.global	allocate_new_data_superblock
@@ -15782,120 +14799,112 @@ FtlVpcCheckAndModify:
 	.fpu softvfp
 	.type	allocate_new_data_superblock, %function
 allocate_new_data_superblock:
-	.fnstart
-.LFB239:
-	.loc 2 2631 0
+.LFB249:
+	.loc 2 2679 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL1181:
-	.movsp ip
+.LVL1174:
 	mov	ip, sp
-.LCFI381:
+.LCFI371:
 	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI382:
-	.setfp fp, ip, #-4
+.LCFI372:
 	sub	fp, ip, #4
-.LCFI383:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2631 0
+.LCFI373:
+	.loc 2 2681 0
+	ldr	r5, .L1382
+	.loc 2 2679 0
 	mov	r7, r0
-	.loc 2 2633 0
-	ldr	r5, .L1376
-	.loc 2 2632 0
+	.loc 2 2680 0
 	ldrh	r4, [r0]
-.LVL1182:
-	.loc 2 2633 0
+.LVL1175:
+	.loc 2 2681 0
 	ldrh	r3, [r5, #16]
 	cmp	r3, r4
-	bcs	.L1367
-	.loc 2 2633 0 is_stmt 0 discriminator 1
-	movw	r2, #2633
-	ldr	r1, .L1376+4
-	ldr	r0, .L1376+8
+	bcs	.L1373
+	.loc 2 2681 0 is_stmt 0 discriminator 1
+	movw	r2, #2681
+	ldr	r1, .L1382+4
+	ldr	r0, .L1382+8
 	bl	printk
-.LVL1183:
-.L1367:
-	.loc 2 2635 0 is_stmt 1
+.LVL1176:
+.L1373:
+	.loc 2 2683 0 is_stmt 1
 	movw	r3, #65535
 	cmp	r4, r3
-	beq	.L1368
-	.loc 2 2636 0
-	ldr	r2, [r5, #2260]
+	beq	.L1374
+	.loc 2 2684 0
+	ldr	r2, [r5, #2300]
 	lsl	r3, r4, #1
-	.loc 2 2637 0
+	.loc 2 2685 0
 	mov	r0, r4
-	.loc 2 2636 0
+	.loc 2 2684 0
 	ldrh	r3, [r2, r3]
 	cmp	r3, #0
-	beq	.L1369
-	.loc 2 2637 0
+	beq	.L1375
+	.loc 2 2685 0
 	bl	INSERT_DATA_LIST
-.LVL1184:
-.L1368:
-	.loc 2 2641 0
+.LVL1177:
+.L1374:
+	.loc 2 2689 0
 	mov	r3, #1
-	.loc 2 2642 0
+	.loc 2 2690 0
 	movw	r2, #65535
-	.loc 2 2641 0
+	.loc 2 2689 0
 	strb	r3, [r7, #8]
-	.loc 2 2642 0
-	ldr	r3, .L1376+12
+	.loc 2 2690 0
+	ldr	r3, .L1382+12
 	ldrh	r0, [r3]
 	mov	r6, r3
 	cmp	r0, r2
-	beq	.L1370
-	.loc 2 2643 0
+	beq	.L1376
+	.loc 2 2691 0
 	cmp	r4, r0
-	bne	.L1371
-	.loc 2 2643 0 is_stmt 0 discriminator 1
-	ldr	r2, [r5, #2260]
+	bne	.L1377
+	.loc 2 2691 0 is_stmt 0 discriminator 1
+	ldr	r2, [r5, #2300]
 	lsl	r3, r0, #1
 	ldrh	r3, [r2, r3]
 	cmp	r3, #0
-	beq	.L1372
-.L1371:
-	.loc 2 2644 0 is_stmt 1
+	beq	.L1378
+.L1377:
+	.loc 2 2692 0 is_stmt 1
 	bl	update_vpc_list
-.LVL1185:
-.L1372:
-	.loc 2 2645 0
+.LVL1178:
+.L1378:
+	.loc 2 2693 0
 	mvn	r3, #0
 	strh	r3, [r6]	@ movhi
-.L1370:
-	.loc 2 2647 0
+.L1376:
+	.loc 2 2695 0
 	mov	r0, r7
 	bl	allocate_data_superblock
-.LVL1186:
-	.loc 2 2648 0
+.LVL1179:
+	.loc 2 2696 0
 	bl	l2p_flush
-.LVL1187:
-	.loc 2 2649 0
+.LVL1180:
+	.loc 2 2697 0
 	mov	r0, #0
 	bl	FtlEctTblFlush
-.LVL1188:
-	.loc 2 2650 0
+.LVL1181:
+	.loc 2 2698 0
 	bl	FtlVpcTblFlush
-.LVL1189:
-	.loc 2 2652 0
+.LVL1182:
+	.loc 2 2700 0
 	mov	r0, #0
 	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L1369:
-	.loc 2 2639 0
+.L1375:
+	.loc 2 2687 0
 	bl	INSERT_FREE_LIST
-.LVL1190:
-	b	.L1368
-.L1377:
+.LVL1183:
+	b	.L1374
+.L1383:
 	.align	2
-.L1376:
+.L1382:
 	.word	.LANCHOR0
 	.word	.LANCHOR1+490
 	.word	.LC1
 	.word	.LANCHOR0+3952
-.LFE239:
-	.fnend
+.LFE249:
 	.size	allocate_new_data_superblock, .-allocate_new_data_superblock
 	.align	2
 	.global	FtlProgPages
@@ -15904,212 +14913,202 @@ allocate_new_data_superblock:
 	.fpu softvfp
 	.type	FtlProgPages, %function
 FtlProgPages:
-	.fnstart
-.LFB155:
-	.loc 3 902 0
-	@ args = 0, pretend = 0, frame = 16
+.LFB165:
+	.loc 3 904 0
+	@ args = 0, pretend = 0, frame = 8
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL1191:
-	.movsp ip
+.LVL1184:
 	mov	ip, sp
-.LCFI384:
+.LCFI374:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI385:
-	.setfp fp, ip, #-4
+.LCFI375:
 	sub	fp, ip, #4
-.LCFI386:
-	.pad #20
-	sub	sp, sp, #20
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 902 0
-	ldr	r6, .L1392
-	.loc 3 911 0
+.LCFI376:
+	sub	sp, sp, #8
+	.loc 3 913 0
 	mov	r7, #0
-.LVL1192:
-	.loc 3 931 0
-	ldr	r10, .L1392+4
-	.loc 3 902 0
+.LVL1185:
+	ldr	r6, .L1398
+	.loc 3 904 0
 	mov	r4, r3
-	.loc 3 909 0
+	.loc 3 933 0
+	ldr	r10, .L1398+4
+	.loc 3 911 0
 	mov	r2, #0
-.LVL1193:
+.LVL1186:
 	ldrb	r3, [r3, #9]	@ zero_extendqisi2
-.LVL1194:
-	.loc 3 902 0
+.LVL1187:
+	.loc 3 904 0
 	mov	r5, r0
 	mov	r9, r1
-	.loc 3 909 0
+	.loc 3 911 0
 	bl	FlashProgPages
-.LVL1195:
-.L1379:
-	.loc 3 911 0 discriminator 1
+.LVL1188:
+.L1385:
+	.loc 3 913 0 discriminator 1
 	cmp	r7, r9
-	beq	.L1386
-	.loc 3 917 0
+	beq	.L1392
+	.loc 3 919 0
 	mov	r8, #0
-	b	.L1387
-.LVL1196:
-.L1382:
-	.loc 3 913 0
+	b	.L1393
+.LVL1189:
+.L1388:
+	.loc 3 915 0
 	ldr	r0, [r5, #4]
 	ubfx	r0, r0, #10, #16
 	bl	P2V_block_in_plane
-.LVL1197:
-	.loc 3 914 0
+.LVL1190:
+	.loc 3 916 0
 	ldrh	r3, [r4]
 	cmp	r3, r0
-	bne	.L1380
-	.loc 3 915 0
-	ldr	r1, [r6, #2260]
+	bne	.L1386
+	.loc 3 917 0
+	ldr	r1, [r6, #2300]
 	lsl	r3, r3, #1
 	ldrh	r0, [r4, #4]
 	ldrh	r2, [r1, r3]
 	sub	r2, r2, r0
 	strh	r2, [r1, r3]	@ movhi
-	.loc 3 916 0
+	.loc 3 918 0
 	ldrh	r3, [r6, #78]
-	.loc 3 917 0
+	.loc 3 919 0
 	strb	r8, [r4, #6]
-	.loc 3 918 0
+	.loc 3 920 0
 	strh	r8, [r4, #4]	@ movhi
-	.loc 3 916 0
+	.loc 3 918 0
 	strh	r3, [r4, #2]	@ movhi
-.L1380:
-	.loc 3 920 0
+.L1386:
+	.loc 3 922 0
 	ldrh	r3, [r4, #4]
 	cmp	r3, #0
-	bne	.L1381
-	.loc 3 921 0
+	bne	.L1387
+	.loc 3 923 0
 	mov	r0, r4
 	bl	allocate_new_data_superblock
-.LVL1198:
-.L1381:
-	.loc 3 924 0
-	ldr	r3, [r6, #2712]
+.LVL1191:
+.L1387:
+	.loc 3 926 0
+	ldr	r3, [r6, #2708]
 	add	r3, r3, #1
-	str	r3, [r6, #2712]
-	.loc 3 925 0
+	str	r3, [r6, #2708]
+	.loc 3 927 0
 	ldr	r0, [r5, #4]
 	ubfx	r0, r0, #10, #16
 	bl	FtlGcMarkBadPhyBlk
-.LVL1199:
-	.loc 3 926 0
+.LVL1192:
+	.loc 3 928 0
 	mov	r0, r4
 	bl	get_new_active_ppa
-.LVL1200:
-	.loc 3 928 0
+.LVL1193:
+	.loc 3 930 0
 	mov	r2, #0
-	.loc 3 927 0
+	.loc 3 929 0
 	str	r0, [r5, #4]
-	.loc 3 926 0
-	str	r0, [fp, #-48]
 	.loc 3 928 0
+	str	r0, [fp, #-44]
+	.loc 3 930 0
 	mov	r1, #1
 	ldrb	r3, [r4, #9]	@ zero_extendqisi2
 	mov	r0, r5
 	bl	FlashProgPages
-.LVL1201:
-.L1387:
-	.loc 3 912 0
+.LVL1194:
+.L1393:
+	.loc 3 914 0
 	ldr	r3, [r5]
-.LVL1202:
+.LVL1195:
 	cmn	r3, #1
-	beq	.L1382
-	.loc 3 931 0
+	beq	.L1388
+	.loc 3 933 0
 	ldrb	r2, [r4, #6]	@ zero_extendqisi2
 	ldrh	r3, [r6, #8]
 	cmp	r2, r3
-	bcc	.L1383
-	.loc 3 931 0 is_stmt 0 discriminator 1
-	movw	r2, #931
+	bcc	.L1389
+	.loc 3 933 0 is_stmt 0 discriminator 1
+	movw	r2, #933
 	mov	r1, r10
-	ldr	r0, .L1392+8
+	ldr	r0, .L1398+8
 	bl	printk
-.LVL1203:
-.L1383:
-	.loc 3 932 0 is_stmt 1
+.LVL1196:
+.L1389:
+	.loc 3 934 0 is_stmt 1
 	ldr	r3, [r5, #4]
-	sub	r1, fp, #44
-	.loc 3 933 0
+	sub	r1, fp, #40
+	.loc 3 935 0
 	mov	r2, #1
 	ldr	r0, [r5, #16]
-	.loc 3 932 0
+	.loc 3 934 0
 	str	r3, [r1, #-4]!
-.LVL1204:
-	.loc 3 933 0
-	bl	log2phys
-.LVL1205:
+.LVL1197:
 	.loc 3 935 0
+	bl	log2phys
+.LVL1198:
+	.loc 3 937 0
 	ldr	r3, [r5, #12]
 	ldr	r3, [r3, #12]
-.LVL1206:
-	.loc 3 937 0
+.LVL1199:
+	.loc 3 939 0
 	ubfx	r0, r3, #10, #16
-	str	r3, [fp, #-56]
+	str	r3, [fp, #-48]
 	bl	P2V_block_in_plane
-.LVL1207:
-	.loc 3 938 0
-	ldr	r3, [fp, #-56]
-.LVL1208:
-	.loc 3 937 0
+.LVL1200:
+	.loc 3 940 0
+	ldr	r3, [fp, #-48]
+.LVL1201:
+	.loc 3 939 0
 	mov	r8, r0
-	.loc 3 938 0
-	cmn	r3, #1
-	beq	.L1384
 	.loc 3 940 0
-	ldr	r2, [r6, #2260]
+	cmn	r3, #1
+	beq	.L1390
+	.loc 3 942 0
+	ldr	r2, [r6, #2300]
 	lsl	r3, r0, #1
-.LVL1209:
+.LVL1202:
 	ldrh	r2, [r2, r3]
 	cmp	r2, #0
-	bne	.L1385
-	.loc 3 941 0
+	bne	.L1391
+	.loc 3 943 0
 	mov	r1, r0
-	ldr	r0, .L1392+12
+	ldr	r0, .L1398+12
 	bl	printk
-.LVL1210:
-.L1385:
-	.loc 3 942 0
+.LVL1203:
+.L1391:
+	.loc 3 944 0
 	mov	r0, r8
 	bl	decrement_vpc_count
-.LVL1211:
-.L1384:
-	.loc 3 911 0 discriminator 2
+.LVL1204:
+.L1390:
+	.loc 3 913 0 discriminator 2
 	add	r7, r7, #1
 	add	r5, r5, #20
-	b	.L1379
-.LVL1212:
-.L1386:
-	.loc 3 946 0
+	b	.L1385
+.LVL1205:
+.L1392:
+	.loc 3 948 0
 	ldrb	r2, [r4, #6]	@ zero_extendqisi2
 	ldrh	r3, [r6, #8]
-.LVL1213:
+.LVL1206:
 	cmp	r2, r3
-	bcc	.L1378
-	.loc 3 946 0 is_stmt 0 discriminator 1
-	movw	r2, #946
-	ldr	r1, .L1392+4
-	ldr	r0, .L1392+8
+	bcc	.L1384
+	.loc 3 948 0 is_stmt 0 discriminator 1
+	mov	r2, #948
+	ldr	r1, .L1398+4
+	ldr	r0, .L1398+8
 	bl	printk
-.LVL1214:
-.L1378:
-	.loc 3 947 0 is_stmt 1
+.LVL1207:
+.L1384:
+	.loc 3 949 0 is_stmt 1
 	sub	sp, fp, #40
-.LCFI387:
+.LCFI377:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL1215:
-.L1393:
+.LVL1208:
+.L1399:
 	.align	2
-.L1392:
+.L1398:
 	.word	.LANCHOR0
 	.word	.LANCHOR1+519
 	.word	.LC1
-	.word	.LC99
-.LFE155:
-	.fnend
+	.word	.LC102
+.LFE165:
 	.size	FtlProgPages, .-FtlProgPages
 	.align	2
 	.global	FtlCacheWriteBack
@@ -16118,50 +15117,41 @@ FtlProgPages:
 	.fpu softvfp
 	.type	FtlCacheWriteBack, %function
 FtlCacheWriteBack:
-	.fnstart
-.LFB156:
-	.loc 3 950 0
+.LFB166:
+	.loc 3 952 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI388:
-	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI389:
-	.setfp fp, ip, #-4
+.LCFI378:
+	push	{r4, fp, ip, lr, pc}
+.LCFI379:
 	sub	fp, ip, #4
-.LCFI390:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 950 0
-	.loc 3 951 0
-	ldr	r4, .L1399
+.LCFI380:
+	.loc 3 953 0
+	ldr	r4, .L1405
 	ldr	r0, [r4, #3948]
 	cmp	r0, #0
-	beq	.L1395
-	.loc 3 952 0
-	ldr	r3, .L1399+4
+	beq	.L1401
+	.loc 3 954 0
+	ldr	r3, .L1405+4
 	mov	r2, #0
 	mov	r1, #1
 	ldr	r3, [r3, #-4076]
 	bl	FtlProgPages
-.LVL1216:
-	.loc 3 953 0
+.LVL1209:
+	.loc 3 955 0
 	mov	r3, #0
 	str	r3, [r4, #3948]
-.L1395:
-	.loc 3 956 0
+.L1401:
+	.loc 3 958 0
 	mov	r0, #0
-	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L1400:
+	ldmfd	sp, {r4, fp, sp, pc}
+.L1406:
 	.align	2
-.L1399:
+.L1405:
 	.word	.LANCHOR0
 	.word	.LANCHOR3
-.LFE156:
-	.fnend
+.LFE166:
 	.size	FtlCacheWriteBack, .-FtlCacheWriteBack
 	.align	2
 	.global	FtlSysFlush
@@ -16170,42 +15160,33 @@ FtlCacheWriteBack:
 	.fpu softvfp
 	.type	FtlSysFlush, %function
 FtlSysFlush:
-	.fnstart
-.LFB152:
+.LFB162:
 	.loc 3 797 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI391:
+.LCFI381:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI392:
-	.setfp fp, ip, #-4
+.LCFI382:
 	sub	fp, ip, #4
-.LCFI393:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 797 0
+.LCFI383:
 	.loc 3 798 0
 	bl	FtlCacheWriteBack
-.LVL1217:
+.LVL1210:
 	.loc 3 799 0
 	bl	l2p_flush
-.LVL1218:
+.LVL1211:
 	.loc 3 800 0
 	mov	r0, #1
 	bl	FtlEctTblFlush
-.LVL1219:
+.LVL1212:
 	.loc 3 801 0
 	bl	FtlVpcTblFlush
-.LVL1220:
+.LVL1213:
 	.loc 3 803 0
 	mov	r0, #0
 	ldmfd	sp, {fp, sp, pc}
-.LFE152:
-	.fnend
+.LFE162:
 	.size	FtlSysFlush, .-FtlSysFlush
 	.align	2
 	.global	sftl_deinit
@@ -16214,42 +15195,33 @@ FtlSysFlush:
 	.fpu softvfp
 	.type	sftl_deinit, %function
 sftl_deinit:
-	.fnstart
-.LFB153:
+.LFB163:
 	.loc 3 806 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI394:
+.LCFI384:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI395:
-	.setfp fp, ip, #-4
+.LCFI385:
 	sub	fp, ip, #4
-.LCFI396:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 806 0
+.LCFI386:
 	.loc 3 807 0
-	ldr	r3, .L1404
+	ldr	r3, .L1410
 	ldr	r3, [r3]
 	cmp	r3, #1
-	bne	.L1403
+	bne	.L1409
 	.loc 3 808 0
 	bl	FtlSysFlush
-.LVL1221:
-.L1403:
+.LVL1214:
+.L1409:
 	.loc 3 810 0
 	mov	r0, #0
 	ldmfd	sp, {fp, sp, pc}
-.L1405:
+.L1411:
 	.align	2
-.L1404:
+.L1410:
 	.word	.LANCHOR2
-.LFE153:
-	.fnend
+.LFE163:
 	.size	sftl_deinit, .-sftl_deinit
 	.align	2
 	.global	FtlDiscard
@@ -16258,167 +15230,157 @@ sftl_deinit:
 	.fpu softvfp
 	.type	FtlDiscard, %function
 FtlDiscard:
-	.fnstart
-.LFB158:
-	.loc 3 1154 0
+.LFB168:
+	.loc 3 1157 0
 	@ args = 0, pretend = 0, frame = 8
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL1222:
-	.movsp ip
+.LVL1215:
 	mov	ip, sp
-.LCFI397:
+.LCFI387:
 	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, fp, ip, lr}
-.LCFI398:
-	.setfp fp, ip, #-4
+.LCFI388:
 	sub	fp, ip, #4
-.LCFI399:
-	.pad #12
-	sub	sp, sp, #12
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 1154 0
-	.loc 3 1161 0
-	ldr	r6, .L1421
+.LCFI389:
+	sub	sp, sp, #8
+	.loc 3 1164 0
 	add	r2, r0, r1
-	.loc 3 1154 0
+	ldr	r6, .L1427
+	.loc 3 1157 0
 	mov	r7, r0
 	mov	r5, r1
-	.loc 3 1161 0
+	.loc 3 1164 0
 	ldr	r3, [r6, #116]
 	cmp	r2, r3
-	.loc 3 1162 0
+	.loc 3 1165 0
 	mvnhi	r0, #0
-.LVL1223:
-	.loc 3 1161 0
-	bhi	.L1406
+.LVL1216:
 	.loc 3 1164 0
+	bhi	.L1412
+	.loc 3 1167 0
 	cmp	r1, #31
-	bhi	.L1408
-.LVL1224:
-.L1413:
-	.loc 3 1165 0
+	bhi	.L1414
+.LVL1217:
+.L1419:
+	.loc 3 1168 0
 	mov	r0, #0
-.L1406:
-	.loc 3 1198 0
+.L1412:
+	.loc 3 1201 0
 	sub	sp, fp, #32
-.LCFI400:
+.LCFI390:
 	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
-.LVL1225:
-.L1408:
-.LCFI401:
-	.loc 3 1167 0
+.LVL1218:
+.L1414:
+.LCFI391:
+	.loc 3 1170 0
 	bl	FtlCacheWriteBack
-.LVL1226:
-	.loc 3 1169 0
+.LVL1219:
+	.loc 3 1172 0
 	ldrh	r4, [r6, #34]
 	mov	r0, r7
 	mov	r1, r4
-	bl	__aeabi_uidiv
-.LVL1227:
-	.loc 3 1170 0
+	bl	__udivsi3
+.LVL1220:
+	.loc 3 1173 0
 	smulbb	r3, r0, r4
-	.loc 3 1169 0
+	.loc 3 1172 0
 	mov	r8, r0
-.LVL1228:
-	.loc 3 1170 0
+.LVL1221:
+	.loc 3 1173 0
 	sub	r7, r7, r3
-.LVL1229:
+.LVL1222:
 	uxth	r7, r7
-.LVL1230:
-	.loc 3 1171 0
+.LVL1223:
+	.loc 3 1174 0
 	cmp	r7, #0
-	beq	.L1409
-	.loc 3 1172 0
+	beq	.L1415
+	.loc 3 1175 0
 	sub	r4, r4, r7
-	.loc 3 1173 0
+	.loc 3 1176 0
 	add	r8, r0, #1
-	.loc 3 1172 0
+	.loc 3 1175 0
 	cmp	r4, r5
 	movcs	r4, r5
 	uxth	r4, r4
-	.loc 3 1174 0
-	sub	r5, r5, r4
-.L1409:
-	.loc 3 1181 0
-	ldr	r4, .L1421+4
 	.loc 3 1177 0
+	sub	r5, r5, r4
+.L1415:
+	.loc 3 1184 0
+	ldr	r4, .L1427+4
+	.loc 3 1180 0
 	mvn	r3, #0
-	str	r3, [fp, #-40]
-.LVL1231:
-.L1410:
-	.loc 3 1178 0
+	str	r3, [fp, #-36]
+.LVL1224:
+.L1416:
+	.loc 3 1181 0
 	ldrh	r3, [r6, #34]
 	cmp	r5, r3
-	bcs	.L1412
-	.loc 3 1191 0
-	ldr	r3, .L1421+4
+	bcs	.L1418
+	.loc 3 1194 0
+	ldr	r3, .L1427+4
 	ldr	r2, [r3, #-4072]
 	cmp	r2, #32
-	bls	.L1413
-	.loc 3 1193 0
+	bls	.L1419
+	.loc 3 1196 0
 	mov	r4, #0
 	str	r4, [r3, #-4072]
-	.loc 3 1194 0
+	.loc 3 1197 0
 	bl	l2p_flush
-.LVL1232:
-	.loc 3 1195 0
+.LVL1225:
+	.loc 3 1198 0
 	bl	FtlVpcTblFlush
-.LVL1233:
-	b	.L1413
-.L1412:
-	.loc 3 1179 0
+.LVL1226:
+	b	.L1419
+.L1418:
+	.loc 3 1182 0
 	mov	r2, #0
-	sub	r1, fp, #44
+	sub	r1, fp, #40
 	mov	r0, r8
 	bl	log2phys
-.LVL1234:
-	.loc 3 1180 0
-	ldr	r3, [fp, #-44]
+.LVL1227:
+	.loc 3 1183 0
+	ldr	r3, [fp, #-40]
 	cmn	r3, #1
-	beq	.L1411
-	.loc 3 1181 0
+	beq	.L1417
+	.loc 3 1184 0
 	ldr	r3, [r4, #-4072]
-	.loc 3 1183 0
+	.loc 3 1186 0
 	mov	r2, #1
-	sub	r1, fp, #40
+	sub	r1, fp, #36
 	mov	r0, r8
-	.loc 3 1181 0
+	.loc 3 1184 0
 	add	r3, r3, #1
 	str	r3, [r4, #-4072]
-	.loc 3 1182 0
-	ldr	r3, [r6, #2444]
+	.loc 3 1185 0
+	ldr	r3, [r6, #2488]
 	add	r3, r3, #1
-	str	r3, [r6, #2444]
-	.loc 3 1183 0
+	str	r3, [r6, #2488]
+	.loc 3 1186 0
 	bl	log2phys
-.LVL1235:
-	.loc 3 1184 0
-	ldr	r0, [fp, #-44]
-.LVL1236:
+.LVL1228:
+	.loc 3 1187 0
+	ldr	r0, [fp, #-40]
+.LVL1229:
 	ubfx	r0, r0, #10, #16
-.LVL1237:
+.LVL1230:
 	bl	P2V_block_in_plane
-.LVL1238:
-	.loc 3 1185 0
-	bl	decrement_vpc_count
-.LVL1239:
-.L1411:
+.LVL1231:
 	.loc 3 1188 0
+	bl	decrement_vpc_count
+.LVL1232:
+.L1417:
+	.loc 3 1191 0
 	ldrh	r3, [r6, #34]
-	.loc 3 1187 0
+	.loc 3 1190 0
 	add	r8, r8, #1
-	.loc 3 1188 0
+	.loc 3 1191 0
 	sub	r5, r5, r3
-	b	.L1410
-.L1422:
+	b	.L1416
+.L1428:
 	.align	2
-.L1421:
+.L1427:
 	.word	.LANCHOR0
 	.word	.LANCHOR3
-.LFE158:
-	.fnend
+.LFE168:
 	.size	FtlDiscard, .-FtlDiscard
 	.align	2
 	.global	FtlGcFreeTempBlock
@@ -16427,94 +15389,81 @@ FtlDiscard:
 	.fpu softvfp
 	.type	FtlGcFreeTempBlock, %function
 FtlGcFreeTempBlock:
-	.fnstart
-.LFB248:
+.LFB258:
 	.loc 5 112 0
-	@ args = 0, pretend = 0, frame = 8
+	@ args = 0, pretend = 0, frame = 4
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL1240:
-	.movsp ip
+.LVL1233:
 	mov	ip, sp
-.LCFI402:
+.LCFI392:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI403:
-	.setfp fp, ip, #-4
+.LCFI393:
 	sub	fp, ip, #4
-.LCFI404:
-	.pad #12
-	sub	sp, sp, #12
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 5 112 0
+.LCFI394:
+	sub	sp, sp, #4
+	.loc 5 119 0
+	movw	r3, #2420
 	.loc 5 115 0
-	ldr	r4, .L1449
+	ldr	r4, .L1455
 	.loc 5 119 0
-	movw	r3, #2376
 	movw	r2, #65535
 	ldrh	r5, [r4, r3]
 	.loc 5 115 0
 	ldrh	r1, [r4, #78]
-.LVL1241:
+.LVL1234:
 	.loc 5 119 0
 	cmp	r5, r2
-	bne	.L1424
-.LVL1242:
-.L1434:
+	bne	.L1430
+.LVL1235:
+.L1440:
 	.loc 5 152 0
 	mov	r3, #0
 	str	r3, [r4, #3960]
 	.loc 5 153 0
-	movw	r3, #2376
+	movw	r3, #2420
 	ldrh	r2, [r4, r3]
 	movw	r3, #65535
 	cmp	r2, r3
-	bne	.L1447
-.L1425:
+	bne	.L1453
+.L1431:
 	.loc 5 154 0
 	mov	r0, #0
-.LVL1243:
-.L1423:
-	.loc 5 199 0
-	sub	sp, fp, #40
-.LCFI405:
-	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL1244:
-.L1424:
-.LCFI406:
+.LVL1236:
+	ldmib	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL1237:
+.L1430:
 	.loc 5 121 0
 	cmp	r0, #0
-	beq	.L1427
+	beq	.L1433
 	.loc 5 123 0
-	ldr	r3, .L1449+4
+	ldr	r3, .L1455+4
 	ldrh	r0, [r3, #4]
-.LVL1245:
+.LVL1238:
 	cmp	r0, r2
-	beq	.L1428
-.L1429:
+	beq	.L1434
+.L1435:
 	.loc 5 122 0
 	mov	r1, #2
-.LVL1246:
-.L1427:
+.LVL1239:
+.L1433:
 	.loc 5 131 0
-	ldr	r0, .L1449+8
-.LVL1247:
+	ldr	r0, .L1455+8
+.LVL1240:
 	bl	FtlGcScanTempBlk
-.LVL1248:
+.LVL1241:
 	.loc 5 132 0
 	cmn	r0, #1
 	.loc 5 131 0
-	str	r0, [fp, #-48]
-.LVL1249:
+	str	r0, [fp, #-44]
+.LVL1242:
 	.loc 5 132 0
-	beq	.L1430
+	beq	.L1436
 	.loc 5 135 0
-	ldr	r2, [r4, #2248]
+	ldr	r2, [r4, #2304]
 	lsl	r5, r5, #1
 	ldrh	r3, [r2, r5]
 	cmp	r3, #4
-	bls	.L1431
+	bls	.L1437
 	.loc 5 136 0
 	sub	r3, r3, #5
 	.loc 5 137 0
@@ -16523,197 +15472,200 @@ FtlGcFreeTempBlock:
 	strh	r3, [r2, r5]	@ movhi
 	.loc 5 137 0
 	bl	FtlEctTblFlush
-.LVL1250:
-.L1431:
+.LVL1243:
+.L1437:
 	.loc 5 139 0
 	ldr	r3, [r4, #3960]
 	cmp	r3, #0
-	bne	.L1432
+	bne	.L1438
 	.loc 5 140 0
-	ldr	r3, [r4, #2712]
+	ldr	r3, [r4, #2708]
 	.loc 5 141 0
-	ldr	r0, [fp, #-48]
+	ldr	r0, [fp, #-44]
 	.loc 5 140 0
 	add	r3, r3, #1
 	.loc 5 141 0
 	ubfx	r0, r0, #10, #16
 	.loc 5 140 0
-	str	r3, [r4, #2712]
+	str	r3, [r4, #2708]
 	.loc 5 141 0
 	bl	FtlBbmMapBadBlock
-.LVL1251:
+.LVL1244:
 	.loc 5 142 0
 	bl	FtlBbmTblFlush
-.LVL1252:
-.L1432:
+.LVL1245:
+.L1438:
 	.loc 5 144 0
 	mov	r3, #0
 	str	r3, [r4, #3960]
-.L1443:
+.L1449:
 	.loc 5 149 0
 	mov	r0, #1
-	b	.L1423
-.LVL1253:
-.L1428:
+	.loc 5 199 0
+	ldmib	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL1246:
+.L1434:
 	.loc 5 124 0
 	mov	r2, #0
 	strh	r2, [r3, #4]	@ movhi
 	.loc 5 125 0
-	movw	r3, #2276
-	ldrh	r3, [r4, r3]
+	add	r3, r4, #2320
+	ldrh	r3, [r3]
 	cmp	r3, #17
-	bhi	.L1429
-	b	.L1427
-.LVL1254:
-.L1430:
+	bhi	.L1435
+	b	.L1433
+.LVL1247:
+.L1436:
 	.loc 5 148 0
-	ldr	r3, .L1449+4
+	ldr	r3, .L1455+4
 	ldrh	r2, [r3, #4]
 	movw	r3, #65535
 	cmp	r2, r3
-	bne	.L1443
-	b	.L1434
-.LVL1255:
-.L1447:
+	bne	.L1449
+	b	.L1440
+.LVL1248:
+.L1453:
 	.loc 5 160 0
 	bl	FtlCacheWriteBack
-.LVL1256:
+.LVL1249:
 	.loc 5 162 0
-	movw	r3, #3180
-	ldrb	r1, [r4, #2383]	@ zero_extendqisi2
+	movw	r3, #3176
+	ldrb	r1, [r4, #2427]	@ zero_extendqisi2
 	ldrh	r2, [r4, r3]
 	ldrh	r3, [r4, #78]
 	mul	r3, r3, r1
 	cmp	r2, r3
-	beq	.L1435
+	beq	.L1441
 	.loc 5 162 0 is_stmt 0 discriminator 1
 	mov	r2, #162
-	ldr	r1, .L1449+12
-	ldr	r0, .L1449+16
+	ldr	r1, .L1455+12
+	ldr	r0, .L1455+16
 	bl	printk
-.LVL1257:
-.L1435:
+.LVL1250:
+.L1441:
 	.loc 5 163 0 is_stmt 1
-	ldrb	r2, [r4, #2383]	@ zero_extendqisi2
-	movw	r3, #2376
+	ldrb	r2, [r4, #2427]	@ zero_extendqisi2
+	movw	r3, #2420
 	ldrh	r0, [r4, #78]
 	.loc 5 165 0
 	mov	r6, #0
 	.loc 5 163 0
 	ldrh	r3, [r4, r3]
-	ldr	r1, [r4, #2260]
+	ldr	r1, [r4, #2300]
 	.loc 5 165 0
-	ldr	r9, .L1449+20
+	ldr	r9, .L1455+20
 	.loc 5 163 0
 	smulbb	r2, r2, r0
 	.loc 5 168 0
-	ldr	r10, .L1449+12
+	ldr	r10, .L1455+12
 	.loc 5 163 0
 	lsl	r3, r3, #1
 	strh	r2, [r1, r3]	@ movhi
 	.loc 5 164 0
-	movw	r3, #3180
-	ldr	r2, [r4, #2460]
+	movw	r3, #3176
+	ldr	r2, [r4, #2504]
 	ldrh	r3, [r4, r3]
 	add	r3, r3, r2
-	str	r3, [r4, #2460]
-.LVL1258:
-.L1436:
+	str	r3, [r4, #2504]
+.LVL1251:
+.L1442:
 	.loc 5 165 0 discriminator 1
 	ldrh	r2, [r9]
 	uxth	r3, r6
 	cmp	r2, r3
-	bhi	.L1440
+	bhi	.L1446
 	.loc 5 181 0
 	movw	r0, #65535
 	bl	decrement_vpc_count
-.LVL1259:
+.LVL1252:
 	.loc 5 182 0
-	movw	r3, #2376
-	ldr	r1, [r4, #2260]
+	movw	r3, #2420
+	ldr	r1, [r4, #2300]
 	ldrh	r0, [r4, r3]
 	mov	r5, r3
-.LVL1260:
+.LVL1253:
 	lsl	r2, r0, #1
 	ldrh	r2, [r1, r2]
 	cmp	r2, #0
-	beq	.L1441
+	beq	.L1447
 	.loc 5 183 0
 	bl	INSERT_DATA_LIST
-.LVL1261:
-.L1442:
+.LVL1254:
+.L1448:
+	.loc 5 188 0
+	ldr	r6, .L1455+24
 	.loc 5 186 0
-	mvn	r6, #0
+	mvn	r7, #0
 	.loc 5 187 0
-	movw	r3, #3180
+	movw	r3, #3176
 	.loc 5 186 0
-	strh	r6, [r4, r5]	@ movhi
+	strh	r7, [r4, r5]	@ movhi
 	.loc 5 187 0
 	mov	r5, #0
 	strh	r5, [r4, r3]	@ movhi
 	.loc 5 188 0
-	movw	r3, #3172
-	strh	r5, [r4, r3]	@ movhi
+	strh	r5, [r6]	@ movhi
+	.loc 5 191 0
+	sub	r6, r6, #848
 	.loc 5 189 0
 	bl	l2p_flush
-.LVL1262:
+.LVL1255:
 	.loc 5 190 0
 	bl	FtlVpcTblFlush
-.LVL1263:
+.LVL1256:
 	.loc 5 191 0
-	movw	r3, #2276
-	ldrh	r2, [r4, r3]
-	movw	r3, #2552
+	movw	r3, #2548
+	ldrh	r2, [r6]
 	ldrh	r3, [r4, r3]
 	add	r3, r3, r3, lsl #1
 	cmp	r2, r3, asr #2
 	.loc 5 192 0
-	movwgt	r3, #2568
+	movwgt	r3, #2564
 	.loc 5 193 0
 	movgt	r2, #20
 	.loc 5 192 0
-	strhgt	r6, [r4, r3]	@ movhi
+	strhgt	r7, [r4, r3]	@ movhi
 	.loc 5 193 0
-	movwgt	r3, #3128
+	movwgt	r3, #3124
 	strhgt	r2, [r4, r3]	@ movhi
-	b	.L1425
-.LVL1264:
-.L1440:
+	b	.L1431
+.LVL1257:
+.L1446:
 	.loc 5 166 0
 	uxth	r3, r6
 	mov	r7, #12
-	ldr	r8, [r4, #3176]
+	ldr	r8, [r4, #3172]
 	mul	r7, r7, r3
 	.loc 5 168 0
-	ldr	r3, [r4, #2436]
+	ldr	r3, [r4, #2480]
 	.loc 5 166 0
 	add	r5, r8, r7
 	.loc 5 168 0
 	ldr	r2, [r5, #8]
 	cmp	r2, r3
-	bcc	.L1437
+	bcc	.L1443
 	.loc 5 168 0 is_stmt 0 discriminator 1
 	mov	r2, #168
 	mov	r1, r10
-	ldr	r0, .L1449+16
+	ldr	r0, .L1455+16
 	bl	printk
-.LVL1265:
-.L1437:
+.LVL1258:
+.L1443:
 	.loc 5 169 0 is_stmt 1
 	mov	r2, #0
-	sub	r1, fp, #48
+	sub	r1, fp, #44
 	ldr	r0, [r5, #8]
 	bl	log2phys
-.LVL1266:
+.LVL1259:
 	.loc 5 170 0
-	ldr	r3, [fp, #-48]
+	ldr	r3, [fp, #-44]
 	ldr	r0, [r8, r7]
 	cmp	r0, r3
-	bne	.L1438
+	bne	.L1444
 	.loc 5 171 0
 	ubfx	r0, r0, #10, #16
 	bl	P2V_block_in_plane
-.LVL1267:
+.LVL1260:
 	.loc 5 172 0
 	mov	r2, #1
 	.loc 5 171 0
@@ -16722,42 +15674,42 @@ FtlGcFreeTempBlock:
 	add	r1, r5, #4
 	ldr	r0, [r5, #8]
 	bl	log2phys
-.LVL1268:
+.LVL1261:
 	.loc 5 173 0
 	mov	r0, r7
-.L1448:
+.L1454:
 	.loc 5 177 0
 	bl	decrement_vpc_count
-.LVL1269:
-.L1439:
+.LVL1262:
+.L1445:
 	add	r6, r6, #1
-	b	.L1436
-.L1438:
+	b	.L1442
+.L1444:
 	.loc 5 175 0
 	ldr	r2, [r5, #4]
 	cmp	r3, r2
-	beq	.L1439
+	beq	.L1445
 	.loc 5 177 0
-	ldr	r3, .L1449+8
+	ldr	r3, .L1455+8
 	ldrh	r0, [r3]
-	b	.L1448
-.LVL1270:
-.L1441:
+	b	.L1454
+.LVL1263:
+.L1447:
 	.loc 5 185 0
 	bl	INSERT_FREE_LIST
-.LVL1271:
-	b	.L1442
-.L1450:
+.LVL1264:
+	b	.L1448
+.L1456:
 	.align	2
-.L1449:
+.L1455:
 	.word	.LANCHOR0
 	.word	.LANCHOR2
-	.word	.LANCHOR0+2376
+	.word	.LANCHOR0+2420
 	.word	.LANCHOR1+532
 	.word	.LC1
-	.word	.LANCHOR0+3180
-.LFE248:
-	.fnend
+	.word	.LANCHOR0+3176
+	.word	.LANCHOR0+3168
+.LFE258:
 	.size	FtlGcFreeTempBlock, .-FtlGcFreeTempBlock
 	.align	2
 	.global	FtlGcPageRecovery
@@ -16766,59 +15718,51 @@ FtlGcFreeTempBlock:
 	.fpu softvfp
 	.type	FtlGcPageRecovery, %function
 FtlGcPageRecovery:
-	.fnstart
-.LFB251:
+.LFB261:
 	.loc 5 289 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI407:
+.LCFI395:
 	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI408:
-	.setfp fp, ip, #-4
+.LCFI396:
 	sub	fp, ip, #4
-.LCFI409:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 5 289 0
+.LCFI397:
 	.loc 5 290 0
-	ldr	r4, .L1453
-	ldr	r5, .L1453+4
+	ldr	r4, .L1459
+	ldr	r5, .L1459+4
 	ldrh	r1, [r4, #78]
 	mov	r0, r5
 	bl	FtlGcScanTempBlk
-.LVL1272:
+.LVL1265:
 	.loc 5 291 0
 	ldrh	r2, [r5, #2]
 	ldrh	r3, [r4, #78]
 	cmp	r2, r3
 	ldmfdcc	sp, {r4, r5, fp, sp, pc}
-.LBB492:
-.LBB493:
+.LBB515:
+.LBB516:
 	.loc 5 293 0
-	add	r0, r5, #1488
+	ldr	r0, .L1459+8
 	bl	FtlMapBlkWriteDump_data
-.LVL1273:
+.LVL1266:
 	.loc 5 294 0
 	mov	r0, #0
 	bl	FtlGcFreeTempBlock
-.LVL1274:
+.LVL1267:
 	.loc 5 295 0
 	mov	r3, #0
 	str	r3, [r4, #3960]
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L1454:
+.L1460:
 	.align	2
-.L1453:
+.L1459:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+2376
-.LBE493:
-.LBE492:
-.LFE251:
-	.fnend
+	.word	.LANCHOR0+2420
+	.word	.LANCHOR0+3864
+.LBE516:
+.LBE515:
+.LFE261:
 	.size	FtlGcPageRecovery, .-FtlGcPageRecovery
 	.align	2
 	.global	FtlPowerLostRecovery
@@ -16827,70 +15771,61 @@ FtlGcPageRecovery:
 	.fpu softvfp
 	.type	FtlPowerLostRecovery, %function
 FtlPowerLostRecovery:
-	.fnstart
-.LFB223:
-	.loc 2 2032 0
+.LFB233:
+	.loc 2 2081 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI410:
-	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI411:
-	.setfp fp, ip, #-4
+.LCFI398:
+	push	{r4, r5, r6, fp, ip, lr, pc}
+.LCFI399:
 	sub	fp, ip, #4
-.LCFI412:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2032 0
-	.loc 2 2033 0
+.LCFI400:
+	.loc 2 2082 0
+	ldr	r4, .L1462
 	mov	r6, #0
-	ldr	r4, .L1456
-	.loc 2 2035 0
-	add	r5, r4, #2272
-	.loc 2 2033 0
+	.loc 2 2084 0
+	add	r5, r4, #2320
+	.loc 2 2082 0
 	str	r6, [r4, #3972]
-	.loc 2 2035 0
-	add	r5, r5, #8
-	.loc 2 2037 0
-	add	r4, r4, #2320
-	.loc 2 2035 0
+	.loc 2 2084 0
+	add	r5, r5, #4
+	.loc 2 2086 0
+	add	r4, r4, #2368
+	.loc 2 2084 0
 	mov	r0, r5
-	.loc 2 2037 0
-	add	r4, r4, #8
-	.loc 2 2035 0
+	.loc 2 2086 0
+	add	r4, r4, #4
+	.loc 2 2084 0
 	bl	FtlRecoverySuperblock
-.LVL1275:
-	.loc 2 2036 0
+.LVL1268:
+	.loc 2 2085 0
 	mov	r0, r5
 	bl	FtlSlcSuperblockCheck
-.LVL1276:
-	.loc 2 2037 0
+.LVL1269:
+	.loc 2 2086 0
 	mov	r0, r4
 	bl	FtlRecoverySuperblock
-.LVL1277:
-	.loc 2 2038 0
+.LVL1270:
+	.loc 2 2087 0
 	mov	r0, r4
 	bl	FtlSlcSuperblockCheck
-.LVL1278:
-	.loc 2 2039 0
+.LVL1271:
+	.loc 2 2088 0
 	bl	FtlGcPageRecovery
-.LVL1279:
-	.loc 2 2040 0
+.LVL1272:
+	.loc 2 2089 0
 	movw	r0, #65535
 	bl	decrement_vpc_count
-.LVL1280:
-	.loc 2 2042 0
+.LVL1273:
+	.loc 2 2091 0
 	mov	r0, r6
-	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L1457:
+	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
+.L1463:
 	.align	2
-.L1456:
+.L1462:
 	.word	.LANCHOR0
-.LFE223:
-	.fnend
+.LFE233:
 	.size	FtlPowerLostRecovery, .-FtlPowerLostRecovery
 	.align	2
 	.global	Ftl_gc_temp_data_write_back
@@ -16899,63 +15834,54 @@ FtlPowerLostRecovery:
 	.fpu softvfp
 	.type	Ftl_gc_temp_data_write_back, %function
 Ftl_gc_temp_data_write_back:
-	.fnstart
-.LFB253:
+.LFB263:
 	.loc 5 316 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI413:
-	push	{r4, r5, r6, r7, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, fp, ip, lr}
-.LCFI414:
-	.setfp fp, ip, #-4
+.LCFI401:
+	push	{r4, r5, r6, fp, ip, lr, pc}
+.LCFI402:
 	sub	fp, ip, #4
-.LCFI415:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 5 316 0
+.LCFI403:
 	.loc 5 320 0
+	ldr	r4, .L1471
 	mov	r3, #0
 	.loc 5 321 0
 	mov	r5, #0
-	.loc 5 320 0
-	ldr	r4, .L1465
 	.loc 5 322 0
 	mov	r6, #20
 	.loc 5 320 0
 	mov	r2, r3
-	ldr	r1, [r4, #3144]
+	ldr	r1, [r4, #3140]
 	ldr	r0, [r4, #3796]
 	bl	FlashProgPages
-.LVL1281:
-.L1459:
+.LVL1274:
+.L1465:
 	.loc 5 321 0 discriminator 1
-	ldr	r1, [r4, #3144]
+	ldr	r1, [r4, #3140]
 	uxth	r3, r5
 	cmp	r1, r3
-	bhi	.L1462
+	bhi	.L1468
 	.loc 5 335 0
 	ldr	r0, [r4, #3796]
 	bl	FtlGcBufFree
-.LVL1282:
+.LVL1275:
 	.loc 5 337 0
-	ldr	r3, .L1465+4
+	ldr	r3, .L1471+4
 	.loc 5 336 0
 	mov	r0, #0
-	str	r0, [r4, #3144]
+	str	r0, [r4, #3140]
 	.loc 5 337 0
 	ldrh	r3, [r3, #4]
 	cmp	r3, r0
-	ldmfdne	sp, {r4, r5, r6, r7, fp, sp, pc}
+	ldmfdne	sp, {r4, r5, r6, fp, sp, pc}
 	.loc 5 338 0
 	mov	r0, #1
 	bl	FtlGcFreeTempBlock
-.LVL1283:
-	b	.L1464
-.L1462:
+.LVL1276:
+	b	.L1470
+.L1468:
 	.loc 5 322 0
 	mul	r3, r6, r3
 	ldr	r2, [r4, #3796]
@@ -16963,57 +15889,56 @@ Ftl_gc_temp_data_write_back:
 	ldr	r0, [r2, r3]
 	add	r1, r2, r3
 	cmn	r0, #1
-	bne	.L1460
+	bne	.L1466
 	.loc 5 323 0
-	movw	r1, #2376
-	ldr	ip, [r4, #2260]
+	movw	r1, #2420
+	ldr	ip, [r4, #2300]
 	ldrh	r2, [r4, r1]
 	mov	lr, #0
 	lsl	r2, r2, #1
 	strh	lr, [ip, r2]	@ movhi
 	.loc 5 325 0
-	ldr	r2, [r4, #2712]
+	ldr	r2, [r4, #2708]
 	.loc 5 324 0
 	strh	r0, [r4, r1]	@ movhi
 	.loc 5 325 0
 	add	r2, r2, #1
-	str	r2, [r4, #2712]
+	str	r2, [r4, #2708]
 	.loc 5 326 0
 	ldr	r2, [r4, #3796]
 	add	r3, r2, r3
 	ldr	r0, [r3, #4]
 	ubfx	r0, r0, #10, #16
 	bl	FtlBbmMapBadBlock
-.LVL1284:
+.LVL1277:
 	.loc 5 327 0
 	bl	FtlBbmTblFlush
-.LVL1285:
+.LVL1278:
 	.loc 5 328 0
 	bl	FtlGcPageVarInit
-.LVL1286:
-.L1464:
+.LVL1279:
+.L1470:
 	.loc 5 339 0
 	mov	r0, #1
 	.loc 5 342 0
-	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
-.L1460:
+	ldmfd	sp, {r4, r5, r6, fp, sp, pc}
+.L1466:
 	.loc 5 331 0 discriminator 2
 	ldr	r3, [r1, #12]
-.LVL1287:
+.LVL1280:
 	.loc 5 332 0 discriminator 2
 	ldr	r1, [r1, #4]
 	ldr	r2, [r3, #8]
 	ldr	r0, [r3, #12]
 	bl	FtlGcUpdatePage
-.LVL1288:
-	b	.L1459
-.L1466:
+.LVL1281:
+	b	.L1465
+.L1472:
 	.align	2
-.L1465:
+.L1471:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+2376
-.LFE253:
-	.fnend
+	.word	.LANCHOR0+2420
+.LFE263:
 	.size	Ftl_gc_temp_data_write_back, .-Ftl_gc_temp_data_write_back
 	.align	2
 	.global	Ftl_get_new_temp_ppa
@@ -17022,84 +15947,76 @@ Ftl_gc_temp_data_write_back:
 	.fpu softvfp
 	.type	Ftl_get_new_temp_ppa, %function
 Ftl_get_new_temp_ppa:
-	.fnstart
-.LFB252:
+.LFB262:
 	.loc 5 300 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI416:
+.LCFI404:
 	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI417:
-	.setfp fp, ip, #-4
+.LCFI405:
 	sub	fp, ip, #4
-.LCFI418:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 5 300 0
+.LCFI406:
 	.loc 5 301 0
-	movw	r3, #2376
-	ldr	r4, .L1470
+	ldr	r4, .L1476
+	movw	r3, #2420
 	ldrh	r2, [r4, r3]
 	movw	r3, #65535
 	cmp	r2, r3
-	beq	.L1468
+	beq	.L1474
 	.loc 5 301 0 is_stmt 0 discriminator 1
-	ldr	r3, .L1470+4
+	ldr	r3, .L1476+4
 	ldrh	r3, [r3, #4]
 	cmp	r3, #0
-	bne	.L1469
-.L1468:
+	bne	.L1475
+.L1474:
 	.loc 5 302 0 is_stmt 1
 	bl	FtlCacheWriteBack
-.LVL1289:
+.LVL1282:
 	.loc 5 303 0
 	mov	r0, #0
 	.loc 5 304 0
 	mov	r5, #0
 	.loc 5 303 0
 	bl	FtlGcFreeTempBlock
-.LVL1290:
+.LVL1283:
 	.loc 5 305 0
-	ldr	r0, .L1470+4
+	ldr	r0, .L1476+4
 	.loc 5 304 0
-	strb	r5, [r4, #2384]
+	strb	r5, [r4, #2428]
 	.loc 5 305 0
 	bl	allocate_data_superblock
-.LVL1291:
+.LVL1284:
 	.loc 5 306 0
-	movw	r3, #3172
-	strh	r5, [r4, r3]	@ movhi
+	ldr	r3, .L1476+8
+	strh	r5, [r3]	@ movhi
 	.loc 5 307 0
-	movw	r3, #3180
+	movw	r3, #3176
 	strh	r5, [r4, r3]	@ movhi
 	.loc 5 308 0
 	bl	l2p_flush
-.LVL1292:
+.LVL1285:
 	.loc 5 309 0
 	mov	r0, r5
 	bl	FtlEctTblFlush
-.LVL1293:
+.LVL1286:
 	.loc 5 310 0
 	bl	FtlVpcTblFlush
-.LVL1294:
-.L1469:
+.LVL1287:
+.L1475:
 	.loc 5 312 0
-	ldr	r0, .L1470+4
+	ldr	r0, .L1476+4
 	bl	get_new_active_ppa
-.LVL1295:
+.LVL1288:
 	.loc 5 313 0
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L1471:
+.L1477:
 	.align	2
-.L1470:
+.L1476:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+2376
-.LFE252:
-	.fnend
+	.word	.LANCHOR0+2420
+	.word	.LANCHOR0+3168
+.LFE262:
 	.size	Ftl_get_new_temp_ppa, .-Ftl_get_new_temp_ppa
 	.align	2
 	.global	rk_ftl_garbage_collect
@@ -17108,1081 +16025,1057 @@ Ftl_get_new_temp_ppa:
 	.fpu softvfp
 	.type	rk_ftl_garbage_collect, %function
 rk_ftl_garbage_collect:
-	.fnstart
-.LFB259:
+.LFB269:
 	.loc 5 470 0
-	@ args = 0, pretend = 0, frame = 32
+	@ args = 0, pretend = 0, frame = 28
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL1296:
-	.movsp ip
+.LVL1289:
 	mov	ip, sp
-.LCFI419:
+.LCFI407:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI420:
-	.setfp fp, ip, #-4
+.LCFI408:
 	sub	fp, ip, #4
-.LCFI421:
-	.pad #44
-	sub	sp, sp, #44
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 5 470 0
-	.loc 5 478 0
-	ldr	r3, .L1584
+.LCFI409:
+	sub	sp, sp, #36
 	.loc 5 470 0
-	mov	r5, r0
+	mov	r6, r0
 	.loc 5 478 0
+	ldr	r3, .L1591
 	ldr	r0, [r3, #3780]
-.LVL1297:
-	mov	r6, r3
+.LVL1290:
+	mov	r5, r3
 	cmp	r0, #0
 	.loc 5 479 0
 	movne	r0, #0
 	.loc 5 478 0
-	bne	.L1472
+	bne	.L1478
 	.loc 5 481 0
-	movw	r2, #2268
+	movw	r2, #2312
 	ldrh	r2, [r3, r2]
 	cmp	r2, #47
-	bls	.L1472
+	bls	.L1478
 	.loc 5 485 0
-	ldr	r2, .L1584+4
+	ldr	r2, .L1591+4
 	ldrh	r1, [r2, #4]
-.LVL1298:
+.LVL1291:
 	movw	r2, #65535
 	cmp	r1, r2
-	bne	.L1474
-.L1477:
-.LBB497:
-.LBB498:
+	bne	.L1480
+.L1483:
+.LBB520:
+.LBB521:
 	.loc 5 489 0
-	ldr	r3, .L1584+8
+	movw	r3, #3180
 	movw	r0, #65535
-	ldrh	r1, [r3]
+	ldrh	r1, [r5, r3]
 	cmp	r1, r0
-	bne	.L1475
-.L1476:
+	bne	.L1481
+.L1482:
 	.loc 5 496 0
-	ldr	r3, [r6, #3132]
+	ldr	r3, [r5, #3128]
 	.loc 5 497 0
-	movw	r2, #2568
-	ldrh	r2, [r6, r2]
+	movw	r2, #2564
+	ldrh	r2, [r5, r2]
 	movw	r4, #65535
 	.loc 5 496 0
 	add	r3, r3, #1
-	add	r3, r3, r5, lsl #7
+	add	r3, r3, r6, lsl #7
 	.loc 5 497 0
 	cmp	r2, r4
 	.loc 5 496 0
-	str	r3, [r6, #3132]
+	str	r3, [r5, #3128]
 	.loc 5 497 0
-	bne	.L1478
-	movw	r1, #2376
-	ldrh	r4, [r6, r1]
+	bne	.L1484
+	movw	r1, #2420
+	ldrh	r4, [r5, r1]
 	cmp	r4, r2
 	.loc 5 473 0
 	movne	r4, r2
 	.loc 5 497 0
-	bne	.L1478
-	movw	r2, #3182
-	ldrh	r7, [r6, r2]
-	cmp	r7, r4
-	bne	.L1478
+	bne	.L1484
+	movw	r2, #3178
+	ldrh	r8, [r5, r2]
+	cmp	r8, r4
+	bne	.L1484
 	.loc 5 498 0
-	movw	r10, #2276
-	ldrh	r2, [r6, r10]
+	ldr	r7, .L1591+8
+	ldrh	r2, [r7]
 	cmp	r2, #24
 	movcc	r2, #5120
 	movcs	r2, #1024
 	cmp	r3, r2
 	.loc 5 473 0
-	movls	r4, r7
+	movls	r4, r8
 	.loc 5 498 0
-	bls	.L1478
-.LBB499:
+	bls	.L1484
+.LBB522:
 	.loc 5 502 0
-	ldr	r3, .L1584+12
+	ldr	r3, .L1591+12
 	.loc 5 501 0
-	mov	r9, #0
-	str	r9, [r6, #3132]
+	mov	r10, #0
+	str	r10, [r5, #3128]
 	.loc 5 502 0
-	strh	r9, [r3, #-4]	@ movhi
+	strh	r10, [r3, #-4]	@ movhi
 	.loc 5 503 0
 	bl	GetSwlReplaceBlock
-.LVL1299:
+.LVL1292:
 	.loc 5 504 0
-	cmp	r0, r7
+	cmp	r0, r8
 	.loc 5 503 0
 	mov	r4, r0
 	.loc 5 504 0
-	movne	r7, r0
-	bne	.L1480
+	movne	r8, r0
+	bne	.L1486
 	.loc 5 505 0
-	movw	r8, #3130
-	ldrh	r2, [r6, r10]
-	ldrh	r3, [r6, r8]
+	movw	r9, #3126
+	ldrh	r2, [r7]
+	ldrh	r3, [r5, r9]
 	cmp	r2, r3
-	bcs	.L1481
+	bcs	.L1487
 	.loc 5 506 0
 	mov	r0, #64
 	bl	List_get_gc_head_node
-.LVL1300:
+.LVL1293:
 	.loc 5 507 0
 	uxth	r3, r0
 	cmp	r3, r4
-	beq	.L1483
+	beq	.L1489
 	.loc 5 508 0
 	mov	r0, r3
-	ldr	r3, [r6, #2260]
+	ldr	r3, [r5, #2300]
 	lsl	r0, r0, #1
 	ldrh	r3, [r3, r0]
 	cmp	r3, #7
-	bhi	.L1484
+	bhi	.L1490
 	.loc 5 509 0
-	mov	r0, r9
+	mov	r0, r10
 	bl	List_get_gc_head_node
-.LVL1301:
-	uxth	r7, r0
+.LVL1294:
+	uxth	r8, r0
 	.loc 5 510 0
 	mov	r3, #128
-	strh	r3, [r6, r8]	@ movhi
+	strh	r3, [r5, r9]	@ movhi
 	.loc 5 520 0
-	cmp	r7, r4
-	beq	.L1483
-.L1480:
+	cmp	r8, r4
+	beq	.L1489
+.L1486:
 	.loc 5 521 0
-	movw	r0, #3128
-	ldr	r3, [r6, #2260]
-	ldrh	r0, [r6, r0]
-	lsl	r1, r7, #1
-	movw	r2, #2276
+	movw	r0, #3124
+	ldr	r3, [r5, #2300]
+	ldrh	r0, [r5, r0]
+	lsl	r1, r8, #1
+	ldrh	r2, [r7]
+	mov	r4, r8
 	ldrh	r3, [r3, r1]
-	mov	r4, r7
-	ldrh	r2, [r6, r2]
 	str	r0, [sp, #4]
-	ldr	r0, [r6, #2248]
+	ldr	r0, [r5, #2304]
 	ldrh	r1, [r0, r1]
-	ldr	r0, .L1584+16
+	ldr	r0, .L1591+16
 	str	r1, [sp]
-	mov	r1, r7
+	mov	r1, r8
 	bl	printk
-.LVL1302:
-	b	.L1483
-.L1474:
-.LBE499:
-.LBE498:
-.LBE497:
+.LVL1295:
+	b	.L1489
+.L1480:
+.LBE522:
+.LBE521:
+.LBE520:
 	.loc 5 485 0 discriminator 1
-	movw	r1, #2376
+	movw	r1, #2420
 	ldrh	r3, [r3, r1]
 	cmp	r3, r2
-	beq	.L1477
+	beq	.L1483
 	.loc 5 486 0
 	mov	r0, #1
 	bl	FtlGcFreeTempBlock
-.LVL1303:
+.LVL1296:
 	cmp	r0, #0
-	beq	.L1477
+	beq	.L1483
 	.loc 5 487 0
 	mov	r0, #1
-	b	.L1472
-.L1475:
-.LBB504:
-.LBB502:
+	b	.L1478
+.L1481:
+.LBB527:
+.LBB525:
 	.loc 5 489 0
-	movw	r2, #3182
-	ldrh	ip, [r6, r2]
+	movw	r2, #3178
+	ldrh	ip, [r5, r2]
 	cmp	ip, r0
 	.loc 5 490 0
-	strheq	r1, [r6, r2]	@ movhi
+	strheq	r1, [r5, r2]	@ movhi
 	.loc 5 491 0
 	mvneq	r2, #0
-	strheq	r2, [r3]	@ movhi
-	b	.L1476
-.L1484:
-.LBB500:
+	strheq	r2, [r5, r3]	@ movhi
+	b	.L1482
+.L1490:
+.LBB523:
 	.loc 5 512 0
 	mov	r3, #64
-.L1577:
+.L1583:
 	.loc 5 516 0
-	strh	r3, [r6, r8]	@ movhi
-.L1483:
+	strh	r3, [r5, r9]	@ movhi
+.L1489:
 	.loc 5 523 0
 	bl	FtlGcReFreshBadBlk
-.LVL1304:
-.L1478:
-.LBE500:
+.LVL1297:
+.L1484:
+.LBE523:
 	.loc 5 527 0
 	movw	r2, #65535
 	sub	r3, r4, r2
 	clz	r3, r3
 	lsr	r3, r3, #5
-	cmp	r5, #0
-	movne	r5, #0
-	andeq	r5, r3, #1
-.LVL1305:
-	cmp	r5, #0
-	beq	.L1486
+	cmp	r6, #0
+	movne	r6, #0
+	andeq	r6, r3, #1
+.LVL1298:
+	cmp	r6, #0
+	beq	.L1492
 	.loc 5 528 0
-	movw	r3, #2276
-	ldrh	r3, [r6, r3]
+	ldr	r3, .L1591+8
+	ldrh	r3, [r3]
 	cmp	r3, #24
 	.loc 5 529 0
-	movhi	r5, #1
-.LVL1306:
+	movhi	r6, #1
+.LVL1299:
 	.loc 5 528 0
-	bhi	.L1487
-	ldrh	r5, [r6, #78]
-.LVL1307:
+	bhi	.L1493
+	ldrh	r6, [r5, #78]
+.LVL1300:
 	.loc 5 530 0
 	cmp	r3, #16
 	.loc 5 531 0
-	lsrhi	r5, r5, #5
-.LVL1308:
+	lsrhi	r6, r6, #5
+.LVL1301:
 	.loc 5 530 0
-	bhi	.L1487
+	bhi	.L1493
 	.loc 5 532 0
 	cmp	r3, #12
 	.loc 5 533 0
-	lsrhi	r5, r5, #4
-.LVL1309:
+	lsrhi	r6, r6, #4
+.LVL1302:
 	.loc 5 532 0
-	bhi	.L1487
+	bhi	.L1493
 	.loc 5 534 0
 	cmp	r3, #8
 	.loc 5 535 0
-	lsrhi	r5, r5, #2
-.LVL1310:
-.L1487:
+	lsrhi	r6, r6, #2
+.LVL1303:
+.L1493:
 	.loc 5 539 0
-	movw	r2, #3128
-	ldrh	r1, [r6, r2]
+	movw	r2, #3124
+	ldrh	r1, [r5, r2]
 	cmp	r1, r3
-	bcs	.L1491
+	bcs	.L1497
 	.loc 5 540 0
-	movw	r3, #2376
+	movw	r3, #2420
 	movw	r1, #65535
-	ldrh	r3, [r6, r3]
+	ldrh	r3, [r5, r3]
 	cmp	r3, r1
-	bne	.L1492
-	movw	r1, #3182
-	ldrh	r1, [r6, r1]
+	bne	.L1498
+	movw	r1, #3178
+	ldrh	r1, [r5, r1]
 	cmp	r1, r3
-	bne	.L1492
+	bne	.L1498
 	.loc 5 542 0
-	ldr	r3, .L1584+12
+	ldr	r3, .L1591+12
 	ldrh	r0, [r3, #-4]
 	cmp	r0, #0
-	bne	.L1493
-	ldr	r3, [r6, #2436]
-	ldr	r1, [r6, #2432]
+	bne	.L1499
+	ldr	r3, [r5, #2480]
+	ldr	r1, [r5, #2476]
 	add	r3, r3, r3, lsl #1
 	cmp	r1, r3, lsr #2
 	.loc 5 545 0
 	movcs	r3, #18
 	.loc 5 542 0
-	bcs	.L1578
-.L1493:
+	bcs	.L1584
+.L1499:
 	.loc 5 543 0
-	movw	r3, #2552
-	movw	r2, #3128
-	ldrh	r3, [r6, r3]
+	movw	r3, #2548
+	movw	r2, #3124
+	ldrh	r3, [r5, r3]
 	add	r3, r3, r3, lsl #1
 	asr	r3, r3, #2
-.L1578:
+.L1584:
 	.loc 5 545 0
-	strh	r3, [r6, r2]	@ movhi
+	strh	r3, [r5, r2]	@ movhi
 	.loc 5 546 0
 	mov	r3, #0
-	str	r3, [r6, #3140]
-.LVL1311:
-.L1472:
-.LBE502:
-.LBE504:
-	.loc 5 758 0
+	str	r3, [r5, #3136]
+.LVL1304:
+.L1478:
+.LBE525:
+.LBE527:
+	.loc 5 754 0
 	sub	sp, fp, #40
-.LCFI422:
+.LCFI410:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL1312:
-.L1481:
-.LCFI423:
-.LBB505:
-.LBB503:
-.LBB501:
+.LVL1305:
+.L1487:
+.LCFI411:
+.LBB528:
+.LBB526:
+.LBB524:
 	.loc 5 516 0
 	mov	r3, #80
-	b	.L1577
-.LVL1313:
-.L1492:
-.LBE501:
+	b	.L1583
+.LVL1306:
+.L1498:
+.LBE524:
 	.loc 5 549 0
-	movw	r3, #2552
-	movw	r2, #3128
-	ldrh	r3, [r6, r3]
+	movw	r3, #2548
+	movw	r2, #3124
+	ldrh	r3, [r5, r3]
 	add	r3, r3, r3, lsl #1
 	asr	r3, r3, #2
-	strh	r3, [r6, r2]	@ movhi
-.L1491:
+	strh	r3, [r5, r2]	@ movhi
+.L1497:
 	.loc 5 551 0
-	movw	r3, #3186
+	movw	r3, #3182
 	movw	r4, #65535
-	ldrh	r3, [r6, r3]
+	ldrh	r3, [r5, r3]
 	cmp	r3, #0
 	.loc 5 552 0
-	addne	r5, r5, #32
-.LVL1314:
-	uxthne	r5, r5
-.LVL1315:
-.L1497:
-	.loc 5 597 0
-	movw	r3, #2568
-	ldrh	r2, [r6, r3]
+	addne	r6, r6, #32
+.LVL1307:
+	uxthne	r6, r6
+.LVL1308:
+.L1503:
+	.loc 5 595 0
+	movw	r3, #2564
+	ldrh	r2, [r5, r3]
 	movw	r1, #65535
 	cmp	r2, r1
-	bne	.L1506
-	.loc 5 598 0
+	bne	.L1512
+	.loc 5 596 0
 	cmp	r4, r2
-	.loc 5 599 0
-	strhne	r4, [r6, r3]	@ movhi
+	.loc 5 597 0
+	strhne	r4, [r5, r3]	@ movhi
+	.loc 5 596 0
+	bne	.L1514
 	.loc 5 598 0
-	bne	.L1508
-	.loc 5 600 0
-	movw	r2, #3182
-	ldrh	r3, [r6, r2]
+	movw	r2, #3178
+	ldrh	r3, [r5, r2]
 	cmp	r3, r4
-	beq	.L1508
-	.loc 5 604 0
-	ldr	r1, [r6, #2260]
+	beq	.L1514
+	.loc 5 600 0
+	ldr	r1, [r5, #2300]
 	lsl	r3, r3, #1
 	ldrh	r3, [r1, r3]
 	cmp	r3, #0
-	.loc 5 605 0
+	.loc 5 601 0
 	mvneq	r3, #0
-	strheq	r3, [r6, r2]	@ movhi
-	.loc 5 606 0
-	movw	r3, #3182
-	ldrh	r1, [r6, r3]
-	movw	r2, #2568
-	strh	r1, [r6, r2]	@ movhi
-	.loc 5 607 0
+	strheq	r3, [r5, r2]	@ movhi
+	.loc 5 602 0
+	movw	r3, #3178
+	ldrh	r1, [r5, r3]
+	movw	r2, #2564
+	strh	r1, [r5, r2]	@ movhi
+	.loc 5 603 0
 	mvn	r2, #0
-	strh	r2, [r6, r3]	@ movhi
-.L1508:
-	.loc 5 611 0
-	movw	r7, #2568
-	.loc 5 610 0
+	strh	r2, [r5, r3]	@ movhi
+.L1514:
+	.loc 5 607 0
+	movw	r7, #2564
+	.loc 5 606 0
 	mov	r3, #0
-	.loc 5 611 0
-	ldrh	r0, [r6, r7]
-	.loc 5 610 0
-	strb	r3, [r6, #2576]
-	.loc 5 611 0
+	.loc 5 607 0
+	ldrh	r0, [r5, r7]
+	.loc 5 606 0
+	strb	r3, [r5, #2572]
+	.loc 5 607 0
 	movw	r3, #65535
 	cmp	r0, r3
-	beq	.L1506
-	.loc 5 612 0
+	beq	.L1512
+	.loc 5 608 0
 	bl	IsBlkInGcList
-.LVL1316:
+.LVL1309:
 	cmp	r0, #0
-	.loc 5 615 0
-	ldr	r8, .L1584+20
-	.loc 5 613 0
+	.loc 5 611 0
+	ldr	r8, .L1591+20
+	.loc 5 609 0
 	mvnne	r3, #0
-	strhne	r3, [r6, r7]	@ movhi
-	.loc 5 615 0
-	movw	r7, #2568
-	ldrh	r2, [r6, r7]
+	strhne	r3, [r5, r7]	@ movhi
+	.loc 5 611 0
+	movw	r7, #2564
+	ldrh	r2, [r5, r7]
 	movw	r3, #65535
 	cmp	r2, r3
-	beq	.L1506
-	.loc 5 616 0
+	beq	.L1512
+	.loc 5 612 0
 	mov	r0, r8
 	bl	make_superblock
-.LVL1317:
-	.loc 5 619 0
-	ldr	r2, .L1584+12
-	.loc 5 617 0
+.LVL1310:
+	.loc 5 615 0
+	ldr	r2, .L1591+12
+	.loc 5 613 0
 	mov	r3, #0
 	strh	r3, [r8, #2]	@ movhi
-	.loc 5 618 0
-	strb	r3, [r6, #2574]
-	.loc 5 619 0
+	.loc 5 614 0
+	strb	r3, [r5, #2570]
+	.loc 5 615 0
 	strh	r3, [r2, #-2]	@ movhi
-	.loc 5 620 0
-	ldrh	r3, [r6, r7]
-	ldr	r1, [r6, #2260]
+	.loc 5 616 0
+	ldrh	r3, [r5, r7]
+	ldr	r1, [r5, #2300]
 	lsl	r3, r3, #1
 	ldrh	r3, [r1, r3]
 	strh	r3, [r2]	@ movhi
-.L1506:
-	.loc 5 625 0
-	movw	r3, #2568
-	movw	r2, #2280
-	ldrh	r3, [r6, r3]
-	ldrh	r2, [r6, r2]
+.L1512:
+	.loc 5 621 0
+	movw	r3, #2564
+	movw	r2, #2324
+	ldrh	r3, [r5, r3]
+	ldrh	r2, [r5, r2]
 	cmp	r2, r3
-	beq	.L1512
-	movw	r2, #2328
-	ldrh	r2, [r6, r2]
+	beq	.L1518
+	movw	r2, #2372
+	ldrh	r2, [r5, r2]
 	cmp	r2, r3
-	.loc 5 631 0
-	ldrne	r10, .L1584
-	movne	r6, r10
-	.loc 5 625 0
-	bne	.L1513
-.L1512:
-	.loc 5 626 0
+	.loc 5 627 0
+	ldrne	r7, .L1591
+	movne	r5, r7
+	.loc 5 621 0
+	bne	.L1519
+.L1518:
+	.loc 5 622 0
 	mvn	r2, #0
-	movw	r3, #2568
-	strh	r2, [r6, r3]	@ movhi
-.LVL1318:
-.L1583:
-	.loc 5 652 0
-	ldr	r3, .L1584+12
+	movw	r3, #2564
+.LVL1311:
+.L1589:
+	.loc 5 647 0
+	strh	r2, [r5, r3]	@ movhi
+	.loc 5 648 0
+	ldr	r3, .L1591+12
+.LVL1312:
+.L1590:
 	ldrh	r0, [r3, #-4]
-	b	.L1472
-.LVL1319:
-.L1486:
+	b	.L1478
+.LVL1313:
+.L1492:
 	.loc 5 557 0
-	movw	r1, #2376
-	ldrh	r7, [r6, r1]
-	cmp	r7, r2
-	bne	.L1555
-	movw	r2, #3182
-	ldrh	r2, [r6, r2]
-	cmp	r2, r7
+	movw	r1, #2420
+	ldrh	r8, [r5, r1]
+	cmp	r8, r2
+	bne	.L1561
+	movw	r2, #3178
+	ldrh	r2, [r5, r2]
+	cmp	r2, r8
 	movne	r3, #0
 	andeq	r3, r3, #1
 	cmp	r3, #0
-	beq	.L1555
-	movw	r3, #2568
-	ldrh	r3, [r6, r3]
-	cmp	r3, r7
-	beq	.L1498
-.L1503:
+	beq	.L1561
+	movw	r3, #2564
+	ldrh	r3, [r5, r3]
+	cmp	r3, r8
+	beq	.L1504
+.L1509:
 	.loc 5 556 0
-	mov	r4, r7
-.L1555:
-	mov	r5, #1
-.LVL1320:
-	b	.L1497
-.LVL1321:
-.L1498:
+	mov	r4, r8
+.L1561:
+	mov	r6, #1
+.LVL1314:
+	b	.L1503
+.LVL1315:
+.L1504:
 	.loc 5 560 0
-	movw	r3, #2276
-	movw	r2, #3128
-	ldrh	r8, [r6, r3]
-	ldrh	r3, [r6, r2]
+	ldr	r7, .L1591+8
+	movw	r2, #3124
+	ldrh	r3, [r5, r2]
 	.loc 5 558 0
-	str	r5, [r6, #3140]
-	ldr	r4, .L1584+12
+	str	r6, [r5, #3136]
 	.loc 5 560 0
-	cmp	r3, r8
-	bcs	.L1499
+	ldrh	r9, [r7]
+	ldr	r4, .L1591+12
+	cmp	r3, r9
+	bcs	.L1505
 	.loc 5 561 0
 	ldrh	r3, [r4, #-4]
 	cmp	r3, #0
-	bne	.L1500
-	ldr	r3, [r6, #2436]
-	ldr	r1, [r6, #2432]
+	bne	.L1506
+	ldr	r3, [r5, #2480]
+	ldr	r1, [r5, #2476]
 	add	r3, r3, r3, lsl #1
 	cmp	r1, r3, lsr #2
 	.loc 5 564 0
 	movcs	r3, #18
 	.loc 5 561 0
-	bcs	.L1579
-.L1500:
+	bcs	.L1585
+.L1506:
 	.loc 5 562 0
-	movw	r3, #2552
-	movw	r2, #3128
-	ldrh	r3, [r6, r3]
+	movw	r3, #2548
+	movw	r2, #3124
+	ldrh	r3, [r5, r3]
 	add	r3, r3, r3, lsl #1
 	asr	r3, r3, #2
-.L1579:
+.L1585:
 	.loc 5 564 0
-	strh	r3, [r6, r2]	@ movhi
-.L1582:
+	strh	r3, [r5, r2]	@ movhi
+.L1588:
 	.loc 5 578 0
 	bl	FtlReadRefresh
-.LVL1322:
+.LVL1316:
 	.loc 5 579 0
 	ldrh	r0, [r4, #-4]
-	b	.L1472
-.L1499:
+	b	.L1478
+.L1505:
 	.loc 5 572 0
 	ldrh	r0, [r4, #-4]
 	cmp	r0, #0
-	bne	.L1503
+	bne	.L1509
 	.loc 5 573 0
-	movw	r3, #2552
-	ldrh	r5, [r6, r3]
-	add	r3, r5, r5, lsl #1
+	movw	r3, #2548
+	ldrh	r6, [r5, r3]
+	add	r3, r6, r6, lsl #1
 	asr	r3, r3, #2
-	strh	r3, [r6, r2]	@ movhi
+	strh	r3, [r5, r2]	@ movhi
 	.loc 5 574 0
 	bl	List_get_gc_head_node
-.LVL1323:
+.LVL1317:
 	.loc 5 575 0
 	uxth	r0, r0
-	ldr	r3, [r6, #2260]
-	ldrh	r1, [r6, #80]
+	ldr	r3, [r5, #2300]
+	ldrh	r1, [r5, #80]
 	lsl	r0, r0, #1
 	ldrh	r2, [r3, r0]
-	ldrh	r3, [r6, #8]
+	ldrh	r3, [r5, #8]
 	mul	r3, r3, r1
 	add	r3, r3, r3, lsr #31
 	cmp	r2, r3, asr #1
-	ble	.L1504
+	ble	.L1510
 	.loc 5 576 0
-	sub	r5, r5, #1
+	sub	r6, r6, #1
 	.loc 5 575 0
-	cmp	r8, r5
-	bge	.L1582
-.L1504:
+	cmp	r9, r6
+	bge	.L1588
+.L1510:
 	.loc 5 584 0
 	cmp	r2, #0
-	bne	.L1503
+	bne	.L1509
 	.loc 5 585 0
 	movw	r0, #65535
 	bl	decrement_vpc_count
-.LVL1324:
+.LVL1318:
 	.loc 5 586 0
-	movw	r3, #2276
-	ldrh	r0, [r6, r3]
+	ldrh	r0, [r7]
 	add	r0, r0, #1
-	b	.L1472
-.LVL1325:
-.L1516:
-	str	r0, [fp, #-60]
-	.loc 5 640 0
+	b	.L1478
+.LVL1319:
+.L1522:
+	uxth	r2, r0
+	str	r1, [fp, #-52]
+	add	r10, r10, #1
+	.loc 5 636 0
 	mov	r0, r2
-	str	r2, [fp, #-56]
-	add	r9, r9, #1
+	str	r2, [fp, #-48]
 	bl	IsBlkInGcList
-.LVL1326:
+.LVL1320:
 	cmp	r0, #0
-	ldr	r2, [fp, #-56]
-	ldr	r3, [fp, #-60]
+	ldr	r2, [fp, #-48]
+	ldr	r1, [fp, #-52]
+	.loc 5 637 0
+	strhne	r10, [r9]	@ movhi
+	.loc 5 636 0
+	bne	.L1521
 	.loc 5 641 0
-	strhne	r9, [r8]	@ movhi
+	ldrh	lr, [r5, #8]
 	.loc 5 640 0
-	bne	.L1515
-	.loc 5 645 0
-	uxth	r3, r3
-	ldrh	lr, [r6, #8]
-	ldr	r0, [r6, #2260]
-	.loc 5 644 0
-	uxth	r9, r9
-	.loc 5 645 0
-	lsl	r1, r3, #1
-	ldrh	r3, [r6, #78]
-	.loc 5 644 0
-	strh	r9, [r8]	@ movhi
-	.loc 5 645 0
-	ldrh	ip, [r0, r1]
+	uxth	r10, r10
+	.loc 5 641 0
+	ldrh	r3, [r5, #78]
+	lsl	r2, r2, #1
+	ldr	r0, [r5, #2300]
+	.loc 5 640 0
+	strh	r10, [r9]	@ movhi
+	.loc 5 641 0
 	mul	r3, lr, r3
+	ldrh	ip, [r0, r2]
 	add	lr, r3, r3, lsr #31
 	cmp	ip, lr, asr #1
-	bgt	.L1519
-	.loc 5 646 0
+	bgt	.L1525
+	.loc 5 642 0
 	cmp	ip, #8
-	cmphi	r9, #48
-	bls	.L1520
-	ldr	ip, .L1584+24
+	cmphi	r10, #48
+	bls	.L1526
+	ldr	ip, .L1591+24
 	ldrh	ip, [ip]
 	cmp	ip, #35
-	bhi	.L1520
-.L1519:
-	.loc 5 647 0
-	ldr	lr, .L1584+28
+	bhi	.L1526
+.L1525:
+	.loc 5 643 0
+	ldr	lr, .L1591+28
 	mov	ip, #0
 	strh	ip, [lr]	@ movhi
-.L1520:
-	.loc 5 649 0
-	ldrh	r1, [r0, r1]
+.L1526:
+	.loc 5 645 0
+	ldrh	ip, [r0, r2]
 	movw	r0, #65535
-	cmp	r3, r1
+	cmp	r3, ip
 	cmple	r4, r0
 	moveq	r3, #1
 	movne	r3, #0
-	bne	.L1521
-	.loc 5 650 0
+	bne	.L1527
+	.loc 5 646 0
 	mvn	r2, #0
-	movw	r3, #2568
-	strh	r2, [r6, r3]	@ movhi
+	movw	r3, #2564
+	strh	r2, [r5, r3]	@ movhi
+	.loc 5 647 0
+	mov	r2, #0
+	movw	r3, #3132
+	b	.L1589
+.L1527:
 	.loc 5 651 0
-	mov	r3, #0
-	ldr	r2, .L1584+28
-	strh	r3, [r2]	@ movhi
-	b	.L1583
-.L1521:
-	.loc 5 655 0
-	cmp	r1, #0
-	bne	.L1522
-	.loc 5 656 0
+	cmp	ip, #0
+	bne	.L1528
+	.loc 5 652 0
 	bl	decrement_vpc_count
-.LVL1327:
-	.loc 5 657 0
-	ldr	r3, .L1584+28
-	ldr	r2, .L1584+28
+.LVL1321:
+	.loc 5 653 0
+	ldr	r3, .L1591+28
+	ldr	r2, .L1591+28
 	ldrh	r3, [r3]
 	add	r3, r3, #1
 	strh	r3, [r2]	@ movhi
-	b	.L1515
-.L1522:
-	.loc 5 660 0
-	strb	r3, [r6, #2576]
-	.loc 5 662 0
-	ldr	r3, .L1584+32
+	b	.L1521
+.L1528:
+	.loc 5 656 0
+	strb	r3, [r5, #2572]
+	.loc 5 658 0
+	ldr	r3, .L1591+32
 	ldrh	r3, [r3]
-	cmp	r3, r2
-	bne	.L1523
-	movw	r2, #662
-	ldr	r1, .L1584+36
-	ldr	r0, .L1584+40
+	cmp	r3, r1
+	bne	.L1529
+	movw	r2, #658
+	ldr	r1, .L1591+36
+	ldr	r0, .L1591+40
 	bl	printk
-.LVL1328:
-.L1523:
-	.loc 5 663 0
-	ldr	r3, .L1584+44
-	ldrh	r2, [r7]
+.LVL1322:
+.L1529:
+	.loc 5 659 0
+	ldr	r3, .L1591+44
+	ldrh	r2, [r8]
 	ldrh	r3, [r3]
 	cmp	r2, r3
-	bne	.L1524
-	movw	r2, #663
-	ldr	r1, .L1584+36
-	ldr	r0, .L1584+40
+	bne	.L1530
+	movw	r2, #659
+	ldr	r1, .L1591+36
+	ldr	r0, .L1591+40
 	bl	printk
-.LVL1329:
-.L1524:
-	.loc 5 664 0
-	ldr	r3, .L1584+48
-	ldrh	r2, [r7]
+.LVL1323:
+.L1530:
+	.loc 5 660 0
+	ldr	r3, .L1591+48
+	ldrh	r2, [r8]
 	ldrh	r3, [r3]
 	cmp	r2, r3
-	bne	.L1525
-	mov	r2, #664
-	ldr	r1, .L1584+36
-	ldr	r0, .L1584+40
+	bne	.L1531
+	mov	r2, #660
+	ldr	r1, .L1591+36
+	ldr	r0, .L1591+40
 	bl	printk
-.LVL1330:
-.L1525:
-	.loc 5 665 0
-	ldr	r0, .L1584+20
+.LVL1324:
+.L1531:
+	.loc 5 661 0
+	ldr	r0, .L1591+20
 	bl	make_superblock
-.LVL1331:
-	.loc 5 667 0
-	ldrh	r2, [r7]
-	.loc 5 666 0
+.LVL1325:
+	.loc 5 663 0
+	ldrh	r2, [r8]
+	.loc 5 662 0
 	mov	r3, #0
-	ldr	r1, .L1584+12
-	.loc 5 667 0
-	ldr	r0, [r6, #2260]
+	ldr	r1, .L1591+12
+	.loc 5 663 0
+	ldr	r0, [r5, #2300]
 	lsl	r2, r2, #1
-	.loc 5 666 0
+	.loc 5 662 0
 	strh	r3, [r1, #-2]	@ movhi
-	.loc 5 667 0
+	.loc 5 663 0
 	ldrh	r2, [r0, r2]
-	.loc 5 668 0
-	strh	r3, [r7, #2]	@ movhi
-	.loc 5 669 0
-	strb	r3, [r6, #2574]
-	.loc 5 667 0
+	.loc 5 664 0
+	strh	r3, [r8, #2]	@ movhi
+	.loc 5 665 0
+	strb	r3, [r5, #2570]
+	.loc 5 663 0
 	strh	r2, [r1]	@ movhi
-.LVL1332:
-.L1514:
-	.loc 5 675 0
+.LVL1326:
+.L1520:
+	.loc 5 671 0
 	bl	FtlReadRefresh
-.LVL1333:
-	.loc 5 678 0
+.LVL1327:
+	.loc 5 674 0
 	mov	r3, #1
-	str	r3, [r6, #3780]
+	str	r3, [r5, #3780]
+	.loc 5 675 0
+	ldrh	r3, [r5, #78]
+.LVL1328:
+	str	r3, [fp, #-56]
+	.loc 5 676 0
+	ldrh	r3, [r8, #2]
+.LVL1329:
+	ldr	r1, [fp, #-56]
+.LVL1330:
+	add	r2, r3, r6
+	cmp	r2, r1
+	.loc 5 677 0
+	movgt	r2, r1
+	subgt	r6, r2, r3
+.LVL1331:
+	.loc 5 689 0
+	mov	r3, #0
+	.loc 5 677 0
+	uxthgt	r6, r6
+.LVL1332:
+.L1587:
+	str	r3, [fp, #-52]
 	.loc 5 679 0
-	ldrh	r3, [r6, #78]
+	ldrh	r3, [fp, #-52]
+	ldr	r8, .L1591+20
+.LVL1333:
+	cmp	r6, r3
+	bls	.L1541
+	.loc 5 684 0
+	ldrh	r9, [r8, #2]
+	mov	r2, #0
+	ldr	r3, [fp, #-52]
+	.loc 5 683 0
+	movw	r10, #65535
 .LVL1334:
-	str	r3, [fp, #-68]
-	.loc 5 680 0
-	ldrh	r3, [r7, #2]
+	.loc 5 681 0
+	ldrh	ip, [r7, #8]
+	.loc 5 684 0
+	ldr	r0, [r7, #3156]
+	add	r9, r9, r3
+	add	r3, r8, #14
+	mov	r8, r2
 .LVL1335:
-	ldr	r1, [fp, #-68]
+	b	.L1542
 .LVL1336:
-	add	r2, r3, r5
-	cmp	r2, r1
-	.loc 5 681 0
-	movgt	r2, r1
-	subgt	r5, r2, r3
+.L1535:
+	.loc 5 682 0
+	ldrh	r1, [r3, #2]!
 .LVL1337:
-	.loc 5 693 0
-	mov	r3, #0
-	.loc 5 681 0
-	uxthgt	r5, r5
-.LVL1338:
-.L1581:
-	str	r3, [fp, #-64]
+	add	r2, r2, #1
 	.loc 5 683 0
-	ldrh	r3, [fp, #-64]
-	ldr	r8, .L1584+20
+	cmp	r1, r10
+	.loc 5 684 0
+	movne	lr, #20
+	orrne	r1, r9, r1, lsl #10
+.LVL1338:
+	mlane	lr, lr, r8, r0
+	.loc 5 685 0
+	addne	r8, r8, #1
 .LVL1339:
-	cmp	r5, r3
-	bls	.L1535
-	.loc 5 688 0
-	ldrh	r7, [r8, #2]
-	mov	r2, #0
+	uxthne	r8, r8
 .LVL1340:
-	ldr	r3, [fp, #-64]
-	mov	r9, #20
+	.loc 5 684 0
+	strne	r1, [lr, #4]
 .LVL1341:
-	.loc 5 685 0
-	ldrh	ip, [r10, #8]
-	.loc 5 688 0
-	ldr	r0, [r10, #3160]
-	add	r7, r7, r3
-	str	r2, [fp, #-56]
-	add	r3, r8, #14
-	.loc 5 687 0
-	movw	r8, #65535
-	b	.L1536
-.LVL1342:
-.L1529:
-	.loc 5 686 0
-	ldrh	r1, [r3, #2]!
-.LVL1343:
-	.loc 5 687 0
-	cmp	r1, r8
-	beq	.L1528
-	.loc 5 688 0
-	ldr	lr, [fp, #-56]
-.LVL1344:
-	orr	r1, r7, r1, lsl #10
-.LVL1345:
-	mla	lr, r9, lr, r0
-.LVL1346:
-	str	r1, [lr, #4]
-	.loc 5 689 0
-	ldr	r1, [fp, #-56]
-.LVL1347:
-	add	r1, r1, #1
-.LVL1348:
-	uxth	r1, r1
-.LVL1349:
-	str	r1, [fp, #-56]
-.LVL1350:
-.L1528:
-	add	r2, r2, #1
-.LVL1351:
-.L1536:
-	.loc 5 685 0
+.L1542:
+	.loc 5 681 0
 	uxth	r1, r2
-.LVL1352:
+.LVL1342:
 	cmp	ip, r1
-	bhi	.L1529
-	.loc 5 693 0
-	ldrb	r2, [r10, #2576]	@ zero_extendqisi2
-	ldr	r1, [fp, #-56]
+	bhi	.L1535
+	.loc 5 689 0
+	ldrb	r2, [r7, #2572]	@ zero_extendqisi2
+	mov	r1, r8
 	bl	FlashReadPages
-.LVL1353:
+.LVL1343:
 	mov	r3, #0
-.LVL1354:
-.L1580:
-	str	r3, [fp, #-60]
-	.loc 5 695 0
-	ldr	r2, [fp, #-56]
-.LVL1355:
-	ldrh	r3, [fp, #-60]
-	cmp	r3, r2
-	ldrcs	r3, [fp, #-64]
+.LVL1344:
+.L1586:
+	str	r3, [fp, #-48]
+	.loc 5 691 0
+	ldrh	r3, [fp, #-48]
+	cmp	r3, r8
+	ldrcs	r3, [fp, #-52]
 	addcs	r3, r3, #1
-	bcs	.L1581
-.L1534:
-	ldr	r3, [fp, #-60]
-	mov	r7, #20
-	mul	r7, r7, r3
-	.loc 5 696 0
-	ldr	r3, [r10, #3160]
-	add	r2, r3, r7
-.LVL1356:
-	.loc 5 697 0
-	ldr	r3, [r3, r7]
+	bcs	.L1587
+.L1540:
+	ldr	r3, [fp, #-48]
+	mov	r9, #20
+	mul	r9, r9, r3
+	.loc 5 692 0
+	ldr	r3, [r7, #3156]
+	add	r2, r3, r9
+	.loc 5 693 0
+	ldr	r3, [r3, r9]
 	cmn	r3, #1
-	beq	.L1531
-	.loc 5 696 0
-	ldr	r9, [r2, #12]
-	.loc 5 697 0
+	beq	.L1537
+	.loc 5 692 0
+	ldr	r10, [r2, #12]
+	.loc 5 693 0
 	movw	r3, #61589
-	ldrh	r2, [r9]
+	ldrh	r2, [r10]
 	cmp	r2, r3
-	bne	.L1531
-	.loc 5 699 0
-	ldr	r8, [r9, #8]
-	.loc 5 700 0
-	cmn	r8, #1
-	bne	.L1532
-	mov	r2, #700
-	ldr	r1, .L1584+36
-	ldr	r0, .L1584+40
+	bne	.L1537
+	.loc 5 695 0
+	ldr	r3, [r10, #8]
+.LVL1345:
+	.loc 5 696 0
+	cmn	r3, #1
+	bne	.L1538
+	mov	r2, #696
+	ldr	r1, .L1591+36
+	ldr	r0, .L1591+40
+	str	r3, [fp, #-60]
 	bl	printk
-.LVL1357:
-.L1532:
-	.loc 5 701 0
+.LVL1346:
+	ldr	r3, [fp, #-60]
+.LVL1347:
+.L1538:
+	.loc 5 697 0
 	mov	r2, #0
-	sub	r1, fp, #48
-	mov	r0, r8
+	mov	r0, r3
+	sub	r1, fp, #44
 	bl	log2phys
-.LVL1358:
-	.loc 5 702 0
-	ldr	r1, [r6, #3160]
-	ldr	r3, [fp, #-48]
-	add	r1, r1, r7
-	ldr	r2, [r1, #4]
+.LVL1348:
+	.loc 5 698 0
+	ldr	r0, [r5, #3156]
+	ldr	r3, [fp, #-44]
+	add	r0, r0, r9
+	ldr	r2, [r0, #4]
 	cmp	r2, r3
-	bne	.L1531
-	.loc 5 704 0
-	ldr	r8, .L1584+52
-.LVL1359:
-	.loc 5 705 0
-	mov	r2, #20
-	ldr	r0, [r6, #3144]
-	ldr	r1, [r1, #16]
-	.loc 5 704 0
-	ldrh	r3, [r8]
-	.loc 5 705 0
-	str	r2, [fp, #-76]
+	bne	.L1537
+	.loc 5 700 0
+	ldr	r3, .L1591+52
+	.loc 5 701 0
+	mov	r1, #20
+	ldr	lr, [r5, #3140]
+	ldr	r0, [r0, #16]
+	.loc 5 700 0
+	ldrh	r2, [r3]
+	.loc 5 701 0
+	str	r1, [fp, #-64]
+	.loc 5 700 0
+	add	r2, r2, #1
+	strh	r2, [r3], #2	@ movhi
+	.loc 5 701 0
+	ldr	r2, [r5, #3796]
+	.loc 5 700 0
+	str	r3, [fp, #-68]
+	.loc 5 701 0
+	mla	r2, r1, lr, r2
+	str	r0, [r2, #16]
+	str	r2, [fp, #-60]
+	.loc 5 702 0
+	bl	Ftl_get_new_temp_ppa
+.LVL1349:
+	ldr	r2, [fp, #-60]
+	.loc 5 703 0
+	ldr	r1, [fp, #-64]
+	.loc 5 702 0
+	str	r0, [r2, #4]
+	.loc 5 703 0
+	ldr	r0, [r5, #3140]
+	ldr	r2, [r5, #3796]
+	mla	r1, r1, r0, r2
+	ldr	r2, [r5, #3156]
+	add	r2, r2, r9
+	ldr	r0, [r2, #8]
+	str	r0, [r1, #8]
 	.loc 5 704 0
-	add	r3, r3, #1
-	strh	r3, [r8], #2	@ movhi
+	ldr	r2, [r2, #12]
+	str	r2, [r1, #12]
 	.loc 5 705 0
-	ldr	r3, [r6, #3796]
-	mla	r3, r2, r0, r3
-	str	r1, [r3, #16]
-	str	r3, [fp, #-72]
-	.loc 5 706 0
-	bl	Ftl_get_new_temp_ppa
-.LVL1360:
-	ldr	r3, [fp, #-72]
-	.loc 5 707 0
-	ldr	r1, [r6, #3144]
-	ldr	r2, [fp, #-76]
+	ldr	r2, [fp, #-44]
+.LVL1350:
+	str	r2, [r10, #12]
 	.loc 5 706 0
-	str	r0, [r3, #4]
-	.loc 5 707 0
-	ldr	r3, [r6, #3796]
-	mla	r2, r2, r1, r3
-	ldr	r3, [r6, #3160]
-	add	r3, r3, r7
-	ldr	r1, [r3, #8]
-	str	r1, [r2, #8]
-	.loc 5 716 0
-	mov	r1, #1
-	.loc 5 708 0
-	ldr	r3, [r3, #12]
-	str	r3, [r2, #12]
+	ldr	r2, .L1591+48
+.LVL1351:
+	ldrh	r1, [r2]
+	str	r2, [fp, #-60]
+	strh	r1, [r10, #2]	@ movhi
 	.loc 5 709 0
-	ldr	r3, [fp, #-48]
-.LVL1361:
-	str	r3, [r9, #12]
-	.loc 5 710 0
-	ldr	r3, .L1584+48
-.LVL1362:
-	ldrh	r2, [r3]
-	str	r3, [fp, #-72]
-	strh	r2, [r9, #2]	@ movhi
-	.loc 5 713 0
-	ldr	r2, [r6, #2476]
-	.loc 5 716 0
-	ldr	r0, [r6, #3160]
-	.loc 5 713 0
-	str	r2, [r9, #4]
-	.loc 5 715 0
-	ldr	r2, [r6, #3144]
-	.loc 5 716 0
-	add	r0, r0, r7
-	.loc 5 715 0
-	add	r2, r2, #1
-	str	r2, [r6, #3144]
-	.loc 5 716 0
+	ldr	r1, [r5, #2520]
+	.loc 5 712 0
+	ldr	r0, [r5, #3156]
+	.loc 5 709 0
+	str	r1, [r10, #4]
+	.loc 5 711 0
+	ldr	r1, [r5, #3140]
+	.loc 5 712 0
+	add	r0, r0, r9
+	.loc 5 711 0
+	add	r1, r1, #1
+	str	r1, [r5, #3140]
+	.loc 5 712 0
+	mov	r1, #1
 	bl	FtlGcBufAlloc
-.LVL1363:
-	.loc 5 717 0
-	ldrb	r1, [r6, #2383]	@ zero_extendqisi2
-	ldr	r2, [r6, #3144]
-	cmp	r1, r2
-	beq	.L1533
-	ldr	r3, [fp, #-72]
-	ldrh	r3, [r3, #4]
-	cmp	r3, #0
-	bne	.L1531
-.L1533:
-	.loc 5 718 0
+.LVL1352:
+	.loc 5 713 0
+	ldrb	r0, [r5, #2427]	@ zero_extendqisi2
+	ldr	r1, [r5, #3140]
+	ldr	r3, [fp, #-68]
+	cmp	r0, r1
+	beq	.L1539
+	ldr	r2, [fp, #-60]
+	ldrh	r2, [r2, #4]
+	cmp	r2, #0
+	bne	.L1537
+.L1539:
+	str	r3, [fp, #-60]
+	.loc 5 714 0
 	bl	Ftl_gc_temp_data_write_back
-.LVL1364:
+.LVL1353:
 	cmp	r0, #0
-	.loc 5 719 0
-	ldrne	r3, .L1584
-	movne	r2, #0
-	.loc 5 720 0
-	ldrhne	r0, [r8, #-4]
-	.loc 5 719 0
-	strne	r2, [r3, #3780]
-	bne	.L1472
-.LVL1365:
-.L1531:
 	ldr	r3, [fp, #-60]
+	.loc 5 715 0
+	ldrne	r2, .L1591
+	movne	r1, #0
+	strne	r1, [r2, #3780]
+	bne	.L1590
+.L1537:
+	ldr	r3, [fp, #-48]
 	add	r3, r3, #1
-	b	.L1580
-.LVL1366:
-.L1535:
-	.loc 5 727 0
+	b	.L1586
+.LVL1354:
+.L1541:
+	.loc 5 723 0
 	ldrh	r3, [r8, #2]
-	add	r5, r5, r3
-.LVL1367:
-	.loc 5 729 0
-	ldr	r3, [fp, #-68]
-.LVL1368:
-	.loc 5 727 0
-	uxth	r5, r5
-	.loc 5 729 0
-	cmp	r3, r5
-	.loc 5 727 0
-	strh	r5, [r8, #2]	@ movhi
-	ldr	r5, .L1584+12
-	.loc 5 729 0
-	bls	.L1537
-	ldrh	r2, [r5, #-2]
-.LVL1369:
-	ldrh	r3, [r5]
-.LVL1370:
+	add	r6, r6, r3
+.LVL1355:
+	.loc 5 725 0
+	ldr	r3, [fp, #-56]
+.LVL1356:
+	.loc 5 723 0
+	uxth	r6, r6
+	.loc 5 725 0
+	cmp	r3, r6
+	.loc 5 723 0
+	strh	r6, [r8, #2]	@ movhi
+	ldr	r6, .L1591+12
+	.loc 5 725 0
+	bls	.L1543
+	ldrh	r2, [r6, #-2]
+	ldrh	r3, [r6]
+.LVL1357:
 	cmp	r2, r3
-	bne	.L1538
-.LVL1371:
-.L1537:
-	.loc 5 731 0
-	ldr	r3, [r10, #3144]
-.LVL1372:
+	bne	.L1544
+.LVL1358:
+.L1543:
+	.loc 5 727 0
+	ldr	r3, [r7, #3140]
+.LVL1359:
 	cmp	r3, #0
-	beq	.L1539
-	.loc 5 732 0
+	beq	.L1545
+	.loc 5 728 0
 	bl	Ftl_gc_temp_data_write_back
-.LVL1373:
+.LVL1360:
 	cmp	r0, #0
-	.loc 5 733 0
+	.loc 5 729 0
 	movne	r3, #0
-	.loc 5 734 0
-	ldrhne	r0, [r5, #-4]
+	.loc 5 730 0
+	ldrhne	r0, [r6, #-4]
+	.loc 5 729 0
+	strne	r3, [r7, #3780]
+	bne	.L1478
+.L1545:
 	.loc 5 733 0
-	strne	r3, [r10, #3780]
-	bne	.L1472
-.LVL1374:
-.L1539:
-	.loc 5 737 0
-	ldrh	r1, [r5, #-2]
+	ldrh	r1, [r6, #-2]
 	cmp	r1, #0
-	bne	.L1540
+	bne	.L1546
 	ldrh	r3, [r8]
-	ldr	r2, [r10, #2260]
-.LVL1375:
+	ldr	r2, [r7, #2300]
 	lsl	r3, r3, #1
 	ldrh	r0, [r2, r3]
 	cmp	r0, #0
-	beq	.L1540
-	.loc 5 739 0
+	beq	.L1546
+	.loc 5 735 0
 	strh	r1, [r2, r3]	@ movhi
-	.loc 5 740 0
+	.loc 5 736 0
 	ldrh	r0, [r8]
 	bl	update_vpc_list
-.LVL1376:
-	.loc 5 741 0
+.LVL1361:
+	.loc 5 737 0
 	bl	FtlCacheWriteBack
-.LVL1377:
-	.loc 5 742 0
+.LVL1362:
+	.loc 5 738 0
 	bl	l2p_flush
-.LVL1378:
-	.loc 5 743 0
+.LVL1363:
+	.loc 5 739 0
 	bl	FtlVpcTblFlush
-.LVL1379:
-.L1540:
-	.loc 5 745 0
+.LVL1364:
+.L1546:
+	.loc 5 741 0
 	mvn	r3, #0
 	strh	r3, [r8]	@ movhi
-.L1538:
-	.loc 5 747 0
-	ldr	r3, .L1584+56
+.L1544:
+	.loc 5 743 0
+	ldr	r3, .L1591+8
 	ldrh	r3, [r3]
 	cmp	r3, #2
-	bhi	.L1541
-	.loc 5 749 0
-	ldrh	r5, [r10, #78]
-.LVL1380:
-.L1513:
-	.loc 5 631 0
-	ldr	r7, .L1584+20
+	bhi	.L1547
+	.loc 5 745 0
+	ldrh	r6, [r7, #78]
+.LVL1365:
+.L1519:
+	.loc 5 627 0
+	ldr	r8, .L1591+20
 	movw	r3, #65535
-	ldrh	r2, [r7]
-.LVL1381:
+	ldrh	r2, [r8]
 	cmp	r2, r3
-	bne	.L1514
-	.loc 5 635 0
-	add	r8, r7, #568
-	.loc 5 632 0
+	bne	.L1520
+	.loc 5 631 0
+	add	r9, r8, #568
+	.loc 5 628 0
 	mov	r3, #0
-	str	r3, [r10, #3140]
-.L1515:
-	.loc 5 635 0
-	ldrh	r9, [r8]
-.LVL1382:
-	mov	r0, r9
+	str	r3, [r7, #3136]
+.L1521:
+	.loc 5 631 0
+	ldrh	r10, [r9]
+.LVL1366:
+	mov	r0, r10
 	bl	List_get_gc_head_node
-.LVL1383:
-	ldr	r1, .L1584+20
-	uxth	r2, r0
-	strh	r2, [r1]	@ movhi
-	.loc 5 636 0
-	movw	r1, #65535
-	cmp	r2, r1
-	bne	.L1516
-	.loc 5 637 0
+.LVL1367:
+	ldr	r3, .L1591+20
+	uxth	r1, r0
+	strh	r1, [r3]	@ movhi
+	.loc 5 632 0
+	movw	r3, #65535
+	cmp	r1, r3
+	bne	.L1522
+	.loc 5 633 0
 	mov	r3, #0
-	.loc 5 638 0
+	.loc 5 634 0
 	mov	r0, #8
-	.loc 5 637 0
-	strh	r3, [r8]	@ movhi
-	b	.L1472
-.LVL1384:
-.L1541:
-	.loc 5 754 0
-	ldrh	r0, [r5, #-4]
-	.loc 5 752 0
+	.loc 5 633 0
+	strh	r3, [r9]	@ movhi
+	b	.L1478
+.LVL1368:
+.L1547:
+	.loc 5 750 0
+	ldrh	r0, [r6, #-4]
+	.loc 5 748 0
 	mov	r2, #0
-.LVL1385:
-	str	r2, [r10, #3780]
-	.loc 5 754 0
+	str	r2, [r7, #3780]
+	.loc 5 750 0
 	cmp	r0, r2
-	.loc 5 757 0
+	.loc 5 753 0
 	addeq	r0, r3, #1
-	b	.L1472
-.L1585:
+	b	.L1478
+.L1592:
 	.align	2
-.L1584:
+.L1591:
 	.word	.LANCHOR0
 	.word	.LANCHOR2
-	.word	.LANCHOR0+3184
+	.word	.LANCHOR0+2320
 	.word	.LANCHOR3-4064
-	.word	.LC100
-	.word	.LANCHOR0+2568
-	.word	.LANCHOR0+3172
-	.word	.LANCHOR0+3136
-	.word	.LANCHOR0+2280
+	.word	.LC103
+	.word	.LANCHOR0+2564
+	.word	.LANCHOR0+3168
+	.word	.LANCHOR0+3132
+	.word	.LANCHOR0+2324
 	.word	.LANCHOR1+551
 	.word	.LC1
-	.word	.LANCHOR0+2328
-	.word	.LANCHOR0+2376
+	.word	.LANCHOR0+2372
+	.word	.LANCHOR0+2420
 	.word	.LANCHOR3-4066
-	.word	.LANCHOR0+2276
-.LBE503:
-.LBE505:
-.LFE259:
-	.fnend
+.LBE526:
+.LBE528:
+.LFE269:
 	.size	rk_ftl_garbage_collect, .-rk_ftl_garbage_collect
 	.align	2
 	.global	sftl_gc
@@ -18191,33 +17084,24 @@ rk_ftl_garbage_collect:
 	.fpu softvfp
 	.type	sftl_gc, %function
 sftl_gc:
-	.fnstart
-.LFB260:
-	.loc 5 761 0
+.LFB270:
+	.loc 5 757 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI424:
+.LCFI412:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI425:
-	.setfp fp, ip, #-4
+.LCFI413:
 	sub	fp, ip, #4
-.LCFI426:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 5 761 0
-	.loc 5 762 0
+.LCFI414:
+	.loc 5 758 0
 	mov	r1, #1
 	mov	r0, r1
 	bl	rk_ftl_garbage_collect
-.LVL1386:
-	.loc 5 763 0
+.LVL1369:
+	.loc 5 759 0
 	ldmfd	sp, {fp, sp, pc}
-.LFE260:
-	.fnend
+.LFE270:
 	.size	sftl_gc, .-sftl_gc
 	.align	2
 	.global	FtlRead
@@ -18226,439 +17110,433 @@ sftl_gc:
 	.fpu softvfp
 	.type	FtlRead, %function
 FtlRead:
-	.fnstart
-.LFB154:
-	.loc 3 813 0
-	@ args = 0, pretend = 0, frame = 56
+.LFB164:
+	.loc 3 814 0
+	@ args = 0, pretend = 0, frame = 52
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL1387:
-	.movsp ip
+.LVL1370:
 	mov	ip, sp
-.LCFI427:
+.LCFI415:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI428:
-	.setfp fp, ip, #-4
+.LCFI416:
 	sub	fp, ip, #4
-.LCFI429:
-	.pad #60
-	sub	sp, sp, #60
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 813 0
-	.loc 3 823 0
+.LCFI417:
+	sub	sp, sp, #52
+	.loc 3 814 0
+	uxtb	r0, r0
+	mov	r6, r1
+	str	r2, [fp, #-68]
+	.loc 3 824 0
 	cmp	r0, #16
-	.loc 3 813 0
-	mov	r7, r1
-	str	r2, [fp, #-76]
+	.loc 3 814 0
 	mov	r9, r3
-	.loc 3 823 0
-	bne	.L1588
 	.loc 3 824 0
+	bne	.L1595
+	.loc 3 825 0
 	mov	r2, r3
-.LVL1388:
-	ldr	r1, [fp, #-76]
-	add	r0, r7, #256
-.LVL1389:
+.LVL1371:
+	ldr	r1, [fp, #-68]
+	add	r0, r6, #256
+.LVL1372:
 	bl	FtlVendorPartRead
-.LVL1390:
-	str	r0, [fp, #-56]
-.LVL1391:
-.L1587:
-	.loc 3 900 0
-	ldr	r0, [fp, #-56]
-.LVL1392:
+.LVL1373:
+	str	r0, [fp, #-48]
+.LVL1374:
+.L1594:
+	.loc 3 901 0
+	ldr	r0, [fp, #-48]
+.LVL1375:
 	sub	sp, fp, #40
-.LCFI430:
+.LCFI418:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL1393:
-.L1588:
-.LCFI431:
-	.loc 3 829 0
-	ldr	r3, [fp, #-76]
-.LVL1394:
-	ldr	r4, .L1621
+.LVL1376:
+.L1595:
+.LCFI419:
+	.loc 3 830 0
+	ldr	r3, [fp, #-68]
+.LVL1377:
+	ldr	r10, .L1628
 	add	r3, r1, r3
-.LVL1395:
-	str	r3, [fp, #-64]
-	ldr	r2, [fp, #-64]
-	ldr	r3, [r4, #116]
+.LVL1378:
+	str	r3, [fp, #-56]
+	ldr	r2, [fp, #-56]
+	ldr	r3, [r10, #116]
 	cmp	r2, r3
-	bhi	.L1608
-	.loc 3 829 0 is_stmt 0 discriminator 1
-	ldr	r3, .L1621+4
-	ldr	r3, [r3]
-	cmn	r3, #1
-	beq	.L1609
-	.loc 3 832 0 is_stmt 1
+	.loc 3 831 0
+	mvnhi	r3, #0
+	strhi	r3, [fp, #-48]
+	.loc 3 830 0
+	bhi	.L1594
+	.loc 3 830 0 is_stmt 0 discriminator 1
+	ldr	r3, .L1628+4
+	ldr	r7, [r3]
+	cmn	r7, #1
+	.loc 3 831 0 is_stmt 1 discriminator 1
+	streq	r7, [fp, #-48]
+	.loc 3 830 0 discriminator 1
+	beq	.L1594
+	.loc 3 833 0
 	bl	FtlCacheWriteBack
-.LVL1396:
-	.loc 3 834 0
-	ldrh	r5, [r4, #34]
-	mov	r0, r7
-	.loc 3 827 0
+.LVL1379:
+	.loc 3 835 0
+	ldrh	r4, [r10, #34]
+	mov	r0, r6
+	.loc 3 828 0
 	mov	r8, #0
-.LVL1397:
-	.loc 3 839 0
-	mov	r6, r8
-.LVL1398:
-	.loc 3 834 0
-	mov	r1, r5
-	bl	__aeabi_uidiv
-.LVL1399:
+.LVL1380:
+	.loc 3 851 0
+	mov	r7, r10
+	.loc 3 840 0
+	mov	r5, r8
+.LVL1381:
 	.loc 3 835 0
-	ldr	r3, [fp, #-64]
-	mov	r1, r5
-	.loc 3 834 0
-	str	r0, [fp, #-68]
+	mov	r1, r4
+	bl	__udivsi3
+.LVL1382:
+	.loc 3 836 0
+	ldr	r3, [fp, #-56]
+	mov	r1, r4
 	.loc 3 835 0
-	sub	r0, r3, #1
-	bl	__aeabi_uidiv
-.LVL1400:
+	str	r0, [fp, #-60]
 	.loc 3 836 0
-	ldr	r3, [fp, #-68]
-.LVL1401:
-	.loc 3 834 0
-	ldr	r5, [fp, #-68]
-.LVL1402:
+	sub	r0, r3, #1
+	bl	__udivsi3
+.LVL1383:
+	.loc 3 837 0
+	ldr	r3, [fp, #-60]
+.LVL1384:
 	.loc 3 835 0
-	str	r0, [fp, #-72]
+	ldr	r4, [fp, #-60]
+.LVL1385:
 	.loc 3 836 0
+	str	r0, [fp, #-64]
+	.loc 3 837 0
 	rsb	r3, r3, #1
-.LVL1403:
-	.loc 3 827 0
-	str	r8, [fp, #-84]
-.LVL1404:
-	.loc 3 836 0
+.LVL1386:
+	.loc 3 828 0
+	str	r8, [fp, #-76]
+.LVL1387:
+	.loc 3 837 0
 	add	r3, r3, r0
-.LVL1405:
-	.loc 3 819 0
-	str	r8, [fp, #-80]
-	.loc 3 836 0
-	str	r3, [fp, #-60]
-	.loc 3 840 0
-	ldr	r2, [fp, #-60]
-.LVL1406:
-	ldr	r3, [r4, #2440]
-	.loc 3 814 0
-	str	r8, [fp, #-56]
-	.loc 3 840 0
-	add	r3, r3, r2
-	str	r3, [r4, #2440]
-.LVL1407:
-.L1590:
+.LVL1388:
+	.loc 3 820 0
+	str	r8, [fp, #-72]
+	.loc 3 837 0
+	str	r3, [fp, #-52]
 	.loc 3 841 0
-	ldr	r3, [fp, #-60]
-.LVL1408:
+	ldr	r2, [fp, #-52]
+.LVL1389:
+	ldr	r3, [r10, #2484]
+	.loc 3 815 0
+	str	r8, [fp, #-48]
+	.loc 3 841 0
+	add	r3, r3, r2
+	str	r3, [r10, #2484]
+.LVL1390:
+.L1597:
+	.loc 3 842 0
+	ldr	r3, [fp, #-52]
+.LVL1391:
 	cmp	r3, #0
-	bne	.L1606
-	.loc 3 897 0
-	ldr	r3, .L1621
-.LVL1409:
-	movw	r2, #3186
+	bne	.L1613
+	.loc 3 898 0
+	ldr	r3, .L1628
+.LVL1392:
+	movw	r2, #3182
 	ldrh	r2, [r3, r2]
 	cmp	r2, #0
-	bne	.L1607
-	.loc 3 897 0 is_stmt 0 discriminator 1
-	movw	r2, #2276
-	ldrh	r3, [r3, r2]
+	bne	.L1614
+	.loc 3 898 0 is_stmt 0 discriminator 1
+	add	r3, r3, #2320
+	ldrh	r3, [r3]
 	cmp	r3, #31
-	bhi	.L1587
-.L1607:
-	.loc 3 898 0 is_stmt 1
+	bhi	.L1594
+.L1614:
+	.loc 3 899 0 is_stmt 1
 	mov	r1, #1
 	mov	r0, #0
-.LVL1410:
+.LVL1393:
 	bl	rk_ftl_garbage_collect
-.LVL1411:
-	b	.L1587
-.LVL1412:
-.L1606:
-	.loc 3 842 0
+.LVL1394:
+	b	.L1594
+.LVL1395:
+.L1613:
+	.loc 3 843 0
+	sub	r1, fp, #44
 	mov	r2, #0
-	sub	r1, fp, #48
-	mov	r0, r5
-.LVL1413:
+	mov	r0, r4
+.LVL1396:
 	bl	log2phys
-.LVL1414:
-	.loc 3 843 0
-	ldr	r2, [fp, #-48]
-	cmn	r2, #1
+.LVL1397:
+	.loc 3 844 0
+	ldr	r1, [fp, #-44]
+	cmn	r1, #1
 	moveq	r10, #0
-.LVL1415:
-	beq	.L1592
-	.loc 3 850 0
-	ldr	r3, [r4, #3792]
-	mov	r1, #20
-	ldrh	r10, [r4, #34]
-.LVL1416:
-	mla	r3, r1, r6, r3
-	str	r2, [r3, #4]
+.LVL1398:
+	beq	.L1599
 	.loc 3 851 0
-	ldr	r2, [fp, #-68]
-.LVL1417:
-	cmp	r5, r2
-	bne	.L1596
+	ldr	r2, [r7, #3792]
+	mov	r0, #20
 	.loc 3 852 0
-	ldr	r2, [r4, #3776]
-.LVL1418:
-	.loc 3 853 0
-	mov	r1, r10
-	mov	r0, r7
+	ldr	r3, [fp, #-60]
+.LVL1399:
+	ldrh	r10, [r7, #34]
+.LVL1400:
+	.loc 3 851 0
+	mla	r2, r0, r5, r2
 	.loc 3 852 0
-	str	r3, [fp, #-88]
-	str	r2, [r3, #8]
+	cmp	r4, r3
+	.loc 3 851 0
+	str	r1, [r2, #4]
+	.loc 3 852 0
+	bne	.L1603
 	.loc 3 853 0
-	bl	__aeabi_uidivmod
-.LVL1419:
-	ldr	r3, [fp, #-76]
-.LVL1420:
+	ldr	r1, [r7, #3776]
 	.loc 3 854 0
-	sub	r2, r10, r1
+	mov	r0, r6
 	.loc 3 853 0
-	str	r1, [fp, #-80]
-.LVL1421:
-	cmp	r3, r2
-	movcs	r3, r2
-.LVL1422:
-	.loc 3 856 0
-	cmp	r3, r10
-	str	r3, [fp, #-84]
-	ldr	r3, [fp, #-88]
+	str	r2, [fp, #-80]
+	str	r1, [r2, #8]
+	.loc 3 854 0
+	mov	r1, r10
+	bl	__umodsi3
+.LVL1401:
+	ldr	r3, [fp, #-68]
+.LVL1402:
+	.loc 3 855 0
+	sub	r1, r10, r0
 	.loc 3 857 0
-	streq	r9, [r3, #8]
-.LVL1423:
-.L1597:
-	.loc 3 866 0
-	ldrh	r2, [r4, #88]
-.LVL1424:
-	ldr	r1, [r4, #3772]
+	ldr	r2, [fp, #-80]
+	.loc 3 854 0
+	str	r0, [fp, #-72]
+.LVL1403:
+	cmp	r3, r1
+	movcs	r3, r1
+.LVL1404:
+	.loc 3 857 0
+	cmp	r3, r10
+	str	r3, [fp, #-76]
+	.loc 3 858 0
+	streq	r9, [r2, #8]
+.LVL1405:
+.L1604:
 	.loc 3 867 0
-	str	r5, [r3, #16]
-	.loc 3 866 0
-	mul	r2, r6, r2
+	ldrh	r1, [r7, #88]
+	ldr	r0, [r7, #3772]
 	.loc 3 868 0
-	add	r6, r6, #1
-	.loc 3 866 0
-	bic	r2, r2, #3
-	add	r2, r1, r2
-	str	r2, [r3, #12]
-	b	.L1595
-.LVL1425:
-.L1594:
-	.loc 3 845 0
-	mla	r0, r0, r5, r10
-.LVL1426:
+	str	r4, [r2, #16]
+	.loc 3 867 0
+	mul	r1, r5, r1
+	.loc 3 869 0
+	add	r5, r5, #1
+	.loc 3 867 0
+	bic	r1, r1, #3
+	add	r1, r0, r1
+	str	r1, [r2, #12]
+	b	.L1602
+.LVL1406:
+.L1601:
 	.loc 3 846 0
-	ldr	r3, [fp, #-64]
-	cmp	r3, r0
-	movhi	r3, #1
-	movls	r3, #0
-	cmp	r7, r0
-	movhi	r3, #0
-	cmp	r3, #0
-	beq	.L1593
+	mla	r0, r0, r4, r10
+.LVL1407:
 	.loc 3 847 0
-	sub	r0, r0, r7
-.LVL1427:
-.LBB512:
-.LBB513:
-.LBB514:
+	ldr	r2, [fp, #-56]
+	cmp	r2, r0
+	movhi	r2, #1
+	movls	r2, #0
+	cmp	r6, r0
+	movhi	r2, #0
+	cmp	r2, #0
+	beq	.L1600
+	.loc 3 848 0
+	sub	r0, r0, r6
+.LVL1408:
+.LBB535:
+.LBB536:
+.LBB537:
 	.loc 1 202 0
 	mov	r1, #512
 	add	r0, r9, r0, lsl #9
 	bl	__memzero
-.LVL1428:
-.L1593:
-.LBE514:
-.LBE513:
-.LBE512:
-	.loc 3 844 0 discriminator 2
+.LVL1409:
+.L1600:
+.LBE537:
+.LBE536:
+.LBE535:
+	.loc 3 845 0 discriminator 2
 	add	r10, r10, #1
-.L1592:
-	.loc 3 844 0 is_stmt 0 discriminator 1
-	ldrh	r0, [r4, #34]
-.LVL1429:
-	cmp	r10, r0
-	bcc	.L1594
-.L1595:
-	.loc 3 873 0 is_stmt 1
-	ldr	r3, [fp, #-60]
-.LVL1430:
-	.loc 3 871 0
-	add	r5, r5, #1
-	.loc 3 873 0
-	subs	r3, r3, #1
-	str	r3, [fp, #-60]
-	beq	.L1599
-	.loc 3 873 0 is_stmt 0 discriminator 1
-	ldrh	r3, [r4, #8]
-.LVL1431:
-	cmp	r6, r3, lsl #2
-	bne	.L1590
-.LVL1432:
 .L1599:
+	.loc 3 845 0 is_stmt 0 discriminator 1
+	ldrh	r0, [r7, #34]
+.LVL1410:
+	cmp	r10, r0
+	bcc	.L1601
+.LVL1411:
+.L1602:
 	.loc 3 874 0 is_stmt 1
-	cmp	r6, #0
-	beq	.L1590
-	.loc 3 875 0
-	mov	r2, #0
-	mov	r1, r6
-	ldr	r0, [r4, #3792]
+	ldr	r3, [fp, #-52]
+.LVL1412:
+	.loc 3 872 0
+	add	r4, r4, #1
+	.loc 3 874 0
+	subs	r3, r3, #1
+	str	r3, [fp, #-52]
+	beq	.L1606
+	.loc 3 874 0 is_stmt 0 discriminator 1
+	ldrh	r2, [r7, #8]
+	cmp	r5, r2, lsl #2
+	bne	.L1597
+.L1606:
+	.loc 3 875 0 is_stmt 1
+	cmp	r5, #0
+	beq	.L1597
 	.loc 3 876 0
+	mov	r2, #0
+	mov	r1, r5
+	ldr	r0, [r7, #3792]
+	.loc 3 877 0
 	mov	r10, #0
-.LVL1433:
-	.loc 3 875 0
+.LVL1413:
+	.loc 3 876 0
 	bl	FlashReadPages
-.LVL1434:
-	.loc 3 882 0
+.LVL1414:
+	.loc 3 883 0
 	lsl	r3, r8, #9
-	str	r3, [fp, #-96]
-	.loc 3 879 0
-	ldr	r3, [fp, #-80]
-.LVL1435:
-	lsl	r3, r3, #9
-.LVL1436:
 	str	r3, [fp, #-88]
-	ldr	r3, [fp, #-84]
+	.loc 3 880 0
+	ldr	r3, [fp, #-72]
+.LVL1415:
 	lsl	r3, r3, #9
-	str	r3, [fp, #-92]
-.L1605:
+.LVL1416:
+	str	r3, [fp, #-80]
+	ldr	r3, [fp, #-76]
+	lsl	r3, r3, #9
+	str	r3, [fp, #-84]
+.LVL1417:
+.L1612:
 	mov	r3, #20
-	.loc 3 877 0
-	ldr	r2, [r4, #3792]
-	mul	r3, r3, r10
-	ldr	r0, [fp, #-68]
-.LVL1437:
-	add	r2, r2, r3
-	ldr	r1, [r2, #16]
-	cmp	r0, r1
-	bne	.L1601
+.LVL1418:
 	.loc 3 878 0
+	ldr	r2, [r7, #3792]
+	mul	ip, r3, r10
+	ldr	r3, [fp, #-60]
+.LVL1419:
+	add	r2, r2, ip
+	ldr	r1, [r2, #16]
+	cmp	r3, r1
+	bne	.L1608
+	.loc 3 879 0
 	ldr	r1, [r2, #8]
-	ldr	r2, [r4, #3776]
+	ldr	r2, [r7, #3776]
 	cmp	r1, r2
-	bne	.L1602
-	str	r3, [fp, #-100]
-	.loc 3 879 0
+	bne	.L1609
+	.loc 3 880 0
+	ldr	r3, [fp, #-80]
+.LVL1420:
 	mov	r0, r9
-.LVL1438:
-	ldr	r3, [fp, #-88]
-	ldr	r2, [fp, #-92]
+	ldr	r2, [fp, #-84]
+	str	ip, [fp, #-92]
 	add	r1, r1, r3
-.LVL1439:
-.L1620:
-	.loc 3 882 0
+.LVL1421:
+.L1627:
+	.loc 3 883 0
 	bl	ftl_memcpy
-.LVL1440:
-	ldr	r3, [fp, #-100]
-.LVL1441:
-.L1602:
-	.loc 3 884 0
-	ldr	r2, [r4, #3792]
-	ldr	r0, [r2, r3]
-.LVL1442:
-	add	ip, r2, r3
-	cmn	r0, #1
+.LVL1422:
+	ldr	ip, [fp, #-92]
+.LVL1423:
+.L1609:
 	.loc 3 885 0
-	ldreq	r1, [r4, #2688]
+	ldr	r2, [r7, #3792]
+	ldr	r0, [r2, ip]
+	add	lr, r2, ip
+	cmn	r0, #1
+	.loc 3 886 0
+	ldreq	r1, [r7, #2684]
+	.loc 3 887 0
+	streq	r0, [fp, #-48]
 	.loc 3 886 0
-	streq	r0, [fp, #-56]
-	.loc 3 885 0
 	addeq	r1, r1, #1
-	streq	r1, [r4, #2688]
-	.loc 3 888 0
-	ldr	r3, [r2, r3]
-	cmp	r3, #256
-	bne	.L1604
-.LBB515:
+	streq	r1, [r7, #2684]
 	.loc 3 889 0
-	ldr	r0, [ip, #4]
+	ldr	r2, [r2, ip]
+	cmp	r2, #256
+	bne	.L1611
+.LBB538:
+	.loc 3 890 0
+	ldr	r0, [lr, #4]
 	ubfx	r0, r0, #10, #16
 	bl	P2V_block_in_plane
-.LVL1443:
-	.loc 3 890 0
+.LVL1424:
+	.loc 3 891 0
 	bl	FtlGcRefreshBlock
-.LVL1444:
-.L1604:
-.LBE515:
-	.loc 3 876 0 discriminator 2
+.LVL1425:
+.L1611:
+.LBE538:
+	.loc 3 877 0 discriminator 2
 	add	r10, r10, #1
-	cmp	r6, r10
-	bne	.L1605
-	.loc 3 893 0
-	mov	r6, #0
-	b	.L1590
-.LVL1445:
-.L1596:
-	.loc 3 858 0
-	ldr	r2, [fp, #-72]
-.LVL1446:
-	cmp	r5, r2
-	bne	.L1598
+	cmp	r5, r10
+	bne	.L1612
+	.loc 3 894 0
+	mov	r5, #0
+	b	.L1597
+.LVL1426:
+.L1603:
 	.loc 3 859 0
-	ldr	r2, [r4, #3768]
-.LVL1447:
+	ldr	r3, [fp, #-64]
+.LVL1427:
+	cmp	r4, r3
+	bne	.L1605
 	.loc 3 860 0
-	ldr	r1, [fp, #-64]
-	.loc 3 859 0
-	str	r2, [r3, #8]
+	ldr	r1, [r7, #3768]
+	.loc 3 861 0
+	ldr	r3, [fp, #-56]
+.LVL1428:
 	.loc 3 860 0
-	mul	r2, r10, r5
-	sub	r8, r1, r2
+	str	r1, [r2, #8]
 	.loc 3 861 0
-	cmp	r10, r8
+	mul	r1, r10, r4
+	sub	r8, r3, r1
 	.loc 3 862 0
-	subeq	r2, r2, r7
-	addeq	r2, r9, r2, lsl #9
-	streq	r2, [r3, #8]
-	b	.L1597
-.LVL1448:
-.L1598:
-	.loc 3 864 0
-	mul	r10, r5, r10
-	sub	r10, r10, r7
+	cmp	r10, r8
+	.loc 3 863 0
+	subeq	r1, r1, r6
+	addeq	r1, r9, r1, lsl #9
+	streq	r1, [r2, #8]
+	b	.L1604
+.LVL1429:
+.L1605:
+	.loc 3 865 0
+	mul	r10, r4, r10
+	sub	r10, r10, r6
 	add	r10, r9, r10, lsl #9
-	str	r10, [r3, #8]
-	b	.L1597
-.LVL1449:
-.L1601:
-	.loc 3 880 0
-	ldr	r0, [fp, #-72]
-.LVL1450:
-	cmp	r0, r1
-	bne	.L1602
+	str	r10, [r2, #8]
+	b	.L1604
+.LVL1430:
+.L1608:
 	.loc 3 881 0
+	ldr	r3, [fp, #-64]
+.LVL1431:
+	cmp	r3, r1
+	bne	.L1609
+	.loc 3 882 0
 	ldr	r1, [r2, #8]
-	ldr	r2, [r4, #3768]
+	ldr	r2, [r7, #3768]
 	cmp	r1, r2
-	bne	.L1602
-	str	r3, [fp, #-100]
-	.loc 3 882 0
-	ldrh	r0, [r4, #34]
-.LVL1451:
-	ldr	r3, [fp, #-72]
-.LVL1452:
-	ldr	r2, [fp, #-96]
+	bne	.L1609
+	.loc 3 883 0
+	ldrh	r0, [r7, #34]
+	str	ip, [fp, #-92]
+	ldr	r2, [fp, #-88]
 	mul	r0, r3, r0
-	sub	r0, r0, r7
+	sub	r0, r0, r6
 	add	r0, r9, r0, lsl #9
-	b	.L1620
-.LVL1453:
-.L1608:
-	.loc 3 830 0
-	mvn	r3, #0
-.L1609:
-	str	r3, [fp, #-56]
-	b	.L1587
-.L1622:
+	b	.L1627
+.L1629:
 	.align	2
-.L1621:
+.L1628:
 	.word	.LANCHOR0
 	.word	.LANCHOR2
-.LFE154:
-	.fnend
+.LFE164:
 	.size	FtlRead, .-FtlRead
 	.align	2
 	.global	sftl_read
@@ -18667,39 +17545,30 @@ FtlRead:
 	.fpu softvfp
 	.type	sftl_read, %function
 sftl_read:
-	.fnstart
-.LFB159:
-	.loc 3 1201 0
+.LFB169:
+	.loc 3 1204 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL1454:
-	.movsp ip
+.LVL1432:
 	mov	ip, sp
-.LCFI432:
+.LCFI420:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI433:
-	.setfp fp, ip, #-4
+.LCFI421:
 	sub	fp, ip, #4
-.LCFI434:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 1201 0
-	.loc 3 1202 0
+.LCFI422:
+	.loc 3 1205 0
 	mov	r3, r2
 	mov	r2, r1
-.LVL1455:
+.LVL1433:
 	mov	r1, r0
-.LVL1456:
+.LVL1434:
 	mov	r0, #0
-.LVL1457:
+.LVL1435:
 	bl	FtlRead
-.LVL1458:
-	.loc 3 1204 0
+.LVL1436:
+	.loc 3 1206 0
 	ldmfd	sp, {fp, sp, pc}
-.LFE159:
-	.fnend
+.LFE169:
 	.size	sftl_read, .-sftl_read
 	.align	2
 	.global	FtlWrite
@@ -18708,760 +17577,762 @@ sftl_read:
 	.fpu softvfp
 	.type	FtlWrite, %function
 FtlWrite:
-	.fnstart
-.LFB157:
-	.loc 3 959 0
+.LFB167:
+	.loc 3 962 0
 	@ args = 0, pretend = 0, frame = 64
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL1459:
-	.movsp ip
+.LVL1437:
 	mov	ip, sp
-.LCFI435:
+.LCFI423:
 	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI436:
-	.setfp fp, ip, #-4
+.LCFI424:
 	sub	fp, ip, #4
-.LCFI437:
-	.pad #68
-	sub	sp, sp, #68
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 959 0
-	.loc 3 967 0
+.LCFI425:
+	sub	sp, sp, #64
+	.loc 3 962 0
+	uxtb	r0, r0
+	mov	r8, r1
+	str	r2, [fp, #-76]
+	.loc 3 970 0
 	cmp	r0, #16
-	.loc 3 959 0
-	mov	r9, r1
-	str	r2, [fp, #-80]
-	str	r3, [fp, #-84]
-	.loc 3 967 0
-	bne	.L1625
-	.loc 3 968 0
+	.loc 3 962 0
+	str	r3, [fp, #-80]
+	.loc 3 970 0
+	bne	.L1632
+	.loc 3 971 0
 	mov	r2, r3
-.LVL1460:
-	ldr	r1, [fp, #-80]
-	add	r0, r9, #256
-.LVL1461:
+.LVL1438:
+	ldr	r1, [fp, #-76]
+	add	r0, r8, #256
+.LVL1439:
 	bl	FtlVendorPartWrite
-.LVL1462:
-.L1624:
-	.loc 3 1150 0
+.LVL1440:
+.L1631:
+	.loc 3 1153 0
 	sub	sp, fp, #40
-.LCFI438:
+.LCFI426:
 	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.LVL1463:
-.L1625:
-.LCFI439:
-	.loc 3 971 0
-	ldr	r3, [fp, #-80]
-.LVL1464:
-	ldr	r10, .L1690
+.LVL1441:
+.L1632:
+.LCFI427:
+	.loc 3 974 0
+	ldr	r3, [fp, #-76]
+.LVL1442:
+	ldr	r9, .L1696
 	add	r6, r1, r3
-	ldr	r3, [r10, #116]
-.LVL1465:
+	ldr	r3, [r9, #116]
+.LVL1443:
 	cmp	r6, r3
-	.loc 3 972 0
+	.loc 3 975 0
 	mvnhi	r0, #0
-.LVL1466:
-	.loc 3 971 0
-	bhi	.L1624
-	.loc 3 971 0 is_stmt 0 discriminator 1
-	ldr	r5, .L1690+4
+.LVL1444:
+	.loc 3 974 0
+	bhi	.L1631
+	.loc 3 974 0 is_stmt 0 discriminator 1
+	ldr	r5, .L1696+4
 	ldr	r0, [r5]
 	cmn	r0, #1
-	beq	.L1624
-	.loc 3 974 0 is_stmt 1
-	ldr	r3, .L1690+8
+	beq	.L1631
+	.loc 3 977 0 is_stmt 1
+	ldr	r3, .L1696+8
 	mov	r2, #2048
-	.loc 3 975 0
-	ldrh	r4, [r10, #34]
-	mov	r0, r9
-	.loc 3 974 0
+	.loc 3 978 0
+	ldrh	r4, [r9, #34]
+	mov	r0, r8
+	.loc 3 977 0
 	str	r2, [r3, #-4060]
-	.loc 3 975 0
+	.loc 3 978 0
 	mov	r1, r4
-	bl	__aeabi_uidiv
-.LVL1467:
-	.loc 3 976 0
+	bl	__udivsi3
+.LVL1445:
+	.loc 3 979 0
 	mov	r1, r4
-	.loc 3 975 0
-	mov	r8, r0
-.LVL1468:
-	.loc 3 976 0
+	.loc 3 978 0
+	str	r0, [fp, #-68]
+	.loc 3 979 0
 	sub	r0, r6, #1
-	bl	__aeabi_uidiv
-.LVL1469:
-	.loc 3 977 0
-	sub	r6, r0, r8
+	bl	__udivsi3
+.LVL1446:
 	.loc 3 980 0
-	ldr	r7, [r10, #3948]
-	.loc 3 977 0
-	add	r3, r6, #1
-.LVL1470:
-	.loc 3 979 0
-	add	r2, r6, #1
-.LVL1471:
-	.loc 3 977 0
-	str	r3, [fp, #-76]
+	ldr	r2, [fp, #-68]
+.LVL1447:
+	.loc 3 983 0
+	ldr	r10, [r9, #3948]
 	.loc 3 979 0
-	ldr	r3, [r10, #2448]
+	str	r0, [fp, #-88]
+.LVL1448:
 	.loc 3 980 0
-	cmp	r7, #0
-	.loc 3 976 0
-	str	r0, [fp, #-92]
-.LVL1472:
-	.loc 3 979 0
-	add	r3, r3, r2
-	str	r3, [r10, #2448]
+	sub	r6, r0, r2
+	add	r3, r6, #1
+.LVL1449:
+	.loc 3 982 0
+	add	r2, r6, #1
+.LVL1450:
 	.loc 3 980 0
-	beq	.L1627
-	.loc 3 981 0
-	ldr	r3, [r7, #16]
-	cmp	r8, r3
-	beq	.L1628
+	str	r3, [fp, #-72]
+	.loc 3 983 0
+	cmp	r10, #0
 	.loc 3 982 0
+	ldr	r3, [r9, #2492]
+	add	r3, r3, r2
+	str	r3, [r9, #2492]
+	.loc 3 983 0
+	beq	.L1634
+	.loc 3 984 0
+	ldr	r3, [r10, #16]
+	ldr	r2, [fp, #-68]
+.LVL1451:
+	cmp	r2, r3
+	beq	.L1635
+	.loc 3 985 0
 	bl	FtlCacheWriteBack
-.LVL1473:
-.L1627:
-	.loc 3 1005 0
+.LVL1452:
+.L1634:
+	.loc 3 1008 0
 	ldr	r3, [r5, #8]
-	ldr	r5, .L1690+12
-.LVL1474:
+	ldr	r4, .L1696+12
+.LVL1453:
 	cmp	r3, #0
-	beq	.L1630
-	.loc 3 1005 0 is_stmt 0 discriminator 1
-	ldrh	r3, [r5, #4]
-	.loc 3 1006 0 is_stmt 1 discriminator 1
-	add	r0, r5, #48
+	beq	.L1637
+	.loc 3 1008 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #4]
+	.loc 3 1009 0 is_stmt 1 discriminator 1
+	add	r0, r4, #48
+.LVL1454:
 	cmp	r3, #0
-	moveq	r5, r0
-.L1630:
-	.loc 3 1009 0
-	ldr	r4, .L1690
-	.loc 3 1065 0
-	mov	r6, r8
-.LVL1475:
-.L1631:
-	.loc 3 1008 0
-	ldr	r3, [fp, #-76]
-.LVL1476:
+	moveq	r4, r0
+.LVL1455:
+.L1637:
+	.loc 3 1068 0
+	ldr	r5, [fp, #-68]
+.LVL1456:
+	.loc 3 1012 0
+	ldr	r7, .L1696
+.LVL1457:
+.L1638:
+	.loc 3 1011 0
+	ldr	r3, [fp, #-72]
+.LVL1458:
 	cmp	r3, #0
-	beq	.L1665
-	.loc 3 1009 0
-	ldrb	r2, [r5, #6]	@ zero_extendqisi2
-.LVL1477:
-	ldrh	r3, [r4, #8]
-.LVL1478:
+	beq	.L1672
+	.loc 3 1012 0
+	ldrb	r2, [r4, #6]	@ zero_extendqisi2
+	ldrh	r3, [r7, #8]
+.LVL1459:
 	cmp	r2, r3
-	bcc	.L1632
-	.loc 3 1009 0 is_stmt 0 discriminator 1
-	movw	r2, #1009
-	ldr	r1, .L1690+16
-	ldr	r0, .L1690+20
+	bcc	.L1639
+	.loc 3 1012 0 is_stmt 0 discriminator 1
+	mov	r2, #1012
+	ldr	r1, .L1696+16
+	ldr	r0, .L1696+20
+.LVL1460:
 	bl	printk
-.LVL1479:
-.L1632:
-	.loc 3 1010 0 is_stmt 1
-	ldrh	r10, [r5, #4]
-	cmp	r10, #0
-	bne	.L1633
-	.loc 3 1011 0
-	bl	FtlCacheWriteBack
-.LVL1480:
-	.loc 3 1013 0
-	ldr	r3, .L1690+12
-	ldr	r7, .L1690+4
-	cmp	r5, r3
-	bne	.L1634
+.LVL1461:
+.L1639:
+	.loc 3 1013 0 is_stmt 1
+	ldrh	r9, [r4, #4]
+.LVL1462:
+	cmp	r9, #0
+	bne	.L1640
 	.loc 3 1014 0
-	add	r0, r5, #48
-	ldrh	r10, [r0, #4]
-	cmp	r10, #0
-	bne	.L1635
-	.loc 3 1015 0
-	bl	allocate_new_data_superblock
-.LVL1481:
+	bl	FtlCacheWriteBack
+.LVL1463:
 	.loc 3 1016 0
-	str	r10, [r7, #8]
-.L1635:
+	ldr	r3, .L1696+12
+	ldr	r6, .L1696+4
+	cmp	r4, r3
+	bne	.L1641
+	.loc 3 1017 0
+	add	r0, r4, #48
+	ldrh	r9, [r0, #4]
+	cmp	r9, #0
+	bne	.L1642
 	.loc 3 1018 0
-	ldr	r0, .L1690+12
 	bl	allocate_new_data_superblock
-.LVL1482:
-	.loc 3 1020 0
-	ldr	r5, .L1690+12
-.LVL1483:
+.LVL1464:
 	.loc 3 1019 0
-	ldr	r3, [r7, #8]
-	.loc 3 1020 0
-	add	r0, r5, #48
+	str	r9, [r6, #8]
+.L1642:
+	.loc 3 1021 0
+	ldr	r0, .L1696+12
+	bl	allocate_new_data_superblock
+.LVL1465:
+	.loc 3 1023 0
+	ldr	r4, .L1696+12
+.LVL1466:
+	.loc 3 1022 0
+	ldr	r3, [r6, #8]
+	.loc 3 1023 0
+	add	r0, r4, #48
 	cmp	r3, #0
-	movne	r5, r0
-.LVL1484:
-.L1636:
-	.loc 3 1030 0
-	ldrh	r3, [r5, #4]
+	movne	r4, r0
+.LVL1467:
+.L1643:
+	.loc 3 1033 0
+	ldrh	r3, [r4, #4]
 	cmp	r3, #0
-	bne	.L1633
-	.loc 3 1031 0
-	mov	r0, r5
+	bne	.L1640
+	.loc 3 1034 0
+	mov	r0, r4
 	bl	allocate_new_data_superblock
-.LVL1485:
-.L1633:
-	.loc 3 1040 0
-	ldrh	r3, [r5, #4]
-	ldr	r2, [fp, #-76]
-.LVL1486:
+.LVL1468:
+.L1640:
+	.loc 3 1043 0
+	ldrh	r3, [r4, #4]
+	ldr	r2, [fp, #-72]
+.LVL1469:
 	cmp	r3, r2
 	movcs	r3, r2
-	.loc 3 1038 0
-	ldrb	r2, [r5, #7]	@ zero_extendqisi2
-.LVL1487:
+	.loc 3 1041 0
+	ldrb	r2, [r4, #7]	@ zero_extendqisi2
+.LVL1470:
 	lsl	r2, r2, #2
 	cmp	r3, r2
 	movcs	r3, r2
-	.loc 3 1042 0
-	ldrb	r2, [r5, #6]	@ zero_extendqisi2
-	str	r3, [fp, #-108]
-	ldrh	r3, [r4, #8]
+	.loc 3 1045 0
+	ldrb	r2, [r4, #6]	@ zero_extendqisi2
+	str	r3, [fp, #-104]
+	ldrh	r3, [r7, #8]
 	cmp	r2, r3
-	bcc	.L1637
-	.loc 3 1042 0 is_stmt 0 discriminator 1
-	movw	r2, #1042
-	ldr	r1, .L1690+16
-	ldr	r0, .L1690+20
+	bcc	.L1644
+	.loc 3 1045 0 is_stmt 0 discriminator 1
+	movw	r2, #1045
+	ldr	r1, .L1696+16
+	ldr	r0, .L1696+20
+.LVL1471:
 	bl	printk
-.LVL1488:
-.L1637:
-	.loc 3 1065 0 is_stmt 1 discriminator 1
-	mov	r3, #0
-.LVL1489:
-.L1689:
-	.loc 3 1043 0 discriminator 2
-	str	r3, [fp, #-72]
-	ldr	r3, [fp, #-72]
-	ldr	r2, [fp, #-108]
-	cmp	r3, r2
-	bne	.L1659
-.L1639:
-	.loc 3 1124 0
-	ldr	r3, [r4, #3948]
-.LVL1490:
-	cmp	r3, #0
-	beq	.L1660
-	.loc 3 1126 0
-	ldr	r3, [fp, #-76]
-.LVL1491:
-	sub	r3, r3, #1
-	str	r3, [fp, #-76]
+.LVL1472:
+.L1644:
+	.loc 3 1068 0 is_stmt 1 discriminator 1
+	mov	r9, #0
+.LVL1473:
+.L1645:
+	.loc 3 1046 0 discriminator 1
+	ldr	r3, [fp, #-104]
+	cmp	r9, r3
+	bne	.L1666
+.L1646:
 	.loc 3 1127 0
+	ldr	r3, [r7, #3948]
+	cmp	r3, #0
+	beq	.L1667
+	.loc 3 1129 0
 	ldr	r3, [fp, #-72]
-.LVL1492:
-	subs	r3, r3, #1
+.LVL1474:
+	.loc 3 1130 0
+	subs	r9, r9, #1
+	.loc 3 1129 0
+	sub	r3, r3, #1
 	str	r3, [fp, #-72]
-	bne	.L1660
-.LVL1493:
-.L1665:
-	.loc 3 1134 0
-	ldr	r3, [fp, #-92]
-.LVL1494:
+	.loc 3 1130 0
+	bne	.L1667
+.L1672:
+	.loc 3 1137 0
+	ldr	r3, [fp, #-88]
+.LVL1475:
 	mov	r0, #0
-	sub	r1, r3, r8
+	ldr	r2, [fp, #-68]
+.LVL1476:
+	.loc 3 1139 0
+	ldr	r4, .L1696+24
+.LVL1477:
+	.loc 3 1137 0
+	sub	r1, r3, r2
 	bl	rk_ftl_garbage_collect
-.LVL1495:
-	.loc 3 1136 0
-	ldr	r2, .L1690
-	movw	r3, #2276
-	ldrh	r3, [r2, r3]
-	cmp	r3, #15
-	bhi	.L1662
-	.loc 3 1138 0
-	ldr	r4, .L1690+24
-	ldr	r5, .L1690+28
-.LVL1496:
-.L1685:
+.LVL1478:
+	.loc 3 1139 0
 	ldrh	r3, [r4]
+	cmp	r3, #15
+	.loc 3 1141 0
+	addls	r5, r4, #244
+.LVL1479:
+	ldrls	r6, .L1696+28
+	.loc 3 1139 0
+	bhi	.L1669
+.L1692:
+	.loc 3 1141 0
+	ldrh	r3, [r5]
 	movw	r2, #65535
 	cmp	r3, r2
-	bne	.L1666
-	.loc 3 1138 0 is_stmt 0 discriminator 1
-	ldrh	r2, [r5]
+	bne	.L1673
+	.loc 3 1141 0 is_stmt 0 discriminator 1
+	ldrh	r2, [r6]
 	cmp	r2, r3
-	bne	.L1666
-	.loc 3 1139 0 is_stmt 1
+	bne	.L1673
+	.loc 3 1142 0 is_stmt 1
 	mov	r0, #0
 	bl	List_get_gc_head_node
-.LVL1497:
+.LVL1480:
 	uxth	r0, r0
 	bl	FtlGcRefreshBlock
-.LVL1498:
-.L1666:
-	.loc 3 1140 0
-	ldr	r3, .L1690+32
-	.loc 3 1142 0
+.LVL1481:
+.L1673:
+	.loc 3 1143 0
+	ldr	r3, .L1696+32
+	.loc 3 1145 0
 	mov	r1, #1
-	.loc 3 1140 0
+	.loc 3 1143 0
 	mov	r2, #128
-	.loc 3 1142 0
+	.loc 3 1145 0
 	mov	r0, r1
-	.loc 3 1140 0
+	.loc 3 1143 0
 	strh	r2, [r3]	@ movhi
-	.loc 3 1141 0
+	.loc 3 1144 0
 	strh	r2, [r3, #-2]	@ movhi
-	.loc 3 1142 0
+	.loc 3 1145 0
 	bl	rk_ftl_garbage_collect
-.LVL1499:
-	.loc 3 1143 0
+.LVL1482:
+	.loc 3 1146 0
 	mov	r1, #1
 	mov	r0, #0
 	bl	rk_ftl_garbage_collect
-.LVL1500:
-	.loc 3 1144 0
-	ldr	r3, .L1690+36
-	ldrh	r3, [r3]
+.LVL1483:
+	.loc 3 1147 0
+	ldrh	r3, [r4]
 	cmp	r3, #8
-	bls	.L1685
-	b	.L1662
-.LVL1501:
-.L1628:
-	.loc 3 984 0
-	ldr	r3, [r10, #2452]
-	.loc 3 985 0
+	bls	.L1692
+	b	.L1669
+.LVL1484:
+.L1635:
+	.loc 3 987 0
+	ldr	r3, [r9, #2496]
+	.loc 3 988 0
 	mov	r1, r4
-	mov	r0, r9
-	.loc 3 984 0
+	mov	r0, r8
+.LVL1485:
+	.loc 3 987 0
 	add	r3, r3, #1
-	str	r3, [r10, #2452]
-	.loc 3 985 0
-	bl	__aeabi_uidivmod
-.LVL1502:
-	ldr	r2, [fp, #-80]
-.LVL1503:
-	.loc 3 986 0
-	sub	r4, r4, r1
-	.loc 3 989 0
-	ldr	r0, [r7, #8]
-	.loc 3 985 0
-	mov	r3, r1
+	str	r3, [r9, #2496]
+	.loc 3 988 0
+	bl	__umodsi3
+.LVL1486:
+	ldr	r3, [fp, #-76]
+.LVL1487:
 	.loc 3 989 0
-	ldr	r1, [fp, #-84]
-	cmp	r2, r4
-	movcc	r4, r2
-	lsl	r10, r4, #9
-	add	r0, r0, r3, lsl #9
-	mov	r2, r10
-.LVL1504:
+	sub	r4, r4, r0
+	.loc 3 992 0
+	ldr	r1, [fp, #-80]
+	cmp	r3, r4
+	movcc	r4, r3
+	ldr	r3, [r10, #8]
+.LVL1488:
+	lsl	r9, r4, #9
+	mov	r2, r9
+	add	r0, r3, r0, lsl #9
 	bl	ftl_memcpy
-.LVL1505:
-	.loc 3 991 0
+.LVL1489:
+	.loc 3 994 0
 	cmp	r6, #0
-	bne	.L1629
-.LVL1506:
-.L1662:
-	.loc 3 992 0
+	bne	.L1636
+.LVL1490:
+.L1669:
+	.loc 3 995 0
 	mov	r0, #0
-	b	.L1624
-.LVL1507:
-.L1629:
-	.loc 3 993 0
-	ldr	r3, [fp, #-80]
-.LVL1508:
-	.loc 3 994 0
-	add	r9, r9, r4
+	b	.L1631
+.LVL1491:
+.L1636:
+	.loc 3 996 0
+	ldr	r3, [fp, #-76]
+.LVL1492:
+	.loc 3 997 0
+	add	r8, r8, r4
 	.loc 3 996 0
-	add	r8, r8, #1
-	.loc 3 993 0
 	sub	r3, r3, r4
+	str	r3, [fp, #-76]
+	.loc 3 998 0
+	ldr	r3, [fp, #-80]
+.LVL1493:
+	add	r3, r3, r9
 	str	r3, [fp, #-80]
-	.loc 3 995 0
-	ldr	r3, [fp, #-84]
-.LVL1509:
-	add	r3, r3, r10
-	str	r3, [fp, #-84]
-	.loc 3 997 0
+	.loc 3 999 0
+	ldr	r3, [fp, #-68]
+.LVL1494:
+	add	r3, r3, #1
+	str	r3, [fp, #-68]
+	.loc 3 1000 0
 	bl	FtlCacheWriteBack
-.LVL1510:
-	str	r6, [fp, #-76]
-	b	.L1627
-.LVL1511:
-.L1634:
-	.loc 3 1025 0
+.LVL1495:
+	str	r6, [fp, #-72]
+	b	.L1634
+.LVL1496:
+.L1641:
+	.loc 3 1028 0
 	ldrh	r2, [r3, #4]
-	.loc 3 1024 0
-	str	r10, [r7, #8]
-	.loc 3 1025 0
+	.loc 3 1027 0
+	str	r9, [r6, #8]
+	.loc 3 1028 0
 	cmp	r2, #0
-	movne	r5, r3
-	bne	.L1633
-	.loc 3 1026 0
-	mov	r0, r5
+	movne	r4, r3
+	bne	.L1640
+	.loc 3 1029 0
+	mov	r0, r4
 	bl	allocate_new_data_superblock
-.LVL1512:
-	b	.L1636
-.LVL1513:
-.L1659:
-	.loc 3 1044 0
-	ldrh	r3, [r5, #4]
-.LVL1514:
+.LVL1497:
+	b	.L1643
+.LVL1498:
+.L1666:
+	.loc 3 1047 0
+	ldrh	r3, [r4, #4]
 	cmp	r3, #0
-	beq	.L1639
-	.loc 3 1048 0
+	beq	.L1646
+	.loc 3 1051 0
 	mov	r2, #0
-	sub	r1, fp, #68
-	mov	r0, r6
-	mov	r7, #20
-	bl	log2phys
-.LVL1515:
-	.loc 3 1049 0
+	sub	r1, fp, #64
 	mov	r0, r5
-	bl	get_new_active_ppa
-.LVL1516:
-	.loc 3 1052 0
-	ldrh	r2, [r4, #88]
-	ldr	r1, [fp, #-72]
-.LVL1517:
-	ldr	r3, [fp, #-72]
-.LVL1518:
-	mul	r1, r2, r1
-	mul	r7, r7, r3
-	.loc 3 1051 0
-	ldr	r3, [r4, #3800]
-.LVL1519:
-	.loc 3 1052 0
-	bic	r1, r1, #3
-	str	r1, [fp, #-100]
-	.loc 3 1051 0
-	add	r3, r3, r7
+.LVL1499:
+	mov	r6, #20
+	bl	log2phys
+.LVL1500:
 	.loc 3 1052 0
-	ldr	r1, [r4, #3772]
-	.loc 3 1051 0
+	mov	r0, r4
+	mul	r6, r6, r9
+	bl	get_new_active_ppa
+.LVL1501:
+	.loc 3 1055 0
+	ldrh	r2, [r7, #88]
+	.loc 3 1054 0
+	ldr	r3, [r7, #3800]
+	.loc 3 1055 0
+	mul	r1, r2, r9
+	.loc 3 1054 0
+	add	r3, r3, r6
 	str	r0, [r3, #4]
-	.loc 3 1052 0
-	ldr	r0, [fp, #-100]
-	str	r1, [fp, #-104]
-	.loc 3 1053 0
-	str	r6, [r3, #16]
-	.loc 3 1052 0
-	add	r10, r1, r0
 	.loc 3 1056 0
-	mov	r1, #0
-	.loc 3 1052 0
+	str	r5, [r3, #16]
+	.loc 3 1055 0
+	bic	r1, r1, #3
+	str	r1, [fp, #-96]
+	ldr	r0, [fp, #-96]
+	ldr	r1, [r7, #3772]
+	add	r10, r1, r0
+	str	r1, [fp, #-100]
 	str	r10, [r3, #12]
-	.loc 3 1056 0
+	.loc 3 1059 0
+	mov	r1, #0
 	mov	r0, r10
 	bl	ftl_memset
-.LVL1520:
-	.loc 3 1058 0
-	ldr	r3, [fp, #-92]
-.LVL1521:
-	cmp	r6, r3
-	cmpne	r6, r8
-	ldrh	r3, [r4, #34]
-.LVL1522:
-	bne	.L1640
-	.loc 3 1059 0
-	cmp	r6, r8
-	bne	.L1641
-	.loc 3 1060 0
-	mov	r1, r3
-	mov	r0, r9
-	str	r3, [fp, #-88]
-	bl	__aeabi_uidivmod
-.LVL1523:
-	.loc 3 1061 0
-	ldr	r3, [fp, #-88]
-	ldr	r2, [fp, #-80]
-.LVL1524:
-	.loc 3 1060 0
-	str	r1, [fp, #-96]
+.LVL1502:
 	.loc 3 1061 0
-	sub	r3, r3, r1
+	ldr	r3, [fp, #-68]
+.LVL1503:
+	ldr	r2, [fp, #-88]
+.LVL1504:
+	cmp	r5, r2
+	cmpne	r5, r3
+	ldrh	r3, [r7, #34]
+.LVL1505:
+	bne	.L1647
+	.loc 3 1062 0
+	ldr	r2, [fp, #-68]
+.LVL1506:
+	cmp	r5, r2
+	bne	.L1648
+	.loc 3 1063 0
+	mov	r1, r3
+	mov	r0, r8
+	str	r3, [fp, #-84]
+	bl	__umodsi3
+.LVL1507:
+	.loc 3 1064 0
+	ldr	r3, [fp, #-84]
+	ldr	r2, [fp, #-76]
+.LVL1508:
+	.loc 3 1063 0
+	str	r0, [fp, #-92]
+	.loc 3 1064 0
+	sub	r3, r3, r0
 	cmp	r3, r2
 	movcs	r3, r2
-	str	r3, [fp, #-88]
-.L1642:
-	.loc 3 1069 0
-	ldrh	r3, [r4, #34]
-	ldr	r2, [fp, #-88]
-.LVL1525:
+	str	r3, [fp, #-84]
+.L1649:
+	.loc 3 1072 0
+	ldrh	r3, [r7, #34]
+	ldr	r2, [fp, #-84]
+.LVL1509:
 	cmp	r2, r3
-	.loc 3 1071 0
-	ldr	r3, [r4, #3800]
-	.loc 3 1069 0
-	bne	.L1643
-	.loc 3 1070 0
-	cmp	r6, r8
-	.loc 3 1071 0
-	add	r7, r3, r7
-	ldreq	r3, [fp, #-84]
-.LVL1526:
-	.loc 3 1070 0
-	beq	.L1687
 	.loc 3 1073 0
-	ldr	r3, [fp, #-88]
-.LVL1527:
-	mul	r2, r3, r6
+	ldr	r3, [fp, #-68]
+.LVL1510:
+	.loc 3 1072 0
+	bne	.L1650
+	.loc 3 1073 0
+	cmp	r5, r3
+	.loc 3 1074 0
+	ldr	r3, [r7, #3800]
+.LVL1511:
+	add	r6, r3, r6
+	ldreq	r3, [fp, #-80]
+.LVL1512:
+	.loc 3 1073 0
+	beq	.L1694
+	.loc 3 1076 0
 	ldr	r3, [fp, #-84]
-.LVL1528:
-	sub	r2, r2, r9
+.LVL1513:
+	mul	r2, r3, r5
+	ldr	r3, [fp, #-80]
+.LVL1514:
+	sub	r2, r2, r8
 	add	r2, r3, r2, lsl #9
-	str	r2, [r7, #8]
-.LVL1529:
-.L1645:
-	.loc 3 1116 0
-	ldrb	r2, [r5, #6]	@ zero_extendqisi2
-	ldrh	r3, [r4, #8]
-.LVL1530:
+	str	r2, [r6, #8]
+.LVL1515:
+.L1652:
+	.loc 3 1119 0
+	ldrb	r2, [r4, #6]	@ zero_extendqisi2
+	ldrh	r3, [r7, #8]
+.LVL1516:
 	cmp	r2, r3
-	bcc	.L1656
-	.loc 3 1116 0 is_stmt 0 discriminator 1
-	movw	r2, #1116
-	ldr	r1, .L1690+16
-	ldr	r0, .L1690+20
+	bcc	.L1663
+	.loc 3 1119 0 is_stmt 0 discriminator 1
+	movw	r2, #1119
+	ldr	r1, .L1696+16
+	ldr	r0, .L1696+20
 	bl	printk
-.LVL1531:
-.L1656:
-	.loc 3 1117 0 is_stmt 1
-	ldr	r3, .L1690+40
-	ldr	r2, [fp, #-104]
-	ldr	r1, [fp, #-100]
+.LVL1517:
+.L1663:
+	.loc 3 1120 0 is_stmt 1
+	ldr	r3, .L1696+36
+	.loc 3 1046 0
+	add	r9, r9, #1
+	.loc 3 1120 0
+	ldr	r2, [fp, #-100]
+	ldr	r1, [fp, #-96]
 	strh	r3, [r2, r1]	@ movhi
-	.loc 3 1118 0
-	ldr	r3, [r4, #2476]
-	.loc 3 1119 0
-	str	r6, [r10, #8]
+	.loc 3 1121 0
+	ldr	r3, [r7, #2520]
 	.loc 3 1122 0
-	add	r6, r6, #1
-	.loc 3 1118 0
+	str	r5, [r10, #8]
+	.loc 3 1125 0
+	add	r5, r5, #1
+	.loc 3 1121 0
 	str	r3, [r10, #4]
 	add	r3, r3, #1
 	cmn	r3, #1
 	moveq	r3, #0
-	str	r3, [r4, #2476]
-	.loc 3 1120 0
-	ldr	r3, [fp, #-68]
-.LVL1532:
+	str	r3, [r7, #2520]
+	.loc 3 1123 0
+	ldr	r3, [fp, #-64]
+.LVL1518:
 	str	r3, [r10, #12]
-	.loc 3 1121 0
-	ldrh	r3, [r5]
-.LVL1533:
+	.loc 3 1124 0
+	ldrh	r3, [r4]
+.LVL1519:
 	strh	r3, [r10, #2]	@ movhi
-	.loc 3 1043 0
-	ldr	r3, [fp, #-72]
-.LVL1534:
-	add	r3, r3, #1
-	b	.L1689
-.LVL1535:
-.L1641:
-	.loc 3 1066 0
-	ldr	r2, [fp, #-80]
-.LVL1536:
-	smulbb	r3, r3, r6
-	add	r2, r9, r2
-.LVL1537:
+	b	.L1645
+.LVL1520:
+.L1648:
+	.loc 3 1069 0
+	ldr	r2, [fp, #-76]
+.LVL1521:
+	smulbb	r3, r3, r5
+	add	r2, r8, r2
+.LVL1522:
 	sub	r2, r2, r3
 	uxth	r3, r2
-	str	r3, [fp, #-88]
-	.loc 3 1065 0
+	str	r3, [fp, #-84]
+	.loc 3 1068 0
 	mov	r3, #0
-	str	r3, [fp, #-96]
-	b	.L1642
-.L1643:
-	.loc 3 1076 0
-	cmp	r6, r8
-	.loc 3 1077 0
-	add	r3, r3, r7
-	ldreq	r2, [r4, #3776]
+	str	r3, [fp, #-92]
+	b	.L1649
+.LVL1523:
+.L1650:
 	.loc 3 1079 0
-	ldrne	r2, [r4, #3768]
+	cmp	r5, r3
+	.loc 3 1080 0
+	ldr	r3, [r7, #3800]
+.LVL1524:
+	ldreq	r2, [r7, #3776]
+	.loc 3 1082 0
+	ldrne	r2, [r7, #3768]
+	.loc 3 1080 0
+	add	r3, r3, r6
+	.loc 3 1082 0
 	str	r2, [r3, #8]
-	.loc 3 1081 0
-	ldr	r3, [fp, #-68]
+	.loc 3 1084 0
+	ldr	r3, [fp, #-64]
 	cmn	r3, #1
-	beq	.L1648
-.LBB516:
-	.loc 3 1083 0
-	str	r3, [fp, #-60]
-	.loc 3 1087 0
+	beq	.L1655
+.LBB539:
+	.loc 3 1086 0
+	str	r3, [fp, #-56]
+	.loc 3 1090 0
 	mov	r1, #1
-	.loc 3 1085 0
-	ldr	r3, [r4, #3800]
+	.loc 3 1088 0
+	ldr	r3, [r7, #3800]
+	.loc 3 1090 0
+	sub	r0, fp, #60
 	.loc 3 1087 0
-	sub	r0, fp, #64
-	.loc 3 1084 0
-	str	r6, [fp, #-48]
-	.loc 3 1085 0
-	add	r3, r3, r7
+	str	r5, [fp, #-44]
+	.loc 3 1088 0
+	add	r3, r3, r6
 	ldr	r2, [r3, #8]
-	.loc 3 1086 0
+	.loc 3 1089 0
 	ldr	r3, [r3, #12]
-	.loc 3 1085 0
-	str	r2, [fp, #-56]
-	.loc 3 1087 0
+	.loc 3 1088 0
+	str	r2, [fp, #-52]
+	.loc 3 1090 0
 	mov	r2, #0
-	.loc 3 1086 0
-	str	r3, [fp, #-52]
-	.loc 3 1087 0
+	.loc 3 1089 0
+	str	r3, [fp, #-48]
+	.loc 3 1090 0
 	bl	FlashReadPages
-.LVL1538:
-	.loc 3 1088 0
-	ldr	r3, [fp, #-64]
+.LVL1525:
+	.loc 3 1091 0
+	ldr	r3, [fp, #-60]
 	cmn	r3, #1
-	.loc 3 1089 0
-	ldreq	r3, [r4, #2688]
+	.loc 3 1092 0
+	ldreq	r3, [r7, #2684]
 	addeq	r3, r3, #1
-	streq	r3, [r4, #2688]
-	.loc 3 1088 0
-	beq	.L1652
+	streq	r3, [r7, #2684]
 	.loc 3 1091 0
+	beq	.L1659
+	.loc 3 1094 0
 	ldr	r3, [r10, #8]
-	cmp	r6, r3
-	beq	.L1651
-	.loc 3 1092 0
-	ldr	r3, [r4, #2688]
-	.loc 3 1093 0
-	mov	r2, r6
-	ldr	r0, .L1690+44
-	.loc 3 1092 0
+	cmp	r5, r3
+	beq	.L1658
+	.loc 3 1095 0
+	ldr	r3, [r7, #2684]
+	.loc 3 1096 0
+	mov	r2, r5
+	ldr	r0, .L1696+40
+	.loc 3 1095 0
 	add	r3, r3, #1
-	str	r3, [r4, #2688]
-	.loc 3 1093 0
+	str	r3, [r7, #2684]
+	.loc 3 1096 0
 	ldr	r1, [r10, #8]
 	bl	printk
-.LVL1539:
-.L1651:
-	.loc 3 1095 0
+.LVL1526:
+.L1658:
+	.loc 3 1098 0
 	ldr	r3, [r10, #8]
-	cmp	r6, r3
-	beq	.L1652
-	.loc 3 1095 0 is_stmt 0 discriminator 1
-	movw	r2, #1095
-	ldr	r1, .L1690+16
-	ldr	r0, .L1690+20
+	cmp	r5, r3
+	beq	.L1659
+	.loc 3 1098 0 is_stmt 0 discriminator 1
+	movw	r2, #1098
+	ldr	r1, .L1696+16
+	ldr	r0, .L1696+20
 	bl	printk
-.LVL1540:
-.L1652:
-	ldr	r3, [fp, #-88]
-.LBE516:
-	.loc 3 1101 0 is_stmt 1
-	cmp	r6, r8
+.LVL1527:
+.L1659:
+.LBE539:
+	.loc 3 1104 0 is_stmt 1
+	ldr	r3, [fp, #-68]
+.LVL1528:
+	cmp	r5, r3
+	ldr	r3, [fp, #-84]
+.LVL1529:
 	lsl	r2, r3, #9
-	bne	.L1653
-	.loc 3 1102 0
-	ldr	r3, [r4, #3800]
-	ldr	r1, [fp, #-84]
-	add	r3, r3, r7
+	bne	.L1660
+	.loc 3 1105 0
+	ldr	r3, [r7, #3800]
+	ldr	r1, [fp, #-80]
+	add	r3, r3, r6
 	ldr	r0, [r3, #8]
-	ldr	r3, [fp, #-96]
+	ldr	r3, [fp, #-92]
 	add	r0, r0, r3, lsl #9
 	bl	ftl_memcpy
-.LVL1541:
-	.loc 3 1106 0
-	ldr	r3, [fp, #-92]
-.LVL1542:
-	cmp	r6, r3
-	bne	.L1645
-.L1654:
-	.loc 3 1107 0
-	ldrh	r3, [r5, #4]
-.LVL1543:
-	cmp	r3, #0
-	.loc 3 1108 0
-	ldrne	r3, [r4, #3800]
-	addne	r7, r3, r7
-	.loc 3 1109 0
-	ldrne	r3, .L1690+8
-	.loc 3 1108 0
-	strne	r7, [r4, #3948]
+.LVL1530:
 	.loc 3 1109 0
-	strne	r5, [r3, #-4076]
-	b	.L1645
-.L1648:
-	.loc 3 1098 0
-	ldr	r3, [r4, #3800]
+	ldr	r3, [fp, #-88]
+.LVL1531:
+	cmp	r5, r3
+	bne	.L1652
+.L1661:
+	.loc 3 1110 0
+	ldrh	r3, [r4, #4]
+.LVL1532:
+	cmp	r3, #0
+	.loc 3 1111 0
+	ldrne	r3, [r7, #3800]
+	addne	r6, r3, r6
+	.loc 3 1112 0
+	ldrne	r3, .L1696+8
+	.loc 3 1111 0
+	strne	r6, [r7, #3948]
+	.loc 3 1112 0
+	strne	r4, [r3, #-4076]
+	b	.L1652
+.L1655:
+	.loc 3 1101 0
+	ldr	r3, [r7, #3800]
 	mov	r1, #0
-	ldrh	r2, [r4, #86]
-	add	r3, r3, r7
+	ldrh	r2, [r7, #86]
+	add	r3, r3, r6
 	ldr	r0, [r3, #8]
 	bl	ftl_memset
-.LVL1544:
-	b	.L1652
-.L1653:
-	.loc 3 1104 0
-	ldrh	r1, [r4, #34]
-	ldr	r0, [fp, #-84]
-.LVL1545:
-	ldr	r3, [r4, #3800]
-	mul	r1, r6, r1
-	add	r3, r3, r7
-	sub	r1, r1, r9
+.LVL1533:
+	b	.L1659
+.L1660:
+	.loc 3 1107 0
+	ldrh	r1, [r7, #34]
+	ldr	r0, [fp, #-80]
+.LVL1534:
+	ldr	r3, [r7, #3800]
+	mul	r1, r5, r1
+	add	r3, r3, r6
+	sub	r1, r1, r8
 	add	r1, r0, r1, lsl #9
 	ldr	r0, [r3, #8]
-.LVL1546:
+.LVL1535:
 	bl	ftl_memcpy
-.LVL1547:
-	b	.L1654
-.L1640:
-	.loc 3 1114 0
-	ldr	r2, [r4, #3800]
-	mul	r3, r6, r3
-	add	r7, r2, r7
-	ldr	r2, [fp, #-84]
-.LVL1548:
-	sub	r3, r3, r9
+.LVL1536:
+	b	.L1661
+.LVL1537:
+.L1647:
+	.loc 3 1117 0
+	ldr	r2, [r7, #3800]
+.LVL1538:
+	mul	r3, r5, r3
+	add	r6, r2, r6
+	ldr	r2, [fp, #-80]
+.LVL1539:
+	sub	r3, r3, r8
 	add	r3, r2, r3, lsl #9
-.L1687:
-	str	r3, [r7, #8]
-	b	.L1645
-.LVL1549:
-.L1660:
-	.loc 3 1130 0
-	mov	r3, r5
-.LVL1550:
+.L1694:
+	str	r3, [r6, #8]
+	b	.L1652
+.LVL1540:
+.L1667:
+	.loc 3 1133 0
+	mov	r3, r4
+.LVL1541:
 	mov	r2, #0
-	ldr	r1, [fp, #-72]
-	ldr	r0, [r4, #3800]
+	mov	r1, r9
+	ldr	r0, [r7, #3800]
+.LVL1542:
 	bl	FtlProgPages
-.LVL1551:
-	.loc 3 1131 0
-	ldr	r3, [fp, #-76]
-.LVL1552:
-	ldr	r2, [fp, #-72]
-.LVL1553:
-	cmp	r3, r2
-	bcs	.L1663
-	.loc 3 1131 0 is_stmt 0 discriminator 1
-	movw	r2, #1131
-.LVL1554:
-	ldr	r1, .L1690+16
-	ldr	r0, .L1690+20
+.LVL1543:
+	.loc 3 1134 0
+	ldr	r3, [fp, #-72]
+.LVL1544:
+	cmp	r3, r9
+	bcs	.L1670
+	.loc 3 1134 0 is_stmt 0 discriminator 1
+	movw	r2, #1134
+	ldr	r1, .L1696+16
+	ldr	r0, .L1696+20
 	bl	printk
-.LVL1555:
-.L1663:
-	.loc 3 1132 0 is_stmt 1
-	ldr	r3, [fp, #-76]
-	ldr	r2, [fp, #-72]
-	sub	r3, r3, r2
-	str	r3, [fp, #-76]
-	b	.L1631
-.L1691:
+.LVL1545:
+.L1670:
+	.loc 3 1135 0 is_stmt 1
+	ldr	r3, [fp, #-72]
+	sub	r3, r3, r9
+	str	r3, [fp, #-72]
+	b	.L1638
+.L1697:
 	.align	2
-.L1690:
+.L1696:
 	.word	.LANCHOR0
 	.word	.LANCHOR2
 	.word	.LANCHOR3
-	.word	.LANCHOR0+2280
+	.word	.LANCHOR0+2324
 	.word	.LANCHOR1+574
 	.word	.LC1
-	.word	.LANCHOR0+2568
-	.word	.LANCHOR0+3182
-	.word	.LANCHOR0+3130
-	.word	.LANCHOR0+2276
+	.word	.LANCHOR0+2320
+	.word	.LANCHOR0+3178
+	.word	.LANCHOR0+3126
 	.word	-3947
-	.word	.LC101
-.LFE157:
-	.fnend
+	.word	.LC104
+.LFE167:
 	.size	FtlWrite, .-FtlWrite
 	.align	2
 	.global	sftl_write
@@ -19470,39 +18341,30 @@ FtlWrite:
 	.fpu softvfp
 	.type	sftl_write, %function
 sftl_write:
-	.fnstart
-.LFB160:
-	.loc 3 1207 0
+.LFB170:
+	.loc 3 1209 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL1556:
-	.movsp ip
+.LVL1546:
 	mov	ip, sp
-.LCFI440:
+.LCFI428:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI441:
-	.setfp fp, ip, #-4
+.LCFI429:
 	sub	fp, ip, #4
-.LCFI442:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 1207 0
-	.loc 3 1208 0
+.LCFI430:
+	.loc 3 1210 0
 	mov	r3, r2
 	mov	r2, r1
-.LVL1557:
+.LVL1547:
 	mov	r1, r0
-.LVL1558:
+.LVL1548:
 	mov	r0, #0
-.LVL1559:
+.LVL1549:
 	bl	FtlWrite
-.LVL1560:
-	.loc 3 1209 0
+.LVL1550:
+	.loc 3 1211 0
 	ldmfd	sp, {fp, sp, pc}
-.LFE160:
-	.fnend
+.LFE170:
 	.size	sftl_write, .-sftl_write
 	.align	2
 	.global	FtlLoadSysInfo
@@ -19511,112 +18373,105 @@ sftl_write:
 	.fpu softvfp
 	.type	FtlLoadSysInfo, %function
 FtlLoadSysInfo:
-	.fnstart
-.LFB214:
-	.loc 2 1360 0
+.LFB224:
+	.loc 2 1409 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI443:
-	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
-.LCFI444:
-	.setfp fp, ip, #-4
+.LCFI431:
+	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
+.LCFI432:
 	sub	fp, ip, #4
-.LCFI445:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 1360 0
-	.loc 2 1368 0
+.LCFI433:
+	.loc 2 1414 0
+	ldr	r4, .L1720
+	.loc 2 1417 0
 	mov	r1, #0
-	.loc 2 1365 0
-	ldr	r4, .L1714
-	ldr	r6, .L1714+4
-	ldr	r3, [r4, #2244]
-	.loc 2 1368 0
+	ldr	r6, .L1720+4
+	.loc 2 1414 0
+	ldr	r3, [r4, #3240]
+	.loc 2 1417 0
 	ldrh	r2, [r4, #16]
-	ldr	r0, [r4, #2260]
-	.loc 2 1365 0
-	str	r3, [r4, #3232]
-	.loc 2 1366 0
+	ldr	r0, [r4, #2300]
+	.loc 2 1414 0
+	str	r3, [r4, #3228]
+	.loc 2 1415 0
 	ldr	r3, [r4, #3244]
-	.loc 2 1368 0
+	.loc 2 1417 0
 	lsl	r2, r2, #1
-	.loc 2 1366 0
-	str	r3, [r4, #3236]
-	.loc 2 1368 0
+	.loc 2 1415 0
+	str	r3, [r4, #3232]
+	.loc 2 1417 0
 	bl	ftl_memset
-.LVL1561:
-	.loc 2 1369 0
-	movw	r3, #2556
+.LVL1551:
+	.loc 2 1418 0
+	movw	r3, #2552
 	ldrh	r0, [r4, r3]
 	movw	r3, #65535
 	cmp	r0, r3
-	bne	.L1694
-.L1702:
-	.loc 2 1370 0
+	bne	.L1700
+.L1708:
+	.loc 2 1419 0
 	mvn	r0, #0
-	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
-.L1694:
-	.loc 2 1378 0
-	ldr	r7, .L1714+8
-	.loc 2 1372 0
+	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
+.L1700:
+	.loc 2 1427 0
+	ldr	r7, .L1720+8
+	.loc 2 1421 0
 	mov	r1, #1
-	.loc 2 1381 0
-	ldr	r8, .L1714+12
-	.loc 2 1372 0
+	.loc 2 1430 0
+	ldr	r8, .L1720+12
+	.loc 2 1421 0
 	bl	FtlGetLastWrittenPage
-.LVL1562:
+.LVL1552:
 	sxth	r5, r0
-.LVL1563:
-	.loc 2 1373 0
+.LVL1553:
+	.loc 2 1422 0
 	add	r0, r0, #1
 	strh	r0, [r6, #2]	@ movhi
-.L1696:
-	.loc 2 1375 0
+.L1702:
+	.loc 2 1424 0
 	cmp	r5, #0
-	bge	.L1699
-	.loc 2 1388 0
-	movw	r2, #1388
-	ldr	r1, .L1714+16
-	ldr	r0, .L1714+20
+	bge	.L1705
+	.loc 2 1437 0
+	movw	r2, #1437
+	ldr	r1, .L1720+16
+	ldr	r0, .L1720+20
 	bl	printk
-.LVL1564:
-.L1698:
-	.loc 2 1390 0
+.LVL1554:
+.L1704:
+	.loc 2 1439 0
 	ldrh	r3, [r4, #16]
 	ldrh	r2, [r4, #86]
 	add	r3, r3, #24
 	cmp	r2, r3, lsl #1
-	bcs	.L1701
-	.loc 2 1390 0 is_stmt 0 discriminator 1
-	movw	r2, #1390
-	ldr	r1, .L1714+16
-	ldr	r0, .L1714+20
+	bcs	.L1707
+	.loc 2 1439 0 is_stmt 0 discriminator 1
+	movw	r2, #1439
+	ldr	r1, .L1720+16
+	ldr	r0, .L1720+20
 	bl	printk
-.LVL1565:
-.L1701:
-	.loc 2 1392 0 is_stmt 1
-	ldr	r5, .L1714+24
-.LVL1566:
+.LVL1555:
+.L1707:
+	.loc 2 1441 0 is_stmt 1
+	ldr	r5, .L1720+24
+.LVL1556:
 	mov	r2, #48
-	ldr	r1, [r4, #3232]
+	ldr	r1, [r4, #3228]
 	mov	r0, r5
 	bl	ftl_memcpy
-.LVL1567:
-	.loc 2 1393 0
+.LVL1557:
+	.loc 2 1442 0
 	ldrh	r2, [r4, #16]
-	ldr	r1, [r4, #3232]
-	ldr	r0, [r4, #2260]
+	ldr	r1, [r4, #3228]
+	ldr	r0, [r4, #2300]
 	lsl	r2, r2, #1
 	add	r1, r1, #48
 	bl	ftl_memcpy
-.LVL1568:
-	.loc 2 1394 0
+.LVL1558:
+	.loc 2 1443 0
 	ldrh	r1, [r4, #16]
-	ldr	r3, [r4, #3232]
+	ldr	r3, [r4, #3228]
 	ldr	r0, [r4]
 	lsr	r2, r1, #3
 	add	r1, r1, #24
@@ -19625,267 +18480,264 @@ FtlLoadSysInfo:
 	bic	r1, r1, #3
 	add	r1, r3, r1
 	bl	ftl_memcpy
-.LVL1569:
-	.loc 2 1396 0
-	ldr	r2, [r4, #2504]
-	ldr	r3, .L1714+12
+.LVL1559:
+	.loc 2 1445 0
+	ldr	r2, [r4, #2244]
+	ldr	r3, .L1720+12
 	cmp	r2, r3
-	bne	.L1702
-	.loc 2 1400 0
-	ldrb	r2, [r4, #2514]	@ zero_extendqisi2
+	bne	.L1708
+	.loc 2 1449 0
+	ldrb	r2, [r4, #2254]	@ zero_extendqisi2
 	ldrh	r3, [r4, #30]
-	.loc 2 1399 0
+	.loc 2 1448 0
 	ldrh	r7, [r5, #8]
-	.loc 2 1400 0
+	.loc 2 1449 0
 	cmp	r2, r3
-	.loc 2 1399 0
+	.loc 2 1448 0
 	strh	r7, [r6, #6]	@ movhi
-	.loc 2 1400 0
-	bne	.L1702
-	.loc 2 1403 0
-	ldr	r3, .L1714+28
-	.loc 2 1405 0
+	.loc 2 1449 0
+	bne	.L1708
+	.loc 2 1452 0
+	ldr	r3, .L1720+28
+	.loc 2 1454 0
 	ldrh	r2, [r4, #34]
-	.loc 2 1406 0
+	.loc 2 1455 0
 	ldr	r6, [r4, #20]
-	.loc 2 1403 0
+	.loc 2 1452 0
 	str	r7, [r3, #-4056]
-	.loc 2 1404 0
+	.loc 2 1453 0
 	ldrh	r3, [r4, #78]
-	.loc 2 1406 0
+	.loc 2 1455 0
 	ldrh	r0, [r4, #134]
 	ldrh	r1, [r4, #8]
-	.loc 2 1404 0
+	.loc 2 1453 0
 	mul	r3, r7, r3
-	.loc 2 1406 0
+	.loc 2 1455 0
 	sub	r0, r6, r0
 	sub	r0, r0, r7
-	.loc 2 1404 0
-	str	r3, [r4, #2436]
-	.loc 2 1405 0
+	.loc 2 1453 0
+	str	r3, [r4, #2480]
+	.loc 2 1454 0
 	mul	r3, r3, r2
 	str	r3, [r4, #116]
-	.loc 2 1406 0
-	bl	__aeabi_uidiv
-.LVL1570:
-	.loc 2 1412 0
+	.loc 2 1455 0
+	bl	__udivsi3
+.LVL1560:
+	.loc 2 1461 0
 	cmp	r7, r6
-	.loc 2 1406 0
-	movw	r3, #2552
+	.loc 2 1455 0
+	movw	r3, #2548
 	strh	r0, [r4, r3]	@ movhi
-	.loc 2 1412 0
-	bls	.L1703
-	.loc 2 1412 0 is_stmt 0 discriminator 1
-	movw	r2, #1412
-	ldr	r1, .L1714+16
-	ldr	r0, .L1714+20
+	.loc 2 1461 0
+	bls	.L1709
+	.loc 2 1461 0 is_stmt 0 discriminator 1
+	movw	r2, #1461
+	ldr	r1, .L1720+16
+	ldr	r0, .L1720+20
 	bl	printk
-.LVL1571:
-.L1703:
-	.loc 2 1414 0 is_stmt 1
+.LVL1561:
+.L1709:
+	.loc 2 1463 0 is_stmt 1
 	ldrh	r0, [r5, #14]
-	movw	r3, #2280
-	ldr	r1, .L1714+32
-	.loc 2 1419 0
+	movw	r3, #2324
+	ldr	r1, .L1720+32
+	.loc 2 1468 0
 	mvn	ip, #0
-	.loc 2 1414 0
+	.loc 2 1463 0
 	strh	r0, [r4, r3]	@ movhi
-	.loc 2 1415 0
+	.loc 2 1464 0
 	ldrh	r3, [r5, #16]
 	lsr	r2, r3, #6
-	.loc 2 1416 0
+	.loc 2 1465 0
 	and	r3, r3, #63
-	strb	r3, [r4, #2286]
-	.loc 2 1417 0
-	ldrb	r3, [r4, #2515]	@ zero_extendqisi2
-	.loc 2 1415 0
+	strb	r3, [r4, #2330]
+	.loc 2 1466 0
+	ldrb	r3, [r4, #2255]	@ zero_extendqisi2
+	.loc 2 1464 0
 	strh	r2, [r1, #2]	@ movhi
-	.loc 2 1419 0
-	add	r2, r1, #288
-	.loc 2 1417 0
-	strb	r3, [r4, #2288]
-	.loc 2 1419 0
-	movw	r3, #2568
+	.loc 2 1473 0
+	movw	r2, #2372
+	.loc 2 1466 0
+	strb	r3, [r4, #2332]
+	.loc 2 1468 0
+	movw	r3, #2564
 	strh	ip, [r4, r3]	@ movhi
-	.loc 2 1420 0
+	.loc 2 1469 0
 	mov	r3, #0
-	.loc 2 1424 0
+	.loc 2 1473 0
 	ldrh	ip, [r5, #18]
-	.loc 2 1420 0
-	strh	r3, [r2, #2]	@ movhi
-	.loc 2 1424 0
-	movw	r2, #2328
-	.loc 2 1421 0
-	strb	r3, [r4, #2574]
-	.loc 2 1424 0
+	.loc 2 1469 0
+	strh	r3, [r1, #242]	@ movhi
+	.loc 2 1470 0
+	strb	r3, [r4, #2570]
+	.loc 2 1473 0
 	strh	ip, [r4, r2]	@ movhi
-	.loc 2 1425 0
-	ldrh	r2, [r5, #20]
-	.loc 2 1422 0
-	strb	r3, [r4, #2576]
-	.loc 2 1434 0
-	str	r3, [r4, #2460]
-	.loc 2 1435 0
-	str	r3, [r4, #2448]
-	.loc 2 1425 0
+	.loc 2 1474 0
+	ldrh	r2, [r5, #20]
+	.loc 2 1471 0
+	strb	r3, [r4, #2572]
+	.loc 2 1483 0
+	str	r3, [r4, #2504]
+	.loc 2 1484 0
+	str	r3, [r4, #2492]
+	.loc 2 1474 0
 	lsr	ip, r2, #6
-	.loc 2 1426 0
+	.loc 2 1475 0
 	and	r2, r2, #63
-	strb	r2, [r4, #2334]
-	.loc 2 1427 0
-	ldrb	r2, [r4, #2516]	@ zero_extendqisi2
-	.loc 2 1425 0
+	strb	r2, [r4, #2378]
+	.loc 2 1476 0
+	ldrb	r2, [r4, #2256]	@ zero_extendqisi2
+	.loc 2 1474 0
 	strh	ip, [r1, #50]	@ movhi
-	.loc 2 1429 0
+	.loc 2 1478 0
 	ldrh	ip, [r5, #22]
-	.loc 2 1427 0
-	strb	r2, [r4, #2336]
-	.loc 2 1429 0
-	movw	r2, #2376
-	.loc 2 1436 0
-	str	r3, [r4, #2440]
-	.loc 2 1429 0
+	.loc 2 1476 0
+	strb	r2, [r4, #2380]
+	.loc 2 1478 0
+	movw	r2, #2420
+	.loc 2 1485 0
+	str	r3, [r4, #2484]
+	.loc 2 1478 0
 	strh	ip, [r4, r2]	@ movhi
-	.loc 2 1430 0
+	.loc 2 1479 0
 	ldrh	r2, [r5, #24]
-	.loc 2 1437 0
-	str	r3, [r4, #2456]
-	.loc 2 1440 0
-	str	r3, [r4, #2484]
-	.loc 2 1430 0
+	.loc 2 1486 0
+	str	r3, [r4, #2500]
+	.loc 2 1489 0
+	str	r3, [r4, #2528]
+	.loc 2 1479 0
 	lsr	ip, r2, #6
-	.loc 2 1431 0
+	.loc 2 1480 0
 	and	r2, r2, #63
-	strb	r2, [r4, #2382]
-	.loc 2 1432 0
-	ldrb	r2, [r4, #2517]	@ zero_extendqisi2
-	.loc 2 1430 0
+	strb	r2, [r4, #2426]
+	.loc 2 1481 0
+	ldrb	r2, [r4, #2257]	@ zero_extendqisi2
+	.loc 2 1479 0
 	strh	ip, [r1, #98]	@ movhi
-	.loc 2 1432 0
-	strb	r2, [r4, #2384]
-	.loc 2 1439 0
-	ldr	r2, [r4, #2536]
-	str	r2, [r4, #2480]
-	.loc 2 1441 0
+	.loc 2 1481 0
+	strb	r2, [r4, #2428]
+	.loc 2 1488 0
+	ldr	r2, [r4, #2276]
+	str	r2, [r4, #2524]
+	.loc 2 1490 0
+	str	r3, [r4, #2540]
+	.loc 2 1493 0
+	ldr	r2, [r4, #2516]
+	.loc 2 1491 0
 	str	r3, [r4, #2496]
-	.loc 2 1444 0
-	ldr	r2, [r4, #2472]
-	.loc 2 1442 0
-	str	r3, [r4, #2452]
-	.loc 2 1444 0
-	ldr	r3, [r4, #2544]
+	.loc 2 1493 0
+	ldr	r3, [r4, #2284]
 	cmp	r3, r2
-	.loc 2 1447 0
-	ldr	r2, [r4, #2476]
-	.loc 2 1445 0
-	strhi	r3, [r4, #2472]
-	.loc 2 1447 0
-	ldr	r3, [r4, #2540]
+	.loc 2 1496 0
+	ldr	r2, [r4, #2520]
+	.loc 2 1494 0
+	strhi	r3, [r4, #2516]
+	.loc 2 1496 0
+	ldr	r3, [r4, #2280]
 	cmp	r3, r2
-	.loc 2 1448 0
-	strhi	r3, [r4, #2476]
-	.loc 2 1450 0
+	.loc 2 1497 0
+	strhi	r3, [r4, #2520]
+	.loc 2 1499 0
 	movw	r3, #65535
 	cmp	r0, r3
-	beq	.L1706
-	.loc 2 1451 0
-	ldr	r0, .L1714+32
+	beq	.L1712
+	.loc 2 1500 0
+	ldr	r0, .L1720+32
 	bl	make_superblock
-.LVL1572:
-.L1706:
-	.loc 2 1453 0
-	movw	r3, #2328
+.LVL1562:
+.L1712:
+	.loc 2 1502 0
+	movw	r3, #2372
 	ldrh	r2, [r4, r3]
 	movw	r3, #65535
 	cmp	r2, r3
-	beq	.L1707
-	.loc 2 1454 0
-	ldr	r0, .L1714+36
+	beq	.L1713
+	.loc 2 1503 0
+	ldr	r0, .L1720+36
 	bl	make_superblock
-.LVL1573:
-.L1707:
-	.loc 2 1456 0
-	movw	r3, #2376
+.LVL1563:
+.L1713:
+	.loc 2 1505 0
+	movw	r3, #2420
 	ldrh	r2, [r4, r3]
 	movw	r3, #65535
 	cmp	r2, r3
-	beq	.L1708
-	.loc 2 1457 0
-	ldr	r0, .L1714+40
+	beq	.L1714
+	.loc 2 1506 0
+	ldr	r0, .L1720+40
 	bl	make_superblock
-.LVL1574:
-.L1708:
-	.loc 2 1459 0
-	movw	r3, #2568
+.LVL1564:
+.L1714:
+	.loc 2 1508 0
+	movw	r3, #2564
 	ldrh	r2, [r4, r3]
 	movw	r3, #65535
 	cmp	r2, r3
-	beq	.L1709
-	.loc 2 1460 0
-	ldr	r0, .L1714+44
+	beq	.L1715
+	.loc 2 1509 0
+	ldr	r0, .L1720+44
 	bl	make_superblock
-.LVL1575:
-.L1709:
-	.loc 2 1462 0
+.LVL1565:
+.L1715:
+	.loc 2 1511 0
 	mov	r0, #0
-	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
-.LVL1576:
-.L1699:
-	.loc 2 1376 0
+	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
+.LVL1566:
+.L1705:
+	.loc 2 1425 0
 	ldrh	r3, [r6]
-	.loc 2 1378 0
+	.loc 2 1427 0
 	mov	r2, #1
 	mov	r1, r2
 	mov	r0, r7
-	.loc 2 1376 0
+	.loc 2 1425 0
 	orr	r3, r5, r3, lsl #10
+	str	r3, [r4, #3224]
+	.loc 2 1426 0
+	ldr	r3, [r4, #3240]
 	str	r3, [r4, #3228]
-	.loc 2 1377 0
-	ldr	r3, [r4, #2244]
-	str	r3, [r4, #3232]
-	.loc 2 1378 0
+	.loc 2 1427 0
 	bl	FlashReadPages
-.LVL1577:
-	.loc 2 1381 0
-	ldr	r3, [r4, #3224]
+.LVL1567:
+	.loc 2 1430 0
+	ldr	r3, [r4, #3220]
 	cmn	r3, #1
-	beq	.L1697
-	.loc 2 1382 0 discriminator 1
-	ldr	r3, [r4, #2244]
-	.loc 2 1381 0 discriminator 1
+	beq	.L1703
+	.loc 2 1431 0 discriminator 1
+	ldr	r3, [r4, #3240]
+	.loc 2 1430 0 discriminator 1
 	ldr	r3, [r3]
 	cmp	r3, r8
-	bne	.L1697
-	.loc 2 1383 0
+	bne	.L1703
+	.loc 2 1432 0
 	ldr	r3, [r4, #3244]
 	ldrh	r2, [r3]
-	.loc 2 1382 0
+	.loc 2 1431 0
 	movw	r3, #61604
 	cmp	r2, r3
-	beq	.L1698
-.L1697:
+	beq	.L1704
+.L1703:
 	sub	r5, r5, #1
-.LVL1578:
+.LVL1568:
 	sxth	r5, r5
-.LVL1579:
-	b	.L1696
-.L1715:
+.LVL1569:
+	b	.L1702
+.L1721:
 	.align	2
-.L1714:
+.L1720:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+2556
-	.word	.LANCHOR0+3224
+	.word	.LANCHOR0+2552
+	.word	.LANCHOR0+3220
 	.word	1179929683
 	.word	.LANCHOR1+583
 	.word	.LC1
-	.word	.LANCHOR0+2504
+	.word	.LANCHOR0+2244
 	.word	.LANCHOR3
-	.word	.LANCHOR0+2280
-	.word	.LANCHOR0+2328
-	.word	.LANCHOR0+2376
-	.word	.LANCHOR0+2568
-.LFE214:
-	.fnend
+	.word	.LANCHOR0+2324
+	.word	.LANCHOR0+2372
+	.word	.LANCHOR0+2420
+	.word	.LANCHOR0+2564
+.LFE224:
 	.size	FtlLoadSysInfo, .-FtlLoadSysInfo
 	.align	2
 	.global	FtlSysBlkInit
@@ -19894,251 +18746,242 @@ FtlLoadSysInfo:
 	.fpu softvfp
 	.type	FtlSysBlkInit, %function
 FtlSysBlkInit:
-	.fnstart
-.LFB232:
-	.loc 2 2306 0
+.LFB242:
+	.loc 2 2356 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI446:
-	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
-.LCFI447:
-	.setfp fp, ip, #-4
+.LCFI434:
+	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
+.LCFI435:
 	sub	fp, ip, #4
-.LCFI448:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 2 2306 0
-	.loc 2 2310 0
+.LCFI436:
+	.loc 2 2360 0
+	ldr	r4, .L1738
 	mov	r3, #0
-	ldr	r4, .L1732
 	add	r6, r4, #3968
-	.loc 2 2312 0
+	.loc 2 2362 0
 	ldrh	r0, [r4, #12]
-	.loc 2 2310 0
+	.loc 2 2360 0
 	strh	r3, [r6]	@ movhi
-	.loc 2 2312 0
+	.loc 2 2362 0
 	bl	FtlFreeSysBlkQueueInit
-.LVL1580:
-	.loc 2 2313 0
+.LVL1570:
+	.loc 2 2363 0
 	bl	FtlScanSysBlk
-.LVL1581:
-	.loc 2 2314 0
-	movw	r3, #2556
+.LVL1571:
+	.loc 2 2364 0
+	movw	r3, #2552
 	ldrh	r2, [r4, r3]
 	movw	r3, #65535
 	cmp	r2, r3
-	bne	.L1717
-.L1719:
-	.loc 2 2315 0
+	bne	.L1723
+.L1725:
+	.loc 2 2365 0
 	mvn	r8, #0
-.L1716:
-	.loc 2 2398 0
+.L1722:
+	.loc 2 2448 0
 	mov	r0, r8
-	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
-.L1717:
-	.loc 2 2317 0
+	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
+.L1723:
+	.loc 2 2367 0
 	bl	FtlLoadSysInfo
-.LVL1582:
+.LVL1572:
 	subs	r8, r0, #0
-	bne	.L1719
-	.loc 2 2320 0
+	bne	.L1725
+	.loc 2 2370 0
 	bl	FtlLoadMapInfo
-.LVL1583:
-	.loc 2 2321 0
+.LVL1573:
+	.loc 2 2371 0
 	bl	FtlLoadVonderInfo
-.LVL1584:
-	.loc 2 2322 0
+.LVL1574:
+	.loc 2 2372 0
 	bl	Ftl_load_ext_data
-.LVL1585:
-	.loc 2 2324 0
+.LVL1575:
+	.loc 2 2374 0
 	bl	FtlLoadEctTbl
-.LVL1586:
-	.loc 2 2325 0
+.LVL1576:
+	.loc 2 2375 0
 	bl	FtlFreeSysBLkSort
-.LVL1587:
-	.loc 2 2327 0
+.LVL1577:
+	.loc 2 2377 0
 	bl	SupperBlkListInit
-.LVL1588:
-	.loc 2 2328 0
+.LVL1578:
+	.loc 2 2378 0
 	bl	FtlPowerLostRecovery
-.LVL1589:
-	.loc 2 2330 0
+.LVL1579:
+	.loc 2 2380 0
 	mov	r0, #1
 	bl	FtlUpdateVaildLpn
-.LVL1590:
-.LBB520:
-.LBB521:
-	.loc 2 2332 0
+.LVL1580:
+.LBB543:
+.LBB544:
+	.loc 2 2382 0
 	ldrh	r1, [r4, #114]
 	mov	r3, r8
-.LVL1591:
-	.loc 2 2333 0
-	ldr	r2, [r4, #2424]
+.LVL1581:
+	.loc 2 2383 0
+	ldr	r2, [r4, #2468]
 	mov	r0, #12
-.L1720:
-	.loc 2 2332 0
+.L1726:
+	.loc 2 2382 0
 	cmp	r3, r1
-	bge	.L1725
-	.loc 2 2333 0
+	bge	.L1731
+	.loc 2 2383 0
 	mla	ip, r0, r3, r2
 	ldr	ip, [ip, #4]
 	cmp	ip, #0
-	bge	.L1721
-.L1725:
-	.loc 2 2336 0
-	ldr	r5, .L1732+4
-	.loc 2 2338 0
+	bge	.L1727
+.L1731:
+	.loc 2 2386 0
+	ldr	r5, .L1738+4
+	.loc 2 2388 0
 	cmp	r3, r1
-	.loc 2 2336 0
+	.loc 2 2386 0
 	ldrh	r2, [r5, #28]
-	sub	r7, r5, #224
+	add	r7, r5, #80
 	add	r2, r2, #1
 	strh	r2, [r5, #28]	@ movhi
-	.loc 2 2338 0
-	bge	.L1731
-.L1722:
-	.loc 2 2340 0
-	ldr	r6, .L1732+8
-	.loc 2 2339 0
-	ldr	r0, .L1732+12
+	.loc 2 2388 0
+	bge	.L1737
+.L1728:
+	.loc 2 2390 0
+	ldr	r6, .L1738+8
+	.loc 2 2389 0
+	ldr	r0, .L1738+12
 	bl	FtlSuperblockPowerLostFix
-.LVL1592:
-	.loc 2 2340 0
+.LVL1582:
+	.loc 2 2390 0
 	mov	r0, r6
 	bl	FtlSuperblockPowerLostFix
-.LVL1593:
-.LBB522:
-	.loc 2 2346 0
-	movw	r3, #2280
-	ldr	r1, [r4, #2260]
+.LVL1583:
+.LBB545:
+	.loc 2 2396 0
+	movw	r3, #2324
+	ldr	r1, [r4, #2300]
 	ldrh	r3, [r4, r3]
 	ldrh	r0, [r7, #4]
 	lsl	r3, r3, #1
 	ldrh	r2, [r1, r3]
 	sub	r2, r2, r0
 	strh	r2, [r1, r3]	@ movhi
-	.loc 2 2352 0
-	movw	r2, #2328
+	.loc 2 2402 0
+	movw	r2, #2372
 	ldrh	r2, [r4, r2]
-	.loc 2 2347 0
+	.loc 2 2397 0
 	ldrh	r3, [r4, #78]
-	.loc 2 2352 0
-	ldr	r0, [r4, #2260]
+	.loc 2 2402 0
+	ldr	r0, [r4, #2300]
 	ldrh	ip, [r6, #4]
 	lsl	r2, r2, #1
-	.loc 2 2347 0
+	.loc 2 2397 0
 	strh	r3, [r7, #2]	@ movhi
-	.loc 2 2348 0
+	.loc 2 2398 0
 	mov	r3, #0
-	strb	r3, [r4, #2286]
-	.loc 2 2349 0
+	strb	r3, [r4, #2330]
+	.loc 2 2399 0
 	strh	r3, [r7, #4]	@ movhi
-	.loc 2 2352 0
+	.loc 2 2402 0
 	ldrh	r1, [r0, r2]
 	sub	r1, r1, ip
 	strh	r1, [r0, r2]	@ movhi
-.LBE522:
-	.loc 2 2359 0
-	add	r0, r6, #1536
-.LBB523:
-	.loc 2 2353 0
+	.loc 2 2403 0
 	ldrh	r2, [r4, #78]
-	.loc 2 2354 0
-	strb	r3, [r4, #2334]
-	.loc 2 2355 0
-	strh	r3, [r6, #4]	@ movhi
-	.loc 2 2353 0
+.LBE545:
+	.loc 2 2409 0
+	ldr	r0, .L1738+16
+.LBB546:
+	.loc 2 2404 0
+	strb	r3, [r4, #2378]
+	.loc 2 2403 0
 	strh	r2, [r6, #2]	@ movhi
-.LBE523:
-	.loc 2 2359 0
+	.loc 2 2405 0
+	strh	r3, [r6, #4]	@ movhi
+.LBE546:
+	.loc 2 2409 0
 	bl	FtlMapBlkWriteDump_data
-.LVL1594:
-	.loc 2 2360 0
-	ldr	r0, .L1732+16
+.LVL1584:
+	.loc 2 2410 0
+	add	r0, r6, #1536
 	bl	FtlMapBlkWriteDump_data
-.LVL1595:
-	.loc 2 2372 0
+.LVL1585:
+	.loc 2 2422 0
 	ldrh	r3, [r5, #30]
 	add	r3, r3, #1
 	strh	r3, [r5, #30]	@ movhi
-	.loc 2 2373 0
+	.loc 2 2423 0
 	bl	l2p_flush
-.LVL1596:
-	.loc 2 2374 0
+.LVL1586:
+	.loc 2 2424 0
 	bl	FtlVpcTblFlush
-.LVL1597:
-	.loc 2 2375 0
+.LVL1587:
+	.loc 2 2425 0
 	bl	FtlVpcTblFlush
-.LVL1598:
-	b	.L1726
-.LVL1599:
-.L1721:
-	.loc 2 2332 0
+.LVL1588:
+	b	.L1732
+.LVL1589:
+.L1727:
+	.loc 2 2382 0
 	add	r3, r3, #1
-	b	.L1720
-.L1731:
-	.loc 2 2338 0
+	b	.L1726
+.L1737:
+	.loc 2 2388 0
 	ldrh	r3, [r6]
-.LVL1600:
+.LVL1590:
 	cmp	r3, #0
-	bne	.L1722
-.L1726:
-	.loc 2 2379 0
-	movw	r3, #2280
+	bne	.L1728
+.L1732:
+	.loc 2 2429 0
+	movw	r3, #2324
 	ldrh	r0, [r4, r3]
 	movw	r3, #65535
 	cmp	r0, r3
-	beq	.L1727
+	beq	.L1733
 	ldrh	r3, [r7, #4]
 	cmp	r3, #0
-	bne	.L1727
-	.loc 2 2381 0
-	ldr	r6, .L1732+8
-	.loc 2 2380 0
+	bne	.L1733
+	.loc 2 2431 0
+	ldr	r6, .L1738+8
+	.loc 2 2430 0
 	ldrh	r3, [r6, #4]
 	cmp	r3, #0
-	bne	.L1727
-	.loc 2 2382 0
+	bne	.L1733
+	.loc 2 2432 0
 	bl	FtlGcRefreshBlock
-.LVL1601:
-	.loc 2 2383 0
-	movw	r3, #2328
+.LVL1591:
+	.loc 2 2433 0
+	movw	r3, #2372
 	ldrh	r0, [r4, r3]
 	bl	FtlGcRefreshBlock
-.LVL1602:
-	.loc 2 2384 0
+.LVL1592:
+	.loc 2 2434 0
 	sub	r0, r6, #48
 	bl	allocate_new_data_superblock
-.LVL1603:
-	.loc 2 2385 0
+.LVL1593:
+	.loc 2 2435 0
 	mov	r0, r6
 	bl	allocate_new_data_superblock
-.LVL1604:
-.L1727:
-	.loc 2 2390 0
+.LVL1594:
+.L1733:
+	.loc 2 2440 0
 	ldrh	r3, [r5, #28]
 	tst	r3, #31
-	bne	.L1716
-	.loc 2 2391 0
+	bne	.L1722
+	.loc 2 2441 0
 	bl	FtlVpcCheckAndModify
-.LVL1605:
-	b	.L1716
-.L1733:
+.LVL1595:
+	b	.L1722
+.L1739:
 	.align	2
-.L1732:
+.L1738:
 	.word	.LANCHOR0
-	.word	.LANCHOR0+2504
-	.word	.LANCHOR0+2328
-	.word	.LANCHOR0+2280
-	.word	.LANCHOR0+3908
-.LBE521:
-.LBE520:
-.LFE232:
-	.fnend
+	.word	.LANCHOR0+2244
+	.word	.LANCHOR0+2372
+	.word	.LANCHOR0+2324
+	.word	.LANCHOR0+3864
+.LBE544:
+.LBE543:
+.LFE242:
 	.size	FtlSysBlkInit, .-FtlSysBlkInit
 	.align	2
 	.global	ftl_low_format
@@ -20147,88 +18990,80 @@ FtlSysBlkInit:
 	.fpu softvfp
 	.type	ftl_low_format, %function
 ftl_low_format:
-	.fnstart
-.LFB150:
+.LFB160:
 	.loc 3 623 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI449:
-	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
-	.pad #4
-	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
-.LCFI450:
-	.setfp fp, ip, #-4
+.LCFI437:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+.LCFI438:
 	sub	fp, ip, #4
-.LCFI451:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 623 0
+.LCFI439:
 	.loc 3 629 0
+	ldr	r4, .L1764
 	mov	r3, #0
-	ldr	r4, .L1758
 	.loc 3 631 0
 	ldrh	r0, [r4, #12]
 	.loc 3 629 0
-	str	r3, [r4, #2472]
+	str	r3, [r4, #2516]
 	.loc 3 630 0
-	str	r3, [r4, #2476]
+	str	r3, [r4, #2520]
 	.loc 3 631 0
 	bl	FtlFreeSysBlkQueueInit
-.LVL1606:
+.LVL1596:
 	.loc 3 632 0
 	bl	FtlLoadBbt
-.LVL1607:
+.LVL1597:
 	cmp	r0, #0
-	beq	.L1735
+	beq	.L1741
 	.loc 3 633 0
 	bl	FtlMakeBbt
-.LVL1608:
-.L1735:
+.LVL1598:
+.L1741:
 	.loc 3 637 0 discriminator 1
-	ldr	r0, .L1758+4
+	ldr	r0, .L1764+4
 	.loc 3 623 0 discriminator 1
 	mov	r2, #0
-.L1736:
+.L1742:
 	.loc 3 635 0 discriminator 1
 	ldrh	r1, [r4, #34]
 	uxth	r3, r2
 	add	r2, r2, #1
 	cmp	r3, r1, lsl #7
-	blt	.L1737
+	blt	.L1743
 	.loc 3 642 0
 	ldrh	r6, [r4, #16]
 	.loc 3 641 0
 	mov	r5, #0
-.LVL1609:
-.L1738:
+.LVL1599:
+.L1744:
 	.loc 3 642 0 discriminator 1
 	ldrh	r3, [r4, #18]
 	cmp	r3, r6
-	bhi	.L1739
+	bhi	.L1745
 	.loc 3 645 0
 	ldrh	r1, [r4, #8]
 	sub	r3, r5, #3
 	cmp	r3, r1, lsl #1
-	bge	.L1740
-.L1744:
+	bge	.L1746
+.L1750:
 	.loc 3 641 0
-	mov	r5, #0
-.LVL1610:
-	mov	r6, r5
-.LVL1611:
-.L1741:
+	mov	r0, #0
+	mov	r6, r0
+.LVL1600:
+.L1747:
 	.loc 3 656 0 discriminator 1
-	ldrh	r3, [r4, #16]
-	uxth	r0, r5
-	add	r5, r5, #1
-	cmp	r3, r0
-	bhi	.L1745
+	ldrh	r2, [r4, #16]
+	uxth	r3, r0
+	add	r5, r0, #1
+.LVL1601:
+	cmp	r2, r3
+	bhi	.L1751
 	.loc 3 658 0
 	ldrh	r3, [r4, #18]
 	.loc 3 662 0
-	movw	r9, #2552
+	movw	r9, #2548
 	.loc 3 661 0
 	ldrh	r5, [r4, #8]
 	ldr	r10, [r4, #20]
@@ -20237,8 +19072,8 @@ ftl_low_format:
 	.loc 3 661 0
 	mov	r1, r5
 	mov	r0, r10
-	bl	__aeabi_uidiv
-.LVL1612:
+	bl	__udivsi3
+.LVL1602:
 	.loc 3 662 0
 	ubfx	r7, r0, #5, #16
 	.loc 3 661 0
@@ -20246,31 +19081,31 @@ ftl_low_format:
 	.loc 3 662 0
 	add	r3, r7, #36
 	.loc 3 661 0
-	str	r0, [r4, #2436]
+	str	r0, [r4, #2480]
 	.loc 3 662 0
 	strh	r3, [r4, r9]	@ movhi
 	.loc 3 663 0
 	mov	r3, #24
 	mul	r3, r3, r5
 	cmp	r6, r3
-	ble	.L1746
+	ble	.L1752
 	.loc 3 664 0
 	mov	r1, r5
 	sub	r0, r10, r6
-	bl	__aeabi_uidiv
-.LVL1613:
-	str	r0, [r4, #2436]
+	bl	__udivsi3
+.LVL1603:
+	str	r0, [r4, #2480]
 	.loc 3 665 0
 	lsr	r0, r0, #5
 	add	r0, r0, #24
 	strh	r0, [r4, r9]	@ movhi
-.L1746:
+.L1752:
 	.loc 3 668 0
 	ldrh	r3, [r4, #70]
 	cmp	r3, #0
-	beq	.L1748
+	beq	.L1754
 	.loc 3 669 0
-	movw	r2, #2552
+	movw	r2, #2548
 	ldrh	r1, [r4, r2]
 	add	r1, r1, r3, lsr #1
 	strh	r1, [r4, r2]	@ movhi
@@ -20280,20 +19115,20 @@ ftl_low_format:
 	.loc 3 672 0
 	addlt	r3, r3, #32
 	.loc 3 671 0
-	strlt	r8, [r4, #2436]
+	strlt	r8, [r4, #2480]
 	.loc 3 672 0
 	addlt	r3, r7, r3
 	strhlt	r3, [r4, r2]	@ movhi
-.L1748:
+.L1754:
 	.loc 3 677 0
-	movw	r3, #2552
-	ldr	r6, .L1758+8
-.LVL1614:
+	movw	r3, #2548
+	ldr	r6, .L1764+8
+.LVL1604:
 	ldrh	r2, [r4, r3]
 	.loc 3 689 0
 	mvn	r7, #0
 	.loc 3 677 0
-	ldr	r3, [r4, #2436]
+	ldr	r3, [r4, #2480]
 	sub	r3, r3, r2
 	mul	r5, r5, r3
 	.loc 3 678 0
@@ -20305,74 +19140,75 @@ ftl_low_format:
 	.loc 3 679 0
 	ldrh	r3, [r4, #34]
 	.loc 3 678 0
-	str	r5, [r4, #2436]
+	str	r5, [r4, #2480]
 	.loc 3 679 0
 	mul	r5, r5, r3
 	str	r5, [r4, #116]
 	.loc 3 684 0
 	bl	FtlBbmTblFlush
-.LVL1615:
+.LVL1605:
 	.loc 3 687 0
 	ldrh	r2, [r4, #18]
 	mov	r1, #0
-	ldr	r0, [r4, #2260]
+	ldr	r0, [r4, #2300]
 	.loc 3 689 0
-	ldr	r5, .L1758+12
+	ldr	r5, .L1764+12
 	.loc 3 687 0
 	lsl	r2, r2, #1
+	.loc 3 694 0
+	sub	r5, r5, #240
+	.loc 3 687 0
 	bl	ftl_memset
-.LVL1616:
+.LVL1606:
 	.loc 3 689 0
-	movw	r2, #2568
+	movw	r2, #2564
 	.loc 3 688 0
 	mov	r3, #0
 	.loc 3 689 0
 	strh	r7, [r4, r2]	@ movhi
 	.loc 3 696 0
-	movw	r2, #2280
+	movw	r2, #2324
 	strh	r3, [r4, r2]	@ movhi
 	.loc 3 698 0
 	mov	r1, #255
 	ldrh	r2, [r4, #16]
 	.loc 3 690 0
-	strh	r3, [r5, #2]	@ movhi
-	.loc 3 694 0
-	sub	r5, r5, #288
+	strh	r3, [r5, #242]	@ movhi
 	.loc 3 701 0
 	mov	r8, r5
 	.loc 3 688 0
-	str	r3, [r4, #2432]
+	str	r3, [r4, #2476]
 	.loc 3 691 0
-	strb	r3, [r4, #2574]
+	strb	r3, [r4, #2570]
 	.loc 3 692 0
-	strb	r3, [r4, #2576]
+	strb	r3, [r4, #2572]
 	.loc 3 698 0
 	lsr	r2, r2, #3
 	.loc 3 694 0
 	strh	r3, [r5, #2]	@ movhi
 	.loc 3 695 0
-	strb	r3, [r4, #2286]
+	strb	r3, [r4, #2330]
 	.loc 3 697 0
 	mov	r3, #1
 	.loc 3 698 0
 	ldr	r0, [r4]
 	.loc 3 697 0
-	strb	r3, [r4, #2288]
+	strb	r3, [r4, #2332]
 	.loc 3 698 0
 	bl	ftl_memset
-.LVL1617:
-.L1750:
+.LVL1607:
+.L1756:
 	.loc 3 701 0
 	mov	r0, r8
 	bl	make_superblock
-.LVL1618:
+.LVL1608:
 	.loc 3 702 0
-	ldrb	r3, [r4, #2287]	@ zero_extendqisi2
+	ldrb	r3, [r4, #2331]	@ zero_extendqisi2
 	cmp	r3, #0
 	ldrh	r3, [r5]
-	bne	.L1751
+	bne	.L1757
 	.loc 3 705 0
-	ldr	r2, [r4, #2260]
+	ldr	r2, [r4, #2300]
 	lsl	r3, r3, #1
 	strh	r7, [r2, r3]	@ movhi
 	.loc 3 706 0
@@ -20380,8 +19216,8 @@ ftl_low_format:
 	add	r3, r3, #1
 	strh	r3, [r5]	@ movhi
 	.loc 3 707 0
-	b	.L1750
-.L1737:
+	b	.L1756
+.L1743:
 	.loc 3 636 0 discriminator 3
 	ldr	ip, [r4, #3776]
 	mvn	r1, r3
@@ -20390,46 +19226,46 @@ ftl_low_format:
 	.loc 3 637 0 discriminator 3
 	ldr	r1, [r4, #3768]
 	str	r0, [r1, r3, lsl #2]
-	b	.L1736
-.LVL1619:
-.L1739:
+	b	.L1742
+.LVL1609:
+.L1745:
 	.loc 3 643 0 discriminator 3
 	mov	r0, r6
 	mov	r1, #1
 	bl	FtlLowFormatEraseBlock
-.LVL1620:
+.LVL1610:
 	.loc 3 642 0 discriminator 3
 	add	r6, r6, #1
 	.loc 3 643 0 discriminator 3
 	add	r5, r5, r0
-.LVL1621:
+.LVL1611:
 	uxth	r5, r5
-.LVL1622:
+.LVL1612:
 	.loc 3 642 0 discriminator 3
 	uxth	r6, r6
-	b	.L1738
-.L1740:
+	b	.L1744
+.L1746:
 	.loc 3 647 0
 	mov	r0, r5
-	bl	__aeabi_uidiv
-.LVL1623:
+	bl	__udivsi3
+.LVL1613:
 	ldr	r3, [r4, #108]
 	add	r0, r0, r3
 	uxth	r0, r0
 	bl	FtlSysBlkNumInit
-.LVL1624:
+.LVL1614:
 	.loc 3 648 0
 	ldrh	r0, [r4, #12]
 	bl	FtlFreeSysBlkQueueInit
-.LVL1625:
+.LVL1615:
 	.loc 3 650 0
 	ldrh	r5, [r4, #16]
-.LVL1626:
-.L1742:
+.LVL1616:
+.L1748:
 	.loc 3 650 0 is_stmt 0 discriminator 1
 	ldrh	r3, [r4, #18]
 	cmp	r3, r5
-	bls	.L1744
+	bls	.L1750
 	.loc 3 651 0 is_stmt 1 discriminator 3
 	mov	r0, r5
 	mov	r1, #1
@@ -20437,44 +19273,46 @@ ftl_low_format:
 	add	r5, r5, #1
 	.loc 3 651 0 discriminator 3
 	bl	FtlLowFormatEraseBlock
-.LVL1627:
+.LVL1617:
 	.loc 3 650 0 discriminator 3
 	uxth	r5, r5
-	b	.L1742
-.LVL1628:
-.L1745:
+	b	.L1748
+.LVL1618:
+.L1751:
 	.loc 3 657 0 discriminator 3
 	mov	r1, #0
+	uxth	r0, r0
 	bl	FtlLowFormatEraseBlock
-.LVL1629:
+.LVL1619:
 	add	r6, r6, r0
-.LVL1630:
+.LVL1620:
+	mov	r0, r5
 	uxth	r6, r6
-.LVL1631:
-	b	.L1741
-.LVL1632:
-.L1751:
+.LVL1621:
+	b	.L1747
+.LVL1622:
+.L1757:
 	.loc 3 709 0
-	ldr	r2, [r4, #2472]
+	ldr	r2, [r4, #2516]
 	.loc 3 710 0
 	lsl	r3, r3, #1
 	ldrh	r1, [r5, #4]
 	.loc 3 721 0
 	mvn	r7, #0
 	.loc 3 709 0
-	str	r2, [r4, #2292]
+	str	r2, [r4, #2336]
 	add	r2, r2, #1
-	str	r2, [r4, #2472]
+	str	r2, [r4, #2516]
 	.loc 3 710 0
-	ldr	r2, [r4, #2260]
+	ldr	r2, [r4, #2300]
 	strh	r1, [r2, r3]	@ movhi
 	.loc 3 712 0
 	mov	r3, #0
-	ldr	r2, .L1758+16
+	ldr	r2, .L1764+16
 	.loc 3 714 0
-	movw	r1, #2328
+	movw	r1, #2372
 	.loc 3 713 0
-	strb	r3, [r4, #2334]
+	strb	r3, [r4, #2378]
 	.loc 3 712 0
 	strh	r3, [r2, #2]	@ movhi
 	.loc 3 717 0
@@ -20486,19 +19324,19 @@ ftl_low_format:
 	strh	r3, [r4, r1]	@ movhi
 	.loc 3 715 0
 	mov	r3, #1
-	strb	r3, [r4, #2336]
-.L1752:
+	strb	r3, [r4, #2380]
+.L1758:
 	.loc 3 717 0
 	mov	r0, r8
 	bl	make_superblock
-.LVL1633:
+.LVL1623:
 	.loc 3 718 0
-	ldrb	r3, [r4, #2335]	@ zero_extendqisi2
+	ldrb	r3, [r4, #2379]	@ zero_extendqisi2
 	cmp	r3, #0
 	ldrh	r3, [r5]
-	bne	.L1753
+	bne	.L1759
 	.loc 3 721 0
-	ldr	r2, [r4, #2260]
+	ldr	r2, [r4, #2300]
 	lsl	r3, r3, #1
 	strh	r7, [r2, r3]	@ movhi
 	.loc 3 722 0
@@ -20506,30 +19344,30 @@ ftl_low_format:
 	add	r3, r3, #1
 	strh	r3, [r5]	@ movhi
 	.loc 3 723 0
-	b	.L1752
-.L1753:
+	b	.L1758
+.L1759:
 	.loc 3 725 0
-	ldr	r2, [r4, #2472]
+	ldr	r2, [r4, #2516]
 	.loc 3 726 0
 	lsl	r3, r3, #1
 	ldrh	r1, [r5, #4]
 	.loc 3 727 0
 	mvn	r5, #0
 	.loc 3 725 0
-	str	r2, [r4, #2340]
+	str	r2, [r4, #2384]
 	add	r2, r2, #1
-	str	r2, [r4, #2472]
+	str	r2, [r4, #2516]
 	.loc 3 726 0
-	ldr	r2, [r4, #2260]
+	ldr	r2, [r4, #2300]
 	strh	r1, [r2, r3]	@ movhi
 	.loc 3 727 0
-	movw	r3, #2376
+	movw	r3, #2420
 	strh	r5, [r4, r3]	@ movhi
 	.loc 3 730 0
 	bl	FtlFreeSysBlkQueueOut
-.LVL1634:
-	ldr	r3, .L1758+20
-	movw	r2, #2556
+.LVL1624:
+	ldr	r3, .L1764+20
+	movw	r2, #2552
 	strh	r0, [r4, r2]	@ movhi
 	.loc 3 731 0
 	mov	r2, #0
@@ -20541,37 +19379,36 @@ ftl_low_format:
 	.loc 3 733 0
 	strh	r2, [r3, #6]	@ movhi
 	.loc 3 734 0
-	ldr	r3, [r4, #2472]
-	str	r3, [r4, #2564]
+	ldr	r3, [r4, #2516]
+	str	r3, [r4, #2560]
 	add	r3, r3, #1
-	str	r3, [r4, #2472]
+	str	r3, [r4, #2516]
 	.loc 3 735 0
 	bl	FtlVpcTblFlush
-.LVL1635:
+.LVL1625:
 	.loc 3 736 0
 	bl	FtlSysBlkInit
-.LVL1636:
+.LVL1626:
 	cmp	r0, #0
 	.loc 3 739 0
 	mov	r0, #0
 	.loc 3 737 0
-	ldreq	r3, .L1758+24
+	ldreq	r3, .L1764+24
 	moveq	r2, #1
 	streq	r2, [r3]
 	.loc 3 739 0
-	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
-.L1759:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.L1765:
 	.align	2
-.L1758:
+.L1764:
 	.word	.LANCHOR0
 	.word	168778952
 	.word	.LANCHOR3
-	.word	.LANCHOR0+2568
-	.word	.LANCHOR0+2328
-	.word	.LANCHOR0+2556
+	.word	.LANCHOR0+2564
+	.word	.LANCHOR0+2372
+	.word	.LANCHOR0+2552
 	.word	.LANCHOR2
-.LFE150:
-	.fnend
+.LFE160:
 	.size	ftl_low_format, .-ftl_low_format
 	.align	2
 	.global	sftl_init
@@ -20580,95 +19417,88 @@ ftl_low_format:
 	.fpu softvfp
 	.type	sftl_init, %function
 sftl_init:
-	.fnstart
-.LFB151:
+.LFB161:
 	.loc 3 743 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-	.movsp ip
 	mov	ip, sp
-.LCFI452:
+.LCFI440:
 	push	{r4, r5, fp, ip, lr, pc}
-	.pad #4
-	.save {r4, r5, fp, ip, lr}
-.LCFI453:
-	.setfp fp, ip, #-4
+.LCFI441:
 	sub	fp, ip, #4
-.LCFI454:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 3 743 0
+.LCFI442:
 	.loc 3 746 0
+	ldr	r5, .L1772
 	mvn	r3, #0
-	ldr	r5, .L1766
 	.loc 3 753 0
-	ldr	r4, .L1766+4
+	ldr	r4, .L1772+4
 	.loc 3 749 0
-	ldr	r1, .L1766+8
-	ldr	r0, .L1766+12
+	ldr	r1, .L1772+8
+	ldr	r0, .L1772+12
 	.loc 3 746 0
 	str	r3, [r5]
 	.loc 3 749 0
 	bl	printk
-.LVL1637:
+.LVL1627:
 	.loc 3 750 0
-	ldr	r0, .L1766+16
+	ldr	r0, .L1772+16
 	bl	FtlConstantsInit
-.LVL1638:
+.LVL1628:
 	.loc 3 751 0
 	bl	FtlMemInit
-.LVL1639:
+.LVL1629:
 	.loc 3 752 0
 	bl	FtlVariablesInit
-.LVL1640:
+.LVL1630:
 	.loc 3 753 0
 	ldrh	r0, [r4, #12]
 	bl	FtlFreeSysBlkQueueInit
-.LVL1641:
+.LVL1631:
 	.loc 3 756 0
 	bl	FtlLoadBbt
-.LVL1642:
+.LVL1632:
 	cmp	r0, #0
-	bne	.L1764
+	bne	.L1770
 	.loc 3 767 0
 	bl	FtlSysBlkInit
-.LVL1643:
+.LVL1633:
 	cmp	r0, #0
-	bne	.L1764
+	bne	.L1770
 	.loc 3 779 0
 	mov	r3, #1
+	.loc 3 783 0
+	add	r4, r4, #2320
+	.loc 3 779 0
 	str	r3, [r5]
 	.loc 3 783 0
-	movw	r3, #2276
-	ldrh	r3, [r4, r3]
+	ldrh	r3, [r4]
 	cmp	r3, #15
-	bhi	.L1764
+	bhi	.L1770
 	movw	r4, #8129
-.L1763:
-.LBB524:
+.L1769:
+.LBB547:
 	.loc 3 786 0 discriminator 3
 	mov	r1, #1
 	mov	r0, #0
 	bl	rk_ftl_garbage_collect
-.LVL1644:
+.LVL1634:
 	.loc 3 785 0 discriminator 3
 	subs	r4, r4, #1
-	bne	.L1763
-.L1764:
-.LBE524:
+	bne	.L1769
+.L1770:
+.LBE547:
 	.loc 3 794 0
 	mov	r0, #0
 	ldmfd	sp, {r4, r5, fp, sp, pc}
-.L1767:
+.L1773:
 	.align	2
-.L1766:
+.L1772:
 	.word	.LANCHOR2
 	.word	.LANCHOR0
 	.word	.LC70
 	.word	.LC71
 	.word	g_nand_phy_info
-.LFE151:
-	.fnend
+.LFE161:
 	.size	sftl_init, .-sftl_init
 	.align	2
 	.global	ftl_memcmp
@@ -20677,32 +19507,23 @@ sftl_init:
 	.fpu softvfp
 	.type	ftl_memcmp, %function
 ftl_memcmp:
-	.fnstart
-.LFB269:
+.LFB279:
 	.loc 1 211 0
 	@ args = 0, pretend = 0, frame = 0
 	@ frame_needed = 1, uses_anonymous_args = 0
-.LVL1645:
-	.movsp ip
+.LVL1635:
 	mov	ip, sp
-.LCFI455:
+.LCFI443:
 	push	{fp, ip, lr, pc}
-	.pad #4
-	.save {fp, ip, lr}
-.LCFI456:
-	.setfp fp, ip, #-4
+.LCFI444:
 	sub	fp, ip, #4
-.LCFI457:
-	push	{lr}
-	bl	__gnu_mcount_nc
-	.loc 1 211 0
+.LCFI445:
 	.loc 1 212 0
 	bl	memcmp
-.LVL1646:
+.LVL1636:
 	.loc 1 213 0
 	ldmfd	sp, {fp, sp, pc}
-.LFE269:
-	.fnend
+.LFE279:
 	.size	ftl_memcmp, .-ftl_memcmp
 	.global	ftl_temp_buf
 	.global	gc_ink_free_return_value
@@ -20852,141 +19673,141 @@ ftl_memcmp:
 	.global	c_ftl_nand_type
 	.section	.rodata
 	.set	.LANCHOR1,. + 0
-	.type	__func__.6704, %object
-	.size	__func__.6704, 17
-__func__.6704:
+	.type	__func__.3871, %object
+	.size	__func__.3871, 17
+__func__.3871:
 	.ascii	"INSERT_DATA_LIST\000"
-	.type	__func__.6699, %object
-	.size	__func__.6699, 17
-__func__.6699:
+	.type	__func__.3866, %object
+	.size	__func__.3866, 17
+__func__.3866:
 	.ascii	"INSERT_FREE_LIST\000"
-	.type	__func__.6734, %object
-	.size	__func__.6734, 17
-__func__.6734:
+	.type	__func__.3902, %object
+	.size	__func__.3902, 17
+__func__.3902:
 	.ascii	"List_remove_node\000"
-	.type	__func__.6766, %object
-	.size	__func__.6766, 22
-__func__.6766:
+	.type	__func__.3934, %object
+	.size	__func__.3934, 22
+__func__.3934:
 	.ascii	"List_update_data_list\000"
-	.type	__func__.6807, %object
-	.size	__func__.6807, 26
-__func__.6807:
-	.ascii	"ftl_map_blk_alloc_new_blk\000"
-	.type	__func__.6871, %object
-	.size	__func__.6871, 22
-__func__.6871:
+	.type	__func__.4040, %object
+	.size	__func__.4040, 22
+__func__.4040:
 	.ascii	"select_l2p_ram_region\000"
-	.type	__func__.7194, %object
-	.size	__func__.7194, 16
-__func__.7194:
+	.type	__func__.4363, %object
+	.size	__func__.4363, 16
+__func__.4363:
 	.ascii	"make_superblock\000"
-	.type	__func__.7368, %object
-	.size	__func__.7368, 19
-__func__.7368:
+	.type	__func__.4538, %object
+	.size	__func__.4538, 19
+__func__.4538:
 	.ascii	"get_new_active_ppa\000"
-	.type	__func__.7608, %object
-	.size	__func__.7608, 15
-__func__.7608:
+	.type	__func__.4778, %object
+	.size	__func__.4778, 15
+__func__.4778:
 	.ascii	"FlashReadPages\000"
-	.type	__func__.7625, %object
-	.size	__func__.7625, 15
-__func__.7625:
+	.type	__func__.4795, %object
+	.size	__func__.4795, 15
+__func__.4795:
 	.ascii	"FlashProgPages\000"
-	.type	__func__.6317, %object
-	.size	__func__.6317, 11
-__func__.6317:
+	.type	__func__.3976, %object
+	.size	__func__.3976, 26
+__func__.3976:
+	.ascii	"ftl_map_blk_alloc_new_blk\000"
+	.type	__func__.3490, %object
+	.size	__func__.3490, 11
+__func__.3490:
 	.ascii	"FtlMemInit\000"
-	.type	__func__.6533, %object
-	.size	__func__.6533, 14
-__func__.6533:
+	.type	__func__.3706, %object
+	.size	__func__.3706, 14
+__func__.3706:
 	.ascii	"FtlBbt2Bitmap\000"
-	.type	__func__.6775, %object
-	.size	__func__.6775, 16
-__func__.6775:
+	.type	__func__.3943, %object
+	.size	__func__.3943, 16
+__func__.3943:
 	.ascii	"load_l2p_region\000"
-	.type	__func__.6832, %object
-	.size	__func__.6832, 31
-__func__.6832:
+	.type	__func__.4001, %object
+	.size	__func__.4001, 31
+__func__.4001:
 	.ascii	"Ftl_write_map_blk_to_last_page\000"
-	.type	__func__.6846, %object
-	.size	__func__.6846, 16
-__func__.6846:
+	.type	__func__.4015, %object
+	.size	__func__.4015, 16
+__func__.4015:
 	.ascii	"FtlMapWritePage\000"
-	.type	__func__.6818, %object
-	.size	__func__.6818, 15
-__func__.6818:
+	.type	__func__.3987, %object
+	.size	__func__.3987, 15
+__func__.3987:
 	.ascii	"ftl_map_blk_gc\000"
-	.type	__func__.6888, %object
-	.size	__func__.6888, 9
-__func__.6888:
+	.type	__func__.4057, %object
+	.size	__func__.4057, 9
+__func__.4057:
 	.ascii	"log2phys\000"
-	.type	__func__.7103, %object
-	.size	__func__.7103, 16
-__func__.7103:
+	.type	__func__.4272, %object
+	.size	__func__.4272, 16
+__func__.4272:
 	.ascii	"FtlReUsePrevPpa\000"
-	.type	__func__.7256, %object
-	.size	__func__.7256, 14
-__func__.7256:
+	.type	__func__.4425, %object
+	.size	__func__.4425, 14
+__func__.4425:
 	.ascii	"ftl_check_vpc\000"
-	.type	__func__.6983, %object
-	.size	__func__.6983, 14
-__func__.6983:
+	.type	__func__.4152, %object
+	.size	__func__.4152, 14
+__func__.4152:
 	.ascii	"FtlScanSysBlk\000"
-	.type	__func__.7215, %object
-	.size	__func__.7215, 18
-__func__.7215:
+	.type	__func__.4384, %object
+	.size	__func__.4384, 18
+__func__.4384:
 	.ascii	"SupperBlkListInit\000"
-	.type	__func__.7340, %object
-	.size	__func__.7340, 25
-__func__.7340:
+	.type	__func__.4510, %object
+	.size	__func__.4510, 25
+__func__.4510:
 	.ascii	"allocate_data_superblock\000"
-	.type	__func__.7381, %object
-	.size	__func__.7381, 16
-__func__.7381:
+	.type	__func__.4551, %object
+	.size	__func__.4551, 16
+__func__.4551:
 	.ascii	"update_vpc_list\000"
-	.type	__func__.7388, %object
-	.size	__func__.7388, 20
-__func__.7388:
+	.type	__func__.4558, %object
+	.size	__func__.4558, 20
+__func__.4558:
 	.ascii	"decrement_vpc_count\000"
-	.type	__func__.7137, %object
-	.size	__func__.7137, 22
-__func__.7137:
+	.type	__func__.4306, %object
+	.size	__func__.4306, 22
+__func__.4306:
 	.ascii	"FtlRecoverySuperblock\000"
-	.type	__func__.6576, %object
-	.size	__func__.6576, 11
-__func__.6576:
+	.type	__func__.3749, %object
+	.size	__func__.3749, 11
+__func__.3749:
 	.ascii	"FtlLoadBbt\000"
-	.type	__func__.6961, %object
-	.size	__func__.6961, 15
-__func__.6961:
+	.type	__func__.4130, %object
+	.size	__func__.4130, 15
+__func__.4130:
 	.ascii	"FtlVpcTblFlush\000"
-	.type	__func__.7240, %object
-	.size	__func__.7240, 21
-__func__.7240:
+	.type	__func__.4409, %object
+	.size	__func__.4409, 21
+__func__.4409:
 	.ascii	"FtlVpcCheckAndModify\000"
-	.type	__func__.7361, %object
-	.size	__func__.7361, 29
-__func__.7361:
+	.type	__func__.4531, %object
+	.size	__func__.4531, 29
+__func__.4531:
 	.ascii	"allocate_new_data_superblock\000"
-	.type	__func__.6441, %object
-	.size	__func__.6441, 13
-__func__.6441:
+	.type	__func__.3614, %object
+	.size	__func__.3614, 13
+__func__.3614:
 	.ascii	"FtlProgPages\000"
-	.type	__func__.7458, %object
-	.size	__func__.7458, 19
-__func__.7458:
+	.type	__func__.4628, %object
+	.size	__func__.4628, 19
+__func__.4628:
 	.ascii	"FtlGcFreeTempBlock\000"
-	.type	__func__.7564, %object
-	.size	__func__.7564, 23
-__func__.7564:
+	.type	__func__.4734, %object
+	.size	__func__.4734, 23
+__func__.4734:
 	.ascii	"rk_ftl_garbage_collect\000"
-	.type	__func__.6469, %object
-	.size	__func__.6469, 9
-__func__.6469:
+	.type	__func__.3642, %object
+	.size	__func__.3642, 9
+__func__.3642:
 	.ascii	"FtlWrite\000"
-	.type	__func__.7040, %object
-	.size	__func__.7040, 15
-__func__.7040:
+	.type	__func__.4209, %object
+	.size	__func__.4209, 15
+__func__.4209:
 	.ascii	"FtlLoadSysInfo\000"
 	.data
 	.align	2
@@ -21163,14 +19984,10 @@ gBbtInfo:
 	.size	gSysFreeQueue, 2056
 gSysFreeQueue:
 	.space	2056
-	.type	p_sys_data_buf, %object
-	.size	p_sys_data_buf, 4
-p_sys_data_buf:
-	.space	4
-	.type	p_erase_count_table, %object
-	.size	p_erase_count_table, 4
-p_erase_count_table:
-	.space	4
+	.type	g_sys_save_data, %object
+	.size	g_sys_save_data, 48
+g_sys_save_data:
+	.space	48
 	.type	p_data_block_list_table, %object
 	.size	p_data_block_list_table, 4
 p_data_block_list_table:
@@ -21183,6 +20000,10 @@ p_data_block_list_head:
 	.size	p_valid_page_count_table, 4
 p_valid_page_count_table:
 	.space	4
+	.type	p_erase_count_table, %object
+	.size	p_erase_count_table, 4
+p_erase_count_table:
+	.space	4
 	.type	p_data_block_list_tail, %object
 	.size	p_data_block_list_tail, 4
 p_data_block_list_tail:
@@ -21297,10 +20118,6 @@ g_max_erase_count:
 	.size	g_min_erase_count, 4
 g_min_erase_count:
 	.space	4
-	.type	g_sys_save_data, %object
-	.size	g_sys_save_data, 48
-g_sys_save_data:
-	.space	48
 	.type	c_ftl_nand_data_op_blks_per_plane, %object
 	.size	c_ftl_nand_data_op_blks_per_plane, 2
 c_ftl_nand_data_op_blks_per_plane:
@@ -21404,6 +20221,10 @@ g_gc_bad_block_gc_index:
 	.size	req_sys, 20
 req_sys:
 	.space	20
+	.type	p_sys_data_buf, %object
+	.size	p_sys_data_buf, 4
+p_sys_data_buf:
+	.space	4
 	.type	p_sys_spare_buf, %object
 	.size	p_sys_spare_buf, 4
 p_sys_spare_buf:
@@ -21754,7 +20575,7 @@ check_vpc_table:
 .LC69:
 	.ascii	"free %d. [0x%x] 0x%x  0x%x\012\000"
 .LC70:
-	.ascii	"SFTL version: 5.0.43 20180116\000"
+	.ascii	"SFTL version: 5.0.44 20180713\000"
 .LC71:
 	.ascii	"%s\012\000"
 .LC72:
@@ -21771,53 +20592,60 @@ check_vpc_table:
 .LC77:
 	.ascii	"prog read d error: = %x %x %x\012\000"
 .LC78:
-	.ascii	"%s error allocating memory. return -1\012\000"
+	.ascii	"FtlFreeSysBlkQueueOut free count = %d\012\000"
 .LC79:
-	.ascii	"region_id = %x phyAddr = %x\012\000"
+	.ascii	"FtlFreeSysBlkQueueOut = %x, free count = %d, error\012"
+	.ascii	"\000"
 .LC80:
-	.ascii	"spare:\000"
+	.ascii	"FtlFreeSysBlkQueueOut = %x, free count = %d\012\000"
 .LC81:
-	.ascii	"map_ppn:\000"
+	.ascii	"%s error allocating memory. return -1\012\000"
 .LC82:
-	.ascii	"FtlMapWritePage error = %x \012\000"
+	.ascii	"region_id = %x phyAddr = %x\012\000"
 .LC83:
-	.ascii	"FtlMapWritePage error = %x error count = %d\012\000"
+	.ascii	"spare:\000"
 .LC84:
-	.ascii	"ftl_scan_all_data = %x\012\000"
+	.ascii	"map_ppn:\000"
 .LC85:
-	.ascii	"scan lpa = %x ppa= %x\012\000"
+	.ascii	"FtlMapWritePage error = %x \012\000"
 .LC86:
+	.ascii	"FtlMapWritePage error = %x error count = %d\012\000"
+.LC87:
+	.ascii	"ftl_scan_all_data = %x\012\000"
+.LC88:
+	.ascii	"scan lpa = %x ppa= %x\012\000"
+.LC89:
 	.ascii	"lba = %x,addr= %x,spare= %x %x %x %x data=%x %x\012"
 	.ascii	"\000"
-.LC87:
+.LC90:
 	.ascii	"...%s enter...\012\000"
-.LC88:
+.LC91:
 	.ascii	"FtlCheckVpc2 %x = %x  %x\012\000"
-.LC89:
+.LC92:
 	.ascii	"free blk vpc error %x = %x  %x\012\000"
-.LC90:
+.LC93:
 	.ascii	"FtlBbmTblFlush id=%x,page=%x,previd=%x cnt=%d\012\000"
-.LC91:
+.LC94:
 	.ascii	"FtlBbmTblFlush error:%x\012\000"
-.LC92:
+.LC95:
 	.ascii	"FtlBbmTblFlush error = %x error count = %d\012\000"
-.LC93:
+.LC96:
 	.ascii	"FtlGcFreeBadSuperBlk 0x%x\012\000"
-.LC94:
+.LC97:
 	.ascii	"decrement_vpc_count %x = %d\012\000"
-.LC95:
+.LC98:
 	.ascii	"spuer block %x vpn is 0\012 \000"
-.LC96:
+.LC99:
 	.ascii	"no ect\000"
-.LC97:
+.LC100:
 	.ascii	"FtlVpcTblFlush error = %x error count = %d\012\000"
-.LC98:
+.LC101:
 	.ascii	"FtlCheckVpc %x = %x  %x\012\000"
-.LC99:
+.LC102:
 	.ascii	"Ftlwrite decrement_vpc_count %x = %d\012\000"
-.LC100:
+.LC103:
 	.ascii	"SWL %x, FSB = %x vpc= %x,ec=%x th=%x\012\000"
-.LC101:
+.LC104:
 	.ascii	"FtlWrite: lpa error:%x %x\012\000"
 	.section	.debug_frame,"",%progbits
 .Lframe0:
@@ -21838,10 +20666,10 @@ check_vpc_table:
 	.4byte	.LEFDE0-.LASFDE0
 .LASFDE0:
 	.4byte	.Lframe0
-	.4byte	.LFB261
-	.4byte	.LFE261-.LFB261
+	.4byte	.LFB271
+	.4byte	.LFE271-.LFB271
 	.byte	0x4
-	.4byte	.LCFI0-.LFB261
+	.4byte	.LCFI0-.LFB271
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
@@ -21875,10 +20703,10 @@ check_vpc_table:
 	.4byte	.LEFDE2-.LASFDE2
 .LASFDE2:
 	.4byte	.Lframe0
-	.4byte	.LFB276
-	.4byte	.LFE276-.LFB276
+	.4byte	.LFB286
+	.4byte	.LFE286-.LFB286
 	.byte	0x4
-	.4byte	.LCFI3-.LFB276
+	.4byte	.LCFI3-.LFB286
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
@@ -21900,10 +20728,10 @@ check_vpc_table:
 	.4byte	.LEFDE4-.LASFDE4
 .LASFDE4:
 	.4byte	.Lframe0
-	.4byte	.LFB142
-	.4byte	.LFE142-.LFB142
+	.4byte	.LFB152
+	.4byte	.LFE152-.LFB152
 	.byte	0x4
-	.4byte	.LCFI6-.LFB142
+	.4byte	.LCFI6-.LFB152
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
@@ -21925,10 +20753,10 @@ check_vpc_table:
 	.4byte	.LEFDE6-.LASFDE6
 .LASFDE6:
 	.4byte	.Lframe0
-	.4byte	.LFB143
-	.4byte	.LFE143-.LFB143
+	.4byte	.LFB153
+	.4byte	.LFE153-.LFB153
 	.byte	0x4
-	.4byte	.LCFI9-.LFB143
+	.4byte	.LCFI9-.LFB153
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
@@ -21950,10 +20778,10 @@ check_vpc_table:
 	.4byte	.LEFDE8-.LASFDE8
 .LASFDE8:
 	.4byte	.Lframe0
-	.4byte	.LFB144
-	.4byte	.LFE144-.LFB144
+	.4byte	.LFB154
+	.4byte	.LFE154-.LFB154
 	.byte	0x4
-	.4byte	.LCFI12-.LFB144
+	.4byte	.LCFI12-.LFB154
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
@@ -21975,16 +20803,14 @@ check_vpc_table:
 	.4byte	.LEFDE10-.LASFDE10
 .LASFDE10:
 	.4byte	.Lframe0
-	.4byte	.LFB145
-	.4byte	.LFE145-.LFB145
+	.4byte	.LFB155
+	.4byte	.LFE155-.LFB155
 	.byte	0x4
-	.4byte	.LCFI15-.LFB145
+	.4byte	.LCFI15-.LFB155
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
 	.4byte	.LCFI16-.LCFI15
-	.byte	0x83
-	.uleb128 0xc
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -22016,10 +20842,10 @@ check_vpc_table:
 	.4byte	.LEFDE12-.LASFDE12
 .LASFDE12:
 	.4byte	.Lframe0
-	.4byte	.LFB148
-	.4byte	.LFE148-.LFB148
+	.4byte	.LFB158
+	.4byte	.LFE158-.LFB158
 	.byte	0x4
-	.4byte	.LCFI18-.LFB148
+	.4byte	.LCFI18-.LFB158
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
@@ -22041,10 +20867,10 @@ check_vpc_table:
 	.4byte	.LEFDE14-.LASFDE14
 .LASFDE14:
 	.4byte	.Lframe0
-	.4byte	.LFB161
-	.4byte	.LFE161-.LFB161
+	.4byte	.LFB171
+	.4byte	.LFE171-.LFB171
 	.byte	0x4
-	.4byte	.LCFI21-.LFB161
+	.4byte	.LCFI21-.LFB171
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
@@ -22066,10 +20892,10 @@ check_vpc_table:
 	.4byte	.LEFDE16-.LASFDE16
 .LASFDE16:
 	.4byte	.Lframe0
-	.4byte	.LFB162
-	.4byte	.LFE162-.LFB162
+	.4byte	.LFB172
+	.4byte	.LFE172-.LFB172
 	.byte	0x4
-	.4byte	.LCFI24-.LFB162
+	.4byte	.LCFI24-.LFB172
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
@@ -22093,25 +20919,20 @@ check_vpc_table:
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
-	.byte	0x4
-	.4byte	.LCFI27-.LCFI26
-	.byte	0xc
-	.uleb128 0xd
-	.uleb128 0x20
 	.align	2
 .LEFDE16:
 .LSFDE18:
 	.4byte	.LEFDE18-.LASFDE18
 .LASFDE18:
 	.4byte	.Lframe0
-	.4byte	.LFB163
-	.4byte	.LFE163-.LFB163
+	.4byte	.LFB173
+	.4byte	.LFE173-.LFB173
 	.byte	0x4
-	.4byte	.LCFI28-.LFB163
+	.4byte	.LCFI27-.LFB173
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI29-.LCFI28
+	.4byte	.LCFI28-.LCFI27
 	.byte	0x84
 	.uleb128 0x8
 	.byte	0x85
@@ -22127,7 +20948,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI30-.LCFI29
+	.4byte	.LCFI29-.LCFI28
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22137,14 +20958,14 @@ check_vpc_table:
 	.4byte	.LEFDE20-.LASFDE20
 .LASFDE20:
 	.4byte	.Lframe0
-	.4byte	.LFB164
-	.4byte	.LFE164-.LFB164
+	.4byte	.LFB174
+	.4byte	.LFE174-.LFB174
 	.byte	0x4
-	.4byte	.LCFI31-.LFB164
+	.4byte	.LCFI30-.LFB174
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI32-.LCFI31
+	.4byte	.LCFI31-.LCFI30
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22152,7 +20973,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI33-.LCFI32
+	.4byte	.LCFI32-.LCFI31
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22162,14 +20983,14 @@ check_vpc_table:
 	.4byte	.LEFDE22-.LASFDE22
 .LASFDE22:
 	.4byte	.Lframe0
-	.4byte	.LFB167
-	.4byte	.LFE167-.LFB167
+	.4byte	.LFB177
+	.4byte	.LFE177-.LFB177
 	.byte	0x4
-	.4byte	.LCFI34-.LFB167
+	.4byte	.LCFI33-.LFB177
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI35-.LCFI34
+	.4byte	.LCFI34-.LCFI33
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22177,7 +20998,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI36-.LCFI35
+	.4byte	.LCFI35-.LCFI34
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22187,21 +21008,19 @@ check_vpc_table:
 	.4byte	.LEFDE24-.LASFDE24
 .LASFDE24:
 	.4byte	.Lframe0
-	.4byte	.LFB168
-	.4byte	.LFE168-.LFB168
+	.4byte	.LFB178
+	.4byte	.LFE178-.LFB178
 	.byte	0x4
-	.4byte	.LCFI37-.LFB168
+	.4byte	.LCFI36-.LFB178
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI38-.LCFI37
+	.4byte	.LCFI37-.LCFI36
 	.byte	0x84
-	.uleb128 0x8
-	.byte	0x85
 	.uleb128 0x7
-	.byte	0x86
+	.byte	0x85
 	.uleb128 0x6
-	.byte	0x87
+	.byte	0x86
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -22210,7 +21029,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI39-.LCFI38
+	.4byte	.LCFI38-.LCFI37
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22220,14 +21039,14 @@ check_vpc_table:
 	.4byte	.LEFDE26-.LASFDE26
 .LASFDE26:
 	.4byte	.Lframe0
-	.4byte	.LFB172
-	.4byte	.LFE172-.LFB172
+	.4byte	.LFB182
+	.4byte	.LFE182-.LFB182
 	.byte	0x4
-	.4byte	.LCFI40-.LFB172
+	.4byte	.LCFI39-.LFB182
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI41-.LCFI40
+	.4byte	.LCFI40-.LCFI39
 	.byte	0x84
 	.uleb128 0x8
 	.byte	0x85
@@ -22243,7 +21062,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI42-.LCFI41
+	.4byte	.LCFI41-.LCFI40
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22253,21 +21072,19 @@ check_vpc_table:
 	.4byte	.LEFDE28-.LASFDE28
 .LASFDE28:
 	.4byte	.Lframe0
-	.4byte	.LFB173
-	.4byte	.LFE173-.LFB173
+	.4byte	.LFB183
+	.4byte	.LFE183-.LFB183
 	.byte	0x4
-	.4byte	.LCFI43-.LFB173
+	.4byte	.LCFI42-.LFB183
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI44-.LCFI43
+	.4byte	.LCFI43-.LCFI42
 	.byte	0x84
-	.uleb128 0x8
-	.byte	0x85
 	.uleb128 0x7
-	.byte	0x86
+	.byte	0x85
 	.uleb128 0x6
-	.byte	0x87
+	.byte	0x86
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -22276,7 +21093,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI45-.LCFI44
+	.4byte	.LCFI44-.LCFI43
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22286,17 +21103,15 @@ check_vpc_table:
 	.4byte	.LEFDE30-.LASFDE30
 .LASFDE30:
 	.4byte	.Lframe0
-	.4byte	.LFB174
-	.4byte	.LFE174-.LFB174
+	.4byte	.LFB184
+	.4byte	.LFE184-.LFB184
 	.byte	0x4
-	.4byte	.LCFI46-.LFB174
+	.4byte	.LCFI45-.LFB184
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI47-.LCFI46
+	.4byte	.LCFI46-.LCFI45
 	.byte	0x84
-	.uleb128 0x6
-	.byte	0x85
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -22305,7 +21120,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI48-.LCFI47
+	.4byte	.LCFI47-.LCFI46
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22315,14 +21130,14 @@ check_vpc_table:
 	.4byte	.LEFDE32-.LASFDE32
 .LASFDE32:
 	.4byte	.Lframe0
-	.4byte	.LFB175
-	.4byte	.LFE175-.LFB175
+	.4byte	.LFB185
+	.4byte	.LFE185-.LFB185
 	.byte	0x4
-	.4byte	.LCFI49-.LFB175
+	.4byte	.LCFI48-.LFB185
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI50-.LCFI49
+	.4byte	.LCFI49-.LCFI48
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22330,7 +21145,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI51-.LCFI50
+	.4byte	.LCFI50-.LCFI49
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22340,17 +21155,15 @@ check_vpc_table:
 	.4byte	.LEFDE34-.LASFDE34
 .LASFDE34:
 	.4byte	.Lframe0
-	.4byte	.LFB177
-	.4byte	.LFE177-.LFB177
+	.4byte	.LFB187
+	.4byte	.LFE187-.LFB187
 	.byte	0x4
-	.4byte	.LCFI52-.LFB177
+	.4byte	.LCFI51-.LFB187
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI53-.LCFI52
+	.4byte	.LCFI52-.LCFI51
 	.byte	0x84
-	.uleb128 0x6
-	.byte	0x85
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -22359,7 +21172,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI54-.LCFI53
+	.4byte	.LCFI53-.LCFI52
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22369,14 +21182,14 @@ check_vpc_table:
 	.4byte	.LEFDE36-.LASFDE36
 .LASFDE36:
 	.4byte	.Lframe0
-	.4byte	.LFB178
-	.4byte	.LFE178-.LFB178
+	.4byte	.LFB188
+	.4byte	.LFE188-.LFB188
 	.byte	0x4
-	.4byte	.LCFI55-.LFB178
+	.4byte	.LCFI54-.LFB188
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI56-.LCFI55
+	.4byte	.LCFI55-.LCFI54
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22384,7 +21197,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI57-.LCFI56
+	.4byte	.LCFI56-.LCFI55
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22394,14 +21207,14 @@ check_vpc_table:
 	.4byte	.LEFDE38-.LASFDE38
 .LASFDE38:
 	.4byte	.Lframe0
-	.4byte	.LFB179
-	.4byte	.LFE179-.LFB179
+	.4byte	.LFB189
+	.4byte	.LFE189-.LFB189
 	.byte	0x4
-	.4byte	.LCFI58-.LFB179
+	.4byte	.LCFI57-.LFB189
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI59-.LCFI58
+	.4byte	.LCFI58-.LCFI57
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22409,7 +21222,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI60-.LCFI59
+	.4byte	.LCFI59-.LCFI58
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22419,21 +21232,15 @@ check_vpc_table:
 	.4byte	.LEFDE40-.LASFDE40
 .LASFDE40:
 	.4byte	.Lframe0
-	.4byte	.LFB181
-	.4byte	.LFE181-.LFB181
+	.4byte	.LFB191
+	.4byte	.LFE191-.LFB191
 	.byte	0x4
-	.4byte	.LCFI61-.LFB181
+	.4byte	.LCFI60-.LFB191
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI62-.LCFI61
+	.4byte	.LCFI61-.LCFI60
 	.byte	0x84
-	.uleb128 0x8
-	.byte	0x85
-	.uleb128 0x7
-	.byte	0x86
-	.uleb128 0x6
-	.byte	0x87
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -22442,7 +21249,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI63-.LCFI62
+	.4byte	.LCFI62-.LCFI61
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22452,14 +21259,14 @@ check_vpc_table:
 	.4byte	.LEFDE42-.LASFDE42
 .LASFDE42:
 	.4byte	.Lframe0
-	.4byte	.LFB182
-	.4byte	.LFE182-.LFB182
+	.4byte	.LFB192
+	.4byte	.LFE192-.LFB192
 	.byte	0x4
-	.4byte	.LCFI64-.LFB182
+	.4byte	.LCFI63-.LFB192
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI65-.LCFI64
+	.4byte	.LCFI64-.LCFI63
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22467,7 +21274,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI66-.LCFI65
+	.4byte	.LCFI65-.LCFI64
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22477,39 +21284,14 @@ check_vpc_table:
 	.4byte	.LEFDE44-.LASFDE44
 .LASFDE44:
 	.4byte	.Lframe0
-	.4byte	.LFB183
-	.4byte	.LFE183-.LFB183
-	.byte	0x4
-	.4byte	.LCFI67-.LFB183
-	.byte	0xd
-	.uleb128 0xc
-	.byte	0x4
-	.4byte	.LCFI68-.LCFI67
-	.byte	0x8b
-	.uleb128 0x4
-	.byte	0x8d
-	.uleb128 0x3
-	.byte	0x8e
-	.uleb128 0x2
-	.byte	0x4
-	.4byte	.LCFI69-.LCFI68
-	.byte	0xc
-	.uleb128 0xb
-	.uleb128 0x4
-	.align	2
-.LEFDE44:
-.LSFDE46:
-	.4byte	.LEFDE46-.LASFDE46
-.LASFDE46:
-	.4byte	.Lframe0
-	.4byte	.LFB186
-	.4byte	.LFE186-.LFB186
+	.4byte	.LFB196
+	.4byte	.LFE196-.LFB196
 	.byte	0x4
-	.4byte	.LCFI70-.LFB186
+	.4byte	.LCFI66-.LFB196
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI71-.LCFI70
+	.4byte	.LCFI67-.LCFI66
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -22531,33 +21313,70 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI72-.LCFI71
+	.4byte	.LCFI68-.LCFI67
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI73-.LCFI72
+	.4byte	.LCFI69-.LCFI68
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI74-.LCFI73
+	.4byte	.LCFI70-.LCFI69
 	.byte	0xb
 	.align	2
+.LEFDE44:
+.LSFDE46:
+	.4byte	.LEFDE46-.LASFDE46
+.LASFDE46:
+	.4byte	.Lframe0
+	.4byte	.LFB195
+	.4byte	.LFE195-.LFB195
+	.byte	0x4
+	.4byte	.LCFI71-.LFB195
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI72-.LCFI71
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI73-.LCFI72
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
 .LEFDE46:
 .LSFDE48:
 	.4byte	.LEFDE48-.LASFDE48
 .LASFDE48:
 	.4byte	.Lframe0
-	.4byte	.LFB185
-	.4byte	.LFE185-.LFB185
+	.4byte	.LFB197
+	.4byte	.LFE197-.LFB197
 	.byte	0x4
-	.4byte	.LCFI75-.LFB185
+	.4byte	.LCFI74-.LFB197
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI76-.LCFI75
+	.4byte	.LCFI75-.LCFI74
+	.byte	0x84
+	.uleb128 0xa
+	.byte	0x85
+	.uleb128 0x9
+	.byte	0x86
+	.uleb128 0x8
+	.byte	0x87
+	.uleb128 0x7
+	.byte	0x88
+	.uleb128 0x6
+	.byte	0x89
+	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22565,7 +21384,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI77-.LCFI76
+	.4byte	.LCFI76-.LCFI75
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22575,30 +21394,14 @@ check_vpc_table:
 	.4byte	.LEFDE50-.LASFDE50
 .LASFDE50:
 	.4byte	.Lframe0
-	.4byte	.LFB187
-	.4byte	.LFE187-.LFB187
+	.4byte	.LFB194
+	.4byte	.LFE194-.LFB194
 	.byte	0x4
-	.4byte	.LCFI78-.LFB187
+	.4byte	.LCFI77-.LFB194
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI79-.LCFI78
-	.byte	0x83
-	.uleb128 0xc
-	.byte	0x84
-	.uleb128 0xb
-	.byte	0x85
-	.uleb128 0xa
-	.byte	0x86
-	.uleb128 0x9
-	.byte	0x87
-	.uleb128 0x8
-	.byte	0x88
-	.uleb128 0x7
-	.byte	0x89
-	.uleb128 0x6
-	.byte	0x8a
-	.uleb128 0x5
+	.4byte	.LCFI78-.LCFI77
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22606,7 +21409,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI80-.LCFI79
+	.4byte	.LCFI79-.LCFI78
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22616,14 +21419,24 @@ check_vpc_table:
 	.4byte	.LEFDE52-.LASFDE52
 .LASFDE52:
 	.4byte	.Lframe0
-	.4byte	.LFB184
-	.4byte	.LFE184-.LFB184
+	.4byte	.LFB198
+	.4byte	.LFE198-.LFB198
 	.byte	0x4
-	.4byte	.LCFI81-.LFB184
+	.4byte	.LCFI80-.LFB198
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI82-.LCFI81
+	.4byte	.LCFI81-.LCFI80
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22631,7 +21444,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI83-.LCFI82
+	.4byte	.LCFI82-.LCFI81
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22641,25 +21454,15 @@ check_vpc_table:
 	.4byte	.LEFDE54-.LASFDE54
 .LASFDE54:
 	.4byte	.Lframe0
-	.4byte	.LFB188
-	.4byte	.LFE188-.LFB188
+	.4byte	.LFB199
+	.4byte	.LFE199-.LFB199
 	.byte	0x4
-	.4byte	.LCFI84-.LFB188
+	.4byte	.LCFI83-.LFB199
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI85-.LCFI84
+	.4byte	.LCFI84-.LCFI83
 	.byte	0x84
-	.uleb128 0xa
-	.byte	0x85
-	.uleb128 0x9
-	.byte	0x86
-	.uleb128 0x8
-	.byte	0x87
-	.uleb128 0x7
-	.byte	0x88
-	.uleb128 0x6
-	.byte	0x89
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -22668,7 +21471,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI86-.LCFI85
+	.4byte	.LCFI85-.LCFI84
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22678,18 +21481,14 @@ check_vpc_table:
 	.4byte	.LEFDE56-.LASFDE56
 .LASFDE56:
 	.4byte	.Lframe0
-	.4byte	.LFB189
-	.4byte	.LFE189-.LFB189
+	.4byte	.LFB200
+	.4byte	.LFE200-.LFB200
 	.byte	0x4
-	.4byte	.LCFI87-.LFB189
+	.4byte	.LCFI86-.LFB200
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI88-.LCFI87
-	.byte	0x84
-	.uleb128 0x6
-	.byte	0x85
-	.uleb128 0x5
+	.4byte	.LCFI87-.LCFI86
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22697,7 +21496,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI89-.LCFI88
+	.4byte	.LCFI88-.LCFI87
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22707,14 +21506,14 @@ check_vpc_table:
 	.4byte	.LEFDE58-.LASFDE58
 .LASFDE58:
 	.4byte	.Lframe0
-	.4byte	.LFB190
-	.4byte	.LFE190-.LFB190
+	.4byte	.LFB201
+	.4byte	.LFE201-.LFB201
 	.byte	0x4
-	.4byte	.LCFI90-.LFB190
+	.4byte	.LCFI89-.LFB201
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI91-.LCFI90
+	.4byte	.LCFI90-.LCFI89
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22722,7 +21521,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI92-.LCFI91
+	.4byte	.LCFI91-.LCFI90
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22732,14 +21531,24 @@ check_vpc_table:
 	.4byte	.LEFDE60-.LASFDE60
 .LASFDE60:
 	.4byte	.Lframe0
-	.4byte	.LFB191
-	.4byte	.LFE191-.LFB191
+	.4byte	.LFB202
+	.4byte	.LFE202-.LFB202
 	.byte	0x4
-	.4byte	.LCFI93-.LFB191
+	.4byte	.LCFI92-.LFB202
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI94-.LCFI93
+	.4byte	.LCFI93-.LCFI92
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22747,7 +21556,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI95-.LCFI94
+	.4byte	.LCFI94-.LCFI93
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22757,14 +21566,14 @@ check_vpc_table:
 	.4byte	.LEFDE62-.LASFDE62
 .LASFDE62:
 	.4byte	.Lframe0
-	.4byte	.LFB192
-	.4byte	.LFE192-.LFB192
+	.4byte	.LFB210
+	.4byte	.LFE210-.LFB210
 	.byte	0x4
-	.4byte	.LCFI96-.LFB192
+	.4byte	.LCFI95-.LFB210
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI97-.LCFI96
+	.4byte	.LCFI96-.LCFI95
 	.byte	0x84
 	.uleb128 0x8
 	.byte	0x85
@@ -22780,7 +21589,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI98-.LCFI97
+	.4byte	.LCFI97-.LCFI96
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22790,22 +21599,14 @@ check_vpc_table:
 	.4byte	.LEFDE64-.LASFDE64
 .LASFDE64:
 	.4byte	.Lframe0
-	.4byte	.LFB195
-	.4byte	.LFE195-.LFB195
+	.4byte	.LFB216
+	.4byte	.LFE216-.LFB216
 	.byte	0x4
-	.4byte	.LCFI99-.LFB195
+	.4byte	.LCFI98-.LFB216
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI100-.LCFI99
-	.byte	0x84
-	.uleb128 0x8
-	.byte	0x85
-	.uleb128 0x7
-	.byte	0x86
-	.uleb128 0x6
-	.byte	0x87
-	.uleb128 0x5
+	.4byte	.LCFI99-.LCFI98
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22813,7 +21614,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI101-.LCFI100
+	.4byte	.LCFI100-.LCFI99
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22823,22 +21624,14 @@ check_vpc_table:
 	.4byte	.LEFDE66-.LASFDE66
 .LASFDE66:
 	.4byte	.Lframe0
-	.4byte	.LFB200
-	.4byte	.LFE200-.LFB200
+	.4byte	.LFB222
+	.4byte	.LFE222-.LFB222
 	.byte	0x4
-	.4byte	.LCFI102-.LFB200
+	.4byte	.LCFI101-.LFB222
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI103-.LCFI102
-	.byte	0x84
-	.uleb128 0x8
-	.byte	0x85
-	.uleb128 0x7
-	.byte	0x86
-	.uleb128 0x6
-	.byte	0x87
-	.uleb128 0x5
+	.4byte	.LCFI102-.LCFI101
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22846,7 +21639,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI104-.LCFI103
+	.4byte	.LCFI103-.LCFI102
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22856,14 +21649,14 @@ check_vpc_table:
 	.4byte	.LEFDE68-.LASFDE68
 .LASFDE68:
 	.4byte	.Lframe0
-	.4byte	.LFB206
-	.4byte	.LFE206-.LFB206
+	.4byte	.LFB223
+	.4byte	.LFE223-.LFB223
 	.byte	0x4
-	.4byte	.LCFI105-.LFB206
+	.4byte	.LCFI104-.LFB223
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI106-.LCFI105
+	.4byte	.LCFI105-.LCFI104
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22871,7 +21664,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI107-.LCFI106
+	.4byte	.LCFI106-.LCFI105
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22881,14 +21674,18 @@ check_vpc_table:
 	.4byte	.LEFDE70-.LASFDE70
 .LASFDE70:
 	.4byte	.Lframe0
-	.4byte	.LFB212
-	.4byte	.LFE212-.LFB212
+	.4byte	.LFB229
+	.4byte	.LFE229-.LFB229
 	.byte	0x4
-	.4byte	.LCFI108-.LFB212
+	.4byte	.LCFI107-.LFB229
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI109-.LCFI108
+	.4byte	.LCFI108-.LCFI107
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22896,7 +21693,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI110-.LCFI109
+	.4byte	.LCFI109-.LCFI108
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22906,14 +21703,14 @@ check_vpc_table:
 	.4byte	.LEFDE72-.LASFDE72
 .LASFDE72:
 	.4byte	.Lframe0
-	.4byte	.LFB213
-	.4byte	.LFE213-.LFB213
+	.4byte	.LFB232
+	.4byte	.LFE232-.LFB232
 	.byte	0x4
-	.4byte	.LCFI111-.LFB213
+	.4byte	.LCFI110-.LFB232
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI112-.LCFI111
+	.4byte	.LCFI111-.LCFI110
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -22921,7 +21718,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI113-.LCFI112
+	.4byte	.LCFI112-.LCFI111
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -22931,68 +21728,14 @@ check_vpc_table:
 	.4byte	.LEFDE74-.LASFDE74
 .LASFDE74:
 	.4byte	.Lframe0
-	.4byte	.LFB219
-	.4byte	.LFE219-.LFB219
-	.byte	0x4
-	.4byte	.LCFI114-.LFB219
-	.byte	0xd
-	.uleb128 0xc
-	.byte	0x4
-	.4byte	.LCFI115-.LCFI114
-	.byte	0x84
-	.uleb128 0x6
-	.byte	0x85
-	.uleb128 0x5
-	.byte	0x8b
-	.uleb128 0x4
-	.byte	0x8d
-	.uleb128 0x3
-	.byte	0x8e
-	.uleb128 0x2
-	.byte	0x4
-	.4byte	.LCFI116-.LCFI115
-	.byte	0xc
-	.uleb128 0xb
-	.uleb128 0x4
-	.align	2
-.LEFDE74:
-.LSFDE76:
-	.4byte	.LEFDE76-.LASFDE76
-.LASFDE76:
-	.4byte	.Lframe0
-	.4byte	.LFB222
-	.4byte	.LFE222-.LFB222
-	.byte	0x4
-	.4byte	.LCFI117-.LFB222
-	.byte	0xd
-	.uleb128 0xc
-	.byte	0x4
-	.4byte	.LCFI118-.LCFI117
-	.byte	0x8b
-	.uleb128 0x4
-	.byte	0x8d
-	.uleb128 0x3
-	.byte	0x8e
-	.uleb128 0x2
-	.byte	0x4
-	.4byte	.LCFI119-.LCFI118
-	.byte	0xc
-	.uleb128 0xb
-	.uleb128 0x4
-	.align	2
-.LEFDE76:
-.LSFDE78:
-	.4byte	.LEFDE78-.LASFDE78
-.LASFDE78:
-	.4byte	.Lframe0
-	.4byte	.LFB224
-	.4byte	.LFE224-.LFB224
+	.4byte	.LFB234
+	.4byte	.LFE234-.LFB234
 	.byte	0x4
-	.4byte	.LCFI120-.LFB224
+	.4byte	.LCFI113-.LFB234
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI121-.LCFI120
+	.4byte	.LCFI114-.LCFI113
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -23014,35 +21757,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI122-.LCFI121
+	.4byte	.LCFI115-.LCFI114
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
-	.byte	0x4
-	.4byte	.LCFI123-.LCFI122
-	.byte	0xa
-	.byte	0xc
-	.uleb128 0xd
-	.uleb128 0x2c
-	.byte	0x4
-	.4byte	.LCFI124-.LCFI123
-	.byte	0xb
 	.align	2
-.LEFDE78:
-.LSFDE80:
-	.4byte	.LEFDE80-.LASFDE80
-.LASFDE80:
+.LEFDE74:
+.LSFDE76:
+	.4byte	.LEFDE76-.LASFDE76
+.LASFDE76:
 	.4byte	.Lframe0
-	.4byte	.LFB233
-	.4byte	.LFE233-.LFB233
+	.4byte	.LFB243
+	.4byte	.LFE243-.LFB243
 	.byte	0x4
-	.4byte	.LCFI125-.LFB233
+	.4byte	.LCFI116-.LFB243
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI126-.LCFI125
-	.byte	0x83
-	.uleb128 0xc
+	.4byte	.LCFI117-.LCFI116
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -23064,24 +21796,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI127-.LCFI126
+	.4byte	.LCFI118-.LCFI117
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.align	2
-.LEFDE80:
-.LSFDE82:
-	.4byte	.LEFDE82-.LASFDE82
-.LASFDE82:
+.LEFDE76:
+.LSFDE78:
+	.4byte	.LEFDE78-.LASFDE78
+.LASFDE78:
 	.4byte	.Lframe0
-	.4byte	.LFB234
-	.4byte	.LFE234-.LFB234
+	.4byte	.LFB244
+	.4byte	.LFE244-.LFB244
 	.byte	0x4
-	.4byte	.LCFI128-.LFB234
+	.4byte	.LCFI119-.LFB244
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI129-.LCFI128
+	.4byte	.LCFI120-.LCFI119
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -23089,24 +21821,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI130-.LCFI129
+	.4byte	.LCFI121-.LCFI120
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.align	2
-.LEFDE82:
-.LSFDE84:
-	.4byte	.LEFDE84-.LASFDE84
-.LASFDE84:
+.LEFDE78:
+.LSFDE80:
+	.4byte	.LEFDE80-.LASFDE80
+.LASFDE80:
 	.4byte	.Lframe0
-	.4byte	.LFB235
-	.4byte	.LFE235-.LFB235
+	.4byte	.LFB245
+	.4byte	.LFE245-.LFB245
 	.byte	0x4
-	.4byte	.LCFI131-.LFB235
+	.4byte	.LCFI122-.LFB245
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI132-.LCFI131
+	.4byte	.LCFI123-.LCFI122
 	.byte	0x84
 	.uleb128 0x6
 	.byte	0x85
@@ -23118,24 +21850,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI133-.LCFI132
+	.4byte	.LCFI124-.LCFI123
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.align	2
-.LEFDE84:
-.LSFDE86:
-	.4byte	.LEFDE86-.LASFDE86
-.LASFDE86:
+.LEFDE80:
+.LSFDE82:
+	.4byte	.LEFDE82-.LASFDE82
+.LASFDE82:
 	.4byte	.Lframe0
-	.4byte	.LFB140
-	.4byte	.LFE140-.LFB140
+	.4byte	.LFB150
+	.4byte	.LFE150-.LFB150
 	.byte	0x4
-	.4byte	.LCFI134-.LFB140
+	.4byte	.LCFI125-.LFB150
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI135-.LCFI134
+	.4byte	.LCFI126-.LCFI125
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -23157,33 +21889,33 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI136-.LCFI135
+	.4byte	.LCFI127-.LCFI126
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI137-.LCFI136
+	.4byte	.LCFI128-.LCFI127
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI138-.LCFI137
+	.4byte	.LCFI129-.LCFI128
 	.byte	0xb
 	.align	2
-.LEFDE86:
-.LSFDE88:
-	.4byte	.LEFDE88-.LASFDE88
-.LASFDE88:
+.LEFDE82:
+.LSFDE84:
+	.4byte	.LEFDE84-.LASFDE84
+.LASFDE84:
 	.4byte	.Lframe0
-	.4byte	.LFB141
-	.4byte	.LFE141-.LFB141
+	.4byte	.LFB151
+	.4byte	.LFE151-.LFB151
 	.byte	0x4
-	.4byte	.LCFI139-.LFB141
+	.4byte	.LCFI130-.LFB151
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI140-.LCFI139
+	.4byte	.LCFI131-.LCFI130
 	.byte	0x84
 	.uleb128 0x6
 	.byte	0x85
@@ -23195,24 +21927,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI141-.LCFI140
+	.4byte	.LCFI132-.LCFI131
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.align	2
-.LEFDE88:
-.LSFDE90:
-	.4byte	.LEFDE90-.LASFDE90
-.LASFDE90:
+.LEFDE84:
+.LSFDE86:
+	.4byte	.LEFDE86-.LASFDE86
+.LASFDE86:
 	.4byte	.Lframe0
-	.4byte	.LFB236
-	.4byte	.LFE236-.LFB236
+	.4byte	.LFB246
+	.4byte	.LFE246-.LFB246
 	.byte	0x4
-	.4byte	.LCFI142-.LFB236
+	.4byte	.LCFI133-.LFB246
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI143-.LCFI142
+	.4byte	.LCFI134-.LCFI133
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -23234,33 +21966,33 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI144-.LCFI143
+	.4byte	.LCFI135-.LCFI134
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI145-.LCFI144
+	.4byte	.LCFI136-.LCFI135
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI146-.LCFI145
+	.4byte	.LCFI137-.LCFI136
 	.byte	0xb
 	.align	2
-.LEFDE90:
-.LSFDE92:
-	.4byte	.LEFDE92-.LASFDE92
-.LASFDE92:
+.LEFDE86:
+.LSFDE88:
+	.4byte	.LEFDE88-.LASFDE88
+.LASFDE88:
 	.4byte	.Lframe0
-	.4byte	.LFB237
-	.4byte	.LFE237-.LFB237
+	.4byte	.LFB247
+	.4byte	.LFE247-.LFB247
 	.byte	0x4
-	.4byte	.LCFI147-.LFB237
+	.4byte	.LCFI138-.LFB247
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI148-.LCFI147
+	.4byte	.LCFI139-.LCFI138
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -23268,31 +22000,29 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI149-.LCFI148
+	.4byte	.LCFI140-.LCFI139
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.align	2
-.LEFDE92:
-.LSFDE94:
-	.4byte	.LEFDE94-.LASFDE94
-.LASFDE94:
+.LEFDE88:
+.LSFDE90:
+	.4byte	.LEFDE90-.LASFDE90
+.LASFDE90:
 	.4byte	.Lframe0
-	.4byte	.LFB240
-	.4byte	.LFE240-.LFB240
+	.4byte	.LFB250
+	.4byte	.LFE250-.LFB250
 	.byte	0x4
-	.4byte	.LCFI150-.LFB240
+	.4byte	.LCFI141-.LFB250
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI151-.LCFI150
+	.4byte	.LCFI142-.LCFI141
 	.byte	0x84
-	.uleb128 0x8
-	.byte	0x85
 	.uleb128 0x7
-	.byte	0x86
+	.byte	0x85
 	.uleb128 0x6
-	.byte	0x87
+	.byte	0x86
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -23301,35 +22031,33 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI152-.LCFI151
+	.4byte	.LCFI143-.LCFI142
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.align	2
-.LEFDE94:
-.LSFDE96:
-	.4byte	.LEFDE96-.LASFDE96
-.LASFDE96:
+.LEFDE90:
+.LSFDE92:
+	.4byte	.LEFDE92-.LASFDE92
+.LASFDE92:
 	.4byte	.Lframe0
-	.4byte	.LFB243
-	.4byte	.LFE243-.LFB243
+	.4byte	.LFB253
+	.4byte	.LFE253-.LFB253
 	.byte	0x4
-	.4byte	.LCFI153-.LFB243
+	.4byte	.LCFI144-.LFB253
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI154-.LCFI153
+	.4byte	.LCFI145-.LCFI144
 	.byte	0x84
-	.uleb128 0xa
-	.byte	0x85
 	.uleb128 0x9
-	.byte	0x86
+	.byte	0x85
 	.uleb128 0x8
-	.byte	0x87
+	.byte	0x86
 	.uleb128 0x7
-	.byte	0x88
+	.byte	0x87
 	.uleb128 0x6
-	.byte	0x89
+	.byte	0x88
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -23338,26 +22066,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI155-.LCFI154
+	.4byte	.LCFI146-.LCFI145
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.align	2
-.LEFDE96:
-.LSFDE98:
-	.4byte	.LEFDE98-.LASFDE98
-.LASFDE98:
+.LEFDE92:
+.LSFDE94:
+	.4byte	.LEFDE94-.LASFDE94
+.LASFDE94:
 	.4byte	.Lframe0
-	.4byte	.LFB244
-	.4byte	.LFE244-.LFB244
+	.4byte	.LFB254
+	.4byte	.LFE254-.LFB254
 	.byte	0x4
-	.4byte	.LCFI156-.LFB244
+	.4byte	.LCFI147-.LFB254
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI157-.LCFI156
-	.byte	0x83
-	.uleb128 0xc
+	.4byte	.LCFI148-.LCFI147
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -23379,24 +22105,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI158-.LCFI157
+	.4byte	.LCFI149-.LCFI148
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.align	2
-.LEFDE98:
-.LSFDE100:
-	.4byte	.LEFDE100-.LASFDE100
-.LASFDE100:
+.LEFDE94:
+.LSFDE96:
+	.4byte	.LEFDE96-.LASFDE96
+.LASFDE96:
 	.4byte	.Lframe0
-	.4byte	.LFB245
-	.4byte	.LFE245-.LFB245
+	.4byte	.LFB255
+	.4byte	.LFE255-.LFB255
 	.byte	0x4
-	.4byte	.LCFI159-.LFB245
+	.4byte	.LCFI150-.LFB255
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI160-.LCFI159
+	.4byte	.LCFI151-.LCFI150
 	.byte	0x84
 	.uleb128 0xa
 	.byte	0x85
@@ -23416,24 +22142,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI161-.LCFI160
+	.4byte	.LCFI152-.LCFI151
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.align	2
-.LEFDE100:
-.LSFDE102:
-	.4byte	.LEFDE102-.LASFDE102
-.LASFDE102:
+.LEFDE96:
+.LSFDE98:
+	.4byte	.LEFDE98-.LASFDE98
+.LASFDE98:
 	.4byte	.Lframe0
-	.4byte	.LFB246
-	.4byte	.LFE246-.LFB246
+	.4byte	.LFB256
+	.4byte	.LFE256-.LFB256
 	.byte	0x4
-	.4byte	.LCFI162-.LFB246
+	.4byte	.LCFI153-.LFB256
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI163-.LCFI162
+	.4byte	.LCFI154-.LCFI153
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -23441,31 +22167,33 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI164-.LCFI163
+	.4byte	.LCFI155-.LCFI154
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.align	2
-.LEFDE102:
-.LSFDE104:
-	.4byte	.LEFDE104-.LASFDE104
-.LASFDE104:
+.LEFDE98:
+.LSFDE100:
+	.4byte	.LEFDE100-.LASFDE100
+.LASFDE100:
 	.4byte	.Lframe0
-	.4byte	.LFB247
-	.4byte	.LFE247-.LFB247
+	.4byte	.LFB257
+	.4byte	.LFE257-.LFB257
 	.byte	0x4
-	.4byte	.LCFI165-.LFB247
+	.4byte	.LCFI156-.LFB257
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI166-.LCFI165
+	.4byte	.LCFI157-.LCFI156
 	.byte	0x84
-	.uleb128 0x8
+	.uleb128 0x9
 	.byte	0x85
-	.uleb128 0x7
+	.uleb128 0x8
 	.byte	0x86
-	.uleb128 0x6
+	.uleb128 0x7
 	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -23474,27 +22202,25 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI167-.LCFI166
+	.4byte	.LCFI158-.LCFI157
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.align	2
-.LEFDE104:
-.LSFDE106:
-	.4byte	.LEFDE106-.LASFDE106
-.LASFDE106:
+.LEFDE100:
+.LSFDE102:
+	.4byte	.LEFDE102-.LASFDE102
+.LASFDE102:
 	.4byte	.Lframe0
-	.4byte	.LFB254
-	.4byte	.LFE254-.LFB254
+	.4byte	.LFB264
+	.4byte	.LFE264-.LFB264
 	.byte	0x4
-	.4byte	.LCFI168-.LFB254
+	.4byte	.LCFI159-.LFB264
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI169-.LCFI168
+	.4byte	.LCFI160-.LCFI159
 	.byte	0x84
-	.uleb128 0x6
-	.byte	0x85
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -23503,24 +22229,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI170-.LCFI169
+	.4byte	.LCFI161-.LCFI160
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.align	2
-.LEFDE106:
-.LSFDE108:
-	.4byte	.LEFDE108-.LASFDE108
-.LASFDE108:
+.LEFDE102:
+.LSFDE104:
+	.4byte	.LEFDE104-.LASFDE104
+.LASFDE104:
 	.4byte	.Lframe0
-	.4byte	.LFB255
-	.4byte	.LFE255-.LFB255
+	.4byte	.LFB265
+	.4byte	.LFE265-.LFB265
 	.byte	0x4
-	.4byte	.LCFI171-.LFB255
+	.4byte	.LCFI162-.LFB265
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI172-.LCFI171
+	.4byte	.LCFI163-.LCFI162
 	.byte	0x84
 	.uleb128 0x8
 	.byte	0x85
@@ -23536,24 +22262,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI173-.LCFI172
+	.4byte	.LCFI164-.LCFI163
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.align	2
-.LEFDE108:
-.LSFDE110:
-	.4byte	.LEFDE110-.LASFDE110
-.LASFDE110:
+.LEFDE104:
+.LSFDE106:
+	.4byte	.LEFDE106-.LASFDE106
+.LASFDE106:
 	.4byte	.Lframe0
-	.4byte	.LFB256
-	.4byte	.LFE256-.LFB256
+	.4byte	.LFB266
+	.4byte	.LFE266-.LFB266
 	.byte	0x4
-	.4byte	.LCFI174-.LFB256
+	.4byte	.LCFI165-.LFB266
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI175-.LCFI174
+	.4byte	.LCFI166-.LCFI165
 	.byte	0x84
 	.uleb128 0x6
 	.byte	0x85
@@ -23565,24 +22291,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI176-.LCFI175
+	.4byte	.LCFI167-.LCFI166
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.align	2
-.LEFDE110:
-.LSFDE112:
-	.4byte	.LEFDE112-.LASFDE112
-.LASFDE112:
+.LEFDE106:
+.LSFDE108:
+	.4byte	.LEFDE108-.LASFDE108
+.LASFDE108:
 	.4byte	.Lframe0
-	.4byte	.LFB262
-	.4byte	.LFE262-.LFB262
+	.4byte	.LFB272
+	.4byte	.LFE272-.LFB272
 	.byte	0x4
-	.4byte	.LCFI177-.LFB262
+	.4byte	.LCFI168-.LFB272
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI178-.LCFI177
+	.4byte	.LCFI169-.LCFI168
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -23604,35 +22330,33 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI179-.LCFI178
+	.4byte	.LCFI170-.LCFI169
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI180-.LCFI179
+	.4byte	.LCFI171-.LCFI170
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI181-.LCFI180
+	.4byte	.LCFI172-.LCFI171
 	.byte	0xb
 	.align	2
-.LEFDE112:
-.LSFDE114:
-	.4byte	.LEFDE114-.LASFDE114
-.LASFDE114:
+.LEFDE108:
+.LSFDE110:
+	.4byte	.LEFDE110-.LASFDE110
+.LASFDE110:
 	.4byte	.Lframe0
-	.4byte	.LFB170
-	.4byte	.LFE170-.LFB170
+	.4byte	.LFB180
+	.4byte	.LFE180-.LFB180
 	.byte	0x4
-	.4byte	.LCFI182-.LFB170
+	.4byte	.LCFI173-.LFB180
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI183-.LCFI182
-	.byte	0x83
-	.uleb128 0xc
+	.4byte	.LCFI174-.LCFI173
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -23654,24 +22378,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI184-.LCFI183
+	.4byte	.LCFI175-.LCFI174
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.align	2
-.LEFDE114:
-.LSFDE116:
-	.4byte	.LEFDE116-.LASFDE116
-.LASFDE116:
+.LEFDE110:
+.LSFDE112:
+	.4byte	.LEFDE112-.LASFDE112
+.LASFDE112:
 	.4byte	.Lframe0
-	.4byte	.LFB176
-	.4byte	.LFE176-.LFB176
+	.4byte	.LFB186
+	.4byte	.LFE186-.LFB186
 	.byte	0x4
-	.4byte	.LCFI185-.LFB176
+	.4byte	.LCFI176-.LFB186
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI186-.LCFI185
+	.4byte	.LCFI177-.LCFI176
 	.byte	0x84
 	.uleb128 0x9
 	.byte	0x85
@@ -23689,33 +22413,33 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI187-.LCFI186
+	.4byte	.LCFI178-.LCFI177
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI188-.LCFI187
+	.4byte	.LCFI179-.LCFI178
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x24
 	.byte	0x4
-	.4byte	.LCFI189-.LCFI188
+	.4byte	.LCFI180-.LCFI179
 	.byte	0xb
 	.align	2
-.LEFDE116:
-.LSFDE118:
-	.4byte	.LEFDE118-.LASFDE118
-.LASFDE118:
+.LEFDE112:
+.LSFDE114:
+	.4byte	.LEFDE114-.LASFDE114
+.LASFDE114:
 	.4byte	.Lframe0
-	.4byte	.LFB263
-	.4byte	.LFE263-.LFB263
+	.4byte	.LFB273
+	.4byte	.LFE273-.LFB273
 	.byte	0x4
-	.4byte	.LCFI190-.LFB263
+	.4byte	.LCFI181-.LFB273
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI191-.LCFI190
+	.4byte	.LCFI182-.LCFI181
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -23737,33 +22461,33 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI192-.LCFI191
+	.4byte	.LCFI183-.LCFI182
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI193-.LCFI192
+	.4byte	.LCFI184-.LCFI183
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI194-.LCFI193
+	.4byte	.LCFI185-.LCFI184
 	.byte	0xb
 	.align	2
-.LEFDE118:
-.LSFDE120:
-	.4byte	.LEFDE120-.LASFDE120
-.LASFDE120:
+.LEFDE114:
+.LSFDE116:
+	.4byte	.LEFDE116-.LASFDE116
+.LASFDE116:
 	.4byte	.Lframe0
-	.4byte	.LFB264
-	.4byte	.LFE264-.LFB264
+	.4byte	.LFB274
+	.4byte	.LFE274-.LFB274
 	.byte	0x4
-	.4byte	.LCFI195-.LFB264
+	.4byte	.LCFI186-.LFB274
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI196-.LCFI195
+	.4byte	.LCFI187-.LCFI186
 	.byte	0x84
 	.uleb128 0xa
 	.byte	0x85
@@ -23783,40 +22507,38 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI197-.LCFI196
+	.4byte	.LCFI188-.LCFI187
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI198-.LCFI197
+	.4byte	.LCFI189-.LCFI188
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x28
 	.byte	0x4
-	.4byte	.LCFI199-.LCFI198
+	.4byte	.LCFI190-.LCFI189
 	.byte	0xb
 	.align	2
-.LEFDE120:
-.LSFDE122:
-	.4byte	.LEFDE122-.LASFDE122
-.LASFDE122:
+.LEFDE116:
+.LSFDE118:
+	.4byte	.LEFDE118-.LASFDE118
+.LASFDE118:
 	.4byte	.Lframe0
-	.4byte	.LFB180
-	.4byte	.LFE180-.LFB180
+	.4byte	.LFB190
+	.4byte	.LFE190-.LFB190
 	.byte	0x4
-	.4byte	.LCFI200-.LFB180
+	.4byte	.LCFI191-.LFB190
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI201-.LCFI200
+	.4byte	.LCFI192-.LCFI191
 	.byte	0x84
-	.uleb128 0x8
-	.byte	0x85
 	.uleb128 0x7
-	.byte	0x86
+	.byte	0x85
 	.uleb128 0x6
-	.byte	0x87
+	.byte	0x86
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -23825,24 +22547,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI202-.LCFI201
+	.4byte	.LCFI193-.LCFI192
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.align	2
-.LEFDE122:
-.LSFDE124:
-	.4byte	.LEFDE124-.LASFDE124
-.LASFDE124:
+.LEFDE118:
+.LSFDE120:
+	.4byte	.LEFDE120-.LASFDE120
+.LASFDE120:
 	.4byte	.Lframe0
-	.4byte	.LFB149
-	.4byte	.LFE149-.LFB149
+	.4byte	.LFB159
+	.4byte	.LFE159-.LFB159
 	.byte	0x4
-	.4byte	.LCFI203-.LFB149
+	.4byte	.LCFI194-.LFB159
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI204-.LCFI203
+	.4byte	.LCFI195-.LCFI194
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -23864,33 +22586,99 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI205-.LCFI204
+	.4byte	.LCFI196-.LCFI195
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI206-.LCFI205
+	.4byte	.LCFI197-.LCFI196
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI207-.LCFI206
+	.4byte	.LCFI198-.LCFI197
 	.byte	0xb
 	.align	2
+.LEFDE120:
+.LSFDE122:
+	.4byte	.LEFDE122-.LASFDE122
+.LASFDE122:
+	.4byte	.Lframe0
+	.4byte	.LFB193
+	.4byte	.LFE193-.LFB193
+	.byte	0x4
+	.4byte	.LCFI199-.LFB193
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI200-.LCFI199
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI201-.LCFI200
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE122:
+.LSFDE124:
+	.4byte	.LEFDE124-.LASFDE124
+.LASFDE124:
+	.4byte	.Lframe0
+	.4byte	.LFB205
+	.4byte	.LFE205-.LFB205
+	.byte	0x4
+	.4byte	.LCFI202-.LFB205
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI203-.LCFI202
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI204-.LCFI203
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
 .LEFDE124:
 .LSFDE126:
 	.4byte	.LEFDE126-.LASFDE126
 .LASFDE126:
 	.4byte	.Lframe0
-	.4byte	.LFB265
-	.4byte	.LFE265-.LFB265
+	.4byte	.LFB275
+	.4byte	.LFE275-.LFB275
 	.byte	0x4
-	.4byte	.LCFI208-.LFB265
+	.4byte	.LCFI205-.LFB275
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI209-.LCFI208
+	.4byte	.LCFI206-.LCFI205
 	.byte	0x84
 	.uleb128 0x6
 	.byte	0x85
@@ -23902,12 +22690,12 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI210-.LCFI209
+	.4byte	.LCFI207-.LCFI206
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI211-.LCFI210
+	.4byte	.LCFI208-.LCFI207
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x18
@@ -23917,14 +22705,14 @@ check_vpc_table:
 	.4byte	.LEFDE128-.LASFDE128
 .LASFDE128:
 	.4byte	.Lframe0
-	.4byte	.LFB266
-	.4byte	.LFE266-.LFB266
+	.4byte	.LFB276
+	.4byte	.LFE276-.LFB276
 	.byte	0x4
-	.4byte	.LCFI212-.LFB266
+	.4byte	.LCFI209-.LFB276
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI213-.LCFI212
+	.4byte	.LCFI210-.LCFI209
 	.byte	0x84
 	.uleb128 0x6
 	.byte	0x85
@@ -23936,7 +22724,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI214-.LCFI213
+	.4byte	.LCFI211-.LCFI210
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -23946,17 +22734,15 @@ check_vpc_table:
 	.4byte	.LEFDE130-.LASFDE130
 .LASFDE130:
 	.4byte	.Lframe0
-	.4byte	.LFB267
-	.4byte	.LFE267-.LFB267
+	.4byte	.LFB277
+	.4byte	.LFE277-.LFB277
 	.byte	0x4
-	.4byte	.LCFI215-.LFB267
+	.4byte	.LCFI212-.LFB277
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI216-.LCFI215
+	.4byte	.LCFI213-.LCFI212
 	.byte	0x84
-	.uleb128 0x6
-	.byte	0x85
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -23965,7 +22751,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI217-.LCFI216
+	.4byte	.LCFI214-.LCFI213
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -23975,25 +22761,23 @@ check_vpc_table:
 	.4byte	.LEFDE132-.LASFDE132
 .LASFDE132:
 	.4byte	.Lframe0
-	.4byte	.LFB146
-	.4byte	.LFE146-.LFB146
+	.4byte	.LFB156
+	.4byte	.LFE156-.LFB156
 	.byte	0x4
-	.4byte	.LCFI218-.LFB146
+	.4byte	.LCFI215-.LFB156
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI219-.LCFI218
+	.4byte	.LCFI216-.LCFI215
 	.byte	0x84
-	.uleb128 0xa
-	.byte	0x85
 	.uleb128 0x9
-	.byte	0x86
+	.byte	0x85
 	.uleb128 0x8
-	.byte	0x87
+	.byte	0x86
 	.uleb128 0x7
-	.byte	0x88
+	.byte	0x87
 	.uleb128 0x6
-	.byte	0x89
+	.byte	0x88
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -24002,7 +22786,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI220-.LCFI219
+	.4byte	.LCFI217-.LCFI216
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -24012,14 +22796,14 @@ check_vpc_table:
 	.4byte	.LEFDE134-.LASFDE134
 .LASFDE134:
 	.4byte	.Lframe0
-	.4byte	.LFB165
-	.4byte	.LFE165-.LFB165
+	.4byte	.LFB175
+	.4byte	.LFE175-.LFB175
 	.byte	0x4
-	.4byte	.LCFI221-.LFB165
+	.4byte	.LCFI218-.LFB175
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI222-.LCFI221
+	.4byte	.LCFI219-.LCFI218
 	.byte	0x84
 	.uleb128 0xa
 	.byte	0x85
@@ -24039,7 +22823,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI223-.LCFI222
+	.4byte	.LCFI220-.LCFI219
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -24049,25 +22833,23 @@ check_vpc_table:
 	.4byte	.LEFDE136-.LASFDE136
 .LASFDE136:
 	.4byte	.Lframe0
-	.4byte	.LFB193
-	.4byte	.LFE193-.LFB193
+	.4byte	.LFB203
+	.4byte	.LFE203-.LFB203
 	.byte	0x4
-	.4byte	.LCFI224-.LFB193
+	.4byte	.LCFI221-.LFB203
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI225-.LCFI224
+	.4byte	.LCFI222-.LCFI221
 	.byte	0x84
-	.uleb128 0xa
-	.byte	0x85
 	.uleb128 0x9
-	.byte	0x86
+	.byte	0x85
 	.uleb128 0x8
-	.byte	0x87
+	.byte	0x86
 	.uleb128 0x7
-	.byte	0x88
+	.byte	0x87
 	.uleb128 0x6
-	.byte	0x89
+	.byte	0x88
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -24076,7 +22858,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI226-.LCFI225
+	.4byte	.LCFI223-.LCFI222
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -24086,14 +22868,14 @@ check_vpc_table:
 	.4byte	.LEFDE138-.LASFDE138
 .LASFDE138:
 	.4byte	.Lframe0
-	.4byte	.LFB194
-	.4byte	.LFE194-.LFB194
+	.4byte	.LFB204
+	.4byte	.LFE204-.LFB204
 	.byte	0x4
-	.4byte	.LCFI227-.LFB194
+	.4byte	.LCFI224-.LFB204
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI228-.LCFI227
+	.4byte	.LCFI225-.LCFI224
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -24115,18 +22897,18 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI229-.LCFI228
+	.4byte	.LCFI226-.LCFI225
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI230-.LCFI229
+	.4byte	.LCFI227-.LCFI226
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI231-.LCFI230
+	.4byte	.LCFI228-.LCFI227
 	.byte	0xb
 	.align	2
 .LEFDE138:
@@ -24134,14 +22916,14 @@ check_vpc_table:
 	.4byte	.LEFDE140-.LASFDE140
 .LASFDE140:
 	.4byte	.Lframe0
-	.4byte	.LFB197
-	.4byte	.LFE197-.LFB197
+	.4byte	.LFB207
+	.4byte	.LFE207-.LFB207
 	.byte	0x4
-	.4byte	.LCFI232-.LFB197
+	.4byte	.LCFI229-.LFB207
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI233-.LCFI232
+	.4byte	.LCFI230-.LCFI229
 	.byte	0x84
 	.uleb128 0x8
 	.byte	0x85
@@ -24157,7 +22939,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI234-.LCFI233
+	.4byte	.LCFI231-.LCFI230
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -24167,16 +22949,14 @@ check_vpc_table:
 	.4byte	.LEFDE142-.LASFDE142
 .LASFDE142:
 	.4byte	.Lframe0
-	.4byte	.LFB198
-	.4byte	.LFE198-.LFB198
+	.4byte	.LFB208
+	.4byte	.LFE208-.LFB208
 	.byte	0x4
-	.4byte	.LCFI235-.LFB198
+	.4byte	.LCFI232-.LFB208
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI236-.LCFI235
-	.byte	0x83
-	.uleb128 0xc
+	.4byte	.LCFI233-.LCFI232
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -24198,7 +22978,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI237-.LCFI236
+	.4byte	.LCFI234-.LCFI233
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -24208,14 +22988,14 @@ check_vpc_table:
 	.4byte	.LEFDE144-.LASFDE144
 .LASFDE144:
 	.4byte	.Lframe0
-	.4byte	.LFB196
-	.4byte	.LFE196-.LFB196
+	.4byte	.LFB206
+	.4byte	.LFE206-.LFB206
 	.byte	0x4
-	.4byte	.LCFI238-.LFB196
+	.4byte	.LCFI235-.LFB206
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI239-.LCFI238
+	.4byte	.LCFI236-.LCFI235
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -24237,18 +23017,18 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI240-.LCFI239
+	.4byte	.LCFI237-.LCFI236
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI241-.LCFI240
+	.4byte	.LCFI238-.LCFI237
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI242-.LCFI241
+	.4byte	.LCFI239-.LCFI238
 	.byte	0xb
 	.align	2
 .LEFDE144:
@@ -24256,14 +23036,14 @@ check_vpc_table:
 	.4byte	.LEFDE146-.LASFDE146
 .LASFDE146:
 	.4byte	.Lframe0
-	.4byte	.LFB199
-	.4byte	.LFE199-.LFB199
+	.4byte	.LFB209
+	.4byte	.LFE209-.LFB209
 	.byte	0x4
-	.4byte	.LCFI243-.LFB199
+	.4byte	.LCFI240-.LFB209
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI244-.LCFI243
+	.4byte	.LCFI241-.LCFI240
 	.byte	0x84
 	.uleb128 0x6
 	.byte	0x85
@@ -24275,7 +23055,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI245-.LCFI244
+	.4byte	.LCFI242-.LCFI241
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -24285,16 +23065,14 @@ check_vpc_table:
 	.4byte	.LEFDE148-.LASFDE148
 .LASFDE148:
 	.4byte	.Lframe0
-	.4byte	.LFB202
-	.4byte	.LFE202-.LFB202
+	.4byte	.LFB212
+	.4byte	.LFE212-.LFB212
 	.byte	0x4
-	.4byte	.LCFI246-.LFB202
+	.4byte	.LCFI243-.LFB212
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI247-.LCFI246
-	.byte	0x83
-	.uleb128 0xc
+	.4byte	.LCFI244-.LCFI243
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -24316,7 +23094,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI248-.LCFI247
+	.4byte	.LCFI245-.LCFI244
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -24326,14 +23104,14 @@ check_vpc_table:
 	.4byte	.LEFDE150-.LASFDE150
 .LASFDE150:
 	.4byte	.Lframe0
-	.4byte	.LFB220
-	.4byte	.LFE220-.LFB220
+	.4byte	.LFB230
+	.4byte	.LFE230-.LFB230
 	.byte	0x4
-	.4byte	.LCFI249-.LFB220
+	.4byte	.LCFI246-.LFB230
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI250-.LCFI249
+	.4byte	.LCFI247-.LCFI246
 	.byte	0x84
 	.uleb128 0x9
 	.byte	0x85
@@ -24351,29 +23129,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI251-.LCFI250
+	.4byte	.LCFI248-.LCFI247
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
-	.byte	0x4
-	.4byte	.LCFI252-.LCFI251
-	.byte	0xc
-	.uleb128 0xd
-	.uleb128 0x24
 	.align	2
 .LEFDE150:
 .LSFDE152:
 	.4byte	.LEFDE152-.LASFDE152
 .LASFDE152:
 	.4byte	.Lframe0
-	.4byte	.LFB231
-	.4byte	.LFE231-.LFB231
+	.4byte	.LFB241
+	.4byte	.LFE241-.LFB241
 	.byte	0x4
-	.4byte	.LCFI253-.LFB231
+	.4byte	.LCFI249-.LFB241
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI254-.LCFI253
+	.4byte	.LCFI250-.LCFI249
 	.byte	0x84
 	.uleb128 0x8
 	.byte	0x85
@@ -24389,18 +23162,18 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI255-.LCFI254
+	.4byte	.LCFI251-.LCFI250
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI256-.LCFI255
+	.4byte	.LCFI252-.LCFI251
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x20
 	.byte	0x4
-	.4byte	.LCFI257-.LCFI256
+	.4byte	.LCFI253-.LCFI252
 	.byte	0xb
 	.align	2
 .LEFDE152:
@@ -24408,14 +23181,14 @@ check_vpc_table:
 	.4byte	.LEFDE154-.LASFDE154
 .LASFDE154:
 	.4byte	.Lframe0
-	.4byte	.LFB258
-	.4byte	.LFE258-.LFB258
+	.4byte	.LFB268
+	.4byte	.LFE268-.LFB268
 	.byte	0x4
-	.4byte	.LCFI258-.LFB258
+	.4byte	.LCFI254-.LFB268
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI259-.LCFI258
+	.4byte	.LCFI255-.LCFI254
 	.byte	0x84
 	.uleb128 0x6
 	.byte	0x85
@@ -24427,18 +23200,18 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI260-.LCFI259
+	.4byte	.LCFI256-.LCFI255
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI261-.LCFI260
+	.4byte	.LCFI257-.LCFI256
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x18
 	.byte	0x4
-	.4byte	.LCFI262-.LCFI261
+	.4byte	.LCFI258-.LCFI257
 	.byte	0xb
 	.align	2
 .LEFDE154:
@@ -24446,14 +23219,14 @@ check_vpc_table:
 	.4byte	.LEFDE156-.LASFDE156
 .LASFDE156:
 	.4byte	.Lframe0
-	.4byte	.LFB230
-	.4byte	.LFE230-.LFB230
+	.4byte	.LFB240
+	.4byte	.LFE240-.LFB240
 	.byte	0x4
-	.4byte	.LCFI263-.LFB230
+	.4byte	.LCFI259-.LFB240
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI264-.LCFI263
+	.4byte	.LCFI260-.LCFI259
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -24475,40 +23248,29 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI265-.LCFI264
+	.4byte	.LCFI261-.LCFI260
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
-	.byte	0x4
-	.4byte	.LCFI266-.LCFI265
-	.byte	0xa
-	.byte	0xc
-	.uleb128 0xd
-	.uleb128 0x2c
-	.byte	0x4
-	.4byte	.LCFI267-.LCFI266
-	.byte	0xb
 	.align	2
 .LEFDE156:
 .LSFDE158:
 	.4byte	.LEFDE158-.LASFDE158
 .LASFDE158:
 	.4byte	.Lframe0
-	.4byte	.LFB207
-	.4byte	.LFE207-.LFB207
+	.4byte	.LFB217
+	.4byte	.LFE217-.LFB217
 	.byte	0x4
-	.4byte	.LCFI268-.LFB207
+	.4byte	.LCFI262-.LFB217
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI269-.LCFI268
+	.4byte	.LCFI263-.LCFI262
 	.byte	0x84
-	.uleb128 0x8
-	.byte	0x85
 	.uleb128 0x7
-	.byte	0x86
+	.byte	0x85
 	.uleb128 0x6
-	.byte	0x87
+	.byte	0x86
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -24517,7 +23279,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI270-.LCFI269
+	.4byte	.LCFI264-.LCFI263
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -24527,14 +23289,14 @@ check_vpc_table:
 	.4byte	.LEFDE160-.LASFDE160
 .LASFDE160:
 	.4byte	.Lframe0
-	.4byte	.LFB210
-	.4byte	.LFE210-.LFB210
+	.4byte	.LFB220
+	.4byte	.LFE220-.LFB220
 	.byte	0x4
-	.4byte	.LCFI271-.LFB210
+	.4byte	.LCFI265-.LFB220
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI272-.LCFI271
+	.4byte	.LCFI266-.LCFI265
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -24556,18 +23318,18 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI273-.LCFI272
+	.4byte	.LCFI267-.LCFI266
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI274-.LCFI273
+	.4byte	.LCFI268-.LCFI267
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI275-.LCFI274
+	.4byte	.LCFI269-.LCFI268
 	.byte	0xb
 	.align	2
 .LEFDE160:
@@ -24575,14 +23337,14 @@ check_vpc_table:
 	.4byte	.LEFDE162-.LASFDE162
 .LASFDE162:
 	.4byte	.Lframe0
-	.4byte	.LFB215
-	.4byte	.LFE215-.LFB215
+	.4byte	.LFB225
+	.4byte	.LFE225-.LFB225
 	.byte	0x4
-	.4byte	.LCFI276-.LFB215
+	.4byte	.LCFI270-.LFB225
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI277-.LCFI276
+	.4byte	.LCFI271-.LCFI270
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -24604,18 +23366,18 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI278-.LCFI277
+	.4byte	.LCFI272-.LCFI271
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI279-.LCFI278
+	.4byte	.LCFI273-.LCFI272
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI280-.LCFI279
+	.4byte	.LCFI274-.LCFI273
 	.byte	0xb
 	.align	2
 .LEFDE162:
@@ -24623,14 +23385,14 @@ check_vpc_table:
 	.4byte	.LEFDE164-.LASFDE164
 .LASFDE164:
 	.4byte	.Lframe0
-	.4byte	.LFB216
-	.4byte	.LFE216-.LFB216
+	.4byte	.LFB226
+	.4byte	.LFE226-.LFB226
 	.byte	0x4
-	.4byte	.LCFI281-.LFB216
+	.4byte	.LCFI275-.LFB226
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI282-.LCFI281
+	.4byte	.LCFI276-.LCFI275
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -24638,7 +23400,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI283-.LCFI282
+	.4byte	.LCFI277-.LCFI276
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -24648,21 +23410,19 @@ check_vpc_table:
 	.4byte	.LEFDE166-.LASFDE166
 .LASFDE166:
 	.4byte	.Lframe0
-	.4byte	.LFB217
-	.4byte	.LFE217-.LFB217
+	.4byte	.LFB227
+	.4byte	.LFE227-.LFB227
 	.byte	0x4
-	.4byte	.LCFI284-.LFB217
+	.4byte	.LCFI278-.LFB227
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI285-.LCFI284
+	.4byte	.LCFI279-.LCFI278
 	.byte	0x84
-	.uleb128 0x8
-	.byte	0x85
 	.uleb128 0x7
-	.byte	0x86
+	.byte	0x85
 	.uleb128 0x6
-	.byte	0x87
+	.byte	0x86
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -24671,7 +23431,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI286-.LCFI285
+	.4byte	.LCFI280-.LCFI279
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -24681,14 +23441,14 @@ check_vpc_table:
 	.4byte	.LEFDE168-.LASFDE168
 .LASFDE168:
 	.4byte	.Lframe0
-	.4byte	.LFB218
-	.4byte	.LFE218-.LFB218
+	.4byte	.LFB228
+	.4byte	.LFE228-.LFB228
 	.byte	0x4
-	.4byte	.LCFI287-.LFB218
+	.4byte	.LCFI281-.LFB228
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI288-.LCFI287
+	.4byte	.LCFI282-.LCFI281
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -24696,7 +23456,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI289-.LCFI288
+	.4byte	.LCFI283-.LCFI282
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -24706,14 +23466,14 @@ check_vpc_table:
 	.4byte	.LEFDE170-.LASFDE170
 .LASFDE170:
 	.4byte	.Lframe0
-	.4byte	.LFB147
-	.4byte	.LFE147-.LFB147
+	.4byte	.LFB157
+	.4byte	.LFE157-.LFB157
 	.byte	0x4
-	.4byte	.LCFI290-.LFB147
+	.4byte	.LCFI284-.LFB157
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI291-.LCFI290
+	.4byte	.LCFI285-.LCFI284
 	.byte	0x84
 	.uleb128 0x6
 	.byte	0x85
@@ -24725,7 +23485,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI292-.LCFI291
+	.4byte	.LCFI286-.LCFI285
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -24735,14 +23495,14 @@ check_vpc_table:
 	.4byte	.LEFDE172-.LASFDE172
 .LASFDE172:
 	.4byte	.Lframe0
-	.4byte	.LFB225
-	.4byte	.LFE225-.LFB225
+	.4byte	.LFB235
+	.4byte	.LFE235-.LFB235
 	.byte	0x4
-	.4byte	.LCFI293-.LFB225
+	.4byte	.LCFI287-.LFB235
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI294-.LCFI293
+	.4byte	.LCFI288-.LCFI287
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -24764,12 +23524,12 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI295-.LCFI294
+	.4byte	.LCFI289-.LCFI288
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI296-.LCFI295
+	.4byte	.LCFI290-.LCFI289
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
@@ -24779,17 +23539,15 @@ check_vpc_table:
 	.4byte	.LEFDE174-.LASFDE174
 .LASFDE174:
 	.4byte	.Lframe0
-	.4byte	.LFB249
-	.4byte	.LFE249-.LFB249
+	.4byte	.LFB259
+	.4byte	.LFE259-.LFB259
 	.byte	0x4
-	.4byte	.LCFI297-.LFB249
+	.4byte	.LCFI291-.LFB259
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI298-.LCFI297
+	.4byte	.LCFI292-.LCFI291
 	.byte	0x84
-	.uleb128 0x6
-	.byte	0x85
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -24798,7 +23556,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI299-.LCFI298
+	.4byte	.LCFI293-.LCFI292
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -24808,14 +23566,14 @@ check_vpc_table:
 	.4byte	.LEFDE176-.LASFDE176
 .LASFDE176:
 	.4byte	.Lframe0
-	.4byte	.LFB250
-	.4byte	.LFE250-.LFB250
+	.4byte	.LFB260
+	.4byte	.LFE260-.LFB260
 	.byte	0x4
-	.4byte	.LCFI300-.LFB250
+	.4byte	.LCFI294-.LFB260
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI301-.LCFI300
+	.4byte	.LCFI295-.LCFI294
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -24837,12 +23595,12 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI302-.LCFI301
+	.4byte	.LCFI296-.LCFI295
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI303-.LCFI302
+	.4byte	.LCFI297-.LCFI296
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
@@ -24852,14 +23610,14 @@ check_vpc_table:
 	.4byte	.LEFDE178-.LASFDE178
 .LASFDE178:
 	.4byte	.Lframe0
-	.4byte	.LFB268
-	.4byte	.LFE268-.LFB268
+	.4byte	.LFB278
+	.4byte	.LFE278-.LFB278
 	.byte	0x4
-	.4byte	.LCFI304-.LFB268
+	.4byte	.LCFI298-.LFB278
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI305-.LCFI304
+	.4byte	.LCFI299-.LCFI298
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -24867,7 +23625,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI306-.LCFI305
+	.4byte	.LCFI300-.LCFI299
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -24877,14 +23635,14 @@ check_vpc_table:
 	.4byte	.LEFDE180-.LASFDE180
 .LASFDE180:
 	.4byte	.Lframe0
-	.4byte	.LFB166
-	.4byte	.LFE166-.LFB166
+	.4byte	.LFB176
+	.4byte	.LFE176-.LFB176
 	.byte	0x4
-	.4byte	.LCFI307-.LFB166
+	.4byte	.LCFI301-.LFB176
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI308-.LCFI307
+	.4byte	.LCFI302-.LCFI301
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -24906,29 +23664,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI309-.LCFI308
+	.4byte	.LCFI303-.LCFI302
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
-	.byte	0x4
-	.4byte	.LCFI310-.LCFI309
-	.byte	0xc
-	.uleb128 0xd
-	.uleb128 0x2c
 	.align	2
 .LEFDE180:
 .LSFDE182:
 	.4byte	.LEFDE182-.LASFDE182
 .LASFDE182:
 	.4byte	.Lframe0
-	.4byte	.LFB238
-	.4byte	.LFE238-.LFB238
+	.4byte	.LFB248
+	.4byte	.LFE248-.LFB248
 	.byte	0x4
-	.4byte	.LCFI311-.LFB238
+	.4byte	.LCFI304-.LFB248
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI312-.LCFI311
+	.4byte	.LCFI305-.LCFI304
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -24950,12 +23703,12 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI313-.LCFI312
+	.4byte	.LCFI306-.LCFI305
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI314-.LCFI313
+	.4byte	.LCFI307-.LCFI306
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
@@ -24965,14 +23718,14 @@ check_vpc_table:
 	.4byte	.LEFDE184-.LASFDE184
 .LASFDE184:
 	.4byte	.Lframe0
-	.4byte	.LFB257
-	.4byte	.LFE257-.LFB257
+	.4byte	.LFB267
+	.4byte	.LFE267-.LFB267
 	.byte	0x4
-	.4byte	.LCFI315-.LFB257
+	.4byte	.LCFI308-.LFB267
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI316-.LCFI315
+	.4byte	.LCFI309-.LCFI308
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -24994,18 +23747,18 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI317-.LCFI316
+	.4byte	.LCFI310-.LCFI309
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI318-.LCFI317
+	.4byte	.LCFI311-.LCFI310
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI319-.LCFI318
+	.4byte	.LCFI312-.LCFI311
 	.byte	0xb
 	.align	2
 .LEFDE184:
@@ -25013,21 +23766,19 @@ check_vpc_table:
 	.4byte	.LEFDE186-.LASFDE186
 .LASFDE186:
 	.4byte	.Lframe0
-	.4byte	.LFB241
-	.4byte	.LFE241-.LFB241
+	.4byte	.LFB251
+	.4byte	.LFE251-.LFB251
 	.byte	0x4
-	.4byte	.LCFI320-.LFB241
+	.4byte	.LCFI313-.LFB251
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI321-.LCFI320
+	.4byte	.LCFI314-.LCFI313
 	.byte	0x84
-	.uleb128 0x8
-	.byte	0x85
 	.uleb128 0x7
-	.byte	0x86
+	.byte	0x85
 	.uleb128 0x6
-	.byte	0x87
+	.byte	0x86
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -25036,7 +23787,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI322-.LCFI321
+	.4byte	.LCFI315-.LCFI314
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25046,14 +23797,14 @@ check_vpc_table:
 	.4byte	.LEFDE188-.LASFDE188
 .LASFDE188:
 	.4byte	.Lframe0
-	.4byte	.LFB242
-	.4byte	.LFE242-.LFB242
+	.4byte	.LFB252
+	.4byte	.LFE252-.LFB252
 	.byte	0x4
-	.4byte	.LCFI323-.LFB242
+	.4byte	.LCFI316-.LFB252
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI324-.LCFI323
+	.4byte	.LCFI317-.LCFI316
 	.byte	0x84
 	.uleb128 0x8
 	.byte	0x85
@@ -25069,7 +23820,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI325-.LCFI324
+	.4byte	.LCFI318-.LCFI317
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25079,14 +23830,14 @@ check_vpc_table:
 	.4byte	.LEFDE190-.LASFDE190
 .LASFDE190:
 	.4byte	.Lframe0
-	.4byte	.LFB208
-	.4byte	.LFE208-.LFB208
+	.4byte	.LFB218
+	.4byte	.LFE218-.LFB218
 	.byte	0x4
-	.4byte	.LCFI326-.LFB208
+	.4byte	.LCFI319-.LFB218
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI327-.LCFI326
+	.4byte	.LCFI320-.LCFI319
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -25108,18 +23859,18 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI328-.LCFI327
+	.4byte	.LCFI321-.LCFI320
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI329-.LCFI328
+	.4byte	.LCFI322-.LCFI321
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI330-.LCFI329
+	.4byte	.LCFI323-.LCFI322
 	.byte	0xb
 	.align	2
 .LEFDE190:
@@ -25127,21 +23878,19 @@ check_vpc_table:
 	.4byte	.LEFDE192-.LASFDE192
 .LASFDE192:
 	.4byte	.Lframe0
-	.4byte	.LFB201
-	.4byte	.LFE201-.LFB201
+	.4byte	.LFB211
+	.4byte	.LFE211-.LFB211
 	.byte	0x4
-	.4byte	.LCFI331-.LFB201
+	.4byte	.LCFI324-.LFB211
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI332-.LCFI331
+	.4byte	.LCFI325-.LCFI324
 	.byte	0x84
-	.uleb128 0x8
-	.byte	0x85
 	.uleb128 0x7
-	.byte	0x86
+	.byte	0x85
 	.uleb128 0x6
-	.byte	0x87
+	.byte	0x86
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -25150,7 +23899,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI333-.LCFI332
+	.4byte	.LCFI326-.LCFI325
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25160,14 +23909,14 @@ check_vpc_table:
 	.4byte	.LEFDE194-.LASFDE194
 .LASFDE194:
 	.4byte	.Lframe0
-	.4byte	.LFB221
-	.4byte	.LFE221-.LFB221
+	.4byte	.LFB231
+	.4byte	.LFE231-.LFB231
 	.byte	0x4
-	.4byte	.LCFI334-.LFB221
+	.4byte	.LCFI327-.LFB231
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI335-.LCFI334
+	.4byte	.LCFI328-.LCFI327
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -25189,18 +23938,18 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI336-.LCFI335
+	.4byte	.LCFI329-.LCFI328
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI337-.LCFI336
+	.4byte	.LCFI330-.LCFI329
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI338-.LCFI337
+	.4byte	.LCFI331-.LCFI330
 	.byte	0xb
 	.align	2
 .LEFDE194:
@@ -25208,21 +23957,23 @@ check_vpc_table:
 	.4byte	.LEFDE196-.LASFDE196
 .LASFDE196:
 	.4byte	.Lframe0
-	.4byte	.LFB228
-	.4byte	.LFE228-.LFB228
+	.4byte	.LFB238
+	.4byte	.LFE238-.LFB238
 	.byte	0x4
-	.4byte	.LCFI339-.LFB228
+	.4byte	.LCFI332-.LFB238
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI340-.LCFI339
+	.4byte	.LCFI333-.LCFI332
 	.byte	0x84
-	.uleb128 0x8
+	.uleb128 0x9
 	.byte	0x85
-	.uleb128 0x7
+	.uleb128 0x8
 	.byte	0x86
-	.uleb128 0x6
+	.uleb128 0x7
 	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -25231,18 +23982,18 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI341-.LCFI340
+	.4byte	.LCFI334-.LCFI333
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI342-.LCFI341
+	.4byte	.LCFI335-.LCFI334
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
-	.uleb128 0x20
+	.uleb128 0x24
 	.byte	0x4
-	.4byte	.LCFI343-.LCFI342
+	.4byte	.LCFI336-.LCFI335
 	.byte	0xb
 	.align	2
 .LEFDE196:
@@ -25250,14 +24001,14 @@ check_vpc_table:
 	.4byte	.LEFDE198-.LASFDE198
 .LASFDE198:
 	.4byte	.Lframe0
-	.4byte	.LFB169
-	.4byte	.LFE169-.LFB169
+	.4byte	.LFB179
+	.4byte	.LFE179-.LFB179
 	.byte	0x4
-	.4byte	.LCFI344-.LFB169
+	.4byte	.LCFI337-.LFB179
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI345-.LCFI344
+	.4byte	.LCFI338-.LCFI337
 	.byte	0x84
 	.uleb128 0x8
 	.byte	0x85
@@ -25273,7 +24024,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI346-.LCFI345
+	.4byte	.LCFI339-.LCFI338
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25283,14 +24034,14 @@ check_vpc_table:
 	.4byte	.LEFDE200-.LASFDE200
 .LASFDE200:
 	.4byte	.Lframe0
-	.4byte	.LFB171
-	.4byte	.LFE171-.LFB171
+	.4byte	.LFB181
+	.4byte	.LFE181-.LFB181
 	.byte	0x4
-	.4byte	.LCFI347-.LFB171
+	.4byte	.LCFI340-.LFB181
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI348-.LCFI347
+	.4byte	.LCFI341-.LCFI340
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -25312,29 +24063,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI349-.LCFI348
+	.4byte	.LCFI342-.LCFI341
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
-	.byte	0x4
-	.4byte	.LCFI350-.LCFI349
-	.byte	0xc
-	.uleb128 0xd
-	.uleb128 0x2c
 	.align	2
 .LEFDE200:
 .LSFDE202:
 	.4byte	.LEFDE202-.LASFDE202
 .LASFDE202:
 	.4byte	.Lframe0
-	.4byte	.LFB203
-	.4byte	.LFE203-.LFB203
+	.4byte	.LFB213
+	.4byte	.LFE213-.LFB213
 	.byte	0x4
-	.4byte	.LCFI351-.LFB203
+	.4byte	.LCFI343-.LFB213
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI352-.LCFI351
+	.4byte	.LCFI344-.LCFI343
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -25356,18 +24102,18 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI353-.LCFI352
+	.4byte	.LCFI345-.LCFI344
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI354-.LCFI353
+	.4byte	.LCFI346-.LCFI345
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI355-.LCFI354
+	.4byte	.LCFI347-.LCFI346
 	.byte	0xb
 	.align	2
 .LEFDE202:
@@ -25375,14 +24121,14 @@ check_vpc_table:
 	.4byte	.LEFDE204-.LASFDE204
 .LASFDE204:
 	.4byte	.Lframe0
-	.4byte	.LFB226
-	.4byte	.LFE226-.LFB226
+	.4byte	.LFB236
+	.4byte	.LFE236-.LFB236
 	.byte	0x4
-	.4byte	.LCFI356-.LFB226
+	.4byte	.LCFI348-.LFB236
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI357-.LCFI356
+	.4byte	.LCFI349-.LCFI348
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -25390,7 +24136,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI358-.LCFI357
+	.4byte	.LCFI350-.LCFI349
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25400,14 +24146,14 @@ check_vpc_table:
 	.4byte	.LEFDE206-.LASFDE206
 .LASFDE206:
 	.4byte	.Lframe0
-	.4byte	.LFB205
-	.4byte	.LFE205-.LFB205
+	.4byte	.LFB215
+	.4byte	.LFE215-.LFB215
 	.byte	0x4
-	.4byte	.LCFI359-.LFB205
+	.4byte	.LCFI351-.LFB215
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI360-.LCFI359
+	.4byte	.LCFI352-.LCFI351
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -25415,7 +24161,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI361-.LCFI360
+	.4byte	.LCFI353-.LCFI352
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25425,14 +24171,14 @@ check_vpc_table:
 	.4byte	.LEFDE208-.LASFDE208
 .LASFDE208:
 	.4byte	.Lframe0
-	.4byte	.LFB204
-	.4byte	.LFE204-.LFB204
+	.4byte	.LFB214
+	.4byte	.LFE214-.LFB214
 	.byte	0x4
-	.4byte	.LCFI362-.LFB204
+	.4byte	.LCFI354-.LFB214
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI363-.LCFI362
+	.4byte	.LCFI355-.LCFI354
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -25454,18 +24200,18 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI364-.LCFI363
+	.4byte	.LCFI356-.LCFI355
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI365-.LCFI364
+	.4byte	.LCFI357-.LCFI356
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI366-.LCFI365
+	.4byte	.LCFI358-.LCFI357
 	.byte	0xb
 	.align	2
 .LEFDE208:
@@ -25473,14 +24219,14 @@ check_vpc_table:
 	.4byte	.LEFDE210-.LASFDE210
 .LASFDE210:
 	.4byte	.Lframe0
-	.4byte	.LFB211
-	.4byte	.LFE211-.LFB211
+	.4byte	.LFB221
+	.4byte	.LFE221-.LFB221
 	.byte	0x4
-	.4byte	.LCFI367-.LFB211
+	.4byte	.LCFI359-.LFB221
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI368-.LCFI367
+	.4byte	.LCFI360-.LCFI359
 	.byte	0x84
 	.uleb128 0x6
 	.byte	0x85
@@ -25492,7 +24238,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI369-.LCFI368
+	.4byte	.LCFI361-.LCFI360
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25502,14 +24248,14 @@ check_vpc_table:
 	.4byte	.LEFDE212-.LASFDE212
 .LASFDE212:
 	.4byte	.Lframe0
-	.4byte	.LFB227
-	.4byte	.LFE227-.LFB227
+	.4byte	.LFB237
+	.4byte	.LFE237-.LFB237
 	.byte	0x4
-	.4byte	.LCFI370-.LFB227
+	.4byte	.LCFI362-.LFB237
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI371-.LCFI370
+	.4byte	.LCFI363-.LCFI362
 	.byte	0x84
 	.uleb128 0x6
 	.byte	0x85
@@ -25521,7 +24267,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI372-.LCFI371
+	.4byte	.LCFI364-.LCFI363
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25531,16 +24277,14 @@ check_vpc_table:
 	.4byte	.LEFDE214-.LASFDE214
 .LASFDE214:
 	.4byte	.Lframe0
-	.4byte	.LFB209
-	.4byte	.LFE209-.LFB209
+	.4byte	.LFB219
+	.4byte	.LFE219-.LFB219
 	.byte	0x4
-	.4byte	.LCFI373-.LFB209
+	.4byte	.LCFI365-.LFB219
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI374-.LCFI373
-	.byte	0x83
-	.uleb128 0xc
+	.4byte	.LCFI366-.LCFI365
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -25562,7 +24306,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI375-.LCFI374
+	.4byte	.LCFI367-.LCFI366
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25572,25 +24316,27 @@ check_vpc_table:
 	.4byte	.LEFDE216-.LASFDE216
 .LASFDE216:
 	.4byte	.Lframe0
-	.4byte	.LFB229
-	.4byte	.LFE229-.LFB229
+	.4byte	.LFB239
+	.4byte	.LFE239-.LFB239
 	.byte	0x4
-	.4byte	.LCFI376-.LFB229
+	.4byte	.LCFI368-.LFB239
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI377-.LCFI376
+	.4byte	.LCFI369-.LCFI368
 	.byte	0x84
-	.uleb128 0xa
+	.uleb128 0xb
 	.byte	0x85
-	.uleb128 0x9
+	.uleb128 0xa
 	.byte	0x86
-	.uleb128 0x8
+	.uleb128 0x9
 	.byte	0x87
-	.uleb128 0x7
+	.uleb128 0x8
 	.byte	0x88
-	.uleb128 0x6
+	.uleb128 0x7
 	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -25599,33 +24345,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI378-.LCFI377
+	.4byte	.LCFI370-.LCFI369
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
-	.byte	0x4
-	.4byte	.LCFI379-.LCFI378
-	.byte	0xa
-	.byte	0xc
-	.uleb128 0xd
-	.uleb128 0x28
-	.byte	0x4
-	.4byte	.LCFI380-.LCFI379
-	.byte	0xb
 	.align	2
 .LEFDE216:
 .LSFDE218:
 	.4byte	.LEFDE218-.LASFDE218
 .LASFDE218:
 	.4byte	.Lframe0
-	.4byte	.LFB239
-	.4byte	.LFE239-.LFB239
+	.4byte	.LFB249
+	.4byte	.LFE249-.LFB249
 	.byte	0x4
-	.4byte	.LCFI381-.LFB239
+	.4byte	.LCFI371-.LFB249
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI382-.LCFI381
+	.4byte	.LCFI372-.LCFI371
 	.byte	0x84
 	.uleb128 0x8
 	.byte	0x85
@@ -25641,7 +24378,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI383-.LCFI382
+	.4byte	.LCFI373-.LCFI372
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25651,14 +24388,14 @@ check_vpc_table:
 	.4byte	.LEFDE220-.LASFDE220
 .LASFDE220:
 	.4byte	.Lframe0
-	.4byte	.LFB155
-	.4byte	.LFE155-.LFB155
+	.4byte	.LFB165
+	.4byte	.LFE165-.LFB165
 	.byte	0x4
-	.4byte	.LCFI384-.LFB155
+	.4byte	.LCFI374-.LFB165
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI385-.LCFI384
+	.4byte	.LCFI375-.LCFI374
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -25680,12 +24417,12 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI386-.LCFI385
+	.4byte	.LCFI376-.LCFI375
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI387-.LCFI386
+	.4byte	.LCFI377-.LCFI376
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
@@ -25695,17 +24432,15 @@ check_vpc_table:
 	.4byte	.LEFDE222-.LASFDE222
 .LASFDE222:
 	.4byte	.Lframe0
-	.4byte	.LFB156
-	.4byte	.LFE156-.LFB156
+	.4byte	.LFB166
+	.4byte	.LFE166-.LFB166
 	.byte	0x4
-	.4byte	.LCFI388-.LFB156
+	.4byte	.LCFI378-.LFB166
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI389-.LCFI388
+	.4byte	.LCFI379-.LCFI378
 	.byte	0x84
-	.uleb128 0x6
-	.byte	0x85
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -25714,7 +24449,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI390-.LCFI389
+	.4byte	.LCFI380-.LCFI379
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25724,14 +24459,14 @@ check_vpc_table:
 	.4byte	.LEFDE224-.LASFDE224
 .LASFDE224:
 	.4byte	.Lframe0
-	.4byte	.LFB152
-	.4byte	.LFE152-.LFB152
+	.4byte	.LFB162
+	.4byte	.LFE162-.LFB162
 	.byte	0x4
-	.4byte	.LCFI391-.LFB152
+	.4byte	.LCFI381-.LFB162
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI392-.LCFI391
+	.4byte	.LCFI382-.LCFI381
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -25739,7 +24474,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI393-.LCFI392
+	.4byte	.LCFI383-.LCFI382
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25749,14 +24484,14 @@ check_vpc_table:
 	.4byte	.LEFDE226-.LASFDE226
 .LASFDE226:
 	.4byte	.Lframe0
-	.4byte	.LFB153
-	.4byte	.LFE153-.LFB153
+	.4byte	.LFB163
+	.4byte	.LFE163-.LFB163
 	.byte	0x4
-	.4byte	.LCFI394-.LFB153
+	.4byte	.LCFI384-.LFB163
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI395-.LCFI394
+	.4byte	.LCFI385-.LCFI384
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -25764,7 +24499,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI396-.LCFI395
+	.4byte	.LCFI386-.LCFI385
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25774,14 +24509,14 @@ check_vpc_table:
 	.4byte	.LEFDE228-.LASFDE228
 .LASFDE228:
 	.4byte	.Lframe0
-	.4byte	.LFB158
-	.4byte	.LFE158-.LFB158
+	.4byte	.LFB168
+	.4byte	.LFE168-.LFB168
 	.byte	0x4
-	.4byte	.LCFI397-.LFB158
+	.4byte	.LCFI387-.LFB168
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI398-.LCFI397
+	.4byte	.LCFI388-.LCFI387
 	.byte	0x84
 	.uleb128 0x9
 	.byte	0x85
@@ -25799,18 +24534,18 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI399-.LCFI398
+	.4byte	.LCFI389-.LCFI388
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI400-.LCFI399
+	.4byte	.LCFI390-.LCFI389
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x24
 	.byte	0x4
-	.4byte	.LCFI401-.LCFI400
+	.4byte	.LCFI391-.LCFI390
 	.byte	0xb
 	.align	2
 .LEFDE228:
@@ -25818,14 +24553,14 @@ check_vpc_table:
 	.4byte	.LEFDE230-.LASFDE230
 .LASFDE230:
 	.4byte	.Lframe0
-	.4byte	.LFB248
-	.4byte	.LFE248-.LFB248
+	.4byte	.LFB258
+	.4byte	.LFE258-.LFB258
 	.byte	0x4
-	.4byte	.LCFI402-.LFB248
+	.4byte	.LCFI392-.LFB258
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI403-.LCFI402
+	.4byte	.LCFI393-.LCFI392
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -25847,33 +24582,24 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI404-.LCFI403
+	.4byte	.LCFI394-.LCFI393
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
-	.byte	0x4
-	.4byte	.LCFI405-.LCFI404
-	.byte	0xa
-	.byte	0xc
-	.uleb128 0xd
-	.uleb128 0x2c
-	.byte	0x4
-	.4byte	.LCFI406-.LCFI405
-	.byte	0xb
 	.align	2
 .LEFDE230:
 .LSFDE232:
 	.4byte	.LEFDE232-.LASFDE232
 .LASFDE232:
 	.4byte	.Lframe0
-	.4byte	.LFB251
-	.4byte	.LFE251-.LFB251
+	.4byte	.LFB261
+	.4byte	.LFE261-.LFB261
 	.byte	0x4
-	.4byte	.LCFI407-.LFB251
+	.4byte	.LCFI395-.LFB261
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI408-.LCFI407
+	.4byte	.LCFI396-.LCFI395
 	.byte	0x84
 	.uleb128 0x6
 	.byte	0x85
@@ -25885,7 +24611,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI409-.LCFI408
+	.4byte	.LCFI397-.LCFI396
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25895,21 +24621,19 @@ check_vpc_table:
 	.4byte	.LEFDE234-.LASFDE234
 .LASFDE234:
 	.4byte	.Lframe0
-	.4byte	.LFB223
-	.4byte	.LFE223-.LFB223
+	.4byte	.LFB233
+	.4byte	.LFE233-.LFB233
 	.byte	0x4
-	.4byte	.LCFI410-.LFB223
+	.4byte	.LCFI398-.LFB233
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI411-.LCFI410
+	.4byte	.LCFI399-.LCFI398
 	.byte	0x84
-	.uleb128 0x8
-	.byte	0x85
 	.uleb128 0x7
-	.byte	0x86
+	.byte	0x85
 	.uleb128 0x6
-	.byte	0x87
+	.byte	0x86
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -25918,7 +24642,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI412-.LCFI411
+	.4byte	.LCFI400-.LCFI399
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25928,21 +24652,19 @@ check_vpc_table:
 	.4byte	.LEFDE236-.LASFDE236
 .LASFDE236:
 	.4byte	.Lframe0
-	.4byte	.LFB253
-	.4byte	.LFE253-.LFB253
+	.4byte	.LFB263
+	.4byte	.LFE263-.LFB263
 	.byte	0x4
-	.4byte	.LCFI413-.LFB253
+	.4byte	.LCFI401-.LFB263
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI414-.LCFI413
+	.4byte	.LCFI402-.LCFI401
 	.byte	0x84
-	.uleb128 0x8
-	.byte	0x85
 	.uleb128 0x7
-	.byte	0x86
+	.byte	0x85
 	.uleb128 0x6
-	.byte	0x87
+	.byte	0x86
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -25951,7 +24673,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI415-.LCFI414
+	.4byte	.LCFI403-.LCFI402
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25961,14 +24683,14 @@ check_vpc_table:
 	.4byte	.LEFDE238-.LASFDE238
 .LASFDE238:
 	.4byte	.Lframe0
-	.4byte	.LFB252
-	.4byte	.LFE252-.LFB252
+	.4byte	.LFB262
+	.4byte	.LFE262-.LFB262
 	.byte	0x4
-	.4byte	.LCFI416-.LFB252
+	.4byte	.LCFI404-.LFB262
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI417-.LCFI416
+	.4byte	.LCFI405-.LCFI404
 	.byte	0x84
 	.uleb128 0x6
 	.byte	0x85
@@ -25980,7 +24702,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI418-.LCFI417
+	.4byte	.LCFI406-.LCFI405
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -25990,14 +24712,14 @@ check_vpc_table:
 	.4byte	.LEFDE240-.LASFDE240
 .LASFDE240:
 	.4byte	.Lframe0
-	.4byte	.LFB259
-	.4byte	.LFE259-.LFB259
+	.4byte	.LFB269
+	.4byte	.LFE269-.LFB269
 	.byte	0x4
-	.4byte	.LCFI419-.LFB259
+	.4byte	.LCFI407-.LFB269
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI420-.LCFI419
+	.4byte	.LCFI408-.LCFI407
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -26019,18 +24741,18 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI421-.LCFI420
+	.4byte	.LCFI409-.LCFI408
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI422-.LCFI421
+	.4byte	.LCFI410-.LCFI409
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI423-.LCFI422
+	.4byte	.LCFI411-.LCFI410
 	.byte	0xb
 	.align	2
 .LEFDE240:
@@ -26038,14 +24760,14 @@ check_vpc_table:
 	.4byte	.LEFDE242-.LASFDE242
 .LASFDE242:
 	.4byte	.Lframe0
-	.4byte	.LFB260
-	.4byte	.LFE260-.LFB260
+	.4byte	.LFB270
+	.4byte	.LFE270-.LFB270
 	.byte	0x4
-	.4byte	.LCFI424-.LFB260
+	.4byte	.LCFI412-.LFB270
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI425-.LCFI424
+	.4byte	.LCFI413-.LCFI412
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -26053,7 +24775,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI426-.LCFI425
+	.4byte	.LCFI414-.LCFI413
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -26063,14 +24785,14 @@ check_vpc_table:
 	.4byte	.LEFDE244-.LASFDE244
 .LASFDE244:
 	.4byte	.Lframe0
-	.4byte	.LFB154
-	.4byte	.LFE154-.LFB154
+	.4byte	.LFB164
+	.4byte	.LFE164-.LFB164
 	.byte	0x4
-	.4byte	.LCFI427-.LFB154
+	.4byte	.LCFI415-.LFB164
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI428-.LCFI427
+	.4byte	.LCFI416-.LCFI415
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -26092,18 +24814,18 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI429-.LCFI428
+	.4byte	.LCFI417-.LCFI416
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI430-.LCFI429
+	.4byte	.LCFI418-.LCFI417
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI431-.LCFI430
+	.4byte	.LCFI419-.LCFI418
 	.byte	0xb
 	.align	2
 .LEFDE244:
@@ -26111,14 +24833,14 @@ check_vpc_table:
 	.4byte	.LEFDE246-.LASFDE246
 .LASFDE246:
 	.4byte	.Lframe0
-	.4byte	.LFB159
-	.4byte	.LFE159-.LFB159
+	.4byte	.LFB169
+	.4byte	.LFE169-.LFB169
 	.byte	0x4
-	.4byte	.LCFI432-.LFB159
+	.4byte	.LCFI420-.LFB169
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI433-.LCFI432
+	.4byte	.LCFI421-.LCFI420
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -26126,7 +24848,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI434-.LCFI433
+	.4byte	.LCFI422-.LCFI421
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -26136,14 +24858,14 @@ check_vpc_table:
 	.4byte	.LEFDE248-.LASFDE248
 .LASFDE248:
 	.4byte	.Lframe0
-	.4byte	.LFB157
-	.4byte	.LFE157-.LFB157
+	.4byte	.LFB167
+	.4byte	.LFE167-.LFB167
 	.byte	0x4
-	.4byte	.LCFI435-.LFB157
+	.4byte	.LCFI423-.LFB167
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI436-.LCFI435
+	.4byte	.LCFI424-.LCFI423
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -26165,18 +24887,18 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI437-.LCFI436
+	.4byte	.LCFI425-.LCFI424
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
 	.byte	0x4
-	.4byte	.LCFI438-.LCFI437
+	.4byte	.LCFI426-.LCFI425
 	.byte	0xa
 	.byte	0xc
 	.uleb128 0xd
 	.uleb128 0x2c
 	.byte	0x4
-	.4byte	.LCFI439-.LCFI438
+	.4byte	.LCFI427-.LCFI426
 	.byte	0xb
 	.align	2
 .LEFDE248:
@@ -26184,14 +24906,14 @@ check_vpc_table:
 	.4byte	.LEFDE250-.LASFDE250
 .LASFDE250:
 	.4byte	.Lframe0
-	.4byte	.LFB160
-	.4byte	.LFE160-.LFB160
+	.4byte	.LFB170
+	.4byte	.LFE170-.LFB170
 	.byte	0x4
-	.4byte	.LCFI440-.LFB160
+	.4byte	.LCFI428-.LFB170
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI441-.LCFI440
+	.4byte	.LCFI429-.LCFI428
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -26199,7 +24921,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI442-.LCFI441
+	.4byte	.LCFI430-.LCFI429
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -26209,25 +24931,23 @@ check_vpc_table:
 	.4byte	.LEFDE252-.LASFDE252
 .LASFDE252:
 	.4byte	.Lframe0
-	.4byte	.LFB214
-	.4byte	.LFE214-.LFB214
+	.4byte	.LFB224
+	.4byte	.LFE224-.LFB224
 	.byte	0x4
-	.4byte	.LCFI443-.LFB214
+	.4byte	.LCFI431-.LFB224
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI444-.LCFI443
+	.4byte	.LCFI432-.LCFI431
 	.byte	0x84
-	.uleb128 0xa
-	.byte	0x85
 	.uleb128 0x9
-	.byte	0x86
+	.byte	0x85
 	.uleb128 0x8
-	.byte	0x87
+	.byte	0x86
 	.uleb128 0x7
-	.byte	0x88
+	.byte	0x87
 	.uleb128 0x6
-	.byte	0x89
+	.byte	0x88
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -26236,7 +24956,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI445-.LCFI444
+	.4byte	.LCFI433-.LCFI432
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -26246,25 +24966,23 @@ check_vpc_table:
 	.4byte	.LEFDE254-.LASFDE254
 .LASFDE254:
 	.4byte	.Lframe0
-	.4byte	.LFB232
-	.4byte	.LFE232-.LFB232
+	.4byte	.LFB242
+	.4byte	.LFE242-.LFB242
 	.byte	0x4
-	.4byte	.LCFI446-.LFB232
+	.4byte	.LCFI434-.LFB242
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI447-.LCFI446
+	.4byte	.LCFI435-.LCFI434
 	.byte	0x84
-	.uleb128 0xa
-	.byte	0x85
 	.uleb128 0x9
-	.byte	0x86
+	.byte	0x85
 	.uleb128 0x8
-	.byte	0x87
+	.byte	0x86
 	.uleb128 0x7
-	.byte	0x88
+	.byte	0x87
 	.uleb128 0x6
-	.byte	0x89
+	.byte	0x88
 	.uleb128 0x5
 	.byte	0x8b
 	.uleb128 0x4
@@ -26273,7 +24991,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI448-.LCFI447
+	.4byte	.LCFI436-.LCFI435
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -26283,16 +25001,14 @@ check_vpc_table:
 	.4byte	.LEFDE256-.LASFDE256
 .LASFDE256:
 	.4byte	.Lframe0
-	.4byte	.LFB150
-	.4byte	.LFE150-.LFB150
+	.4byte	.LFB160
+	.4byte	.LFE160-.LFB160
 	.byte	0x4
-	.4byte	.LCFI449-.LFB150
+	.4byte	.LCFI437-.LFB160
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI450-.LCFI449
-	.byte	0x83
-	.uleb128 0xc
+	.4byte	.LCFI438-.LCFI437
 	.byte	0x84
 	.uleb128 0xb
 	.byte	0x85
@@ -26314,7 +25030,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI451-.LCFI450
+	.4byte	.LCFI439-.LCFI438
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -26324,14 +25040,14 @@ check_vpc_table:
 	.4byte	.LEFDE258-.LASFDE258
 .LASFDE258:
 	.4byte	.Lframe0
-	.4byte	.LFB151
-	.4byte	.LFE151-.LFB151
+	.4byte	.LFB161
+	.4byte	.LFE161-.LFB161
 	.byte	0x4
-	.4byte	.LCFI452-.LFB151
+	.4byte	.LCFI440-.LFB161
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI453-.LCFI452
+	.4byte	.LCFI441-.LCFI440
 	.byte	0x84
 	.uleb128 0x6
 	.byte	0x85
@@ -26343,7 +25059,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI454-.LCFI453
+	.4byte	.LCFI442-.LCFI441
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -26353,14 +25069,14 @@ check_vpc_table:
 	.4byte	.LEFDE260-.LASFDE260
 .LASFDE260:
 	.4byte	.Lframe0
-	.4byte	.LFB269
-	.4byte	.LFE269-.LFB269
+	.4byte	.LFB279
+	.4byte	.LFE279-.LFB279
 	.byte	0x4
-	.4byte	.LCFI455-.LFB269
+	.4byte	.LCFI443-.LFB279
 	.byte	0xd
 	.uleb128 0xc
 	.byte	0x4
-	.4byte	.LCFI456-.LCFI455
+	.4byte	.LCFI444-.LCFI443
 	.byte	0x8b
 	.uleb128 0x4
 	.byte	0x8d
@@ -26368,7 +25084,7 @@ check_vpc_table:
 	.byte	0x8e
 	.uleb128 0x2
 	.byte	0x4
-	.4byte	.LCFI457-.LCFI456
+	.4byte	.LCFI445-.LCFI444
 	.byte	0xc
 	.uleb128 0xb
 	.uleb128 0x4
@@ -26380,3143 +25096,3137 @@ check_vpc_table:
 	.file 7 "./include/uapi/asm-generic/posix_types.h"
 	.file 8 "include/linux/types.h"
 	.file 9 "./arch/arm/include/asm/hwcap.h"
-	.file 10 "./arch/arm/include/asm/barrier.h"
-	.file 11 "include/linux/init.h"
-	.file 12 "include/linux/printk.h"
-	.file 13 "include/linux/kernel.h"
-	.file 14 "drivers/rkflash/rksftl/sftl_inc.h"
-	.file 15 "drivers/rkflash/rksftl/flash_com.h"
-	.file 16 "drivers/rkflash/rksftl/sftl_struct.h"
-	.file 17 "drivers/rkflash/rksftl/sftl_global.h"
-	.file 18 "include/linux/string.h"
-	.file 19 "./arch/arm/include/asm/string.h"
-	.file 20 "drivers/rkflash/rksftl/typedef.h"
-	.file 21 "<built-in>"
+	.file 10 "include/linux/init.h"
+	.file 11 "include/linux/printk.h"
+	.file 12 "include/linux/kernel.h"
+	.file 13 "drivers/rkflash/rksftl/sftl_inc.h"
+	.file 14 "drivers/rkflash/rksftl/flash_com.h"
+	.file 15 "drivers/rkflash/rksftl/sftl_struct.h"
+	.file 16 "drivers/rkflash/rksftl/sftl_global.h"
+	.file 17 "include/linux/string.h"
+	.file 18 "./arch/arm/include/asm/string.h"
+	.file 19 "drivers/rkflash/rksftl/typedef.h"
+	.file 20 "<built-in>"
 	.section	.debug_info,"",%progbits
 .Ldebug_info0:
-	.4byte	0x676b
+	.4byte	0x6832
 	.2byte	0x4
 	.4byte	.Ldebug_abbrev0
 	.byte	0x4
 	.uleb128 0x1
-	.4byte	.LASF665
+	.4byte	.LASF663
 	.byte	0x1
-	.4byte	.LASF666
-	.4byte	.LASF667
+	.4byte	.LASF664
+	.4byte	.LASF665
 	.4byte	.Ltext0
 	.4byte	.Letext0-.Ltext0
 	.4byte	.Ldebug_line0
 	.uleb128 0x2
 	.byte	0x4
-	.uleb128 0x3
-	.byte	0x4
 	.byte	0x7
 	.4byte	.LASF0
-	.uleb128 0x3
+	.uleb128 0x2
 	.byte	0x4
 	.byte	0x7
 	.4byte	.LASF1
-	.uleb128 0x3
+	.uleb128 0x2
 	.byte	0x1
 	.byte	0x8
 	.4byte	.LASF2
-	.uleb128 0x4
-	.4byte	0x35
 	.uleb128 0x3
+	.4byte	0x33
+	.uleb128 0x2
 	.byte	0x4
 	.byte	0x7
 	.4byte	.LASF3
-	.uleb128 0x3
+	.uleb128 0x2
 	.byte	0x1
 	.byte	0x6
 	.4byte	.LASF4
-	.uleb128 0x3
+	.uleb128 0x2
 	.byte	0x1
 	.byte	0x8
 	.4byte	.LASF5
-	.uleb128 0x3
+	.uleb128 0x2
 	.byte	0x2
 	.byte	0x5
 	.4byte	.LASF6
-	.uleb128 0x3
+	.uleb128 0x2
 	.byte	0x2
 	.byte	0x7
 	.4byte	.LASF7
-	.uleb128 0x5
+	.uleb128 0x4
 	.byte	0x4
 	.byte	0x5
 	.ascii	"int\000"
-	.uleb128 0x3
+	.uleb128 0x2
 	.byte	0x8
 	.byte	0x5
 	.4byte	.LASF8
-	.uleb128 0x3
+	.uleb128 0x2
 	.byte	0x8
 	.byte	0x7
 	.4byte	.LASF9
-	.uleb128 0x6
+	.uleb128 0x5
 	.ascii	"u8\000"
 	.byte	0x6
 	.byte	0x10
-	.4byte	0x4f
-	.uleb128 0x6
+	.4byte	0x4d
+	.uleb128 0x5
 	.ascii	"u16\000"
 	.byte	0x6
 	.byte	0x13
-	.4byte	0x5d
-	.uleb128 0x6
+	.4byte	0x5b
+	.uleb128 0x5
 	.ascii	"s32\000"
 	.byte	0x6
 	.byte	0x15
-	.4byte	0x64
-	.uleb128 0x6
+	.4byte	0x62
+	.uleb128 0x5
 	.ascii	"u32\000"
 	.byte	0x6
 	.byte	0x16
-	.4byte	0x41
-	.uleb128 0x3
+	.4byte	0x3f
+	.uleb128 0x2
 	.byte	0x4
 	.byte	0x5
 	.4byte	.LASF10
-	.uleb128 0x7
+	.uleb128 0x6
 	.4byte	.LASF11
 	.byte	0x7
 	.byte	0x43
-	.4byte	0x41
-	.uleb128 0x8
-	.byte	0x4
-	.4byte	0x35
+	.4byte	0x3f
 	.uleb128 0x7
+	.byte	0x4
+	.4byte	0x33
+	.uleb128 0x6
 	.4byte	.LASF12
 	.byte	0x8
 	.byte	0x1d
-	.4byte	0xc7
-	.uleb128 0x3
+	.4byte	0xc5
+	.uleb128 0x2
 	.byte	0x1
 	.byte	0x2
 	.4byte	.LASF13
-	.uleb128 0x7
+	.uleb128 0x6
 	.4byte	.LASF14
 	.byte	0x8
 	.byte	0x36
-	.4byte	0xab
-	.uleb128 0x9
+	.4byte	0xa9
+	.uleb128 0x8
 	.4byte	.LASF15
 	.byte	0x9
 	.byte	0xd
-	.4byte	0x41
-	.uleb128 0x9
+	.4byte	0x3f
+	.uleb128 0x8
 	.4byte	.LASF16
 	.byte	0x9
 	.byte	0xd
-	.4byte	0x41
-	.uleb128 0xa
-	.uleb128 0x9
+	.4byte	0x3f
+	.uleb128 0x6
 	.4byte	.LASF17
 	.byte	0xa
-	.byte	0x28
-	.4byte	0xfb
-	.uleb128 0x8
+	.byte	0x83
+	.4byte	0xf8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0xef
+	.4byte	0xfe
+	.uleb128 0x9
+	.4byte	0x62
 	.uleb128 0x7
-	.4byte	.LASF18
-	.byte	0xb
-	.byte	0x83
-	.4byte	0x10c
-	.uleb128 0x8
 	.byte	0x4
-	.4byte	0x112
+	.4byte	0x109
+	.uleb128 0xa
 	.uleb128 0xb
-	.4byte	0x64
+	.4byte	0xed
+	.4byte	0x115
 	.uleb128 0xc
-	.4byte	0x101
-	.4byte	0x122
-	.uleb128 0xd
 	.byte	0
-	.uleb128 0x9
+	.uleb128 0x8
+	.4byte	.LASF18
+	.byte	0xa
+	.byte	0x86
+	.4byte	0x10a
+	.uleb128 0x8
 	.4byte	.LASF19
-	.byte	0xb
+	.byte	0xa
 	.byte	0x86
-	.4byte	0x117
-	.uleb128 0x9
+	.4byte	0x10a
+	.uleb128 0x8
 	.4byte	.LASF20
-	.byte	0xb
-	.byte	0x86
-	.4byte	0x117
-	.uleb128 0x9
-	.4byte	.LASF21
-	.byte	0xb
+	.byte	0xa
 	.byte	0x87
-	.4byte	0x117
-	.uleb128 0x9
-	.4byte	.LASF22
-	.byte	0xb
+	.4byte	0x10a
+	.uleb128 0x8
+	.4byte	.LASF21
+	.byte	0xa
 	.byte	0x87
-	.4byte	0x117
+	.4byte	0x10a
+	.uleb128 0xb
+	.4byte	0x33
+	.4byte	0x14c
 	.uleb128 0xc
-	.4byte	0x35
-	.4byte	0x159
-	.uleb128 0xd
 	.byte	0
-	.uleb128 0x9
-	.4byte	.LASF23
-	.byte	0xb
+	.uleb128 0x8
+	.4byte	.LASF22
+	.byte	0xa
 	.byte	0x8e
-	.4byte	0x14e
-	.uleb128 0x9
-	.4byte	.LASF24
-	.byte	0xb
+	.4byte	0x141
+	.uleb128 0x8
+	.4byte	.LASF23
+	.byte	0xa
 	.byte	0x8f
-	.4byte	0xb6
-	.uleb128 0x9
-	.4byte	.LASF25
-	.byte	0xb
+	.4byte	0xb4
+	.uleb128 0x8
+	.4byte	.LASF24
+	.byte	0xa
 	.byte	0x90
-	.4byte	0x41
-	.uleb128 0x9
-	.4byte	.LASF26
-	.byte	0xb
+	.4byte	0x3f
+	.uleb128 0x8
+	.4byte	.LASF25
+	.byte	0xa
 	.byte	0x9c
-	.4byte	0xfb
-	.uleb128 0x9
-	.4byte	.LASF27
-	.byte	0xb
+	.4byte	0x103
+	.uleb128 0x8
+	.4byte	.LASF26
+	.byte	0xa
 	.byte	0x9e
-	.4byte	0xbc
+	.4byte	0xba
+	.uleb128 0xb
+	.4byte	0x3a
+	.4byte	0x18e
 	.uleb128 0xc
-	.4byte	0x3c
-	.4byte	0x19b
-	.uleb128 0xd
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x190
-	.uleb128 0x9
-	.4byte	.LASF28
-	.byte	0xc
+	.uleb128 0x3
+	.4byte	0x183
+	.uleb128 0x8
+	.4byte	.LASF27
+	.byte	0xb
 	.byte	0xa
-	.4byte	0x19b
-	.uleb128 0x9
-	.4byte	.LASF29
-	.byte	0xc
+	.4byte	0x18e
+	.uleb128 0x8
+	.4byte	.LASF28
+	.byte	0xb
 	.byte	0xb
-	.4byte	0x19b
+	.4byte	0x18e
+	.uleb128 0xb
+	.4byte	0x62
+	.4byte	0x1b4
 	.uleb128 0xc
-	.4byte	0x64
-	.4byte	0x1c1
-	.uleb128 0xd
 	.byte	0
-	.uleb128 0x9
-	.4byte	.LASF30
-	.byte	0xc
+	.uleb128 0x8
+	.4byte	.LASF29
+	.byte	0xb
 	.byte	0x2e
-	.4byte	0x1b6
-	.uleb128 0x9
-	.4byte	.LASF31
-	.byte	0xc
+	.4byte	0x1a9
+	.uleb128 0x8
+	.4byte	.LASF30
+	.byte	0xb
 	.byte	0x9f
-	.4byte	0x64
-	.uleb128 0x9
-	.4byte	.LASF32
-	.byte	0xc
+	.4byte	0x62
+	.uleb128 0x8
+	.4byte	.LASF31
+	.byte	0xb
 	.byte	0xa0
-	.4byte	0x64
-	.uleb128 0x9
-	.4byte	.LASF33
-	.byte	0xc
+	.4byte	0x62
+	.uleb128 0x8
+	.4byte	.LASF32
+	.byte	0xb
 	.byte	0xa1
-	.4byte	0x64
-	.uleb128 0xe
-	.4byte	.LASF35
-	.uleb128 0x4
-	.4byte	0x1ed
-	.uleb128 0xf
+	.4byte	0x62
+	.uleb128 0xd
 	.4byte	.LASF34
-	.byte	0xc
+	.uleb128 0x3
+	.4byte	0x1e0
+	.uleb128 0xe
+	.4byte	.LASF33
+	.byte	0xb
 	.2byte	0x1a4
-	.4byte	0x1f2
+	.4byte	0x1e5
+	.uleb128 0xd
+	.4byte	.LASF35
 	.uleb128 0xe
 	.4byte	.LASF36
-	.uleb128 0xf
-	.4byte	.LASF37
-	.byte	0xd
+	.byte	0xc
 	.2byte	0x104
-	.4byte	0x203
+	.4byte	0x1f6
+	.uleb128 0xf
+	.4byte	0xa2
+	.4byte	0x216
 	.uleb128 0x10
-	.4byte	0xa4
-	.4byte	0x223
-	.uleb128 0x11
-	.4byte	0x64
+	.4byte	0x62
 	.byte	0
-	.uleb128 0xf
-	.4byte	.LASF38
-	.byte	0xd
+	.uleb128 0xe
+	.4byte	.LASF37
+	.byte	0xc
 	.2byte	0x105
-	.4byte	0x22f
-	.uleb128 0x8
+	.4byte	0x222
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x214
-	.uleb128 0xf
-	.4byte	.LASF39
-	.byte	0xd
+	.4byte	0x207
+	.uleb128 0xe
+	.4byte	.LASF38
+	.byte	0xc
 	.2byte	0x1bf
-	.4byte	0x64
-	.uleb128 0xf
-	.4byte	.LASF40
-	.byte	0xd
+	.4byte	0x62
+	.uleb128 0xe
+	.4byte	.LASF39
+	.byte	0xc
 	.2byte	0x1c0
-	.4byte	0x64
-	.uleb128 0xf
-	.4byte	.LASF41
-	.byte	0xd
+	.4byte	0x62
+	.uleb128 0xe
+	.4byte	.LASF40
+	.byte	0xc
 	.2byte	0x1c1
-	.4byte	0x64
-	.uleb128 0xf
-	.4byte	.LASF42
-	.byte	0xd
-	.2byte	0x1c2
-	.4byte	0x64
-	.uleb128 0xf
-	.4byte	.LASF43
-	.byte	0xd
+	.4byte	0x62
+	.uleb128 0xe
+	.4byte	.LASF41
+	.byte	0xc
+	.2byte	0x1c2
+	.4byte	0x62
+	.uleb128 0xe
+	.4byte	.LASF42
+	.byte	0xc
 	.2byte	0x1c3
-	.4byte	0x64
-	.uleb128 0xf
-	.4byte	.LASF44
-	.byte	0xd
+	.4byte	0x62
+	.uleb128 0xe
+	.4byte	.LASF43
+	.byte	0xc
 	.2byte	0x1c4
-	.4byte	0x64
-	.uleb128 0xf
-	.4byte	.LASF45
-	.byte	0xd
+	.4byte	0x62
+	.uleb128 0xe
+	.4byte	.LASF44
+	.byte	0xc
 	.2byte	0x1c5
-	.4byte	0x64
-	.uleb128 0xf
-	.4byte	.LASF46
-	.byte	0xd
+	.4byte	0x62
+	.uleb128 0xe
+	.4byte	.LASF45
+	.byte	0xc
 	.2byte	0x1c7
-	.4byte	0xbc
-	.uleb128 0xf
-	.4byte	.LASF47
-	.byte	0xd
+	.4byte	0xba
+	.uleb128 0xe
+	.4byte	.LASF46
+	.byte	0xc
 	.2byte	0x1da
-	.4byte	0x64
-	.uleb128 0xf
-	.4byte	.LASF48
-	.byte	0xd
+	.4byte	0x62
+	.uleb128 0xe
+	.4byte	.LASF47
+	.byte	0xc
 	.2byte	0x1dc
-	.4byte	0xbc
-	.uleb128 0x12
-	.4byte	.LASF668
+	.4byte	0xba
+	.uleb128 0x11
+	.4byte	.LASF666
 	.byte	0x4
-	.4byte	0x41
-	.byte	0xd
+	.4byte	0x3f
+	.byte	0xc
 	.2byte	0x1df
-	.4byte	0x2dd
-	.uleb128 0x13
-	.4byte	.LASF49
+	.4byte	0x2d0
+	.uleb128 0x12
+	.4byte	.LASF48
 	.byte	0
-	.uleb128 0x13
-	.4byte	.LASF50
+	.uleb128 0x12
+	.4byte	.LASF49
 	.byte	0x1
-	.uleb128 0x13
-	.4byte	.LASF51
+	.uleb128 0x12
+	.4byte	.LASF50
 	.byte	0x2
-	.uleb128 0x13
-	.4byte	.LASF52
+	.uleb128 0x12
+	.4byte	.LASF51
 	.byte	0x3
-	.uleb128 0x13
-	.4byte	.LASF53
+	.uleb128 0x12
+	.4byte	.LASF52
 	.byte	0x4
 	.byte	0
-	.uleb128 0xf
-	.4byte	.LASF54
-	.byte	0xd
+	.uleb128 0xe
+	.4byte	.LASF53
+	.byte	0xc
 	.2byte	0x1e5
-	.4byte	0x2ad
-	.uleb128 0xf
-	.4byte	.LASF55
-	.byte	0xd
+	.4byte	0x2a0
+	.uleb128 0xe
+	.4byte	.LASF54
+	.byte	0xc
 	.2byte	0x1f8
-	.4byte	0x19b
-	.uleb128 0xf
+	.4byte	0x18e
+	.uleb128 0xe
+	.4byte	.LASF55
+	.byte	0xc
+	.2byte	0x203
+	.4byte	0x18e
+	.uleb128 0x6
 	.4byte	.LASF56
 	.byte	0xd
-	.2byte	0x203
-	.4byte	0x19b
-	.uleb128 0x7
-	.4byte	.LASF57
-	.byte	0xe
 	.byte	0x9
-	.4byte	0x4f
-	.uleb128 0x7
-	.4byte	.LASF58
-	.byte	0xe
+	.4byte	0x4d
+	.uleb128 0x6
+	.4byte	.LASF57
+	.byte	0xd
 	.byte	0xa
-	.4byte	0x5d
-	.uleb128 0x7
-	.4byte	.LASF59
-	.byte	0xe
+	.4byte	0x5b
+	.uleb128 0x6
+	.4byte	.LASF58
+	.byte	0xd
 	.byte	0xb
-	.4byte	0x41
-	.uleb128 0x7
-	.4byte	.LASF60
-	.byte	0xe
+	.4byte	0x3f
+	.uleb128 0x6
+	.4byte	.LASF59
+	.byte	0xd
 	.byte	0xc
-	.4byte	0x64
-	.uleb128 0x7
-	.4byte	.LASF61
-	.byte	0xe
+	.4byte	0x62
+	.uleb128 0x6
+	.4byte	.LASF60
 	.byte	0xd
-	.4byte	0x56
-	.uleb128 0x14
-	.4byte	.LASF66
+	.byte	0xd
+	.4byte	0x54
+	.uleb128 0x13
+	.4byte	.LASF65
 	.byte	0x14
-	.byte	0xf
+	.byte	0xe
 	.byte	0x22
-	.4byte	0x381
-	.uleb128 0x15
-	.4byte	.LASF62
-	.byte	0xf
+	.4byte	0x374
+	.uleb128 0x14
+	.4byte	.LASF61
+	.byte	0xe
 	.byte	0x23
-	.4byte	0x99
+	.4byte	0x97
 	.byte	0
-	.uleb128 0x15
-	.4byte	.LASF63
-	.byte	0xf
+	.uleb128 0x14
+	.4byte	.LASF62
+	.byte	0xe
 	.byte	0x24
-	.4byte	0x99
+	.4byte	0x97
 	.byte	0x4
-	.uleb128 0x15
-	.4byte	.LASF64
-	.byte	0xf
+	.uleb128 0x14
+	.4byte	.LASF63
+	.byte	0xe
 	.byte	0x25
-	.4byte	0x381
+	.4byte	0x374
 	.byte	0x8
-	.uleb128 0x15
-	.4byte	.LASF65
-	.byte	0xf
+	.uleb128 0x14
+	.4byte	.LASF64
+	.byte	0xe
 	.byte	0x26
-	.4byte	0x381
+	.4byte	0x374
 	.byte	0xc
-	.uleb128 0x16
+	.uleb128 0x15
 	.ascii	"lpa\000"
-	.byte	0xf
+	.byte	0xe
 	.byte	0x27
-	.4byte	0x99
+	.4byte	0x97
 	.byte	0x10
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x99
-	.uleb128 0x14
-	.4byte	.LASF67
+	.4byte	0x97
+	.uleb128 0x13
+	.4byte	.LASF66
 	.byte	0x18
-	.byte	0xf
+	.byte	0xe
 	.byte	0x2a
-	.4byte	0x424
-	.uleb128 0x15
-	.4byte	.LASF68
-	.byte	0xf
+	.4byte	0x417
+	.uleb128 0x14
+	.4byte	.LASF67
+	.byte	0xe
 	.byte	0x2b
-	.4byte	0x83
+	.4byte	0x81
 	.byte	0
-	.uleb128 0x15
-	.4byte	.LASF69
-	.byte	0xf
+	.uleb128 0x14
+	.4byte	.LASF68
+	.byte	0xe
 	.byte	0x2c
-	.4byte	0x83
+	.4byte	0x81
 	.byte	0x2
-	.uleb128 0x15
-	.4byte	.LASF70
-	.byte	0xf
+	.uleb128 0x14
+	.4byte	.LASF69
+	.byte	0xe
 	.byte	0x2d
-	.4byte	0x83
+	.4byte	0x81
 	.byte	0x4
-	.uleb128 0x15
-	.4byte	.LASF71
-	.byte	0xf
+	.uleb128 0x14
+	.4byte	.LASF70
+	.byte	0xe
 	.byte	0x2e
-	.4byte	0x83
+	.4byte	0x81
 	.byte	0x6
-	.uleb128 0x15
-	.4byte	.LASF72
-	.byte	0xf
+	.uleb128 0x14
+	.4byte	.LASF71
+	.byte	0xe
 	.byte	0x2f
-	.4byte	0x83
+	.4byte	0x81
 	.byte	0x8
-	.uleb128 0x15
-	.4byte	.LASF73
-	.byte	0xf
+	.uleb128 0x14
+	.4byte	.LASF72
+	.byte	0xe
 	.byte	0x30
-	.4byte	0x83
+	.4byte	0x81
 	.byte	0xa
-	.uleb128 0x15
-	.4byte	.LASF74
-	.byte	0xf
+	.uleb128 0x14
+	.4byte	.LASF73
+	.byte	0xe
 	.byte	0x31
-	.4byte	0x83
+	.4byte	0x81
 	.byte	0xc
-	.uleb128 0x15
-	.4byte	.LASF75
-	.byte	0xf
+	.uleb128 0x14
+	.4byte	.LASF74
+	.byte	0xe
 	.byte	0x32
-	.4byte	0x83
+	.4byte	0x81
+	.byte	0xe
+	.uleb128 0x14
+	.4byte	.LASF75
 	.byte	0xe
-	.uleb128 0x15
-	.4byte	.LASF76
-	.byte	0xf
 	.byte	0x33
-	.4byte	0x83
+	.4byte	0x81
 	.byte	0x10
-	.uleb128 0x15
-	.4byte	.LASF77
-	.byte	0xf
+	.uleb128 0x14
+	.4byte	.LASF76
+	.byte	0xe
 	.byte	0x34
-	.4byte	0x83
+	.4byte	0x81
 	.byte	0x12
-	.uleb128 0x15
-	.4byte	.LASF78
-	.byte	0xf
+	.uleb128 0x14
+	.4byte	.LASF77
+	.byte	0xe
 	.byte	0x35
-	.4byte	0x83
+	.4byte	0x81
 	.byte	0x14
-	.uleb128 0x15
-	.4byte	.LASF79
-	.byte	0xf
+	.uleb128 0x14
+	.4byte	.LASF78
+	.byte	0xe
 	.byte	0x36
-	.4byte	0x79
+	.4byte	0x77
 	.byte	0x16
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x387
-	.uleb128 0x14
-	.4byte	.LASF80
+	.uleb128 0x3
+	.4byte	0x37a
+	.uleb128 0x13
+	.4byte	.LASF79
 	.byte	0x10
-	.byte	0xf
+	.byte	0xe
 	.byte	0x39
-	.4byte	0x466
-	.uleb128 0x15
-	.4byte	.LASF81
-	.byte	0xf
+	.4byte	0x459
+	.uleb128 0x14
+	.4byte	.LASF80
+	.byte	0xe
 	.byte	0x3a
-	.4byte	0x480
+	.4byte	0x473
 	.byte	0
-	.uleb128 0x15
-	.4byte	.LASF82
-	.byte	0xf
+	.uleb128 0x14
+	.4byte	.LASF81
+	.byte	0xe
 	.byte	0x3b
-	.4byte	0x49a
+	.4byte	0x48d
 	.byte	0x4
-	.uleb128 0x15
-	.4byte	.LASF83
-	.byte	0xf
+	.uleb128 0x14
+	.4byte	.LASF82
+	.byte	0xe
 	.byte	0x3c
-	.4byte	0x4be
+	.4byte	0x4b1
 	.byte	0x8
-	.uleb128 0x15
-	.4byte	.LASF84
-	.byte	0xf
+	.uleb128 0x14
+	.4byte	.LASF83
+	.byte	0xe
 	.byte	0x3d
-	.4byte	0x4be
+	.4byte	0x4b1
 	.byte	0xc
 	.byte	0
+	.uleb128 0xf
+	.4byte	0x8c
+	.4byte	0x46d
 	.uleb128 0x10
-	.4byte	0x8e
-	.4byte	0x47a
-	.uleb128 0x11
-	.4byte	0x47a
-	.uleb128 0x11
-	.4byte	0x99
+	.4byte	0x46d
+	.uleb128 0x10
+	.4byte	0x97
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x83
-	.uleb128 0x8
+	.4byte	0x81
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x466
+	.4byte	0x459
+	.uleb128 0xf
+	.4byte	0x97
+	.4byte	0x48d
 	.uleb128 0x10
-	.4byte	0x99
-	.4byte	0x49a
-	.uleb128 0x11
-	.4byte	0x79
-	.uleb128 0x11
-	.4byte	0x99
+	.4byte	0x77
+	.uleb128 0x10
+	.4byte	0x97
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x486
+	.4byte	0x479
+	.uleb128 0xf
+	.4byte	0x97
+	.4byte	0x4b1
 	.uleb128 0x10
-	.4byte	0x99
-	.4byte	0x4be
-	.uleb128 0x11
-	.4byte	0x79
-	.uleb128 0x11
-	.4byte	0x99
-	.uleb128 0x11
-	.4byte	0x381
-	.uleb128 0x11
-	.4byte	0x381
+	.4byte	0x77
+	.uleb128 0x10
+	.4byte	0x97
+	.uleb128 0x10
+	.4byte	0x374
+	.uleb128 0x10
+	.4byte	0x374
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x4a0
-	.uleb128 0x14
-	.4byte	.LASF85
+	.4byte	0x493
+	.uleb128 0x13
+	.4byte	.LASF84
 	.byte	0x3c
-	.byte	0x10
+	.byte	0xf
 	.byte	0x2b
-	.4byte	0x524
-	.uleb128 0x16
+	.4byte	0x517
+	.uleb128 0x15
 	.ascii	"id\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0x2d
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
-	.uleb128 0x15
-	.4byte	.LASF86
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF85
+	.byte	0xf
 	.byte	0x2e
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x2
-	.uleb128 0x15
-	.4byte	.LASF87
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF86
+	.byte	0xf
 	.byte	0x2f
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x4
-	.uleb128 0x16
+	.uleb128 0x15
 	.ascii	"cnt\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0x30
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x6
-	.uleb128 0x15
-	.4byte	.LASF88
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF87
+	.byte	0xf
 	.byte	0x31
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x8
-	.uleb128 0x15
-	.4byte	.LASF89
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF88
+	.byte	0xf
 	.byte	0x32
-	.4byte	0x524
+	.4byte	0x517
 	.byte	0xc
-	.uleb128 0x15
-	.4byte	.LASF90
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF89
+	.byte	0xf
 	.byte	0x33
-	.4byte	0x534
+	.4byte	0x527
 	.byte	0x1c
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x30c
-	.4byte	0x534
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x2ff
+	.4byte	0x527
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x7
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x544
-	.4byte	0x544
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x537
+	.4byte	0x537
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x7
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x317
-	.uleb128 0x14
-	.4byte	.LASF91
+	.4byte	0x30a
+	.uleb128 0x13
+	.4byte	.LASF90
 	.byte	0xc
-	.byte	0x10
+	.byte	0xf
 	.byte	0x3f
-	.4byte	0x592
-	.uleb128 0x16
+	.4byte	0x585
+	.uleb128 0x15
 	.ascii	"id\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0x41
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
-	.uleb128 0x15
-	.4byte	.LASF86
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF85
+	.byte	0xf
 	.byte	0x42
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x2
-	.uleb128 0x15
-	.4byte	.LASF87
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF86
+	.byte	0xf
 	.byte	0x43
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x4
-	.uleb128 0x15
-	.4byte	.LASF92
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF91
+	.byte	0xf
 	.byte	0x44
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x6
-	.uleb128 0x15
-	.4byte	.LASF88
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF87
+	.byte	0xf
 	.byte	0x45
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x8
 	.byte	0
-	.uleb128 0x14
-	.4byte	.LASF93
+	.uleb128 0x13
+	.4byte	.LASF92
 	.byte	0x28
-	.byte	0x10
+	.byte	0xf
 	.byte	0x48
-	.4byte	0x63b
-	.uleb128 0x15
-	.4byte	.LASF94
-	.byte	0x10
+	.4byte	0x62e
+	.uleb128 0x14
+	.4byte	.LASF93
+	.byte	0xf
 	.byte	0x4a
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
-	.uleb128 0x15
-	.4byte	.LASF86
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF85
+	.byte	0xf
 	.byte	0x4b
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x2
-	.uleb128 0x15
-	.4byte	.LASF95
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF94
+	.byte	0xf
 	.byte	0x4d
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x4
-	.uleb128 0x15
-	.4byte	.LASF96
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF95
+	.byte	0xf
 	.byte	0x4e
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x6
-	.uleb128 0x15
-	.4byte	.LASF97
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF96
+	.byte	0xf
 	.byte	0x50
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x8
-	.uleb128 0x15
-	.4byte	.LASF98
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF97
+	.byte	0xf
 	.byte	0x51
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0xa
-	.uleb128 0x15
-	.4byte	.LASF99
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF98
+	.byte	0xf
 	.byte	0x53
-	.4byte	0x63b
+	.4byte	0x62e
 	.byte	0xc
-	.uleb128 0x15
-	.4byte	.LASF100
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF99
+	.byte	0xf
 	.byte	0x54
-	.4byte	0x544
-	.byte	0x10
-	.uleb128 0x15
-	.4byte	.LASF101
+	.4byte	0x537
 	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF100
+	.byte	0xf
 	.byte	0x55
-	.4byte	0x63b
+	.4byte	0x62e
 	.byte	0x14
-	.uleb128 0x15
-	.4byte	.LASF102
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF101
+	.byte	0xf
 	.byte	0x56
-	.4byte	0x544
+	.4byte	0x537
 	.byte	0x18
-	.uleb128 0x15
-	.4byte	.LASF88
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF87
+	.byte	0xf
 	.byte	0x58
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x1c
-	.uleb128 0x15
-	.4byte	.LASF103
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF102
+	.byte	0xf
 	.byte	0x59
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x20
-	.uleb128 0x15
-	.4byte	.LASF104
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF103
+	.byte	0xf
 	.byte	0x5a
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x24
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x30c
-	.uleb128 0x14
-	.4byte	.LASF105
+	.4byte	0x2ff
+	.uleb128 0x13
+	.4byte	.LASF104
 	.byte	0xc
-	.byte	0x10
+	.byte	0xf
 	.byte	0x5d
-	.4byte	0x67e
-	.uleb128 0x15
-	.4byte	.LASF106
-	.byte	0x10
+	.4byte	0x671
+	.uleb128 0x14
+	.4byte	.LASF105
+	.byte	0xf
 	.byte	0x5f
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
-	.uleb128 0x15
-	.4byte	.LASF107
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF106
+	.byte	0xf
 	.byte	0x60
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x2
-	.uleb128 0x16
+	.uleb128 0x15
 	.ascii	"hit\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0x61
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x4
-	.uleb128 0x15
-	.4byte	.LASF108
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF107
+	.byte	0xf
 	.byte	0x62
-	.4byte	0x544
+	.4byte	0x537
 	.byte	0x8
 	.byte	0
-	.uleb128 0x14
-	.4byte	.LASF109
+	.uleb128 0x13
+	.4byte	.LASF108
 	.byte	0x24
-	.byte	0x10
+	.byte	0xf
 	.byte	0x65
-	.4byte	0x6eb
-	.uleb128 0x15
-	.4byte	.LASF95
-	.byte	0x10
+	.4byte	0x6de
+	.uleb128 0x14
+	.4byte	.LASF94
+	.byte	0xf
 	.byte	0x67
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0
-	.uleb128 0x15
-	.4byte	.LASF110
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF109
+	.byte	0xf
 	.byte	0x68
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x4
-	.uleb128 0x15
-	.4byte	.LASF88
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF87
+	.byte	0xf
 	.byte	0x69
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x8
-	.uleb128 0x16
-	.ascii	"len\000"
-	.byte	0x10
-	.byte	0x6a
-	.4byte	0x317
-	.byte	0xc
 	.uleb128 0x15
-	.4byte	.LASF111
-	.byte	0x10
+	.ascii	"len\000"
+	.byte	0xf
+	.byte	0x6a
+	.4byte	0x30a
+	.byte	0xc
+	.uleb128 0x14
+	.4byte	.LASF110
+	.byte	0xf
 	.byte	0x6b
-	.4byte	0x317
-	.byte	0x10
-	.uleb128 0x15
-	.4byte	.LASF112
+	.4byte	0x30a
 	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF111
+	.byte	0xf
 	.byte	0x6c
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x14
-	.uleb128 0x15
-	.4byte	.LASF113
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF112
+	.byte	0xf
 	.byte	0x6d
-	.4byte	0x6eb
+	.4byte	0x6de
 	.byte	0x18
-	.uleb128 0x16
+	.uleb128 0x15
 	.ascii	"tbl\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0x6e
-	.4byte	0x6fb
+	.4byte	0x6ee
 	.byte	0x20
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x317
-	.4byte	0x6fb
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x30a
+	.4byte	0x6ee
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x1
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x30c
-	.4byte	0x70b
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x2ff
+	.4byte	0x6fe
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x1
 	.byte	0
-	.uleb128 0x14
-	.4byte	.LASF114
-	.byte	0x10
+	.uleb128 0x13
+	.4byte	.LASF113
 	.byte	0x10
+	.byte	0xf
 	.byte	0x72
-	.4byte	0x76b
-	.uleb128 0x15
-	.4byte	.LASF95
-	.byte	0x10
+	.4byte	0x75e
+	.uleb128 0x14
+	.4byte	.LASF94
+	.byte	0xf
 	.byte	0x74
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
-	.uleb128 0x16
+	.uleb128 0x15
 	.ascii	"id\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0x75
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x2
-	.uleb128 0x15
-	.4byte	.LASF88
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF87
+	.byte	0xf
 	.byte	0x76
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x4
-	.uleb128 0x15
-	.4byte	.LASF87
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF86
+	.byte	0xf
 	.byte	0x77
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x8
-	.uleb128 0x15
-	.4byte	.LASF115
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF114
+	.byte	0xf
 	.byte	0x78
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0xa
-	.uleb128 0x15
-	.4byte	.LASF116
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF115
+	.byte	0xf
 	.byte	0x79
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0xc
-	.uleb128 0x15
-	.4byte	.LASF113
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF112
+	.byte	0xf
 	.byte	0x7a
-	.4byte	0x76b
+	.4byte	0x75e
 	.byte	0xe
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x301
-	.4byte	0x77b
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x2f4
+	.4byte	0x76e
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x1
 	.byte	0
-	.uleb128 0x14
-	.4byte	.LASF117
-	.byte	0x10
+	.uleb128 0x13
+	.4byte	.LASF116
 	.byte	0x10
+	.byte	0xf
 	.byte	0x7d
-	.4byte	0x7c3
-	.uleb128 0x15
-	.4byte	.LASF95
-	.byte	0x10
+	.4byte	0x7b6
+	.uleb128 0x14
+	.4byte	.LASF94
+	.byte	0xf
 	.byte	0x7f
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
-	.uleb128 0x16
+	.uleb128 0x15
 	.ascii	"id\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0x80
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x2
-	.uleb128 0x15
-	.4byte	.LASF88
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF87
+	.byte	0xf
 	.byte	0x81
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x4
-	.uleb128 0x16
+	.uleb128 0x15
 	.ascii	"lpa\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0x82
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x8
-	.uleb128 0x15
-	.4byte	.LASF118
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF117
+	.byte	0xf
 	.byte	0x83
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0xc
 	.byte	0
-	.uleb128 0x14
-	.4byte	.LASF119
-	.byte	0x10
+	.uleb128 0x13
+	.4byte	.LASF118
 	.byte	0x10
+	.byte	0xf
 	.byte	0x8f
-	.4byte	0x80b
-	.uleb128 0x15
-	.4byte	.LASF95
-	.byte	0x10
+	.4byte	0x7fe
+	.uleb128 0x14
+	.4byte	.LASF94
+	.byte	0xf
 	.byte	0x91
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
-	.uleb128 0x16
+	.uleb128 0x15
 	.ascii	"id\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0x92
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x2
-	.uleb128 0x15
-	.4byte	.LASF88
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF87
+	.byte	0xf
 	.byte	0x93
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x4
-	.uleb128 0x15
-	.4byte	.LASF120
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF119
+	.byte	0xf
 	.byte	0x94
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x8
-	.uleb128 0x15
-	.4byte	.LASF113
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF112
+	.byte	0xf
 	.byte	0x95
-	.4byte	0x80b
+	.4byte	0x7fe
 	.byte	0xa
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x301
-	.4byte	0x81b
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x2f4
+	.4byte	0x80e
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x5
 	.byte	0
-	.uleb128 0x14
-	.4byte	.LASF121
-	.byte	0x10
+	.uleb128 0x13
+	.4byte	.LASF120
 	.byte	0x10
+	.byte	0xf
 	.byte	0x98
-	.4byte	0x863
-	.uleb128 0x15
-	.4byte	.LASF95
-	.byte	0x10
+	.4byte	0x856
+	.uleb128 0x14
+	.4byte	.LASF94
+	.byte	0xf
 	.byte	0x9a
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
-	.uleb128 0x16
+	.uleb128 0x15
 	.ascii	"id\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0x9b
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x2
-	.uleb128 0x15
-	.4byte	.LASF88
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF87
+	.byte	0xf
 	.byte	0x9c
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x4
-	.uleb128 0x15
-	.4byte	.LASF122
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF121
+	.byte	0xf
 	.byte	0x9d
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x8
-	.uleb128 0x15
-	.4byte	.LASF123
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF122
+	.byte	0xf
 	.byte	0x9e
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0xc
 	.byte	0
-	.uleb128 0x14
-	.4byte	.LASF124
+	.uleb128 0x13
+	.4byte	.LASF123
 	.byte	0x30
-	.byte	0x10
+	.byte	0xf
 	.byte	0xa1
-	.4byte	0x960
-	.uleb128 0x16
+	.4byte	0x953
+	.uleb128 0x15
 	.ascii	"tag\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0xa3
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0
-	.uleb128 0x16
+	.uleb128 0x15
 	.ascii	"ver\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0xa4
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x4
-	.uleb128 0x15
-	.4byte	.LASF92
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF91
+	.byte	0xf
 	.byte	0xa6
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x8
-	.uleb128 0x15
-	.4byte	.LASF125
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF124
+	.byte	0xf
 	.byte	0xa7
-	.4byte	0x301
+	.4byte	0x2f4
 	.byte	0xa
-	.uleb128 0x15
-	.4byte	.LASF126
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF125
+	.byte	0xf
 	.byte	0xa8
-	.4byte	0x301
+	.4byte	0x2f4
 	.byte	0xb
-	.uleb128 0x15
-	.4byte	.LASF127
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF126
+	.byte	0xf
 	.byte	0xa9
-	.4byte	0x301
+	.4byte	0x2f4
 	.byte	0xc
-	.uleb128 0x15
-	.4byte	.LASF128
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF127
+	.byte	0xf
 	.byte	0xaa
-	.4byte	0x301
+	.4byte	0x2f4
 	.byte	0xd
-	.uleb128 0x15
-	.4byte	.LASF129
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF128
+	.byte	0xf
 	.byte	0xab
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0xe
-	.uleb128 0x15
-	.4byte	.LASF130
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF129
+	.byte	0xf
 	.byte	0xad
-	.4byte	0x30c
-	.byte	0x10
-	.uleb128 0x15
-	.4byte	.LASF131
+	.4byte	0x2ff
 	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF130
+	.byte	0xf
 	.byte	0xae
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x12
-	.uleb128 0x15
-	.4byte	.LASF132
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF131
+	.byte	0xf
 	.byte	0xaf
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x14
-	.uleb128 0x15
-	.4byte	.LASF133
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF132
+	.byte	0xf
 	.byte	0xb0
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x16
-	.uleb128 0x15
-	.4byte	.LASF134
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF133
+	.byte	0xf
 	.byte	0xb2
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x18
-	.uleb128 0x15
-	.4byte	.LASF135
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF134
+	.byte	0xf
 	.byte	0xb3
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x1a
-	.uleb128 0x15
-	.4byte	.LASF136
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF135
+	.byte	0xf
 	.byte	0xb4
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x1c
-	.uleb128 0x15
-	.4byte	.LASF137
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF136
+	.byte	0xf
 	.byte	0xb5
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x1e
-	.uleb128 0x15
-	.4byte	.LASF138
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF137
+	.byte	0xf
 	.byte	0xb7
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x20
-	.uleb128 0x15
-	.4byte	.LASF139
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF138
+	.byte	0xf
 	.byte	0xb8
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x24
-	.uleb128 0x15
-	.4byte	.LASF140
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF139
+	.byte	0xf
 	.byte	0xb9
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x28
-	.uleb128 0x15
-	.4byte	.LASF113
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF112
+	.byte	0xf
 	.byte	0xba
-	.4byte	0x6fb
+	.4byte	0x6ee
 	.byte	0x2c
 	.byte	0
-	.uleb128 0x18
-	.4byte	.LASF141
+	.uleb128 0x17
+	.4byte	.LASF140
 	.2byte	0x200
-	.byte	0x10
+	.byte	0xf
 	.byte	0xbe
-	.4byte	0xaa6
-	.uleb128 0x16
+	.4byte	0xa99
+	.uleb128 0x15
 	.ascii	"tag\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0xc0
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0
-	.uleb128 0x16
+	.uleb128 0x15
 	.ascii	"ver\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0xc1
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x4
-	.uleb128 0x15
-	.4byte	.LASF142
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF141
+	.byte	0xf
 	.byte	0xc3
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x8
-	.uleb128 0x15
-	.4byte	.LASF143
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF142
+	.byte	0xf
 	.byte	0xc4
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0xc
-	.uleb128 0x15
-	.4byte	.LASF144
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF143
+	.byte	0xf
 	.byte	0xc5
-	.4byte	0x317
-	.byte	0x10
-	.uleb128 0x15
-	.4byte	.LASF145
+	.4byte	0x30a
 	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF144
+	.byte	0xf
 	.byte	0xc6
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x14
-	.uleb128 0x15
-	.4byte	.LASF138
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF137
+	.byte	0xf
 	.byte	0xc8
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x18
-	.uleb128 0x15
-	.4byte	.LASF146
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF145
+	.byte	0xf
 	.byte	0xc9
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x1c
-	.uleb128 0x15
-	.4byte	.LASF147
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF146
+	.byte	0xf
 	.byte	0xca
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x20
-	.uleb128 0x15
-	.4byte	.LASF148
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF147
+	.byte	0xf
 	.byte	0xcb
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x24
-	.uleb128 0x15
-	.4byte	.LASF135
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF134
+	.byte	0xf
 	.byte	0xcd
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x28
-	.uleb128 0x15
-	.4byte	.LASF149
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF148
+	.byte	0xf
 	.byte	0xce
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x2c
-	.uleb128 0x15
-	.4byte	.LASF150
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF149
+	.byte	0xf
 	.byte	0xcf
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x30
-	.uleb128 0x15
-	.4byte	.LASF151
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF150
+	.byte	0xf
 	.byte	0xd0
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x34
-	.uleb128 0x15
-	.4byte	.LASF152
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF151
+	.byte	0xf
 	.byte	0xd2
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x38
-	.uleb128 0x15
-	.4byte	.LASF153
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF152
+	.byte	0xf
 	.byte	0xd3
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x3c
-	.uleb128 0x15
-	.4byte	.LASF154
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF153
+	.byte	0xf
 	.byte	0xd4
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x40
-	.uleb128 0x15
-	.4byte	.LASF155
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF154
+	.byte	0xf
 	.byte	0xd5
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x44
-	.uleb128 0x15
-	.4byte	.LASF156
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF155
+	.byte	0xf
 	.byte	0xd7
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x48
-	.uleb128 0x15
-	.4byte	.LASF157
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF156
+	.byte	0xf
 	.byte	0xd8
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x4c
-	.uleb128 0x15
-	.4byte	.LASF158
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF157
+	.byte	0xf
 	.byte	0xd9
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x50
-	.uleb128 0x15
-	.4byte	.LASF159
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF158
+	.byte	0xf
 	.byte	0xda
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x54
-	.uleb128 0x15
-	.4byte	.LASF160
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF159
+	.byte	0xf
 	.byte	0xdc
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x58
-	.uleb128 0x15
-	.4byte	.LASF161
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF160
+	.byte	0xf
 	.byte	0xdd
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x5c
-	.uleb128 0x15
-	.4byte	.LASF162
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF161
+	.byte	0xf
 	.byte	0xde
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x60
-	.uleb128 0x15
-	.4byte	.LASF113
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF112
+	.byte	0xf
 	.byte	0xe0
-	.4byte	0xaa6
+	.4byte	0xa99
 	.byte	0x64
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x317
-	.4byte	0xab6
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x30a
+	.4byte	0xaa9
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x66
 	.byte	0
+	.uleb128 0x13
+	.4byte	.LASF162
+	.byte	0x8
+	.byte	0xf
+	.byte	0xe4
+	.4byte	0xada
 	.uleb128 0x14
 	.4byte	.LASF163
-	.byte	0x6
-	.byte	0x10
-	.byte	0xe4
-	.4byte	0xae7
-	.uleb128 0x15
-	.4byte	.LASF164
-	.byte	0x10
+	.byte	0xf
 	.byte	0xe6
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
-	.uleb128 0x15
-	.4byte	.LASF165
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF164
+	.byte	0xf
 	.byte	0xe7
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x2
-	.uleb128 0x15
-	.4byte	.LASF166
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF165
+	.byte	0xf
 	.byte	0xe8
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x4
 	.byte	0
-	.uleb128 0x18
-	.4byte	.LASF167
+	.uleb128 0x17
+	.4byte	.LASF166
 	.2byte	0x808
-	.byte	0x10
+	.byte	0xf
 	.byte	0xeb
-	.4byte	0xb31
-	.uleb128 0x16
+	.4byte	0xb24
+	.uleb128 0x15
 	.ascii	"max\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0xed
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
-	.uleb128 0x15
-	.4byte	.LASF168
-	.byte	0x10
-	.byte	0xee
-	.4byte	0x30c
-	.byte	0x2
-	.uleb128 0x15
-	.4byte	.LASF169
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF167
+	.byte	0xf
+	.byte	0xee
+	.4byte	0x2ff
+	.byte	0x2
+	.uleb128 0x14
+	.4byte	.LASF168
+	.byte	0xf
 	.byte	0xef
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x4
-	.uleb128 0x15
-	.4byte	.LASF115
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF114
+	.byte	0xf
 	.byte	0xf0
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x6
-	.uleb128 0x16
+	.uleb128 0x15
 	.ascii	"arr\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0xf1
-	.4byte	0xb31
+	.4byte	0xb24
 	.byte	0x8
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x30c
-	.4byte	0xb42
-	.uleb128 0x19
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x2ff
+	.4byte	0xb35
+	.uleb128 0x18
+	.4byte	0x2c
 	.2byte	0x3ff
 	.byte	0
-	.uleb128 0x14
-	.4byte	.LASF170
+	.uleb128 0x13
+	.4byte	.LASF169
 	.byte	0x30
-	.byte	0x10
+	.byte	0xf
 	.byte	0xf5
-	.4byte	0xbd4
-	.uleb128 0x16
+	.4byte	0xbc7
+	.uleb128 0x15
 	.ascii	"id\000"
-	.byte	0x10
+	.byte	0xf
 	.byte	0xf7
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
-	.uleb128 0x15
-	.4byte	.LASF171
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF170
+	.byte	0xf
 	.byte	0xf8
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x2
-	.uleb128 0x15
-	.4byte	.LASF172
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF171
+	.byte	0xf
 	.byte	0xf9
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x4
-	.uleb128 0x15
-	.4byte	.LASF173
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF172
+	.byte	0xf
 	.byte	0xfa
-	.4byte	0x301
+	.4byte	0x2f4
 	.byte	0x6
-	.uleb128 0x15
-	.4byte	.LASF174
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF173
+	.byte	0xf
 	.byte	0xfb
-	.4byte	0x301
+	.4byte	0x2f4
 	.byte	0x7
-	.uleb128 0x15
-	.4byte	.LASF175
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF174
+	.byte	0xf
 	.byte	0xfc
-	.4byte	0x301
+	.4byte	0x2f4
 	.byte	0x8
-	.uleb128 0x15
-	.4byte	.LASF176
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF175
+	.byte	0xf
 	.byte	0xfd
-	.4byte	0x301
+	.4byte	0x2f4
 	.byte	0x9
-	.uleb128 0x15
-	.4byte	.LASF177
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF176
+	.byte	0xf
 	.byte	0xfe
-	.4byte	0x301
+	.4byte	0x2f4
 	.byte	0xa
-	.uleb128 0x15
-	.4byte	.LASF178
-	.byte	0x10
+	.uleb128 0x14
+	.4byte	.LASF177
+	.byte	0xf
 	.byte	0xff
-	.4byte	0x301
+	.4byte	0x2f4
 	.byte	0xb
-	.uleb128 0x1a
-	.4byte	.LASF88
-	.byte	0x10
+	.uleb128 0x19
+	.4byte	.LASF87
+	.byte	0xf
 	.2byte	0x100
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0xc
-	.uleb128 0x1a
-	.4byte	.LASF179
-	.byte	0x10
+	.uleb128 0x19
+	.4byte	.LASF178
+	.byte	0xf
 	.2byte	0x101
-	.4byte	0xbd4
+	.4byte	0xbc7
 	.byte	0x10
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x30c
-	.4byte	0xbe4
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x2ff
+	.4byte	0xbd7
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0xf
 	.byte	0
-	.uleb128 0x1b
-	.4byte	.LASF180
+	.uleb128 0x1a
+	.4byte	.LASF179
 	.byte	0xc
-	.byte	0x10
+	.byte	0xf
 	.2byte	0x105
-	.4byte	0xc19
-	.uleb128 0x1a
-	.4byte	.LASF181
-	.byte	0x10
+	.4byte	0xc0c
+	.uleb128 0x19
+	.4byte	.LASF180
+	.byte	0xf
 	.2byte	0x107
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0
-	.uleb128 0x1a
-	.4byte	.LASF182
-	.byte	0x10
+	.uleb128 0x19
+	.4byte	.LASF181
+	.byte	0xf
 	.2byte	0x108
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x4
-	.uleb128 0x1c
+	.uleb128 0x1b
 	.ascii	"lpa\000"
-	.byte	0x10
+	.byte	0xf
 	.2byte	0x109
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x8
 	.byte	0
-	.uleb128 0x1b
-	.4byte	.LASF183
+	.uleb128 0x1a
+	.4byte	.LASF182
 	.byte	0xc
-	.byte	0x10
+	.byte	0xf
 	.2byte	0x10c
-	.4byte	0xc4e
-	.uleb128 0x1a
-	.4byte	.LASF64
-	.byte	0x10
+	.4byte	0xc41
+	.uleb128 0x19
+	.4byte	.LASF63
+	.byte	0xf
 	.2byte	0x10e
-	.4byte	0x544
+	.4byte	0x537
 	.byte	0
-	.uleb128 0x1a
-	.4byte	.LASF65
-	.byte	0x10
+	.uleb128 0x19
+	.4byte	.LASF64
+	.byte	0xf
 	.2byte	0x10f
-	.4byte	0x544
+	.4byte	0x537
 	.byte	0x4
-	.uleb128 0x1a
-	.4byte	.LASF184
-	.byte	0x10
+	.uleb128 0x19
+	.4byte	.LASF183
+	.byte	0xf
 	.2byte	0x110
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0x8
 	.byte	0
-	.uleb128 0x1d
-	.4byte	.LASF185
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF184
+	.byte	0x10
 	.byte	0x12
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_type
-	.uleb128 0x1d
-	.4byte	.LASF186
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF185
+	.byte	0x10
 	.byte	0x13
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_die_num
-	.uleb128 0x1d
-	.4byte	.LASF187
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF186
+	.byte	0x10
 	.byte	0x14
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_planes_per_die
-	.uleb128 0x1d
-	.4byte	.LASF188
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF187
+	.byte	0x10
 	.byte	0x15
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_blks_per_die
-	.uleb128 0x1d
-	.4byte	.LASF189
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF188
+	.byte	0x10
 	.byte	0x16
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_blks_per_die_shift
-	.uleb128 0x1d
-	.4byte	.LASF190
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF189
+	.byte	0x10
 	.byte	0x17
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_planes_num
-	.uleb128 0x1d
-	.4byte	.LASF191
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF190
+	.byte	0x10
 	.byte	0x18
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_blk_pre_plane
-	.uleb128 0x1d
-	.4byte	.LASF192
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF191
+	.byte	0x10
 	.byte	0x19
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_ext_blk_pre_plane
-	.uleb128 0x1d
-	.4byte	.LASF193
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF192
+	.byte	0x10
 	.byte	0x1a
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_bbm_buf_size
-	.uleb128 0x1d
-	.4byte	.LASF194
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF193
+	.byte	0x10
 	.byte	0x1c
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_page_pre_blk
-	.uleb128 0x1d
-	.4byte	.LASF195
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF194
+	.byte	0x10
 	.byte	0x1d
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_page_pre_slc_blk
-	.uleb128 0x1d
-	.4byte	.LASF196
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF195
+	.byte	0x10
 	.byte	0x1e
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_page_pre_super_blk
-	.uleb128 0x1d
-	.4byte	.LASF197
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF196
+	.byte	0x10
 	.byte	0x1f
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_sec_pre_page
-	.uleb128 0x1d
-	.4byte	.LASF198
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF197
+	.byte	0x10
 	.byte	0x20
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_sec_pre_page_shift
-	.uleb128 0x1d
-	.4byte	.LASF199
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF198
+	.byte	0x10
 	.byte	0x24
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_byte_pre_page
-	.uleb128 0x1d
-	.4byte	.LASF200
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF199
+	.byte	0x10
 	.byte	0x25
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_byte_pre_oob
-	.uleb128 0x1d
-	.4byte	.LASF201
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF200
+	.byte	0x10
 	.byte	0x26
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_reserved_blks
-	.uleb128 0x1d
-	.4byte	.LASF202
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF201
+	.byte	0x10
 	.byte	0x27
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_totle_phy_blks
-	.uleb128 0x1d
-	.4byte	.LASF203
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF202
+	.byte	0x10
 	.byte	0x29
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_map_region_num
-	.uleb128 0x1d
-	.4byte	.LASF204
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF203
+	.byte	0x10
 	.byte	0x2a
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_l2pmap_ram_region_num
-	.uleb128 0x1d
-	.4byte	.LASF205
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF204
+	.byte	0x10
 	.byte	0x2c
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_vendor_region_num
-	.uleb128 0x1d
-	.4byte	.LASF206
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF205
+	.byte	0x10
 	.byte	0x2e
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_map_blks_per_plane
-	.uleb128 0x1d
-	.4byte	.LASF207
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF206
+	.byte	0x10
 	.byte	0x2f
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_max_map_blks
-	.uleb128 0x1d
-	.4byte	.LASF208
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF207
+	.byte	0x10
 	.byte	0x30
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_max_vendor_blks
-	.uleb128 0x1d
-	.4byte	.LASF209
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF208
+	.byte	0x10
 	.byte	0x31
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_vendor_part_size
-	.uleb128 0x1d
-	.4byte	.LASF210
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF209
+	.byte	0x10
 	.byte	0x32
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_sys_blks_per_plane
-	.uleb128 0x1d
-	.4byte	.LASF211
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF210
+	.byte	0x10
 	.byte	0x33
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_init_sys_blks_per_plane
-	.uleb128 0x1d
-	.4byte	.LASF212
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF211
+	.byte	0x10
 	.byte	0x34
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_max_sys_blks
-	.uleb128 0x1d
-	.4byte	.LASF213
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF212
+	.byte	0x10
 	.byte	0x35
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_data_blks_per_plane
-	.uleb128 0x1d
-	.4byte	.LASF214
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF213
+	.byte	0x10
 	.byte	0x36
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_data_op_blks_per_plane
-	.uleb128 0x1d
-	.4byte	.LASF215
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF214
+	.byte	0x10
 	.byte	0x37
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_ftl_nand_max_data_blks
-	.uleb128 0x1d
-	.4byte	.LASF216
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF215
+	.byte	0x10
 	.byte	0x38
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	ftl_gc_temp_power_lost_recovery_flag
-	.uleb128 0x1d
-	.4byte	.LASF217
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF216
+	.byte	0x10
 	.byte	0x3a
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_GlobalSysVersion
-	.uleb128 0x1d
-	.4byte	.LASF218
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF217
+	.byte	0x10
 	.byte	0x3b
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_GlobalDataVersion
-	.uleb128 0x1d
-	.4byte	.LASF219
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF218
+	.byte	0x10
 	.byte	0x3c
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_MaxLbaSector
-	.uleb128 0x1d
-	.4byte	.LASF220
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF219
+	.byte	0x10
 	.byte	0x3d
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_MaxLpn
-	.uleb128 0x1d
-	.4byte	.LASF221
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF220
+	.byte	0x10
 	.byte	0x3e
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_VaildLpn
-	.uleb128 0x1d
-	.4byte	.LASF222
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF221
+	.byte	0x10
 	.byte	0x3f
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_MaxLbn
-	.uleb128 0x1d
-	.4byte	.LASF223
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF222
+	.byte	0x10
 	.byte	0x41
-	.4byte	0x4c4
+	.4byte	0x4b7
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	gBbtInfo
-	.uleb128 0x1d
-	.4byte	.LASF224
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF223
+	.byte	0x10
 	.byte	0x42
-	.4byte	0x54a
+	.4byte	0x53d
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	gSysInfo
-	.uleb128 0x1d
-	.4byte	.LASF225
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF224
+	.byte	0x10
 	.byte	0x43
-	.4byte	0xae7
+	.4byte	0xada
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	gSysFreeQueue
-	.uleb128 0x1d
-	.4byte	.LASF226
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF225
+	.byte	0x10
 	.byte	0x44
-	.4byte	0x592
+	.4byte	0x585
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	gL2pMapInfo
-	.uleb128 0x1d
-	.4byte	.LASF227
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF226
+	.byte	0x10
 	.byte	0x45
-	.4byte	0x592
+	.4byte	0x585
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	gVendorBlkInfo
-	.uleb128 0x1d
-	.4byte	.LASF228
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF227
+	.byte	0x10
 	.byte	0x46
-	.4byte	0x338
+	.4byte	0x32b
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	req_sys
-	.uleb128 0x1d
-	.4byte	.LASF229
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF228
+	.byte	0x10
 	.byte	0x47
-	.4byte	0xf4b
+	.4byte	0xf3e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	req_read
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x338
-	.uleb128 0x1d
-	.4byte	.LASF230
-	.byte	0x11
+	.4byte	0x32b
+	.uleb128 0x1c
+	.4byte	.LASF229
+	.byte	0x10
 	.byte	0x48
-	.4byte	0xf4b
+	.4byte	0xf3e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	req_prgm
-	.uleb128 0x1d
-	.4byte	.LASF231
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF230
+	.byte	0x10
 	.byte	0x49
-	.4byte	0xf4b
+	.4byte	0xf3e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	req_erase
-	.uleb128 0x1d
-	.4byte	.LASF232
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF231
+	.byte	0x10
 	.byte	0x4a
-	.4byte	0xf4b
+	.4byte	0xf3e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	req_gc
-	.uleb128 0x1d
-	.4byte	.LASF233
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF232
+	.byte	0x10
 	.byte	0x4b
-	.4byte	0xf4b
+	.4byte	0xf3e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	req_gc_dst
-	.uleb128 0x1d
-	.4byte	.LASF234
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF233
+	.byte	0x10
 	.byte	0x4d
-	.4byte	0xf4b
+	.4byte	0xf3e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_req_cache
-	.uleb128 0xc
-	.4byte	0x301
-	.4byte	0xfb6
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x2f4
+	.4byte	0xfa9
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x1f
 	.byte	0
-	.uleb128 0x1d
-	.4byte	.LASF235
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF234
+	.byte	0x10
 	.byte	0x4f
-	.4byte	0xfa6
+	.4byte	0xf99
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_plane_order_table
-	.uleb128 0x1d
-	.4byte	.LASF236
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF235
+	.byte	0x10
 	.byte	0x51
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_sys_data_buf
-	.uleb128 0x1d
-	.4byte	.LASF237
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF236
+	.byte	0x10
 	.byte	0x52
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_sys_data_buf_1
-	.uleb128 0x1d
-	.4byte	.LASF238
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF237
+	.byte	0x10
 	.byte	0x53
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_vendor_data_buf
-	.uleb128 0x1d
-	.4byte	.LASF239
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF238
+	.byte	0x10
 	.byte	0x54
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_sys_spare_buf
-	.uleb128 0x1d
-	.4byte	.LASF240
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF239
+	.byte	0x10
 	.byte	0x55
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_io_data_buf_0
-	.uleb128 0x1d
-	.4byte	.LASF241
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF240
+	.byte	0x10
 	.byte	0x56
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_io_data_buf_1
-	.uleb128 0x1d
-	.4byte	.LASF242
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF241
+	.byte	0x10
 	.byte	0x57
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_io_spare_buf
-	.uleb128 0x1d
-	.4byte	.LASF243
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF242
+	.byte	0x10
 	.byte	0x58
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_gc_spare_buf
-	.uleb128 0x1d
-	.4byte	.LASF244
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF243
+	.byte	0x10
 	.byte	0x59
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_gc_data_buf
-	.uleb128 0x1d
-	.4byte	.LASF245
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF244
+	.byte	0x10
 	.byte	0x5a
-	.4byte	0x1071
+	.4byte	0x1064
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	gp_gc_page_buf_info
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0xc19
-	.uleb128 0x1d
-	.4byte	.LASF246
-	.byte	0x11
+	.4byte	0xc0c
+	.uleb128 0x1c
+	.4byte	.LASF245
+	.byte	0x10
 	.byte	0x5b
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_gc_page_buf_num
-	.uleb128 0x1d
-	.4byte	.LASF247
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF246
+	.byte	0x10
 	.byte	0x5c
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_num_req
-	.uleb128 0x1d
-	.4byte	.LASF248
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF247
+	.byte	0x10
 	.byte	0x5d
-	.4byte	0x10aa
+	.4byte	0x109d
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	gp_ect_tbl_info
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x67e
-	.uleb128 0x1d
-	.4byte	.LASF249
-	.byte	0x11
+	.4byte	0x671
+	.uleb128 0x1c
+	.4byte	.LASF248
+	.byte	0x10
 	.byte	0x5e
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_ect_tbl_info_size
-	.uleb128 0x1d
-	.4byte	.LASF250
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF249
+	.byte	0x10
 	.byte	0x5f
-	.4byte	0x63b
+	.4byte	0x62e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_erase_count_table
-	.uleb128 0x1d
-	.4byte	.LASF251
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF250
+	.byte	0x10
 	.byte	0x61
-	.4byte	0x63b
+	.4byte	0x62e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_swl_mul_table
-	.uleb128 0x1d
-	.4byte	.LASF252
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF251
+	.byte	0x10
 	.byte	0x62
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_totle_swl_count
-	.uleb128 0x1d
-	.4byte	.LASF253
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF252
+	.byte	0x10
 	.byte	0x63
-	.4byte	0x63b
+	.4byte	0x62e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_valid_page_count_table
-	.uleb128 0x1d
-	.4byte	.LASF254
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF253
+	.byte	0x10
 	.byte	0x64
-	.4byte	0x63b
+	.4byte	0x62e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_valid_page_count_check_table
-	.uleb128 0x1d
-	.4byte	.LASF255
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF254
+	.byte	0x10
 	.byte	0x65
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_blk_mode_table
-	.uleb128 0x1d
-	.4byte	.LASF256
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF255
+	.byte	0x10
 	.byte	0x67
-	.4byte	0x63b
+	.4byte	0x62e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_map_block_table
-	.uleb128 0x1d
-	.4byte	.LASF257
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF256
+	.byte	0x10
 	.byte	0x68
-	.4byte	0x63b
+	.4byte	0x62e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_map_block_valid_page_count
-	.uleb128 0x1d
-	.4byte	.LASF258
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF257
+	.byte	0x10
 	.byte	0x69
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_map_block_ver_table
-	.uleb128 0x1d
-	.4byte	.LASF259
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF258
+	.byte	0x10
 	.byte	0x6a
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_map_region_ppn_table
-	.uleb128 0x1d
-	.4byte	.LASF260
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF259
+	.byte	0x10
 	.byte	0x6b
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_totle_map_block
-	.uleb128 0x1d
-	.4byte	.LASF261
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF260
+	.byte	0x10
 	.byte	0x6d
-	.4byte	0x63b
+	.4byte	0x62e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_vendor_block_table
-	.uleb128 0x1d
-	.4byte	.LASF262
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF261
+	.byte	0x10
 	.byte	0x6e
-	.4byte	0x63b
+	.4byte	0x62e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_vendor_block_valid_page_count
-	.uleb128 0x1d
-	.4byte	.LASF263
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF262
+	.byte	0x10
 	.byte	0x6f
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_vendor_block_ver_table
-	.uleb128 0x1d
-	.4byte	.LASF264
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF263
+	.byte	0x10
 	.byte	0x70
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_vendor_region_ppn_table
-	.uleb128 0x1d
-	.4byte	.LASF265
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF264
+	.byte	0x10
 	.byte	0x71
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_totle_vendor_block
-	.uleb128 0x1d
-	.4byte	.LASF266
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF265
+	.byte	0x10
 	.byte	0x73
-	.4byte	0x11e2
+	.4byte	0x11d5
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_l2p_ram_map
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x641
-	.uleb128 0x1d
-	.4byte	.LASF267
-	.byte	0x11
+	.4byte	0x634
+	.uleb128 0x1c
+	.4byte	.LASF266
+	.byte	0x10
 	.byte	0x74
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_l2p_map_buf
-	.uleb128 0x1d
-	.4byte	.LASF268
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF267
+	.byte	0x10
 	.byte	0x75
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_l2p_last_update_region_id
-	.uleb128 0x1d
-	.4byte	.LASF269
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF268
+	.byte	0x10
 	.byte	0x7c
-	.4byte	0x121b
+	.4byte	0x120e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_data_block_list_table
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0xab6
-	.uleb128 0x1d
-	.4byte	.LASF270
-	.byte	0x11
+	.4byte	0xaa9
+	.uleb128 0x1c
+	.4byte	.LASF269
+	.byte	0x10
 	.byte	0x7d
-	.4byte	0x121b
+	.4byte	0x120e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_free_data_block_list_head
-	.uleb128 0x1d
-	.4byte	.LASF271
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF270
+	.byte	0x10
 	.byte	0x7f
-	.4byte	0x121b
+	.4byte	0x120e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_data_block_list_head
-	.uleb128 0x1d
-	.4byte	.LASF272
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF271
+	.byte	0x10
 	.byte	0x80
-	.4byte	0x121b
+	.4byte	0x120e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_data_block_list_tail
-	.uleb128 0x1d
-	.4byte	.LASF273
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF272
+	.byte	0x10
 	.byte	0x81
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_num_free_superblocks
-	.uleb128 0x1d
-	.4byte	.LASF274
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF273
+	.byte	0x10
 	.byte	0x82
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_num_data_superblocks
-	.uleb128 0x1d
-	.4byte	.LASF275
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF274
+	.byte	0x10
 	.byte	0x83
-	.4byte	0xb42
+	.4byte	0xb35
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_active_superblock
-	.uleb128 0x1d
-	.4byte	.LASF276
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF275
+	.byte	0x10
 	.byte	0x84
-	.4byte	0xb42
+	.4byte	0xb35
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_buffer_superblock
-	.uleb128 0x1d
-	.4byte	.LASF277
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF276
+	.byte	0x10
 	.byte	0x85
-	.4byte	0xb42
+	.4byte	0xb35
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_temp_superblock
-	.uleb128 0x1d
-	.4byte	.LASF278
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF277
+	.byte	0x10
 	.byte	0x86
-	.4byte	0xb42
+	.4byte	0xb35
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_superblock
-	.uleb128 0x1d
-	.4byte	.LASF279
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF278
+	.byte	0x10
 	.byte	0x87
-	.4byte	0x12cb
+	.4byte	0x12be
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	gp_last_act_superblock
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0xb42
-	.uleb128 0x1d
-	.4byte	.LASF280
-	.byte	0x11
+	.4byte	0xb35
+	.uleb128 0x1c
+	.4byte	.LASF279
+	.byte	0x10
 	.byte	0x88
-	.4byte	0x863
+	.4byte	0x856
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_sys_save_data
-	.uleb128 0x1d
-	.4byte	.LASF281
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF280
+	.byte	0x10
 	.byte	0x89
-	.4byte	0x960
+	.4byte	0x953
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_sys_ext_data
-	.uleb128 0x1d
-	.4byte	.LASF282
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF281
+	.byte	0x10
 	.byte	0x8b
-	.4byte	0x1304
+	.4byte	0x12f7
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_gc_page_info
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0xbe4
-	.uleb128 0x1d
-	.4byte	.LASF283
-	.byte	0x11
+	.4byte	0xbd7
+	.uleb128 0x1c
+	.4byte	.LASF282
+	.byte	0x10
 	.byte	0x8c
-	.4byte	0x63b
+	.4byte	0x62e
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	p_gc_blk_tbl
-	.uleb128 0x1d
-	.4byte	.LASF284
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF283
+	.byte	0x10
 	.byte	0x8d
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_blk_num
-	.uleb128 0x1d
-	.4byte	.LASF285
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF284
+	.byte	0x10
 	.byte	0x8e
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_page_offset
-	.uleb128 0x1d
-	.4byte	.LASF286
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF285
+	.byte	0x10
 	.byte	0x8f
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_cur_blk_valid_pages
-	.uleb128 0x1d
-	.4byte	.LASF287
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF286
+	.byte	0x10
 	.byte	0x90
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_cur_blk_max_valid_pages
-	.uleb128 0x1d
-	.4byte	.LASF288
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF287
+	.byte	0x10
 	.byte	0x91
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_next_blk
-	.uleb128 0x1d
-	.4byte	.LASF289
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF288
+	.byte	0x10
 	.byte	0x92
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_next_blk_1
-	.uleb128 0x1d
-	.4byte	.LASF290
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF289
+	.byte	0x10
 	.byte	0x93
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_bad_block_temp_num
-	.uleb128 0x1d
-	.4byte	.LASF291
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF290
+	.byte	0x10
 	.byte	0x94
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_bad_block_gc_index
-	.uleb128 0xc
-	.4byte	0x30c
-	.4byte	0x13b3
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x2ff
+	.4byte	0x13a6
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x10
 	.byte	0
-	.uleb128 0x1d
-	.4byte	.LASF292
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF291
+	.byte	0x10
 	.byte	0x95
-	.4byte	0x13a3
+	.4byte	0x1396
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_bad_block_temp_tbl
-	.uleb128 0x1d
-	.4byte	.LASF293
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF292
+	.byte	0x10
 	.byte	0x97
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_free_blk_threshold
-	.uleb128 0x1d
-	.4byte	.LASF294
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF293
+	.byte	0x10
 	.byte	0x98
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_merge_free_blk_threshold
-	.uleb128 0x1d
-	.4byte	.LASF295
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF294
+	.byte	0x10
 	.byte	0x99
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_blk_index
-	.uleb128 0x1d
-	.4byte	.LASF296
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF295
+	.byte	0x10
 	.byte	0x9b
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_totle_gc_page_count
-	.uleb128 0x1d
-	.4byte	.LASF297
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF296
+	.byte	0x10
 	.byte	0x9c
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_totle_write_page_count
-	.uleb128 0x1d
-	.4byte	.LASF298
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF297
+	.byte	0x10
 	.byte	0x9d
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_totle_write_sector
-	.uleb128 0x1d
-	.4byte	.LASF299
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF298
+	.byte	0x10
 	.byte	0x9e
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_totle_read_sector
-	.uleb128 0x1d
-	.4byte	.LASF300
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF299
+	.byte	0x10
 	.byte	0xa0
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_totle_discard_page_count
-	.uleb128 0x1d
-	.4byte	.LASF301
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF300
+	.byte	0x10
 	.byte	0xa1
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_totle_read_page_count
-	.uleb128 0x1d
-	.4byte	.LASF302
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF301
+	.byte	0x10
 	.byte	0xa2
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_tmp_data_superblock_id
-	.uleb128 0x1d
-	.4byte	.LASF303
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF302
+	.byte	0x10
 	.byte	0xa3
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_totle_cache_write_count
-	.uleb128 0x1d
-	.4byte	.LASF304
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF303
+	.byte	0x10
 	.byte	0xa4
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_totle_l2p_write_count
-	.uleb128 0x1d
-	.4byte	.LASF305
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF304
+	.byte	0x10
 	.byte	0xa6
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_totle_mlc_erase_count
-	.uleb128 0x1d
-	.4byte	.LASF306
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF305
+	.byte	0x10
 	.byte	0xa7
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_totle_avg_erase_count
-	.uleb128 0x1d
-	.4byte	.LASF307
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF306
+	.byte	0x10
 	.byte	0xa8
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_min_erase_count
-	.uleb128 0x1d
-	.4byte	.LASF308
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF307
+	.byte	0x10
 	.byte	0xa9
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_totle_slc_erase_count
-	.uleb128 0x1d
-	.4byte	.LASF309
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF308
+	.byte	0x10
 	.byte	0xaa
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_totle_sys_slc_erase_count
-	.uleb128 0x1d
-	.4byte	.LASF310
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF309
+	.byte	0x10
 	.byte	0xab
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_max_erase_count
-	.uleb128 0x1d
-	.4byte	.LASF311
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF310
+	.byte	0x10
 	.byte	0xac
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_in_gc_progress
-	.uleb128 0x1d
-	.4byte	.LASF312
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF311
+	.byte	0x10
 	.byte	0xad
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_in_swl_replace
-	.uleb128 0x1d
-	.4byte	.LASF313
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF312
+	.byte	0x10
 	.byte	0xae
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_ftl_nand_free_count
-	.uleb128 0x1d
-	.4byte	.LASF314
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF313
+	.byte	0x10
 	.byte	0xaf
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_head_data_block
-	.uleb128 0x1d
-	.4byte	.LASF315
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF314
+	.byte	0x10
 	.byte	0xb0
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_head_data_block_count
-	.uleb128 0x1d
-	.4byte	.LASF316
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF315
+	.byte	0x10
 	.byte	0xb1
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_gc_skip_write_count
-	.uleb128 0x1d
-	.4byte	.LASF317
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF316
+	.byte	0x10
 	.byte	0xb2
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_cur_erase_blk
-	.uleb128 0x1d
-	.4byte	.LASF318
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF317
+	.byte	0x10
 	.byte	0xb4
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_recovery_page_num
-	.uleb128 0x1d
-	.4byte	.LASF319
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF318
+	.byte	0x10
 	.byte	0xb5
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_recovery_page_min_ver
-	.uleb128 0xc
-	.4byte	0x317
-	.4byte	0x159f
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x30a
+	.4byte	0x1592
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x1f
 	.byte	0
-	.uleb128 0x1d
-	.4byte	.LASF320
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF319
+	.byte	0x10
 	.byte	0xb6
-	.4byte	0x158f
+	.4byte	0x1582
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_recovery_ppa_tbl
-	.uleb128 0x1d
-	.4byte	.LASF321
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF320
+	.byte	0x10
 	.byte	0xb7
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	c_mlc_erase_count_value
-	.uleb128 0x1d
-	.4byte	.LASF322
-	.byte	0x11
+	.uleb128 0x1c
+	.4byte	.LASF321
+	.byte	0x10
 	.byte	0xb8
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_power_lost_recovery_flag
-	.uleb128 0x9
-	.4byte	.LASF323
-	.byte	0xe
+	.uleb128 0x8
+	.4byte	.LASF322
+	.byte	0xd
 	.byte	0x14
-	.4byte	0x387
-	.uleb128 0x9
-	.4byte	.LASF324
-	.byte	0xe
+	.4byte	0x37a
+	.uleb128 0x8
+	.4byte	.LASF323
+	.byte	0xd
 	.byte	0x15
-	.4byte	0x387
-	.uleb128 0x9
-	.4byte	.LASF325
-	.byte	0xe
+	.4byte	0x37a
+	.uleb128 0x8
+	.4byte	.LASF324
+	.byte	0xd
 	.byte	0x16
-	.4byte	0x429
-	.uleb128 0xc
-	.4byte	0x99
-	.4byte	0x1604
-	.uleb128 0x19
-	.4byte	0x2e
+	.4byte	0x41c
+	.uleb128 0xb
+	.4byte	0x97
+	.4byte	0x15f7
+	.uleb128 0x18
+	.4byte	0x2c
 	.2byte	0x3ff
 	.byte	0
-	.uleb128 0x9
-	.4byte	.LASF326
-	.byte	0xe
+	.uleb128 0x8
+	.4byte	.LASF325
+	.byte	0xd
 	.byte	0x17
-	.4byte	0x15f3
-	.uleb128 0x1d
-	.4byte	.LASF327
+	.4byte	0x15e6
+	.uleb128 0x1c
+	.4byte	.LASF326
 	.byte	0x3
 	.byte	0x5
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	DeviceCapacity
-	.uleb128 0x1d
-	.4byte	.LASF328
+	.uleb128 0x1c
+	.4byte	.LASF327
 	.byte	0x3
 	.byte	0x6
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	gFtlInitStatus
-	.uleb128 0x9
+	.uleb128 0x8
+	.4byte	.LASF328
+	.byte	0x3
+	.byte	0x6c
+	.4byte	0x30a
+	.uleb128 0x8
 	.4byte	.LASF329
 	.byte	0x3
 	.byte	0x6d
-	.4byte	0x317
-	.uleb128 0x9
+	.4byte	0x30a
+	.uleb128 0x8
 	.4byte	.LASF330
 	.byte	0x3
 	.byte	0x6e
-	.4byte	0x317
-	.uleb128 0x9
+	.4byte	0x30a
+	.uleb128 0x8
 	.4byte	.LASF331
 	.byte	0x3
 	.byte	0x6f
-	.4byte	0x317
-	.uleb128 0x9
+	.4byte	0x30a
+	.uleb128 0x1d
 	.4byte	.LASF332
 	.byte	0x3
-	.byte	0x70
-	.4byte	0x317
-	.uleb128 0x1e
-	.4byte	.LASF333
-	.byte	0x3
-	.2byte	0x3bd
-	.4byte	0x64
+	.2byte	0x3c0
+	.4byte	0x62
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	power_up_flag
-	.uleb128 0x1f
-	.4byte	.LASF337
+	.uleb128 0x1e
+	.4byte	.LASF336
 	.byte	0x3
-	.2byte	0x480
-	.4byte	0x317
+	.2byte	0x483
+	.4byte	0x30a
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	gc_discard_updated
-	.uleb128 0x1e
-	.4byte	.LASF334
+	.uleb128 0x1d
+	.4byte	.LASF333
 	.byte	0x2
-	.2byte	0x35b
-	.4byte	0x30c
+	.2byte	0x38c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	g_ect_tbl_power_up_flush
-	.uleb128 0x1e
-	.4byte	.LASF335
+	.uleb128 0x1d
+	.4byte	.LASF334
 	.byte	0x2
-	.2byte	0x370
-	.4byte	0x30c
+	.2byte	0x3a1
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	FtlUpdateVaildLpnCount
-	.uleb128 0xc
-	.4byte	0x30c
-	.4byte	0x16b6
-	.uleb128 0x19
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x2ff
+	.4byte	0x16a9
+	.uleb128 0x18
+	.4byte	0x2c
 	.2byte	0x1fff
 	.byte	0
-	.uleb128 0x1e
-	.4byte	.LASF336
+	.uleb128 0x1d
+	.4byte	.LASF335
 	.byte	0x2
-	.2byte	0x8ad
-	.4byte	0x16a5
+	.2byte	0x8df
+	.4byte	0x1698
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	check_vpc_table
-	.uleb128 0x20
-	.4byte	.LASF338
+	.uleb128 0x1f
+	.4byte	.LASF337
 	.byte	0x5
 	.byte	0x6d
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	ftl_gc_temp_block_bops_scan_page_addr
-	.uleb128 0x1e
-	.4byte	.LASF339
+	.uleb128 0x1d
+	.4byte	.LASF338
 	.byte	0x5
 	.2byte	0x1d4
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	gc_ink_free_return_value
-	.uleb128 0x20
-	.4byte	.LASF340
+	.uleb128 0x1f
+	.4byte	.LASF339
 	.byte	0x1
 	.byte	0xe
-	.4byte	0x15f3
+	.4byte	0x15e6
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	check_buf
-	.uleb128 0x21
-	.4byte	0x1604
+	.uleb128 0x20
+	.4byte	0x15f7
 	.byte	0x1
 	.byte	0xf
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	ftl_temp_buf
-	.uleb128 0xc
-	.4byte	0x99
-	.4byte	0x1719
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x97
+	.4byte	0x170c
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x7f
 	.byte	0
-	.uleb128 0x20
-	.4byte	.LASF341
+	.uleb128 0x1f
+	.4byte	.LASF340
 	.byte	0x1
 	.byte	0x10
-	.4byte	0x1709
+	.4byte	0x16fc
 	.uleb128 0x5
 	.byte	0x3
 	.4byte	check_spare_buf
-	.uleb128 0x22
-	.4byte	.LASF344
+	.uleb128 0x21
+	.4byte	.LASF343
 	.byte	0x1
 	.byte	0xd2
-	.4byte	0x64
-	.4byte	.LFB269
-	.4byte	.LFE269-.LFB269
+	.4byte	0x62
+	.4byte	.LFB279
+	.4byte	.LFE279-.LFB279
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x177a
-	.uleb128 0x23
-	.4byte	.LASF342
+	.4byte	0x176d
+	.uleb128 0x22
+	.4byte	.LASF341
 	.byte	0x1
 	.byte	0xd2
-	.4byte	0x25
+	.4byte	0x176d
 	.4byte	.LLST290
-	.uleb128 0x23
-	.4byte	.LASF343
+	.uleb128 0x22
+	.4byte	.LASF342
 	.byte	0x1
 	.byte	0xd2
-	.4byte	0x25
+	.4byte	0x176d
 	.4byte	.LLST291
-	.uleb128 0x23
-	.4byte	.LASF115
+	.uleb128 0x22
+	.4byte	.LASF114
 	.byte	0x1
 	.byte	0xd2
-	.4byte	0x41
+	.4byte	0x3f
 	.4byte	.LLST292
-	.uleb128 0x24
-	.4byte	.LVL1646
-	.4byte	0x6708
+	.uleb128 0x23
+	.4byte	.LVL1636
+	.4byte	0x67cf
 	.byte	0
-	.uleb128 0x22
-	.4byte	.LASF345
+	.uleb128 0x24
+	.byte	0x4
+	.uleb128 0x21
+	.4byte	.LASF344
 	.byte	0x1
 	.byte	0xcd
-	.4byte	0x25
-	.4byte	.LFB268
-	.4byte	.LFE268-.LFB268
+	.4byte	0x176d
+	.4byte	.LFB278
+	.4byte	.LFE278-.LFB278
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x17ca
-	.uleb128 0x23
+	.4byte	0x17bf
+	.uleb128 0x22
+	.4byte	.LASF345
+	.byte	0x1
+	.byte	0xcd
+	.4byte	0x176d
+	.4byte	.LLST172
+	.uleb128 0x22
 	.4byte	.LASF346
 	.byte	0x1
 	.byte	0xcd
-	.4byte	0x25
-	.4byte	.LLST170
-	.uleb128 0x23
+	.4byte	0x17bf
+	.4byte	.LLST173
+	.uleb128 0x22
 	.4byte	.LASF347
 	.byte	0x1
 	.byte	0xcd
-	.4byte	0x17ca
-	.4byte	.LLST171
+	.4byte	0x3f
+	.4byte	.LLST174
 	.uleb128 0x23
-	.4byte	.LASF348
-	.byte	0x1
-	.byte	0xcd
-	.4byte	0x41
-	.4byte	.LLST172
-	.uleb128 0x24
-	.4byte	.LVL835
-	.4byte	0x6713
+	.4byte	.LVL833
+	.4byte	0x67da
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x17d0
+	.4byte	0x17c5
 	.uleb128 0x25
 	.uleb128 0x26
-	.4byte	.LASF351
+	.4byte	.LASF350
 	.byte	0x1
 	.byte	0xc8
-	.4byte	0x25
+	.4byte	0x176d
 	.byte	0x1
-	.4byte	0x1815
+	.4byte	0x180a
 	.uleb128 0x27
 	.ascii	"s\000"
 	.byte	0x1
 	.byte	0xc8
-	.4byte	0x25
+	.4byte	0x176d
 	.uleb128 0x27
 	.ascii	"c\000"
 	.byte	0x1
 	.byte	0xc8
-	.4byte	0x64
+	.4byte	0x62
 	.uleb128 0x27
 	.ascii	"n\000"
 	.byte	0x1
 	.byte	0xc8
-	.4byte	0x41
+	.4byte	0x3f
 	.uleb128 0x28
 	.uleb128 0x29
 	.ascii	"__p\000"
 	.byte	0x1
 	.byte	0xca
-	.4byte	0x25
+	.4byte	0x176d
 	.uleb128 0x29
 	.ascii	"__n\000"
 	.byte	0x1
 	.byte	0xca
-	.4byte	0xce
+	.4byte	0xcc
 	.byte	0
 	.byte	0
 	.uleb128 0x2a
-	.4byte	.LASF349
+	.4byte	.LASF348
 	.byte	0x1
 	.byte	0xb6
-	.4byte	0x8e
-	.4byte	.LFB266
-	.4byte	.LFE266-.LFB266
+	.4byte	0x8c
+	.4byte	.LFB276
+	.4byte	.LFE276-.LFB276
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x190b
-	.uleb128 0x23
-	.4byte	.LASF350
+	.4byte	0x1900
+	.uleb128 0x22
+	.4byte	.LASF349
 	.byte	0x1
 	.byte	0xb6
-	.4byte	0x47a
-	.4byte	.LLST104
+	.4byte	0x46d
+	.4byte	.LLST105
 	.uleb128 0x2b
 	.ascii	"die\000"
 	.byte	0x1
 	.byte	0xb6
-	.4byte	0x99
-	.4byte	.LLST105
+	.4byte	0x97
+	.4byte	.LLST106
 	.uleb128 0x2c
-	.4byte	.LASF115
+	.4byte	.LASF114
 	.byte	0x1
 	.byte	0xb8
-	.4byte	0x83
-	.4byte	.LLST106
+	.4byte	0x81
+	.4byte	.LLST107
 	.uleb128 0x29
 	.ascii	"i\000"
 	.byte	0x1
 	.byte	0xb8
-	.4byte	0x83
+	.4byte	0x81
 	.uleb128 0x2d
-	.4byte	0x17d1
-	.4byte	.LBB337
-	.4byte	.Ldebug_ranges0+0xd8
+	.4byte	0x17c6
+	.4byte	.LBB359
+	.4byte	.Ldebug_ranges0+0x120
 	.byte	0x1
 	.byte	0xba
-	.4byte	0x18b5
+	.4byte	0x18aa
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0xd8
+	.4byte	.Ldebug_ranges0+0x120
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0xd8
+	.4byte	.Ldebug_ranges0+0x120
 	.uleb128 0x30
-	.4byte	0x17fd
+	.4byte	0x17f2
 	.uleb128 0x30
-	.4byte	0x1808
-	.uleb128 0x24
-	.4byte	.LVL468
-	.4byte	0x671c
+	.4byte	0x17fd
+	.uleb128 0x23
+	.4byte	.LVL483
+	.4byte	0x67e3
 	.byte	0
 	.byte	0
 	.byte	0
 	.uleb128 0x31
-	.4byte	0x17d1
-	.4byte	.LBB346
-	.4byte	.LBE346-.LBB346
+	.4byte	0x17c6
+	.4byte	.LBB368
+	.4byte	.LBE368-.LBB368
 	.byte	0x1
 	.byte	0xbd
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB347
-	.4byte	.LBE347-.LBB347
+	.4byte	.LBB369
+	.4byte	.LBE369-.LBB369
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB348
-	.4byte	.LBE348-.LBB348
+	.4byte	.LBB370
+	.4byte	.LBE370-.LBB370
 	.uleb128 0x30
-	.4byte	0x17fd
+	.4byte	0x17f2
 	.uleb128 0x30
-	.4byte	0x1808
-	.uleb128 0x24
-	.4byte	.LVL472
-	.4byte	0x671c
+	.4byte	0x17fd
+	.uleb128 0x23
+	.4byte	.LVL487
+	.4byte	0x67e3
 	.byte	0
 	.byte	0
 	.byte	0
 	.byte	0
 	.uleb128 0x26
-	.4byte	.LASF352
+	.4byte	.LASF351
 	.byte	0x1
 	.byte	0x9b
-	.4byte	0x322
+	.4byte	0x315
 	.byte	0x1
-	.4byte	0x194f
+	.4byte	0x1944
 	.uleb128 0x33
-	.4byte	.LASF353
+	.4byte	.LASF352
 	.byte	0x1
 	.byte	0x9b
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x29
 	.ascii	"sts\000"
 	.byte	0x1
 	.byte	0x9d
-	.4byte	0x322
+	.4byte	0x315
 	.uleb128 0x34
-	.4byte	.LASF354
+	.4byte	.LASF353
 	.byte	0x1
 	.byte	0x9e
-	.4byte	0x194f
+	.4byte	0x1944
 	.uleb128 0x29
 	.ascii	"req\000"
 	.byte	0x1
 	.byte	0x9f
-	.4byte	0x338
+	.4byte	0x32b
 	.uleb128 0x35
 	.ascii	"out\000"
 	.byte	0x1
 	.byte	0xb1
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x317
-	.4byte	0x195f
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x30a
+	.4byte	0x1954
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0xf
 	.byte	0
 	.uleb128 0x2a
-	.4byte	.LASF355
+	.4byte	.LASF354
 	.byte	0x1
 	.byte	0x85
-	.4byte	0x8e
-	.4byte	.LFB264
-	.4byte	.LFE264-.LFB264
+	.4byte	0x8c
+	.4byte	.LFB274
+	.4byte	.LFE274-.LFB274
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x19f5
-	.uleb128 0x23
-	.4byte	.LASF356
+	.4byte	0x19ea
+	.uleb128 0x22
+	.4byte	.LASF355
 	.byte	0x1
 	.byte	0x85
-	.4byte	0x25
+	.4byte	0x176d
 	.4byte	.LLST91
-	.uleb128 0x23
-	.4byte	.LASF357
+	.uleb128 0x22
+	.4byte	.LASF356
 	.byte	0x1
 	.byte	0x85
-	.4byte	0x99
+	.4byte	0x97
 	.4byte	.LLST92
-	.uleb128 0x23
-	.4byte	.LASF358
+	.uleb128 0x22
+	.4byte	.LASF357
 	.byte	0x1
 	.byte	0x85
-	.4byte	0x99
+	.4byte	0x97
 	.4byte	.LLST93
 	.uleb128 0x36
 	.ascii	"i\000"
 	.byte	0x1
 	.byte	0x87
-	.4byte	0x99
+	.4byte	0x97
 	.uleb128 0x1
-	.byte	0x56
+	.byte	0x55
 	.uleb128 0x29
 	.ascii	"cs\000"
 	.byte	0x1
 	.byte	0x87
-	.4byte	0x99
+	.4byte	0x97
 	.uleb128 0x34
-	.4byte	.LASF62
+	.4byte	.LASF61
 	.byte	0x1
 	.byte	0x87
-	.4byte	0x99
-	.uleb128 0x20
-	.4byte	.LASF359
+	.4byte	0x97
+	.uleb128 0x1f
+	.4byte	.LASF358
 	.byte	0x1
 	.byte	0x87
-	.4byte	0x99
+	.4byte	0x97
 	.uleb128 0x2
 	.byte	0x91
 	.sleb128 -44
@@ -29524,6862 +28234,6900 @@ check_vpc_table:
 	.ascii	"req\000"
 	.byte	0x1
 	.byte	0x88
-	.4byte	0xf4b
-	.uleb128 0x20
-	.4byte	.LASF360
+	.4byte	0xf3e
+	.uleb128 0x1f
+	.4byte	.LASF359
 	.byte	0x1
 	.byte	0x89
-	.4byte	0x99
+	.4byte	0x97
 	.uleb128 0x1
 	.byte	0x59
-	.uleb128 0x24
-	.4byte	.LVL403
-	.4byte	0x1bb3
+	.uleb128 0x23
+	.4byte	.LVL404
+	.4byte	0x1ba9
 	.byte	0
 	.uleb128 0x2a
-	.4byte	.LASF361
+	.4byte	.LASF360
 	.byte	0x1
 	.byte	0x49
-	.4byte	0x8e
-	.4byte	.LFB263
-	.4byte	.LFE263-.LFB263
+	.4byte	0x8c
+	.4byte	.LFB273
+	.4byte	.LFE273-.LFB273
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x1af0
-	.uleb128 0x23
-	.4byte	.LASF356
+	.4byte	0x1ae4
+	.uleb128 0x22
+	.4byte	.LASF355
 	.byte	0x1
 	.byte	0x49
-	.4byte	0x25
+	.4byte	0x176d
 	.4byte	.LLST86
-	.uleb128 0x23
-	.4byte	.LASF358
+	.uleb128 0x22
+	.4byte	.LASF357
 	.byte	0x1
 	.byte	0x49
-	.4byte	0x99
+	.4byte	0x97
 	.4byte	.LLST87
-	.uleb128 0x23
-	.4byte	.LASF357
+	.uleb128 0x22
+	.4byte	.LASF356
 	.byte	0x1
 	.byte	0x49
-	.4byte	0x99
+	.4byte	0x97
 	.4byte	.LLST88
-	.uleb128 0x23
-	.4byte	.LASF362
+	.uleb128 0x22
+	.4byte	.LASF361
 	.byte	0x1
 	.byte	0x49
-	.4byte	0x99
+	.4byte	0x97
 	.4byte	.LLST89
 	.uleb128 0x29
 	.ascii	"i\000"
 	.byte	0x1
 	.byte	0x4b
-	.4byte	0x99
+	.4byte	0x97
 	.uleb128 0x29
 	.ascii	"cs\000"
 	.byte	0x1
 	.byte	0x4b
-	.4byte	0x99
+	.4byte	0x97
 	.uleb128 0x34
-	.4byte	.LASF62
+	.4byte	.LASF61
 	.byte	0x1
 	.byte	0x4b
-	.4byte	0x99
-	.uleb128 0x20
-	.4byte	.LASF359
+	.4byte	0x97
+	.uleb128 0x1f
+	.4byte	.LASF358
 	.byte	0x1
 	.byte	0x4b
-	.4byte	0x99
+	.4byte	0x97
 	.uleb128 0x3
 	.byte	0x91
-	.sleb128 -72
+	.sleb128 -68
 	.uleb128 0x2c
-	.4byte	.LASF360
+	.4byte	.LASF359
 	.byte	0x1
 	.byte	0x4c
-	.4byte	0x99
+	.4byte	0x97
 	.4byte	.LLST90
 	.uleb128 0x29
 	.ascii	"req\000"
 	.byte	0x1
 	.byte	0x4d
-	.4byte	0xf4b
+	.4byte	0xf3e
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x1b00
+	.4byte	.LASF362
+	.4byte	0x1af4
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.7625
+	.4byte	__func__.4795
 	.uleb128 0x38
-	.4byte	.Ldebug_ranges0+0x88
-	.4byte	0x1add
-	.uleb128 0x20
-	.4byte	.LASF364
+	.4byte	.Ldebug_ranges0+0xa0
+	.4byte	0x1ad1
+	.uleb128 0x1f
+	.4byte	.LASF363
 	.byte	0x1
 	.byte	0x68
-	.4byte	0x338
-	.uleb128 0x3
+	.4byte	0x32b
+	.uleb128 0x2
 	.byte	0x91
-	.sleb128 -68
-	.uleb128 0x24
-	.4byte	.LVL388
-	.4byte	0x1b05
-	.uleb128 0x24
+	.sleb128 -64
+	.uleb128 0x23
 	.4byte	.LVL389
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	0x1af9
+	.uleb128 0x23
 	.4byte	.LVL390
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL391
-	.4byte	0x6727
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL392
+	.4byte	0x67ee
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL377
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL379
-	.4byte	0x1bb3
+	.uleb128 0x23
+	.4byte	.LVL378
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL380
+	.4byte	0x1ba9
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x3c
-	.4byte	0x1b00
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x3a
+	.4byte	0x1af4
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0xe
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x1af0
+	.uleb128 0x3
+	.4byte	0x1ae4
 	.uleb128 0x2a
-	.4byte	.LASF365
+	.4byte	.LASF364
 	.byte	0x1
 	.byte	0x2b
-	.4byte	0x8e
-	.4byte	.LFB262
-	.4byte	.LFE262-.LFB262
+	.4byte	0x8c
+	.4byte	.LFB272
+	.4byte	.LFE272-.LFB272
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x1bb3
-	.uleb128 0x23
-	.4byte	.LASF356
+	.4byte	0x1ba9
+	.uleb128 0x22
+	.4byte	.LASF355
 	.byte	0x1
 	.byte	0x2b
-	.4byte	0x25
-	.4byte	.LLST79
-	.uleb128 0x23
-	.4byte	.LASF358
+	.4byte	0x176d
+	.4byte	.LLST78
+	.uleb128 0x22
+	.4byte	.LASF357
 	.byte	0x1
 	.byte	0x2b
-	.4byte	0x99
-	.4byte	.LLST80
-	.uleb128 0x23
-	.4byte	.LASF357
+	.4byte	0x97
+	.4byte	.LLST79
+	.uleb128 0x22
+	.4byte	.LASF356
 	.byte	0x1
 	.byte	0x2b
-	.4byte	0x99
-	.4byte	.LLST81
+	.4byte	0x97
+	.4byte	.LLST80
 	.uleb128 0x36
 	.ascii	"i\000"
 	.byte	0x1
 	.byte	0x2d
-	.4byte	0x99
+	.4byte	0x97
 	.uleb128 0x1
-	.byte	0x55
+	.byte	0x56
 	.uleb128 0x29
 	.ascii	"cs\000"
 	.byte	0x1
 	.byte	0x2d
-	.4byte	0x99
+	.4byte	0x97
 	.uleb128 0x34
-	.4byte	.LASF62
+	.4byte	.LASF61
 	.byte	0x1
 	.byte	0x2d
-	.4byte	0x99
-	.uleb128 0x20
-	.4byte	.LASF359
+	.4byte	0x97
+	.uleb128 0x1f
+	.4byte	.LASF358
 	.byte	0x1
 	.byte	0x2d
-	.4byte	0x99
+	.4byte	0x97
 	.uleb128 0x2
 	.byte	0x91
-	.sleb128 -52
-	.uleb128 0x20
-	.4byte	.LASF360
+	.sleb128 -48
+	.uleb128 0x2c
+	.4byte	.LASF359
 	.byte	0x1
 	.byte	0x2e
-	.4byte	0x99
-	.uleb128 0x1
-	.byte	0x5a
+	.4byte	0x97
+	.4byte	.LLST81
 	.uleb128 0x29
 	.ascii	"req\000"
 	.byte	0x1
 	.byte	0x2f
-	.4byte	0xf4b
+	.4byte	0xf3e
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x1b00
+	.4byte	.LASF362
+	.4byte	0x1af4
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.7608
-	.uleb128 0x24
-	.4byte	.LVL348
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL351
-	.4byte	0x1bb3
+	.4byte	__func__.4778
+	.uleb128 0x23
+	.4byte	.LVL347
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL350
+	.4byte	0x1ba9
 	.byte	0
 	.uleb128 0x39
-	.4byte	.LASF669
+	.4byte	.LASF667
 	.byte	0x1
 	.byte	0x11
-	.4byte	0x99
-	.4byte	.LFB261
-	.4byte	.LFE261-.LFB261
+	.4byte	0x97
+	.4byte	.LFB271
+	.4byte	.LFE271-.LFB271
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x1c5b
+	.4byte	0x1c51
 	.uleb128 0x2b
 	.ascii	"req\000"
 	.byte	0x1
 	.byte	0x11
-	.4byte	0xf4b
+	.4byte	0xf3e
 	.4byte	.LLST0
-	.uleb128 0x23
-	.4byte	.LASF359
+	.uleb128 0x22
+	.4byte	.LASF358
 	.byte	0x1
 	.byte	0x11
-	.4byte	0x381
+	.4byte	0x374
 	.4byte	.LLST1
-	.uleb128 0x23
-	.4byte	.LASF366
+	.uleb128 0x22
+	.4byte	.LASF365
 	.byte	0x1
 	.byte	0x11
-	.4byte	0x381
+	.4byte	0x374
 	.4byte	.LLST2
 	.uleb128 0x34
-	.4byte	.LASF367
+	.4byte	.LASF366
 	.byte	0x1
 	.byte	0x13
-	.4byte	0x83
+	.4byte	0x81
 	.uleb128 0x34
-	.4byte	.LASF368
+	.4byte	.LASF367
 	.byte	0x1
 	.byte	0x13
-	.4byte	0x83
+	.4byte	0x81
 	.uleb128 0x2c
-	.4byte	.LASF72
+	.4byte	.LASF71
 	.byte	0x1
 	.byte	0x14
-	.4byte	0x83
+	.4byte	0x81
 	.4byte	.LLST3
 	.uleb128 0x2c
-	.4byte	.LASF73
+	.4byte	.LASF72
 	.byte	0x1
 	.byte	0x14
-	.4byte	0x83
+	.4byte	0x81
 	.4byte	.LLST4
 	.uleb128 0x2c
-	.4byte	.LASF369
+	.4byte	.LASF368
 	.byte	0x1
 	.byte	0x15
-	.4byte	0x99
+	.4byte	0x97
 	.4byte	.LLST5
 	.uleb128 0x2c
-	.4byte	.LASF63
+	.4byte	.LASF62
 	.byte	0x1
 	.byte	0x16
-	.4byte	0x99
+	.4byte	0x97
 	.4byte	.LLST6
 	.uleb128 0x2c
-	.4byte	.LASF370
+	.4byte	.LASF369
 	.byte	0x1
 	.byte	0x17
-	.4byte	0x99
+	.4byte	0x97
 	.4byte	.LLST7
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF371
+	.4byte	.LASF370
 	.byte	0x5
-	.2byte	0x2f8
-	.4byte	0x99
-	.4byte	.LFB260
-	.4byte	.LFE260-.LFB260
+	.2byte	0x2f4
+	.4byte	0x97
+	.4byte	.LFB270
+	.4byte	.LFE270-.LFB270
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x1c7f
-	.uleb128 0x24
-	.4byte	.LVL1386
-	.4byte	0x1c7f
+	.4byte	0x1c75
+	.uleb128 0x23
+	.4byte	.LVL1369
+	.4byte	0x1c75
 	.byte	0
 	.uleb128 0x3b
-	.4byte	.LASF372
+	.4byte	.LASF371
 	.byte	0x5
 	.2byte	0x1d5
-	.4byte	0x64
+	.4byte	0x62
 	.byte	0x1
-	.4byte	0x1d4c
+	.4byte	0x1d42
 	.uleb128 0x3c
-	.4byte	.LASF373
+	.4byte	.LASF372
 	.byte	0x5
 	.2byte	0x1d5
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x3c
-	.4byte	.LASF374
+	.4byte	.LASF373
 	.byte	0x5
 	.2byte	0x1d5
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x3d
-	.4byte	.LASF375
+	.4byte	.LASF374
 	.byte	0x5
 	.2byte	0x1d7
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x3e
 	.ascii	"lpa\000"
 	.byte	0x5
 	.2byte	0x1d8
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x3e
 	.ascii	"ppa\000"
 	.byte	0x5
 	.2byte	0x1d8
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x3d
-	.4byte	.LASF376
+	.4byte	.LASF375
 	.byte	0x5
 	.2byte	0x1d9
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF86
+	.4byte	.LASF85
 	.byte	0x5
 	.2byte	0x1da
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF377
+	.4byte	.LASF376
 	.byte	0x5
 	.2byte	0x1da
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF378
+	.4byte	.LASF377
 	.byte	0x5
 	.2byte	0x1da
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF379
+	.4byte	.LASF378
 	.byte	0x5
 	.2byte	0x1da
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF380
+	.4byte	.LASF379
 	.byte	0x5
 	.2byte	0x1db
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF381
+	.4byte	.LASF380
 	.byte	0x5
 	.2byte	0x1dc
-	.4byte	0x1d4c
+	.4byte	0x1d42
 	.uleb128 0x3f
-	.4byte	.LASF382
+	.4byte	.LASF381
 	.byte	0x5
-	.2byte	0x276
+	.2byte	0x272
 	.uleb128 0x3f
-	.4byte	.LASF383
+	.4byte	.LASF382
 	.byte	0x5
-	.2byte	0x279
+	.2byte	0x275
 	.uleb128 0x40
-	.4byte	.LASF363
-	.4byte	0x1d62
-	.4byte	.LASF372
+	.4byte	.LASF362
+	.4byte	0x1d58
+	.4byte	.LASF371
 	.uleb128 0x28
 	.uleb128 0x3d
-	.4byte	.LASF384
+	.4byte	.LASF383
 	.byte	0x5
 	.2byte	0x1f3
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x77b
-	.uleb128 0xc
-	.4byte	0x3c
-	.4byte	0x1d62
-	.uleb128 0x17
-	.4byte	0x2e
+	.4byte	0x76e
+	.uleb128 0xb
+	.4byte	0x3a
+	.4byte	0x1d58
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x16
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x1d52
+	.uleb128 0x3
+	.4byte	0x1d48
 	.uleb128 0x3b
-	.4byte	.LASF385
+	.4byte	.LASF384
 	.byte	0x5
 	.2byte	0x1a2
-	.4byte	0x64
+	.4byte	0x62
 	.byte	0x1
-	.4byte	0x1dc7
+	.4byte	0x1dbd
 	.uleb128 0x3e
 	.ascii	"ret\000"
 	.byte	0x5
 	.2byte	0x1a4
-	.4byte	0x64
+	.4byte	0x62
 	.uleb128 0x3e
 	.ascii	"i\000"
 	.byte	0x5
 	.2byte	0x1a5
-	.4byte	0x64
+	.4byte	0x62
 	.uleb128 0x3e
 	.ascii	"ppa\000"
 	.byte	0x5
 	.2byte	0x1a6
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x3d
-	.4byte	.LASF354
+	.4byte	.LASF353
 	.byte	0x5
 	.2byte	0x1a7
-	.4byte	0x194f
+	.4byte	0x1944
 	.uleb128 0x41
-	.4byte	0x1db8
+	.4byte	0x1dae
 	.uleb128 0x3d
-	.4byte	.LASF386
+	.4byte	.LASF385
 	.byte	0x5
 	.2byte	0x1b1
-	.4byte	0x338
+	.4byte	0x32b
 	.byte	0
 	.uleb128 0x28
 	.uleb128 0x3d
-	.4byte	.LASF387
+	.4byte	.LASF386
 	.byte	0x5
 	.2byte	0x1c6
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0
 	.byte	0
 	.uleb128 0x3b
-	.4byte	.LASF388
+	.4byte	.LASF387
 	.byte	0x5
 	.2byte	0x185
-	.4byte	0x64
+	.4byte	0x62
 	.byte	0x1
-	.4byte	0x1e11
+	.4byte	0x1e07
 	.uleb128 0x3c
-	.4byte	.LASF389
+	.4byte	.LASF388
 	.byte	0x5
 	.2byte	0x185
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF377
+	.4byte	.LASF376
 	.byte	0x5
 	.2byte	0x187
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x3e
 	.ascii	"i\000"
 	.byte	0x5
 	.2byte	0x188
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x3e
 	.ascii	"j\000"
 	.byte	0x5
 	.2byte	0x188
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF179
+	.4byte	.LASF178
 	.byte	0x5
 	.2byte	0x189
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
 	.uleb128 0x42
-	.4byte	.LASF498
+	.4byte	.LASF497
 	.byte	0x5
 	.2byte	0x17a
-	.4byte	0x64
+	.4byte	0x62
 	.byte	0x1
 	.uleb128 0x3a
-	.4byte	.LASF390
+	.4byte	.LASF389
 	.byte	0x5
 	.2byte	0x166
-	.4byte	0x64
-	.4byte	.LFB255
-	.4byte	.LFE255-.LFB255
+	.4byte	0x62
+	.4byte	.LFB265
+	.4byte	.LFE265-.LFB265
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x1e7a
+	.4byte	0x1e70
 	.uleb128 0x43
-	.4byte	.LASF179
+	.4byte	.LASF178
 	.byte	0x5
 	.2byte	0x166
-	.4byte	0x30c
-	.4byte	.LLST78
+	.4byte	0x2ff
+	.4byte	.LLST77
 	.uleb128 0x3e
 	.ascii	"i\000"
 	.byte	0x5
 	.2byte	0x168
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF391
+	.4byte	.LASF390
 	.byte	0x5
 	.2byte	0x169
-	.4byte	0x30c
-	.uleb128 0x24
+	.4byte	0x2ff
+	.uleb128 0x23
+	.4byte	.LVL333
+	.4byte	0x4507
+	.uleb128 0x23
+	.4byte	.LVL334
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL335
-	.4byte	0x455a
-	.uleb128 0x24
-	.4byte	.LVL336
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL337
-	.4byte	0x1e7a
+	.4byte	0x1e70
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF392
+	.4byte	.LASF391
 	.byte	0x5
 	.2byte	0x158
-	.4byte	0x64
-	.4byte	.LFB254
-	.4byte	.LFE254-.LFB254
+	.4byte	0x62
+	.4byte	.LFB264
+	.4byte	.LFE264-.LFB264
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x1eae
+	.4byte	0x1ea4
 	.uleb128 0x43
-	.4byte	.LASF393
+	.4byte	.LASF392
 	.byte	0x5
 	.2byte	0x158
-	.4byte	0x30c
-	.4byte	.LLST77
-	.uleb128 0x24
-	.4byte	.LVL333
-	.4byte	0x6727
+	.4byte	0x2ff
+	.4byte	.LLST76
+	.uleb128 0x23
+	.4byte	.LVL330
+	.4byte	0x67ee
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF394
+	.4byte	.LASF393
 	.byte	0x5
 	.2byte	0x13b
-	.4byte	0x317
-	.4byte	.LFB253
-	.4byte	.LFE253-.LFB253
+	.4byte	0x30a
+	.4byte	.LFB263
+	.4byte	.LFE263-.LFB263
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x1f22
+	.4byte	0x1f18
 	.uleb128 0x3e
 	.ascii	"i\000"
 	.byte	0x5
 	.2byte	0x13d
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF381
+	.4byte	.LASF380
 	.byte	0x5
 	.2byte	0x13e
-	.4byte	0x1d4c
+	.4byte	0x1d42
 	.4byte	.LLST244
-	.uleb128 0x24
+	.uleb128 0x23
+	.4byte	.LVL1274
+	.4byte	0x19ea
+	.uleb128 0x23
+	.4byte	.LVL1275
+	.4byte	0x22ce
+	.uleb128 0x23
+	.4byte	.LVL1276
+	.4byte	0x20c7
+	.uleb128 0x23
+	.4byte	.LVL1277
+	.4byte	0x4af9
+	.uleb128 0x23
+	.4byte	.LVL1278
+	.4byte	0x493b
+	.uleb128 0x23
+	.4byte	.LVL1279
+	.4byte	0x2096
+	.uleb128 0x23
 	.4byte	.LVL1281
-	.4byte	0x19f5
-	.uleb128 0x24
-	.4byte	.LVL1282
-	.4byte	0x22d8
-	.uleb128 0x24
-	.4byte	.LVL1283
-	.4byte	0x20d1
-	.uleb128 0x24
-	.4byte	.LVL1284
-	.4byte	0x4b52
-	.uleb128 0x24
-	.4byte	.LVL1285
-	.4byte	0x4994
-	.uleb128 0x24
-	.4byte	.LVL1286
-	.4byte	0x20a0
-	.uleb128 0x24
-	.4byte	.LVL1288
-	.4byte	0x21fa
+	.4byte	0x21f0
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF395
+	.4byte	.LASF394
 	.byte	0x5
 	.2byte	0x12b
-	.4byte	0x317
-	.4byte	.LFB252
-	.4byte	.LFE252-.LFB252
+	.4byte	0x30a
+	.4byte	.LFB262
+	.4byte	.LFE262-.LFB262
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x1f7c
-	.uleb128 0x24
-	.4byte	.LVL1289
-	.4byte	0x4f6d
-	.uleb128 0x24
-	.4byte	.LVL1290
-	.4byte	0x20d1
-	.uleb128 0x24
-	.4byte	.LVL1291
-	.4byte	0x2512
-	.uleb128 0x24
-	.4byte	.LVL1292
-	.4byte	0x39f7
-	.uleb128 0x24
-	.4byte	.LVL1293
-	.4byte	0x3734
-	.uleb128 0x24
-	.4byte	.LVL1294
+	.4byte	0x1f72
+	.uleb128 0x23
+	.4byte	.LVL1282
+	.4byte	0x4f11
+	.uleb128 0x23
+	.4byte	.LVL1283
+	.4byte	0x20c7
+	.uleb128 0x23
+	.4byte	.LVL1284
+	.4byte	0x2508
+	.uleb128 0x23
+	.4byte	.LVL1285
+	.4byte	0x39f9
+	.uleb128 0x23
+	.4byte	.LVL1286
+	.4byte	0x3736
+	.uleb128 0x23
+	.4byte	.LVL1287
 	.4byte	0x3593
-	.uleb128 0x24
-	.4byte	.LVL1295
-	.4byte	0x23f1
+	.uleb128 0x23
+	.4byte	.LVL1288
+	.4byte	0x23e7
 	.byte	0
 	.uleb128 0x45
-	.4byte	.LASF454
+	.4byte	.LASF453
 	.byte	0x5
 	.2byte	0x120
 	.byte	0x1
-	.uleb128 0x22
-	.4byte	.LASF396
+	.uleb128 0x21
+	.4byte	.LASF395
 	.byte	0x5
 	.byte	0xd2
-	.4byte	0x317
-	.4byte	.LFB250
-	.4byte	.LFE250-.LFB250
+	.4byte	0x30a
+	.4byte	.LFB260
+	.4byte	.LFE260-.LFB260
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x20a0
-	.uleb128 0x23
-	.4byte	.LASF397
+	.4byte	0x2096
+	.uleb128 0x22
+	.4byte	.LASF396
 	.byte	0x5
 	.byte	0xd2
-	.4byte	0x12cb
-	.4byte	.LLST161
-	.uleb128 0x23
-	.4byte	.LASF398
+	.4byte	0x12be
+	.4byte	.LLST163
+	.uleb128 0x22
+	.4byte	.LASF397
 	.byte	0x5
 	.byte	0xd2
-	.4byte	0x317
-	.4byte	.LLST162
+	.4byte	0x30a
+	.4byte	.LLST164
 	.uleb128 0x2c
-	.4byte	.LASF379
+	.4byte	.LASF378
 	.byte	0x5
 	.byte	0xd4
-	.4byte	0x30c
-	.4byte	.LLST163
+	.4byte	0x2ff
+	.4byte	.LLST165
 	.uleb128 0x2c
-	.4byte	.LASF358
+	.4byte	.LASF357
 	.byte	0x5
 	.byte	0xd5
-	.4byte	0x30c
-	.4byte	.LLST164
+	.4byte	0x2ff
+	.4byte	.LLST166
 	.uleb128 0x29
 	.ascii	"req\000"
 	.byte	0x5
 	.byte	0xd5
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x34
-	.4byte	.LASF377
+	.4byte	.LASF376
 	.byte	0x5
 	.byte	0xd6
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x2c
-	.4byte	.LASF173
+	.4byte	.LASF172
 	.byte	0x5
 	.byte	0xd6
-	.4byte	0x30c
-	.4byte	.LLST165
+	.4byte	0x2ff
+	.4byte	.LLST167
 	.uleb128 0x2c
-	.4byte	.LASF171
+	.4byte	.LASF170
 	.byte	0x5
 	.byte	0xd6
-	.4byte	0x30c
-	.4byte	.LLST166
+	.4byte	0x2ff
+	.4byte	.LLST168
 	.uleb128 0x2c
-	.4byte	.LASF399
+	.4byte	.LASF398
 	.byte	0x5
 	.byte	0xd7
-	.4byte	0x317
-	.4byte	.LLST167
+	.4byte	0x30a
+	.4byte	.LLST169
 	.uleb128 0x2c
-	.4byte	.LASF400
+	.4byte	.LASF399
 	.byte	0x5
 	.byte	0xd8
-	.4byte	0x317
-	.4byte	.LLST168
+	.4byte	0x30a
+	.4byte	.LLST170
 	.uleb128 0x34
-	.4byte	.LASF401
+	.4byte	.LASF400
 	.byte	0x5
 	.byte	0xd9
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x2c
-	.4byte	.LASF381
+	.4byte	.LASF380
 	.byte	0x5
 	.byte	0xda
-	.4byte	0x1d4c
-	.4byte	.LLST169
+	.4byte	0x1d42
+	.4byte	.LLST171
 	.uleb128 0x46
-	.4byte	.LASF402
+	.4byte	.LASF401
 	.byte	0x5
 	.byte	0xe1
 	.uleb128 0x46
-	.4byte	.LASF403
+	.4byte	.LASF402
 	.byte	0x5
 	.byte	0xe5
 	.uleb128 0x47
-	.4byte	.LASF472
+	.4byte	.LASF471
 	.byte	0x5
 	.2byte	0x117
-	.4byte	.L960
-	.uleb128 0x24
-	.4byte	.LVL797
-	.4byte	0x20a0
-	.uleb128 0x24
-	.4byte	.LVL804
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL818
-	.4byte	0x458e
-	.uleb128 0x24
-	.4byte	.LVL825
-	.4byte	0x3147
-	.uleb128 0x24
-	.4byte	.LVL827
-	.4byte	0x21fa
-	.uleb128 0x24
+	.4byte	.L968
+	.uleb128 0x23
+	.4byte	.LVL800
+	.4byte	0x2096
+	.uleb128 0x23
+	.4byte	.LVL805
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL817
+	.4byte	0x453b
+	.uleb128 0x23
+	.4byte	.LVL824
+	.4byte	0x3149
+	.uleb128 0x23
+	.4byte	.LVL826
+	.4byte	0x21f0
+	.uleb128 0x23
+	.4byte	.LVL828
+	.4byte	0x420f
+	.uleb128 0x23
 	.4byte	.LVL829
-	.4byte	0x4228
-	.uleb128 0x24
-	.4byte	.LVL830
-	.4byte	0x20a0
+	.4byte	0x2096
 	.byte	0
 	.uleb128 0x48
-	.4byte	.LASF410
+	.4byte	.LASF409
 	.byte	0x5
 	.byte	0xc9
-	.4byte	.LFB249
-	.4byte	.LFE249-.LFB249
+	.4byte	.LFB259
+	.4byte	.LFE259-.LFB259
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x20d1
-	.uleb128 0x24
-	.4byte	.LVL791
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL792
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL793
-	.4byte	0x231c
+	.4byte	0x20c7
+	.uleb128 0x23
+	.4byte	.LVL795
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL796
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL797
+	.4byte	0x2312
 	.byte	0
-	.uleb128 0x22
-	.4byte	.LASF404
+	.uleb128 0x21
+	.4byte	.LASF403
 	.byte	0x5
 	.byte	0x6f
-	.4byte	0x64
-	.4byte	.LFB248
-	.4byte	.LFE248-.LFB248
+	.4byte	0x62
+	.4byte	.LFB258
+	.4byte	.LFE258-.LFB258
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x21e5
-	.uleb128 0x23
-	.4byte	.LASF405
+	.4byte	0x21db
+	.uleb128 0x22
+	.4byte	.LASF404
 	.byte	0x5
 	.byte	0x6f
-	.4byte	0x64
+	.4byte	0x62
 	.4byte	.LLST240
 	.uleb128 0x29
 	.ascii	"i\000"
 	.byte	0x5
 	.byte	0x71
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x34
-	.4byte	.LASF406
+	.4byte	.LASF405
 	.byte	0x5
 	.byte	0x71
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x2c
-	.4byte	.LASF407
+	.4byte	.LASF406
 	.byte	0x5
 	.byte	0x72
-	.4byte	0x317
+	.4byte	0x30a
 	.4byte	.LLST241
 	.uleb128 0x2c
-	.4byte	.LASF408
+	.4byte	.LASF407
 	.byte	0x5
 	.byte	0x73
-	.4byte	0x317
+	.4byte	0x30a
 	.4byte	.LLST242
 	.uleb128 0x34
-	.4byte	.LASF397
+	.4byte	.LASF396
 	.byte	0x5
 	.byte	0x74
-	.4byte	0x12cb
+	.4byte	0x12be
 	.uleb128 0x2c
-	.4byte	.LASF409
+	.4byte	.LASF408
 	.byte	0x5
 	.byte	0x75
-	.4byte	0x1304
+	.4byte	0x12f7
 	.4byte	.LLST243
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x21f5
+	.4byte	.LASF362
+	.4byte	0x21eb
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.7458
-	.uleb128 0x24
-	.4byte	.LVL1248
-	.4byte	0x1f85
-	.uleb128 0x24
+	.4byte	__func__.4628
+	.uleb128 0x23
+	.4byte	.LVL1241
+	.4byte	0x1f7b
+	.uleb128 0x23
+	.4byte	.LVL1243
+	.4byte	0x3736
+	.uleb128 0x23
+	.4byte	.LVL1244
+	.4byte	0x4af9
+	.uleb128 0x23
+	.4byte	.LVL1245
+	.4byte	0x493b
+	.uleb128 0x23
+	.4byte	.LVL1249
+	.4byte	0x4f11
+	.uleb128 0x23
 	.4byte	.LVL1250
-	.4byte	0x3734
-	.uleb128 0x24
-	.4byte	.LVL1251
-	.4byte	0x4b52
-	.uleb128 0x24
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL1252
-	.4byte	0x4994
-	.uleb128 0x24
+	.4byte	0x2331
+	.uleb128 0x23
+	.4byte	.LVL1254
+	.4byte	0x41ea
+	.uleb128 0x23
+	.4byte	.LVL1255
+	.4byte	0x39f9
+	.uleb128 0x23
 	.4byte	.LVL1256
-	.4byte	0x4f6d
-	.uleb128 0x24
-	.4byte	.LVL1257
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	0x3593
+	.uleb128 0x23
+	.4byte	.LVL1258
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL1259
-	.4byte	0x233b
-	.uleb128 0x24
+	.4byte	0x392e
+	.uleb128 0x23
+	.4byte	.LVL1260
+	.4byte	0x4507
+	.uleb128 0x23
 	.4byte	.LVL1261
-	.4byte	0x4203
-	.uleb128 0x24
+	.4byte	0x392e
+	.uleb128 0x23
 	.4byte	.LVL1262
-	.4byte	0x39f7
-	.uleb128 0x24
-	.4byte	.LVL1263
-	.4byte	0x3593
-	.uleb128 0x24
-	.4byte	.LVL1265
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1266
-	.4byte	0x392c
-	.uleb128 0x24
-	.4byte	.LVL1267
-	.4byte	0x455a
-	.uleb128 0x24
-	.4byte	.LVL1268
-	.4byte	0x392c
-	.uleb128 0x24
-	.4byte	.LVL1269
-	.4byte	0x233b
-	.uleb128 0x24
-	.4byte	.LVL1271
-	.4byte	0x4228
+	.4byte	0x2331
+	.uleb128 0x23
+	.4byte	.LVL1264
+	.4byte	0x420f
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x3c
-	.4byte	0x21f5
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x3a
+	.4byte	0x21eb
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x12
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x21e5
+	.uleb128 0x3
+	.4byte	0x21db
 	.uleb128 0x48
-	.4byte	.LASF411
+	.4byte	.LASF410
 	.byte	0x5
 	.byte	0x54
-	.4byte	.LFB247
-	.4byte	.LFE247-.LFB247
+	.4byte	.LFB257
+	.4byte	.LFE257-.LFB257
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2262
-	.uleb128 0x23
-	.4byte	.LASF412
+	.4byte	0x2258
+	.uleb128 0x22
+	.4byte	.LASF411
 	.byte	0x5
 	.byte	0x54
-	.4byte	0x317
-	.4byte	.LLST72
-	.uleb128 0x23
-	.4byte	.LASF182
+	.4byte	0x30a
+	.4byte	.LLST71
+	.uleb128 0x22
+	.4byte	.LASF181
 	.byte	0x5
 	.byte	0x54
-	.4byte	0x317
-	.4byte	.LLST73
+	.4byte	0x30a
+	.4byte	.LLST72
 	.uleb128 0x2b
 	.ascii	"lpa\000"
 	.byte	0x5
 	.byte	0x54
-	.4byte	0x317
-	.4byte	.LLST74
+	.4byte	0x30a
+	.4byte	.LLST73
 	.uleb128 0x2c
-	.4byte	.LASF413
+	.4byte	.LASF412
 	.byte	0x5
 	.byte	0x56
-	.4byte	0x30c
-	.4byte	.LLST75
+	.4byte	0x2ff
+	.4byte	.LLST74
 	.uleb128 0x49
 	.ascii	"i\000"
 	.byte	0x5
 	.byte	0x57
-	.4byte	0x30c
-	.4byte	.LLST76
-	.uleb128 0x24
-	.4byte	.LVL322
-	.4byte	0x455a
+	.4byte	0x2ff
+	.4byte	.LLST75
+	.uleb128 0x23
+	.4byte	.LVL321
+	.4byte	0x4507
 	.byte	0
-	.uleb128 0x22
-	.4byte	.LASF414
+	.uleb128 0x21
+	.4byte	.LASF413
 	.byte	0x5
 	.byte	0x49
-	.4byte	0x317
-	.4byte	.LFB246
-	.4byte	.LFE246-.LFB246
+	.4byte	0x30a
+	.4byte	.LFB256
+	.4byte	.LFE256-.LFB256
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2294
+	.4byte	0x228a
 	.uleb128 0x2b
 	.ascii	"blk\000"
 	.byte	0x5
 	.byte	0x49
-	.4byte	0x30c
-	.4byte	.LLST71
+	.4byte	0x2ff
+	.4byte	.LLST70
 	.uleb128 0x29
 	.ascii	"i\000"
 	.byte	0x5
 	.byte	0x4b
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
 	.uleb128 0x48
-	.4byte	.LASF415
+	.4byte	.LASF414
 	.byte	0x5
 	.byte	0x38
-	.4byte	.LFB245
-	.4byte	.LFE245-.LFB245
+	.4byte	.LFB255
+	.4byte	.LFE255-.LFB255
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x22d8
+	.4byte	0x22ce
 	.uleb128 0x4a
 	.ascii	"req\000"
 	.byte	0x5
 	.byte	0x38
-	.4byte	0xf4b
+	.4byte	0xf3e
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x4b
-	.4byte	.LASF416
+	.4byte	.LASF415
 	.byte	0x5
 	.byte	0x38
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x29
 	.ascii	"i\000"
 	.byte	0x5
 	.byte	0x3a
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x34
-	.4byte	.LASF417
+	.4byte	.LASF416
 	.byte	0x5
 	.byte	0x3b
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
 	.uleb128 0x48
-	.4byte	.LASF418
+	.4byte	.LASF417
 	.byte	0x5
 	.byte	0x29
-	.4byte	.LFB244
-	.4byte	.LFE244-.LFB244
+	.4byte	.LFB254
+	.4byte	.LFE254-.LFB254
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x231c
+	.4byte	0x2312
 	.uleb128 0x4a
 	.ascii	"req\000"
 	.byte	0x5
 	.byte	0x29
-	.4byte	0xf4b
+	.4byte	0xf3e
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x4b
-	.4byte	.LASF416
+	.4byte	.LASF415
 	.byte	0x5
 	.byte	0x29
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x29
 	.ascii	"i\000"
 	.byte	0x5
 	.byte	0x2b
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x34
-	.4byte	.LASF417
+	.4byte	.LASF416
 	.byte	0x5
 	.byte	0x2c
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
 	.uleb128 0x48
-	.4byte	.LASF419
+	.4byte	.LASF418
 	.byte	0x5
 	.byte	0x15
-	.4byte	.LFB243
-	.4byte	.LFE243-.LFB243
+	.4byte	.LFB253
+	.4byte	.LFE253-.LFB253
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x233b
+	.4byte	0x2331
 	.uleb128 0x29
 	.ascii	"i\000"
 	.byte	0x5
 	.byte	0x17
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF420
+	.4byte	.LASF419
 	.byte	0x2
-	.2byte	0xa93
-	.4byte	0x64
-	.4byte	.LFB242
-	.4byte	.LFE242-.LFB242
+	.2byte	0xac3
+	.4byte	0x62
+	.4byte	.LFB252
+	.4byte	.LFE252-.LFB252
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x239c
+	.4byte	0x2392
 	.uleb128 0x43
-	.4byte	.LASF406
+	.4byte	.LASF405
 	.byte	0x2
-	.2byte	0xa93
-	.4byte	0x30c
-	.4byte	.LLST185
+	.2byte	0xac3
+	.4byte	0x2ff
+	.4byte	.LLST187
 	.uleb128 0x3e
 	.ascii	"ret\000"
 	.byte	0x2
-	.2byte	0xa95
-	.4byte	0x64
+	.2byte	0xac5
+	.4byte	0x62
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x23ac
+	.4byte	.LASF362
+	.4byte	0x23a2
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.7388
-	.uleb128 0x24
-	.4byte	.LVL911
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL912
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL914
-	.4byte	0x23b1
+	.4byte	__func__.4558
+	.uleb128 0x23
+	.4byte	.LVL907
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL908
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL909
+	.4byte	0x23a7
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x3c
-	.4byte	0x23ac
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x3a
+	.4byte	0x23a2
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x13
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x239c
+	.uleb128 0x3
+	.4byte	0x2392
 	.uleb128 0x3b
-	.4byte	.LASF421
+	.4byte	.LASF420
 	.byte	0x2
-	.2byte	0xa7e
-	.4byte	0x64
+	.2byte	0xaae
+	.4byte	0x62
 	.byte	0x1
-	.4byte	0x23dc
+	.4byte	0x23d2
 	.uleb128 0x3c
-	.4byte	.LASF406
+	.4byte	.LASF405
 	.byte	0x2
-	.2byte	0xa7e
-	.4byte	0x30c
+	.2byte	0xaae
+	.4byte	0x2ff
 	.uleb128 0x40
-	.4byte	.LASF363
-	.4byte	0x23ec
-	.4byte	.LASF421
+	.4byte	.LASF362
+	.4byte	0x23e2
+	.4byte	.LASF420
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x3c
-	.4byte	0x23ec
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x3a
+	.4byte	0x23e2
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0xf
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x23dc
+	.uleb128 0x3
+	.4byte	0x23d2
 	.uleb128 0x3a
-	.4byte	.LASF422
+	.4byte	.LASF421
 	.byte	0x2
-	.2byte	0xa5e
-	.4byte	0x317
-	.4byte	.LFB240
-	.4byte	.LFE240-.LFB240
+	.2byte	0xa8e
+	.4byte	0x30a
+	.4byte	.LFB250
+	.4byte	.LFE250-.LFB250
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x246d
+	.4byte	0x2463
 	.uleb128 0x43
-	.4byte	.LASF423
+	.4byte	.LASF422
 	.byte	0x2
-	.2byte	0xa5e
-	.4byte	0x12cb
-	.4byte	.LLST69
+	.2byte	0xa8e
+	.4byte	0x12be
+	.4byte	.LLST68
 	.uleb128 0x44
-	.4byte	.LASF379
+	.4byte	.LASF378
 	.byte	0x2
-	.2byte	0xa60
-	.4byte	0x30c
-	.4byte	.LLST70
-	.uleb128 0x1f
-	.4byte	.LASF424
+	.2byte	0xa90
+	.4byte	0x2ff
+	.4byte	.LLST69
+	.uleb128 0x1e
+	.4byte	.LASF423
 	.byte	0x2
-	.2byte	0xa61
-	.4byte	0x317
+	.2byte	0xa91
+	.4byte	0x30a
 	.uleb128 0x1
 	.byte	0x56
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x21f5
+	.4byte	.LASF362
+	.4byte	0x21eb
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.7368
-	.uleb128 0x24
+	.4byte	__func__.4538
+	.uleb128 0x23
+	.4byte	.LVL306
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL307
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL308
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL309
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL312
-	.4byte	0x6727
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL311
+	.4byte	0x67ee
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF425
+	.4byte	.LASF424
 	.byte	0x2
-	.2byte	0xa46
-	.4byte	0x64
-	.4byte	.LFB239
-	.4byte	.LFE239-.LFB239
+	.2byte	0xa76
+	.4byte	0x62
+	.4byte	.LFB249
+	.4byte	.LFE249-.LFB249
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x24fd
+	.4byte	0x24f3
 	.uleb128 0x43
-	.4byte	.LASF423
+	.4byte	.LASF422
 	.byte	0x2
-	.2byte	0xa46
-	.4byte	0x12cb
+	.2byte	0xa76
+	.4byte	0x12be
 	.4byte	.LLST226
-	.uleb128 0x1f
-	.4byte	.LASF406
+	.uleb128 0x1e
+	.4byte	.LASF405
 	.byte	0x2
-	.2byte	0xa48
-	.4byte	0x30c
+	.2byte	0xa78
+	.4byte	0x2ff
 	.uleb128 0x1
 	.byte	0x54
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x250d
+	.4byte	.LASF362
+	.4byte	0x2503
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.7361
-	.uleb128 0x24
-	.4byte	.LVL1183
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1184
-	.4byte	0x4203
-	.uleb128 0x24
-	.4byte	.LVL1185
-	.4byte	0x23b1
-	.uleb128 0x24
-	.4byte	.LVL1186
-	.4byte	0x2512
-	.uleb128 0x24
-	.4byte	.LVL1187
-	.4byte	0x39f7
-	.uleb128 0x24
-	.4byte	.LVL1188
-	.4byte	0x3734
-	.uleb128 0x24
-	.4byte	.LVL1189
+	.4byte	__func__.4531
+	.uleb128 0x23
+	.4byte	.LVL1176
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1177
+	.4byte	0x41ea
+	.uleb128 0x23
+	.4byte	.LVL1178
+	.4byte	0x23a7
+	.uleb128 0x23
+	.4byte	.LVL1179
+	.4byte	0x2508
+	.uleb128 0x23
+	.4byte	.LVL1180
+	.4byte	0x39f9
+	.uleb128 0x23
+	.4byte	.LVL1181
+	.4byte	0x3736
+	.uleb128 0x23
+	.4byte	.LVL1182
 	.4byte	0x3593
-	.uleb128 0x24
-	.4byte	.LVL1190
-	.4byte	0x4228
+	.uleb128 0x23
+	.4byte	.LVL1183
+	.4byte	0x420f
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x3c
-	.4byte	0x250d
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x3a
+	.4byte	0x2503
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x1c
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x24fd
+	.uleb128 0x3
+	.4byte	0x24f3
 	.uleb128 0x4c
-	.4byte	.LASF426
+	.4byte	.LASF425
 	.byte	0x2
-	.2byte	0x9e2
-	.4byte	0x64
-	.4byte	.LFB238
-	.4byte	.LFE238-.LFB238
+	.2byte	0xa12
+	.4byte	0x62
+	.4byte	.LFB248
+	.4byte	.LFE248-.LFB248
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x266c
+	.4byte	0x2662
 	.uleb128 0x4d
 	.ascii	"p\000"
 	.byte	0x2
-	.2byte	0x9e2
-	.4byte	0x12cb
-	.4byte	.LLST177
+	.2byte	0xa12
+	.4byte	0x12be
+	.4byte	.LLST179
 	.uleb128 0x44
-	.4byte	.LASF427
+	.4byte	.LASF426
 	.byte	0x2
-	.2byte	0x9e4
-	.4byte	0x30c
-	.4byte	.LLST178
+	.2byte	0xa14
+	.4byte	0x2ff
+	.4byte	.LLST180
 	.uleb128 0x3d
-	.4byte	.LASF377
+	.4byte	.LASF376
 	.byte	0x2
-	.2byte	0x9e5
-	.4byte	0x30c
+	.2byte	0xa15
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF358
+	.4byte	.LASF357
 	.byte	0x2
-	.2byte	0x9e5
-	.4byte	0x30c
-	.4byte	.LLST179
+	.2byte	0xa15
+	.4byte	0x2ff
+	.4byte	.LLST181
 	.uleb128 0x3e
 	.ascii	"n\000"
 	.byte	0x2
-	.2byte	0x9e5
-	.4byte	0x30c
+	.2byte	0xa15
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF379
+	.4byte	.LASF378
 	.byte	0x2
-	.2byte	0x9e5
-	.4byte	0x30c
+	.2byte	0xa15
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF428
+	.4byte	.LASF427
 	.byte	0x2
-	.2byte	0x9e6
-	.4byte	0x64
-	.4byte	.LLST180
+	.2byte	0xa16
+	.4byte	0x62
+	.4byte	.LLST182
 	.uleb128 0x44
-	.4byte	.LASF429
+	.4byte	.LASF428
 	.byte	0x2
-	.2byte	0x9e7
-	.4byte	0x30c
-	.4byte	.LLST181
+	.2byte	0xa17
+	.4byte	0x2ff
+	.4byte	.LLST183
 	.uleb128 0x3f
-	.4byte	.LASF430
+	.4byte	.LASF429
 	.byte	0x2
-	.2byte	0x9e8
+	.2byte	0xa18
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x267c
+	.4byte	.LASF362
+	.4byte	0x2672
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.7340
+	.4byte	__func__.4510
 	.uleb128 0x4e
-	.4byte	0x3414
-	.4byte	.LBB429
-	.4byte	.Ldebug_ranges0+0x178
+	.4byte	0x3416
+	.4byte	.LBB451
+	.4byte	.Ldebug_ranges0+0x1c0
 	.byte	0x2
-	.2byte	0xa18
-	.4byte	0x25db
+	.2byte	0xa48
+	.4byte	0x25d1
 	.uleb128 0x2e
-	.4byte	0x342d
+	.4byte	0x342f
 	.uleb128 0x2e
-	.4byte	0x3421
-	.uleb128 0x24
-	.4byte	.LVL882
-	.4byte	0x5c7a
+	.4byte	0x3423
+	.uleb128 0x23
+	.4byte	.LVL878
+	.4byte	0x5c1e
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL857
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL863
+	.uleb128 0x23
+	.4byte	.LVL854
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL860
 	.4byte	0x4026
-	.uleb128 0x24
+	.uleb128 0x23
+	.4byte	.LVL861
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL862
+	.4byte	0x2c58
+	.uleb128 0x23
+	.4byte	.LVL863
+	.4byte	0x41ea
+	.uleb128 0x23
 	.4byte	.LVL864
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL865
-	.4byte	0x2c52
-	.uleb128 0x24
-	.4byte	.LVL866
-	.4byte	0x4203
-	.uleb128 0x24
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL867
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL868
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL870
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL869
+	.4byte	0x3416
+	.uleb128 0x23
 	.4byte	.LVL871
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL872
-	.4byte	0x3414
-	.uleb128 0x24
+	.4byte	0x1954
+	.uleb128 0x23
+	.4byte	.LVL873
+	.4byte	0x27b7
+	.uleb128 0x23
 	.4byte	.LVL874
-	.4byte	0x195f
-	.uleb128 0x24
-	.4byte	.LVL876
-	.4byte	0x27b1
-	.uleb128 0x24
-	.4byte	.LVL877
-	.4byte	0x4994
-	.uleb128 0x24
-	.4byte	.LVL879
-	.4byte	0x4203
-	.uleb128 0x24
-	.4byte	.LVL884
-	.4byte	0x4b52
-	.uleb128 0x24
-	.4byte	.LVL887
-	.4byte	0x6727
+	.4byte	0x493b
+	.uleb128 0x23
+	.4byte	.LVL875
+	.4byte	0x41ea
+	.uleb128 0x23
+	.4byte	.LVL880
+	.4byte	0x4af9
+	.uleb128 0x23
+	.4byte	.LVL883
+	.4byte	0x67ee
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x3c
-	.4byte	0x267c
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x3a
+	.4byte	0x2672
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x18
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x266c
+	.uleb128 0x3
+	.4byte	0x2662
 	.uleb128 0x3b
-	.4byte	.LASF431
+	.4byte	.LASF430
 	.byte	0x2
-	.2byte	0x9d9
-	.4byte	0x64
+	.2byte	0xa09
+	.4byte	0x62
 	.byte	0x1
-	.4byte	0x269f
+	.4byte	0x2695
 	.uleb128 0x3c
-	.4byte	.LASF406
+	.4byte	.LASF405
 	.byte	0x2
-	.2byte	0x9d9
-	.4byte	0x30c
+	.2byte	0xa09
+	.4byte	0x2ff
 	.byte	0
 	.uleb128 0x4c
-	.4byte	.LASF432
+	.4byte	.LASF431
 	.byte	0x2
-	.2byte	0x98e
-	.4byte	0x30c
-	.4byte	.LFB236
-	.4byte	.LFE236-.LFB236
+	.2byte	0x9c0
+	.4byte	0x2ff
+	.4byte	.LFB246
+	.4byte	.LFE246-.LFB246
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2739
-	.uleb128 0x1f
-	.4byte	.LASF433
+	.4byte	0x273f
+	.uleb128 0x1e
+	.4byte	.LASF432
 	.byte	0x2
-	.2byte	0x990
-	.4byte	0x30c
+	.2byte	0x9c2
+	.4byte	0x2ff
 	.uleb128 0x1
 	.byte	0x55
 	.uleb128 0x3d
+	.4byte	.LASF433
+	.byte	0x2
+	.2byte	0x9c3
+	.4byte	0x2ff
+	.uleb128 0x44
 	.4byte	.LASF434
 	.byte	0x2
-	.2byte	0x991
-	.4byte	0x30c
+	.2byte	0x9c4
+	.4byte	0x2ff
+	.4byte	.LLST62
 	.uleb128 0x44
 	.4byte	.LASF435
 	.byte	0x2
-	.2byte	0x992
-	.4byte	0x30c
-	.4byte	.LLST64
+	.2byte	0x9c5
+	.4byte	0x120e
+	.4byte	.LLST63
 	.uleb128 0x44
 	.4byte	.LASF436
 	.byte	0x2
-	.2byte	0x993
-	.4byte	0x121b
-	.4byte	.LLST65
+	.2byte	0x9c6
+	.4byte	0x2ff
+	.4byte	.LLST64
 	.uleb128 0x44
 	.4byte	.LASF437
 	.byte	0x2
-	.2byte	0x994
-	.4byte	0x30c
-	.4byte	.LLST66
-	.uleb128 0x44
-	.4byte	.LASF438
-	.byte	0x2
-	.2byte	0x995
-	.4byte	0x30c
-	.4byte	.LLST67
+	.2byte	0x9c7
+	.4byte	0x2ff
+	.4byte	.LLST65
 	.uleb128 0x3e
 	.ascii	"i\000"
 	.byte	0x2
-	.2byte	0x996
-	.4byte	0x317
-	.uleb128 0x24
-	.4byte	.LVL288
-	.4byte	0x2739
-	.uleb128 0x24
-	.4byte	.LVL294
-	.4byte	0x2788
-	.uleb128 0x24
-	.4byte	.LVL299
-	.4byte	0x6727
+	.2byte	0x9c8
+	.4byte	0x30a
+	.uleb128 0x44
+	.4byte	.LASF114
+	.byte	0x2
+	.2byte	0x9c9
+	.4byte	0x2ff
+	.4byte	.LLST66
+	.uleb128 0x23
+	.4byte	.LVL283
+	.4byte	0x273f
+	.uleb128 0x23
+	.4byte	.LVL290
+	.4byte	0x278e
+	.uleb128 0x23
+	.4byte	.LVL296
+	.4byte	0x67ee
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF439
+	.4byte	.LASF438
 	.byte	0x2
-	.2byte	0x979
-	.4byte	0x30c
-	.4byte	.LFB235
-	.4byte	.LFE235-.LFB235
+	.2byte	0x9ab
+	.4byte	0x2ff
+	.4byte	.LFB245
+	.4byte	.LFE245-.LFB245
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2788
+	.4byte	0x278e
 	.uleb128 0x43
-	.4byte	.LASF94
+	.4byte	.LASF93
 	.byte	0x2
-	.2byte	0x979
-	.4byte	0x30c
-	.4byte	.LLST59
-	.uleb128 0x1f
-	.4byte	.LASF440
+	.2byte	0x9ab
+	.4byte	0x2ff
+	.4byte	.LLST57
+	.uleb128 0x1e
+	.4byte	.LASF439
 	.byte	0x2
-	.2byte	0x97b
-	.4byte	0x30c
+	.2byte	0x9ad
+	.4byte	0x2ff
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x3d
-	.4byte	.LASF393
+	.4byte	.LASF392
 	.byte	0x2
-	.2byte	0x97c
-	.4byte	0x30c
+	.2byte	0x9ae
+	.4byte	0x2ff
 	.uleb128 0x3e
 	.ascii	"i\000"
 	.byte	0x2
-	.2byte	0x97d
-	.4byte	0x30c
+	.2byte	0x9af
+	.4byte	0x2ff
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF441
+	.4byte	.LASF440
 	.byte	0x2
-	.2byte	0x970
-	.4byte	0x30c
-	.4byte	.LFB234
-	.4byte	.LFE234-.LFB234
+	.2byte	0x9a2
+	.4byte	0x2ff
+	.4byte	.LFB244
+	.4byte	.LFE244-.LFB244
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x27b1
-	.uleb128 0x1f
-	.4byte	.LASF435
+	.4byte	0x27b7
+	.uleb128 0x1e
+	.4byte	.LASF434
 	.byte	0x2
-	.2byte	0x972
-	.4byte	0x30c
+	.2byte	0x9a4
+	.4byte	0x2ff
 	.uleb128 0x1
 	.byte	0x50
 	.byte	0
 	.uleb128 0x4c
-	.4byte	.LASF442
+	.4byte	.LASF441
 	.byte	0x2
-	.2byte	0x960
-	.4byte	0x64
-	.4byte	.LFB233
-	.4byte	.LFE233-.LFB233
+	.2byte	0x992
+	.4byte	0x62
+	.4byte	.LFB243
+	.4byte	.LFE243-.LFB243
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2812
+	.4byte	0x2818
 	.uleb128 0x43
-	.4byte	.LASF406
+	.4byte	.LASF405
 	.byte	0x2
-	.2byte	0x960
-	.4byte	0x30c
-	.4byte	.LLST58
+	.2byte	0x992
+	.4byte	0x2ff
+	.4byte	.LLST56
 	.uleb128 0x3d
-	.4byte	.LASF377
+	.4byte	.LASF376
 	.byte	0x2
-	.2byte	0x962
-	.4byte	0x30c
+	.2byte	0x994
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF379
+	.4byte	.LASF378
 	.byte	0x2
-	.2byte	0x962
-	.4byte	0x30c
+	.2byte	0x994
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF166
+	.4byte	.LASF165
 	.byte	0x2
-	.2byte	0x963
-	.4byte	0x30c
-	.uleb128 0x24
-	.4byte	.LVL196
-	.4byte	0x45c2
-	.uleb128 0x24
-	.4byte	.LVL197
-	.4byte	0x4af7
+	.2byte	0x995
+	.4byte	0x2ff
+	.uleb128 0x23
+	.4byte	.LVL192
+	.4byte	0x456f
+	.uleb128 0x23
+	.4byte	.LVL193
+	.4byte	0x4a9e
 	.byte	0
 	.uleb128 0x3b
-	.4byte	.LASF443
+	.4byte	.LASF442
 	.byte	0x2
-	.2byte	0x901
-	.4byte	0x64
+	.2byte	0x933
+	.4byte	0x62
 	.byte	0x1
-	.4byte	0x283c
+	.4byte	0x2842
 	.uleb128 0x3e
 	.ascii	"i\000"
 	.byte	0x2
-	.2byte	0x903
-	.4byte	0x64
+	.2byte	0x935
+	.4byte	0x62
 	.uleb128 0x28
 	.uleb128 0x3d
-	.4byte	.LASF397
+	.4byte	.LASF396
 	.byte	0x2
-	.2byte	0x928
-	.4byte	0x12cb
+	.2byte	0x95a
+	.4byte	0x12be
 	.byte	0
 	.byte	0
 	.uleb128 0x4f
-	.4byte	.LASF444
+	.4byte	.LASF443
 	.byte	0x2
-	.2byte	0x8e2
-	.4byte	.LFB231
-	.4byte	.LFE231-.LFB231
+	.2byte	0x914
+	.4byte	.LFB241
+	.4byte	.LFE241-.LFB241
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x28a7
+	.4byte	0x28ad
 	.uleb128 0x50
 	.ascii	"i\000"
 	.byte	0x2
-	.2byte	0x8e4
-	.4byte	0x64
+	.2byte	0x916
+	.4byte	0x62
 	.uleb128 0x1
 	.byte	0x55
 	.uleb128 0x50
 	.ascii	"ppa\000"
 	.byte	0x2
-	.2byte	0x8e5
-	.4byte	0x317
-	.uleb128 0x2
-	.byte	0x91
-	.sleb128 -36
-	.uleb128 0x3d
-	.4byte	.LASF445
-	.byte	0x2
-	.2byte	0x8e6
-	.4byte	0x1d4c
-	.uleb128 0x24
-	.4byte	.LVL633
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL636
-	.4byte	0x392c
-	.uleb128 0x24
-	.4byte	.LVL637
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL638
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL639
-	.4byte	0x6727
+	.2byte	0x917
+	.4byte	0x30a
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -36
+	.uleb128 0x3d
+	.4byte	.LASF444
+	.byte	0x2
+	.2byte	0x918
+	.4byte	0x1d42
+	.uleb128 0x23
+	.4byte	.LVL654
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL657
+	.4byte	0x392e
+	.uleb128 0x23
+	.4byte	.LVL658
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL659
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL660
+	.4byte	0x67ee
 	.byte	0
 	.uleb128 0x4f
-	.4byte	.LASF446
+	.4byte	.LASF445
 	.byte	0x2
-	.2byte	0x8ae
-	.4byte	.LFB230
-	.4byte	.LFE230-.LFB230
+	.2byte	0x8e0
+	.4byte	.LFB240
+	.4byte	.LFE240-.LFB240
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x29c0
+	.4byte	0x29c6
 	.uleb128 0x3e
 	.ascii	"i\000"
 	.byte	0x2
-	.2byte	0x8b0
-	.4byte	0x30c
+	.2byte	0x8e2
+	.4byte	0x2ff
 	.uleb128 0x51
 	.ascii	"lpn\000"
 	.byte	0x2
-	.2byte	0x8b1
-	.4byte	0x317
-	.4byte	.LLST142
-	.uleb128 0x1f
-	.4byte	.LASF447
+	.2byte	0x8e3
+	.4byte	0x30a
+	.4byte	.LLST144
+	.uleb128 0x1e
+	.4byte	.LASF446
 	.byte	0x2
-	.2byte	0x8b2
-	.4byte	0x317
+	.2byte	0x8e4
+	.4byte	0x30a
 	.uleb128 0x2
 	.byte	0x91
-	.sleb128 -52
+	.sleb128 -48
 	.uleb128 0x3e
 	.ascii	"blk\000"
 	.byte	0x2
-	.2byte	0x8b3
-	.4byte	0x30c
+	.2byte	0x8e5
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF448
+	.4byte	.LASF447
 	.byte	0x2
-	.2byte	0x8b4
-	.4byte	0x30c
-	.4byte	.LLST143
+	.2byte	0x8e6
+	.4byte	0x2ff
+	.4byte	.LLST145
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x29d0
+	.4byte	.LASF362
+	.4byte	0x29d6
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.7256
+	.4byte	__func__.4425
 	.uleb128 0x52
-	.4byte	.LBB390
-	.4byte	.LBE390-.LBB390
-	.4byte	0x2938
+	.4byte	.LBB412
+	.4byte	.LBE412-.LBB412
+	.4byte	0x293e
 	.uleb128 0x44
-	.4byte	.LASF94
+	.4byte	.LASF93
 	.byte	0x2
-	.2byte	0x8d1
-	.4byte	0x30c
-	.4byte	.LLST144
-	.uleb128 0x24
-	.4byte	.LVL652
-	.4byte	0x6727
+	.2byte	0x903
+	.4byte	0x2ff
+	.4byte	.LLST146
+	.uleb128 0x23
+	.4byte	.LVL673
+	.4byte	0x67ee
 	.byte	0
 	.uleb128 0x53
-	.4byte	0x17d1
-	.4byte	.LBB387
-	.4byte	.LBE387-.LBB387
+	.4byte	0x17c6
+	.4byte	.LBB409
+	.4byte	.LBE409-.LBB409
 	.byte	0x2
-	.2byte	0x8b7
-	.4byte	0x2992
+	.2byte	0x8e9
+	.4byte	0x2998
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB388
-	.4byte	.LBE388-.LBB388
+	.4byte	.LBB410
+	.4byte	.LBE410-.LBB410
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB389
-	.4byte	.LBE389-.LBB389
+	.4byte	.LBB411
+	.4byte	.LBE411-.LBB411
 	.uleb128 0x30
-	.4byte	0x6134
+	.4byte	0x61fc
 	.uleb128 0x30
-	.4byte	0x6139
-	.uleb128 0x24
-	.4byte	.LVL648
-	.4byte	0x6732
+	.4byte	0x6201
+	.uleb128 0x23
+	.4byte	.LVL669
+	.4byte	0x67f9
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL647
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL653
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL655
-	.4byte	0x392c
-	.uleb128 0x24
-	.4byte	.LVL656
-	.4byte	0x455a
-	.uleb128 0x24
-	.4byte	.LVL658
-	.4byte	0x6727
+	.uleb128 0x23
+	.4byte	.LVL668
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL674
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL676
+	.4byte	0x392e
+	.uleb128 0x23
+	.4byte	.LVL677
+	.4byte	0x4507
+	.uleb128 0x23
+	.4byte	.LVL679
+	.4byte	0x67ee
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x3c
-	.4byte	0x29d0
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x3a
+	.4byte	0x29d6
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0xd
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x29c0
+	.uleb128 0x3
+	.4byte	0x29c6
 	.uleb128 0x4f
-	.4byte	.LASF449
+	.4byte	.LASF448
 	.byte	0x2
-	.2byte	0x88f
-	.4byte	.LFB229
-	.4byte	.LFE229-.LFB229
+	.2byte	0x8c1
+	.4byte	.LFB239
+	.4byte	.LFE239-.LFB239
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2a7c
+	.4byte	0x2a82
 	.uleb128 0x51
 	.ascii	"i\000"
 	.byte	0x2
-	.2byte	0x891
-	.4byte	0x30c
+	.2byte	0x8c3
+	.4byte	0x2ff
 	.4byte	.LLST224
 	.uleb128 0x51
 	.ascii	"lpn\000"
 	.byte	0x2
-	.2byte	0x892
-	.4byte	0x317
+	.2byte	0x8c4
+	.4byte	0x30a
 	.4byte	.LLST225
-	.uleb128 0x1f
-	.4byte	.LASF447
+	.uleb128 0x1e
+	.4byte	.LASF446
 	.byte	0x2
-	.2byte	0x893
-	.4byte	0x317
+	.2byte	0x8c5
+	.4byte	0x30a
 	.uleb128 0x2
 	.byte	0x91
-	.sleb128 -44
+	.sleb128 -48
 	.uleb128 0x3e
 	.ascii	"blk\000"
 	.byte	0x2
-	.2byte	0x894
-	.4byte	0x30c
+	.2byte	0x8c6
+	.4byte	0x2ff
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x2a8c
+	.4byte	.LASF362
+	.4byte	0x2a92
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.7240
-	.uleb128 0x24
-	.4byte	.LVL1169
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	__func__.4409
+	.uleb128 0x23
+	.4byte	.LVL1162
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1163
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL1167
+	.4byte	0x392e
+	.uleb128 0x23
+	.4byte	.LVL1168
+	.4byte	0x4507
+	.uleb128 0x23
 	.4byte	.LVL1170
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL1174
-	.4byte	0x392c
-	.uleb128 0x24
-	.4byte	.LVL1175
-	.4byte	0x455a
-	.uleb128 0x24
-	.4byte	.LVL1177
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1178
-	.4byte	0x23b1
-	.uleb128 0x24
-	.4byte	.LVL1179
-	.4byte	0x39f7
-	.uleb128 0x24
-	.4byte	.LVL1180
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1171
+	.4byte	0x23a7
+	.uleb128 0x23
+	.4byte	.LVL1172
+	.4byte	0x39f9
+	.uleb128 0x23
+	.4byte	.LVL1173
 	.4byte	0x3593
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x3c
-	.4byte	0x2a8c
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x3a
+	.4byte	0x2a92
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x14
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x2a7c
+	.uleb128 0x3
+	.4byte	0x2a82
 	.uleb128 0x4f
-	.4byte	.LASF450
+	.4byte	.LASF449
 	.byte	0x2
-	.2byte	0x86b
-	.4byte	.LFB228
-	.4byte	.LFE228-.LFB228
+	.2byte	0x89c
+	.4byte	.LFB238
+	.4byte	.LFE238-.LFB238
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2b06
+	.4byte	0x2b0c
 	.uleb128 0x43
-	.4byte	.LASF397
+	.4byte	.LASF396
 	.byte	0x2
-	.2byte	0x86b
-	.4byte	0x12cb
-	.4byte	.LLST205
-	.uleb128 0x1f
-	.4byte	.LASF451
+	.2byte	0x89c
+	.4byte	0x12be
+	.4byte	.LLST206
+	.uleb128 0x1e
+	.4byte	.LASF450
 	.byte	0x2
-	.2byte	0x86d
-	.4byte	0x338
+	.2byte	0x89e
+	.4byte	0x32b
 	.uleb128 0x2
 	.byte	0x91
-	.sleb128 -52
+	.sleb128 -56
 	.uleb128 0x3d
-	.4byte	.LASF381
+	.4byte	.LASF380
 	.byte	0x2
-	.2byte	0x86e
-	.4byte	0x1d4c
+	.2byte	0x89f
+	.4byte	0x1d42
 	.uleb128 0x3d
-	.4byte	.LASF452
+	.4byte	.LASF451
 	.byte	0x2
-	.2byte	0x86f
-	.4byte	0x64
+	.2byte	0x8a0
+	.4byte	0x62
 	.uleb128 0x3d
-	.4byte	.LASF175
+	.4byte	.LASF174
 	.byte	0x2
-	.2byte	0x870
-	.4byte	0x317
-	.uleb128 0x24
+	.2byte	0x8a1
+	.4byte	0x30a
+	.uleb128 0x23
 	.4byte	.LVL1048
-	.4byte	0x23f1
-	.uleb128 0x24
+	.4byte	0x23e7
+	.uleb128 0x23
 	.4byte	.LVL1049
-	.4byte	0x19f5
-	.uleb128 0x24
+	.4byte	0x19ea
+	.uleb128 0x23
 	.4byte	.LVL1050
-	.4byte	0x233b
+	.4byte	0x2331
 	.byte	0
 	.uleb128 0x54
-	.4byte	.LASF453
+	.4byte	.LASF452
 	.byte	0x2
-	.2byte	0x851
-	.4byte	.LFB227
-	.4byte	.LFE227-.LFB227
+	.2byte	0x882
+	.4byte	.LFB237
+	.4byte	.LFE237-.LFB237
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2b80
+	.4byte	0x2b86
 	.uleb128 0x53
-	.4byte	0x17d1
-	.4byte	.LBB487
-	.4byte	.LBE487-.LBB487
+	.4byte	0x17c6
+	.4byte	.LBB510
+	.4byte	.LBE510-.LBB510
 	.byte	0x2
-	.2byte	0x855
-	.4byte	0x2b76
+	.2byte	0x886
+	.4byte	0x2b7c
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB488
-	.4byte	.LBE488-.LBB488
+	.4byte	.LBB511
+	.4byte	.LBE511-.LBB511
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB489
-	.4byte	.LBE489-.LBB489
+	.4byte	.LBB512
+	.4byte	.LBE512-.LBB512
 	.uleb128 0x30
-	.4byte	0x6134
+	.4byte	0x61fc
 	.uleb128 0x30
-	.4byte	0x6139
-	.uleb128 0x24
-	.4byte	.LVL1152
-	.4byte	0x6732
+	.4byte	0x6201
+	.uleb128 0x23
+	.4byte	.LVL1145
+	.4byte	0x67f9
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL1151
-	.4byte	0x3781
+	.uleb128 0x23
+	.4byte	.LVL1144
+	.4byte	0x3783
 	.byte	0
 	.uleb128 0x45
-	.4byte	.LASF455
+	.4byte	.LASF454
 	.byte	0x2
-	.2byte	0x83d
+	.2byte	0x86e
 	.byte	0x1
 	.uleb128 0x4c
-	.4byte	.LASF456
+	.4byte	.LASF455
 	.byte	0x2
-	.2byte	0x812
-	.4byte	0x64
-	.4byte	.LFB225
-	.4byte	.LFE225-.LFB225
+	.2byte	0x843
+	.4byte	0x62
+	.4byte	.LFB235
+	.4byte	.LFE235-.LFB235
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2c3d
+	.4byte	0x2c43
 	.uleb128 0x44
-	.4byte	.LASF433
+	.4byte	.LASF432
 	.byte	0x2
-	.2byte	0x814
-	.4byte	0x30c
-	.4byte	.LLST158
+	.2byte	0x845
+	.4byte	0x2ff
+	.4byte	.LLST160
 	.uleb128 0x3d
-	.4byte	.LASF377
+	.4byte	.LASF376
 	.byte	0x2
-	.2byte	0x814
-	.4byte	0x30c
+	.2byte	0x845
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF379
+	.4byte	.LASF378
 	.byte	0x2
-	.2byte	0x814
-	.4byte	0x30c
+	.2byte	0x845
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF166
+	.4byte	.LASF165
 	.byte	0x2
-	.2byte	0x814
-	.4byte	0x30c
+	.2byte	0x845
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF457
+	.4byte	.LASF456
 	.byte	0x2
-	.2byte	0x815
-	.4byte	0x30c
-	.4byte	.LLST159
+	.2byte	0x846
+	.4byte	0x2ff
+	.4byte	.LLST161
 	.uleb128 0x44
-	.4byte	.LASF458
+	.4byte	.LASF457
 	.byte	0x2
-	.2byte	0x815
-	.4byte	0x30c
-	.4byte	.LLST160
+	.2byte	0x846
+	.4byte	0x2ff
+	.4byte	.LLST162
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x2c4d
+	.4byte	.LASF362
+	.4byte	0x2c53
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.7215
-	.uleb128 0x24
-	.4byte	.LVL777
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL779
-	.4byte	0x45c2
-	.uleb128 0x24
-	.4byte	.LVL780
-	.4byte	0x4af7
-	.uleb128 0x24
+	.4byte	__func__.4384
+	.uleb128 0x23
+	.4byte	.LVL781
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL783
+	.4byte	0x456f
+	.uleb128 0x23
 	.4byte	.LVL784
-	.4byte	0x4228
-	.uleb128 0x24
-	.4byte	.LVL787
-	.4byte	0x4203
-	.uleb128 0x24
-	.4byte	.LVL789
-	.4byte	0x6727
+	.4byte	0x4a9e
+	.uleb128 0x23
+	.4byte	.LVL788
+	.4byte	0x420f
+	.uleb128 0x23
+	.4byte	.LVL791
+	.4byte	0x41ea
+	.uleb128 0x23
+	.4byte	.LVL793
+	.4byte	0x67ee
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x3c
-	.4byte	0x2c4d
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x3a
+	.4byte	0x2c53
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x11
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x2c3d
+	.uleb128 0x3
+	.4byte	0x2c43
 	.uleb128 0x3a
-	.4byte	.LASF459
+	.4byte	.LASF458
 	.byte	0x2
-	.2byte	0x7fc
-	.4byte	0x64
-	.4byte	.LFB224
-	.4byte	.LFE224-.LFB224
+	.2byte	0x82d
+	.4byte	0x62
+	.4byte	.LFB234
+	.4byte	.LFE234-.LFB234
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2cbd
+	.4byte	0x2cc3
 	.uleb128 0x4d
 	.ascii	"p\000"
 	.byte	0x2
-	.2byte	0x7fc
-	.4byte	0x12cb
-	.4byte	.LLST57
+	.2byte	0x82d
+	.4byte	0x12be
+	.4byte	.LLST55
 	.uleb128 0x3d
-	.4byte	.LASF377
+	.4byte	.LASF376
 	.byte	0x2
-	.2byte	0x7fe
-	.4byte	0x30c
+	.2byte	0x82f
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF379
+	.4byte	.LASF378
 	.byte	0x2
-	.2byte	0x7fe
-	.4byte	0x30c
+	.2byte	0x82f
+	.4byte	0x2ff
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x23ec
+	.4byte	.LASF362
+	.4byte	0x23e2
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.7194
-	.uleb128 0x24
-	.4byte	.LVL189
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL191
-	.4byte	0x45c2
-	.uleb128 0x24
-	.4byte	.LVL192
-	.4byte	0x4af7
+	.4byte	__func__.4363
+	.uleb128 0x23
+	.4byte	.LVL186
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL187
+	.4byte	0x456f
+	.uleb128 0x23
+	.4byte	.LVL188
+	.4byte	0x4a9e
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF460
+	.4byte	.LASF459
 	.byte	0x2
-	.2byte	0x7ef
-	.4byte	0x64
-	.4byte	.LFB223
-	.4byte	.LFE223-.LFB223
+	.2byte	0x820
+	.4byte	0x62
+	.4byte	.LFB233
+	.4byte	.LFE233-.LFB233
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x2d0e
-	.uleb128 0x24
-	.4byte	.LVL1275
-	.4byte	0x2d34
-	.uleb128 0x24
-	.4byte	.LVL1276
-	.4byte	0x2d0e
-	.uleb128 0x24
-	.4byte	.LVL1277
-	.4byte	0x2d34
-	.uleb128 0x24
-	.4byte	.LVL1278
-	.4byte	0x2d0e
-	.uleb128 0x24
-	.4byte	.LVL1279
-	.4byte	0x1f7c
-	.uleb128 0x24
-	.4byte	.LVL1280
-	.4byte	0x233b
+	.4byte	0x2d14
+	.uleb128 0x23
+	.4byte	.LVL1268
+	.4byte	0x2d3a
+	.uleb128 0x23
+	.4byte	.LVL1269
+	.4byte	0x2d14
+	.uleb128 0x23
+	.4byte	.LVL1270
+	.4byte	0x2d3a
+	.uleb128 0x23
+	.4byte	.LVL1271
+	.4byte	0x2d14
+	.uleb128 0x23
+	.4byte	.LVL1272
+	.4byte	0x1f72
+	.uleb128 0x23
+	.4byte	.LVL1273
+	.4byte	0x2331
 	.byte	0
 	.uleb128 0x55
-	.4byte	.LASF496
+	.4byte	.LASF495
 	.byte	0x2
-	.2byte	0x7dc
+	.2byte	0x80d
 	.byte	0x1
-	.4byte	0x2d34
+	.4byte	0x2d3a
 	.uleb128 0x3c
-	.4byte	.LASF423
+	.4byte	.LASF422
 	.byte	0x2
-	.2byte	0x7dc
-	.4byte	0x12cb
+	.2byte	0x80d
+	.4byte	0x12be
 	.uleb128 0x3d
-	.4byte	.LASF379
+	.4byte	.LASF378
 	.byte	0x2
-	.2byte	0x7de
-	.4byte	0x30c
+	.2byte	0x80f
+	.4byte	0x2ff
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF461
+	.4byte	.LASF460
 	.byte	0x2
-	.2byte	0x677
-	.4byte	0x64
-	.4byte	.LFB221
-	.4byte	.LFE221-.LFB221
+	.2byte	0x6a8
+	.4byte	0x62
+	.4byte	.LFB231
+	.4byte	.LFE231-.LFB231
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x307b
+	.4byte	0x307d
 	.uleb128 0x43
-	.4byte	.LASF397
-	.byte	0x2
-	.2byte	0x677
-	.4byte	0x12cb
-	.4byte	.LLST190
-	.uleb128 0x44
-	.4byte	.LASF462
+	.4byte	.LASF396
 	.byte	0x2
-	.2byte	0x679
-	.4byte	0x30c
+	.2byte	0x6a8
+	.4byte	0x12be
 	.4byte	.LLST191
 	.uleb128 0x44
-	.4byte	.LASF463
+	.4byte	.LASF461
 	.byte	0x2
-	.2byte	0x679
-	.4byte	0x30c
+	.2byte	0x6aa
+	.4byte	0x2ff
 	.4byte	.LLST192
+	.uleb128 0x44
+	.4byte	.LASF462
+	.byte	0x2
+	.2byte	0x6aa
+	.4byte	0x2ff
+	.4byte	.LLST193
 	.uleb128 0x3d
-	.4byte	.LASF377
+	.4byte	.LASF376
 	.byte	0x2
-	.2byte	0x67a
-	.4byte	0x30c
+	.2byte	0x6ab
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF173
+	.4byte	.LASF172
 	.byte	0x2
-	.2byte	0x67a
-	.4byte	0x30c
+	.2byte	0x6ab
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF171
+	.4byte	.LASF170
 	.byte	0x2
-	.2byte	0x67a
-	.4byte	0x30c
+	.2byte	0x6ab
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF464
+	.4byte	.LASF463
 	.byte	0x2
-	.2byte	0x67b
-	.4byte	0x30c
-	.4byte	.LLST193
+	.2byte	0x6ac
+	.4byte	0x2ff
+	.4byte	.LLST194
 	.uleb128 0x44
-	.4byte	.LASF465
+	.4byte	.LASF464
 	.byte	0x2
-	.2byte	0x67b
-	.4byte	0x30c
-	.4byte	.LLST194
+	.2byte	0x6ac
+	.4byte	0x2ff
+	.4byte	.LLST195
 	.uleb128 0x3d
-	.4byte	.LASF379
+	.4byte	.LASF378
 	.byte	0x2
-	.2byte	0x67c
-	.4byte	0x30c
+	.2byte	0x6ad
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF466
+	.4byte	.LASF465
 	.byte	0x2
-	.2byte	0x67d
-	.4byte	0x64
-	.4byte	.LLST195
+	.2byte	0x6ae
+	.4byte	0x62
+	.4byte	.LLST196
 	.uleb128 0x3d
-	.4byte	.LASF467
+	.4byte	.LASF466
 	.byte	0x2
-	.2byte	0x67d
-	.4byte	0x64
+	.2byte	0x6ae
+	.4byte	0x62
 	.uleb128 0x3d
-	.4byte	.LASF358
+	.4byte	.LASF357
 	.byte	0x2
-	.2byte	0x67e
-	.4byte	0x30c
+	.2byte	0x6af
+	.4byte	0x2ff
 	.uleb128 0x51
 	.ascii	"n\000"
 	.byte	0x2
-	.2byte	0x67e
-	.4byte	0x30c
-	.4byte	.LLST196
+	.2byte	0x6af
+	.4byte	0x2ff
+	.4byte	.LLST197
 	.uleb128 0x3e
 	.ascii	"req\000"
 	.byte	0x2
-	.2byte	0x67e
-	.4byte	0x30c
+	.2byte	0x6af
+	.4byte	0x2ff
 	.uleb128 0x51
 	.ascii	"lpa\000"
 	.byte	0x2
-	.2byte	0x67f
-	.4byte	0x317
-	.4byte	.LLST197
-	.uleb128 0x44
-	.4byte	.LASF447
-	.byte	0x2
-	.2byte	0x67f
-	.4byte	0x317
+	.2byte	0x6b0
+	.4byte	0x30a
 	.4byte	.LLST198
 	.uleb128 0x44
-	.4byte	.LASF407
+	.4byte	.LASF446
 	.byte	0x2
-	.2byte	0x67f
-	.4byte	0x317
+	.2byte	0x6b0
+	.4byte	0x30a
 	.4byte	.LLST199
 	.uleb128 0x44
-	.4byte	.LASF399
+	.4byte	.LASF406
 	.byte	0x2
-	.2byte	0x67f
-	.4byte	0x317
+	.2byte	0x6b0
+	.4byte	0x30a
 	.4byte	.LLST200
 	.uleb128 0x44
-	.4byte	.LASF413
+	.4byte	.LASF398
 	.byte	0x2
-	.2byte	0x680
-	.4byte	0x30c
+	.2byte	0x6b0
+	.4byte	0x30a
 	.4byte	.LLST201
+	.uleb128 0x44
+	.4byte	.LASF412
+	.byte	0x2
+	.2byte	0x6b1
+	.4byte	0x2ff
+	.4byte	.LLST202
 	.uleb128 0x3d
-	.4byte	.LASF468
+	.4byte	.LASF467
 	.byte	0x2
-	.2byte	0x680
-	.4byte	0x30c
+	.2byte	0x6b1
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF469
+	.4byte	.LASF468
 	.byte	0x2
-	.2byte	0x681
-	.4byte	0x317
-	.4byte	.LLST202
+	.2byte	0x6b2
+	.4byte	0x30a
+	.4byte	.LLST203
 	.uleb128 0x3d
-	.4byte	.LASF470
+	.4byte	.LASF469
 	.byte	0x2
-	.2byte	0x682
-	.4byte	0x30c
+	.2byte	0x6b3
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF381
+	.4byte	.LASF380
 	.byte	0x2
-	.2byte	0x683
-	.4byte	0x1d4c
+	.2byte	0x6b4
+	.4byte	0x1d42
 	.uleb128 0x3d
-	.4byte	.LASF471
+	.4byte	.LASF470
 	.byte	0x2
-	.2byte	0x684
-	.4byte	0x317
+	.2byte	0x6b5
+	.4byte	0x30a
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x308b
+	.4byte	.LASF362
+	.4byte	0x308d
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.7137
+	.4byte	__func__.4306
 	.uleb128 0x47
-	.4byte	.LASF473
+	.4byte	.LASF472
 	.byte	0x2
-	.2byte	0x713
-	.4byte	.L1118
+	.2byte	0x744
+	.4byte	.L1126
 	.uleb128 0x47
-	.4byte	.LASF403
+	.4byte	.LASF402
 	.byte	0x2
-	.2byte	0x71b
-	.4byte	.L1130
+	.2byte	0x74c
+	.4byte	.L1138
 	.uleb128 0x47
-	.4byte	.LASF474
+	.4byte	.LASF473
 	.byte	0x2
-	.2byte	0x7ce
-	.4byte	.L1136
+	.2byte	0x7ff
+	.4byte	.L1144
 	.uleb128 0x3f
-	.4byte	.LASF475
+	.4byte	.LASF474
 	.byte	0x2
-	.2byte	0x7d8
-	.uleb128 0x52
-	.4byte	.LBB450
-	.4byte	.LBE450-.LBB450
-	.4byte	0x2f0a
+	.2byte	0x809
+	.uleb128 0x38
+	.4byte	.Ldebug_ranges0+0x208
+	.4byte	0x2f0c
 	.uleb128 0x3d
-	.4byte	.LASF476
+	.4byte	.LASF475
 	.byte	0x2
-	.2byte	0x6eb
-	.4byte	0x317
+	.2byte	0x71c
+	.4byte	0x30a
 	.uleb128 0x3d
-	.4byte	.LASF477
+	.4byte	.LASF476
 	.byte	0x2
-	.2byte	0x6ec
-	.4byte	0x317
-	.uleb128 0x24
-	.4byte	.LVL975
-	.4byte	0x1b05
+	.2byte	0x71d
+	.4byte	0x30a
+	.uleb128 0x23
+	.4byte	.LVL966
+	.4byte	0x1af9
 	.byte	0
 	.uleb128 0x38
-	.4byte	.Ldebug_ranges0+0x1c0
-	.4byte	0x2f7c
+	.4byte	.Ldebug_ranges0+0x220
+	.4byte	0x2f7e
 	.uleb128 0x44
-	.4byte	.LASF478
+	.4byte	.LASF477
 	.byte	0x2
-	.2byte	0x746
-	.4byte	0x317
-	.4byte	.LLST203
+	.2byte	0x777
+	.4byte	0x30a
+	.4byte	.LLST204
 	.uleb128 0x44
-	.4byte	.LASF479
+	.4byte	.LASF478
 	.byte	0x2
-	.2byte	0x747
-	.4byte	0x317
-	.4byte	.LLST204
-	.uleb128 0x24
+	.2byte	0x778
+	.4byte	0x30a
+	.4byte	.LLST205
+	.uleb128 0x23
+	.4byte	.LVL1004
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL1007
+	.4byte	0x2331
+	.uleb128 0x23
 	.4byte	.LVL1013
-	.4byte	0x1b05
-	.uleb128 0x24
+	.4byte	0x392e
+	.uleb128 0x23
 	.4byte	.LVL1015
-	.4byte	0x233b
-	.uleb128 0x24
-	.4byte	.LVL1020
-	.4byte	0x392c
-	.uleb128 0x24
-	.4byte	.LVL1022
-	.4byte	0x4517
-	.uleb128 0x24
+	.4byte	0x44c4
+	.uleb128 0x23
+	.4byte	.LVL1019
+	.4byte	0x3092
+	.uleb128 0x23
+	.4byte	.LVL1021
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL1023
+	.4byte	0x44c4
+	.uleb128 0x23
 	.4byte	.LVL1024
-	.4byte	0x3090
-	.uleb128 0x24
-	.4byte	.LVL1026
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL1028
-	.4byte	0x4517
-	.uleb128 0x24
-	.4byte	.LVL1029
-	.4byte	0x4517
+	.4byte	0x44c4
 	.byte	0
 	.uleb128 0x52
-	.4byte	.LBB454
-	.4byte	.LBE454-.LBB454
-	.4byte	0x2fbd
+	.4byte	.LBB477
+	.4byte	.LBE477-.LBB477
+	.4byte	0x2fbf
 	.uleb128 0x3d
-	.4byte	.LASF480
+	.4byte	.LASF479
 	.byte	0x2
-	.2byte	0x785
-	.4byte	0x317
+	.2byte	0x7b6
+	.4byte	0x30a
 	.uleb128 0x3d
-	.4byte	.LASF479
+	.4byte	.LASF478
 	.byte	0x2
-	.2byte	0x786
-	.4byte	0x317
-	.uleb128 0x24
-	.4byte	.LVL1033
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL1034
-	.4byte	0x4517
-	.uleb128 0x24
-	.4byte	.LVL1035
-	.4byte	0x392c
+	.2byte	0x7b7
+	.4byte	0x30a
+	.uleb128 0x23
+	.4byte	.LVL1029
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL1030
+	.4byte	0x44c4
+	.uleb128 0x23
+	.4byte	.LVL1031
+	.4byte	0x392e
 	.byte	0
-	.uleb128 0x24
+	.uleb128 0x23
+	.4byte	.LVL934
+	.4byte	0x442c
+	.uleb128 0x23
+	.4byte	.LVL936
+	.4byte	0x1af9
+	.uleb128 0x23
 	.4byte	.LVL941
-	.4byte	0x447f
-	.uleb128 0x24
-	.4byte	.LVL943
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL949
-	.4byte	0x458e
-	.uleb128 0x24
+	.4byte	0x453b
+	.uleb128 0x23
 	.4byte	.LVL955
-	.4byte	0x3147
-	.uleb128 0x24
-	.4byte	.LVL958
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL960
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL964
-	.4byte	0x4517
-	.uleb128 0x24
-	.4byte	.LVL979
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL957
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL961
+	.4byte	0x44c4
+	.uleb128 0x23
+	.4byte	.LVL971
 	.4byte	0x36a4
-	.uleb128 0x24
+	.uleb128 0x23
+	.4byte	.LVL975
+	.4byte	0x1af9
+	.uleb128 0x23
 	.4byte	.LVL982
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL991
-	.4byte	0x458e
-	.uleb128 0x24
+	.4byte	0x453b
+	.uleb128 0x23
+	.4byte	.LVL992
+	.4byte	0x2331
+	.uleb128 0x23
+	.4byte	.LVL996
+	.4byte	0x44c4
+	.uleb128 0x23
 	.4byte	.LVL1000
-	.4byte	0x233b
-	.uleb128 0x24
-	.4byte	.LVL1004
-	.4byte	0x4517
-	.uleb128 0x24
-	.4byte	.LVL1009
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1011
-	.4byte	0x392c
-	.uleb128 0x24
-	.4byte	.LVL1012
-	.4byte	0x4517
-	.uleb128 0x24
-	.4byte	.LVL1016
-	.4byte	0x455a
-	.uleb128 0x24
-	.4byte	.LVL1018
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1031
-	.4byte	0x392c
-	.uleb128 0x24
-	.4byte	.LVL1032
-	.4byte	0x455a
-	.uleb128 0x24
-	.4byte	.LVL1037
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1039
-	.4byte	0x233b
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1002
+	.4byte	0x392e
+	.uleb128 0x23
+	.4byte	.LVL1003
+	.4byte	0x44c4
+	.uleb128 0x23
+	.4byte	.LVL1008
+	.4byte	0x4507
+	.uleb128 0x23
+	.4byte	.LVL1010
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1027
+	.4byte	0x392e
+	.uleb128 0x23
+	.4byte	.LVL1028
+	.4byte	0x4507
+	.uleb128 0x23
+	.4byte	.LVL1033
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1035
+	.4byte	0x2331
+	.uleb128 0x23
+	.4byte	.LVL1044
+	.4byte	0x3149
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x3c
-	.4byte	0x308b
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x3a
+	.4byte	0x308d
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x15
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x307b
+	.uleb128 0x3
+	.4byte	0x307d
 	.uleb128 0x4f
-	.4byte	.LASF481
+	.4byte	.LASF480
 	.byte	0x2
-	.2byte	0x65b
-	.4byte	.LFB220
-	.4byte	.LFE220-.LFB220
+	.2byte	0x68c
+	.4byte	.LFB230
+	.4byte	.LFE230-.LFB230
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x3147
+	.4byte	0x3149
 	.uleb128 0x4d
 	.ascii	"lpa\000"
 	.byte	0x2
-	.2byte	0x65b
-	.4byte	0x317
-	.4byte	.LLST136
+	.2byte	0x68c
+	.4byte	0x30a
+	.4byte	.LLST138
 	.uleb128 0x43
-	.4byte	.LASF447
+	.4byte	.LASF446
 	.byte	0x2
-	.2byte	0x65b
-	.4byte	0x317
-	.4byte	.LLST137
+	.2byte	0x68c
+	.4byte	0x30a
+	.4byte	.LLST139
 	.uleb128 0x44
-	.4byte	.LASF413
+	.4byte	.LASF412
 	.byte	0x2
-	.2byte	0x65d
-	.4byte	0x30c
-	.4byte	.LLST138
+	.2byte	0x68e
+	.4byte	0x2ff
+	.4byte	.LLST140
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x23ec
+	.4byte	.LASF362
+	.4byte	0x23e2
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.7103
+	.4byte	__func__.4272
 	.uleb128 0x38
-	.4byte	.Ldebug_ranges0+0x128
-	.4byte	0x3134
+	.4byte	.Ldebug_ranges0+0x170
+	.4byte	0x3136
 	.uleb128 0x3e
 	.ascii	"i\000"
 	.byte	0x2
-	.2byte	0x661
-	.4byte	0x30c
+	.2byte	0x692
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF393
+	.4byte	.LASF392
 	.byte	0x2
-	.2byte	0x662
-	.4byte	0x30c
-	.4byte	.LLST139
+	.2byte	0x693
+	.4byte	0x2ff
+	.4byte	.LLST141
 	.uleb128 0x44
-	.4byte	.LASF94
+	.4byte	.LASF93
 	.byte	0x2
-	.2byte	0x663
-	.4byte	0x30c
-	.4byte	.LLST140
-	.uleb128 0x24
-	.4byte	.LVL621
+	.2byte	0x694
+	.4byte	0x2ff
+	.4byte	.LLST142
+	.uleb128 0x23
+	.4byte	.LVL643
 	.4byte	0x4086
-	.uleb128 0x24
-	.4byte	.LVL622
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL623
-	.4byte	0x4203
+	.uleb128 0x23
+	.4byte	.LVL644
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL645
+	.4byte	0x41ea
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL615
-	.4byte	0x455a
-	.uleb128 0x24
-	.4byte	.LVL630
-	.4byte	0x392c
+	.uleb128 0x23
+	.4byte	.LVL637
+	.4byte	0x4507
+	.uleb128 0x23
+	.4byte	.LVL652
+	.4byte	0x392e
 	.byte	0
 	.uleb128 0x4f
-	.4byte	.LASF482
+	.4byte	.LASF481
 	.byte	0x2
-	.2byte	0x647
-	.4byte	.LFB219
-	.4byte	.LFE219-.LFB219
+	.2byte	0x678
+	.4byte	.LFB229
+	.4byte	.LFE229-.LFB229
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x3198
+	.4byte	0x319a
 	.uleb128 0x56
-	.4byte	.LASF397
+	.4byte	.LASF396
 	.byte	0x2
-	.2byte	0x647
-	.4byte	0x12cb
+	.2byte	0x678
+	.4byte	0x12be
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x43
-	.4byte	.LASF171
+	.4byte	.LASF170
 	.byte	0x2
-	.2byte	0x647
-	.4byte	0x30c
-	.4byte	.LLST55
+	.2byte	0x678
+	.4byte	0x2ff
+	.4byte	.LLST53
 	.uleb128 0x43
-	.4byte	.LASF173
+	.4byte	.LASF172
 	.byte	0x2
-	.2byte	0x647
-	.4byte	0x30c
-	.4byte	.LLST56
+	.2byte	0x678
+	.4byte	0x2ff
+	.4byte	.LLST54
 	.uleb128 0x3d
-	.4byte	.LASF377
+	.4byte	.LASF376
 	.byte	0x2
-	.2byte	0x649
-	.4byte	0x30c
+	.2byte	0x67a
+	.4byte	0x2ff
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF483
+	.4byte	.LASF482
 	.byte	0x2
-	.2byte	0x63e
-	.4byte	0x64
-	.4byte	.LFB218
-	.4byte	.LFE218-.LFB218
+	.2byte	0x66f
+	.4byte	0x62
+	.4byte	.LFB228
+	.4byte	.LFE228-.LFB228
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x31c5
-	.uleb128 0x24
-	.4byte	.LVL766
-	.4byte	0x31c5
-	.uleb128 0x24
-	.4byte	.LVL767
-	.4byte	0x321e
+	.4byte	0x31c7
+	.uleb128 0x23
+	.4byte	.LVL770
+	.4byte	0x31c7
+	.uleb128 0x23
+	.4byte	.LVL771
+	.4byte	0x3220
 	.byte	0
 	.uleb128 0x4f
-	.4byte	.LASF484
+	.4byte	.LASF483
 	.byte	0x2
-	.2byte	0x627
-	.4byte	.LFB217
-	.4byte	.LFE217-.LFB217
+	.2byte	0x658
+	.4byte	.LFB227
+	.4byte	.LFE227-.LFB227
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x31fa
+	.4byte	0x31fc
 	.uleb128 0x3d
-	.4byte	.LASF120
+	.4byte	.LASF119
 	.byte	0x2
-	.2byte	0x629
-	.4byte	0x30c
-	.uleb128 0x24
-	.4byte	.LVL764
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL765
-	.4byte	0x17d1
+	.2byte	0x65a
+	.4byte	0x2ff
+	.uleb128 0x23
+	.4byte	.LVL768
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL769
+	.4byte	0x17c6
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF485
+	.4byte	.LASF484
 	.byte	0x2
-	.2byte	0x617
-	.4byte	0x64
-	.4byte	.LFB216
-	.4byte	.LFE216-.LFB216
+	.2byte	0x648
+	.4byte	0x62
+	.4byte	.LFB226
+	.4byte	.LFE226-.LFB226
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x321e
-	.uleb128 0x24
-	.4byte	.LVL763
-	.4byte	0x321e
+	.4byte	0x3220
+	.uleb128 0x23
+	.4byte	.LVL767
+	.4byte	0x3220
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF486
+	.4byte	.LASF485
 	.byte	0x2
-	.2byte	0x5b9
-	.4byte	0x64
-	.4byte	.LFB215
-	.4byte	.LFE215-.LFB215
+	.2byte	0x5ea
+	.4byte	0x62
+	.4byte	.LFB225
+	.4byte	.LFE225-.LFB225
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x332e
+	.4byte	0x3330
 	.uleb128 0x43
-	.4byte	.LASF487
+	.4byte	.LASF486
 	.byte	0x2
-	.2byte	0x5b9
-	.4byte	0x332e
-	.4byte	.LLST150
+	.2byte	0x5ea
+	.4byte	0x3330
+	.4byte	.LLST152
 	.uleb128 0x44
-	.4byte	.LASF488
+	.4byte	.LASF487
 	.byte	0x2
-	.2byte	0x5bb
-	.4byte	0x32d
-	.4byte	.LLST151
+	.2byte	0x5ec
+	.4byte	0x320
+	.4byte	.LLST153
 	.uleb128 0x3d
-	.4byte	.LASF86
+	.4byte	.LASF85
 	.byte	0x2
-	.2byte	0x5bb
-	.4byte	0x32d
+	.2byte	0x5ec
+	.4byte	0x320
 	.uleb128 0x44
-	.4byte	.LASF489
+	.4byte	.LASF488
 	.byte	0x2
-	.2byte	0x5bc
-	.4byte	0x32d
-	.4byte	.LLST152
+	.2byte	0x5ed
+	.4byte	0x320
+	.4byte	.LLST154
 	.uleb128 0x3d
-	.4byte	.LASF120
+	.4byte	.LASF119
 	.byte	0x2
-	.2byte	0x5bd
-	.4byte	0x30c
+	.2byte	0x5ee
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF490
+	.4byte	.LASF489
 	.byte	0x2
-	.2byte	0x5be
-	.4byte	0x544
-	.4byte	.LLST153
+	.2byte	0x5ef
+	.4byte	0x537
+	.4byte	.LLST155
 	.uleb128 0x44
-	.4byte	.LASF99
+	.4byte	.LASF98
 	.byte	0x2
-	.2byte	0x5bf
-	.4byte	0x63b
-	.4byte	.LLST154
+	.2byte	0x5f0
+	.4byte	0x62e
+	.4byte	.LLST156
 	.uleb128 0x44
-	.4byte	.LASF100
+	.4byte	.LASF99
 	.byte	0x2
-	.2byte	0x5c0
-	.4byte	0x544
-	.4byte	.LLST155
+	.2byte	0x5f1
+	.4byte	0x537
+	.4byte	.LLST157
 	.uleb128 0x44
-	.4byte	.LASF96
+	.4byte	.LASF95
 	.byte	0x2
-	.2byte	0x5c1
-	.4byte	0x30c
-	.4byte	.LLST156
+	.2byte	0x5f2
+	.4byte	0x2ff
+	.4byte	.LLST158
 	.uleb128 0x44
-	.4byte	.LASF491
+	.4byte	.LASF490
 	.byte	0x2
-	.2byte	0x5c2
-	.4byte	0x30c
-	.4byte	.LLST157
+	.2byte	0x5f3
+	.4byte	0x2ff
+	.4byte	.LLST159
 	.uleb128 0x3d
-	.4byte	.LASF492
+	.4byte	.LASF491
 	.byte	0x2
-	.2byte	0x5c3
-	.4byte	0x3334
-	.uleb128 0x24
-	.4byte	.LVL716
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL724
-	.4byte	0x447f
-	.uleb128 0x24
+	.2byte	0x5f4
+	.4byte	0x3336
+	.uleb128 0x23
+	.4byte	.LVL729
+	.4byte	0x17c6
+	.uleb128 0x23
 	.4byte	.LVL734
+	.4byte	0x442c
+	.uleb128 0x23
+	.4byte	.LVL741
 	.4byte	0x3dce
-	.uleb128 0x24
-	.4byte	.LVL735
+	.uleb128 0x23
+	.4byte	.LVL742
 	.4byte	0x3d76
-	.uleb128 0x24
-	.4byte	.LVL736
-	.4byte	0x3cab
-	.uleb128 0x24
-	.4byte	.LVL737
-	.4byte	0x3cab
-	.uleb128 0x24
-	.4byte	.LVL741
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL750
-	.4byte	0x1b05
-	.uleb128 0x24
+	.uleb128 0x23
+	.4byte	.LVL743
+	.4byte	0x3ca9
+	.uleb128 0x23
+	.4byte	.LVL744
+	.4byte	0x3ca9
+	.uleb128 0x23
+	.4byte	.LVL747
+	.4byte	0x1af9
+	.uleb128 0x23
 	.4byte	.LVL754
-	.4byte	0x1b05
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL757
+	.4byte	0x1af9
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x592
-	.uleb128 0x8
+	.4byte	0x585
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x7c3
+	.4byte	0x7b6
 	.uleb128 0x4c
-	.4byte	.LASF493
+	.4byte	.LASF492
 	.byte	0x2
-	.2byte	0x54f
-	.4byte	0x64
-	.4byte	.LFB214
-	.4byte	.LFE214-.LFB214
+	.2byte	0x580
+	.4byte	0x62
+	.4byte	.LFB224
+	.4byte	.LFE224-.LFB224
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x33e9
+	.4byte	0x33eb
 	.uleb128 0x44
-	.4byte	.LASF489
+	.4byte	.LASF488
 	.byte	0x2
-	.2byte	0x551
-	.4byte	0x32d
+	.2byte	0x582
+	.4byte	0x320
 	.4byte	.LLST286
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x1b00
+	.4byte	.LASF362
+	.4byte	0x1af4
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.7040
-	.uleb128 0x24
+	.4byte	__func__.4209
+	.uleb128 0x23
+	.4byte	.LVL1551
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL1552
+	.4byte	0x442c
+	.uleb128 0x23
+	.4byte	.LVL1554
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1555
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1557
+	.4byte	0x176f
+	.uleb128 0x23
+	.4byte	.LVL1558
+	.4byte	0x176f
+	.uleb128 0x23
+	.4byte	.LVL1559
+	.4byte	0x176f
+	.uleb128 0x23
 	.4byte	.LVL1561
-	.4byte	0x17d1
-	.uleb128 0x24
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL1562
-	.4byte	0x447f
-	.uleb128 0x24
+	.4byte	0x2c58
+	.uleb128 0x23
+	.4byte	.LVL1563
+	.4byte	0x2c58
+	.uleb128 0x23
 	.4byte	.LVL1564
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	0x2c58
+	.uleb128 0x23
 	.4byte	.LVL1565
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	0x2c58
+	.uleb128 0x23
 	.4byte	.LVL1567
-	.4byte	0x177a
-	.uleb128 0x24
-	.4byte	.LVL1568
-	.4byte	0x177a
-	.uleb128 0x24
-	.4byte	.LVL1569
-	.4byte	0x177a
-	.uleb128 0x24
-	.4byte	.LVL1571
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1572
-	.4byte	0x2c52
-	.uleb128 0x24
-	.4byte	.LVL1573
-	.4byte	0x2c52
-	.uleb128 0x24
-	.4byte	.LVL1574
-	.4byte	0x2c52
-	.uleb128 0x24
-	.4byte	.LVL1575
-	.4byte	0x2c52
-	.uleb128 0x24
-	.4byte	.LVL1577
-	.4byte	0x1b05
+	.4byte	0x1af9
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF494
+	.4byte	.LASF493
 	.byte	0x2
-	.2byte	0x54a
-	.4byte	0x64
-	.4byte	.LFB213
-	.4byte	.LFE213-.LFB213
+	.2byte	0x57b
+	.4byte	0x62
+	.4byte	.LFB223
+	.4byte	.LFE223-.LFB223
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x3414
+	.4byte	0x3416
 	.uleb128 0x43
-	.4byte	.LASF495
+	.4byte	.LASF494
 	.byte	0x2
-	.2byte	0x54a
-	.4byte	0x30c
-	.4byte	.LLST54
+	.2byte	0x57b
+	.4byte	0x2ff
+	.4byte	.LLST52
 	.byte	0
 	.uleb128 0x55
-	.4byte	.LASF497
+	.4byte	.LASF496
 	.byte	0x2
-	.2byte	0x542
+	.2byte	0x573
 	.byte	0x1
-	.4byte	0x343a
+	.4byte	0x343c
 	.uleb128 0x3c
-	.4byte	.LASF495
+	.4byte	.LASF494
 	.byte	0x2
-	.2byte	0x542
-	.4byte	0x30c
+	.2byte	0x573
+	.4byte	0x2ff
 	.uleb128 0x3c
-	.4byte	.LASF373
+	.4byte	.LASF372
 	.byte	0x2
-	.2byte	0x542
-	.4byte	0x64
+	.2byte	0x573
+	.4byte	0x62
 	.byte	0
 	.uleb128 0x42
-	.4byte	.LASF499
+	.4byte	.LASF498
 	.byte	0x2
-	.2byte	0x535
-	.4byte	0x64
+	.2byte	0x566
+	.4byte	0x62
 	.byte	0x1
 	.uleb128 0x3a
-	.4byte	.LASF500
+	.4byte	.LASF499
 	.byte	0x2
-	.2byte	0x446
-	.4byte	0x64
-	.4byte	.LFB210
-	.4byte	.LFE210-.LFB210
+	.2byte	0x477
+	.4byte	0x62
+	.4byte	.LFB220
+	.4byte	.LFE220-.LFB220
 	.uleb128 0x1
 	.byte	0x9c
 	.4byte	0x3593
 	.uleb128 0x3d
-	.4byte	.LASF377
+	.4byte	.LASF376
 	.byte	0x2
-	.2byte	0x448
-	.4byte	0x30c
+	.2byte	0x479
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF501
+	.4byte	.LASF500
 	.byte	0x2
-	.2byte	0x448
-	.4byte	0x30c
-	.4byte	.LLST147
+	.2byte	0x479
+	.4byte	0x2ff
+	.4byte	.LLST150
 	.uleb128 0x3d
-	.4byte	.LASF179
+	.4byte	.LASF178
 	.byte	0x2
-	.2byte	0x449
-	.4byte	0x30c
-	.uleb128 0x44
-	.4byte	.LASF358
+	.2byte	0x47a
+	.4byte	0x2ff
+	.uleb128 0x1e
+	.4byte	.LASF357
 	.byte	0x2
-	.2byte	0x449
-	.4byte	0x30c
-	.4byte	.LLST148
+	.2byte	0x47a
+	.4byte	0x2ff
+	.uleb128 0x1
+	.byte	0x5a
 	.uleb128 0x3e
 	.ascii	"i\000"
 	.byte	0x2
-	.2byte	0x44a
-	.4byte	0x32d
+	.2byte	0x47b
+	.4byte	0x320
 	.uleb128 0x3e
 	.ascii	"j\000"
 	.byte	0x2
-	.2byte	0x44a
-	.4byte	0x32d
+	.2byte	0x47b
+	.4byte	0x320
 	.uleb128 0x44
-	.4byte	.LASF502
+	.4byte	.LASF501
 	.byte	0x2
-	.2byte	0x44b
-	.4byte	0x3334
-	.4byte	.LLST149
+	.2byte	0x47c
+	.4byte	0x3336
+	.4byte	.LLST151
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x29d0
+	.4byte	.LASF362
+	.4byte	0x29d6
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.6983
+	.4byte	__func__.4152
 	.uleb128 0x53
-	.4byte	0x17d1
-	.4byte	.LBB396
-	.4byte	.LBE396-.LBB396
+	.4byte	0x17c6
+	.4byte	.LBB418
+	.4byte	.LBE418-.LBB418
 	.byte	0x2
-	.2byte	0x453
+	.2byte	0x484
 	.4byte	0x351d
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB397
-	.4byte	.LBE397-.LBB397
+	.4byte	.LBB419
+	.4byte	.LBE419-.LBB419
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB398
-	.4byte	.LBE398-.LBB398
+	.4byte	.LBB420
+	.4byte	.LBE420-.LBB420
 	.uleb128 0x30
-	.4byte	0x6134
+	.4byte	0x61fc
 	.uleb128 0x30
-	.4byte	0x6139
+	.4byte	0x6201
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL668
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL669
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL670
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL671
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL678
-	.4byte	0x45c2
-	.uleb128 0x24
-	.4byte	.LVL679
-	.4byte	0x4af7
-	.uleb128 0x24
-	.4byte	.LVL694
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL698
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL699
-	.4byte	0x4367
-	.uleb128 0x24
+	.uleb128 0x23
+	.4byte	.LVL690
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL691
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL692
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL693
+	.4byte	0x17c6
+	.uleb128 0x23
 	.4byte	.LVL700
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	0x456f
+	.uleb128 0x23
 	.4byte	.LVL701
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL702
-	.4byte	0x4367
-	.uleb128 0x24
-	.4byte	.LVL705
-	.4byte	0x6727
+	.4byte	0x4a9e
+	.uleb128 0x23
+	.4byte	.LVL707
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL709
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL710
+	.4byte	0x435a
+	.uleb128 0x23
+	.4byte	.LVL711
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL712
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL713
+	.4byte	0x435a
+	.uleb128 0x23
+	.4byte	.LVL716
+	.4byte	0x67ee
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF503
+	.4byte	.LASF502
 	.byte	0x2
-	.2byte	0x3eb
-	.4byte	0x64
-	.4byte	.LFB209
-	.4byte	.LFE209-.LFB209
+	.2byte	0x41c
+	.4byte	0x62
+	.4byte	.LFB219
+	.4byte	.LFE219-.LFB219
 	.uleb128 0x1
 	.byte	0x9c
 	.4byte	0x3652
-	.uleb128 0x1f
-	.4byte	.LASF87
+	.uleb128 0x1e
+	.4byte	.LASF86
 	.byte	0x2
-	.2byte	0x3ed
-	.4byte	0x30c
+	.2byte	0x41e
+	.4byte	0x2ff
 	.uleb128 0x1
 	.byte	0x58
 	.uleb128 0x3d
-	.4byte	.LASF504
+	.4byte	.LASF503
 	.byte	0x2
-	.2byte	0x3ee
+	.2byte	0x41f
 	.4byte	0x3652
 	.uleb128 0x44
-	.4byte	.LASF505
+	.4byte	.LASF504
 	.byte	0x2
-	.2byte	0x3ef
-	.4byte	0x30c
+	.2byte	0x420
+	.4byte	0x2ff
 	.4byte	.LLST223
 	.uleb128 0x3f
-	.4byte	.LASF506
+	.4byte	.LASF505
 	.byte	0x2
-	.2byte	0x41c
+	.2byte	0x44d
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x1b00
+	.4byte	.LASF362
+	.4byte	0x1af4
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.6961
-	.uleb128 0x24
+	.4byte	__func__.4130
+	.uleb128 0x23
+	.4byte	.LVL1147
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL1149
+	.4byte	0x176f
+	.uleb128 0x23
+	.4byte	.LVL1150
+	.4byte	0x176f
+	.uleb128 0x23
+	.4byte	.LVL1151
+	.4byte	0x176f
+	.uleb128 0x23
+	.4byte	.LVL1152
+	.4byte	0x3712
+	.uleb128 0x23
+	.4byte	.LVL1153
+	.4byte	0x19ea
+	.uleb128 0x23
 	.4byte	.LVL1154
-	.4byte	0x17d1
-	.uleb128 0x24
+	.4byte	0x4234
+	.uleb128 0x23
+	.4byte	.LVL1155
+	.4byte	0x19ea
+	.uleb128 0x23
 	.4byte	.LVL1156
-	.4byte	0x177a
-	.uleb128 0x24
-	.4byte	.LVL1157
-	.4byte	0x177a
-	.uleb128 0x24
-	.4byte	.LVL1158
-	.4byte	0x177a
-	.uleb128 0x24
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL1159
-	.4byte	0x3710
-	.uleb128 0x24
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL1160
-	.4byte	0x19f5
-	.uleb128 0x24
-	.4byte	.LVL1161
-	.4byte	0x424d
-	.uleb128 0x24
-	.4byte	.LVL1162
-	.4byte	0x19f5
-	.uleb128 0x24
-	.4byte	.LVL1163
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1166
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1167
-	.4byte	0x4367
+	.4byte	0x435a
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x81b
+	.4byte	0x80e
 	.uleb128 0x55
-	.4byte	.LASF507
+	.4byte	.LASF506
 	.byte	0x2
-	.2byte	0x3b2
+	.2byte	0x3e3
 	.byte	0x1
 	.4byte	0x36a4
 	.uleb128 0x28
 	.uleb128 0x3e
 	.ascii	"lpa\000"
 	.byte	0x2
-	.2byte	0x3b7
-	.4byte	0x317
+	.2byte	0x3e8
+	.4byte	0x30a
 	.uleb128 0x3e
 	.ascii	"ppa\000"
 	.byte	0x2
-	.2byte	0x3b8
-	.4byte	0x317
+	.2byte	0x3e9
+	.4byte	0x30a
 	.uleb128 0x3d
-	.4byte	.LASF508
+	.4byte	.LASF507
 	.byte	0x2
-	.2byte	0x3b9
-	.4byte	0x317
+	.2byte	0x3ea
+	.4byte	0x30a
 	.uleb128 0x3d
-	.4byte	.LASF451
+	.4byte	.LASF450
 	.byte	0x2
-	.2byte	0x3ba
-	.4byte	0x338
+	.2byte	0x3eb
+	.4byte	0x32b
 	.uleb128 0x3d
-	.4byte	.LASF381
+	.4byte	.LASF380
 	.byte	0x2
-	.2byte	0x3bb
-	.4byte	0x1d4c
+	.2byte	0x3ec
+	.4byte	0x1d42
 	.byte	0
 	.byte	0
 	.uleb128 0x4f
-	.4byte	.LASF509
+	.4byte	.LASF508
 	.byte	0x2
-	.2byte	0x380
-	.4byte	.LFB207
-	.4byte	.LFE207-.LFB207
+	.2byte	0x3b1
+	.4byte	.LFB217
+	.4byte	.LFE217-.LFB217
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x3710
-	.uleb128 0x56
-	.4byte	.LASF487
+	.4byte	0x3712
+	.uleb128 0x43
+	.4byte	.LASF486
 	.byte	0x2
-	.2byte	0x380
-	.4byte	0x332e
-	.uleb128 0x1
-	.byte	0x50
+	.2byte	0x3b1
+	.4byte	0x3330
+	.4byte	.LLST147
 	.uleb128 0x51
 	.ascii	"ppa\000"
 	.byte	0x2
-	.2byte	0x382
-	.4byte	0x317
-	.4byte	.LLST145
+	.2byte	0x3b3
+	.4byte	0x30a
+	.4byte	.LLST148
 	.uleb128 0x3d
-	.4byte	.LASF106
+	.4byte	.LASF105
 	.byte	0x2
-	.2byte	0x383
-	.4byte	0x30c
+	.2byte	0x3b4
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF490
+	.4byte	.LASF489
 	.byte	0x2
-	.2byte	0x384
-	.4byte	0x544
-	.4byte	.LLST146
-	.uleb128 0x24
-	.4byte	.LVL663
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL664
-	.4byte	0x3ac7
-	.uleb128 0x24
-	.4byte	.LVL667
-	.4byte	0x17d1
+	.2byte	0x3b5
+	.4byte	0x537
+	.4byte	.LLST149
+	.uleb128 0x23
+	.4byte	.LVL685
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL686
+	.4byte	0x3ac5
+	.uleb128 0x23
+	.4byte	.LVL689
+	.4byte	0x17c6
 	.byte	0
 	.uleb128 0x55
-	.4byte	.LASF510
+	.4byte	.LASF509
 	.byte	0x2
-	.2byte	0x371
+	.2byte	0x3a2
 	.byte	0x1
-	.4byte	0x3734
+	.4byte	0x3736
 	.uleb128 0x3c
-	.4byte	.LASF184
+	.4byte	.LASF183
 	.byte	0x2
-	.2byte	0x371
-	.4byte	0x317
+	.2byte	0x3a2
+	.4byte	0x30a
 	.uleb128 0x3e
 	.ascii	"i\000"
 	.byte	0x2
-	.2byte	0x373
-	.4byte	0x30c
+	.2byte	0x3a4
+	.4byte	0x2ff
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF511
+	.4byte	.LASF510
 	.byte	0x2
-	.2byte	0x35c
-	.4byte	0x64
-	.4byte	.LFB205
-	.4byte	.LFE205-.LFB205
+	.2byte	0x38d
+	.4byte	0x62
+	.4byte	.LFB215
+	.4byte	.LFE215-.LFB215
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x3781
+	.4byte	0x3783
 	.uleb128 0x43
-	.4byte	.LASF512
+	.4byte	.LASF511
 	.byte	0x2
-	.2byte	0x35c
-	.4byte	0x317
-	.4byte	.LLST216
+	.2byte	0x38d
+	.4byte	0x30a
+	.4byte	.LLST215
 	.uleb128 0x44
-	.4byte	.LASF513
+	.4byte	.LASF512
 	.byte	0x2
-	.2byte	0x35e
-	.4byte	0x317
-	.4byte	.LLST217
-	.uleb128 0x24
-	.4byte	.LVL1134
-	.4byte	0x3855
-	.uleb128 0x24
-	.4byte	.LVL1135
-	.4byte	0x2b80
+	.2byte	0x38f
+	.4byte	0x30a
+	.4byte	.LLST216
+	.uleb128 0x23
+	.4byte	.LVL1124
+	.4byte	0x3859
+	.uleb128 0x23
+	.4byte	.LVL1125
+	.4byte	0x2b86
 	.byte	0
 	.uleb128 0x4c
-	.4byte	.LASF514
+	.4byte	.LASF513
 	.byte	0x2
-	.2byte	0x336
-	.4byte	0x317
-	.4byte	.LFB204
-	.4byte	.LFE204-.LFB204
+	.2byte	0x367
+	.4byte	0x30a
+	.4byte	.LFB214
+	.4byte	.LFE214-.LFB214
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x384f
+	.4byte	0x3853
+	.uleb128 0x43
+	.4byte	.LASF514
+	.byte	0x2
+	.2byte	0x367
+	.4byte	0x30a
+	.4byte	.LLST217
 	.uleb128 0x43
 	.4byte	.LASF515
 	.byte	0x2
-	.2byte	0x336
-	.4byte	0x317
+	.2byte	0x367
+	.4byte	0x30a
 	.4byte	.LLST218
 	.uleb128 0x43
 	.4byte	.LASF516
 	.byte	0x2
-	.2byte	0x336
-	.4byte	0x317
+	.2byte	0x367
+	.4byte	0x3853
 	.4byte	.LLST219
-	.uleb128 0x43
-	.4byte	.LASF517
-	.byte	0x2
-	.2byte	0x336
-	.4byte	0x384f
-	.4byte	.LLST220
 	.uleb128 0x51
 	.ascii	"len\000"
 	.byte	0x2
-	.2byte	0x338
-	.4byte	0x30c
-	.4byte	.LLST221
+	.2byte	0x369
+	.4byte	0x2ff
+	.4byte	.LLST220
 	.uleb128 0x3d
-	.4byte	.LASF518
+	.4byte	.LASF517
 	.byte	0x2
-	.2byte	0x338
-	.4byte	0x30c
-	.uleb128 0x50
+	.2byte	0x369
+	.4byte	0x2ff
+	.uleb128 0x51
 	.ascii	"ppn\000"
 	.byte	0x2
-	.2byte	0x339
-	.4byte	0x317
-	.uleb128 0x1
-	.byte	0x5a
-	.uleb128 0x1f
-	.4byte	.LASF519
+	.2byte	0x36a
+	.4byte	0x30a
+	.4byte	.LLST221
+	.uleb128 0x1e
+	.4byte	.LASF518
 	.byte	0x2
-	.2byte	0x33a
-	.4byte	0x317
+	.2byte	0x36b
+	.4byte	0x30a
 	.uleb128 0x1
 	.byte	0x58
 	.uleb128 0x50
 	.ascii	"req\000"
 	.byte	0x2
-	.2byte	0x33b
-	.4byte	0x338
+	.2byte	0x36c
+	.4byte	0x32b
 	.uleb128 0x3
 	.byte	0x91
-	.sleb128 -132
+	.sleb128 -128
 	.uleb128 0x44
-	.4byte	.LASF520
+	.4byte	.LASF519
 	.byte	0x2
-	.2byte	0x33c
-	.4byte	0x317
+	.2byte	0x36d
+	.4byte	0x30a
 	.4byte	.LLST222
-	.uleb128 0x1f
-	.4byte	.LASF354
+	.uleb128 0x1e
+	.4byte	.LASF353
 	.byte	0x2
-	.2byte	0x33d
-	.4byte	0x194f
+	.2byte	0x36e
+	.4byte	0x1944
 	.uleb128 0x3
 	.byte	0x91
-	.sleb128 -112
-	.uleb128 0x24
-	.4byte	.LVL1145
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL1146
-	.4byte	0x177a
-	.uleb128 0x24
-	.4byte	.LVL1147
-	.4byte	0x17d1
+	.sleb128 -108
+	.uleb128 0x23
+	.4byte	.LVL1137
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL1138
+	.4byte	0x176f
+	.uleb128 0x23
+	.4byte	.LVL1140
+	.4byte	0x17c6
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x301
+	.4byte	0x2f4
 	.uleb128 0x4c
-	.4byte	.LASF521
+	.4byte	.LASF520
 	.byte	0x2
-	.2byte	0x311
-	.4byte	0x317
-	.4byte	.LFB203
-	.4byte	.LFE203-.LFB203
+	.2byte	0x342
+	.4byte	0x30a
+	.4byte	.LFB213
+	.4byte	.LFE213-.LFB213
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x392c
+	.4byte	0x392e
 	.uleb128 0x43
-	.4byte	.LASF515
+	.4byte	.LASF514
 	.byte	0x2
-	.2byte	0x311
-	.4byte	0x317
+	.2byte	0x342
+	.4byte	0x30a
 	.4byte	.LLST211
 	.uleb128 0x43
-	.4byte	.LASF516
+	.4byte	.LASF515
 	.byte	0x2
-	.2byte	0x311
-	.4byte	0x317
+	.2byte	0x342
+	.4byte	0x30a
 	.4byte	.LLST212
 	.uleb128 0x43
-	.4byte	.LASF517
+	.4byte	.LASF516
 	.byte	0x2
-	.2byte	0x311
-	.4byte	0x384f
+	.2byte	0x342
+	.4byte	0x3853
 	.4byte	.LLST213
-	.uleb128 0x51
+	.uleb128 0x50
 	.ascii	"len\000"
 	.byte	0x2
-	.2byte	0x313
-	.4byte	0x30c
-	.4byte	.LLST214
+	.2byte	0x344
+	.4byte	0x2ff
+	.uleb128 0x1
+	.byte	0x59
 	.uleb128 0x3d
-	.4byte	.LASF518
+	.4byte	.LASF517
 	.byte	0x2
-	.2byte	0x313
-	.4byte	0x30c
+	.2byte	0x344
+	.4byte	0x2ff
 	.uleb128 0x51
 	.ascii	"ppn\000"
 	.byte	0x2
-	.2byte	0x314
-	.4byte	0x317
-	.4byte	.LLST215
-	.uleb128 0x1f
-	.4byte	.LASF519
+	.2byte	0x345
+	.4byte	0x30a
+	.4byte	.LLST214
+	.uleb128 0x1e
+	.4byte	.LASF518
 	.byte	0x2
-	.2byte	0x315
-	.4byte	0x317
+	.2byte	0x346
+	.4byte	0x30a
 	.uleb128 0x1
-	.byte	0x59
+	.byte	0x58
 	.uleb128 0x50
 	.ascii	"req\000"
 	.byte	0x2
-	.2byte	0x316
-	.4byte	0x338
+	.2byte	0x347
+	.4byte	0x32b
 	.uleb128 0x3
 	.byte	0x91
-	.sleb128 -132
-	.uleb128 0x1f
-	.4byte	.LASF520
+	.sleb128 -128
+	.uleb128 0x1e
+	.4byte	.LASF519
 	.byte	0x2
-	.2byte	0x317
-	.4byte	0x317
+	.2byte	0x348
+	.4byte	0x30a
 	.uleb128 0x1
-	.byte	0x57
-	.uleb128 0x1f
-	.4byte	.LASF354
+	.byte	0x56
+	.uleb128 0x1e
+	.4byte	.LASF353
 	.byte	0x2
-	.2byte	0x318
-	.4byte	0x194f
+	.2byte	0x349
+	.4byte	0x1944
 	.uleb128 0x3
 	.byte	0x91
-	.sleb128 -112
-	.uleb128 0x24
-	.4byte	.LVL1116
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL1117
-	.4byte	0x177a
-	.uleb128 0x24
-	.4byte	.LVL1118
-	.4byte	0x3ac7
-	.uleb128 0x24
-	.4byte	.LVL1123
-	.4byte	0x17d1
+	.sleb128 -108
+	.uleb128 0x23
+	.4byte	.LVL1108
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL1109
+	.4byte	0x176f
+	.uleb128 0x23
+	.4byte	.LVL1110
+	.4byte	0x3ac5
+	.uleb128 0x23
+	.4byte	.LVL1113
+	.4byte	0x17c6
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF522
+	.4byte	.LASF521
 	.byte	0x2
-	.2byte	0x2f0
-	.4byte	0x64
-	.4byte	.LFB202
-	.4byte	.LFE202-.LFB202
+	.2byte	0x321
+	.4byte	0x62
+	.4byte	.LFB212
+	.4byte	.LFE212-.LFB212
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x39e2
+	.4byte	0x39e4
 	.uleb128 0x4d
 	.ascii	"lpn\000"
 	.byte	0x2
-	.2byte	0x2f0
-	.4byte	0x317
-	.4byte	.LLST132
+	.2byte	0x321
+	.4byte	0x30a
+	.4byte	.LLST134
 	.uleb128 0x4d
 	.ascii	"ppn\000"
 	.byte	0x2
-	.2byte	0x2f0
-	.4byte	0x544
-	.4byte	.LLST133
+	.2byte	0x321
+	.4byte	0x537
+	.4byte	.LLST135
 	.uleb128 0x43
-	.4byte	.LASF523
+	.4byte	.LASF522
 	.byte	0x2
-	.2byte	0x2f0
-	.4byte	0x64
-	.4byte	.LLST134
+	.2byte	0x321
+	.4byte	0x62
+	.4byte	.LLST136
 	.uleb128 0x44
-	.4byte	.LASF524
+	.4byte	.LASF523
 	.byte	0x2
-	.2byte	0x2f2
-	.4byte	0x30c
-	.4byte	.LLST135
-	.uleb128 0x1f
-	.4byte	.LASF525
+	.2byte	0x323
+	.4byte	0x2ff
+	.4byte	.LLST137
+	.uleb128 0x1e
+	.4byte	.LASF524
 	.byte	0x2
-	.2byte	0x2f2
-	.4byte	0x30c
+	.2byte	0x323
+	.4byte	0x2ff
 	.uleb128 0x1
 	.byte	0x58
-	.uleb128 0x1f
-	.4byte	.LASF526
+	.uleb128 0x1e
+	.4byte	.LASF525
 	.byte	0x2
-	.2byte	0x2f2
-	.4byte	0x30c
+	.2byte	0x323
+	.4byte	0x2ff
 	.uleb128 0x1
 	.byte	0x56
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x39f2
+	.4byte	.LASF362
+	.4byte	0x39f4
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.6888
+	.4byte	__func__.4057
 	.uleb128 0x47
-	.4byte	.LASF527
+	.4byte	.LASF526
 	.byte	0x2
-	.2byte	0x2fb
-	.4byte	.L728
-	.uleb128 0x24
-	.4byte	.LVL604
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL606
-	.4byte	0x3a32
-	.uleb128 0x24
-	.4byte	.LVL607
-	.4byte	0x3a87
-	.uleb128 0x24
-	.4byte	.LVL608
+	.2byte	0x32c
+	.4byte	.L737
+	.uleb128 0x23
+	.4byte	.LVL627
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL630
+	.4byte	0x3a30
+	.uleb128 0x23
+	.4byte	.LVL631
+	.4byte	0x3a85
+	.uleb128 0x23
+	.4byte	.LVL632
 	.4byte	0x3e7f
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x3c
-	.4byte	0x39f2
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x3a
+	.4byte	0x39f4
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x8
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x39e2
+	.uleb128 0x3
+	.4byte	0x39e4
 	.uleb128 0x3a
-	.4byte	.LASF528
+	.4byte	.LASF527
 	.byte	0x2
-	.2byte	0x2e3
-	.4byte	0x64
-	.4byte	.LFB201
-	.4byte	.LFE201-.LFB201
+	.2byte	0x314
+	.4byte	0x62
+	.4byte	.LFB211
+	.4byte	.LFE211-.LFB211
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x3a32
-	.uleb128 0x51
+	.4byte	0x3a30
+	.uleb128 0x3e
 	.ascii	"i\000"
 	.byte	0x2
-	.2byte	0x2e5
-	.4byte	0x30c
-	.4byte	.LLST189
-	.uleb128 0x24
-	.4byte	.LVL926
+	.2byte	0x316
+	.4byte	0x2ff
+	.uleb128 0x23
+	.4byte	.LVL921
 	.4byte	0x3658
-	.uleb128 0x24
-	.4byte	.LVL929
-	.4byte	0x3a87
+	.uleb128 0x23
+	.4byte	.LVL922
+	.4byte	0x3a85
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF529
+	.4byte	.LASF528
 	.byte	0x2
-	.2byte	0x2bb
-	.4byte	0x30c
-	.4byte	.LFB200
-	.4byte	.LFE200-.LFB200
+	.2byte	0x2ec
+	.4byte	0x2ff
+	.4byte	.LFB210
+	.4byte	.LFE210-.LFB210
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x3a87
+	.4byte	0x3a85
 	.uleb128 0x3e
 	.ascii	"i\000"
 	.byte	0x2
-	.2byte	0x2bd
-	.4byte	0x30c
+	.2byte	0x2ee
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF530
+	.4byte	.LASF529
 	.byte	0x2
-	.2byte	0x2be
-	.4byte	0x30c
+	.2byte	0x2ef
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF531
+	.4byte	.LASF530
 	.byte	0x2
-	.2byte	0x2bf
-	.4byte	0x317
+	.2byte	0x2f0
+	.4byte	0x30a
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x308b
+	.4byte	.LASF362
+	.4byte	0x308d
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.6871
-	.uleb128 0x24
-	.4byte	.LVL169
-	.4byte	0x6727
+	.4byte	__func__.4040
+	.uleb128 0x23
+	.4byte	.LVL166
+	.4byte	0x67ee
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF532
+	.4byte	.LASF531
 	.byte	0x2
-	.2byte	0x2b1
-	.4byte	0x64
-	.4byte	.LFB199
-	.4byte	.LFE199-.LFB199
+	.2byte	0x2e2
+	.4byte	0x62
+	.4byte	.LFB209
+	.4byte	.LFE209-.LFB209
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x3ac7
+	.4byte	0x3ac5
 	.uleb128 0x43
-	.4byte	.LASF524
+	.4byte	.LASF523
 	.byte	0x2
-	.2byte	0x2b1
-	.4byte	0x30c
-	.4byte	.LLST131
+	.2byte	0x2e2
+	.4byte	0x2ff
+	.4byte	.LLST133
 	.uleb128 0x3d
-	.4byte	.LASF106
+	.4byte	.LASF105
 	.byte	0x2
-	.2byte	0x2b3
-	.4byte	0x317
-	.uleb128 0x24
-	.4byte	.LVL599
-	.4byte	0x3ac7
+	.2byte	0x2e4
+	.4byte	0x30a
+	.uleb128 0x23
+	.4byte	.LVL622
+	.4byte	0x3ac5
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF533
+	.4byte	.LASF532
 	.byte	0x2
-	.2byte	0x276
-	.4byte	0x64
-	.4byte	.LFB198
-	.4byte	.LFE198-.LFB198
+	.2byte	0x2a7
+	.4byte	0x62
+	.4byte	.LFB208
+	.4byte	.LFE208-.LFB208
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x3bdb
+	.4byte	0x3bd9
 	.uleb128 0x43
-	.4byte	.LASF487
+	.4byte	.LASF486
 	.byte	0x2
-	.2byte	0x276
-	.4byte	0x332e
-	.4byte	.LLST125
+	.2byte	0x2a7
+	.4byte	0x3330
+	.4byte	.LLST126
 	.uleb128 0x43
-	.4byte	.LASF106
+	.4byte	.LASF105
 	.byte	0x2
-	.2byte	0x276
-	.4byte	0x317
-	.4byte	.LLST126
+	.2byte	0x2a7
+	.4byte	0x30a
+	.4byte	.LLST127
 	.uleb128 0x56
-	.4byte	.LASF517
+	.4byte	.LASF516
 	.byte	0x2
-	.2byte	0x276
-	.4byte	0x544
+	.2byte	0x2a7
+	.4byte	0x537
 	.uleb128 0x1
 	.byte	0x52
 	.uleb128 0x3d
-	.4byte	.LASF179
+	.4byte	.LASF178
 	.byte	0x2
-	.2byte	0x278
-	.4byte	0x317
+	.2byte	0x2a9
+	.4byte	0x30a
 	.uleb128 0x44
-	.4byte	.LASF492
+	.4byte	.LASF491
 	.byte	0x2
-	.2byte	0x279
-	.4byte	0x3334
-	.4byte	.LLST127
+	.2byte	0x2aa
+	.4byte	0x3336
+	.4byte	.LLST128
 	.uleb128 0x44
-	.4byte	.LASF505
+	.4byte	.LASF504
 	.byte	0x2
-	.2byte	0x27a
-	.4byte	0x30c
-	.4byte	.LLST128
+	.2byte	0x2ab
+	.4byte	0x2ff
+	.4byte	.LLST129
 	.uleb128 0x3f
-	.4byte	.LASF534
+	.4byte	.LASF533
 	.byte	0x2
-	.2byte	0x27c
+	.2byte	0x2ad
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x23ec
+	.4byte	.LASF362
+	.4byte	0x23e2
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.6846
+	.4byte	__func__.4015
 	.uleb128 0x4e
-	.4byte	0x17d1
-	.4byte	.LBB362
-	.4byte	.Ldebug_ranges0+0x110
+	.4byte	0x17c6
+	.4byte	.LBB384
+	.4byte	.Ldebug_ranges0+0x158
 	.byte	0x2
-	.2byte	0x292
-	.4byte	0x3ba4
+	.2byte	0x2c3
+	.4byte	0x3ba2
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0x110
+	.4byte	.Ldebug_ranges0+0x158
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0x110
+	.4byte	.Ldebug_ranges0+0x158
 	.uleb128 0x30
-	.4byte	0x6134
+	.4byte	0x61fc
 	.uleb128 0x30
-	.4byte	0x6139
-	.uleb128 0x24
-	.4byte	.LVL575
-	.4byte	0x6732
+	.4byte	0x6201
+	.uleb128 0x23
+	.4byte	.LVL596
+	.4byte	0x67f9
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL572
-	.4byte	0x3bdb
-	.uleb128 0x24
-	.4byte	.LVL573
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL574
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL578
-	.4byte	0x19f5
-	.uleb128 0x24
-	.4byte	.LVL581
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL582
-	.4byte	0x6727
+	.uleb128 0x23
+	.4byte	.LVL593
+	.4byte	0x3bd9
+	.uleb128 0x23
+	.4byte	.LVL594
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL595
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL599
+	.4byte	0x19ea
+	.uleb128 0x23
+	.4byte	.LVL602
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL603
+	.4byte	0x67ee
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF535
+	.4byte	.LASF534
 	.byte	0x2
-	.2byte	0x246
-	.4byte	0x64
-	.4byte	.LFB197
-	.4byte	.LFE197-.LFB197
+	.2byte	0x277
+	.4byte	0x62
+	.4byte	.LFB207
+	.4byte	.LFE207-.LFB207
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x3c96
+	.4byte	0x3c94
 	.uleb128 0x43
-	.4byte	.LASF487
+	.4byte	.LASF486
 	.byte	0x2
-	.2byte	0x246
-	.4byte	0x332e
-	.4byte	.LLST121
+	.2byte	0x277
+	.4byte	0x3330
+	.4byte	.LLST122
 	.uleb128 0x3d
-	.4byte	.LASF179
+	.4byte	.LASF178
 	.byte	0x2
-	.2byte	0x248
-	.4byte	0x30c
+	.2byte	0x279
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF120
-	.byte	0x2
-	.2byte	0x248
-	.4byte	0x30c
-	.uleb128 0x44
-	.4byte	.LASF536
+	.4byte	.LASF119
 	.byte	0x2
-	.2byte	0x249
-	.4byte	0x30c
-	.4byte	.LLST122
+	.2byte	0x279
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF537
+	.4byte	.LASF535
 	.byte	0x2
-	.2byte	0x24a
-	.4byte	0x63b
+	.2byte	0x27a
+	.4byte	0x2ff
 	.4byte	.LLST123
 	.uleb128 0x44
-	.4byte	.LASF490
+	.4byte	.LASF536
 	.byte	0x2
-	.2byte	0x24b
-	.4byte	0x544
+	.2byte	0x27b
+	.4byte	0x62e
 	.4byte	.LLST124
+	.uleb128 0x44
+	.4byte	.LASF489
+	.byte	0x2
+	.2byte	0x27c
+	.4byte	0x537
+	.4byte	.LLST125
 	.uleb128 0x3d
-	.4byte	.LASF492
+	.4byte	.LASF491
 	.byte	0x2
-	.2byte	0x24c
-	.4byte	0x3334
+	.2byte	0x27d
+	.4byte	0x3336
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x3ca6
+	.4byte	.LASF362
+	.4byte	0x3ca4
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.6832
-	.uleb128 0x24
-	.4byte	.LVL555
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL556
-	.4byte	0x424d
-	.uleb128 0x24
-	.4byte	.LVL562
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL565
-	.4byte	0x19f5
-	.uleb128 0x24
-	.4byte	.LVL566
-	.4byte	0x3cab
+	.4byte	__func__.4001
+	.uleb128 0x23
+	.4byte	.LVL576
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL577
+	.4byte	0x4234
+	.uleb128 0x23
+	.4byte	.LVL583
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL586
+	.4byte	0x19ea
+	.uleb128 0x23
+	.4byte	.LVL587
+	.4byte	0x3ca9
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x3c
-	.4byte	0x3ca6
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x3a
+	.4byte	0x3ca4
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x1e
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x3c96
+	.uleb128 0x3
+	.4byte	0x3c94
 	.uleb128 0x3a
-	.4byte	.LASF538
+	.4byte	.LASF537
 	.byte	0x2
-	.2byte	0x218
-	.4byte	0x64
-	.4byte	.LFB196
-	.4byte	.LFE196-.LFB196
+	.2byte	0x249
+	.4byte	0x62
+	.4byte	.LFB206
+	.4byte	.LFE206-.LFB206
 	.uleb128 0x1
 	.byte	0x9c
 	.4byte	0x3d76
 	.uleb128 0x43
-	.4byte	.LASF487
+	.4byte	.LASF486
 	.byte	0x2
-	.2byte	0x218
-	.4byte	0x332e
-	.4byte	.LLST129
-	.uleb128 0x1f
-	.4byte	.LASF539
+	.2byte	0x249
+	.4byte	0x3330
+	.4byte	.LLST130
+	.uleb128 0x1e
+	.4byte	.LASF538
 	.byte	0x2
-	.2byte	0x21a
-	.4byte	0x30c
+	.2byte	0x24b
+	.4byte	0x2ff
 	.uleb128 0x1
 	.byte	0x58
 	.uleb128 0x3d
-	.4byte	.LASF540
+	.4byte	.LASF539
 	.byte	0x2
-	.2byte	0x21b
-	.4byte	0x30c
-	.uleb128 0x1f
-	.4byte	.LASF120
+	.2byte	0x24c
+	.4byte	0x2ff
+	.uleb128 0x44
+	.4byte	.LASF119
 	.byte	0x2
-	.2byte	0x21c
-	.4byte	0x30c
-	.uleb128 0x1
-	.byte	0x5a
+	.2byte	0x24d
+	.4byte	0x2ff
+	.4byte	.LLST131
 	.uleb128 0x44
-	.4byte	.LASF537
+	.4byte	.LASF536
 	.byte	0x2
-	.2byte	0x21d
-	.4byte	0x63b
-	.4byte	.LLST130
-	.uleb128 0x1f
-	.4byte	.LASF490
+	.2byte	0x24e
+	.4byte	0x62e
+	.4byte	.LLST132
+	.uleb128 0x1e
+	.4byte	.LASF489
 	.byte	0x2
-	.2byte	0x21e
-	.4byte	0x544
+	.2byte	0x24f
+	.4byte	0x537
 	.uleb128 0x1
 	.byte	0x59
 	.uleb128 0x3d
-	.4byte	.LASF492
+	.4byte	.LASF491
 	.byte	0x2
-	.2byte	0x21f
-	.4byte	0x3334
+	.2byte	0x250
+	.4byte	0x3336
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x1b00
+	.4byte	.LASF362
+	.4byte	0x1af4
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.6818
-	.uleb128 0x24
-	.4byte	.LVL586
+	.4byte	__func__.3987
+	.uleb128 0x23
+	.4byte	.LVL607
 	.4byte	0x3dce
-	.uleb128 0x24
-	.4byte	.LVL588
+	.uleb128 0x23
+	.4byte	.LVL609
 	.4byte	0x3d76
-	.uleb128 0x24
-	.4byte	.LVL590
-	.4byte	0x4367
-	.uleb128 0x24
-	.4byte	.LVL592
+	.uleb128 0x23
+	.4byte	.LVL611
+	.4byte	0x435a
+	.uleb128 0x23
+	.4byte	.LVL613
 	.4byte	0x3d76
-	.uleb128 0x24
-	.4byte	.LVL594
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL595
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL596
-	.4byte	0x3ac7
+	.uleb128 0x23
+	.4byte	.LVL615
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL617
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL619
+	.4byte	0x3ac5
 	.byte	0
 	.uleb128 0x3b
-	.4byte	.LASF541
+	.4byte	.LASF540
 	.byte	0x2
-	.2byte	0x203
-	.4byte	0x64
+	.2byte	0x231
+	.4byte	0x62
 	.byte	0x1
 	.4byte	0x3db9
 	.uleb128 0x3c
-	.4byte	.LASF487
+	.4byte	.LASF486
 	.byte	0x2
-	.2byte	0x203
-	.4byte	0x332e
+	.2byte	0x231
+	.4byte	0x3330
 	.uleb128 0x3d
-	.4byte	.LASF542
+	.4byte	.LASF541
 	.byte	0x2
-	.2byte	0x205
-	.4byte	0x30c
+	.2byte	0x233
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF537
+	.4byte	.LASF536
 	.byte	0x2
-	.2byte	0x206
-	.4byte	0x63b
+	.2byte	0x234
+	.4byte	0x62e
 	.uleb128 0x40
-	.4byte	.LASF363
+	.4byte	.LASF362
 	.4byte	0x3dc9
-	.4byte	.LASF541
+	.4byte	.LASF540
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x3c
+	.uleb128 0xb
+	.4byte	0x3a
 	.4byte	0x3dc9
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x19
 	.byte	0
-	.uleb128 0x4
+	.uleb128 0x3
 	.4byte	0x3db9
 	.uleb128 0x3a
-	.4byte	.LASF543
+	.4byte	.LASF542
 	.byte	0x2
-	.2byte	0x1db
-	.4byte	0x64
-	.4byte	.LFB194
-	.4byte	.LFE194-.LFB194
+	.2byte	0x209
+	.4byte	0x62
+	.4byte	.LFB204
+	.4byte	.LFE204-.LFB204
 	.uleb128 0x1
 	.byte	0x9c
 	.4byte	0x3e7f
 	.uleb128 0x43
-	.4byte	.LASF487
+	.4byte	.LASF486
 	.byte	0x2
-	.2byte	0x1db
-	.4byte	0x332e
-	.4byte	.LLST116
-	.uleb128 0x1f
-	.4byte	.LASF537
+	.2byte	0x209
+	.4byte	0x3330
+	.4byte	.LLST117
+	.uleb128 0x1e
+	.4byte	.LASF536
 	.byte	0x2
-	.2byte	0x1dd
-	.4byte	0x63b
+	.2byte	0x20b
+	.4byte	0x62e
 	.uleb128 0x1
 	.byte	0x59
 	.uleb128 0x44
-	.4byte	.LASF490
+	.4byte	.LASF489
 	.byte	0x2
-	.2byte	0x1de
-	.4byte	0x544
-	.4byte	.LLST117
-	.uleb128 0x1f
-	.4byte	.LASF544
+	.2byte	0x20c
+	.4byte	0x537
+	.4byte	.LLST118
+	.uleb128 0x1e
+	.4byte	.LASF543
 	.byte	0x2
-	.2byte	0x1df
-	.4byte	0x63b
+	.2byte	0x20d
+	.4byte	0x62e
 	.uleb128 0x1
 	.byte	0x55
 	.uleb128 0x44
-	.4byte	.LASF179
+	.4byte	.LASF178
 	.byte	0x2
-	.2byte	0x1e0
-	.4byte	0x30c
-	.4byte	.LLST118
+	.2byte	0x20e
+	.4byte	0x2ff
+	.4byte	.LLST119
 	.uleb128 0x3d
-	.4byte	.LASF120
+	.4byte	.LASF119
 	.byte	0x2
-	.2byte	0x1e0
-	.4byte	0x30c
+	.2byte	0x20e
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF542
+	.4byte	.LASF541
 	.byte	0x2
-	.2byte	0x1e1
-	.4byte	0x30c
+	.2byte	0x20f
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF545
+	.4byte	.LASF544
 	.byte	0x2
-	.2byte	0x1e2
-	.4byte	0x30c
-	.4byte	.LLST119
+	.2byte	0x210
+	.4byte	0x2ff
+	.4byte	.LLST120
 	.uleb128 0x44
-	.4byte	.LASF540
+	.4byte	.LASF539
 	.byte	0x2
-	.2byte	0x1e3
-	.4byte	0x30c
-	.4byte	.LLST120
-	.uleb128 0x24
-	.4byte	.LVL541
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL551
-	.4byte	0x4367
+	.2byte	0x211
+	.4byte	0x2ff
+	.4byte	.LLST121
+	.uleb128 0x23
+	.4byte	.LVL558
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL571
+	.4byte	0x435a
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF546
+	.4byte	.LASF545
 	.byte	0x2
-	.2byte	0x1b9
-	.4byte	0x64
-	.4byte	.LFB193
-	.4byte	.LFE193-.LFB193
+	.2byte	0x1e7
+	.4byte	0x62
+	.4byte	.LFB203
+	.4byte	.LFE203-.LFB203
 	.uleb128 0x1
 	.byte	0x9c
 	.4byte	0x3f26
 	.uleb128 0x43
-	.4byte	.LASF106
+	.4byte	.LASF105
 	.byte	0x2
-	.2byte	0x1b9
-	.4byte	0x30c
-	.4byte	.LLST113
+	.2byte	0x1e7
+	.4byte	0x2ff
+	.4byte	.LLST114
 	.uleb128 0x43
-	.4byte	.LASF524
+	.4byte	.LASF523
 	.byte	0x2
-	.2byte	0x1b9
-	.4byte	0x30c
-	.4byte	.LLST114
+	.2byte	0x1e7
+	.4byte	0x2ff
+	.4byte	.LLST115
 	.uleb128 0x44
-	.4byte	.LASF492
+	.4byte	.LASF491
 	.byte	0x2
-	.2byte	0x1bb
-	.4byte	0x3334
-	.4byte	.LLST115
-	.uleb128 0x1f
-	.4byte	.LASF547
+	.2byte	0x1e9
+	.4byte	0x3336
+	.4byte	.LLST116
+	.uleb128 0x1e
+	.4byte	.LASF546
 	.byte	0x2
-	.2byte	0x1bc
-	.4byte	0x317
+	.2byte	0x1ea
+	.4byte	0x30a
 	.uleb128 0x1
 	.byte	0x57
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x23ec
+	.4byte	.LASF362
+	.4byte	0x23e2
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.6775
-	.uleb128 0x24
-	.4byte	.LVL525
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL527
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL530
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL532
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL533
-	.4byte	0x673d
-	.uleb128 0x24
-	.4byte	.LVL534
-	.4byte	0x673d
-	.uleb128 0x24
-	.4byte	.LVL535
-	.4byte	0x6727
+	.4byte	__func__.3943
+	.uleb128 0x23
+	.4byte	.LVL542
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL544
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL547
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL549
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL550
+	.4byte	0x6804
+	.uleb128 0x23
+	.4byte	.LVL551
+	.4byte	0x6804
+	.uleb128 0x23
+	.4byte	.LVL552
+	.4byte	0x67ee
 	.byte	0
 	.uleb128 0x3b
-	.4byte	.LASF548
+	.4byte	.LASF547
 	.byte	0x2
-	.2byte	0x193
-	.4byte	0x64
+	.2byte	0x1bf
+	.4byte	0x62
 	.byte	0x1
 	.4byte	0x3fa5
 	.uleb128 0x3c
-	.4byte	.LASF433
+	.4byte	.LASF432
 	.byte	0x2
-	.2byte	0x193
-	.4byte	0x30c
+	.2byte	0x1bf
+	.4byte	0x2ff
+	.uleb128 0x3d
+	.4byte	.LASF548
+	.byte	0x2
+	.2byte	0x1c1
+	.4byte	0x2ff
 	.uleb128 0x3d
 	.4byte	.LASF549
 	.byte	0x2
-	.2byte	0x195
-	.4byte	0x30c
+	.2byte	0x1c2
+	.4byte	0x2ff
 	.uleb128 0x3d
 	.4byte	.LASF550
 	.byte	0x2
-	.2byte	0x196
-	.4byte	0x30c
+	.2byte	0x1c3
+	.4byte	0x30a
 	.uleb128 0x3d
 	.4byte	.LASF551
 	.byte	0x2
-	.2byte	0x197
-	.4byte	0x317
+	.2byte	0x1c5
+	.4byte	0x2ff
 	.uleb128 0x3d
 	.4byte	.LASF552
 	.byte	0x2
-	.2byte	0x199
-	.4byte	0x30c
-	.uleb128 0x3d
-	.4byte	.LASF553
-	.byte	0x2
-	.2byte	0x19a
-	.4byte	0x317
+	.2byte	0x1c6
+	.4byte	0x30a
 	.uleb128 0x3d
-	.4byte	.LASF436
+	.4byte	.LASF435
 	.byte	0x2
-	.2byte	0x19b
-	.4byte	0x121b
+	.2byte	0x1c7
+	.4byte	0x120e
 	.uleb128 0x3d
-	.4byte	.LASF554
+	.4byte	.LASF553
 	.byte	0x2
-	.2byte	0x19b
-	.4byte	0x121b
+	.2byte	0x1c7
+	.4byte	0x120e
 	.uleb128 0x40
-	.4byte	.LASF363
-	.4byte	0x308b
-	.4byte	.LASF548
+	.4byte	.LASF362
+	.4byte	0x308d
+	.4byte	.LASF547
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF555
+	.4byte	.LASF554
 	.byte	0x2
-	.2byte	0x17f
-	.4byte	0x64
-	.4byte	.LFB191
-	.4byte	.LFE191-.LFB191
+	.2byte	0x1ab
+	.4byte	0x62
+	.4byte	.LFB201
+	.4byte	.LFE201-.LFB201
 	.uleb128 0x1
 	.byte	0x9c
 	.4byte	0x3fec
 	.uleb128 0x43
-	.4byte	.LASF94
+	.4byte	.LASF93
 	.byte	0x2
-	.2byte	0x17f
-	.4byte	0x30c
-	.4byte	.LLST46
+	.2byte	0x1ab
+	.4byte	0x2ff
+	.4byte	.LLST43
 	.uleb128 0x3d
-	.4byte	.LASF433
+	.4byte	.LASF432
 	.byte	0x2
-	.2byte	0x181
-	.4byte	0x30c
+	.2byte	0x1ad
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF436
+	.4byte	.LASF435
 	.byte	0x2
-	.2byte	0x182
-	.4byte	0x121b
-	.4byte	.LLST47
+	.2byte	0x1ae
+	.4byte	0x120e
+	.4byte	.LLST44
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF556
+	.4byte	.LASF555
 	.byte	0x2
-	.2byte	0x17a
-	.4byte	0x64
-	.4byte	.LFB190
-	.4byte	.LFE190-.LFB190
+	.2byte	0x1a6
+	.4byte	0x62
+	.4byte	.LFB200
+	.4byte	.LFE200-.LFB200
 	.uleb128 0x1
 	.byte	0x9c
 	.4byte	0x4020
 	.uleb128 0x43
-	.4byte	.LASF557
+	.4byte	.LASF556
 	.byte	0x2
-	.2byte	0x17a
+	.2byte	0x1a6
 	.4byte	0x4020
-	.4byte	.LLST45
-	.uleb128 0x24
-	.4byte	.LVL145
+	.4byte	.LLST42
+	.uleb128 0x23
+	.4byte	.LVL140
 	.4byte	0x4026
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x121b
+	.4byte	0x120e
 	.uleb128 0x3a
-	.4byte	.LASF558
+	.4byte	.LASF557
 	.byte	0x2
-	.2byte	0x167
-	.4byte	0x64
-	.4byte	.LFB189
-	.4byte	.LFE189-.LFB189
+	.2byte	0x193
+	.4byte	0x62
+	.4byte	.LFB199
+	.4byte	.LFE199-.LFB199
 	.uleb128 0x1
 	.byte	0x9c
 	.4byte	0x4086
 	.uleb128 0x43
-	.4byte	.LASF557
+	.4byte	.LASF556
 	.byte	0x2
-	.2byte	0x167
+	.2byte	0x193
 	.4byte	0x4020
-	.4byte	.LLST42
+	.4byte	.LLST39
 	.uleb128 0x43
-	.4byte	.LASF94
+	.4byte	.LASF93
 	.byte	0x2
-	.2byte	0x167
-	.4byte	0x30c
-	.4byte	.LLST43
+	.2byte	0x193
+	.4byte	0x2ff
+	.4byte	.LLST40
 	.uleb128 0x3d
-	.4byte	.LASF433
+	.4byte	.LASF432
 	.byte	0x2
-	.2byte	0x169
-	.4byte	0x30c
+	.2byte	0x195
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF436
+	.4byte	.LASF435
 	.byte	0x2
-	.2byte	0x16a
-	.4byte	0x121b
-	.4byte	.LLST44
-	.uleb128 0x24
-	.4byte	.LVL139
+	.2byte	0x196
+	.4byte	0x120e
+	.4byte	.LLST41
+	.uleb128 0x23
+	.4byte	.LVL134
 	.4byte	0x4086
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF559
+	.4byte	.LASF558
 	.byte	0x2
-	.2byte	0x14c
-	.4byte	0x64
-	.4byte	.LFB188
-	.4byte	.LFE188-.LFB188
+	.2byte	0x176
+	.4byte	0x62
+	.4byte	.LFB198
+	.4byte	.LFE198-.LFB198
 	.uleb128 0x1
 	.byte	0x9c
 	.4byte	0x40f3
 	.uleb128 0x43
-	.4byte	.LASF557
+	.4byte	.LASF556
 	.byte	0x2
-	.2byte	0x14c
+	.2byte	0x176
 	.4byte	0x4020
-	.4byte	.LLST40
+	.4byte	.LLST37
 	.uleb128 0x43
-	.4byte	.LASF433
+	.4byte	.LASF432
 	.byte	0x2
-	.2byte	0x14c
-	.4byte	0x30c
-	.4byte	.LLST41
-	.uleb128 0x1f
-	.4byte	.LASF436
+	.2byte	0x176
+	.4byte	0x2ff
+	.4byte	.LLST38
+	.uleb128 0x1e
+	.4byte	.LASF435
 	.byte	0x2
-	.2byte	0x14e
-	.4byte	0x121b
+	.2byte	0x178
+	.4byte	0x120e
 	.uleb128 0x1
-	.byte	0x54
+	.byte	0x55
 	.uleb128 0x3d
-	.4byte	.LASF560
+	.4byte	.LASF559
 	.byte	0x2
-	.2byte	0x14e
-	.4byte	0x121b
+	.2byte	0x178
+	.4byte	0x120e
 	.uleb128 0x37
-	.4byte	.LASF363
+	.4byte	.LASF362
 	.4byte	0x4103
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.6734
-	.uleb128 0x24
-	.4byte	.LVL131
-	.4byte	0x6727
+	.4byte	__func__.3902
+	.uleb128 0x23
+	.4byte	.LVL126
+	.4byte	0x67ee
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x3c
+	.uleb128 0xb
+	.4byte	0x3a
 	.4byte	0x4103
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0x10
 	.byte	0
-	.uleb128 0x4
+	.uleb128 0x3
 	.4byte	0x40f3
 	.uleb128 0x3a
-	.4byte	.LASF561
+	.4byte	.LASF560
 	.byte	0x2
-	.2byte	0x11b
-	.4byte	0x64
-	.4byte	.LFB187
-	.4byte	.LFE187-.LFB187
+	.2byte	0x145
+	.4byte	0x62
+	.4byte	.LFB197
+	.4byte	.LFE197-.LFB197
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x4177
+	.4byte	0x4175
 	.uleb128 0x43
-	.4byte	.LASF433
+	.4byte	.LASF432
 	.byte	0x2
-	.2byte	0x11b
-	.4byte	0x30c
-	.4byte	.LLST37
-	.uleb128 0x44
-	.4byte	.LASF436
+	.2byte	0x145
+	.4byte	0x2ff
+	.4byte	.LLST35
+	.uleb128 0x1e
+	.4byte	.LASF435
 	.byte	0x2
-	.2byte	0x11d
-	.4byte	0x121b
-	.4byte	.LLST38
-	.uleb128 0x1f
-	.4byte	.LASF560
+	.2byte	0x147
+	.4byte	0x120e
+	.uleb128 0x1
+	.byte	0x5c
+	.uleb128 0x1e
+	.4byte	.LASF559
 	.byte	0x2
-	.2byte	0x11d
-	.4byte	0x121b
+	.2byte	0x147
+	.4byte	0x120e
 	.uleb128 0x1
 	.byte	0x53
-	.uleb128 0x1f
-	.4byte	.LASF562
+	.uleb128 0x1e
+	.4byte	.LASF561
 	.byte	0x2
-	.2byte	0x11e
-	.4byte	0x30c
+	.2byte	0x148
+	.4byte	0x2ff
 	.uleb128 0x1
-	.byte	0x5a
+	.byte	0x59
 	.uleb128 0x3d
-	.4byte	.LASF563
+	.4byte	.LASF562
 	.byte	0x2
-	.2byte	0x11f
-	.4byte	0x30c
+	.2byte	0x149
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF564
+	.4byte	.LASF563
 	.byte	0x2
-	.2byte	0x120
-	.4byte	0x30c
+	.2byte	0x14a
+	.4byte	0x2ff
 	.byte	0
-	.uleb128 0x22
-	.4byte	.LASF565
+	.uleb128 0x26
+	.4byte	.LASF564
 	.byte	0x2
-	.byte	0xd8
-	.4byte	0x64
-	.4byte	.LFB186
-	.4byte	.LFE186-.LFB186
-	.uleb128 0x1
-	.byte	0x9c
-	.4byte	0x4203
-	.uleb128 0x23
-	.4byte	.LASF433
+	.byte	0xf8
+	.4byte	0x62
+	.byte	0x1
+	.4byte	0x41ea
+	.uleb128 0x33
+	.4byte	.LASF432
 	.byte	0x2
-	.byte	0xd8
-	.4byte	0x30c
-	.4byte	.LLST30
-	.uleb128 0x2c
-	.4byte	.LASF436
+	.byte	0xf8
+	.4byte	0x2ff
+	.uleb128 0x34
+	.4byte	.LASF435
 	.byte	0x2
-	.byte	0xda
-	.4byte	0x121b
-	.4byte	.LLST31
-	.uleb128 0x2c
-	.4byte	.LASF560
+	.byte	0xfa
+	.4byte	0x120e
+	.uleb128 0x34
+	.4byte	.LASF559
 	.byte	0x2
-	.byte	0xda
-	.4byte	0x121b
-	.4byte	.LLST32
-	.uleb128 0x2c
-	.4byte	.LASF566
+	.byte	0xfa
+	.4byte	0x120e
+	.uleb128 0x34
+	.4byte	.LASF565
 	.byte	0x2
-	.byte	0xdb
-	.4byte	0x30c
-	.4byte	.LLST33
-	.uleb128 0x20
-	.4byte	.LASF567
+	.byte	0xfb
+	.4byte	0x2ff
+	.uleb128 0x34
+	.4byte	.LASF566
 	.byte	0x2
-	.byte	0xdc
-	.4byte	0x30c
-	.uleb128 0x1
-	.byte	0x5a
-	.uleb128 0x2c
-	.4byte	.LASF551
+	.byte	0xfc
+	.4byte	0x2ff
+	.uleb128 0x34
+	.4byte	.LASF550
 	.byte	0x2
-	.byte	0xdd
-	.4byte	0x317
-	.4byte	.LLST34
-	.uleb128 0x2c
-	.4byte	.LASF568
+	.byte	0xfd
+	.4byte	0x30a
+	.uleb128 0x34
+	.4byte	.LASF567
 	.byte	0x2
-	.byte	0xde
-	.4byte	0x317
-	.4byte	.LLST35
+	.byte	0xfe
+	.4byte	0x30a
 	.uleb128 0x34
-	.4byte	.LASF564
+	.4byte	.LASF563
+	.byte	0x2
+	.byte	0xff
+	.4byte	0x2ff
+	.uleb128 0x3d
+	.4byte	.LASF114
 	.byte	0x2
-	.byte	0xdf
-	.4byte	0x30c
+	.2byte	0x100
+	.4byte	0x2ff
 	.byte	0
 	.uleb128 0x57
-	.4byte	.LASF569
+	.4byte	.LASF568
 	.byte	0x2
-	.byte	0xb9
+	.byte	0xd9
 	.byte	0x1
-	.4byte	0x4228
+	.4byte	0x420f
 	.uleb128 0x33
-	.4byte	.LASF433
+	.4byte	.LASF432
 	.byte	0x2
-	.byte	0xb9
-	.4byte	0x30c
+	.byte	0xd9
+	.4byte	0x2ff
 	.uleb128 0x40
-	.4byte	.LASF363
+	.4byte	.LASF362
 	.4byte	0x4103
-	.4byte	.LASF569
+	.4byte	.LASF568
 	.byte	0
 	.uleb128 0x57
-	.4byte	.LASF570
+	.4byte	.LASF569
 	.byte	0x2
-	.byte	0xb2
+	.byte	0xd2
 	.byte	0x1
-	.4byte	0x424d
+	.4byte	0x4234
 	.uleb128 0x33
-	.4byte	.LASF433
+	.4byte	.LASF432
 	.byte	0x2
-	.byte	0xb2
-	.4byte	0x30c
+	.byte	0xd2
+	.4byte	0x2ff
 	.uleb128 0x40
-	.4byte	.LASF363
+	.4byte	.LASF362
 	.4byte	0x4103
-	.4byte	.LASF570
+	.4byte	.LASF569
 	.byte	0
-	.uleb128 0x22
-	.4byte	.LASF571
+	.uleb128 0x21
+	.4byte	.LASF570
 	.byte	0x2
-	.byte	0xa4
-	.4byte	0x30c
-	.4byte	.LFB183
-	.4byte	.LFE183-.LFB183
+	.byte	0xb4
+	.4byte	0x2ff
+	.4byte	.LFB193
+	.4byte	.LFE193-.LFB193
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x4296
+	.4byte	0x42b7
 	.uleb128 0x36
 	.ascii	"tmp\000"
 	.byte	0x2
-	.byte	0xa6
-	.4byte	0x30c
+	.byte	0xb6
+	.4byte	0x2ff
 	.uleb128 0x1
-	.byte	0x50
-	.uleb128 0x38
-	.4byte	.Ldebug_ranges0+0x58
-	.4byte	0x4286
+	.byte	0x55
 	.uleb128 0x29
 	.ascii	"Q\000"
 	.byte	0x2
-	.byte	0xa9
-	.4byte	0x4296
-	.byte	0
+	.byte	0xb7
+	.4byte	0x42b7
 	.uleb128 0x58
-	.4byte	0x43f4
-	.4byte	.LBB252
-	.4byte	.LBE252-.LBB252
+	.4byte	.LASF571
 	.byte	0x2
-	.byte	0xa8
+	.byte	0xb9
+	.4byte	.L512
+	.uleb128 0x38
+	.4byte	.Ldebug_ranges0+0xd8
+	.4byte	0x4295
+	.uleb128 0x34
+	.4byte	.LASF572
+	.byte	0x2
+	.byte	0xbf
+	.4byte	0x2ff
+	.uleb128 0x23
+	.4byte	.LVL462
+	.4byte	0x4507
+	.uleb128 0x23
+	.4byte	.LVL463
+	.4byte	0x1954
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x59
+	.4byte	0x43a1
+	.4byte	.LBB313
+	.4byte	.Ldebug_ranges0+0xc0
+	.byte	0x2
+	.byte	0xba
+	.uleb128 0x23
+	.4byte	.LVL464
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL465
+	.4byte	0x67ee
+	.byte	0
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0xae7
-	.uleb128 0x22
-	.4byte	.LASF572
+	.4byte	0xada
+	.uleb128 0x21
+	.4byte	.LASF573
 	.byte	0x2
-	.byte	0x92
-	.4byte	0x64
-	.4byte	.LFB182
-	.4byte	.LFE182-.LFB182
+	.byte	0xa2
+	.4byte	0x62
+	.4byte	.LFB192
+	.4byte	.LFE192-.LFB192
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x42f5
+	.4byte	0x4316
 	.uleb128 0x2b
 	.ascii	"blk\000"
 	.byte	0x2
-	.byte	0x92
-	.4byte	0x30c
-	.4byte	.LLST29
+	.byte	0xa2
+	.4byte	0x2ff
+	.4byte	.LLST25
 	.uleb128 0x36
 	.ascii	"ret\000"
 	.byte	0x2
-	.byte	0x94
-	.4byte	0x64
+	.byte	0xa4
+	.4byte	0x62
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x36
 	.ascii	"i\000"
 	.byte	0x2
-	.byte	0x95
-	.4byte	0x317
+	.byte	0xa5
+	.4byte	0x30a
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x29
 	.ascii	"Q\000"
 	.byte	0x2
-	.byte	0x96
-	.4byte	0x4296
-	.uleb128 0x58
-	.4byte	0x43e8
-	.4byte	.LBB250
-	.4byte	.LBE250-.LBB250
+	.byte	0xa6
+	.4byte	0x42b7
+	.uleb128 0x59
+	.4byte	0x4395
+	.4byte	.LBB253
+	.4byte	.Ldebug_ranges0+0x58
 	.byte	0x2
-	.byte	0x98
+	.byte	0xa8
 	.byte	0
 	.uleb128 0x48
-	.4byte	.LASF573
+	.4byte	.LASF574
 	.byte	0x2
-	.byte	0x73
-	.4byte	.LFB181
-	.4byte	.LFE181-.LFB181
+	.byte	0x75
+	.4byte	.LFB191
+	.4byte	.LFE191-.LFB191
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x4367
+	.4byte	0x435a
+	.uleb128 0x1f
+	.4byte	.LASF114
+	.byte	0x2
+	.byte	0x77
+	.4byte	0x315
+	.uleb128 0x1
+	.byte	0x5c
 	.uleb128 0x29
 	.ascii	"i\000"
 	.byte	0x2
-	.byte	0x75
-	.4byte	0x30c
+	.byte	0x78
+	.4byte	0x2ff
 	.uleb128 0x49
-	.ascii	"tmp\000"
-	.byte	0x2
-	.byte	0x75
-	.4byte	0x30c
-	.4byte	.LLST26
-	.uleb128 0x29
-	.ascii	"j\000"
-	.byte	0x2
-	.byte	0x75
-	.4byte	0x30c
-	.uleb128 0x2c
-	.4byte	.LASF384
-	.byte	0x2
-	.byte	0x76
-	.4byte	0x30c
-	.4byte	.LLST27
-	.uleb128 0x34
-	.4byte	.LASF574
-	.byte	0x2
-	.byte	0x77
-	.4byte	0x30c
-	.uleb128 0x2c
-	.4byte	.LASF575
+	.ascii	"blk\000"
 	.byte	0x2
 	.byte	0x78
-	.4byte	0x317
-	.4byte	.LLST28
+	.4byte	0x2ff
+	.4byte	.LLST24
 	.uleb128 0x29
 	.ascii	"Q\000"
 	.byte	0x2
 	.byte	0x79
-	.4byte	0x4296
-	.uleb128 0x24
-	.4byte	.LVL76
-	.4byte	0x455a
+	.4byte	0x42b7
 	.byte	0
-	.uleb128 0x48
-	.4byte	.LASF576
+	.uleb128 0x57
+	.4byte	.LASF575
 	.byte	0x2
 	.byte	0x61
-	.4byte	.LFB180
-	.4byte	.LFE180-.LFB180
-	.uleb128 0x1
-	.byte	0x9c
-	.4byte	0x43e8
-	.uleb128 0x2b
+	.byte	0x1
+	.4byte	0x4395
+	.uleb128 0x27
 	.ascii	"blk\000"
 	.byte	0x2
 	.byte	0x61
-	.4byte	0x30c
-	.4byte	.LLST94
-	.uleb128 0x23
-	.4byte	.LASF577
+	.4byte	0x2ff
+	.uleb128 0x33
+	.4byte	.LASF576
 	.byte	0x2
 	.byte	0x61
-	.4byte	0x30c
-	.4byte	.LLST95
-	.uleb128 0x52
-	.4byte	.LBB299
-	.4byte	.LBE299-.LBB299
-	.4byte	0x43d8
+	.4byte	0x2ff
+	.uleb128 0x28
 	.uleb128 0x29
 	.ascii	"Q\000"
 	.byte	0x2
-	.byte	0x64
-	.4byte	0x4296
-	.uleb128 0x32
-	.4byte	.LBB300
-	.4byte	.LBE300-.LBB300
+	.byte	0x66
+	.4byte	0x42b7
+	.uleb128 0x28
 	.uleb128 0x34
-	.4byte	.LASF578
+	.4byte	.LASF572
 	.byte	0x2
-	.byte	0x66
-	.4byte	0x30c
-	.uleb128 0x24
-	.4byte	.LVL407
-	.4byte	0x455a
-	.uleb128 0x24
-	.4byte	.LVL408
-	.4byte	0x195f
+	.byte	0x68
+	.4byte	0x2ff
 	.byte	0
 	.byte	0
-	.uleb128 0x58
-	.4byte	0x43e8
-	.4byte	.LBB297
-	.4byte	.LBE297-.LBB297
-	.byte	0x2
-	.byte	0x63
 	.byte	0
-	.uleb128 0x59
-	.4byte	.LASF579
+	.uleb128 0x5a
+	.4byte	.LASF577
 	.byte	0x2
 	.byte	0x5c
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x1
-	.uleb128 0x59
-	.4byte	.LASF580
+	.uleb128 0x5a
+	.4byte	.LASF578
 	.byte	0x2
 	.byte	0x57
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0x1
-	.uleb128 0x22
-	.4byte	.LASF581
+	.uleb128 0x21
+	.4byte	.LASF579
 	.byte	0x2
 	.byte	0x4b
-	.4byte	0x30c
-	.4byte	.LFB177
-	.4byte	.LFE177-.LFB177
+	.4byte	0x2ff
+	.4byte	.LFB187
+	.4byte	.LFE187-.LFB187
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x447f
+	.4byte	0x442c
 	.uleb128 0x2b
 	.ascii	"max\000"
 	.byte	0x2
 	.byte	0x4b
-	.4byte	0x30c
-	.4byte	.LLST25
+	.4byte	0x2ff
+	.4byte	.LLST23
 	.uleb128 0x29
 	.ascii	"Q\000"
 	.byte	0x2
 	.byte	0x4d
-	.4byte	0x4296
-	.uleb128 0x5a
-	.4byte	0x17d1
-	.4byte	.LBB241
+	.4byte	0x42b7
+	.uleb128 0x5b
+	.4byte	0x17c6
+	.4byte	.LBB244
 	.4byte	.Ldebug_ranges0+0x38
 	.byte	0x2
 	.byte	0x53
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x2f
 	.4byte	.Ldebug_ranges0+0x38
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x2f
 	.4byte	.Ldebug_ranges0+0x38
 	.uleb128 0x30
-	.4byte	0x17fd
+	.4byte	0x17f2
 	.uleb128 0x30
-	.4byte	0x1808
-	.uleb128 0x24
+	.4byte	0x17fd
+	.uleb128 0x23
 	.4byte	.LVL71
-	.4byte	0x6732
+	.4byte	0x67f9
 	.byte	0
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x22
-	.4byte	.LASF582
+	.uleb128 0x21
+	.4byte	.LASF580
 	.byte	0x2
 	.byte	0x2e
-	.4byte	0x64
-	.4byte	.LFB176
-	.4byte	.LFE176-.LFB176
+	.4byte	0x62
+	.4byte	.LFB186
+	.4byte	.LFE186-.LFB186
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x4517
-	.uleb128 0x23
-	.4byte	.LASF179
+	.4byte	0x44c4
+	.uleb128 0x22
+	.4byte	.LASF178
 	.byte	0x2
 	.byte	0x2e
-	.4byte	0x317
+	.4byte	0x30a
 	.4byte	.LLST84
-	.uleb128 0x23
-	.4byte	.LASF357
+	.uleb128 0x22
+	.4byte	.LASF356
 	.byte	0x2
 	.byte	0x2e
-	.4byte	0x64
+	.4byte	0x62
 	.4byte	.LLST85
 	.uleb128 0x36
 	.ascii	"req\000"
 	.byte	0x2
 	.byte	0x30
-	.4byte	0x338
+	.4byte	0x32b
 	.uleb128 0x3
 	.byte	0x91
-	.sleb128 -124
+	.sleb128 -120
 	.uleb128 0x36
 	.ascii	"low\000"
 	.byte	0x2
 	.byte	0x31
-	.4byte	0x32d
+	.4byte	0x320
 	.uleb128 0x1
 	.byte	0x58
-	.uleb128 0x20
-	.4byte	.LASF583
+	.uleb128 0x1f
+	.4byte	.LASF581
 	.byte	0x2
 	.byte	0x31
-	.4byte	0x32d
+	.4byte	0x320
 	.uleb128 0x1
 	.byte	0x55
 	.uleb128 0x29
 	.ascii	"mid\000"
 	.byte	0x2
 	.byte	0x31
-	.4byte	0x32d
-	.uleb128 0x20
-	.4byte	.LASF584
+	.4byte	0x320
+	.uleb128 0x1f
+	.4byte	.LASF582
 	.byte	0x2
 	.byte	0x32
-	.4byte	0x194f
+	.4byte	0x1944
 	.uleb128 0x3
 	.byte	0x91
-	.sleb128 -104
+	.sleb128 -100
 	.uleb128 0x34
-	.4byte	.LASF585
+	.4byte	.LASF583
 	.byte	0x2
 	.byte	0x33
-	.4byte	0x30c
-	.uleb128 0x24
-	.4byte	.LVL366
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL369
-	.4byte	0x1b05
+	.4byte	0x2ff
+	.uleb128 0x23
+	.4byte	.LVL367
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL370
+	.4byte	0x1af9
 	.byte	0
-	.uleb128 0x22
-	.4byte	.LASF586
+	.uleb128 0x21
+	.4byte	.LASF584
 	.byte	0x2
 	.byte	0x1e
-	.4byte	0x317
-	.4byte	.LFB175
-	.4byte	.LFE175-.LFB175
+	.4byte	0x30a
+	.4byte	.LFB185
+	.4byte	.LFE185-.LFB185
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x455a
-	.uleb128 0x23
-	.4byte	.LASF587
+	.4byte	0x4507
+	.uleb128 0x22
+	.4byte	.LASF585
 	.byte	0x2
 	.byte	0x1e
-	.4byte	0x317
-	.4byte	.LLST24
+	.4byte	0x30a
+	.4byte	.LLST22
 	.uleb128 0x4b
-	.4byte	.LASF588
+	.4byte	.LASF586
 	.byte	0x2
 	.byte	0x1e
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x1
 	.byte	0x51
 	.uleb128 0x36
 	.ascii	"ret\000"
 	.byte	0x2
 	.byte	0x20
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x1
 	.byte	0x50
 	.byte	0
 	.uleb128 0x2a
-	.4byte	.LASF589
+	.4byte	.LASF587
 	.byte	0x2
 	.byte	0x14
-	.4byte	0x30c
-	.4byte	.LFB174
-	.4byte	.LFE174-.LFB174
+	.4byte	0x2ff
+	.4byte	.LFB184
+	.4byte	.LFE184-.LFB184
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x458e
-	.uleb128 0x23
-	.4byte	.LASF379
+	.4byte	0x453b
+	.uleb128 0x22
+	.4byte	.LASF378
 	.byte	0x2
 	.byte	0x14
-	.4byte	0x30c
-	.4byte	.LLST23
+	.4byte	0x2ff
+	.4byte	.LLST21
 	.uleb128 0x34
-	.4byte	.LASF501
+	.4byte	.LASF500
 	.byte	0x2
 	.byte	0x16
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
 	.uleb128 0x2a
-	.4byte	.LASF590
+	.4byte	.LASF588
 	.byte	0x2
 	.byte	0xc
-	.4byte	0x30c
-	.4byte	.LFB173
-	.4byte	.LFE173-.LFB173
+	.4byte	0x2ff
+	.4byte	.LFB183
+	.4byte	.LFE183-.LFB183
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x45c2
-	.uleb128 0x23
-	.4byte	.LASF379
+	.4byte	0x456f
+	.uleb128 0x22
+	.4byte	.LASF378
 	.byte	0x2
 	.byte	0xc
-	.4byte	0x30c
-	.4byte	.LLST22
+	.4byte	0x2ff
+	.4byte	.LLST20
 	.uleb128 0x34
-	.4byte	.LASF377
+	.4byte	.LASF376
 	.byte	0x2
 	.byte	0xe
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
 	.uleb128 0x2a
-	.4byte	.LASF591
+	.4byte	.LASF589
 	.byte	0x2
 	.byte	0x4
-	.4byte	0x30c
-	.4byte	.LFB172
-	.4byte	.LFE172-.LFB172
+	.4byte	0x2ff
+	.4byte	.LFB182
+	.4byte	.LFE182-.LFB182
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x4605
-	.uleb128 0x23
-	.4byte	.LASF377
+	.4byte	0x45b2
+	.uleb128 0x22
+	.4byte	.LASF376
 	.byte	0x2
 	.byte	0x4
-	.4byte	0x30c
-	.4byte	.LLST20
-	.uleb128 0x23
-	.4byte	.LASF501
+	.4byte	0x2ff
+	.4byte	.LLST18
+	.uleb128 0x22
+	.4byte	.LASF500
 	.byte	0x2
 	.byte	0x4
-	.4byte	0x30c
-	.4byte	.LLST21
+	.4byte	0x2ff
+	.4byte	.LLST19
 	.uleb128 0x34
-	.4byte	.LASF393
+	.4byte	.LASF392
 	.byte	0x2
 	.byte	0x6
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF592
+	.4byte	.LASF590
 	.byte	0x4
 	.2byte	0x13c
-	.4byte	0x322
-	.4byte	.LFB171
-	.4byte	.LFE171-.LFB171
+	.4byte	0x315
+	.4byte	.LFB181
+	.4byte	.LFE181-.LFB181
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x47c9
-	.uleb128 0x51
+	.4byte	0x4774
+	.uleb128 0x50
 	.ascii	"die\000"
 	.byte	0x4
 	.2byte	0x13e
-	.4byte	0x317
-	.4byte	.LLST209
+	.4byte	0x30a
+	.uleb128 0x1
+	.byte	0x57
 	.uleb128 0x3e
 	.ascii	"blk\000"
 	.byte	0x4
 	.2byte	0x13f
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF353
+	.4byte	.LASF352
 	.byte	0x4
 	.2byte	0x140
-	.4byte	0x317
+	.4byte	0x30a
 	.4byte	.LLST210
 	.uleb128 0x3d
-	.4byte	.LASF593
+	.4byte	.LASF591
 	.byte	0x4
 	.2byte	0x142
-	.4byte	0x47c9
+	.4byte	0x4774
 	.uleb128 0x3f
-	.4byte	.LASF594
+	.4byte	.LASF592
 	.byte	0x4
 	.2byte	0x158
 	.uleb128 0x4e
-	.4byte	0x17d1
-	.4byte	.LBB465
-	.4byte	.Ldebug_ranges0+0x1e0
+	.4byte	0x17c6
+	.4byte	.LBB488
+	.4byte	.Ldebug_ranges0+0x240
 	.byte	0x4
 	.2byte	0x15e
-	.4byte	0x46b1
+	.4byte	0x465c
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0x1e0
+	.4byte	.Ldebug_ranges0+0x240
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0x1e0
+	.4byte	.Ldebug_ranges0+0x240
 	.uleb128 0x30
-	.4byte	0x6134
+	.4byte	0x61fc
 	.uleb128 0x30
-	.4byte	0x6139
-	.uleb128 0x24
-	.4byte	.LVL1088
-	.4byte	0x6732
+	.4byte	0x6201
+	.uleb128 0x23
+	.4byte	.LVL1085
+	.4byte	0x67f9
 	.byte	0
 	.byte	0
 	.byte	0
 	.uleb128 0x53
-	.4byte	0x17d1
-	.4byte	.LBB471
-	.4byte	.LBE471-.LBB471
+	.4byte	0x17c6
+	.4byte	.LBB494
+	.4byte	.LBE494-.LBB494
 	.byte	0x4
 	.2byte	0x15f
-	.4byte	0x470b
+	.4byte	0x46b6
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB472
-	.4byte	.LBE472-.LBB472
+	.4byte	.LBB495
+	.4byte	.LBE495-.LBB495
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB473
-	.4byte	.LBE473-.LBB473
+	.4byte	.LBB496
+	.4byte	.LBE496-.LBB496
 	.uleb128 0x30
-	.4byte	0x6134
+	.4byte	0x61fc
 	.uleb128 0x30
-	.4byte	0x6139
-	.uleb128 0x24
-	.4byte	.LVL1089
-	.4byte	0x6732
+	.4byte	0x6201
+	.uleb128 0x23
+	.4byte	.LVL1086
+	.4byte	0x67f9
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x24
+	.uleb128 0x23
 	.4byte	.LVL1072
-	.4byte	0x4931
-	.uleb128 0x24
+	.4byte	0x48d8
+	.uleb128 0x23
 	.4byte	.LVL1073
-	.4byte	0x47cf
-	.uleb128 0x24
+	.4byte	0x477a
+	.uleb128 0x23
+	.4byte	.LVL1074
+	.4byte	0x4a9e
+	.uleb128 0x23
+	.4byte	.LVL1075
+	.4byte	0x1900
+	.uleb128 0x23
 	.4byte	.LVL1076
-	.4byte	0x4af7
-	.uleb128 0x24
-	.4byte	.LVL1077
-	.4byte	0x190b
-	.uleb128 0x24
+	.4byte	0x4af9
+	.uleb128 0x23
 	.4byte	.LVL1078
-	.4byte	0x4b52
-	.uleb128 0x24
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL1079
+	.4byte	0x176f
+	.uleb128 0x23
+	.4byte	.LVL1081
+	.4byte	0x4af9
+	.uleb128 0x23
 	.4byte	.LVL1082
-	.4byte	0x1b05
-	.uleb128 0x24
+	.4byte	0x180a
+	.uleb128 0x23
 	.4byte	.LVL1083
-	.4byte	0x177a
-	.uleb128 0x24
+	.4byte	0x4a38
+	.uleb128 0x23
 	.4byte	.LVL1084
-	.4byte	0x4b52
-	.uleb128 0x24
-	.4byte	.LVL1085
-	.4byte	0x1815
-	.uleb128 0x24
-	.4byte	.LVL1086
-	.4byte	0x4a91
-	.uleb128 0x24
-	.4byte	.LVL1087
-	.4byte	0x4af7
-	.uleb128 0x24
+	.4byte	0x4a9e
+	.uleb128 0x23
+	.4byte	.LVL1088
+	.4byte	0x176f
+	.uleb128 0x23
+	.4byte	.LVL1089
+	.4byte	0x1954
+	.uleb128 0x23
+	.4byte	.LVL1090
+	.4byte	0x19ea
+	.uleb128 0x23
 	.4byte	.LVL1092
-	.4byte	0x177a
-	.uleb128 0x24
+	.4byte	0x4af9
+	.uleb128 0x23
 	.4byte	.LVL1093
-	.4byte	0x195f
-	.uleb128 0x24
+	.4byte	0x4af9
+	.uleb128 0x23
 	.4byte	.LVL1094
-	.4byte	0x19f5
-	.uleb128 0x24
+	.4byte	0x1954
+	.uleb128 0x23
 	.4byte	.LVL1095
-	.4byte	0x4b52
-	.uleb128 0x24
+	.4byte	0x4af9
+	.uleb128 0x23
 	.4byte	.LVL1096
-	.4byte	0x4b52
-	.uleb128 0x24
+	.4byte	0x4af9
+	.uleb128 0x23
+	.4byte	.LVL1097
+	.4byte	0x493b
+	.uleb128 0x23
 	.4byte	.LVL1098
-	.4byte	0x195f
-	.uleb128 0x24
-	.4byte	.LVL1099
-	.4byte	0x4b52
-	.uleb128 0x24
-	.4byte	.LVL1100
-	.4byte	0x4b52
-	.uleb128 0x24
-	.4byte	.LVL1101
-	.4byte	0x4994
-	.uleb128 0x24
-	.4byte	.LVL1102
-	.4byte	0x4994
+	.4byte	0x493b
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x70b
+	.4byte	0x6fe
 	.uleb128 0x3a
-	.4byte	.LASF595
+	.4byte	.LASF593
 	.byte	0x4
 	.2byte	0x116
-	.4byte	0x64
-	.4byte	.LFB170
-	.4byte	.LFE170-.LFB170
+	.4byte	0x62
+	.4byte	.LFB180
+	.4byte	.LFE180-.LFB180
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x482d
+	.4byte	0x47d8
 	.uleb128 0x50
 	.ascii	"die\000"
 	.byte	0x4
 	.2byte	0x118
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x1
 	.byte	0x56
 	.uleb128 0x51
 	.ascii	"blk\000"
 	.byte	0x4
 	.2byte	0x119
-	.4byte	0x30c
+	.4byte	0x2ff
 	.4byte	.LLST82
 	.uleb128 0x44
-	.4byte	.LASF596
+	.4byte	.LASF594
 	.byte	0x4
 	.2byte	0x11a
-	.4byte	0x317
+	.4byte	0x30a
 	.4byte	.LLST83
 	.uleb128 0x3d
-	.4byte	.LASF593
+	.4byte	.LASF591
 	.byte	0x4
 	.2byte	0x11b
-	.4byte	0x47c9
-	.uleb128 0x24
-	.4byte	.LVL361
-	.4byte	0x1b05
+	.4byte	0x4774
+	.uleb128 0x23
+	.4byte	.LVL362
+	.4byte	0x1af9
 	.byte	0
-	.uleb128 0x22
-	.4byte	.LASF597
+	.uleb128 0x21
+	.4byte	.LASF595
 	.byte	0x4
 	.byte	0xac
-	.4byte	0x64
-	.4byte	.LFB169
-	.4byte	.LFE169-.LFB169
+	.4byte	0x62
+	.4byte	.LFB179
+	.4byte	.LFE179-.LFB179
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x48dd
+	.4byte	0x4888
 	.uleb128 0x49
 	.ascii	"i\000"
 	.byte	0x4
 	.byte	0xae
-	.4byte	0x317
-	.4byte	.LLST206
+	.4byte	0x30a
+	.4byte	.LLST207
 	.uleb128 0x49
 	.ascii	"blk\000"
 	.byte	0x4
 	.byte	0xaf
-	.4byte	0x30c
-	.4byte	.LLST207
+	.4byte	0x2ff
+	.4byte	.LLST208
 	.uleb128 0x2c
-	.4byte	.LASF489
+	.4byte	.LASF488
 	.byte	0x4
 	.byte	0xb0
-	.4byte	0x32d
-	.4byte	.LLST208
+	.4byte	0x320
+	.4byte	.LLST209
 	.uleb128 0x34
-	.4byte	.LASF593
+	.4byte	.LASF591
 	.byte	0x4
 	.byte	0xb1
-	.4byte	0x47c9
+	.4byte	0x4774
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x48ed
+	.4byte	.LASF362
+	.4byte	0x4898
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.6576
-	.uleb128 0x24
+	.4byte	__func__.3749
+	.uleb128 0x23
 	.4byte	.LVL1051
-	.4byte	0x4931
-	.uleb128 0x24
+	.4byte	0x48d8
+	.uleb128 0x23
 	.4byte	.LVL1053
-	.4byte	0x1b05
-	.uleb128 0x24
+	.4byte	0x1af9
+	.uleb128 0x23
 	.4byte	.LVL1054
-	.4byte	0x1b05
-	.uleb128 0x24
+	.4byte	0x1af9
+	.uleb128 0x23
 	.4byte	.LVL1055
-	.4byte	0x1b05
-	.uleb128 0x24
+	.4byte	0x1af9
+	.uleb128 0x23
 	.4byte	.LVL1056
-	.4byte	0x447f
-	.uleb128 0x24
+	.4byte	0x442c
+	.uleb128 0x23
 	.4byte	.LVL1058
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL1059
-	.4byte	0x58be
-	.uleb128 0x24
+	.4byte	0x5862
+	.uleb128 0x23
 	.4byte	.LVL1065
-	.4byte	0x1b05
-	.uleb128 0x24
+	.4byte	0x1af9
+	.uleb128 0x23
 	.4byte	.LVL1069
-	.4byte	0x177a
+	.4byte	0x176f
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x3c
-	.4byte	0x48ed
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x3a
+	.4byte	0x4898
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0xa
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x48dd
-	.uleb128 0x22
-	.4byte	.LASF598
+	.uleb128 0x3
+	.4byte	0x4888
+	.uleb128 0x21
+	.4byte	.LASF596
 	.byte	0x4
 	.byte	0x9c
-	.4byte	0x30c
-	.4byte	.LFB168
-	.4byte	.LFE168-.LFB168
+	.4byte	0x2ff
+	.4byte	.LFB178
+	.4byte	.LFE178-.LFB178
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x4931
-	.uleb128 0x49
+	.4byte	0x48d8
+	.uleb128 0x29
 	.ascii	"blk\000"
 	.byte	0x4
 	.byte	0x9e
-	.4byte	0x30c
-	.4byte	.LLST19
-	.uleb128 0x20
-	.4byte	.LASF599
+	.4byte	0x2ff
+	.uleb128 0x1f
+	.4byte	.LASF597
 	.byte	0x4
 	.byte	0x9f
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x1
 	.byte	0x54
-	.uleb128 0x24
-	.4byte	.LVL53
-	.4byte	0x4af7
+	.uleb128 0x23
+	.4byte	.LVL50
+	.4byte	0x4a9e
 	.byte	0
 	.uleb128 0x48
-	.4byte	.LASF600
+	.4byte	.LASF598
 	.byte	0x4
 	.byte	0x94
-	.4byte	.LFB167
-	.4byte	.LFE167-.LFB167
+	.4byte	.LFB177
+	.4byte	.LFE177-.LFB177
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x4994
-	.uleb128 0x5a
-	.4byte	0x17d1
-	.4byte	.LBB227
-	.4byte	.Ldebug_ranges0+0x18
+	.4byte	0x493b
+	.uleb128 0x5b
+	.4byte	0x17c6
+	.4byte	.LBB233
+	.4byte	.Ldebug_ranges0+0x20
 	.byte	0x4
 	.byte	0x98
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0x18
+	.4byte	.Ldebug_ranges0+0x20
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0x18
+	.4byte	.Ldebug_ranges0+0x20
 	.uleb128 0x30
-	.4byte	0x17fd
+	.4byte	0x17f2
 	.uleb128 0x30
-	.4byte	0x1808
-	.uleb128 0x24
-	.4byte	.LVL50
-	.4byte	0x671c
+	.4byte	0x17fd
+	.uleb128 0x23
+	.4byte	.LVL49
+	.4byte	0x67e3
 	.byte	0
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x22
-	.4byte	.LASF601
+	.uleb128 0x21
+	.4byte	.LASF599
 	.byte	0x4
 	.byte	0x4f
-	.4byte	0x64
-	.4byte	.LFB166
-	.4byte	.LFE166-.LFB166
+	.4byte	0x62
+	.4byte	.LFB176
+	.4byte	.LFE176-.LFB176
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x4a91
+	.4byte	0x4a38
 	.uleb128 0x49
 	.ascii	"i\000"
 	.byte	0x4
 	.byte	0x51
-	.4byte	0x64
-	.4byte	.LLST173
+	.4byte	0x62
+	.4byte	.LLST175
 	.uleb128 0x2c
-	.4byte	.LASF602
+	.4byte	.LASF600
 	.byte	0x4
 	.byte	0x52
-	.4byte	0x64
-	.4byte	.LLST174
+	.4byte	0x62
+	.4byte	.LLST176
 	.uleb128 0x2c
-	.4byte	.LASF593
+	.4byte	.LASF591
 	.byte	0x4
 	.byte	0x53
-	.4byte	0x47c9
-	.4byte	.LLST175
+	.4byte	0x4774
+	.4byte	.LLST177
 	.uleb128 0x2c
-	.4byte	.LASF505
+	.4byte	.LASF504
 	.byte	0x4
 	.byte	0x54
-	.4byte	0x30c
-	.4byte	.LLST176
+	.4byte	0x2ff
+	.4byte	.LLST178
 	.uleb128 0x46
-	.4byte	.LASF603
+	.4byte	.LASF601
 	.byte	0x4
 	.byte	0x67
-	.uleb128 0x5b
-	.4byte	.LASF363
-	.4byte	0x1b00
+	.uleb128 0x5c
+	.4byte	.LASF362
+	.4byte	0x1af4
 	.uleb128 0x2d
-	.4byte	0x17d1
-	.4byte	.LBB420
-	.4byte	.Ldebug_ranges0+0x158
+	.4byte	0x17c6
+	.4byte	.LBB442
+	.4byte	.Ldebug_ranges0+0x1a0
 	.byte	0x4
 	.byte	0x5f
-	.4byte	0x4a48
+	.4byte	0x49ef
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0x158
+	.4byte	.Ldebug_ranges0+0x1a0
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0x158
+	.4byte	.Ldebug_ranges0+0x1a0
 	.uleb128 0x30
-	.4byte	0x6134
+	.4byte	0x61fc
 	.uleb128 0x30
-	.4byte	0x6139
-	.uleb128 0x24
-	.4byte	.LVL841
-	.4byte	0x671c
+	.4byte	0x6201
+	.uleb128 0x23
+	.4byte	.LVL839
+	.4byte	0x67e3
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL837
-	.4byte	0x17d1
-	.uleb128 0x24
+	.uleb128 0x23
+	.4byte	.LVL835
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL840
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL841
+	.4byte	0x19ea
+	.uleb128 0x23
 	.4byte	.LVL842
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	0x1954
+	.uleb128 0x23
 	.4byte	.LVL843
-	.4byte	0x19f5
-	.uleb128 0x24
-	.4byte	.LVL844
-	.4byte	0x195f
-	.uleb128 0x24
-	.4byte	.LVL845
-	.4byte	0x19f5
-	.uleb128 0x24
-	.4byte	.LVL848
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	0x19ea
+	.uleb128 0x23
+	.4byte	.LVL846
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL847
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL849
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL851
-	.4byte	0x177a
+	.4byte	0x176f
 	.byte	0
 	.uleb128 0x48
-	.4byte	.LASF604
+	.4byte	.LASF602
 	.byte	0x4
 	.byte	0x41
-	.4byte	.LFB165
-	.4byte	.LFE165-.LFB165
+	.4byte	.LFB175
+	.4byte	.LFE175-.LFB175
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x4aef
-	.uleb128 0x23
-	.4byte	.LASF537
+	.4byte	0x4a96
+	.uleb128 0x22
+	.4byte	.LASF536
 	.byte	0x4
 	.byte	0x41
-	.4byte	0x63b
-	.4byte	.LLST111
-	.uleb128 0x23
-	.4byte	.LASF605
+	.4byte	0x62e
+	.4byte	.LLST112
+	.uleb128 0x22
+	.4byte	.LASF603
 	.byte	0x4
 	.byte	0x41
-	.4byte	0x544
-	.4byte	.LLST112
+	.4byte	0x537
+	.4byte	.LLST113
 	.uleb128 0x29
 	.ascii	"i\000"
 	.byte	0x4
 	.byte	0x43
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x29d0
+	.4byte	.LASF362
+	.4byte	0x29d6
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.6533
-	.uleb128 0x24
-	.4byte	.LVL522
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL523
-	.4byte	0x6727
+	.4byte	__func__.3706
+	.uleb128 0x23
+	.4byte	.LVL537
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL538
+	.4byte	0x67ee
 	.byte	0
-	.uleb128 0x5c
-	.4byte	.LASF606
+	.uleb128 0x5d
+	.4byte	.LASF604
 	.byte	0x4
 	.byte	0x26
 	.byte	0x1
 	.uleb128 0x2a
-	.4byte	.LASF607
+	.4byte	.LASF605
 	.byte	0x4
 	.byte	0x17
-	.4byte	0x64
-	.4byte	.LFB163
-	.4byte	.LFE163-.LFB163
+	.4byte	0x62
+	.4byte	.LFB173
+	.4byte	.LFE173-.LFB173
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x4b52
-	.uleb128 0x23
-	.4byte	.LASF179
+	.4byte	0x4af9
+	.uleb128 0x22
+	.4byte	.LASF178
 	.byte	0x4
 	.byte	0x17
-	.4byte	0x30c
-	.4byte	.LLST16
+	.4byte	0x2ff
+	.4byte	.LLST15
 	.uleb128 0x49
 	.ascii	"die\000"
 	.byte	0x4
 	.byte	0x19
-	.4byte	0x317
-	.4byte	.LLST17
+	.4byte	0x30a
+	.4byte	.LLST16
 	.uleb128 0x29
 	.ascii	"i\000"
 	.byte	0x4
 	.byte	0x1a
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x34
-	.4byte	.LASF605
+	.4byte	.LASF603
 	.byte	0x4
 	.byte	0x1b
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x2c
-	.4byte	.LASF370
+	.4byte	.LASF369
 	.byte	0x4
 	.byte	0x1c
-	.4byte	0x30c
-	.4byte	.LLST18
+	.4byte	0x2ff
+	.4byte	.LLST17
 	.byte	0
 	.uleb128 0x2a
-	.4byte	.LASF608
+	.4byte	.LASF606
 	.byte	0x4
 	.byte	0x4
-	.4byte	0x64
-	.4byte	.LFB162
-	.4byte	.LFE162-.LFB162
+	.4byte	0x62
+	.4byte	.LFB172
+	.4byte	.LFE172-.LFB172
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x4ba9
-	.uleb128 0x23
-	.4byte	.LASF179
+	.4byte	0x4b4e
+	.uleb128 0x22
+	.4byte	.LASF178
 	.byte	0x4
 	.byte	0x4
-	.4byte	0x30c
+	.4byte	0x2ff
 	.4byte	.LLST14
-	.uleb128 0x49
+	.uleb128 0x36
 	.ascii	"die\000"
 	.byte	0x4
 	.byte	0x6
-	.4byte	0x317
-	.4byte	.LLST15
+	.4byte	0x30a
+	.uleb128 0x1
+	.byte	0x56
 	.uleb128 0x34
-	.4byte	.LASF605
+	.4byte	.LASF603
 	.byte	0x4
 	.byte	0x7
-	.4byte	0x544
+	.4byte	0x537
 	.uleb128 0x34
-	.4byte	.LASF370
+	.4byte	.LASF369
 	.byte	0x4
 	.byte	0x8
-	.4byte	0x30c
-	.uleb128 0x24
-	.4byte	.LVL41
-	.4byte	0x6727
+	.4byte	0x2ff
+	.uleb128 0x23
+	.4byte	.LVL40
+	.4byte	0x67ee
 	.byte	0
-	.uleb128 0x5d
-	.4byte	.LASF670
+	.uleb128 0x5e
+	.4byte	.LASF668
 	.byte	0x3
-	.2byte	0x4bb
-	.4byte	0x317
-	.4byte	.LFB161
-	.4byte	.LFE161-.LFB161
+	.2byte	0x4bd
+	.4byte	0x30a
+	.4byte	.LFB171
+	.4byte	.LFE171-.LFB171
 	.uleb128 0x1
 	.byte	0x9c
 	.uleb128 0x3a
-	.4byte	.LASF609
+	.4byte	.LASF607
 	.byte	0x3
-	.2byte	0x4b6
-	.4byte	0x64
-	.4byte	.LFB160
-	.4byte	.LFE160-.LFB160
+	.2byte	0x4b8
+	.4byte	0x62
+	.4byte	.LFB170
+	.4byte	.LFE170-.LFB170
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x4c13
+	.4byte	0x4bb8
 	.uleb128 0x43
-	.4byte	.LASF94
+	.4byte	.LASF93
 	.byte	0x3
-	.2byte	0x4b6
-	.4byte	0x99
+	.2byte	0x4b8
+	.4byte	0x97
 	.4byte	.LLST283
 	.uleb128 0x43
-	.4byte	.LASF115
+	.4byte	.LASF114
 	.byte	0x3
-	.2byte	0x4b6
-	.4byte	0x99
+	.2byte	0x4b8
+	.4byte	0x97
 	.4byte	.LLST284
 	.uleb128 0x4d
 	.ascii	"buf\000"
 	.byte	0x3
-	.2byte	0x4b6
-	.4byte	0x4c13
+	.2byte	0x4b8
+	.4byte	0x4bb8
 	.4byte	.LLST285
-	.uleb128 0x24
-	.4byte	.LVL1560
-	.4byte	0x4d3f
+	.uleb128 0x23
+	.4byte	.LVL1550
+	.4byte	0x4ce4
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x79
+	.4byte	0x77
 	.uleb128 0x3a
-	.4byte	.LASF610
+	.4byte	.LASF608
 	.byte	0x3
-	.2byte	0x4b0
-	.4byte	0x64
-	.4byte	.LFB159
-	.4byte	.LFE159-.LFB159
+	.2byte	0x4b3
+	.4byte	0x62
+	.4byte	.LFB169
+	.4byte	.LFE169-.LFB169
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x4c6d
+	.4byte	0x4c12
 	.uleb128 0x43
-	.4byte	.LASF94
+	.4byte	.LASF93
 	.byte	0x3
-	.2byte	0x4b0
-	.4byte	0x99
+	.2byte	0x4b3
+	.4byte	0x97
 	.4byte	.LLST269
 	.uleb128 0x43
-	.4byte	.LASF115
+	.4byte	.LASF114
 	.byte	0x3
-	.2byte	0x4b0
-	.4byte	0x99
+	.2byte	0x4b3
+	.4byte	0x97
 	.4byte	.LLST270
 	.uleb128 0x4d
 	.ascii	"buf\000"
 	.byte	0x3
-	.2byte	0x4b0
-	.4byte	0x4c13
+	.2byte	0x4b3
+	.4byte	0x4bb8
 	.4byte	.LLST271
-	.uleb128 0x24
-	.4byte	.LVL1458
-	.4byte	0x50ca
+	.uleb128 0x23
+	.4byte	.LVL1436
+	.4byte	0x506e
 	.byte	0
 	.uleb128 0x4c
-	.4byte	.LASF611
+	.4byte	.LASF609
 	.byte	0x3
-	.2byte	0x481
-	.4byte	0x64
-	.4byte	.LFB158
-	.4byte	.LFE158-.LFB158
+	.2byte	0x484
+	.4byte	0x62
+	.4byte	.LFB168
+	.4byte	.LFE168-.LFB168
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x4d3f
+	.4byte	0x4ce4
 	.uleb128 0x43
-	.4byte	.LASF515
+	.4byte	.LASF514
 	.byte	0x3
-	.2byte	0x481
-	.4byte	0x317
+	.2byte	0x484
+	.4byte	0x30a
 	.4byte	.LLST234
 	.uleb128 0x43
-	.4byte	.LASF516
+	.4byte	.LASF515
 	.byte	0x3
-	.2byte	0x481
-	.4byte	0x317
+	.2byte	0x484
+	.4byte	0x30a
 	.4byte	.LLST235
 	.uleb128 0x44
-	.4byte	.LASF518
+	.4byte	.LASF517
 	.byte	0x3
-	.2byte	0x483
-	.4byte	0x30c
+	.2byte	0x486
+	.4byte	0x2ff
 	.4byte	.LLST236
 	.uleb128 0x3e
 	.ascii	"tmp\000"
 	.byte	0x3
-	.2byte	0x484
-	.4byte	0x30c
+	.2byte	0x487
+	.4byte	0x2ff
 	.uleb128 0x51
 	.ascii	"lpa\000"
 	.byte	0x3
-	.2byte	0x485
-	.4byte	0x317
+	.2byte	0x488
+	.4byte	0x30a
 	.4byte	.LLST237
 	.uleb128 0x44
-	.4byte	.LASF447
+	.4byte	.LASF446
 	.byte	0x3
-	.2byte	0x486
-	.4byte	0x317
+	.2byte	0x489
+	.4byte	0x30a
 	.4byte	.LLST238
 	.uleb128 0x44
-	.4byte	.LASF424
+	.4byte	.LASF423
 	.byte	0x3
-	.2byte	0x486
-	.4byte	0x317
+	.2byte	0x489
+	.4byte	0x30a
 	.4byte	.LLST239
 	.uleb128 0x3d
-	.4byte	.LASF413
+	.4byte	.LASF412
 	.byte	0x3
-	.2byte	0x487
-	.4byte	0x30c
-	.uleb128 0x24
+	.2byte	0x48a
+	.4byte	0x2ff
+	.uleb128 0x23
+	.4byte	.LVL1219
+	.4byte	0x4f11
+	.uleb128 0x23
+	.4byte	.LVL1225
+	.4byte	0x39f9
+	.uleb128 0x23
 	.4byte	.LVL1226
-	.4byte	0x4f6d
-	.uleb128 0x24
-	.4byte	.LVL1232
-	.4byte	0x39f7
-	.uleb128 0x24
-	.4byte	.LVL1233
 	.4byte	0x3593
-	.uleb128 0x24
-	.4byte	.LVL1234
-	.4byte	0x392c
-	.uleb128 0x24
-	.4byte	.LVL1235
-	.4byte	0x392c
-	.uleb128 0x24
-	.4byte	.LVL1238
-	.4byte	0x455a
-	.uleb128 0x24
-	.4byte	.LVL1239
-	.4byte	0x233b
+	.uleb128 0x23
+	.4byte	.LVL1227
+	.4byte	0x392e
+	.uleb128 0x23
+	.4byte	.LVL1228
+	.4byte	0x392e
+	.uleb128 0x23
+	.4byte	.LVL1231
+	.4byte	0x4507
+	.uleb128 0x23
+	.4byte	.LVL1232
+	.4byte	0x2331
 	.byte	0
 	.uleb128 0x4c
-	.4byte	.LASF612
+	.4byte	.LASF610
 	.byte	0x3
-	.2byte	0x3be
-	.4byte	0x64
-	.4byte	.LFB157
-	.4byte	.LFE157-.LFB157
+	.2byte	0x3c1
+	.4byte	0x62
+	.4byte	.LFB167
+	.4byte	.LFE167-.LFB167
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x4f6d
+	.4byte	0x4f11
 	.uleb128 0x4d
 	.ascii	"LUN\000"
 	.byte	0x3
-	.2byte	0x3be
-	.4byte	0x301
+	.2byte	0x3c1
+	.4byte	0x2f4
 	.4byte	.LLST272
 	.uleb128 0x43
-	.4byte	.LASF515
+	.4byte	.LASF514
 	.byte	0x3
-	.2byte	0x3be
-	.4byte	0x317
+	.2byte	0x3c1
+	.4byte	0x30a
 	.4byte	.LLST273
 	.uleb128 0x43
-	.4byte	.LASF516
+	.4byte	.LASF515
 	.byte	0x3
-	.2byte	0x3be
-	.4byte	0x317
+	.2byte	0x3c1
+	.4byte	0x30a
 	.4byte	.LLST274
 	.uleb128 0x43
-	.4byte	.LASF517
+	.4byte	.LASF516
 	.byte	0x3
-	.2byte	0x3be
-	.4byte	0x384f
+	.2byte	0x3c1
+	.4byte	0x3853
 	.4byte	.LLST275
 	.uleb128 0x3d
-	.4byte	.LASF381
+	.4byte	.LASF380
 	.byte	0x3
-	.2byte	0x3c0
-	.4byte	0x1d4c
+	.2byte	0x3c3
+	.4byte	0x1d42
 	.uleb128 0x51
 	.ascii	"lpa\000"
 	.byte	0x3
-	.2byte	0x3c1
-	.4byte	0x317
+	.2byte	0x3c4
+	.4byte	0x30a
 	.4byte	.LLST276
 	.uleb128 0x44
-	.4byte	.LASF613
+	.4byte	.LASF611
 	.byte	0x3
-	.2byte	0x3c1
-	.4byte	0x317
+	.2byte	0x3c4
+	.4byte	0x30a
 	.4byte	.LLST277
 	.uleb128 0x44
-	.4byte	.LASF614
+	.4byte	.LASF612
 	.byte	0x3
-	.2byte	0x3c1
-	.4byte	0x317
+	.2byte	0x3c4
+	.4byte	0x30a
 	.4byte	.LLST278
 	.uleb128 0x44
-	.4byte	.LASF447
+	.4byte	.LASF446
 	.byte	0x3
-	.2byte	0x3c2
-	.4byte	0x317
+	.2byte	0x3c5
+	.4byte	0x30a
 	.4byte	.LLST279
 	.uleb128 0x3e
 	.ascii	"ppa\000"
 	.byte	0x3
-	.2byte	0x3c2
-	.4byte	0x317
+	.2byte	0x3c5
+	.4byte	0x30a
 	.uleb128 0x51
 	.ascii	"i\000"
 	.byte	0x3
-	.2byte	0x3c3
-	.4byte	0x317
+	.2byte	0x3c6
+	.4byte	0x30a
 	.4byte	.LLST280
 	.uleb128 0x44
-	.4byte	.LASF615
+	.4byte	.LASF613
 	.byte	0x3
-	.2byte	0x3c3
-	.4byte	0x317
+	.2byte	0x3c6
+	.4byte	0x30a
 	.4byte	.LLST281
 	.uleb128 0x3d
-	.4byte	.LASF378
+	.4byte	.LASF377
 	.byte	0x3
-	.2byte	0x3c3
-	.4byte	0x317
+	.2byte	0x3c6
+	.4byte	0x30a
 	.uleb128 0x3d
-	.4byte	.LASF616
+	.4byte	.LASF614
 	.byte	0x3
-	.2byte	0x3c4
-	.4byte	0x317
+	.2byte	0x3c7
+	.4byte	0x30a
 	.uleb128 0x3d
-	.4byte	.LASF617
+	.4byte	.LASF615
 	.byte	0x3
-	.2byte	0x3c4
-	.4byte	0x317
+	.2byte	0x3c7
+	.4byte	0x30a
 	.uleb128 0x44
-	.4byte	.LASF423
+	.4byte	.LASF422
 	.byte	0x3
-	.2byte	0x3c5
-	.4byte	0x12cb
+	.2byte	0x3c8
+	.4byte	0x12be
 	.4byte	.LLST282
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x39f2
+	.4byte	.LASF362
+	.4byte	0x39f4
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.6469
+	.4byte	__func__.3642
 	.uleb128 0x52
-	.4byte	.LBB516
-	.4byte	.LBE516-.LBB516
-	.4byte	0x4e8b
-	.uleb128 0x1f
-	.4byte	.LASF386
+	.4byte	.LBB539
+	.4byte	.LBE539-.LBB539
+	.4byte	0x4e2f
+	.uleb128 0x1e
+	.4byte	.LASF385
 	.byte	0x3
-	.2byte	0x43a
-	.4byte	0x338
-	.uleb128 0x3
+	.2byte	0x43d
+	.4byte	0x32b
+	.uleb128 0x2
 	.byte	0x91
-	.sleb128 -68
-	.uleb128 0x24
-	.4byte	.LVL1538
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL1539
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1540
-	.4byte	0x6727
+	.sleb128 -64
+	.uleb128 0x23
+	.4byte	.LVL1525
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL1526
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1527
+	.4byte	0x67ee
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL1462
-	.4byte	0x3855
-	.uleb128 0x24
-	.4byte	.LVL1473
-	.4byte	0x4f6d
-	.uleb128 0x24
-	.4byte	.LVL1479
-	.4byte	0x6727
-	.uleb128 0x24
+	.uleb128 0x23
+	.4byte	.LVL1440
+	.4byte	0x3859
+	.uleb128 0x23
+	.4byte	.LVL1452
+	.4byte	0x4f11
+	.uleb128 0x23
+	.4byte	.LVL1461
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1463
+	.4byte	0x4f11
+	.uleb128 0x23
+	.4byte	.LVL1464
+	.4byte	0x2463
+	.uleb128 0x23
+	.4byte	.LVL1465
+	.4byte	0x2463
+	.uleb128 0x23
+	.4byte	.LVL1468
+	.4byte	0x2463
+	.uleb128 0x23
+	.4byte	.LVL1472
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1478
+	.4byte	0x1c75
+	.uleb128 0x23
 	.4byte	.LVL1480
-	.4byte	0x4f6d
-	.uleb128 0x24
+	.4byte	0x3fa5
+	.uleb128 0x23
 	.4byte	.LVL1481
-	.4byte	0x246d
-	.uleb128 0x24
+	.4byte	0x1e70
+	.uleb128 0x23
 	.4byte	.LVL1482
-	.4byte	0x246d
-	.uleb128 0x24
-	.4byte	.LVL1485
-	.4byte	0x246d
-	.uleb128 0x24
-	.4byte	.LVL1488
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	0x1c75
+	.uleb128 0x23
+	.4byte	.LVL1483
+	.4byte	0x1c75
+	.uleb128 0x23
+	.4byte	.LVL1489
+	.4byte	0x176f
+	.uleb128 0x23
 	.4byte	.LVL1495
-	.4byte	0x1c7f
-	.uleb128 0x24
+	.4byte	0x4f11
+	.uleb128 0x23
 	.4byte	.LVL1497
-	.4byte	0x3fa5
-	.uleb128 0x24
-	.4byte	.LVL1498
-	.4byte	0x1e7a
-	.uleb128 0x24
-	.4byte	.LVL1499
-	.4byte	0x1c7f
-	.uleb128 0x24
+	.4byte	0x2463
+	.uleb128 0x23
 	.4byte	.LVL1500
-	.4byte	0x1c7f
-	.uleb128 0x24
-	.4byte	.LVL1505
-	.4byte	0x177a
-	.uleb128 0x24
-	.4byte	.LVL1510
-	.4byte	0x4f6d
-	.uleb128 0x24
-	.4byte	.LVL1512
-	.4byte	0x246d
-	.uleb128 0x24
-	.4byte	.LVL1515
-	.4byte	0x392c
-	.uleb128 0x24
-	.4byte	.LVL1516
-	.4byte	0x23f1
-	.uleb128 0x24
-	.4byte	.LVL1520
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL1531
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1541
-	.4byte	0x177a
-	.uleb128 0x24
-	.4byte	.LVL1544
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL1547
-	.4byte	0x177a
-	.uleb128 0x24
-	.4byte	.LVL1551
-	.4byte	0x4f91
-	.uleb128 0x24
-	.4byte	.LVL1555
-	.4byte	0x6727
+	.4byte	0x392e
+	.uleb128 0x23
+	.4byte	.LVL1501
+	.4byte	0x23e7
+	.uleb128 0x23
+	.4byte	.LVL1502
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL1517
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1530
+	.4byte	0x176f
+	.uleb128 0x23
+	.4byte	.LVL1533
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL1536
+	.4byte	0x176f
+	.uleb128 0x23
+	.4byte	.LVL1543
+	.4byte	0x4f35
+	.uleb128 0x23
+	.4byte	.LVL1545
+	.4byte	0x67ee
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF618
+	.4byte	.LASF616
 	.byte	0x3
-	.2byte	0x3b5
-	.4byte	0x64
-	.4byte	.LFB156
-	.4byte	.LFE156-.LFB156
+	.2byte	0x3b7
+	.4byte	0x62
+	.4byte	.LFB166
+	.4byte	.LFE166-.LFB166
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x4f91
-	.uleb128 0x24
-	.4byte	.LVL1216
-	.4byte	0x4f91
+	.4byte	0x4f35
+	.uleb128 0x23
+	.4byte	.LVL1209
+	.4byte	0x4f35
 	.byte	0
 	.uleb128 0x4f
-	.4byte	.LASF619
+	.4byte	.LASF617
 	.byte	0x3
-	.2byte	0x385
-	.4byte	.LFB155
-	.4byte	.LFE155-.LFB155
+	.2byte	0x387
+	.4byte	.LFB165
+	.4byte	.LFE165-.LFB165
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x50b5
+	.4byte	0x5059
 	.uleb128 0x4d
 	.ascii	"req\000"
 	.byte	0x3
-	.2byte	0x385
-	.4byte	0xf4b
+	.2byte	0x387
+	.4byte	0xf3e
 	.4byte	.LLST227
 	.uleb128 0x43
-	.4byte	.LASF378
+	.4byte	.LASF377
 	.byte	0x3
-	.2byte	0x385
-	.4byte	0x317
+	.2byte	0x387
+	.4byte	0x30a
 	.4byte	.LLST228
 	.uleb128 0x43
-	.4byte	.LASF620
+	.4byte	.LASF618
 	.byte	0x3
-	.2byte	0x385
-	.4byte	0x317
+	.2byte	0x387
+	.4byte	0x30a
 	.4byte	.LLST229
 	.uleb128 0x43
-	.4byte	.LASF423
+	.4byte	.LASF422
 	.byte	0x3
-	.2byte	0x385
-	.4byte	0x12cb
+	.2byte	0x387
+	.4byte	0x12be
 	.4byte	.LLST230
 	.uleb128 0x51
 	.ascii	"i\000"
 	.byte	0x3
-	.2byte	0x387
-	.4byte	0x317
+	.2byte	0x389
+	.4byte	0x30a
 	.4byte	.LLST231
 	.uleb128 0x51
 	.ascii	"ppa\000"
 	.byte	0x3
-	.2byte	0x388
-	.4byte	0x317
+	.2byte	0x38a
+	.4byte	0x30a
 	.4byte	.LLST232
 	.uleb128 0x44
-	.4byte	.LASF447
+	.4byte	.LASF446
 	.byte	0x3
-	.2byte	0x388
-	.4byte	0x317
+	.2byte	0x38a
+	.4byte	0x30a
 	.4byte	.LLST233
 	.uleb128 0x3d
-	.4byte	.LASF406
+	.4byte	.LASF405
 	.byte	0x3
-	.2byte	0x389
-	.4byte	0x30c
+	.2byte	0x38b
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF381
+	.4byte	.LASF380
 	.byte	0x3
-	.2byte	0x38a
-	.4byte	0x1d4c
+	.2byte	0x38c
+	.4byte	0x1d42
 	.uleb128 0x3d
-	.4byte	.LASF471
+	.4byte	.LASF470
 	.byte	0x3
-	.2byte	0x38b
-	.4byte	0x317
+	.2byte	0x38d
+	.4byte	0x30a
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x50c5
+	.4byte	.LASF362
+	.4byte	0x5069
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.6441
-	.uleb128 0x24
-	.4byte	.LVL1195
-	.4byte	0x19f5
-	.uleb128 0x24
-	.4byte	.LVL1197
-	.4byte	0x455a
-	.uleb128 0x24
+	.4byte	__func__.3614
+	.uleb128 0x23
+	.4byte	.LVL1188
+	.4byte	0x19ea
+	.uleb128 0x23
+	.4byte	.LVL1190
+	.4byte	0x4507
+	.uleb128 0x23
+	.4byte	.LVL1191
+	.4byte	0x2463
+	.uleb128 0x23
+	.4byte	.LVL1192
+	.4byte	0x1e14
+	.uleb128 0x23
+	.4byte	.LVL1193
+	.4byte	0x23e7
+	.uleb128 0x23
+	.4byte	.LVL1194
+	.4byte	0x19ea
+	.uleb128 0x23
+	.4byte	.LVL1196
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL1198
-	.4byte	0x246d
-	.uleb128 0x24
-	.4byte	.LVL1199
-	.4byte	0x1e1e
-	.uleb128 0x24
+	.4byte	0x392e
+	.uleb128 0x23
 	.4byte	.LVL1200
-	.4byte	0x23f1
-	.uleb128 0x24
-	.4byte	.LVL1201
-	.4byte	0x19f5
-	.uleb128 0x24
+	.4byte	0x4507
+	.uleb128 0x23
 	.4byte	.LVL1203
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1205
-	.4byte	0x392c
-	.uleb128 0x24
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1204
+	.4byte	0x2331
+	.uleb128 0x23
 	.4byte	.LVL1207
-	.4byte	0x455a
-	.uleb128 0x24
-	.4byte	.LVL1210
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1211
-	.4byte	0x233b
-	.uleb128 0x24
-	.4byte	.LVL1214
-	.4byte	0x6727
+	.4byte	0x67ee
 	.byte	0
-	.uleb128 0xc
-	.4byte	0x3c
-	.4byte	0x50c5
-	.uleb128 0x17
-	.4byte	0x2e
+	.uleb128 0xb
+	.4byte	0x3a
+	.4byte	0x5069
+	.uleb128 0x16
+	.4byte	0x2c
 	.byte	0xc
 	.byte	0
-	.uleb128 0x4
-	.4byte	0x50b5
+	.uleb128 0x3
+	.4byte	0x5059
 	.uleb128 0x4c
-	.4byte	.LASF621
+	.4byte	.LASF619
 	.byte	0x3
-	.2byte	0x32c
-	.4byte	0x64
-	.4byte	.LFB154
-	.4byte	.LFE154-.LFB154
+	.2byte	0x32d
+	.4byte	0x62
+	.4byte	.LFB164
+	.4byte	.LFE164-.LFB164
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x52a7
+	.4byte	0x524b
 	.uleb128 0x4d
 	.ascii	"LUN\000"
 	.byte	0x3
-	.2byte	0x32c
-	.4byte	0x301
+	.2byte	0x32d
+	.4byte	0x2f4
 	.4byte	.LLST254
 	.uleb128 0x43
-	.4byte	.LASF515
+	.4byte	.LASF514
 	.byte	0x3
-	.2byte	0x32c
-	.4byte	0x317
+	.2byte	0x32d
+	.4byte	0x30a
 	.4byte	.LLST255
 	.uleb128 0x43
-	.4byte	.LASF516
+	.4byte	.LASF515
 	.byte	0x3
-	.2byte	0x32c
-	.4byte	0x317
+	.2byte	0x32d
+	.4byte	0x30a
 	.4byte	.LLST256
 	.uleb128 0x43
-	.4byte	.LASF517
+	.4byte	.LASF516
 	.byte	0x3
-	.2byte	0x32c
-	.4byte	0x384f
+	.2byte	0x32d
+	.4byte	0x3853
 	.4byte	.LLST257
 	.uleb128 0x3e
 	.ascii	"ret\000"
 	.byte	0x3
-	.2byte	0x32e
-	.4byte	0x64
+	.2byte	0x32f
+	.4byte	0x62
 	.uleb128 0x44
-	.4byte	.LASF613
+	.4byte	.LASF611
 	.byte	0x3
-	.2byte	0x32f
-	.4byte	0x317
+	.2byte	0x330
+	.4byte	0x30a
 	.4byte	.LLST258
 	.uleb128 0x44
-	.4byte	.LASF614
+	.4byte	.LASF612
 	.byte	0x3
-	.2byte	0x32f
-	.4byte	0x317
+	.2byte	0x330
+	.4byte	0x30a
 	.4byte	.LLST259
 	.uleb128 0x44
-	.4byte	.LASF622
+	.4byte	.LASF620
 	.byte	0x3
-	.2byte	0x32f
-	.4byte	0x317
+	.2byte	0x330
+	.4byte	0x30a
 	.4byte	.LLST260
 	.uleb128 0x51
 	.ascii	"lpa\000"
 	.byte	0x3
-	.2byte	0x330
-	.4byte	0x317
+	.2byte	0x331
+	.4byte	0x30a
 	.4byte	.LLST261
 	.uleb128 0x51
 	.ascii	"ppa\000"
 	.byte	0x3
-	.2byte	0x330
-	.4byte	0x317
+	.2byte	0x331
+	.4byte	0x30a
 	.4byte	.LLST262
 	.uleb128 0x51
 	.ascii	"n\000"
 	.byte	0x3
-	.2byte	0x332
-	.4byte	0x317
+	.2byte	0x333
+	.4byte	0x30a
 	.4byte	.LLST263
 	.uleb128 0x44
-	.4byte	.LASF378
+	.4byte	.LASF377
 	.byte	0x3
-	.2byte	0x332
-	.4byte	0x317
+	.2byte	0x333
+	.4byte	0x30a
 	.4byte	.LLST264
 	.uleb128 0x44
-	.4byte	.LASF615
+	.4byte	.LASF613
 	.byte	0x3
-	.2byte	0x332
-	.4byte	0x317
+	.2byte	0x333
+	.4byte	0x30a
 	.4byte	.LLST265
 	.uleb128 0x44
-	.4byte	.LASF623
+	.4byte	.LASF621
 	.byte	0x3
-	.2byte	0x333
-	.4byte	0x317
+	.2byte	0x334
+	.4byte	0x30a
 	.4byte	.LLST266
 	.uleb128 0x3d
-	.4byte	.LASF624
+	.4byte	.LASF622
 	.byte	0x3
-	.2byte	0x333
-	.4byte	0x317
+	.2byte	0x334
+	.4byte	0x30a
 	.uleb128 0x44
-	.4byte	.LASF625
+	.4byte	.LASF623
 	.byte	0x3
-	.2byte	0x334
-	.4byte	0x317
+	.2byte	0x335
+	.4byte	0x30a
 	.4byte	.LLST267
 	.uleb128 0x44
-	.4byte	.LASF626
+	.4byte	.LASF624
 	.byte	0x3
-	.2byte	0x335
-	.4byte	0x317
+	.2byte	0x336
+	.4byte	0x30a
 	.4byte	.LLST268
 	.uleb128 0x52
-	.4byte	.LBB515
-	.4byte	.LBE515-.LBB515
-	.4byte	0x5216
+	.4byte	.LBB538
+	.4byte	.LBE538-.LBB538
+	.4byte	0x51ba
 	.uleb128 0x3d
-	.4byte	.LASF393
+	.4byte	.LASF392
 	.byte	0x3
-	.2byte	0x379
-	.4byte	0x30c
-	.uleb128 0x24
-	.4byte	.LVL1443
-	.4byte	0x455a
-	.uleb128 0x24
-	.4byte	.LVL1444
-	.4byte	0x1e7a
+	.2byte	0x37a
+	.4byte	0x2ff
+	.uleb128 0x23
+	.4byte	.LVL1424
+	.4byte	0x4507
+	.uleb128 0x23
+	.4byte	.LVL1425
+	.4byte	0x1e70
 	.byte	0
 	.uleb128 0x53
-	.4byte	0x17d1
-	.4byte	.LBB512
-	.4byte	.LBE512-.LBB512
+	.4byte	0x17c6
+	.4byte	.LBB535
+	.4byte	.LBE535-.LBB535
 	.byte	0x3
-	.2byte	0x34f
-	.4byte	0x5270
+	.2byte	0x350
+	.4byte	0x5214
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB513
-	.4byte	.LBE513-.LBB513
+	.4byte	.LBB536
+	.4byte	.LBE536-.LBB536
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB514
-	.4byte	.LBE514-.LBB514
+	.4byte	.LBB537
+	.4byte	.LBE537-.LBB537
 	.uleb128 0x30
-	.4byte	0x6134
+	.4byte	0x61fc
 	.uleb128 0x30
-	.4byte	0x6139
-	.uleb128 0x24
-	.4byte	.LVL1428
-	.4byte	0x6732
+	.4byte	0x6201
+	.uleb128 0x23
+	.4byte	.LVL1409
+	.4byte	0x67f9
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL1390
-	.4byte	0x3781
-	.uleb128 0x24
-	.4byte	.LVL1396
-	.4byte	0x4f6d
-	.uleb128 0x24
-	.4byte	.LVL1411
-	.4byte	0x1c7f
-	.uleb128 0x24
+	.uleb128 0x23
+	.4byte	.LVL1373
+	.4byte	0x3783
+	.uleb128 0x23
+	.4byte	.LVL1379
+	.4byte	0x4f11
+	.uleb128 0x23
+	.4byte	.LVL1394
+	.4byte	0x1c75
+	.uleb128 0x23
+	.4byte	.LVL1397
+	.4byte	0x392e
+	.uleb128 0x23
 	.4byte	.LVL1414
-	.4byte	0x392c
-	.uleb128 0x24
-	.4byte	.LVL1434
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL1440
-	.4byte	0x177a
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL1422
+	.4byte	0x176f
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF627
+	.4byte	.LASF625
 	.byte	0x3
 	.2byte	0x325
-	.4byte	0x64
-	.4byte	.LFB153
-	.4byte	.LFE153-.LFB153
+	.4byte	0x62
+	.4byte	.LFB163
+	.4byte	.LFE163-.LFB163
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x52cb
-	.uleb128 0x24
-	.4byte	.LVL1221
-	.4byte	0x52cb
+	.4byte	0x526f
+	.uleb128 0x23
+	.4byte	.LVL1214
+	.4byte	0x526f
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF628
+	.4byte	.LASF626
 	.byte	0x3
 	.2byte	0x31c
-	.4byte	0x64
-	.4byte	.LFB152
-	.4byte	.LFE152-.LFB152
+	.4byte	0x62
+	.4byte	.LFB162
+	.4byte	.LFE162-.LFB162
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x530a
-	.uleb128 0x24
-	.4byte	.LVL1217
-	.4byte	0x4f6d
-	.uleb128 0x24
-	.4byte	.LVL1218
-	.4byte	0x39f7
-	.uleb128 0x24
-	.4byte	.LVL1219
-	.4byte	0x3734
-	.uleb128 0x24
-	.4byte	.LVL1220
+	.4byte	0x52ae
+	.uleb128 0x23
+	.4byte	.LVL1210
+	.4byte	0x4f11
+	.uleb128 0x23
+	.4byte	.LVL1211
+	.4byte	0x39f9
+	.uleb128 0x23
+	.4byte	.LVL1212
+	.4byte	0x3736
+	.uleb128 0x23
+	.4byte	.LVL1213
 	.4byte	0x3593
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF629
+	.4byte	.LASF627
 	.byte	0x3
 	.2byte	0x2e6
-	.4byte	0x64
-	.4byte	.LFB151
-	.4byte	.LFE151-.LFB151
+	.4byte	0x62
+	.4byte	.LFB161
+	.4byte	.LFE161-.LFB161
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x5399
+	.4byte	0x533d
 	.uleb128 0x3d
-	.4byte	.LASF630
+	.4byte	.LASF628
 	.byte	0x3
 	.2byte	0x2e8
-	.4byte	0x5399
+	.4byte	0x533d
 	.uleb128 0x3f
-	.4byte	.LASF631
+	.4byte	.LASF629
 	.byte	0x3
 	.2byte	0x2f3
 	.uleb128 0x52
-	.4byte	.LBB524
-	.4byte	.LBE524-.LBB524
-	.4byte	0x5359
+	.4byte	.LBB547
+	.4byte	.LBE547-.LBB547
+	.4byte	0x52fd
 	.uleb128 0x3e
 	.ascii	"i\000"
 	.byte	0x3
 	.2byte	0x310
-	.4byte	0x317
-	.uleb128 0x24
-	.4byte	.LVL1644
-	.4byte	0x1c7f
+	.4byte	0x30a
+	.uleb128 0x23
+	.4byte	.LVL1634
+	.4byte	0x1c75
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL1637
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1638
-	.4byte	0x586d
-	.uleb128 0x24
-	.4byte	.LVL1639
-	.4byte	0x56e5
-	.uleb128 0x24
-	.4byte	.LVL1640
-	.4byte	0x55e9
-	.uleb128 0x24
-	.4byte	.LVL1641
-	.4byte	0x4400
-	.uleb128 0x24
-	.4byte	.LVL1642
-	.4byte	0x482d
-	.uleb128 0x24
-	.4byte	.LVL1643
-	.4byte	0x2812
+	.uleb128 0x23
+	.4byte	.LVL1627
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1628
+	.4byte	0x5811
+	.uleb128 0x23
+	.4byte	.LVL1629
+	.4byte	0x5689
+	.uleb128 0x23
+	.4byte	.LVL1630
+	.4byte	0x558d
+	.uleb128 0x23
+	.4byte	.LVL1631
+	.4byte	0x43ad
+	.uleb128 0x23
+	.4byte	.LVL1632
+	.4byte	0x47d8
+	.uleb128 0x23
+	.4byte	.LVL1633
+	.4byte	0x2818
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x7
 	.byte	0x4
-	.4byte	0x424
+	.4byte	0x417
 	.uleb128 0x4c
-	.4byte	.LASF632
+	.4byte	.LASF630
 	.byte	0x3
 	.2byte	0x26e
-	.4byte	0x64
-	.4byte	.LFB150
-	.4byte	.LFE150-.LFB150
+	.4byte	0x62
+	.4byte	.LFB160
+	.4byte	.LFE160-.LFB160
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x5498
+	.4byte	0x543c
 	.uleb128 0x3d
-	.4byte	.LASF501
+	.4byte	.LASF500
 	.byte	0x3
 	.2byte	0x270
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF633
+	.4byte	.LASF631
 	.byte	0x3
 	.2byte	0x270
-	.4byte	0x30c
+	.4byte	0x2ff
 	.4byte	.LLST288
 	.uleb128 0x44
-	.4byte	.LASF634
+	.4byte	.LASF632
 	.byte	0x3
 	.2byte	0x271
-	.4byte	0x30c
+	.4byte	0x2ff
 	.4byte	.LLST289
 	.uleb128 0x3e
 	.ascii	"i\000"
 	.byte	0x3
 	.2byte	0x272
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x47
-	.4byte	.LASF635
+	.4byte	.LASF633
 	.byte	0x3
 	.2byte	0x2bc
-	.4byte	.L1750
+	.4byte	.L1756
 	.uleb128 0x47
-	.4byte	.LASF636
+	.4byte	.LASF634
 	.byte	0x3
 	.2byte	0x2cc
-	.4byte	.L1752
-	.uleb128 0x24
+	.4byte	.L1758
+	.uleb128 0x23
+	.4byte	.LVL1596
+	.4byte	0x43ad
+	.uleb128 0x23
+	.4byte	.LVL1597
+	.4byte	0x47d8
+	.uleb128 0x23
+	.4byte	.LVL1598
+	.4byte	0x45b2
+	.uleb128 0x23
+	.4byte	.LVL1605
+	.4byte	0x493b
+	.uleb128 0x23
 	.4byte	.LVL1606
-	.4byte	0x4400
-	.uleb128 0x24
+	.4byte	0x17c6
+	.uleb128 0x23
 	.4byte	.LVL1607
-	.4byte	0x482d
-	.uleb128 0x24
+	.4byte	0x17c6
+	.uleb128 0x23
 	.4byte	.LVL1608
-	.4byte	0x4605
-	.uleb128 0x24
+	.4byte	0x2c58
+	.uleb128 0x23
+	.4byte	.LVL1610
+	.4byte	0x543c
+	.uleb128 0x23
+	.4byte	.LVL1614
+	.4byte	0x5862
+	.uleb128 0x23
 	.4byte	.LVL1615
-	.4byte	0x4994
-	.uleb128 0x24
-	.4byte	.LVL1616
-	.4byte	0x17d1
-	.uleb128 0x24
+	.4byte	0x43ad
+	.uleb128 0x23
 	.4byte	.LVL1617
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL1618
-	.4byte	0x2c52
-	.uleb128 0x24
-	.4byte	.LVL1620
-	.4byte	0x5498
-	.uleb128 0x24
+	.4byte	0x543c
+	.uleb128 0x23
+	.4byte	.LVL1619
+	.4byte	0x543c
+	.uleb128 0x23
+	.4byte	.LVL1623
+	.4byte	0x2c58
+	.uleb128 0x23
 	.4byte	.LVL1624
-	.4byte	0x58be
-	.uleb128 0x24
+	.4byte	0x4234
+	.uleb128 0x23
 	.4byte	.LVL1625
-	.4byte	0x4400
-	.uleb128 0x24
-	.4byte	.LVL1627
-	.4byte	0x5498
-	.uleb128 0x24
-	.4byte	.LVL1629
-	.4byte	0x5498
-	.uleb128 0x24
-	.4byte	.LVL1633
-	.4byte	0x2c52
-	.uleb128 0x24
-	.4byte	.LVL1634
-	.4byte	0x424d
-	.uleb128 0x24
-	.4byte	.LVL1635
 	.4byte	0x3593
-	.uleb128 0x24
-	.4byte	.LVL1636
-	.4byte	0x2812
+	.uleb128 0x23
+	.4byte	.LVL1626
+	.4byte	0x2818
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF637
+	.4byte	.LASF635
 	.byte	0x3
 	.2byte	0x20f
-	.4byte	0x64
-	.4byte	.LFB149
-	.4byte	.LFE149-.LFB149
+	.4byte	0x62
+	.4byte	.LFB159
+	.4byte	.LFE159-.LFB159
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x55bf
+	.4byte	0x5563
 	.uleb128 0x43
-	.4byte	.LASF501
+	.4byte	.LASF500
 	.byte	0x3
 	.2byte	0x20f
-	.4byte	0x30c
+	.4byte	0x2ff
 	.4byte	.LLST96
 	.uleb128 0x43
-	.4byte	.LASF638
+	.4byte	.LASF636
 	.byte	0x3
 	.2byte	0x20f
-	.4byte	0x301
+	.4byte	0x2f4
 	.4byte	.LLST97
 	.uleb128 0x44
-	.4byte	.LASF633
+	.4byte	.LASF631
 	.byte	0x3
 	.2byte	0x211
-	.4byte	0x30c
+	.4byte	0x2ff
 	.4byte	.LLST98
 	.uleb128 0x3d
-	.4byte	.LASF358
+	.4byte	.LASF357
 	.byte	0x3
 	.2byte	0x211
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF377
+	.4byte	.LASF376
 	.byte	0x3
 	.2byte	0x212
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF179
+	.4byte	.LASF178
 	.byte	0x3
 	.2byte	0x212
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x44
-	.4byte	.LASF639
+	.4byte	.LASF637
 	.byte	0x3
 	.2byte	0x213
-	.4byte	0x30c
+	.4byte	0x2ff
 	.4byte	.LLST99
 	.uleb128 0x44
-	.4byte	.LASF640
+	.4byte	.LASF638
 	.byte	0x3
 	.2byte	0x214
-	.4byte	0x30c
+	.4byte	0x2ff
 	.4byte	.LLST100
 	.uleb128 0x44
-	.4byte	.LASF641
+	.4byte	.LASF639
 	.byte	0x3
 	.2byte	0x215
-	.4byte	0x30c
+	.4byte	0x2ff
 	.4byte	.LLST101
 	.uleb128 0x44
-	.4byte	.LASF642
+	.4byte	.LASF640
 	.byte	0x3
 	.2byte	0x216
-	.4byte	0x30c
+	.4byte	0x2ff
 	.4byte	.LLST102
 	.uleb128 0x47
-	.4byte	.LASF643
+	.4byte	.LASF641
 	.byte	0x3
 	.2byte	0x240
-	.4byte	.L488
-	.uleb128 0x24
-	.4byte	.LVL413
-	.4byte	0x195f
-	.uleb128 0x24
-	.4byte	.LVL423
-	.4byte	0x19f5
-	.uleb128 0x24
-	.4byte	.LVL434
-	.4byte	0x195f
-	.uleb128 0x24
-	.4byte	.LVL436
-	.4byte	0x45c2
-	.uleb128 0x24
-	.4byte	.LVL437
-	.4byte	0x55bf
-	.uleb128 0x24
-	.4byte	.LVL438
-	.4byte	0x4af7
-	.uleb128 0x24
+	.4byte	.L478
+	.uleb128 0x23
+	.4byte	.LVL419
+	.4byte	0x1954
+	.uleb128 0x23
+	.4byte	.LVL430
+	.4byte	0x19ea
+	.uleb128 0x23
+	.4byte	.LVL439
+	.4byte	0x1954
+	.uleb128 0x23
+	.4byte	.LVL441
+	.4byte	0x456f
+	.uleb128 0x23
+	.4byte	.LVL442
+	.4byte	0x5563
+	.uleb128 0x23
 	.4byte	.LVL443
-	.4byte	0x4b52
-	.uleb128 0x24
-	.4byte	.LVL446
-	.4byte	0x45c2
-	.uleb128 0x24
-	.4byte	.LVL447
-	.4byte	0x55bf
-	.uleb128 0x24
+	.4byte	0x4a9e
+	.uleb128 0x23
 	.4byte	.LVL448
-	.4byte	0x4af7
-	.uleb128 0x24
+	.4byte	0x4af9
+	.uleb128 0x23
+	.4byte	.LVL451
+	.4byte	0x456f
+	.uleb128 0x23
+	.4byte	.LVL452
+	.4byte	0x5563
+	.uleb128 0x23
 	.4byte	.LVL453
-	.4byte	0x4b52
-	.uleb128 0x24
-	.4byte	.LVL456
-	.4byte	0x4367
+	.4byte	0x4a9e
+	.uleb128 0x23
+	.4byte	.LVL458
+	.4byte	0x4af9
+	.uleb128 0x23
+	.4byte	.LVL461
+	.4byte	0x435a
 	.byte	0
 	.uleb128 0x3b
-	.4byte	.LASF644
+	.4byte	.LASF642
 	.byte	0x3
 	.2byte	0x201
-	.4byte	0x64
+	.4byte	0x62
 	.byte	0x1
-	.4byte	0x55e9
+	.4byte	0x558d
 	.uleb128 0x3c
-	.4byte	.LASF179
+	.4byte	.LASF178
 	.byte	0x3
 	.2byte	0x201
-	.4byte	0x30c
+	.4byte	0x2ff
 	.uleb128 0x3d
-	.4byte	.LASF645
+	.4byte	.LASF643
 	.byte	0x3
 	.2byte	0x203
-	.4byte	0x30c
+	.4byte	0x2ff
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF646
+	.4byte	.LASF644
 	.byte	0x3
 	.2byte	0x1ec
-	.4byte	0x64
-	.4byte	.LFB147
-	.4byte	.LFE147-.LFB147
+	.4byte	0x62
+	.4byte	.LFB157
+	.4byte	.LFE157-.LFB157
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x56e5
+	.4byte	0x5689
 	.uleb128 0x53
-	.4byte	0x17d1
-	.4byte	.LBB409
-	.4byte	.LBE409-.LBB409
+	.4byte	0x17c6
+	.4byte	.LBB431
+	.4byte	.LBE431-.LBB431
 	.byte	0x3
 	.2byte	0x1f9
-	.4byte	0x565d
+	.4byte	0x5601
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB410
-	.4byte	.LBE410-.LBB410
+	.4byte	.LBB432
+	.4byte	.LBE432-.LBB432
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB411
-	.4byte	.LBE411-.LBB411
+	.4byte	.LBB433
+	.4byte	.LBE433-.LBB433
 	.uleb128 0x30
-	.4byte	0x6134
+	.4byte	0x61fc
 	.uleb128 0x30
-	.4byte	0x6139
-	.uleb128 0x24
-	.4byte	.LVL771
-	.4byte	0x6732
+	.4byte	0x6201
+	.uleb128 0x23
+	.4byte	.LVL775
+	.4byte	0x67f9
 	.byte	0
 	.byte	0
 	.byte	0
 	.uleb128 0x53
-	.4byte	0x17d1
-	.4byte	.LBB412
-	.4byte	.LBE412-.LBB412
+	.4byte	0x17c6
+	.4byte	.LBB434
+	.4byte	.LBE434-.LBB434
 	.byte	0x3
 	.2byte	0x1fa
-	.4byte	0x56b7
+	.4byte	0x565b
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB413
-	.4byte	.LBE413-.LBB413
+	.4byte	.LBB435
+	.4byte	.LBE435-.LBB435
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB414
-	.4byte	.LBE414-.LBB414
+	.4byte	.LBB436
+	.4byte	.LBE436-.LBB436
 	.uleb128 0x30
-	.4byte	0x6134
+	.4byte	0x61fc
 	.uleb128 0x30
-	.4byte	0x6139
-	.uleb128 0x24
-	.4byte	.LVL772
-	.4byte	0x6732
+	.4byte	0x6201
+	.uleb128 0x23
+	.4byte	.LVL776
+	.4byte	0x67f9
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL768
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL769
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL770
-	.4byte	0x17d1
-	.uleb128 0x24
+	.uleb128 0x23
+	.4byte	.LVL772
+	.4byte	0x17c6
+	.uleb128 0x23
 	.4byte	.LVL773
-	.4byte	0x231c
-	.uleb128 0x24
+	.4byte	0x17c6
+	.uleb128 0x23
 	.4byte	.LVL774
-	.4byte	0x31c5
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL777
+	.4byte	0x2312
+	.uleb128 0x23
+	.4byte	.LVL778
+	.4byte	0x31c7
 	.byte	0
 	.uleb128 0x3a
-	.4byte	.LASF647
+	.4byte	.LASF645
 	.byte	0x3
 	.2byte	0x116
-	.4byte	0x64
-	.4byte	.LFB146
-	.4byte	.LFE146-.LFB146
+	.4byte	0x62
+	.4byte	.LFB156
+	.4byte	.LFE156-.LFB156
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x586d
+	.4byte	0x5811
 	.uleb128 0x51
 	.ascii	"i\000"
 	.byte	0x3
 	.2byte	0x118
-	.4byte	0x317
-	.4byte	.LLST110
+	.4byte	0x30a
+	.4byte	.LLST111
 	.uleb128 0x3d
-	.4byte	.LASF648
+	.4byte	.LASF646
 	.byte	0x3
 	.2byte	0x119
-	.4byte	0x317
+	.4byte	0x30a
 	.uleb128 0x37
-	.4byte	.LASF363
-	.4byte	0x48ed
+	.4byte	.LASF362
+	.4byte	0x4898
 	.uleb128 0x5
 	.byte	0x3
-	.4byte	__func__.6317
-	.uleb128 0x24
-	.4byte	.LVL479
-	.4byte	0x6748
-	.uleb128 0x24
-	.4byte	.LVL480
-	.4byte	0x6748
-	.uleb128 0x24
-	.4byte	.LVL481
-	.4byte	0x6748
-	.uleb128 0x24
-	.4byte	.LVL482
-	.4byte	0x6748
-	.uleb128 0x24
-	.4byte	.LVL483
-	.4byte	0x6748
-	.uleb128 0x24
-	.4byte	.LVL484
-	.4byte	0x6748
-	.uleb128 0x24
-	.4byte	.LVL485
-	.4byte	0x6748
-	.uleb128 0x24
-	.4byte	.LVL486
-	.4byte	0x6748
-	.uleb128 0x24
-	.4byte	.LVL487
-	.4byte	0x6748
-	.uleb128 0x24
-	.4byte	.LVL488
-	.4byte	0x6748
-	.uleb128 0x24
-	.4byte	.LVL489
-	.4byte	0x6748
-	.uleb128 0x24
-	.4byte	.LVL490
-	.4byte	0x6748
-	.uleb128 0x24
-	.4byte	.LVL491
-	.4byte	0x6748
-	.uleb128 0x24
-	.4byte	.LVL492
-	.4byte	0x6748
-	.uleb128 0x24
-	.4byte	.LVL493
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	__func__.3490
+	.uleb128 0x23
 	.4byte	.LVL494
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL495
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL496
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL497
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL498
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL499
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL500
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL501
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL502
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL503
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL504
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL505
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL506
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL507
-	.4byte	0x17d1
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL508
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL509
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL510
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL511
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL512
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL513
-	.4byte	0x6748
-	.uleb128 0x24
+	.4byte	0x680f
+	.uleb128 0x23
+	.4byte	.LVL514
+	.4byte	0x680f
+	.uleb128 0x23
+	.4byte	.LVL515
+	.4byte	0x680f
+	.uleb128 0x23
 	.4byte	.LVL516
-	.4byte	0x6727
+	.4byte	0x680f
+	.uleb128 0x23
+	.4byte	.LVL517
+	.4byte	0x680f
+	.uleb128 0x23
+	.4byte	.LVL518
+	.4byte	0x680f
+	.uleb128 0x23
+	.4byte	.LVL519
+	.4byte	0x680f
+	.uleb128 0x23
+	.4byte	.LVL520
+	.4byte	0x680f
+	.uleb128 0x23
+	.4byte	.LVL521
+	.4byte	0x680f
+	.uleb128 0x23
+	.4byte	.LVL522
+	.4byte	0x17c6
+	.uleb128 0x23
+	.4byte	.LVL523
+	.4byte	0x680f
+	.uleb128 0x23
+	.4byte	.LVL524
+	.4byte	0x680f
+	.uleb128 0x23
+	.4byte	.LVL525
+	.4byte	0x680f
+	.uleb128 0x23
+	.4byte	.LVL526
+	.4byte	0x680f
+	.uleb128 0x23
+	.4byte	.LVL527
+	.4byte	0x680f
+	.uleb128 0x23
+	.4byte	.LVL528
+	.4byte	0x680f
+	.uleb128 0x23
+	.4byte	.LVL531
+	.4byte	0x67ee
 	.byte	0
 	.uleb128 0x2a
-	.4byte	.LASF649
+	.4byte	.LASF647
 	.byte	0x3
 	.byte	0xb6
-	.4byte	0x64
-	.4byte	.LFB145
-	.4byte	.LFE145-.LFB145
+	.4byte	0x62
+	.4byte	.LFB155
+	.4byte	.LFE155-.LFB155
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x58be
-	.uleb128 0x23
-	.4byte	.LASF630
+	.4byte	0x5862
+	.uleb128 0x22
+	.4byte	.LASF628
 	.byte	0x3
 	.byte	0xb6
-	.4byte	0x5399
+	.4byte	0x533d
 	.4byte	.LLST11
 	.uleb128 0x49
 	.ascii	"i\000"
 	.byte	0x3
 	.byte	0xb8
-	.4byte	0x317
+	.4byte	0x30a
 	.4byte	.LLST12
-	.uleb128 0x24
+	.uleb128 0x23
 	.4byte	.LVL27
-	.4byte	0x58ff
-	.uleb128 0x24
+	.4byte	0x58a3
+	.uleb128 0x23
 	.4byte	.LVL28
-	.4byte	0x58ff
-	.uleb128 0x24
+	.4byte	0x58a3
+	.uleb128 0x23
 	.4byte	.LVL32
-	.4byte	0x58be
+	.4byte	0x5862
 	.byte	0
-	.uleb128 0x22
-	.4byte	.LASF650
+	.uleb128 0x21
+	.4byte	.LASF648
 	.byte	0x3
 	.byte	0xa4
-	.4byte	0x64
-	.4byte	.LFB144
-	.4byte	.LFE144-.LFB144
+	.4byte	0x62
+	.4byte	.LFB154
+	.4byte	.LFE154-.LFB154
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x58e7
-	.uleb128 0x23
-	.4byte	.LASF651
+	.4byte	0x588b
+	.uleb128 0x22
+	.4byte	.LASF649
 	.byte	0x3
 	.byte	0xa4
-	.4byte	0x30c
+	.4byte	0x2ff
 	.4byte	.LLST10
 	.byte	0
 	.uleb128 0x57
-	.4byte	.LASF652
+	.4byte	.LASF650
 	.byte	0x3
 	.byte	0x9e
 	.byte	0x1
-	.4byte	0x58ff
+	.4byte	0x58a3
 	.uleb128 0x33
-	.4byte	.LASF653
+	.4byte	.LASF651
 	.byte	0x3
 	.byte	0x9e
-	.4byte	0x317
+	.4byte	0x30a
 	.byte	0
-	.uleb128 0x22
-	.4byte	.LASF654
+	.uleb128 0x21
+	.4byte	.LASF652
 	.byte	0x3
-	.byte	0x7f
-	.4byte	0x30c
-	.4byte	.LFB142
-	.4byte	.LFE142-.LFB142
+	.byte	0x7e
+	.4byte	0x2ff
+	.4byte	.LFB152
+	.4byte	.LFE152-.LFB152
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x593e
+	.4byte	0x58e2
 	.uleb128 0x2b
 	.ascii	"num\000"
 	.byte	0x3
-	.byte	0x7f
-	.4byte	0x317
+	.byte	0x7e
+	.4byte	0x30a
 	.4byte	.LLST9
 	.uleb128 0x29
 	.ascii	"i\000"
 	.byte	0x3
-	.byte	0x81
-	.4byte	0x30c
-	.uleb128 0x20
-	.4byte	.LASF655
+	.byte	0x80
+	.4byte	0x2ff
+	.uleb128 0x1f
+	.4byte	.LASF653
 	.byte	0x3
-	.byte	0x82
-	.4byte	0x317
+	.byte	0x81
+	.4byte	0x30a
 	.uleb128 0x1
 	.byte	0x52
 	.byte	0
-	.uleb128 0x22
-	.4byte	.LASF656
+	.uleb128 0x21
+	.4byte	.LASF654
 	.byte	0x3
-	.byte	0x71
-	.4byte	0x64
-	.4byte	.LFB141
-	.4byte	.LFE141-.LFB141
+	.byte	0x70
+	.4byte	0x62
+	.4byte	.LFB151
+	.4byte	.LFE151-.LFB151
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x5984
-	.uleb128 0x23
-	.4byte	.LASF86
+	.4byte	0x5928
+	.uleb128 0x22
+	.4byte	.LASF85
 	.byte	0x3
-	.byte	0x71
-	.4byte	0xb6
-	.4byte	.LLST63
+	.byte	0x70
+	.4byte	0xb4
+	.4byte	.LLST61
 	.uleb128 0x29
 	.ascii	"buf\000"
 	.byte	0x3
-	.byte	0x73
-	.4byte	0xb6
-	.uleb128 0x24
-	.4byte	.LVL282
-	.4byte	0x6753
-	.uleb128 0x24
-	.4byte	.LVL283
-	.4byte	0x5984
+	.byte	0x72
+	.4byte	0xb4
+	.uleb128 0x23
+	.4byte	.LVL276
+	.4byte	0x681a
+	.uleb128 0x23
+	.4byte	.LVL277
+	.4byte	0x5928
 	.byte	0
-	.uleb128 0x22
-	.4byte	.LASF657
+	.uleb128 0x21
+	.4byte	.LASF655
 	.byte	0x3
 	.byte	0xa
-	.4byte	0x64
-	.4byte	.LFB140
-	.4byte	.LFE140-.LFB140
+	.4byte	0x62
+	.4byte	.LFB150
+	.4byte	.LFE150-.LFB150
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x5c7a
-	.uleb128 0x23
-	.4byte	.LASF86
+	.4byte	0x5c1e
+	.uleb128 0x22
+	.4byte	.LASF85
 	.byte	0x3
 	.byte	0xa
-	.4byte	0xb6
-	.4byte	.LLST60
+	.4byte	0xb4
+	.4byte	.LLST58
 	.uleb128 0x29
 	.ascii	"i\000"
 	.byte	0x3
 	.byte	0xc
-	.4byte	0x64
+	.4byte	0x62
 	.uleb128 0x29
 	.ascii	"buf\000"
 	.byte	0x3
 	.byte	0xd
-	.4byte	0xb6
+	.4byte	0xb4
 	.uleb128 0x52
-	.4byte	.LBB282
-	.4byte	.LBE282-.LBB282
-	.4byte	0x59ef
+	.4byte	.LBB285
+	.4byte	.LBE285-.LBB285
+	.4byte	0x5993
 	.uleb128 0x2c
-	.4byte	.LASF393
+	.4byte	.LASF392
 	.byte	0x3
-	.byte	0x57
-	.4byte	0x30c
-	.4byte	.LLST61
-	.uleb128 0x24
-	.4byte	.LVL273
+	.byte	0x56
+	.4byte	0x2ff
+	.4byte	.LLST59
+	.uleb128 0x23
+	.4byte	.LVL267
 	.4byte	0x3fa5
-	.uleb128 0x24
-	.4byte	.LVL275
-	.4byte	0x6753
+	.uleb128 0x23
+	.4byte	.LVL269
+	.4byte	0x681a
 	.byte	0
 	.uleb128 0x52
-	.4byte	.LBB283
-	.4byte	.LBE283-.LBB283
-	.4byte	0x5a15
+	.4byte	.LBB286
+	.4byte	.LBE286-.LBB286
+	.4byte	0x59b9
 	.uleb128 0x2c
-	.4byte	.LASF393
+	.4byte	.LASF392
 	.byte	0x3
-	.byte	0x60
-	.4byte	0x30c
-	.4byte	.LLST62
-	.uleb128 0x24
-	.4byte	.LVL279
-	.4byte	0x6753
+	.byte	0x5f
+	.4byte	0x2ff
+	.4byte	.LLST60
+	.uleb128 0x23
+	.4byte	.LVL273
+	.4byte	0x681a
 	.byte	0
-	.uleb128 0x24
+	.uleb128 0x23
+	.4byte	.LVL197
+	.4byte	0x6826
+	.uleb128 0x23
+	.4byte	.LVL198
+	.4byte	0x681a
+	.uleb128 0x23
+	.4byte	.LVL199
+	.4byte	0x6826
+	.uleb128 0x23
+	.4byte	.LVL200
+	.4byte	0x681a
+	.uleb128 0x23
+	.4byte	.LVL201
+	.4byte	0x681a
+	.uleb128 0x23
+	.4byte	.LVL202
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL203
-	.4byte	0x675f
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL204
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL205
-	.4byte	0x675f
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL206
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL207
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL208
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL209
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL210
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL211
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL212
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL213
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL214
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL215
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL216
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL217
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL218
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL219
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL220
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL221
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL222
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL223
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL224
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL225
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL226
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL227
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL228
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL229
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL230
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL231
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL232
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL233
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL234
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL235
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL236
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL237
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL238
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL239
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL240
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL241
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL242
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL243
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL244
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL245
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL246
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL247
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL248
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL249
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL250
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL251
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL252
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL253
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL254
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL255
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL256
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL257
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL258
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL259
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL260
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x278e
+	.uleb128 0x23
 	.4byte	.LVL261
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL262
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x273f
+	.uleb128 0x23
 	.4byte	.LVL263
-	.4byte	0x6753
-	.uleb128 0x24
-	.4byte	.LVL264
-	.4byte	0x6753
-	.uleb128 0x24
-	.4byte	.LVL265
-	.4byte	0x6753
-	.uleb128 0x24
+	.4byte	0x681a
+	.uleb128 0x23
 	.4byte	.LVL266
-	.4byte	0x2788
-	.uleb128 0x24
-	.4byte	.LVL267
-	.4byte	0x6753
-	.uleb128 0x24
-	.4byte	.LVL268
-	.4byte	0x2739
-	.uleb128 0x24
-	.4byte	.LVL269
-	.4byte	0x6753
-	.uleb128 0x24
-	.4byte	.LVL272
-	.4byte	0x6753
+	.4byte	0x681a
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x3414
-	.4byte	.LFB276
-	.4byte	.LFE276-.LFB276
+	.uleb128 0x5f
+	.4byte	0x3416
+	.4byte	.LFB286
+	.4byte	.LFE286-.LFB286
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x5c9c
-	.uleb128 0x5f
-	.4byte	0x3421
+	.4byte	0x5c40
+	.uleb128 0x60
+	.4byte	0x3423
 	.4byte	.LLST8
 	.uleb128 0x2e
-	.4byte	0x342d
+	.4byte	0x342f
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x58e7
-	.4byte	.LFB143
-	.4byte	.LFE143-.LFB143
+	.uleb128 0x5f
+	.4byte	0x588b
+	.4byte	.LFB153
+	.4byte	.LFE153-.LFB153
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x5cb7
-	.uleb128 0x60
-	.4byte	0x58f3
+	.4byte	0x5c5b
+	.uleb128 0x61
+	.4byte	0x5897
 	.uleb128 0x1
 	.byte	0x50
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x55bf
-	.4byte	.LFB148
-	.4byte	.LFE148-.LFB148
+	.uleb128 0x5f
+	.4byte	0x5563
+	.4byte	.LFB158
+	.4byte	.LFE158-.LFB158
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5c93
+	.uleb128 0x60
+	.4byte	0x5574
+	.4byte	.LLST13
+	.uleb128 0x30
+	.4byte	0x5580
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0
+	.uleb128 0x2e
+	.4byte	0x5574
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0
+	.uleb128 0x30
+	.4byte	0x5c77
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x62
+	.4byte	0x4a96
+	.4byte	.LFB174
+	.4byte	.LFE174-.LFB174
+	.uleb128 0x1
+	.byte	0x9c
+	.uleb128 0x62
+	.4byte	0x43a1
+	.4byte	.LFB188
+	.4byte	.LFE188-.LFB188
+	.uleb128 0x1
+	.byte	0x9c
+	.uleb128 0x62
+	.4byte	0x4395
+	.4byte	.LFB189
+	.4byte	.LFE189-.LFB189
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x5cef
 	.uleb128 0x5f
-	.4byte	0x55d0
-	.4byte	.LLST13
+	.4byte	0x4175
+	.4byte	.LFB196
+	.4byte	.LFE196-.LFB196
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5d5a
+	.uleb128 0x60
+	.4byte	0x4185
+	.4byte	.LLST26
 	.uleb128 0x30
-	.4byte	0x55dc
+	.4byte	0x4190
+	.uleb128 0x30
+	.4byte	0x419b
+	.uleb128 0x30
+	.4byte	0x41a6
+	.uleb128 0x30
+	.4byte	0x41b1
+	.uleb128 0x30
+	.4byte	0x41bc
+	.uleb128 0x30
+	.4byte	0x41c7
+	.uleb128 0x30
+	.4byte	0x41d2
+	.uleb128 0x30
+	.4byte	0x41dd
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0
+	.4byte	.Ldebug_ranges0+0x70
 	.uleb128 0x2e
-	.4byte	0x55d0
+	.4byte	0x4185
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0
+	.4byte	.Ldebug_ranges0+0x70
+	.uleb128 0x63
+	.4byte	0x5cdc
+	.4byte	.LLST27
+	.uleb128 0x63
+	.4byte	0x5ce1
+	.4byte	.LLST28
+	.uleb128 0x63
+	.4byte	0x5ce6
+	.4byte	.LLST29
+	.uleb128 0x63
+	.4byte	0x5ceb
+	.4byte	.LLST30
+	.uleb128 0x63
+	.4byte	0x5cf0
+	.4byte	.LLST31
+	.uleb128 0x63
+	.4byte	0x5cf5
+	.4byte	.LLST32
 	.uleb128 0x30
-	.4byte	0x5cd3
+	.4byte	0x5cfa
+	.uleb128 0x63
+	.4byte	0x5cff
+	.4byte	.LLST33
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x61
-	.4byte	0x4aef
-	.4byte	.LFB164
-	.4byte	.LFE164-.LFB164
-	.uleb128 0x1
-	.byte	0x9c
-	.uleb128 0x61
-	.4byte	0x43f4
-	.4byte	.LFB178
-	.4byte	.LFE178-.LFB178
-	.uleb128 0x1
-	.byte	0x9c
-	.uleb128 0x61
-	.4byte	0x43e8
-	.4byte	.LFB179
-	.4byte	.LFE179-.LFB179
-	.uleb128 0x1
-	.byte	0x9c
-	.uleb128 0x5e
-	.4byte	0x4203
-	.4byte	.LFB185
-	.4byte	.LFE185-.LFB185
+	.uleb128 0x5f
+	.4byte	0x41ea
+	.4byte	.LFB195
+	.4byte	.LFE195-.LFB195
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x5d72
-	.uleb128 0x5f
-	.4byte	0x420f
-	.4byte	.LLST36
+	.4byte	0x5db0
+	.uleb128 0x60
+	.4byte	0x41f6
+	.4byte	.LLST34
 	.uleb128 0x30
-	.4byte	0x421a
+	.4byte	0x4201
 	.uleb128 0x52
-	.4byte	.LBB258
-	.4byte	.LBE258-.LBB258
-	.4byte	0x5d68
+	.4byte	.LBB265
+	.4byte	.LBE265-.LBB265
+	.4byte	0x5da6
 	.uleb128 0x2e
-	.4byte	0x420f
+	.4byte	0x41f6
 	.uleb128 0x32
-	.4byte	.LBB259
-	.4byte	.LBE259-.LBB259
+	.4byte	.LBB266
+	.4byte	.LBE266-.LBB266
 	.uleb128 0x30
-	.4byte	0x5d38
-	.uleb128 0x24
-	.4byte	.LVL115
-	.4byte	0x6727
+	.4byte	0x5d76
+	.uleb128 0x23
+	.4byte	.LVL112
+	.4byte	0x67ee
 	.byte	0
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL114
-	.4byte	0x4177
+	.uleb128 0x23
+	.4byte	.LVL111
+	.4byte	0x4175
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x4228
-	.4byte	.LFB184
-	.4byte	.LFE184-.LFB184
+	.uleb128 0x5f
+	.4byte	0x420f
+	.4byte	.LFB194
+	.4byte	.LFE194-.LFB194
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x5dc8
-	.uleb128 0x5f
-	.4byte	0x4234
-	.4byte	.LLST39
+	.4byte	0x5e06
+	.uleb128 0x60
+	.4byte	0x421b
+	.4byte	.LLST36
 	.uleb128 0x30
-	.4byte	0x423f
+	.4byte	0x4226
 	.uleb128 0x52
-	.4byte	.LBB262
-	.4byte	.LBE262-.LBB262
-	.4byte	0x5dbe
+	.4byte	.LBB269
+	.4byte	.LBE269-.LBB269
+	.4byte	0x5dfc
 	.uleb128 0x2e
-	.4byte	0x4234
+	.4byte	0x421b
 	.uleb128 0x32
-	.4byte	.LBB263
-	.4byte	.LBE263-.LBB263
+	.4byte	.LBB270
+	.4byte	.LBE270-.LBB270
 	.uleb128 0x30
-	.4byte	0x5d8e
-	.uleb128 0x24
-	.4byte	.LVL127
-	.4byte	0x6727
+	.4byte	0x5dcc
+	.uleb128 0x23
+	.4byte	.LVL122
+	.4byte	0x67ee
 	.byte	0
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL126
+	.uleb128 0x23
+	.4byte	.LVL121
 	.4byte	0x4108
 	.byte	0
-	.uleb128 0x5e
+	.uleb128 0x5f
 	.4byte	0x3f26
-	.4byte	.LFB192
-	.4byte	.LFE192-.LFB192
+	.4byte	.LFB202
+	.4byte	.LFE202-.LFB202
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x5e7a
-	.uleb128 0x5f
+	.4byte	0x5ec0
+	.uleb128 0x60
 	.4byte	0x3f37
-	.4byte	.LLST48
+	.4byte	.LLST45
 	.uleb128 0x30
 	.4byte	0x3f43
 	.uleb128 0x30
@@ -36397,916 +35145,967 @@ check_vpc_table:
 	.uleb128 0x30
 	.4byte	0x3f97
 	.uleb128 0x32
-	.4byte	.LBB266
-	.4byte	.LBE266-.LBB266
+	.4byte	.LBB273
+	.4byte	.LBE273-.LBB273
 	.uleb128 0x2e
 	.4byte	0x3f37
 	.uleb128 0x32
-	.4byte	.LBB267
-	.4byte	.LBE267-.LBB267
+	.4byte	.LBB274
+	.4byte	.LBE274-.LBB274
 	.uleb128 0x30
-	.4byte	0x5de4
-	.uleb128 0x30
-	.4byte	0x5de9
-	.uleb128 0x62
-	.4byte	0x5dee
+	.4byte	0x5e22
+	.uleb128 0x63
+	.4byte	0x5e27
+	.4byte	.LLST46
+	.uleb128 0x64
+	.4byte	0x5e2c
 	.uleb128 0x1
 	.byte	0x56
-	.uleb128 0x30
-	.4byte	0x5df3
 	.uleb128 0x63
-	.4byte	0x5df8
-	.4byte	.LLST49
-	.uleb128 0x62
-	.4byte	0x5dfd
+	.4byte	0x5e31
+	.4byte	.LLST47
+	.uleb128 0x63
+	.4byte	0x5e36
+	.4byte	.LLST48
+	.uleb128 0x64
+	.4byte	0x5e3b
 	.uleb128 0x1
 	.byte	0x57
 	.uleb128 0x30
-	.4byte	0x5e02
+	.4byte	0x5e40
 	.uleb128 0x30
-	.4byte	0x5e07
-	.uleb128 0x24
-	.4byte	.LVL160
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	0x5e45
+	.uleb128 0x23
+	.4byte	.LVL158
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL162
 	.4byte	0x4086
-	.uleb128 0x24
+	.uleb128 0x23
 	.4byte	.LVL163
-	.4byte	0x6727
-	.uleb128 0x24
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL164
-	.4byte	0x4203
+	.4byte	0x41ea
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x3d76
-	.4byte	.LFB195
-	.4byte	.LFE195-.LFB195
-	.uleb128 0x1
-	.byte	0x9c
-	.4byte	0x5ee6
 	.uleb128 0x5f
-	.4byte	0x3d87
-	.4byte	.LLST50
-	.uleb128 0x62
-	.4byte	0x3d93
-	.uleb128 0x1
-	.byte	0x55
-	.uleb128 0x30
-	.4byte	0x3d9f
-	.uleb128 0x30
-	.4byte	0x3dab
-	.uleb128 0x52
-	.4byte	.LBB270
-	.4byte	.LBE270-.LBB270
-	.4byte	0x5edc
-	.uleb128 0x2e
-	.4byte	0x3d87
-	.uleb128 0x32
-	.4byte	.LBB271
-	.4byte	.LBE271-.LBB271
-	.uleb128 0x30
-	.4byte	0x5e96
-	.uleb128 0x30
-	.4byte	0x5e9d
-	.uleb128 0x30
-	.4byte	0x5ea2
-	.uleb128 0x24
-	.4byte	.LVL167
-	.4byte	0x6727
-	.byte	0
-	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL168
-	.4byte	0x424d
-	.byte	0
-	.uleb128 0x5e
-	.4byte	0x3710
-	.4byte	.LFB206
-	.4byte	.LFE206-.LFB206
+	.4byte	0x3712
+	.4byte	.LFB216
+	.4byte	.LFE216-.LFB216
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x5f1e
-	.uleb128 0x5f
-	.4byte	0x371d
-	.4byte	.LLST51
+	.4byte	0x5ef8
+	.uleb128 0x60
+	.4byte	0x371f
+	.4byte	.LLST49
 	.uleb128 0x30
-	.4byte	0x3729
+	.4byte	0x372b
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0x70
+	.4byte	.Ldebug_ranges0+0x88
 	.uleb128 0x2e
-	.4byte	0x371d
+	.4byte	0x371f
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0x70
+	.4byte	.Ldebug_ranges0+0x88
 	.uleb128 0x30
-	.4byte	0x5f02
+	.4byte	0x5edc
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x3414
-	.4byte	.LFB212
-	.4byte	.LFE212-.LFB212
-	.uleb128 0x1
-	.byte	0x9c
-	.4byte	0x5f4d
 	.uleb128 0x5f
-	.4byte	0x3421
-	.4byte	.LLST52
-	.uleb128 0x5f
-	.4byte	0x342d
-	.4byte	.LLST53
-	.uleb128 0x24
-	.4byte	.LVL173
-	.4byte	0x5c7a
-	.byte	0
-	.uleb128 0x5e
-	.4byte	0x2d0e
+	.4byte	0x3416
 	.4byte	.LFB222
 	.4byte	.LFE222-.LFB222
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x5f8d
+	.4byte	0x5f27
+	.uleb128 0x60
+	.4byte	0x3423
+	.4byte	.LLST50
 	.uleb128 0x60
-	.4byte	0x2d1b
+	.4byte	0x342f
+	.4byte	.LLST51
+	.uleb128 0x23
+	.4byte	.LVL170
+	.4byte	0x5c1e
+	.byte	0
+	.uleb128 0x5f
+	.4byte	0x2d14
+	.4byte	.LFB232
+	.4byte	.LFE232-.LFB232
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5f67
+	.uleb128 0x61
+	.4byte	0x2d21
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x30
-	.4byte	0x2d27
+	.4byte	0x2d2d
 	.uleb128 0x32
-	.4byte	.LBB280
-	.4byte	.LBE280-.LBB280
+	.4byte	.LBB283
+	.4byte	.LBE283-.LBB283
 	.uleb128 0x2e
-	.4byte	0x2d1b
+	.4byte	0x2d21
 	.uleb128 0x32
-	.4byte	.LBB281
-	.4byte	.LBE281-.LBB281
-	.uleb128 0x62
-	.4byte	0x5f67
+	.4byte	.LBB284
+	.4byte	.LBE284-.LBB284
+	.uleb128 0x64
+	.4byte	0x5f41
 	.uleb128 0x1
 	.byte	0x51
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x2681
-	.4byte	.LFB237
-	.4byte	.LFE237-.LFB237
+	.uleb128 0x5f
+	.4byte	0x2677
+	.4byte	.LFB247
+	.4byte	.LFE247-.LFB247
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5f9c
+	.uleb128 0x60
+	.4byte	0x2688
+	.4byte	.LLST67
+	.uleb128 0x32
+	.4byte	.LBB289
+	.4byte	.LBE289-.LBB289
+	.uleb128 0x2e
+	.4byte	0x2688
+	.uleb128 0x23
+	.4byte	.LVL303
+	.4byte	0x420f
+	.byte	0
+	.byte	0
+	.uleb128 0x5f
+	.4byte	0x1e07
+	.4byte	.LFB266
+	.4byte	.LFE266-.LFB266
 	.uleb128 0x1
 	.byte	0x9c
 	.4byte	0x5fc2
+	.uleb128 0x23
+	.4byte	.LVL336
+	.4byte	0x4507
+	.uleb128 0x23
+	.4byte	.LVL337
+	.4byte	0x1e70
+	.byte	0
 	.uleb128 0x5f
-	.4byte	0x2692
-	.4byte	.LLST68
+	.4byte	0x435a
+	.4byte	.LFB190
+	.4byte	.LFE190-.LFB190
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x603b
+	.uleb128 0x60
+	.4byte	0x4366
+	.4byte	.LLST94
+	.uleb128 0x60
+	.4byte	0x4371
+	.4byte	.LLST95
+	.uleb128 0x65
+	.4byte	0x4395
+	.4byte	.LBB308
+	.4byte	.LBE308-.LBB308
+	.byte	0x2
+	.byte	0x65
 	.uleb128 0x32
-	.4byte	.LBB286
-	.4byte	.LBE286-.LBB286
+	.4byte	.LBB310
+	.4byte	.LBE310-.LBB310
 	.uleb128 0x2e
-	.4byte	0x2692
-	.uleb128 0x24
-	.4byte	.LVL304
-	.4byte	0x4228
+	.4byte	0x4371
+	.uleb128 0x2e
+	.4byte	0x4366
+	.uleb128 0x32
+	.4byte	.LBB311
+	.4byte	.LBE311-.LBB311
+	.uleb128 0x30
+	.4byte	0x437d
+	.uleb128 0x32
+	.4byte	.LBB312
+	.4byte	.LBE312-.LBB312
+	.uleb128 0x30
+	.4byte	0x4387
+	.uleb128 0x23
+	.4byte	.LVL409
+	.4byte	0x4507
+	.uleb128 0x23
+	.4byte	.LVL410
+	.4byte	0x1954
 	.byte	0
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x1e11
-	.4byte	.LFB256
-	.4byte	.LFE256-.LFB256
+	.byte	0
+	.byte	0
+	.uleb128 0x5f
+	.4byte	0x3d76
+	.4byte	.LFB205
+	.4byte	.LFE205-.LFB205
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x5fe8
-	.uleb128 0x24
-	.4byte	.LVL338
-	.4byte	0x455a
-	.uleb128 0x24
-	.4byte	.LVL339
-	.4byte	0x1e7a
+	.4byte	0x60b0
+	.uleb128 0x60
+	.4byte	0x3d87
+	.4byte	.LLST103
+	.uleb128 0x64
+	.4byte	0x3d93
+	.uleb128 0x1
+	.byte	0x55
+	.uleb128 0x30
+	.4byte	0x3d9f
+	.uleb128 0x30
+	.4byte	0x3dab
+	.uleb128 0x52
+	.4byte	.LBB321
+	.4byte	.LBE321-.LBB321
+	.4byte	0x609d
+	.uleb128 0x2e
+	.4byte	0x3d87
+	.uleb128 0x32
+	.4byte	.LBB322
+	.4byte	.LBE322-.LBB322
+	.uleb128 0x30
+	.4byte	0x6057
+	.uleb128 0x30
+	.4byte	0x605e
+	.uleb128 0x30
+	.4byte	0x6063
+	.uleb128 0x23
+	.4byte	.LVL471
+	.4byte	0x67ee
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x190b
-	.4byte	.LFB265
-	.4byte	.LFE265-.LFB265
+	.byte	0
+	.uleb128 0x23
+	.4byte	.LVL468
+	.4byte	0x4234
+	.uleb128 0x23
+	.4byte	.LVL469
+	.4byte	0x67ee
+	.byte	0
+	.uleb128 0x5f
+	.4byte	0x1900
+	.4byte	.LFB275
+	.4byte	.LFE275-.LFB275
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x60fd
-	.uleb128 0x5f
+	.4byte	0x61c5
+	.uleb128 0x60
+	.4byte	0x1910
+	.4byte	.LLST104
+	.uleb128 0x30
 	.4byte	0x191b
-	.4byte	.LLST103
 	.uleb128 0x30
 	.4byte	0x1926
 	.uleb128 0x30
 	.4byte	0x1931
-	.uleb128 0x30
-	.4byte	0x193c
 	.uleb128 0x32
-	.4byte	.LBB313
-	.4byte	.LBE313-.LBB313
+	.4byte	.LBB335
+	.4byte	.LBE335-.LBB335
 	.uleb128 0x2e
-	.4byte	0x191b
+	.4byte	0x1910
 	.uleb128 0x32
-	.4byte	.LBB314
-	.4byte	.LBE314-.LBB314
+	.4byte	.LBB336
+	.4byte	.LBE336-.LBB336
 	.uleb128 0x30
-	.4byte	0x6004
-	.uleb128 0x62
-	.4byte	0x6009
+	.4byte	0x60cc
+	.uleb128 0x64
+	.4byte	0x60d1
 	.uleb128 0x3
 	.byte	0x91
 	.sleb128 -88
-	.uleb128 0x62
-	.4byte	0x600e
+	.uleb128 0x64
+	.4byte	0x60d6
 	.uleb128 0x3
 	.byte	0x91
 	.sleb128 -108
-	.uleb128 0x64
-	.4byte	0x1947
+	.uleb128 0x66
+	.4byte	0x193c
 	.uleb128 0x2d
-	.4byte	0x17d1
-	.4byte	.LBB315
-	.4byte	.Ldebug_ranges0+0xa8
+	.4byte	0x17c6
+	.4byte	.LBB337
+	.4byte	.Ldebug_ranges0+0xf0
 	.byte	0x1
 	.byte	0xa7
-	.4byte	0x6097
+	.4byte	0x615f
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0xa8
+	.4byte	.Ldebug_ranges0+0xf0
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0xa8
+	.4byte	.Ldebug_ranges0+0xf0
 	.uleb128 0x30
-	.4byte	0x17fd
+	.4byte	0x17f2
 	.uleb128 0x30
-	.4byte	0x1808
-	.uleb128 0x24
-	.4byte	.LVL461
-	.4byte	0x671c
+	.4byte	0x17fd
+	.uleb128 0x23
+	.4byte	.LVL477
+	.4byte	0x67e3
 	.byte	0
 	.byte	0
 	.byte	0
 	.uleb128 0x2d
-	.4byte	0x17d1
-	.4byte	.LBB321
-	.4byte	.Ldebug_ranges0+0xc0
+	.4byte	0x17c6
+	.4byte	.LBB343
+	.4byte	.Ldebug_ranges0+0x108
 	.byte	0x1
 	.byte	0xa8
-	.4byte	0x60df
+	.4byte	0x61a7
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0xc0
+	.4byte	.Ldebug_ranges0+0x108
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0xc0
+	.4byte	.Ldebug_ranges0+0x108
 	.uleb128 0x30
-	.4byte	0x17fd
+	.4byte	0x17f2
 	.uleb128 0x30
-	.4byte	0x1808
+	.4byte	0x17fd
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL462
-	.4byte	0x195f
-	.uleb128 0x24
-	.4byte	.LVL463
-	.4byte	0x19f5
-	.uleb128 0x24
-	.4byte	.LVL464
-	.4byte	0x195f
+	.uleb128 0x23
+	.4byte	.LVL478
+	.4byte	0x1954
+	.uleb128 0x23
+	.4byte	.LVL479
+	.4byte	0x19ea
+	.uleb128 0x23
+	.4byte	.LVL480
+	.4byte	0x1954
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x17d1
-	.4byte	.LFB267
-	.4byte	.LFE267-.LFB267
+	.uleb128 0x5f
+	.4byte	0x17c6
+	.4byte	.LFB277
+	.4byte	.LFE277-.LFB277
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x6176
-	.uleb128 0x5f
-	.4byte	0x17e1
-	.4byte	.LLST107
-	.uleb128 0x5f
-	.4byte	0x17ea
+	.4byte	0x623e
+	.uleb128 0x60
+	.4byte	0x17d6
 	.4byte	.LLST108
-	.uleb128 0x5f
-	.4byte	0x17f3
+	.uleb128 0x60
+	.4byte	0x17df
 	.4byte	.LLST109
+	.uleb128 0x60
+	.4byte	0x17e8
+	.4byte	.LLST110
 	.uleb128 0x38
-	.4byte	.Ldebug_ranges0+0xf8
-	.4byte	0x613f
+	.4byte	.Ldebug_ranges0+0x140
+	.4byte	0x6207
 	.uleb128 0x30
-	.4byte	0x17fd
+	.4byte	0x17f2
 	.uleb128 0x30
-	.4byte	0x1808
+	.4byte	0x17fd
 	.byte	0
 	.uleb128 0x32
-	.4byte	.LBB355
-	.4byte	.LBE355-.LBB355
+	.4byte	.LBB377
+	.4byte	.LBE377-.LBB377
 	.uleb128 0x2e
-	.4byte	0x17f3
+	.4byte	0x17e8
 	.uleb128 0x2e
-	.4byte	0x17ea
+	.4byte	0x17df
 	.uleb128 0x2e
-	.4byte	0x17e1
+	.4byte	0x17d6
 	.uleb128 0x32
-	.4byte	.LBB356
-	.4byte	.LBE356-.LBB356
+	.4byte	.LBB378
+	.4byte	.LBE378-.LBB378
 	.uleb128 0x30
-	.4byte	0x6134
+	.4byte	0x61fc
 	.uleb128 0x30
-	.4byte	0x6139
-	.uleb128 0x24
-	.4byte	.LVL478
-	.4byte	0x671c
+	.4byte	0x6201
+	.uleb128 0x23
+	.4byte	.LVL493
+	.4byte	0x67e3
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x1d67
-	.4byte	.LFB258
-	.4byte	.LFE258-.LFB258
+	.uleb128 0x5f
+	.4byte	0x1d5d
+	.4byte	.LFB268
+	.4byte	.LFE268-.LFB268
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x6210
-	.uleb128 0x62
-	.4byte	0x1d78
+	.4byte	0x62d8
+	.uleb128 0x64
+	.4byte	0x1d6e
 	.uleb128 0x1
 	.byte	0x50
 	.uleb128 0x30
-	.4byte	0x1d84
+	.4byte	0x1d7a
 	.uleb128 0x30
-	.4byte	0x1d8e
+	.4byte	0x1d84
 	.uleb128 0x30
-	.4byte	0x1d9a
+	.4byte	0x1d90
 	.uleb128 0x38
-	.4byte	.Ldebug_ranges0+0x140
-	.4byte	0x6200
+	.4byte	.Ldebug_ranges0+0x188
+	.4byte	0x62c8
 	.uleb128 0x30
-	.4byte	0x6189
+	.4byte	0x6251
 	.uleb128 0x30
-	.4byte	0x6190
+	.4byte	0x6258
 	.uleb128 0x63
-	.4byte	0x6195
-	.4byte	.LLST141
-	.uleb128 0x62
-	.4byte	0x619a
+	.4byte	0x625d
+	.4byte	.LLST143
+	.uleb128 0x64
+	.4byte	0x6262
 	.uleb128 0x3
 	.byte	0x91
 	.sleb128 -88
 	.uleb128 0x52
-	.4byte	.LBB377
-	.4byte	.LBE377-.LBB377
-	.4byte	0x61f6
-	.uleb128 0x62
-	.4byte	0x1dab
+	.4byte	.LBB399
+	.4byte	.LBE399-.LBB399
+	.4byte	0x62be
+	.uleb128 0x64
+	.4byte	0x1da1
 	.uleb128 0x3
 	.byte	0x91
 	.sleb128 -108
-	.uleb128 0x24
-	.4byte	.LVL642
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL643
-	.4byte	0x455a
-	.uleb128 0x24
-	.4byte	.LVL644
-	.4byte	0x1e7a
+	.uleb128 0x23
+	.4byte	.LVL663
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL664
+	.4byte	0x4507
+	.uleb128 0x23
+	.4byte	.LVL665
+	.4byte	0x1e70
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL641
-	.4byte	0x392c
+	.uleb128 0x23
+	.4byte	.LVL662
+	.4byte	0x392e
 	.byte	0
 	.uleb128 0x32
-	.4byte	.LBB380
-	.4byte	.LBE380-.LBB380
+	.4byte	.LBB402
+	.4byte	.LBE402-.LBB402
 	.uleb128 0x30
-	.4byte	0x1db9
+	.4byte	0x1daf
 	.byte	0
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x1dc7
-	.4byte	.LFB257
-	.4byte	.LFE257-.LFB257
+	.uleb128 0x5f
+	.4byte	0x1dbd
+	.4byte	.LFB267
+	.4byte	.LFE267-.LFB267
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x629b
-	.uleb128 0x5f
-	.4byte	0x1dd8
-	.4byte	.LLST182
+	.4byte	0x6363
+	.uleb128 0x60
+	.4byte	0x1dce
+	.4byte	.LLST184
 	.uleb128 0x30
-	.4byte	0x1de4
+	.4byte	0x1dda
+	.uleb128 0x30
+	.4byte	0x1de6
 	.uleb128 0x30
 	.4byte	0x1df0
 	.uleb128 0x30
 	.4byte	0x1dfa
-	.uleb128 0x30
-	.4byte	0x1e04
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0x190
+	.4byte	.Ldebug_ranges0+0x1d8
 	.uleb128 0x2e
-	.4byte	0x1dd8
+	.4byte	0x1dce
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0x190
+	.4byte	.Ldebug_ranges0+0x1d8
 	.uleb128 0x30
-	.4byte	0x622c
-	.uleb128 0x62
-	.4byte	0x6231
+	.4byte	0x62f4
+	.uleb128 0x64
+	.4byte	0x62f9
 	.uleb128 0x1
 	.byte	0x54
 	.uleb128 0x63
-	.4byte	0x6236
-	.4byte	.LLST183
-	.uleb128 0x62
-	.4byte	0x623b
+	.4byte	0x62fe
+	.4byte	.LLST185
+	.uleb128 0x64
+	.4byte	0x6303
 	.uleb128 0x1
 	.byte	0x59
-	.uleb128 0x24
+	.uleb128 0x23
+	.4byte	.LVL890
+	.4byte	0x456f
+	.uleb128 0x23
+	.4byte	.LVL891
+	.4byte	0x1e07
+	.uleb128 0x23
+	.4byte	.LVL892
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL893
+	.4byte	0x4af9
+	.uleb128 0x23
 	.4byte	.LVL894
-	.4byte	0x45c2
-	.uleb128 0x24
-	.4byte	.LVL896
-	.4byte	0x1e11
-	.uleb128 0x24
-	.4byte	.LVL897
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL898
-	.4byte	0x4b52
-	.uleb128 0x24
-	.4byte	.LVL899
-	.4byte	0x4994
+	.4byte	0x493b
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x23b1
-	.4byte	.LFB241
-	.4byte	.LFE241-.LFB241
+	.uleb128 0x5f
+	.4byte	0x23a7
+	.4byte	.LFB251
+	.4byte	.LFE251-.LFB251
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x6315
-	.uleb128 0x5f
-	.4byte	0x23c2
-	.4byte	.LLST184
+	.4byte	0x63dd
+	.uleb128 0x60
+	.4byte	0x23b8
+	.4byte	.LLST186
 	.uleb128 0x30
-	.4byte	0x23ce
+	.4byte	0x23c4
 	.uleb128 0x52
-	.4byte	.LBB441
-	.4byte	.LBE441-.LBB441
-	.4byte	0x630b
+	.4byte	.LBB463
+	.4byte	.LBE463-.LBB463
+	.4byte	0x63d3
 	.uleb128 0x2e
-	.4byte	0x23c2
+	.4byte	0x23b8
 	.uleb128 0x32
-	.4byte	.LBB442
-	.4byte	.LBE442-.LBB442
+	.4byte	.LBB464
+	.4byte	.LBE464-.LBB464
 	.uleb128 0x30
-	.4byte	0x62b7
-	.uleb128 0x24
-	.4byte	.LVL903
+	.4byte	0x637f
+	.uleb128 0x23
+	.4byte	.LVL899
 	.4byte	0x4086
-	.uleb128 0x24
-	.4byte	.LVL904
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL905
-	.4byte	0x2681
-	.uleb128 0x24
-	.4byte	.LVL906
-	.4byte	0x1dc7
-	.uleb128 0x24
-	.4byte	.LVL907
-	.4byte	0x6727
+	.uleb128 0x23
+	.4byte	.LVL900
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL901
+	.4byte	0x2677
+	.uleb128 0x23
+	.4byte	.LVL902
+	.4byte	0x1dbd
+	.uleb128 0x23
+	.4byte	.LVL903
+	.4byte	0x67ee
 	.byte	0
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL909
+	.uleb128 0x23
+	.4byte	.LVL904
 	.4byte	0x3f26
 	.byte	0
-	.uleb128 0x5e
+	.uleb128 0x5f
 	.4byte	0x3658
-	.4byte	.LFB208
-	.4byte	.LFE208-.LFB208
+	.4byte	.LFB218
+	.4byte	.LFE218-.LFB218
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x638e
+	.4byte	0x6455
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0x1a8
+	.4byte	.Ldebug_ranges0+0x1f0
 	.uleb128 0x63
 	.4byte	0x3666
-	.4byte	.LLST186
+	.4byte	.LLST188
 	.uleb128 0x63
 	.4byte	0x3672
-	.4byte	.LLST187
+	.4byte	.LLST189
 	.uleb128 0x63
 	.4byte	0x367e
-	.4byte	.LLST188
-	.uleb128 0x62
+	.4byte	.LLST190
+	.uleb128 0x64
 	.4byte	0x368a
-	.uleb128 0x3
+	.uleb128 0x2
 	.byte	0x91
-	.sleb128 -68
+	.sleb128 -64
 	.uleb128 0x30
 	.4byte	0x3696
-	.uleb128 0x24
-	.4byte	.LVL916
-	.4byte	0x392c
-	.uleb128 0x24
+	.uleb128 0x23
+	.4byte	.LVL911
+	.4byte	0x392e
+	.uleb128 0x23
+	.4byte	.LVL912
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL915
+	.4byte	0x17c6
+	.uleb128 0x23
 	.4byte	.LVL917
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL920
-	.4byte	0x17d1
-	.uleb128 0x24
-	.4byte	.LVL922
-	.4byte	0x23f1
-	.uleb128 0x24
-	.4byte	.LVL923
-	.4byte	0x19f5
-	.uleb128 0x24
-	.4byte	.LVL924
-	.4byte	0x233b
+	.4byte	0x23e7
+	.uleb128 0x23
+	.4byte	.LVL918
+	.4byte	0x19ea
+	.uleb128 0x23
+	.4byte	.LVL919
+	.4byte	0x2331
 	.byte	0
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x2b80
-	.4byte	.LFB226
-	.4byte	.LFE226-.LFB226
+	.uleb128 0x5f
+	.4byte	0x2b86
+	.4byte	.LFB236
+	.4byte	.LFE236-.LFB236
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x63ab
-	.uleb128 0x24
-	.4byte	.LVL1124
-	.4byte	0x3855
+	.4byte	0x6472
+	.uleb128 0x23
+	.4byte	.LVL1114
+	.4byte	0x3859
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x343a
-	.4byte	.LFB211
-	.4byte	.LFE211-.LFB211
+	.uleb128 0x5f
+	.4byte	0x343c
+	.4byte	.LFB221
+	.4byte	.LFE221-.LFB221
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x63da
-	.uleb128 0x24
-	.4byte	.LVL1148
-	.4byte	0x3781
-	.uleb128 0x24
-	.4byte	.LVL1149
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1150
-	.4byte	0x17d1
+	.4byte	0x64a1
+	.uleb128 0x23
+	.4byte	.LVL1141
+	.4byte	0x3783
+	.uleb128 0x23
+	.4byte	.LVL1142
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1143
+	.4byte	0x17c6
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x1f7c
-	.4byte	.LFB251
-	.4byte	.LFE251-.LFB251
+	.uleb128 0x5f
+	.4byte	0x1f72
+	.4byte	.LFB261
+	.4byte	.LFE261-.LFB261
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x6409
-	.uleb128 0x24
-	.4byte	.LVL1272
-	.4byte	0x1f85
-	.uleb128 0x24
-	.4byte	.LVL1273
+	.4byte	0x64d0
+	.uleb128 0x23
+	.4byte	.LVL1265
+	.4byte	0x1f7b
+	.uleb128 0x23
+	.4byte	.LVL1266
 	.4byte	0x36a4
-	.uleb128 0x24
-	.4byte	.LVL1274
-	.4byte	0x20d1
+	.uleb128 0x23
+	.4byte	.LVL1267
+	.4byte	0x20c7
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x1c7f
-	.4byte	.LFB259
-	.4byte	.LFE259-.LFB259
+	.uleb128 0x5f
+	.4byte	0x1c75
+	.4byte	.LFB269
+	.4byte	.LFE269-.LFB269
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x65fa
-	.uleb128 0x5f
-	.4byte	0x1c90
+	.4byte	0x66c1
+	.uleb128 0x60
+	.4byte	0x1c86
 	.4byte	.LLST245
-	.uleb128 0x5f
-	.4byte	0x1c9c
+	.uleb128 0x60
+	.4byte	0x1c92
 	.4byte	.LLST246
 	.uleb128 0x30
-	.4byte	0x1ca8
+	.4byte	0x1c9e
 	.uleb128 0x30
-	.4byte	0x1cb4
+	.4byte	0x1caa
 	.uleb128 0x30
-	.4byte	0x1cc0
+	.4byte	0x1cb6
 	.uleb128 0x30
-	.4byte	0x1ccc
+	.4byte	0x1cc2
 	.uleb128 0x30
-	.4byte	0x1cd8
+	.4byte	0x1cce
 	.uleb128 0x30
-	.4byte	0x1ce4
+	.4byte	0x1cda
 	.uleb128 0x30
-	.4byte	0x1cf0
+	.4byte	0x1ce6
 	.uleb128 0x30
-	.4byte	0x1cfc
+	.4byte	0x1cf2
 	.uleb128 0x30
-	.4byte	0x1d08
+	.4byte	0x1cfe
 	.uleb128 0x30
-	.4byte	0x1d14
+	.4byte	0x1d0a
 	.uleb128 0x30
-	.4byte	0x1d30
+	.4byte	0x1d26
 	.uleb128 0x38
-	.4byte	.Ldebug_ranges0+0x1f8
-	.4byte	0x65f0
+	.4byte	.Ldebug_ranges0+0x258
+	.4byte	0x66b7
 	.uleb128 0x2e
-	.4byte	0x1c9c
+	.4byte	0x1c92
 	.uleb128 0x2e
-	.4byte	0x1c90
+	.4byte	0x1c86
 	.uleb128 0x2f
-	.4byte	.Ldebug_ranges0+0x1f8
+	.4byte	.Ldebug_ranges0+0x258
 	.uleb128 0x63
-	.4byte	0x642e
+	.4byte	0x64f5
 	.4byte	.LLST247
 	.uleb128 0x63
-	.4byte	0x6433
+	.4byte	0x64fa
 	.4byte	.LLST248
 	.uleb128 0x63
-	.4byte	0x6438
+	.4byte	0x64ff
 	.4byte	.LLST249
 	.uleb128 0x30
-	.4byte	0x643d
+	.4byte	0x6504
 	.uleb128 0x30
-	.4byte	0x6442
+	.4byte	0x6509
 	.uleb128 0x30
-	.4byte	0x6447
+	.4byte	0x650e
 	.uleb128 0x63
-	.4byte	0x644c
+	.4byte	0x6513
 	.4byte	.LLST250
 	.uleb128 0x63
-	.4byte	0x6451
+	.4byte	0x6518
 	.4byte	.LLST251
 	.uleb128 0x63
-	.4byte	0x6456
+	.4byte	0x651d
 	.4byte	.LLST252
 	.uleb128 0x63
-	.4byte	0x645b
+	.4byte	0x6522
 	.4byte	.LLST253
-	.uleb128 0x64
-	.4byte	0x1d20
-	.uleb128 0x64
-	.4byte	0x1d28
+	.uleb128 0x66
+	.4byte	0x1d16
+	.uleb128 0x66
+	.4byte	0x1d1e
 	.uleb128 0x30
-	.4byte	0x6460
+	.4byte	0x6527
 	.uleb128 0x38
-	.4byte	.Ldebug_ranges0+0x218
-	.4byte	0x6516
+	.4byte	.Ldebug_ranges0+0x278
+	.4byte	0x65dd
 	.uleb128 0x30
-	.4byte	0x1d3e
-	.uleb128 0x24
-	.4byte	.LVL1299
-	.4byte	0x269f
-	.uleb128 0x24
-	.4byte	.LVL1300
+	.4byte	0x1d34
+	.uleb128 0x23
+	.4byte	.LVL1292
+	.4byte	0x2695
+	.uleb128 0x23
+	.4byte	.LVL1293
 	.4byte	0x3fa5
-	.uleb128 0x24
-	.4byte	.LVL1301
+	.uleb128 0x23
+	.4byte	.LVL1294
 	.4byte	0x3fa5
-	.uleb128 0x24
-	.4byte	.LVL1302
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1304
-	.4byte	0x1e11
+	.uleb128 0x23
+	.4byte	.LVL1295
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1297
+	.4byte	0x1e07
 	.byte	0
-	.uleb128 0x24
+	.uleb128 0x23
+	.4byte	.LVL1309
+	.4byte	0x2258
+	.uleb128 0x23
+	.4byte	.LVL1310
+	.4byte	0x2c58
+	.uleb128 0x23
 	.4byte	.LVL1316
-	.4byte	0x2262
-	.uleb128 0x24
+	.4byte	0x1d5d
+	.uleb128 0x23
 	.4byte	.LVL1317
-	.4byte	0x2c52
-	.uleb128 0x24
+	.4byte	0x3fa5
+	.uleb128 0x23
+	.4byte	.LVL1318
+	.4byte	0x2331
+	.uleb128 0x23
+	.4byte	.LVL1320
+	.4byte	0x2258
+	.uleb128 0x23
+	.4byte	.LVL1321
+	.4byte	0x2331
+	.uleb128 0x23
 	.4byte	.LVL1322
-	.4byte	0x1d67
-	.uleb128 0x24
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL1323
-	.4byte	0x3fa5
-	.uleb128 0x24
+	.4byte	0x67ee
+	.uleb128 0x23
 	.4byte	.LVL1324
-	.4byte	0x233b
-	.uleb128 0x24
-	.4byte	.LVL1326
-	.4byte	0x2262
-	.uleb128 0x24
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1325
+	.4byte	0x2c58
+	.uleb128 0x23
 	.4byte	.LVL1327
-	.4byte	0x233b
-	.uleb128 0x24
-	.4byte	.LVL1328
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1329
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1330
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1331
-	.4byte	0x2c52
-	.uleb128 0x24
-	.4byte	.LVL1333
-	.4byte	0x1d67
-	.uleb128 0x24
+	.4byte	0x1d5d
+	.uleb128 0x23
+	.4byte	.LVL1343
+	.4byte	0x1af9
+	.uleb128 0x23
+	.4byte	.LVL1346
+	.4byte	0x67ee
+	.uleb128 0x23
+	.4byte	.LVL1348
+	.4byte	0x392e
+	.uleb128 0x23
+	.4byte	.LVL1349
+	.4byte	0x1f18
+	.uleb128 0x23
+	.4byte	.LVL1352
+	.4byte	0x228a
+	.uleb128 0x23
 	.4byte	.LVL1353
-	.4byte	0x1b05
-	.uleb128 0x24
-	.4byte	.LVL1357
-	.4byte	0x6727
-	.uleb128 0x24
-	.4byte	.LVL1358
-	.4byte	0x392c
-	.uleb128 0x24
+	.4byte	0x1ea4
+	.uleb128 0x23
 	.4byte	.LVL1360
-	.4byte	0x1f22
-	.uleb128 0x24
+	.4byte	0x1ea4
+	.uleb128 0x23
+	.4byte	.LVL1361
+	.4byte	0x23a7
+	.uleb128 0x23
+	.4byte	.LVL1362
+	.4byte	0x4f11
+	.uleb128 0x23
 	.4byte	.LVL1363
-	.4byte	0x2294
-	.uleb128 0x24
+	.4byte	0x39f9
+	.uleb128 0x23
 	.4byte	.LVL1364
-	.4byte	0x1eae
-	.uleb128 0x24
-	.4byte	.LVL1373
-	.4byte	0x1eae
-	.uleb128 0x24
-	.4byte	.LVL1376
-	.4byte	0x23b1
-	.uleb128 0x24
-	.4byte	.LVL1377
-	.4byte	0x4f6d
-	.uleb128 0x24
-	.4byte	.LVL1378
-	.4byte	0x39f7
-	.uleb128 0x24
-	.4byte	.LVL1379
 	.4byte	0x3593
-	.uleb128 0x24
-	.4byte	.LVL1383
+	.uleb128 0x23
+	.4byte	.LVL1367
 	.4byte	0x3fa5
 	.byte	0
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL1303
-	.4byte	0x20d1
+	.uleb128 0x23
+	.4byte	.LVL1296
+	.4byte	0x20c7
 	.byte	0
-	.uleb128 0x5e
-	.4byte	0x2812
-	.4byte	.LFB232
-	.4byte	.LFE232-.LFB232
+	.uleb128 0x5f
+	.4byte	0x2818
+	.4byte	.LFB242
+	.4byte	.LFE242-.LFB242
 	.uleb128 0x1
 	.byte	0x9c
-	.4byte	0x6708
+	.4byte	0x67cf
 	.uleb128 0x30
-	.4byte	0x2823
+	.4byte	0x2829
 	.uleb128 0x52
-	.4byte	.LBB521
-	.4byte	.LBE521-.LBB521
-	.4byte	0x66a4
+	.4byte	.LBB544
+	.4byte	.LBE544-.LBB544
+	.4byte	0x676b
 	.uleb128 0x63
-	.4byte	0x660d
+	.4byte	0x66d4
 	.4byte	.LLST287
 	.uleb128 0x38
-	.4byte	.Ldebug_ranges0+0x238
-	.4byte	0x6637
+	.4byte	.Ldebug_ranges0+0x298
+	.4byte	0x66fe
 	.uleb128 0x30
-	.4byte	0x282e
-	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL1592
-	.4byte	0x2a91
-	.uleb128 0x24
-	.4byte	.LVL1593
-	.4byte	0x2a91
-	.uleb128 0x24
-	.4byte	.LVL1594
-	.4byte	0x36a4
-	.uleb128 0x24
-	.4byte	.LVL1595
-	.4byte	0x36a4
-	.uleb128 0x24
-	.4byte	.LVL1596
-	.4byte	0x39f7
-	.uleb128 0x24
-	.4byte	.LVL1597
-	.4byte	0x3593
-	.uleb128 0x24
-	.4byte	.LVL1598
-	.4byte	0x3593
-	.uleb128 0x24
-	.4byte	.LVL1601
-	.4byte	0x1e7a
-	.uleb128 0x24
-	.4byte	.LVL1602
-	.4byte	0x1e7a
-	.uleb128 0x24
-	.4byte	.LVL1603
-	.4byte	0x246d
-	.uleb128 0x24
-	.4byte	.LVL1604
-	.4byte	0x246d
-	.uleb128 0x24
-	.4byte	.LVL1605
-	.4byte	0x29d5
+	.4byte	0x2834
 	.byte	0
-	.uleb128 0x24
-	.4byte	.LVL1580
-	.4byte	0x4400
-	.uleb128 0x24
-	.4byte	.LVL1581
-	.4byte	0x3447
-	.uleb128 0x24
+	.uleb128 0x23
 	.4byte	.LVL1582
-	.4byte	0x333a
-	.uleb128 0x24
+	.4byte	0x2a97
+	.uleb128 0x23
 	.4byte	.LVL1583
-	.4byte	0x3198
-	.uleb128 0x24
+	.4byte	0x2a97
+	.uleb128 0x23
 	.4byte	.LVL1584
-	.4byte	0x31fa
-	.uleb128 0x24
+	.4byte	0x36a4
+	.uleb128 0x23
 	.4byte	.LVL1585
-	.4byte	0x2b06
-	.uleb128 0x24
+	.4byte	0x36a4
+	.uleb128 0x23
 	.4byte	.LVL1586
-	.4byte	0x343a
-	.uleb128 0x24
+	.4byte	0x39f9
+	.uleb128 0x23
 	.4byte	.LVL1587
-	.4byte	0x42f5
-	.uleb128 0x24
+	.4byte	0x3593
+	.uleb128 0x23
 	.4byte	.LVL1588
-	.4byte	0x2b89
-	.uleb128 0x24
-	.4byte	.LVL1589
-	.4byte	0x2cbd
-	.uleb128 0x24
-	.4byte	.LVL1590
-	.4byte	0x3710
+	.4byte	0x3593
+	.uleb128 0x23
+	.4byte	.LVL1591
+	.4byte	0x1e70
+	.uleb128 0x23
+	.4byte	.LVL1592
+	.4byte	0x1e70
+	.uleb128 0x23
+	.4byte	.LVL1593
+	.4byte	0x2463
+	.uleb128 0x23
+	.4byte	.LVL1594
+	.4byte	0x2463
+	.uleb128 0x23
+	.4byte	.LVL1595
+	.4byte	0x29db
 	.byte	0
-	.uleb128 0x65
+	.uleb128 0x23
+	.4byte	.LVL1570
+	.4byte	0x43ad
+	.uleb128 0x23
+	.4byte	.LVL1571
+	.4byte	0x3449
+	.uleb128 0x23
+	.4byte	.LVL1572
+	.4byte	0x333c
+	.uleb128 0x23
+	.4byte	.LVL1573
+	.4byte	0x319a
+	.uleb128 0x23
+	.4byte	.LVL1574
+	.4byte	0x31fc
+	.uleb128 0x23
+	.4byte	.LVL1575
+	.4byte	0x2b0c
+	.uleb128 0x23
+	.4byte	.LVL1576
+	.4byte	0x343c
+	.uleb128 0x23
+	.4byte	.LVL1577
+	.4byte	0x4316
+	.uleb128 0x23
+	.4byte	.LVL1578
+	.4byte	0x2b8f
+	.uleb128 0x23
+	.4byte	.LVL1579
+	.4byte	0x2cc3
+	.uleb128 0x23
+	.4byte	.LVL1580
+	.4byte	0x3712
+	.byte	0
+	.uleb128 0x67
+	.4byte	.LASF656
+	.4byte	.LASF656
+	.byte	0x11
+	.byte	0x6f
+	.uleb128 0x68
+	.4byte	.LASF669
+	.4byte	.LASF669
+	.uleb128 0x67
+	.4byte	.LASF657
+	.4byte	.LASF657
+	.byte	0x12
+	.byte	0x19
+	.uleb128 0x67
 	.4byte	.LASF658
 	.4byte	.LASF658
-	.byte	0x12
-	.byte	0x6f
-	.uleb128 0x66
-	.4byte	.LASF671
-	.4byte	.LASF671
-	.uleb128 0x65
+	.byte	0xb
+	.byte	0x8e
+	.uleb128 0x67
 	.4byte	.LASF659
 	.4byte	.LASF659
-	.byte	0x13
-	.byte	0x19
-	.uleb128 0x65
+	.byte	0x12
+	.byte	0x1b
+	.uleb128 0x67
 	.4byte	.LASF660
 	.4byte	.LASF660
-	.byte	0xc
-	.byte	0x8e
-	.uleb128 0x65
+	.byte	0x13
+	.byte	0x27
+	.uleb128 0x67
 	.4byte	.LASF661
 	.4byte	.LASF661
-	.byte	0x13
-	.byte	0x1b
-	.uleb128 0x65
+	.byte	0xd
+	.byte	0x18
+	.uleb128 0x69
 	.4byte	.LASF662
 	.4byte	.LASF662
-	.byte	0x14
-	.byte	0x2c
-	.uleb128 0x65
-	.4byte	.LASF663
-	.4byte	.LASF663
-	.byte	0xe
-	.byte	0x18
-	.uleb128 0x67
-	.4byte	.LASF664
-	.4byte	.LASF664
-	.byte	0xd
+	.byte	0xc
 	.2byte	0x19b
-	.uleb128 0x68
-	.4byte	.LASF672
-	.4byte	.LASF673
-	.byte	0x15
+	.uleb128 0x6a
+	.4byte	.LASF670
+	.4byte	.LASF671
+	.byte	0x14
 	.byte	0
-	.4byte	.LASF672
+	.4byte	.LASF670
 	.byte	0
 	.section	.debug_abbrev,"",%progbits
 .Ldebug_abbrev0:
@@ -37330,13 +36129,6 @@ check_vpc_table:
 	.byte	0
 	.byte	0
 	.uleb128 0x2
-	.uleb128 0xf
-	.byte	0
-	.uleb128 0xb
-	.uleb128 0xb
-	.byte	0
-	.byte	0
-	.uleb128 0x3
 	.uleb128 0x24
 	.byte	0
 	.uleb128 0xb
@@ -37347,14 +36139,14 @@ check_vpc_table:
 	.uleb128 0xe
 	.byte	0
 	.byte	0
-	.uleb128 0x4
+	.uleb128 0x3
 	.uleb128 0x26
 	.byte	0
 	.uleb128 0x49
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x5
+	.uleb128 0x4
 	.uleb128 0x24
 	.byte	0
 	.uleb128 0xb
@@ -37365,7 +36157,7 @@ check_vpc_table:
 	.uleb128 0x8
 	.byte	0
 	.byte	0
-	.uleb128 0x6
+	.uleb128 0x5
 	.uleb128 0x16
 	.byte	0
 	.uleb128 0x3
@@ -37378,7 +36170,7 @@ check_vpc_table:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x7
+	.uleb128 0x6
 	.uleb128 0x16
 	.byte	0
 	.uleb128 0x3
@@ -37391,7 +36183,7 @@ check_vpc_table:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x8
+	.uleb128 0x7
 	.uleb128 0xf
 	.byte	0
 	.uleb128 0xb
@@ -37400,7 +36192,7 @@ check_vpc_table:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x9
+	.uleb128 0x8
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -37417,23 +36209,23 @@ check_vpc_table:
 	.uleb128 0x19
 	.byte	0
 	.byte	0
-	.uleb128 0xa
+	.uleb128 0x9
 	.uleb128 0x15
 	.byte	0
 	.uleb128 0x27
 	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0xb
+	.uleb128 0xa
 	.uleb128 0x15
 	.byte	0
 	.uleb128 0x27
 	.uleb128 0x19
-	.uleb128 0x49
-	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0xc
+	.uleb128 0xb
 	.uleb128 0x1
 	.byte	0x1
 	.uleb128 0x49
@@ -37442,12 +36234,12 @@ check_vpc_table:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0xd
+	.uleb128 0xc
 	.uleb128 0x21
 	.byte	0
 	.byte	0
 	.byte	0
-	.uleb128 0xe
+	.uleb128 0xd
 	.uleb128 0x13
 	.byte	0
 	.uleb128 0x3
@@ -37456,7 +36248,7 @@ check_vpc_table:
 	.uleb128 0x19
 	.byte	0
 	.byte	0
-	.uleb128 0xf
+	.uleb128 0xe
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -37473,7 +36265,7 @@ check_vpc_table:
 	.uleb128 0x19
 	.byte	0
 	.byte	0
-	.uleb128 0x10
+	.uleb128 0xf
 	.uleb128 0x15
 	.byte	0x1
 	.uleb128 0x27
@@ -37484,14 +36276,14 @@ check_vpc_table:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x11
+	.uleb128 0x10
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x49
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x12
+	.uleb128 0x11
 	.uleb128 0x4
 	.byte	0x1
 	.uleb128 0x3
@@ -37508,7 +36300,7 @@ check_vpc_table:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x13
+	.uleb128 0x12
 	.uleb128 0x28
 	.byte	0
 	.uleb128 0x3
@@ -37517,7 +36309,7 @@ check_vpc_table:
 	.uleb128 0xb
 	.byte	0
 	.byte	0
-	.uleb128 0x14
+	.uleb128 0x13
 	.uleb128 0x13
 	.byte	0x1
 	.uleb128 0x3
@@ -37532,7 +36324,7 @@ check_vpc_table:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x15
+	.uleb128 0x14
 	.uleb128 0xd
 	.byte	0
 	.uleb128 0x3
@@ -37547,7 +36339,7 @@ check_vpc_table:
 	.uleb128 0xb
 	.byte	0
 	.byte	0
-	.uleb128 0x16
+	.uleb128 0x15
 	.uleb128 0xd
 	.byte	0
 	.uleb128 0x3
@@ -37562,7 +36354,7 @@ check_vpc_table:
 	.uleb128 0xb
 	.byte	0
 	.byte	0
-	.uleb128 0x17
+	.uleb128 0x16
 	.uleb128 0x21
 	.byte	0
 	.uleb128 0x49
@@ -37571,7 +36363,7 @@ check_vpc_table:
 	.uleb128 0xb
 	.byte	0
 	.byte	0
-	.uleb128 0x18
+	.uleb128 0x17
 	.uleb128 0x13
 	.byte	0x1
 	.uleb128 0x3
@@ -37586,7 +36378,7 @@ check_vpc_table:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x19
+	.uleb128 0x18
 	.uleb128 0x21
 	.byte	0
 	.uleb128 0x49
@@ -37595,7 +36387,7 @@ check_vpc_table:
 	.uleb128 0x5
 	.byte	0
 	.byte	0
-	.uleb128 0x1a
+	.uleb128 0x19
 	.uleb128 0xd
 	.byte	0
 	.uleb128 0x3
@@ -37610,7 +36402,7 @@ check_vpc_table:
 	.uleb128 0xb
 	.byte	0
 	.byte	0
-	.uleb128 0x1b
+	.uleb128 0x1a
 	.uleb128 0x13
 	.byte	0x1
 	.uleb128 0x3
@@ -37625,7 +36417,7 @@ check_vpc_table:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x1c
+	.uleb128 0x1b
 	.uleb128 0xd
 	.byte	0
 	.uleb128 0x3
@@ -37640,7 +36432,7 @@ check_vpc_table:
 	.uleb128 0xb
 	.byte	0
 	.byte	0
-	.uleb128 0x1d
+	.uleb128 0x1c
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -37657,7 +36449,7 @@ check_vpc_table:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x1e
+	.uleb128 0x1d
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -37674,7 +36466,7 @@ check_vpc_table:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x1f
+	.uleb128 0x1e
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -37689,7 +36481,7 @@ check_vpc_table:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x20
+	.uleb128 0x1f
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -37704,7 +36496,7 @@ check_vpc_table:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x21
+	.uleb128 0x20
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x47
@@ -37717,7 +36509,7 @@ check_vpc_table:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x22
+	.uleb128 0x21
 	.uleb128 0x2e
 	.byte	0x1
 	.uleb128 0x3f
@@ -37744,7 +36536,7 @@ check_vpc_table:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x23
+	.uleb128 0x22
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x3
@@ -37759,7 +36551,7 @@ check_vpc_table:
 	.uleb128 0x17
 	.byte	0
 	.byte	0
-	.uleb128 0x24
+	.uleb128 0x23
 	.uleb128 0x4109
 	.byte	0
 	.uleb128 0x11
@@ -37768,6 +36560,13 @@ check_vpc_table:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
+	.uleb128 0x24
+	.uleb128 0xf
+	.byte	0
+	.uleb128 0xb
+	.uleb128 0xb
+	.byte	0
+	.byte	0
 	.uleb128 0x25
 	.uleb128 0x26
 	.byte	0
@@ -38542,21 +37341,34 @@ check_vpc_table:
 	.byte	0
 	.byte	0
 	.uleb128 0x58
+	.uleb128 0xa
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x11
+	.uleb128 0x1
+	.byte	0
+	.byte	0
+	.uleb128 0x59
 	.uleb128 0x1d
 	.byte	0
 	.uleb128 0x31
 	.uleb128 0x13
-	.uleb128 0x11
+	.uleb128 0x52
 	.uleb128 0x1
-	.uleb128 0x12
-	.uleb128 0x6
+	.uleb128 0x55
+	.uleb128 0x17
 	.uleb128 0x58
 	.uleb128 0xb
 	.uleb128 0x59
 	.uleb128 0xb
 	.byte	0
 	.byte	0
-	.uleb128 0x59
+	.uleb128 0x5a
 	.uleb128 0x2e
 	.byte	0
 	.uleb128 0x3f
@@ -38575,7 +37387,7 @@ check_vpc_table:
 	.uleb128 0xb
 	.byte	0
 	.byte	0
-	.uleb128 0x5a
+	.uleb128 0x5b
 	.uleb128 0x1d
 	.byte	0x1
 	.uleb128 0x31
@@ -38590,7 +37402,7 @@ check_vpc_table:
 	.uleb128 0xb
 	.byte	0
 	.byte	0
-	.uleb128 0x5b
+	.uleb128 0x5c
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x3
@@ -38601,7 +37413,7 @@ check_vpc_table:
 	.uleb128 0x19
 	.byte	0
 	.byte	0
-	.uleb128 0x5c
+	.uleb128 0x5d
 	.uleb128 0x2e
 	.byte	0
 	.uleb128 0x3f
@@ -38618,7 +37430,7 @@ check_vpc_table:
 	.uleb128 0xb
 	.byte	0
 	.byte	0
-	.uleb128 0x5d
+	.uleb128 0x5e
 	.uleb128 0x2e
 	.byte	0
 	.uleb128 0x3f
@@ -38643,7 +37455,7 @@ check_vpc_table:
 	.uleb128 0x19
 	.byte	0
 	.byte	0
-	.uleb128 0x5e
+	.uleb128 0x5f
 	.uleb128 0x2e
 	.byte	0x1
 	.uleb128 0x31
@@ -38660,7 +37472,7 @@ check_vpc_table:
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x5f
+	.uleb128 0x60
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x31
@@ -38669,7 +37481,7 @@ check_vpc_table:
 	.uleb128 0x17
 	.byte	0
 	.byte	0
-	.uleb128 0x60
+	.uleb128 0x61
 	.uleb128 0x5
 	.byte	0
 	.uleb128 0x31
@@ -38678,7 +37490,7 @@ check_vpc_table:
 	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x61
+	.uleb128 0x62
 	.uleb128 0x2e
 	.byte	0
 	.uleb128 0x31
@@ -38693,32 +37505,47 @@ check_vpc_table:
 	.uleb128 0x19
 	.byte	0
 	.byte	0
-	.uleb128 0x62
+	.uleb128 0x63
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x31
 	.uleb128 0x13
 	.uleb128 0x2
-	.uleb128 0x18
+	.uleb128 0x17
 	.byte	0
 	.byte	0
-	.uleb128 0x63
+	.uleb128 0x64
 	.uleb128 0x34
 	.byte	0
 	.uleb128 0x31
 	.uleb128 0x13
 	.uleb128 0x2
-	.uleb128 0x17
+	.uleb128 0x18
 	.byte	0
 	.byte	0
-	.uleb128 0x64
+	.uleb128 0x65
+	.uleb128 0x1d
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x66
 	.uleb128 0xa
 	.byte	0
 	.uleb128 0x31
 	.uleb128 0x13
 	.byte	0
 	.byte	0
-	.uleb128 0x65
+	.uleb128 0x67
 	.uleb128 0x2e
 	.byte	0
 	.uleb128 0x3f
@@ -38735,7 +37562,7 @@ check_vpc_table:
 	.uleb128 0xb
 	.byte	0
 	.byte	0
-	.uleb128 0x66
+	.uleb128 0x68
 	.uleb128 0x2e
 	.byte	0
 	.uleb128 0x3f
@@ -38748,7 +37575,7 @@ check_vpc_table:
 	.uleb128 0xe
 	.byte	0
 	.byte	0
-	.uleb128 0x67
+	.uleb128 0x69
 	.uleb128 0x2e
 	.byte	0
 	.uleb128 0x3f
@@ -38765,7 +37592,7 @@ check_vpc_table:
 	.uleb128 0x5
 	.byte	0
 	.byte	0
-	.uleb128 0x68
+	.uleb128 0x6a
 	.uleb128 0x2e
 	.byte	0
 	.uleb128 0x3f
@@ -38788,223 +37615,234 @@ check_vpc_table:
 	.section	.debug_loc,"",%progbits
 .Ldebug_loc0:
 .LLST290:
-	.4byte	.LVL1645-.Ltext0
-	.4byte	.LVL1646-1-.Ltext0
+	.4byte	.LVL1635-.Ltext0
+	.4byte	.LVL1636-1-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
 .LLST291:
-	.4byte	.LVL1645-.Ltext0
-	.4byte	.LVL1646-1-.Ltext0
+	.4byte	.LVL1635-.Ltext0
+	.4byte	.LVL1636-1-.Ltext0
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
 .LLST292:
-	.4byte	.LVL1645-.Ltext0
-	.4byte	.LVL1646-1-.Ltext0
+	.4byte	.LVL1635-.Ltext0
+	.4byte	.LVL1636-1-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	0
 	.4byte	0
-.LLST170:
-	.4byte	.LVL834-.Ltext0
-	.4byte	.LVL835-1-.Ltext0
+.LLST172:
+	.4byte	.LVL832-.Ltext0
+	.4byte	.LVL833-1-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST171:
-	.4byte	.LVL834-.Ltext0
-	.4byte	.LVL835-1-.Ltext0
+.LLST173:
+	.4byte	.LVL832-.Ltext0
+	.4byte	.LVL833-1-.Ltext0
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
-.LLST172:
-	.4byte	.LVL834-.Ltext0
-	.4byte	.LVL835-1-.Ltext0
+.LLST174:
+	.4byte	.LVL832-.Ltext0
+	.4byte	.LVL833-1-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	0
 	.4byte	0
-.LLST104:
-	.4byte	.LVL466-.Ltext0
-	.4byte	.LVL468-1-.Ltext0
+.LLST105:
+	.4byte	.LVL481-.Ltext0
+	.4byte	.LVL483-1-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL468-1-.Ltext0
-	.4byte	.LFE266-.Ltext0
+	.4byte	.LVL483-1-.Ltext0
+	.4byte	.LFE276-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST105:
-	.4byte	.LVL466-.Ltext0
-	.4byte	.LVL467-.Ltext0
+.LLST106:
+	.4byte	.LVL481-.Ltext0
+	.4byte	.LVL482-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL467-.Ltext0
-	.4byte	.LFE266-.Ltext0
+	.4byte	.LVL482-.Ltext0
+	.4byte	.LFE276-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST106:
-	.4byte	.LVL470-.Ltext0
-	.4byte	.LVL471-.Ltext0
+.LLST107:
+	.4byte	.LVL485-.Ltext0
+	.4byte	.LVL486-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL473-.Ltext0
-	.4byte	.LVL474-.Ltext0
+	.4byte	.LVL488-.Ltext0
+	.4byte	.LVL489-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL475-.Ltext0
-	.4byte	.LVL476-.Ltext0
+	.4byte	.LVL490-.Ltext0
+	.4byte	.LVL491-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
 .LLST91:
-	.4byte	.LVL395-.Ltext0
-	.4byte	.LVL399-.Ltext0
+	.4byte	.LVL396-.Ltext0
+	.4byte	.LVL400-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL400-.Ltext0
-	.4byte	.LVL402-.Ltext0
+	.4byte	.LVL401-.Ltext0
+	.4byte	.LVL403-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
 .LLST92:
-	.4byte	.LVL395-.Ltext0
-	.4byte	.LVL401-.Ltext0
+	.4byte	.LVL396-.Ltext0
+	.4byte	.LVL402-.Ltext0
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
 .LLST93:
-	.4byte	.LVL395-.Ltext0
-	.4byte	.LVL400-.Ltext0
+	.4byte	.LVL396-.Ltext0
+	.4byte	.LVL401-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL400-.Ltext0
-	.4byte	.LFE264-.Ltext0
+	.4byte	.LVL401-.Ltext0
+	.4byte	.LFE274-.Ltext0
 	.2byte	0x1
 	.byte	0x58
 	.4byte	0
 	.4byte	0
 .LLST86:
-	.4byte	.LVL370-.Ltext0
-	.4byte	.LVL372-.Ltext0
+	.4byte	.LVL371-.Ltext0
+	.4byte	.LVL373-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
 .LLST87:
-	.4byte	.LVL370-.Ltext0
-	.4byte	.LVL375-.Ltext0
+	.4byte	.LVL371-.Ltext0
+	.4byte	.LVL376-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL375-.Ltext0
-	.4byte	.LVL385-.Ltext0
+	.4byte	.LVL376-.Ltext0
+	.4byte	.LVL386-.Ltext0
 	.2byte	0x1
 	.byte	0x59
-	.4byte	.LVL385-.Ltext0
-	.4byte	.LVL387-.Ltext0
+	.4byte	.LVL386-.Ltext0
+	.4byte	.LVL388-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL392-.Ltext0
-	.4byte	.LFE263-.Ltext0
+	.4byte	.LVL393-.Ltext0
+	.4byte	.LFE273-.Ltext0
 	.2byte	0x1
 	.byte	0x59
 	.4byte	0
 	.4byte	0
 .LLST88:
-	.4byte	.LVL370-.Ltext0
-	.4byte	.LVL373-.Ltext0
+	.4byte	.LVL371-.Ltext0
+	.4byte	.LVL374-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL373-.Ltext0
-	.4byte	.LFE263-.Ltext0
+	.4byte	.LVL374-.Ltext0
+	.4byte	.LFE273-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
 .LLST89:
-	.4byte	.LVL370-.Ltext0
 	.4byte	.LVL371-.Ltext0
+	.4byte	.LVL372-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL371-.Ltext0
-	.4byte	.LVL384-.Ltext0
+	.4byte	.LVL372-.Ltext0
+	.4byte	.LVL385-.Ltext0
 	.2byte	0x1
 	.byte	0x58
-	.4byte	.LVL393-.Ltext0
 	.4byte	.LVL394-.Ltext0
+	.4byte	.LVL395-.Ltext0
 	.2byte	0x1
 	.byte	0x58
 	.4byte	0
 	.4byte	0
 .LLST90:
-	.4byte	.LVL373-.Ltext0
-	.4byte	.LVL376-.Ltext0
+	.4byte	.LVL374-.Ltext0
+	.4byte	.LVL377-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL377-.Ltext0
 	.4byte	.LVL378-.Ltext0
+	.4byte	.LVL379-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL381-.Ltext0
 	.4byte	.LVL382-.Ltext0
+	.4byte	.LVL383-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL384-.Ltext0
-	.4byte	.LVL386-.Ltext0
+	.4byte	.LVL385-.Ltext0
+	.4byte	.LVL387-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL392-.Ltext0
-	.4byte	.LFE263-.Ltext0
+	.4byte	.LVL393-.Ltext0
+	.4byte	.LFE273-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	0
 	.4byte	0
-.LLST79:
-	.4byte	.LVL340-.Ltext0
-	.4byte	.LVL344-.Ltext0
+.LLST78:
+	.4byte	.LVL338-.Ltext0
+	.4byte	.LVL342-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL343-.Ltext0
+	.4byte	.LVL346-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL345-.Ltext0
 	.4byte	.LVL347-.Ltext0
+	.4byte	.LVL349-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL348-.Ltext0
-	.4byte	.LVL350-.Ltext0
+	.4byte	0
+	.4byte	0
+.LLST79:
+	.4byte	.LVL338-.Ltext0
+	.4byte	.LVL343-.Ltext0
 	.2byte	0x1
-	.byte	0x50
+	.byte	0x51
+	.4byte	.LVL343-.Ltext0
+	.4byte	.LFE272-.Ltext0
+	.2byte	0x1
+	.byte	0x58
 	.4byte	0
 	.4byte	0
 .LLST80:
-	.4byte	.LVL340-.Ltext0
+	.4byte	.LVL338-.Ltext0
 	.4byte	.LVL345-.Ltext0
 	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL345-.Ltext0
-	.4byte	.LFE262-.Ltext0
+	.byte	0x52
+	.4byte	.LVL347-.Ltext0
+	.4byte	.LVL348-.Ltext0
 	.2byte	0x1
-	.byte	0x57
+	.byte	0x52
 	.4byte	0
 	.4byte	0
 .LLST81:
 	.4byte	.LVL340-.Ltext0
-	.4byte	.LVL346-.Ltext0
+	.4byte	.LVL344-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL348-.Ltext0
-	.4byte	.LVL349-.Ltext0
+	.byte	0x53
+	.4byte	.LVL352-.Ltext0
+	.4byte	.LVL353-.Ltext0
 	.2byte	0x1
-	.byte	0x52
+	.byte	0x50
 	.4byte	0
 	.4byte	0
 .LLST0:
@@ -39020,7 +37858,7 @@ check_vpc_table:
 	.2byte	0x1
 	.byte	0x51
 	.4byte	.LVL7-.Ltext0
-	.4byte	.LFE261-.Ltext0
+	.4byte	.LFE271-.Ltext0
 	.2byte	0x1
 	.byte	0x58
 	.4byte	0
@@ -39031,7 +37869,7 @@ check_vpc_table:
 	.2byte	0x1
 	.byte	0x52
 	.4byte	.LVL9-1-.Ltext0
-	.4byte	.LFE261-.Ltext0
+	.4byte	.LFE271-.Ltext0
 	.2byte	0x1
 	.byte	0x59
 	.4byte	0
@@ -39049,7 +37887,7 @@ check_vpc_table:
 	.2byte	0x1
 	.byte	0x55
 	.4byte	.LVL8-.Ltext0
-	.4byte	.LFE261-.Ltext0
+	.4byte	.LFE271-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
@@ -39075,739 +37913,766 @@ check_vpc_table:
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST78:
-	.4byte	.LVL334-.Ltext0
-	.4byte	.LVL335-1-.Ltext0
+.LLST77:
+	.4byte	.LVL331-.Ltext0
+	.4byte	.LVL332-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL335-1-.Ltext0
-	.4byte	.LFE255-.Ltext0
+	.4byte	.LVL332-.Ltext0
+	.4byte	.LFE265-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST77:
-	.4byte	.LVL331-.Ltext0
-	.4byte	.LVL332-.Ltext0
+.LLST76:
+	.4byte	.LVL328-.Ltext0
+	.4byte	.LVL329-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL332-.Ltext0
-	.4byte	.LFE254-.Ltext0
+	.4byte	.LVL329-.Ltext0
+	.4byte	.LFE264-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
 .LLST244:
-	.4byte	.LVL1287-.Ltext0
-	.4byte	.LVL1288-1-.Ltext0
+	.4byte	.LVL1280-.Ltext0
+	.4byte	.LVL1281-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST161:
-	.4byte	.LVL794-.Ltext0
+.LLST163:
 	.4byte	.LVL798-.Ltext0
+	.4byte	.LVL801-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL798-.Ltext0
-	.4byte	.LVL833-.Ltext0
+	.4byte	.LVL801-.Ltext0
+	.4byte	.LVL831-.Ltext0
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
-.LLST162:
-	.4byte	.LVL794-.Ltext0
-	.4byte	.LVL796-.Ltext0
-	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL796-.Ltext0
-	.4byte	.LVL797-1-.Ltext0
-	.2byte	0x1
-	.byte	0x52
+.LLST164:
 	.4byte	.LVL798-.Ltext0
-	.4byte	.LVL799-.Ltext0
+	.4byte	.LVL801-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL799-.Ltext0
 	.4byte	.LVL801-.Ltext0
-	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL805-.Ltext0
-	.4byte	.LVL808-.Ltext0
-	.2byte	0x1
-	.byte	0x53
 	.4byte	.LVL831-.Ltext0
-	.4byte	.LVL832-.Ltext0
 	.2byte	0x1
-	.byte	0x53
+	.byte	0x5a
 	.4byte	0
 	.4byte	0
-.LLST163:
-	.4byte	.LVL802-.Ltext0
+.LLST165:
 	.4byte	.LVL803-.Ltext0
+	.4byte	.LVL804-.Ltext0
 	.2byte	0x1
 	.byte	0x53
+	.4byte	.LVL810-.Ltext0
 	.4byte	.LVL811-.Ltext0
-	.4byte	.LVL812-.Ltext0
 	.2byte	0x1
 	.byte	0x53
+	.4byte	.LVL814-.Ltext0
 	.4byte	.LVL815-.Ltext0
-	.4byte	.LVL816-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST164:
-	.4byte	.LVL800-.Ltext0
-	.4byte	.LVL813-.Ltext0
+.LLST166:
+	.4byte	.LVL802-.Ltext0
+	.4byte	.LVL812-.Ltext0
 	.2byte	0x1
 	.byte	0x57
-	.4byte	.LVL814-.Ltext0
-	.4byte	.LVL833-.Ltext0
+	.4byte	.LVL813-.Ltext0
+	.4byte	.LVL831-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
-.LLST165:
+.LLST167:
+	.4byte	.LVL808-.Ltext0
 	.4byte	.LVL809-.Ltext0
-	.4byte	.LVL810-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL822-.Ltext0
-	.4byte	.LVL824-.Ltext0
+	.4byte	.LVL821-.Ltext0
+	.4byte	.LVL823-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST166:
-	.4byte	.LVL795-.Ltext0
+.LLST168:
+	.4byte	.LVL799-.Ltext0
 	.4byte	.LVL806-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	.LVL807-.Ltext0
-	.4byte	.LVL828-.Ltext0
+	.4byte	.LVL827-.Ltext0
 	.2byte	0x1
 	.byte	0x54
+	.4byte	.LVL830-.Ltext0
 	.4byte	.LVL831-.Ltext0
-	.4byte	.LVL833-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST167:
-	.4byte	.LVL817-.Ltext0
-	.4byte	.LVL818-1-.Ltext0
+.LLST169:
+	.4byte	.LVL816-.Ltext0
+	.4byte	.LVL817-1-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL819-.Ltext0
-	.4byte	.LVL823-.Ltext0
+	.4byte	.LVL818-.Ltext0
+	.4byte	.LVL822-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL826-.Ltext0
-	.4byte	.LVL827-1-.Ltext0
+	.4byte	.LVL825-.Ltext0
+	.4byte	.LVL826-1-.Ltext0
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
-.LLST168:
-	.4byte	.LVL800-.Ltext0
-	.4byte	.LVL833-.Ltext0
+.LLST170:
+	.4byte	.LVL802-.Ltext0
+	.4byte	.LVL831-.Ltext0
 	.2byte	0x1
 	.byte	0x58
 	.4byte	0
 	.4byte	0
-.LLST169:
+.LLST171:
+	.4byte	.LVL819-.Ltext0
 	.4byte	.LVL820-.Ltext0
-	.4byte	.LVL821-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL826-.Ltext0
-	.4byte	.LVL827-1-.Ltext0
+	.4byte	.LVL825-.Ltext0
+	.4byte	.LVL826-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST240:
-	.4byte	.LVL1240-.Ltext0
-	.4byte	.LVL1243-.Ltext0
+	.4byte	.LVL1233-.Ltext0
+	.4byte	.LVL1236-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1244-.Ltext0
-	.4byte	.LVL1245-.Ltext0
+	.4byte	.LVL1237-.Ltext0
+	.4byte	.LVL1238-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1246-.Ltext0
-	.4byte	.LVL1247-.Ltext0
+	.4byte	.LVL1239-.Ltext0
+	.4byte	.LVL1240-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1255-.Ltext0
-	.4byte	.LVL1256-1-.Ltext0
+	.4byte	.LVL1248-.Ltext0
+	.4byte	.LVL1249-1-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
 .LLST241:
-	.4byte	.LVL1242-.Ltext0
-	.4byte	.LVL1244-.Ltext0
+	.4byte	.LVL1235-.Ltext0
+	.4byte	.LVL1237-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -52
-	.4byte	.LVL1249-.Ltext0
-	.4byte	.LVL1253-.Ltext0
+	.sleb128 -48
+	.4byte	.LVL1242-.Ltext0
+	.4byte	.LVL1246-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -52
-	.4byte	.LVL1254-.Ltext0
-	.4byte	.LFE248-.Ltext0
+	.sleb128 -48
+	.4byte	.LVL1247-.Ltext0
+	.4byte	.LFE258-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -52
+	.sleb128 -48
 	.4byte	0
 	.4byte	0
 .LLST242:
-	.4byte	.LVL1241-.Ltext0
-	.4byte	.LVL1248-1-.Ltext0
+	.4byte	.LVL1234-.Ltext0
+	.4byte	.LVL1241-1-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL1253-.Ltext0
-	.4byte	.LVL1254-.Ltext0
+	.4byte	.LVL1246-.Ltext0
+	.4byte	.LVL1247-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL1255-.Ltext0
-	.4byte	.LVL1256-1-.Ltext0
+	.4byte	.LVL1248-.Ltext0
+	.4byte	.LVL1249-1-.Ltext0
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
 .LLST243:
-	.4byte	.LVL1258-.Ltext0
-	.4byte	.LVL1260-.Ltext0
+	.4byte	.LVL1251-.Ltext0
+	.4byte	.LVL1253-.Ltext0
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL1264-.Ltext0
-	.4byte	.LVL1270-.Ltext0
+	.4byte	.LVL1257-.Ltext0
+	.4byte	.LVL1263-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST72:
+.LLST71:
+	.4byte	.LVL319-.Ltext0
 	.4byte	.LVL320-.Ltext0
-	.4byte	.LVL321-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL321-.Ltext0
-	.4byte	.LFE247-.Ltext0
+	.4byte	.LVL320-.Ltext0
+	.4byte	.LFE257-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST73:
-	.4byte	.LVL320-.Ltext0
-	.4byte	.LVL322-1-.Ltext0
+.LLST72:
+	.4byte	.LVL319-.Ltext0
+	.4byte	.LVL321-1-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL322-1-.Ltext0
-	.4byte	.LVL330-.Ltext0
+	.4byte	.LVL321-1-.Ltext0
+	.4byte	.LVL327-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST74:
-	.4byte	.LVL320-.Ltext0
-	.4byte	.LVL322-1-.Ltext0
+.LLST73:
+	.4byte	.LVL319-.Ltext0
+	.4byte	.LVL321-1-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL322-1-.Ltext0
-	.4byte	.LVL330-.Ltext0
+	.4byte	.LVL321-1-.Ltext0
+	.4byte	.LVL327-.Ltext0
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
-.LLST75:
-	.4byte	.LVL323-.Ltext0
-	.4byte	.LVL329-.Ltext0
+.LLST74:
+	.4byte	.LVL322-.Ltext0
+	.4byte	.LVL326-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST76:
+.LLST75:
+	.4byte	.LVL323-.Ltext0
 	.4byte	.LVL324-.Ltext0
-	.4byte	.LVL325-.Ltext0
 	.2byte	0x1
-	.byte	0x57
-	.4byte	.LVL326-.Ltext0
-	.4byte	.LVL327-.Ltext0
-	.2byte	0x1
-	.byte	0x57
-	.4byte	.LVL328-.Ltext0
-	.4byte	.LFE247-.Ltext0
+	.byte	0x58
+	.4byte	.LVL325-.Ltext0
+	.4byte	.LFE257-.Ltext0
 	.2byte	0x1
-	.byte	0x57
+	.byte	0x58
 	.4byte	0
 	.4byte	0
-.LLST71:
+.LLST70:
+	.4byte	.LVL315-.Ltext0
 	.4byte	.LVL316-.Ltext0
-	.4byte	.LVL317-.Ltext0
 	.2byte	0x1
 	.byte	0x50
+	.4byte	.LVL317-.Ltext0
 	.4byte	.LVL318-.Ltext0
-	.4byte	.LVL319-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST185:
-	.4byte	.LVL910-.Ltext0
-	.4byte	.LVL913-.Ltext0
+.LLST187:
+	.4byte	.LVL905-.Ltext0
+	.4byte	.LVL906-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL913-.Ltext0
-	.4byte	.LFE242-.Ltext0
+	.4byte	.LVL906-.Ltext0
+	.4byte	.LFE252-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST69:
+.LLST68:
+	.4byte	.LVL305-.Ltext0
 	.4byte	.LVL306-.Ltext0
-	.4byte	.LVL307-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL307-.Ltext0
-	.4byte	.LFE240-.Ltext0
+	.4byte	.LVL306-.Ltext0
+	.4byte	.LFE250-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST70:
+.LLST69:
+	.4byte	.LVL309-.Ltext0
 	.4byte	.LVL310-.Ltext0
-	.4byte	.LVL311-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL313-.Ltext0
-	.4byte	.LFE240-.Ltext0
+	.4byte	.LVL312-.Ltext0
+	.4byte	.LFE250-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
 .LLST226:
-	.4byte	.LVL1181-.Ltext0
-	.4byte	.LVL1183-.Ltext0
+	.4byte	.LVL1174-.Ltext0
+	.4byte	.LVL1176-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1183-.Ltext0
-	.4byte	.LFE239-.Ltext0
+	.4byte	.LVL1176-.Ltext0
+	.4byte	.LFE249-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
-.LLST177:
+.LLST179:
+	.4byte	.LVL851-.Ltext0
 	.4byte	.LVL854-.Ltext0
-	.4byte	.LVL857-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL857-.Ltext0
-	.4byte	.LVL888-.Ltext0
+	.4byte	.LVL854-.Ltext0
+	.4byte	.LVL884-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST178:
-	.4byte	.LVL855-.Ltext0
-	.4byte	.LVL888-.Ltext0
+.LLST180:
+	.4byte	.LVL852-.Ltext0
+	.4byte	.LVL884-.Ltext0
 	.2byte	0x1
-	.byte	0x58
+	.byte	0x59
 	.4byte	0
 	.4byte	0
-.LLST179:
-	.4byte	.LVL855-.Ltext0
-	.4byte	.LVL856-.Ltext0
+.LLST181:
+	.4byte	.LVL852-.Ltext0
+	.4byte	.LVL853-.Ltext0
 	.2byte	0x1
 	.byte	0x57
-	.4byte	.LVL869-.Ltext0
-	.4byte	.LVL880-.Ltext0
+	.4byte	.LVL866-.Ltext0
+	.4byte	.LVL876-.Ltext0
 	.2byte	0x1
 	.byte	0x57
-	.4byte	.LVL881-.Ltext0
-	.4byte	.LVL888-.Ltext0
+	.4byte	.LVL877-.Ltext0
+	.4byte	.LVL884-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
-.LLST180:
-	.4byte	.LVL875-.Ltext0
-	.4byte	.LVL876-1-.Ltext0
+.LLST182:
+	.4byte	.LVL872-.Ltext0
+	.4byte	.LVL873-1-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL877-.Ltext0
-	.4byte	.LVL878-.Ltext0
+	.byte	0x51
+	.4byte	.LVL874-.Ltext0
+	.4byte	.LVL875-1-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL883-.Ltext0
-	.4byte	.LVL884-1-.Ltext0
+	.byte	0x51
+	.4byte	.LVL879-.Ltext0
+	.4byte	.LVL880-1-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL885-.Ltext0
-	.4byte	.LVL886-.Ltext0
+	.byte	0x51
+	.4byte	.LVL881-.Ltext0
+	.4byte	.LVL882-.Ltext0
 	.2byte	0x1
-	.byte	0x52
+	.byte	0x51
 	.4byte	0
 	.4byte	0
-.LLST181:
-	.4byte	.LVL858-.Ltext0
-	.4byte	.LVL859-.Ltext0
+.LLST183:
+	.4byte	.LVL855-.Ltext0
+	.4byte	.LVL856-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL860-.Ltext0
-	.4byte	.LVL861-.Ltext0
+	.4byte	.LVL857-.Ltext0
+	.4byte	.LVL858-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL862-.Ltext0
-	.4byte	.LVL863-1-.Ltext0
+	.4byte	.LVL859-.Ltext0
+	.4byte	.LVL860-1-.Ltext0
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
-.LLST64:
+.LLST62:
+	.4byte	.LVL280-.Ltext0
+	.4byte	.LVL282-.Ltext0
+	.2byte	0x1
+	.byte	0x51
 	.4byte	.LVL286-.Ltext0
-	.4byte	.LVL287-.Ltext0
+	.4byte	.LVL294-.Ltext0
 	.2byte	0x1
-	.byte	0x57
-	.4byte	.LVL291-.Ltext0
-	.4byte	.LFE236-.Ltext0
+	.byte	0x51
+	.4byte	.LVL297-.Ltext0
+	.4byte	.LFE246-.Ltext0
 	.2byte	0x1
-	.byte	0x57
+	.byte	0x51
 	.4byte	0
 	.4byte	0
-.LLST65:
-	.4byte	.LVL286-.Ltext0
-	.4byte	.LVL287-.Ltext0
+.LLST63:
+	.4byte	.LVL280-.Ltext0
+	.4byte	.LVL282-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL290-.Ltext0
-	.4byte	.LVL292-.Ltext0
+	.4byte	.LVL285-.Ltext0
+	.4byte	.LVL288-.Ltext0
 	.2byte	0x1
 	.byte	0x53
+	.4byte	.LVL297-.Ltext0
 	.4byte	.LVL300-.Ltext0
-	.4byte	.LVL301-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL302-.Ltext0
-	.4byte	.LFE236-.Ltext0
+	.4byte	.LVL301-.Ltext0
+	.4byte	.LFE246-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST66:
-	.4byte	.LVL286-.Ltext0
-	.4byte	.LVL287-.Ltext0
+.LLST64:
+	.4byte	.LVL280-.Ltext0
+	.4byte	.LVL282-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL284-.Ltext0
+	.4byte	.LFE246-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST65:
+	.4byte	.LVL280-.Ltext0
+	.4byte	.LVL282-.Ltext0
 	.2byte	0x1
 	.byte	0x5a
 	.4byte	.LVL289-.Ltext0
-	.4byte	.LFE236-.Ltext0
+	.4byte	.LVL292-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL293-.Ltext0
+	.4byte	.LVL297-.Ltext0
 	.2byte	0x1
 	.byte	0x5a
 	.4byte	0
 	.4byte	0
-.LLST67:
-	.4byte	.LVL286-.Ltext0
-	.4byte	.LVL287-.Ltext0
+.LLST66:
+	.4byte	.LVL280-.Ltext0
+	.4byte	.LVL281-.Ltext0
 	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL293-.Ltext0
-	.4byte	.LVL294-1-.Ltext0
+	.byte	0x50
+	.4byte	.LVL287-.Ltext0
+	.4byte	.LVL290-1-.Ltext0
 	.2byte	0x1
-	.byte	0x53
+	.byte	0x50
+	.4byte	.LVL291-.Ltext0
 	.4byte	.LVL295-.Ltext0
-	.4byte	.LVL296-.Ltext0
 	.2byte	0x1
-	.byte	0x53
+	.byte	0x50
 	.4byte	.LVL297-.Ltext0
 	.4byte	.LVL298-.Ltext0
 	.2byte	0x1
-	.byte	0x53
-	.4byte	0
-	.4byte	0
-.LLST59:
-	.4byte	.LVL198-.Ltext0
-	.4byte	.LVL199-.Ltext0
-	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL200-.Ltext0
-	.4byte	.LVL201-.Ltext0
+	.4byte	.LVL299-.Ltext0
+	.4byte	.LFE246-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST58:
-	.4byte	.LVL193-.Ltext0
+.LLST57:
+	.4byte	.LVL194-.Ltext0
 	.4byte	.LVL195-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	.LVL195-.Ltext0
-	.4byte	.LFE233-.Ltext0
+	.4byte	.LFE245-.Ltext0
 	.2byte	0x1
-	.byte	0x57
+	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST142:
-	.4byte	.LVL646-.Ltext0
-	.4byte	.LVL649-.Ltext0
+.LLST56:
+	.4byte	.LVL189-.Ltext0
+	.4byte	.LVL190-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL190-.Ltext0
+	.4byte	.LFE243-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST144:
+	.4byte	.LVL667-.Ltext0
+	.4byte	.LVL670-.Ltext0
 	.2byte	0x1
 	.byte	0x54
-	.4byte	.LVL654-.Ltext0
-	.4byte	.LVL657-.Ltext0
+	.4byte	.LVL675-.Ltext0
+	.4byte	.LVL678-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST143:
-	.4byte	.LVL650-.Ltext0
-	.4byte	.LVL654-.Ltext0
+.LLST145:
+	.4byte	.LVL671-.Ltext0
+	.4byte	.LVL675-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL657-.Ltext0
-	.4byte	.LFE230-.Ltext0
+	.4byte	.LVL678-.Ltext0
+	.4byte	.LFE240-.Ltext0
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
-.LLST144:
-	.4byte	.LVL651-.Ltext0
-	.4byte	.LVL654-.Ltext0
+.LLST146:
+	.4byte	.LVL672-.Ltext0
+	.4byte	.LVL675-.Ltext0
 	.2byte	0x1
-	.byte	0x57
+	.byte	0x58
 	.4byte	0
 	.4byte	0
 .LLST224:
-	.4byte	.LVL1171-.Ltext0
-	.4byte	.LVL1173-.Ltext0
+	.4byte	.LVL1164-.Ltext0
+	.4byte	.LVL1166-.Ltext0
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL1176-.Ltext0
-	.4byte	.LFE229-.Ltext0
+	.4byte	.LVL1169-.Ltext0
+	.4byte	.LFE239-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
 .LLST225:
-	.4byte	.LVL1168-.Ltext0
-	.4byte	.LVL1172-.Ltext0
+	.4byte	.LVL1161-.Ltext0
+	.4byte	.LVL1165-.Ltext0
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL1173-.Ltext0
-	.4byte	.LVL1176-.Ltext0
+	.4byte	.LVL1166-.Ltext0
+	.4byte	.LVL1169-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST205:
+.LLST206:
+	.4byte	.LVL1045-.Ltext0
 	.4byte	.LVL1046-.Ltext0
-	.4byte	.LVL1047-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1047-.Ltext0
-	.4byte	.LFE228-.Ltext0
+	.4byte	.LVL1046-.Ltext0
+	.4byte	.LFE238-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST158:
-	.4byte	.LVL778-.Ltext0
-	.4byte	.LVL790-.Ltext0
+.LLST160:
+	.4byte	.LVL782-.Ltext0
+	.4byte	.LVL794-.Ltext0
 	.2byte	0x1
-	.byte	0x58
+	.byte	0x5a
 	.4byte	0
 	.4byte	0
-.LLST159:
-	.4byte	.LVL776-.Ltext0
-	.4byte	.LVL785-.Ltext0
+.LLST161:
+	.4byte	.LVL780-.Ltext0
+	.4byte	.LVL789-.Ltext0
 	.2byte	0x1
 	.byte	0x57
-	.4byte	.LVL786-.Ltext0
-	.4byte	.LVL788-.Ltext0
+	.4byte	.LVL790-.Ltext0
+	.4byte	.LVL792-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
-.LLST160:
-	.4byte	.LVL775-.Ltext0
-	.4byte	.LVL782-.Ltext0
+.LLST162:
+	.4byte	.LVL779-.Ltext0
+	.4byte	.LVL786-.Ltext0
 	.2byte	0x1
-	.byte	0x59
-	.4byte	.LVL783-.Ltext0
-	.4byte	.LVL790-.Ltext0
+	.byte	0x58
+	.4byte	.LVL787-.Ltext0
+	.4byte	.LVL794-.Ltext0
 	.2byte	0x1
-	.byte	0x59
+	.byte	0x58
 	.4byte	0
 	.4byte	0
-.LLST57:
-	.4byte	.LVL188-.Ltext0
-	.4byte	.LVL189-.Ltext0
+.LLST55:
+	.4byte	.LVL185-.Ltext0
+	.4byte	.LVL186-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL189-.Ltext0
-	.4byte	.LFE224-.Ltext0
+	.4byte	.LVL186-.Ltext0
+	.4byte	.LFE234-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST190:
-	.4byte	.LVL930-.Ltext0
-	.4byte	.LVL935-.Ltext0
+.LLST191:
+	.4byte	.LVL923-.Ltext0
+	.4byte	.LVL928-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL935-.Ltext0
-	.4byte	.LFE221-.Ltext0
+	.4byte	.LVL928-.Ltext0
+	.4byte	.LFE231-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST191:
-	.4byte	.LVL931-.Ltext0
-	.4byte	.LVL932-.Ltext0
+.LLST192:
+	.4byte	.LVL924-.Ltext0
+	.4byte	.LVL925-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL933-.Ltext0
-	.4byte	.LVL938-.Ltext0
+	.4byte	.LVL926-.Ltext0
+	.4byte	.LVL931-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL939-.Ltext0
-	.4byte	.LVL940-.Ltext0
+	.4byte	.LVL932-.Ltext0
+	.4byte	.LVL933-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL952-.Ltext0
-	.4byte	.LVL955-1-.Ltext0
+	.4byte	.LVL944-.Ltext0
+	.4byte	.LVL945-.Ltext0
 	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL957-.Ltext0
-	.4byte	.LVL958-1-.Ltext0
+	.byte	0x52
+	.4byte	.LVL950-.Ltext0
+	.4byte	.LVL951-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL958-.Ltext0
-	.4byte	.LVL959-.Ltext0
+	.4byte	.LVL954-.Ltext0
+	.4byte	.LVL955-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL967-.Ltext0
-	.4byte	.LVL969-.Ltext0
+	.4byte	.LVL955-.Ltext0
+	.4byte	.LVL956-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL972-.Ltext0
-	.4byte	.LVL973-.Ltext0
+	.4byte	.LVL983-.Ltext0
+	.4byte	.LVL985-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	.LVL992-.Ltext0
-	.4byte	.LVL994-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL1000-.Ltext0
-	.4byte	.LVL1001-.Ltext0
+	.4byte	.LVL993-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST192:
-	.4byte	.LVL932-.Ltext0
-	.4byte	.LVL934-.Ltext0
+.LLST193:
+	.4byte	.LVL925-.Ltext0
+	.4byte	.LVL927-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL951-.Ltext0
-	.4byte	.LVL954-.Ltext0
+	.4byte	.LVL943-.Ltext0
+	.4byte	.LVL952-.Ltext0
 	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL959-.Ltext0
-	.4byte	.LVL960-1-.Ltext0
+	.byte	0x50
+	.4byte	.LVL956-.Ltext0
+	.4byte	.LVL957-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL960-.Ltext0
-	.4byte	.LVL961-.Ltext0
+	.4byte	.LVL957-.Ltext0
+	.4byte	.LVL958-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	.LVL967-.Ltext0
+	.4byte	.LVL970-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL972-.Ltext0
 	.4byte	.LVL974-.Ltext0
 	.2byte	0x1
-	.byte	0x51
+	.byte	0x52
 	.4byte	.LVL976-.Ltext0
-	.4byte	.LVL979-1-.Ltext0
+	.4byte	.LVL977-.Ltext0
 	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL983-.Ltext0
-	.4byte	.LVL984-.Ltext0
+	.byte	0x52
+	.4byte	.LVL979-.Ltext0
+	.4byte	.LVL980-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL993-.Ltext0
-	.4byte	.LVL996-.Ltext0
+	.4byte	.LVL984-.Ltext0
+	.4byte	.LVL987-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL1000-.Ltext0
-	.4byte	.LVL1002-.Ltext0
+	.4byte	.LVL992-.Ltext0
+	.4byte	.LVL994-.Ltext0
 	.2byte	0x1
 	.byte	0x52
+	.4byte	.LVL1042-.Ltext0
 	.4byte	.LVL1043-.Ltext0
-	.4byte	.LVL1045-.Ltext0
 	.2byte	0x1
-	.byte	0x52
+	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST193:
-	.4byte	.LVL950-.Ltext0
-	.4byte	.LVL955-1-.Ltext0
+.LLST194:
+	.4byte	.LVL944-.Ltext0
+	.4byte	.LVL946-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL987-.Ltext0
+	.4byte	.LVL988-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL967-.Ltext0
-	.4byte	.LVL968-.Ltext0
+	.4byte	.LVL1039-.Ltext0
+	.4byte	.LVL1041-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL995-.Ltext0
-	.4byte	.LVL997-.Ltext0
+	.4byte	0
+	.4byte	0
+.LLST195:
+	.4byte	.LVL940-.Ltext0
+	.4byte	.LVL941-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1043-.Ltext0
-	.4byte	.LVL1044-.Ltext0
+	.4byte	.LVL942-.Ltext0
+	.4byte	.LVL944-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL944-.Ltext0
+	.4byte	.LVL947-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	0
-	.4byte	0
-.LLST194:
-	.4byte	.LVL936-.Ltext0
-	.4byte	.LVL937-.Ltext0
+	.4byte	.LVL962-.Ltext0
+	.4byte	.LVL963-.Ltext0
 	.2byte	0x1
-	.byte	0x59
-	.4byte	.LVL948-.Ltext0
-	.4byte	.LVL956-.Ltext0
+	.byte	0x53
+	.4byte	.LVL963-.Ltext0
+	.4byte	.LVL964-.Ltext0
 	.2byte	0x1
-	.byte	0x59
-	.4byte	.LVL965-.Ltext0
-	.4byte	.LVL966-.Ltext0
+	.byte	0x52
+	.4byte	.LVL986-.Ltext0
+	.4byte	.LVL989-.Ltext0
 	.2byte	0x1
-	.byte	0x59
-	.4byte	.LVL967-.Ltext0
-	.4byte	.LFE221-.Ltext0
+	.byte	0x53
+	.4byte	.LVL1039-.Ltext0
+	.4byte	.LVL1040-.Ltext0
 	.2byte	0x1
-	.byte	0x59
+	.byte	0x53
+	.4byte	.LVL1042-.Ltext0
+	.4byte	.LVL1044-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST195:
-	.4byte	.LVL936-.Ltext0
-	.4byte	.LVL937-.Ltext0
+.LLST196:
+	.4byte	.LVL929-.Ltext0
+	.4byte	.LVL930-.Ltext0
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL941-.Ltext0
-	.4byte	.LVL942-.Ltext0
+	.4byte	.LVL934-.Ltext0
+	.4byte	.LVL935-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL942-.Ltext0
-	.4byte	.LVL970-.Ltext0
+	.4byte	.LVL935-.Ltext0
+	.4byte	.LVL948-.Ltext0
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL977-.Ltext0
-	.4byte	.LVL978-.Ltext0
+	.4byte	.LVL953-.Ltext0
+	.4byte	.LVL965-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL968-.Ltext0
+	.4byte	.LVL969-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1042-.Ltext0
+	.4byte	.LFE231-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST196:
-	.4byte	.LVL946-.Ltext0
-	.4byte	.LVL947-.Ltext0
+.LLST197:
+	.4byte	.LVL939-.Ltext0
+	.4byte	.LVL941-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL959-.Ltext0
+	.4byte	.LVL960-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	.LVL962-.Ltext0
@@ -39816,1300 +38681,1129 @@ check_vpc_table:
 	.byte	0x52
 	.4byte	0
 	.4byte	0
-.LLST197:
-	.4byte	.LVL936-.Ltext0
-	.4byte	.LVL937-.Ltext0
+.LLST198:
+	.4byte	.LVL929-.Ltext0
+	.4byte	.LVL930-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL980-.Ltext0
-	.4byte	.LVL981-.Ltext0
+	.4byte	.LVL972-.Ltext0
+	.4byte	.LVL973-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL983-.Ltext0
-	.4byte	.LVL985-.Ltext0
+	.4byte	.LVL976-.Ltext0
+	.4byte	.LVL978-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL988-.Ltext0
-	.4byte	.LVL990-.Ltext0
+	.4byte	.LVL979-.Ltext0
+	.4byte	.LVL981-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL998-.Ltext0
-	.4byte	.LVL1002-.Ltext0
+	.4byte	.LVL990-.Ltext0
+	.4byte	.LVL994-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL1010-.Ltext0
-	.4byte	.LVL1017-.Ltext0
+	.4byte	.LVL1001-.Ltext0
+	.4byte	.LVL1009-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL1019-.Ltext0
-	.4byte	.LVL1036-.Ltext0
+	.4byte	.LVL1011-.Ltext0
+	.4byte	.LVL1032-.Ltext0
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
-.LLST198:
-	.4byte	.LVL936-.Ltext0
-	.4byte	.LVL937-.Ltext0
-	.2byte	0x2
-	.byte	0x91
-	.sleb128 -60
-	.4byte	.LVL953-.Ltext0
-	.4byte	.LVL956-.Ltext0
-	.2byte	0x2
-	.byte	0x91
-	.sleb128 -60
-	.4byte	.LVL980-.Ltext0
-	.4byte	.LFE221-.Ltext0
-	.2byte	0x2
-	.byte	0x91
-	.sleb128 -60
-	.4byte	0
-	.4byte	0
 .LLST199:
-	.4byte	.LVL936-.Ltext0
-	.4byte	.LVL937-.Ltext0
-	.2byte	0x2
-	.byte	0x91
-	.sleb128 -56
-	.4byte	.LVL953-.Ltext0
-	.4byte	.LVL956-.Ltext0
+	.4byte	.LVL929-.Ltext0
+	.4byte	.LVL930-.Ltext0
 	.2byte	0x2
 	.byte	0x91
 	.sleb128 -56
-	.4byte	.LVL980-.Ltext0
-	.4byte	.LFE221-.Ltext0
+	.4byte	.LVL972-.Ltext0
+	.4byte	.LFE231-.Ltext0
 	.2byte	0x2
 	.byte	0x91
 	.sleb128 -56
 	.4byte	0
 	.4byte	0
 .LLST200:
-	.4byte	.LVL936-.Ltext0
-	.4byte	.LVL937-.Ltext0
+	.4byte	.LVL929-.Ltext0
+	.4byte	.LVL930-.Ltext0
 	.2byte	0x2
 	.byte	0x91
 	.sleb128 -52
-	.4byte	.LVL953-.Ltext0
-	.4byte	.LVL956-.Ltext0
+	.4byte	.LVL972-.Ltext0
+	.4byte	.LFE231-.Ltext0
 	.2byte	0x2
 	.byte	0x91
 	.sleb128 -52
-	.4byte	.LVL980-.Ltext0
-	.4byte	.LFE221-.Ltext0
+	.4byte	0
+	.4byte	0
+.LLST201:
+	.4byte	.LVL929-.Ltext0
+	.4byte	.LVL930-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -52
+	.sleb128 -48
+	.4byte	.LVL972-.Ltext0
+	.4byte	.LVL1012-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -48
+	.4byte	.LVL1012-.Ltext0
+	.4byte	.LVL1017-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1017-.Ltext0
+	.4byte	.LVL1020-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1020-.Ltext0
+	.4byte	.LVL1026-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -48
+	.4byte	.LVL1026-.Ltext0
+	.4byte	.LFE231-.Ltext0
+	.2byte	0x1
+	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST201:
-	.4byte	.LVL936-.Ltext0
-	.4byte	.LVL937-.Ltext0
+.LLST202:
+	.4byte	.LVL929-.Ltext0
+	.4byte	.LVL930-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL980-.Ltext0
-	.4byte	.LVL981-.Ltext0
+	.4byte	.LVL972-.Ltext0
+	.4byte	.LVL973-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL983-.Ltext0
-	.4byte	.LVL985-.Ltext0
+	.4byte	.LVL976-.Ltext0
+	.4byte	.LVL978-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL988-.Ltext0
-	.4byte	.LVL990-.Ltext0
+	.4byte	.LVL979-.Ltext0
+	.4byte	.LVL981-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL999-.Ltext0
-	.4byte	.LVL1002-.Ltext0
+	.4byte	.LVL991-.Ltext0
+	.4byte	.LVL994-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL1017-.Ltext0
-	.4byte	.LVL1019-.Ltext0
+	.4byte	.LVL1009-.Ltext0
+	.4byte	.LVL1011-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL1036-.Ltext0
-	.4byte	.LVL1038-.Ltext0
+	.4byte	.LVL1032-.Ltext0
+	.4byte	.LVL1034-.Ltext0
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
-.LLST202:
-	.4byte	.LVL944-.Ltext0
-	.4byte	.LVL945-.Ltext0
+.LLST203:
+	.4byte	.LVL937-.Ltext0
+	.4byte	.LVL938-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL971-.Ltext0
-	.4byte	.LVL972-.Ltext0
+	.4byte	.LVL949-.Ltext0
+	.4byte	.LVL950-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL983-.Ltext0
-	.4byte	.LVL984-.Ltext0
+	.4byte	.LVL972-.Ltext0
+	.4byte	.LVL974-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL1000-.Ltext0
-	.4byte	.LVL1002-.Ltext0
+	.4byte	.LVL976-.Ltext0
+	.4byte	.LVL977-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL1003-.Ltext0
-	.4byte	.LVL1004-1-.Ltext0
+	.4byte	.LVL979-.Ltext0
+	.4byte	.LVL980-.Ltext0
 	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL1005-.Ltext0
-	.4byte	.LVL1006-.Ltext0
+	.byte	0x52
+	.4byte	.LVL992-.Ltext0
+	.4byte	.LVL994-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL995-.Ltext0
+	.4byte	.LVL997-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1007-.Ltext0
-	.4byte	.LVL1008-.Ltext0
+	.4byte	.LVL998-.Ltext0
+	.4byte	.LVL999-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1040-.Ltext0
-	.4byte	.LVL1041-.Ltext0
+	.4byte	.LVL1036-.Ltext0
+	.4byte	.LVL1037-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1041-.Ltext0
-	.4byte	.LVL1042-.Ltext0
+	.4byte	.LVL1037-.Ltext0
+	.4byte	.LVL1038-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL1042-.Ltext0
-	.4byte	.LVL1043-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	0
-	.4byte	0
-.LLST203:
-	.4byte	.LVL1021-.Ltext0
-	.4byte	.LVL1022-1-.Ltext0
+	.4byte	.LVL1038-.Ltext0
+	.4byte	.LVL1039-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST204:
-	.4byte	.LVL936-.Ltext0
-	.4byte	.LVL937-.Ltext0
-	.2byte	0x1
-	.byte	0x57
-	.4byte	.LVL980-.Ltext0
-	.4byte	.LVL986-.Ltext0
-	.2byte	0x1
-	.byte	0x57
-	.4byte	.LVL987-.Ltext0
-	.4byte	.LVL989-.Ltext0
-	.2byte	0x1
-	.byte	0x57
-	.4byte	.LVL999-.Ltext0
-	.4byte	.LVL1002-.Ltext0
+	.4byte	.LVL1005-.Ltext0
+	.4byte	.LVL1007-1-.Ltext0
 	.2byte	0x1
-	.byte	0x57
+	.byte	0x51
 	.4byte	.LVL1014-.Ltext0
-	.4byte	.LVL1019-.Ltext0
+	.4byte	.LVL1016-.Ltext0
 	.2byte	0x1
-	.byte	0x57
-	.4byte	.LVL1023-.Ltext0
-	.4byte	.LVL1025-.Ltext0
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST205:
+	.4byte	.LVL1005-.Ltext0
+	.4byte	.LVL1006-.Ltext0
 	.2byte	0x1
-	.byte	0x57
-	.4byte	.LVL1027-.Ltext0
-	.4byte	.LVL1030-.Ltext0
+	.byte	0x53
+	.4byte	.LVL1018-.Ltext0
+	.4byte	.LVL1019-1-.Ltext0
 	.2byte	0x1
-	.byte	0x57
-	.4byte	.LVL1036-.Ltext0
-	.4byte	.LVL1038-.Ltext0
+	.byte	0x53
+	.4byte	.LVL1022-.Ltext0
+	.4byte	.LVL1025-.Ltext0
 	.2byte	0x1
-	.byte	0x57
+	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST136:
-	.4byte	.LVL613-.Ltext0
-	.4byte	.LVL614-.Ltext0
+.LLST138:
+	.4byte	.LVL635-.Ltext0
+	.4byte	.LVL636-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL614-.Ltext0
-	.4byte	.LVL631-.Ltext0
+	.4byte	.LVL636-.Ltext0
+	.4byte	.LFE230-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
-.LLST137:
-	.4byte	.LVL613-.Ltext0
-	.4byte	.LVL615-1-.Ltext0
+.LLST139:
+	.4byte	.LVL635-.Ltext0
+	.4byte	.LVL637-1-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL615-1-.Ltext0
-	.4byte	.LFE220-.Ltext0
+	.4byte	.LVL637-1-.Ltext0
+	.4byte	.LFE230-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -44
+	.sleb128 -40
 	.4byte	0
 	.4byte	0
-.LLST138:
-	.4byte	.LVL616-.Ltext0
-	.4byte	.LVL620-.Ltext0
+.LLST140:
+	.4byte	.LVL638-.Ltext0
+	.4byte	.LVL642-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL624-.Ltext0
-	.4byte	.LVL629-.Ltext0
+	.4byte	.LVL646-.Ltext0
+	.4byte	.LVL651-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST139:
-	.4byte	.LVL618-.Ltext0
-	.4byte	.LVL626-.Ltext0
+.LLST141:
+	.4byte	.LVL640-.Ltext0
+	.4byte	.LVL648-.Ltext0
 	.2byte	0x1
 	.byte	0x54
-	.4byte	.LVL627-.Ltext0
-	.4byte	.LVL631-.Ltext0
+	.4byte	.LVL649-.Ltext0
+	.4byte	.LFE230-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST140:
-	.4byte	.LVL617-.Ltext0
-	.4byte	.LVL619-.Ltext0
+.LLST142:
+	.4byte	.LVL639-.Ltext0
+	.4byte	.LVL641-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL625-.Ltext0
-	.4byte	.LVL628-.Ltext0
+	.4byte	.LVL647-.Ltext0
+	.4byte	.LVL650-.Ltext0
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
-.LLST55:
-	.4byte	.LVL179-.Ltext0
-	.4byte	.LVL180-.Ltext0
+.LLST53:
+	.4byte	.LVL176-.Ltext0
+	.4byte	.LVL177-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL182-.Ltext0
-	.4byte	.LVL185-.Ltext0
+	.4byte	.LVL177-.Ltext0
+	.4byte	.LFE229-.Ltext0
 	.2byte	0x1
-	.byte	0x51
+	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST56:
-	.4byte	.LVL179-.Ltext0
-	.4byte	.LVL181-.Ltext0
+.LLST54:
+	.4byte	.LVL176-.Ltext0
+	.4byte	.LVL178-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL182-.Ltext0
-	.4byte	.LVL183-.Ltext0
+	.4byte	.LVL179-.Ltext0
+	.4byte	.LVL180-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL184-.Ltext0
-	.4byte	.LVL185-.Ltext0
+	.4byte	.LVL181-.Ltext0
+	.4byte	.LVL182-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	0
 	.4byte	0
-.LLST150:
-	.4byte	.LVL708-.Ltext0
-	.4byte	.LVL714-.Ltext0
+.LLST152:
+	.4byte	.LVL721-.Ltext0
+	.4byte	.LVL727-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL714-.Ltext0
-	.4byte	.LFE215-.Ltext0
+	.4byte	.LVL727-.Ltext0
+	.4byte	.LFE225-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST151:
-	.4byte	.LVL719-.Ltext0
-	.4byte	.LVL724-1-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL727-.Ltext0
-	.4byte	.LVL729-.Ltext0
-	.2byte	0x1
-	.byte	0x53
+.LLST153:
 	.4byte	.LVL732-.Ltext0
 	.4byte	.LVL734-1-.Ltext0
 	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL746-.Ltext0
-	.4byte	.LVL747-.Ltext0
+	.byte	0x52
+	.4byte	.LVL737-.Ltext0
+	.4byte	.LVL738-.Ltext0
 	.2byte	0x1
-	.byte	0x53
-	.4byte	0
-	.4byte	0
-.LLST152:
-	.4byte	.LVL726-.Ltext0
-	.4byte	.LVL731-.Ltext0
+	.byte	0x52
+	.4byte	.LVL740-.Ltext0
+	.4byte	.LVL741-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL751-.Ltext0
+	.4byte	.LVL752-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	0
 	.4byte	0
-.LLST153:
-	.4byte	.LVL709-.Ltext0
-	.4byte	.LVL711-.Ltext0
+.LLST154:
+	.4byte	.LVL736-.Ltext0
+	.4byte	.LVL741-1-.Ltext0
 	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL717-.Ltext0
-	.4byte	.LVL721-.Ltext0
+	.byte	0x51
+	.4byte	.LVL745-.Ltext0
+	.4byte	.LVL746-.Ltext0
 	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL721-.Ltext0
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST155:
 	.4byte	.LVL722-.Ltext0
+	.4byte	.LVL724-.Ltext0
 	.2byte	0x1
-	.byte	0x51
+	.byte	0x53
 	.4byte	.LVL730-.Ltext0
-	.4byte	.LVL733-.Ltext0
-	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL733-.Ltext0
-	.4byte	.LVL734-1-.Ltext0
+	.4byte	.LVL731-.Ltext0
 	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL738-.Ltext0
-	.4byte	.LVL740-.Ltext0
+	.byte	0x53
+	.4byte	.LVL739-.Ltext0
+	.4byte	.LVL741-1-.Ltext0
 	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL744-.Ltext0
-	.4byte	.LVL748-.Ltext0
+	.byte	0x53
+	.4byte	.LVL745-.Ltext0
+	.4byte	.LVL747-1-.Ltext0
 	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL748-.Ltext0
+	.byte	0x53
 	.4byte	.LVL749-.Ltext0
-	.2byte	0x1
-	.byte	0x51
 	.4byte	.LVL751-.Ltext0
-	.4byte	.LVL753-.Ltext0
 	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL757-.Ltext0
-	.4byte	.LVL759-.Ltext0
+	.byte	0x53
+	.4byte	.LVL755-.Ltext0
+	.4byte	.LVL756-.Ltext0
 	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL760-.Ltext0
+	.byte	0x53
+	.4byte	.LVL759-.Ltext0
 	.4byte	.LVL761-.Ltext0
 	.2byte	0x1
-	.byte	0x50
+	.byte	0x53
 	.4byte	.LVL762-.Ltext0
-	.4byte	.LFE215-.Ltext0
+	.4byte	.LVL765-.Ltext0
 	.2byte	0x1
-	.byte	0x50
+	.byte	0x53
+	.4byte	.LVL766-.Ltext0
+	.4byte	.LFE225-.Ltext0
+	.2byte	0x1
+	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST154:
-	.4byte	.LVL710-.Ltext0
-	.4byte	.LVL728-.Ltext0
+.LLST156:
+	.4byte	.LVL723-.Ltext0
+	.4byte	.LVL733-.Ltext0
 	.2byte	0x1
-	.byte	0x59
-	.4byte	.LVL732-.Ltext0
-	.4byte	.LVL738-.Ltext0
+	.byte	0x58
+	.4byte	.LVL740-.Ltext0
+	.4byte	.LVL745-.Ltext0
 	.2byte	0x1
-	.byte	0x59
-	.4byte	.LVL746-.Ltext0
-	.4byte	.LFE215-.Ltext0
+	.byte	0x58
+	.4byte	.LVL751-.Ltext0
+	.4byte	.LFE225-.Ltext0
 	.2byte	0x1
-	.byte	0x59
+	.byte	0x58
 	.4byte	0
 	.4byte	0
-.LLST155:
-	.4byte	.LVL711-.Ltext0
-	.4byte	.LVL712-.Ltext0
+.LLST157:
+	.4byte	.LVL724-.Ltext0
+	.4byte	.LVL725-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL725-.Ltext0
-	.4byte	.LVL734-1-.Ltext0
+	.4byte	.LVL735-.Ltext0
+	.4byte	.LVL741-1-.Ltext0
 	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL738-.Ltext0
-	.4byte	.LVL739-.Ltext0
+	.byte	0x53
+	.4byte	.LVL745-.Ltext0
+	.4byte	.LVL747-1-.Ltext0
 	.2byte	0x1
-	.byte	0x51
+	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST156:
-	.4byte	.LVL712-.Ltext0
-	.4byte	.LVL713-.Ltext0
+.LLST158:
+	.4byte	.LVL725-.Ltext0
+	.4byte	.LVL726-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL715-.Ltext0
-	.4byte	.LVL716-1-.Ltext0
+	.4byte	.LVL728-.Ltext0
+	.4byte	.LVL729-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL717-.Ltext0
-	.4byte	.LVL723-.Ltext0
-	.2byte	0x1
-	.byte	0x5a
 	.4byte	.LVL730-.Ltext0
-	.4byte	.LVL734-1-.Ltext0
-	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL734-1-.Ltext0
-	.4byte	.LVL738-.Ltext0
+	.4byte	.LVL731-.Ltext0
 	.2byte	0x1
-	.byte	0x5a
-	.4byte	.LVL738-.Ltext0
+	.byte	0x53
 	.4byte	.LVL739-.Ltext0
+	.4byte	.LVL741-1-.Ltext0
 	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL742-.Ltext0
-	.4byte	.LVL743-.Ltext0
-	.2byte	0x1
-	.byte	0x51
+	.byte	0x53
 	.4byte	.LVL745-.Ltext0
-	.4byte	.LVL746-.Ltext0
+	.4byte	.LVL747-1-.Ltext0
 	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL746-.Ltext0
-	.4byte	.LVL751-.Ltext0
+	.byte	0x53
+	.4byte	.LVL748-.Ltext0
+	.4byte	.LVL749-.Ltext0
 	.2byte	0x1
-	.byte	0x5a
+	.byte	0x53
+	.4byte	.LVL750-.Ltext0
 	.4byte	.LVL751-.Ltext0
-	.4byte	.LVL752-.Ltext0
 	.2byte	0x1
-	.byte	0x52
+	.byte	0x53
 	.4byte	.LVL755-.Ltext0
 	.4byte	.LVL756-.Ltext0
 	.2byte	0x1
-	.byte	0x52
+	.byte	0x53
 	.4byte	.LVL758-.Ltext0
 	.4byte	.LVL759-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL759-.Ltext0
-	.4byte	.LFE215-.Ltext0
+	.byte	0x53
+	.4byte	.LVL760-.Ltext0
+	.4byte	.LVL761-.Ltext0
 	.2byte	0x1
-	.byte	0x5a
+	.byte	0x53
+	.4byte	.LVL763-.Ltext0
+	.4byte	.LVL764-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL765-.Ltext0
+	.4byte	.LVL766-.Ltext0
+	.2byte	0x1
+	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST157:
-	.4byte	.LVL713-.Ltext0
-	.4byte	.LVL715-.Ltext0
+.LLST159:
+	.4byte	.LVL726-.Ltext0
+	.4byte	.LVL728-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL718-.Ltext0
-	.4byte	.LVL720-.Ltext0
-	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL732-.Ltext0
+	.4byte	.LVL731-.Ltext0
 	.4byte	.LVL734-1-.Ltext0
 	.2byte	0x1
-	.byte	0x52
+	.byte	0x53
+	.4byte	.LVL740-.Ltext0
+	.4byte	.LVL741-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL751-.Ltext0
+	.4byte	.LVL753-.Ltext0
+	.2byte	0x1
+	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST286:
-	.4byte	.LVL1563-.Ltext0
-	.4byte	.LVL1566-.Ltext0
+	.4byte	.LVL1553-.Ltext0
+	.4byte	.LVL1556-.Ltext0
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL1576-.Ltext0
-	.4byte	.LVL1578-.Ltext0
+	.4byte	.LVL1566-.Ltext0
+	.4byte	.LVL1568-.Ltext0
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL1579-.Ltext0
-	.4byte	.LFE214-.Ltext0
+	.4byte	.LVL1569-.Ltext0
+	.4byte	.LFE224-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST54:
-	.4byte	.LVL177-.Ltext0
-	.4byte	.LVL178-.Ltext0
+.LLST52:
+	.4byte	.LVL174-.Ltext0
+	.4byte	.LVL175-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST147:
-	.4byte	.LVL672-.Ltext0
-	.4byte	.LVL674-.Ltext0
+.LLST150:
+	.4byte	.LVL694-.Ltext0
+	.4byte	.LVL696-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL675-.Ltext0
-	.4byte	.LVL677-.Ltext0
+	.4byte	.LVL697-.Ltext0
+	.4byte	.LVL699-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL690-.Ltext0
-	.4byte	.LVL691-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL692-.Ltext0
-	.4byte	.LVL693-.Ltext0
-	.2byte	0x1
-	.byte	0x53
 	.4byte	.LVL703-.Ltext0
 	.4byte	.LVL704-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL706-.Ltext0
-	.4byte	.LVL707-.Ltext0
-	.2byte	0x1
-	.byte	0x52
-	.4byte	0
-	.4byte	0
-.LLST148:
-	.4byte	.LVL673-.Ltext0
-	.4byte	.LVL675-.Ltext0
-	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL680-.Ltext0
-	.4byte	.LVL681-.Ltext0
-	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL682-.Ltext0
-	.4byte	.LVL683-.Ltext0
-	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL684-.Ltext0
-	.4byte	.LVL685-.Ltext0
-	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL686-.Ltext0
-	.4byte	.LVL687-.Ltext0
-	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL688-.Ltext0
-	.4byte	.LVL690-.Ltext0
-	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL690-.Ltext0
-	.4byte	.LVL693-.Ltext0
-	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL693-.Ltext0
-	.4byte	.LVL694-1-.Ltext0
+	.4byte	.LVL705-.Ltext0
+	.4byte	.LVL706-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL696-.Ltext0
-	.4byte	.LVL697-.Ltext0
+	.4byte	.LVL714-.Ltext0
+	.4byte	.LVL715-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	0
 	.4byte	0
-.LLST149:
-	.4byte	.LVL673-.Ltext0
-	.4byte	.LVL676-.Ltext0
+.LLST151:
+	.4byte	.LVL695-.Ltext0
+	.4byte	.LVL698-.Ltext0
 	.2byte	0x1
 	.byte	0x57
-	.4byte	.LVL689-.Ltext0
-	.4byte	.LVL693-.Ltext0
+	.4byte	.LVL702-.Ltext0
+	.4byte	.LVL706-.Ltext0
 	.2byte	0x1
 	.byte	0x57
-	.4byte	.LVL695-.Ltext0
-	.4byte	.LFE210-.Ltext0
+	.4byte	.LVL708-.Ltext0
+	.4byte	.LVL718-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL719-.Ltext0
+	.4byte	.LVL720-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
 .LLST223:
-	.4byte	.LVL1159-.Ltext0
-	.4byte	.LVL1164-.Ltext0
+	.4byte	.LVL1152-.Ltext0
+	.4byte	.LVL1157-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL1165-.Ltext0
-	.4byte	.LFE209-.Ltext0
+	.4byte	.LVL1158-.Ltext0
+	.4byte	.LFE219-.Ltext0
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
-.LLST145:
-	.4byte	.LVL661-.Ltext0
-	.4byte	.LVL662-.Ltext0
+.LLST147:
+	.4byte	.LVL680-.Ltext0
+	.4byte	.LVL682-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL682-.Ltext0
+	.4byte	.LFE217-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST148:
+	.4byte	.LVL683-.Ltext0
+	.4byte	.LVL684-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL665-.Ltext0
-	.4byte	.LVL666-.Ltext0
+	.4byte	.LVL687-.Ltext0
+	.4byte	.LVL688-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	0
 	.4byte	0
-.LLST146:
-	.4byte	.LVL660-.Ltext0
-	.4byte	.LVL661-.Ltext0
+.LLST149:
+	.4byte	.LVL681-.Ltext0
+	.4byte	.LVL683-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	0
 	.4byte	0
-.LLST216:
-	.4byte	.LVL1125-.Ltext0
-	.4byte	.LVL1129-.Ltext0
+.LLST215:
+	.4byte	.LVL1115-.Ltext0
+	.4byte	.LVL1119-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1131-.Ltext0
-	.4byte	.LVL1133-.Ltext0
+	.4byte	.LVL1121-.Ltext0
+	.4byte	.LVL1123-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST216:
+	.4byte	.LVL1116-.Ltext0
+	.4byte	.LVL1117-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1118-.Ltext0
+	.4byte	.LVL1120-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1121-.Ltext0
+	.4byte	.LVL1122-.Ltext0
 	.2byte	0x1
-	.byte	0x50
+	.byte	0x52
 	.4byte	0
 	.4byte	0
 .LLST217:
 	.4byte	.LVL1126-.Ltext0
-	.4byte	.LVL1127-.Ltext0
-	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1128-.Ltext0
-	.4byte	.LVL1130-.Ltext0
+	.4byte	.LVL1131-.Ltext0
 	.2byte	0x1
-	.byte	0x52
+	.byte	0x50
 	.4byte	.LVL1131-.Ltext0
-	.4byte	.LVL1132-.Ltext0
+	.4byte	.LFE214-.Ltext0
 	.2byte	0x1
-	.byte	0x52
+	.byte	0x5a
 	.4byte	0
 	.4byte	0
 .LLST218:
-	.4byte	.LVL1136-.Ltext0
-	.4byte	.LVL1141-.Ltext0
+	.4byte	.LVL1126-.Ltext0
+	.4byte	.LVL1127-.Ltext0
 	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL1141-.Ltext0
-	.4byte	.LFE204-.Ltext0
+	.byte	0x51
+	.4byte	.LVL1127-.Ltext0
+	.4byte	.LFE214-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
 .LLST219:
-	.4byte	.LVL1136-.Ltext0
-	.4byte	.LVL1141-.Ltext0
+	.4byte	.LVL1126-.Ltext0
+	.4byte	.LVL1128-.Ltext0
 	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL1141-.Ltext0
-	.4byte	.LFE204-.Ltext0
+	.byte	0x52
+	.4byte	.LVL1128-.Ltext0
+	.4byte	.LFE214-.Ltext0
 	.2byte	0x1
-	.byte	0x56
+	.byte	0x59
 	.4byte	0
 	.4byte	0
 .LLST220:
-	.4byte	.LVL1136-.Ltext0
-	.4byte	.LVL1137-.Ltext0
+	.4byte	.LVL1130-.Ltext0
+	.4byte	.LVL1132-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1137-.Ltext0
-	.4byte	.LFE204-.Ltext0
+	.byte	0x54
+	.4byte	.LVL1136-.Ltext0
+	.4byte	.LFE214-.Ltext0
 	.2byte	0x1
-	.byte	0x59
+	.byte	0x54
 	.4byte	0
 	.4byte	0
 .LLST221:
-	.4byte	.LVL1140-.Ltext0
-	.4byte	.LVL1142-.Ltext0
+	.4byte	.LVL1133-.Ltext0
+	.4byte	.LVL1134-1-.Ltext0
 	.2byte	0x1
-	.byte	0x54
-	.4byte	.LVL1144-.Ltext0
-	.4byte	.LFE204-.Ltext0
+	.byte	0x5c
+	.4byte	.LVL1135-.Ltext0
+	.4byte	.LVL1137-1-.Ltext0
 	.2byte	0x1
-	.byte	0x54
+	.byte	0x5c
+	.4byte	.LVL1139-.Ltext0
+	.4byte	.LVL1140-1-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
 	.4byte	0
 	.4byte	0
 .LLST222:
-	.4byte	.LVL1138-.Ltext0
-	.4byte	.LVL1139-.Ltext0
+	.4byte	.LVL1129-.Ltext0
+	.4byte	.LVL1130-.Ltext0
 	.2byte	0x1
-	.byte	0x53
+	.byte	0x56
 	.4byte	0
 	.4byte	0
 .LLST211:
-	.4byte	.LVL1104-.Ltext0
-	.4byte	.LVL1108-.Ltext0
+	.4byte	.LVL1099-.Ltext0
+	.4byte	.LVL1103-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1108-.Ltext0
-	.4byte	.LFE203-.Ltext0
+	.4byte	.LVL1103-.Ltext0
+	.4byte	.LFE213-.Ltext0
 	.2byte	0x1
-	.byte	0x58
+	.byte	0x57
 	.4byte	0
 	.4byte	0
 .LLST212:
-	.4byte	.LVL1104-.Ltext0
-	.4byte	.LVL1108-.Ltext0
+	.4byte	.LVL1099-.Ltext0
+	.4byte	.LVL1103-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL1108-.Ltext0
-	.4byte	.LFE203-.Ltext0
+	.4byte	.LVL1103-.Ltext0
+	.4byte	.LFE213-.Ltext0
 	.2byte	0x1
-	.byte	0x56
+	.byte	0x55
 	.4byte	0
 	.4byte	0
 .LLST213:
-	.4byte	.LVL1104-.Ltext0
-	.4byte	.LVL1105-.Ltext0
+	.4byte	.LVL1099-.Ltext0
+	.4byte	.LVL1100-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL1107-.Ltext0
-	.4byte	.LVL1109-.Ltext0
+	.4byte	.LVL1102-.Ltext0
+	.4byte	.LVL1104-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1119-.Ltext0
-	.4byte	.LVL1120-.Ltext0
-	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1120-.Ltext0
-	.4byte	.LVL1121-.Ltext0
+	.4byte	.LVL1111-.Ltext0
+	.4byte	.LVL1112-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST214:
-	.4byte	.LVL1107-.Ltext0
-	.4byte	.LVL1113-.Ltext0
-	.2byte	0x1
-	.byte	0x55
-	.4byte	.LVL1114-.Ltext0
-	.4byte	.LFE203-.Ltext0
+	.4byte	.LVL1105-.Ltext0
+	.4byte	.LVL1106-1-.Ltext0
 	.2byte	0x1
-	.byte	0x55
-	.4byte	0
-	.4byte	0
-.LLST215:
-	.4byte	.LVL1110-.Ltext0
-	.4byte	.LVL1111-1-.Ltext0
+	.byte	0x5c
+	.4byte	.LVL1107-.Ltext0
+	.4byte	.LVL1108-1-.Ltext0
 	.2byte	0x1
-	.byte	0x52
+	.byte	0x5c
 	.4byte	.LVL1112-.Ltext0
-	.4byte	.LVL1115-.Ltext0
+	.4byte	.LVL1113-1-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1121-.Ltext0
-	.4byte	.LVL1122-.Ltext0
-	.2byte	0x1
-	.byte	0x52
+	.byte	0x5c
 	.4byte	0
 	.4byte	0
-.LLST132:
-	.4byte	.LVL600-.Ltext0
-	.4byte	.LVL603-.Ltext0
-	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL604-.Ltext0
-	.4byte	.LVL606-1-.Ltext0
+.LLST134:
+	.4byte	.LVL623-.Ltext0
+	.4byte	.LVL626-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL609-.Ltext0
-	.4byte	.LVL610-.Ltext0
+	.4byte	.LVL627-.Ltext0
+	.4byte	.LVL628-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST133:
-	.4byte	.LVL600-.Ltext0
-	.4byte	.LVL604-.Ltext0
+.LLST135:
+	.4byte	.LVL623-.Ltext0
+	.4byte	.LVL627-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL604-.Ltext0
-	.4byte	.LFE202-.Ltext0
+	.4byte	.LVL627-.Ltext0
+	.4byte	.LFE212-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
-.LLST134:
-	.4byte	.LVL600-.Ltext0
-	.4byte	.LVL604-.Ltext0
+.LLST136:
+	.4byte	.LVL623-.Ltext0
+	.4byte	.LVL627-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL604-.Ltext0
-	.4byte	.LFE202-.Ltext0
+	.4byte	.LVL627-.Ltext0
+	.4byte	.LFE212-.Ltext0
 	.2byte	0x1
 	.byte	0x5a
 	.4byte	0
 	.4byte	0
-.LLST135:
-	.4byte	.LVL605-.Ltext0
-	.4byte	.LVL611-.Ltext0
+.LLST137:
+	.4byte	.LVL629-.Ltext0
+	.4byte	.LVL633-.Ltext0
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL612-.Ltext0
-	.4byte	.LFE202-.Ltext0
+	.4byte	.LVL634-.Ltext0
+	.4byte	.LFE212-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST189:
-	.4byte	.LVL926-.Ltext0
-	.4byte	.LVL927-.Ltext0
-	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL928-.Ltext0
-	.4byte	.LVL929-1-.Ltext0
-	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL929-.Ltext0
-	.4byte	.LFE201-.Ltext0
-	.2byte	0x1
-	.byte	0x50
-	.4byte	0
-	.4byte	0
-.LLST131:
-	.4byte	.LVL597-.Ltext0
-	.4byte	.LVL598-.Ltext0
+.LLST133:
+	.4byte	.LVL620-.Ltext0
+	.4byte	.LVL621-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST125:
-	.4byte	.LVL570-.Ltext0
-	.4byte	.LVL572-.Ltext0
+.LLST126:
+	.4byte	.LVL591-.Ltext0
+	.4byte	.LVL593-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL572-.Ltext0
-	.4byte	.LFE198-.Ltext0
+	.4byte	.LVL593-.Ltext0
+	.4byte	.LFE208-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST126:
-	.4byte	.LVL570-.Ltext0
-	.4byte	.LVL572-.Ltext0
+.LLST127:
+	.4byte	.LVL591-.Ltext0
+	.4byte	.LVL593-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL572-.Ltext0
-	.4byte	.LFE198-.Ltext0
+	.4byte	.LVL593-.Ltext0
+	.4byte	.LFE208-.Ltext0
 	.2byte	0x1
 	.byte	0x58
 	.4byte	0
 	.4byte	0
-.LLST127:
-	.4byte	.LVL576-.Ltext0
-	.4byte	.LVL577-.Ltext0
+.LLST128:
+	.4byte	.LVL597-.Ltext0
+	.4byte	.LVL598-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST128:
-	.4byte	.LVL571-.Ltext0
-	.4byte	.LVL579-.Ltext0
+.LLST129:
+	.4byte	.LVL592-.Ltext0
+	.4byte	.LVL600-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL580-.Ltext0
-	.4byte	.LFE198-.Ltext0
+	.4byte	.LVL601-.Ltext0
+	.4byte	.LFE208-.Ltext0
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
-.LLST121:
-	.4byte	.LVL553-.Ltext0
-	.4byte	.LVL555-.Ltext0
+.LLST122:
+	.4byte	.LVL574-.Ltext0
+	.4byte	.LVL576-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL555-.Ltext0
-	.4byte	.LVL558-.Ltext0
+	.4byte	.LVL576-.Ltext0
+	.4byte	.LVL579-.Ltext0
 	.2byte	0x1
 	.byte	0x54
-	.4byte	.LVL558-.Ltext0
-	.4byte	.LVL561-.Ltext0
+	.4byte	.LVL579-.Ltext0
+	.4byte	.LVL582-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL561-.Ltext0
-	.4byte	.LFE197-.Ltext0
+	.4byte	.LVL582-.Ltext0
+	.4byte	.LFE207-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST122:
-	.4byte	.LVL563-.Ltext0
-	.4byte	.LVL564-.Ltext0
+.LLST123:
+	.4byte	.LVL584-.Ltext0
+	.4byte	.LVL585-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL567-.Ltext0
-	.4byte	.LVL568-.Ltext0
+	.4byte	.LVL588-.Ltext0
+	.4byte	.LVL589-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL569-.Ltext0
-	.4byte	.LFE197-.Ltext0
+	.4byte	.LVL590-.Ltext0
+	.4byte	.LFE207-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST123:
-	.4byte	.LVL554-.Ltext0
-	.4byte	.LVL560-.Ltext0
+.LLST124:
+	.4byte	.LVL575-.Ltext0
+	.4byte	.LVL581-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST124:
-	.4byte	.LVL557-.Ltext0
-	.4byte	.LVL558-.Ltext0
+.LLST125:
+	.4byte	.LVL578-.Ltext0
+	.4byte	.LVL579-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL559-.Ltext0
-	.4byte	.LFE197-.Ltext0
+	.4byte	.LVL580-.Ltext0
+	.4byte	.LFE207-.Ltext0
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
-.LLST129:
-	.4byte	.LVL583-.Ltext0
-	.4byte	.LVL586-1-.Ltext0
+.LLST130:
+	.4byte	.LVL604-.Ltext0
+	.4byte	.LVL607-1-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL586-1-.Ltext0
-	.4byte	.LFE196-.Ltext0
+	.4byte	.LVL607-1-.Ltext0
+	.4byte	.LFE206-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST130:
-	.4byte	.LVL584-.Ltext0
-	.4byte	.LVL589-.Ltext0
+.LLST131:
+	.4byte	.LVL610-.Ltext0
+	.4byte	.LVL611-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL614-.Ltext0
+	.4byte	.LVL615-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL616-.Ltext0
+	.4byte	.LVL617-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL617-.Ltext0
+	.4byte	.LVL618-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL619-.Ltext0
+	.4byte	.LFE206-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST132:
+	.4byte	.LVL605-.Ltext0
+	.4byte	.LVL610-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL591-.Ltext0
-	.4byte	.LVL593-.Ltext0
+	.4byte	.LVL612-.Ltext0
+	.4byte	.LVL614-.Ltext0
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
-.LLST116:
-	.4byte	.LVL536-.Ltext0
-	.4byte	.LVL540-.Ltext0
+.LLST117:
+	.4byte	.LVL553-.Ltext0
+	.4byte	.LVL557-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL540-.Ltext0
-	.4byte	.LFE194-.Ltext0
+	.4byte	.LVL557-.Ltext0
+	.4byte	.LFE204-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST117:
-	.4byte	.LVL539-.Ltext0
-	.4byte	.LVL550-.Ltext0
+.LLST118:
+	.4byte	.LVL556-.Ltext0
+	.4byte	.LVL567-.Ltext0
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
-.LLST118:
-	.4byte	.LVL542-.Ltext0
-	.4byte	.LVL545-.Ltext0
+.LLST119:
+	.4byte	.LVL559-.Ltext0
+	.4byte	.LVL562-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL546-.Ltext0
-	.4byte	.LVL547-.Ltext0
+	.4byte	.LVL563-.Ltext0
+	.4byte	.LVL564-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL548-.Ltext0
-	.4byte	.LVL549-.Ltext0
+	.4byte	.LVL565-.Ltext0
+	.4byte	.LVL568-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL569-.Ltext0
+	.4byte	.LVL570-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL573-.Ltext0
+	.4byte	.LFE204-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST119:
-	.4byte	.LVL543-.Ltext0
-	.4byte	.LVL546-.Ltext0
+.LLST120:
+	.4byte	.LVL560-.Ltext0
+	.4byte	.LVL563-.Ltext0
 	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL549-.Ltext0
-	.4byte	.LVL551-1-.Ltext0
+	.byte	0x52
+	.4byte	.LVL566-.Ltext0
+	.4byte	.LVL571-1-.Ltext0
 	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL552-.Ltext0
-	.4byte	.LFE194-.Ltext0
+	.byte	0x52
+	.4byte	.LVL572-.Ltext0
+	.4byte	.LFE204-.Ltext0
 	.2byte	0x1
-	.byte	0x53
+	.byte	0x52
 	.4byte	0
 	.4byte	0
-.LLST120:
-	.4byte	.LVL544-.Ltext0
-	.4byte	.LVL546-.Ltext0
+.LLST121:
+	.4byte	.LVL561-.Ltext0
+	.4byte	.LVL563-.Ltext0
 	.2byte	0x1
 	.byte	0x5a
-	.4byte	.LVL549-.Ltext0
-	.4byte	.LFE194-.Ltext0
+	.4byte	.LVL566-.Ltext0
+	.4byte	.LFE204-.Ltext0
 	.2byte	0x1
 	.byte	0x5a
 	.4byte	0
 	.4byte	0
-.LLST113:
-	.4byte	.LVL524-.Ltext0
-	.4byte	.LVL525-.Ltext0
+.LLST114:
+	.4byte	.LVL539-.Ltext0
+	.4byte	.LVL540-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL525-.Ltext0
-	.4byte	.LFE193-.Ltext0
+	.4byte	.LVL540-.Ltext0
+	.4byte	.LFE203-.Ltext0
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
-.LLST114:
-	.4byte	.LVL524-.Ltext0
-	.4byte	.LVL525-.Ltext0
+.LLST115:
+	.4byte	.LVL539-.Ltext0
+	.4byte	.LVL541-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL525-.Ltext0
-	.4byte	.LVL531-.Ltext0
+	.4byte	.LVL541-.Ltext0
+	.4byte	.LVL548-.Ltext0
 	.2byte	0x1
 	.byte	0x58
 	.4byte	0
 	.4byte	0
-.LLST115:
-	.4byte	.LVL528-.Ltext0
-	.4byte	.LVL529-.Ltext0
+.LLST116:
+	.4byte	.LVL545-.Ltext0
+	.4byte	.LVL546-.Ltext0
 	.2byte	0x1
 	.byte	0x58
-	.4byte	.LVL531-.Ltext0
-	.4byte	.LFE193-.Ltext0
+	.4byte	.LVL548-.Ltext0
+	.4byte	.LFE203-.Ltext0
 	.2byte	0x1
 	.byte	0x58
 	.4byte	0
 	.4byte	0
-.LLST46:
-	.4byte	.LVL146-.Ltext0
-	.4byte	.LVL148-.Ltext0
+.LLST43:
+	.4byte	.LVL141-.Ltext0
+	.4byte	.LVL142-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL149-.Ltext0
-	.4byte	.LVL150-.Ltext0
+	.4byte	.LVL142-.Ltext0
+	.4byte	.LVL145-.Ltext0
 	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL152-.Ltext0
-	.4byte	.LVL155-.Ltext0
+	.byte	0x52
+	.4byte	.LVL147-.Ltext0
+	.4byte	.LFE201-.Ltext0
 	.2byte	0x1
-	.byte	0x50
+	.byte	0x52
 	.4byte	0
 	.4byte	0
-.LLST47:
-	.4byte	.LVL147-.Ltext0
-	.4byte	.LVL149-.Ltext0
+.LLST44:
+	.4byte	.LVL143-.Ltext0
+	.4byte	.LVL144-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL151-.Ltext0
-	.4byte	.LVL153-.Ltext0
+	.4byte	.LVL146-.Ltext0
+	.4byte	.LVL148-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL154-.Ltext0
-	.4byte	.LVL156-.Ltext0
+	.4byte	.LVL149-.Ltext0
+	.4byte	.LVL150-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST45:
-	.4byte	.LVL144-.Ltext0
-	.4byte	.LVL145-1-.Ltext0
+.LLST42:
+	.4byte	.LVL139-.Ltext0
+	.4byte	.LVL140-1-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST42:
+.LLST39:
+	.4byte	.LVL130-.Ltext0
+	.4byte	.LVL134-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL134-.Ltext0
 	.4byte	.LVL135-.Ltext0
-	.4byte	.LVL139-1-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL140-.Ltext0
-	.4byte	.LVL143-.Ltext0
+	.4byte	.LVL136-.Ltext0
+	.4byte	.LFE199-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST43:
-	.4byte	.LVL135-.Ltext0
-	.4byte	.LVL138-.Ltext0
+.LLST40:
+	.4byte	.LVL130-.Ltext0
+	.4byte	.LVL133-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL140-.Ltext0
-	.4byte	.LVL141-.Ltext0
+	.4byte	.LVL134-.Ltext0
+	.4byte	.LVL137-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL142-.Ltext0
-	.4byte	.LFE189-.Ltext0
+	.4byte	.LVL138-.Ltext0
+	.4byte	.LFE199-.Ltext0
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
-.LLST44:
-	.4byte	.LVL136-.Ltext0
-	.4byte	.LVL137-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL140-.Ltext0
-	.4byte	.LFE189-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	0
-	.4byte	0
-.LLST40:
-	.4byte	.LVL128-.Ltext0
-	.4byte	.LVL131-.Ltext0
-	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL131-.Ltext0
-	.4byte	.LFE188-.Ltext0
-	.2byte	0x1
-	.byte	0x58
-	.4byte	0
-	.4byte	0
 .LLST41:
-	.4byte	.LVL128-.Ltext0
-	.4byte	.LVL130-.Ltext0
-	.2byte	0x1
-	.byte	0x51
 	.4byte	.LVL131-.Ltext0
 	.4byte	.LVL132-.Ltext0
 	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL133-.Ltext0
+	.byte	0x53
 	.4byte	.LVL134-.Ltext0
+	.4byte	.LFE199-.Ltext0
 	.2byte	0x1
-	.byte	0x51
+	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST37:
-	.4byte	.LVL116-.Ltext0
-	.4byte	.LVL120-.Ltext0
+	.4byte	.LVL123-.Ltext0
+	.4byte	.LVL126-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL121-.Ltext0
-	.4byte	.LFE187-.Ltext0
+	.4byte	.LVL126-.Ltext0
+	.4byte	.LFE198-.Ltext0
 	.2byte	0x1
-	.byte	0x50
+	.byte	0x58
 	.4byte	0
 	.4byte	0
 .LLST38:
-	.4byte	.LVL117-.Ltext0
-	.4byte	.LVL122-.Ltext0
-	.2byte	0x1
-	.byte	0x5c
 	.4byte	.LVL123-.Ltext0
-	.4byte	.LVL124-.Ltext0
-	.2byte	0x1
-	.byte	0x5c
-	.4byte	0
-	.4byte	0
-.LLST30:
-	.4byte	.LVL90-.Ltext0
-	.4byte	.LVL109-.Ltext0
-	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL110-.Ltext0
-	.4byte	.LFE186-.Ltext0
-	.2byte	0x1
-	.byte	0x50
-	.4byte	0
-	.4byte	0
-.LLST31:
-	.4byte	.LVL91-.Ltext0
-	.4byte	.LVL102-.Ltext0
+	.4byte	.LVL125-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL103-.Ltext0
-	.4byte	.LVL104-.Ltext0
+	.4byte	.LVL126-.Ltext0
+	.4byte	.LVL127-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL105-.Ltext0
-	.4byte	.LFE186-.Ltext0
+	.4byte	.LVL128-.Ltext0
+	.4byte	.LVL129-.Ltext0
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
-.LLST32:
-	.4byte	.LVL92-.Ltext0
-	.4byte	.LVL107-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL108-.Ltext0
-	.4byte	.LVL111-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL112-.Ltext0
-	.4byte	.LFE186-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	0
-	.4byte	0
-.LLST33:
-	.4byte	.LVL93-.Ltext0
-	.4byte	.LVL95-.Ltext0
-	.2byte	0x1
-	.byte	0x56
-	.4byte	0
-	.4byte	0
-.LLST34:
-	.4byte	.LVL94-.Ltext0
-	.4byte	.LVL101-.Ltext0
-	.2byte	0x1
-	.byte	0x5c
-	.4byte	.LVL105-.Ltext0
-	.4byte	.LFE186-.Ltext0
-	.2byte	0x1
-	.byte	0x5c
-	.4byte	0
-	.4byte	0
 .LLST35:
-	.4byte	.LVL97-.Ltext0
-	.4byte	.LVL99-.Ltext0
-	.2byte	0x1
-	.byte	0x54
-	.4byte	.LVL100-.Ltext0
-	.4byte	.LVL106-.Ltext0
-	.2byte	0x1
-	.byte	0x54
-	.4byte	.LVL108-.Ltext0
-	.4byte	.LVL110-.Ltext0
-	.2byte	0x1
-	.byte	0x54
-	.4byte	0
-	.4byte	0
-.LLST29:
-	.4byte	.LVL85-.Ltext0
-	.4byte	.LVL87-.Ltext0
-	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL88-.Ltext0
-	.4byte	.LVL89-.Ltext0
+	.4byte	.LVL113-.Ltext0
+	.4byte	.LVL117-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	0
-	.4byte	0
-.LLST26:
-	.4byte	.LVL72-.Ltext0
-	.4byte	.LVL74-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL79-.Ltext0
-	.4byte	.LVL81-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL83-.Ltext0
-	.4byte	.LFE181-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	0
-	.4byte	0
-.LLST27:
-	.4byte	.LVL72-.Ltext0
-	.4byte	.LVL75-.Ltext0
-	.2byte	0x1
-	.byte	0x5c
-	.4byte	.LVL77-.Ltext0
-	.4byte	.LVL78-.Ltext0
-	.2byte	0x1
-	.byte	0x5c
-	.4byte	.LVL82-.Ltext0
-	.4byte	.LVL84-.Ltext0
-	.2byte	0x1
-	.byte	0x5c
-	.4byte	0
-	.4byte	0
-.LLST28:
-	.4byte	.LVL72-.Ltext0
-	.4byte	.LVL73-.Ltext0
-	.2byte	0x1
-	.byte	0x5e
-	.4byte	.LVL80-.Ltext0
-	.4byte	.LVL84-.Ltext0
+	.4byte	.LVL118-.Ltext0
+	.4byte	.LFE197-.Ltext0
 	.2byte	0x1
-	.byte	0x5e
+	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST94:
-	.4byte	.LVL406-.Ltext0
-	.4byte	.LVL409-.Ltext0
+.LLST25:
+	.4byte	.LVL75-.Ltext0
+	.4byte	.LVL77-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL409-.Ltext0
-	.4byte	.LFE180-.Ltext0
+	.4byte	.LVL78-.Ltext0
+	.4byte	.LVL79-.Ltext0
 	.2byte	0x1
-	.byte	0x56
+	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST95:
-	.4byte	.LVL406-.Ltext0
-	.4byte	.LVL407-1-.Ltext0
-	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL409-.Ltext0
-	.4byte	.LFE180-.Ltext0
+.LLST24:
+	.4byte	.LVL73-.Ltext0
+	.4byte	.LVL74-.Ltext0
 	.2byte	0x1
-	.byte	0x51
+	.byte	0x5e
 	.4byte	0
 	.4byte	0
-.LLST25:
+.LLST23:
 	.4byte	.LVL69-.Ltext0
 	.4byte	.LVL70-.Ltext0
 	.2byte	0x1
@@ -41117,24 +39811,24 @@ check_vpc_table:
 	.4byte	0
 	.4byte	0
 .LLST84:
-	.4byte	.LVL362-.Ltext0
+	.4byte	.LVL363-.Ltext0
 	.4byte	.LVL364-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
 .LLST85:
-	.4byte	.LVL362-.Ltext0
 	.4byte	.LVL363-.Ltext0
+	.4byte	.LVL365-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL363-.Ltext0
-	.4byte	.LFE176-.Ltext0
+	.4byte	.LVL365-.Ltext0
+	.4byte	.LFE186-.Ltext0
 	.2byte	0x1
-	.byte	0x56
+	.byte	0x57
 	.4byte	0
 	.4byte	0
-.LLST24:
+.LLST22:
 	.4byte	.LVL65-.Ltext0
 	.4byte	.LVL66-.Ltext0
 	.2byte	0x1
@@ -41145,95 +39839,88 @@ check_vpc_table:
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST23:
+.LLST21:
+	.4byte	.LVL61-.Ltext0
 	.4byte	.LVL62-.Ltext0
-	.4byte	.LVL63-1-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST22:
-	.4byte	.LVL59-.Ltext0
-	.4byte	.LVL60-1-.Ltext0
+.LLST20:
+	.4byte	.LVL57-.Ltext0
+	.4byte	.LVL58-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL60-1-.Ltext0
-	.4byte	.LFE173-.Ltext0
+	.4byte	.LVL58-.Ltext0
+	.4byte	.LFE183-.Ltext0
 	.2byte	0x1
-	.byte	0x56
+	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST20:
-	.4byte	.LVL54-.Ltext0
-	.4byte	.LVL56-1-.Ltext0
+.LLST18:
+	.4byte	.LVL51-.Ltext0
+	.4byte	.LVL52-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL56-1-.Ltext0
-	.4byte	.LFE172-.Ltext0
+	.4byte	.LVL52-.Ltext0
+	.4byte	.LFE182-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
-.LLST21:
-	.4byte	.LVL54-.Ltext0
-	.4byte	.LVL55-.Ltext0
+.LLST19:
+	.4byte	.LVL51-.Ltext0
+	.4byte	.LVL53-.Ltext0
 	.2byte	0x1
 	.byte	0x51
+	.4byte	.LVL53-.Ltext0
 	.4byte	.LVL55-.Ltext0
-	.4byte	.LVL57-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST209:
-	.4byte	.LVL1071-.Ltext0
-	.4byte	.LVL1103-.Ltext0
-	.2byte	0x1
-	.byte	0x57
-	.4byte	0
-	.4byte	0
 .LLST210:
-	.4byte	.LVL1074-.Ltext0
-	.4byte	.LVL1075-.Ltext0
+	.4byte	.LVL1077-.Ltext0
+	.4byte	.LVL1078-1-.Ltext0
 	.2byte	0x1
-	.byte	0x56
-	.4byte	.LVL1079-.Ltext0
+	.byte	0x5c
 	.4byte	.LVL1080-.Ltext0
+	.4byte	.LVL1081-1-.Ltext0
 	.2byte	0x1
-	.byte	0x56
-	.4byte	.LVL1081-.Ltext0
-	.4byte	.LVL1090-.Ltext0
+	.byte	0x5c
+	.4byte	.LVL1087-.Ltext0
+	.4byte	.LVL1088-1-.Ltext0
 	.2byte	0x1
-	.byte	0x56
+	.byte	0x5c
 	.4byte	.LVL1091-.Ltext0
-	.4byte	.LVL1097-.Ltext0
+	.4byte	.LVL1092-1-.Ltext0
 	.2byte	0x1
-	.byte	0x56
+	.byte	0x5c
 	.4byte	0
 	.4byte	0
 .LLST82:
-	.4byte	.LVL355-.Ltext0
 	.4byte	.LVL356-.Ltext0
+	.4byte	.LVL357-.Ltext0
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL357-.Ltext0
 	.4byte	.LVL358-.Ltext0
+	.4byte	.LVL359-.Ltext0
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL359-.Ltext0
-	.4byte	.LFE170-.Ltext0
+	.4byte	.LVL360-.Ltext0
+	.4byte	.LFE180-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
 .LLST83:
-	.4byte	.LVL360-.Ltext0
-	.4byte	.LVL361-1-.Ltext0
+	.4byte	.LVL361-.Ltext0
+	.4byte	.LVL362-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST206:
+.LLST207:
 	.4byte	.LVL1060-.Ltext0
 	.4byte	.LVL1061-.Ltext0
 	.2byte	0x1
@@ -41244,7 +39931,7 @@ check_vpc_table:
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST207:
+.LLST208:
 	.4byte	.LVL1052-.Ltext0
 	.4byte	.LVL1057-.Ltext0
 	.2byte	0x1
@@ -41258,12 +39945,12 @@ check_vpc_table:
 	.2byte	0x1
 	.byte	0x55
 	.4byte	.LVL1070-.Ltext0
-	.4byte	.LFE169-.Ltext0
+	.4byte	.LFE179-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST208:
+.LLST209:
 	.4byte	.LVL1057-.Ltext0
 	.4byte	.LVL1060-.Ltext0
 	.2byte	0x1
@@ -41278,1050 +39965,1080 @@ check_vpc_table:
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST19:
-	.4byte	.LVL51-.Ltext0
-	.4byte	.LVL52-.Ltext0
-	.2byte	0x1
-	.byte	0x50
-	.4byte	0
-	.4byte	0
-.LLST173:
-	.4byte	.LVL836-.Ltext0
-	.4byte	.LVL839-.Ltext0
+.LLST175:
+	.4byte	.LVL834-.Ltext0
+	.4byte	.LVL837-.Ltext0
 	.2byte	0x1
 	.byte	0x55
+	.4byte	.LVL848-.Ltext0
 	.4byte	.LVL850-.Ltext0
-	.4byte	.LVL852-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST174:
-	.4byte	.LVL840-.Ltext0
-	.4byte	.LVL850-.Ltext0
+.LLST176:
+	.4byte	.LVL838-.Ltext0
+	.4byte	.LVL848-.Ltext0
 	.2byte	0x1
 	.byte	0x57
-	.4byte	.LVL852-.Ltext0
-	.4byte	.LVL853-.Ltext0
+	.4byte	.LVL850-.Ltext0
+	.4byte	.LFE176-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
-.LLST175:
-	.4byte	.LVL838-.Ltext0
-	.4byte	.LVL850-.Ltext0
+.LLST177:
+	.4byte	.LVL836-.Ltext0
+	.4byte	.LVL848-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL852-.Ltext0
-	.4byte	.LVL853-.Ltext0
+	.4byte	.LVL850-.Ltext0
+	.4byte	.LFE176-.Ltext0
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
-.LLST176:
-	.4byte	.LVL839-.Ltext0
-	.4byte	.LVL846-.Ltext0
+.LLST178:
+	.4byte	.LVL837-.Ltext0
+	.4byte	.LVL844-.Ltext0
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL847-.Ltext0
-	.4byte	.LVL850-.Ltext0
+	.4byte	.LVL845-.Ltext0
+	.4byte	.LVL848-.Ltext0
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL852-.Ltext0
-	.4byte	.LVL853-.Ltext0
+	.4byte	.LVL850-.Ltext0
+	.4byte	.LFE176-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST111:
-	.4byte	.LVL519-.Ltext0
-	.4byte	.LVL521-.Ltext0
+.LLST112:
+	.4byte	.LVL534-.Ltext0
+	.4byte	.LVL536-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST112:
-	.4byte	.LVL519-.Ltext0
-	.4byte	.LVL520-.Ltext0
+.LLST113:
+	.4byte	.LVL534-.Ltext0
+	.4byte	.LVL535-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL520-.Ltext0
-	.4byte	.LFE165-.Ltext0
+	.4byte	.LVL535-.Ltext0
+	.4byte	.LFE175-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
-.LLST16:
-	.4byte	.LVL43-.Ltext0
-	.4byte	.LVL44-1-.Ltext0
+.LLST15:
+	.4byte	.LVL41-.Ltext0
+	.4byte	.LVL42-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL44-1-.Ltext0
-	.4byte	.LFE163-.Ltext0
+	.4byte	.LVL42-.Ltext0
+	.4byte	.LFE173-.Ltext0
 	.2byte	0x1
-	.byte	0x57
+	.byte	0x56
 	.4byte	0
 	.4byte	0
-.LLST17:
-	.4byte	.LVL47-.Ltext0
-	.4byte	.LVL49-.Ltext0
+.LLST16:
+	.4byte	.LVL46-.Ltext0
+	.4byte	.LVL48-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST18:
-	.4byte	.LVL45-.Ltext0
-	.4byte	.LVL48-.Ltext0
+.LLST17:
+	.4byte	.LVL44-.Ltext0
+	.4byte	.LVL47-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
 .LLST14:
-	.4byte	.LVL37-.Ltext0
-	.4byte	.LVL38-1-.Ltext0
+	.4byte	.LVL35-.Ltext0
+	.4byte	.LVL36-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL38-1-.Ltext0
-	.4byte	.LVL42-.Ltext0
+	.4byte	.LVL36-.Ltext0
+	.4byte	.LFE172-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST15:
-	.4byte	.LVL39-.Ltext0
-	.4byte	.LVL42-.Ltext0
-	.2byte	0x1
-	.byte	0x56
-	.4byte	0
-	.4byte	0
 .LLST283:
-	.4byte	.LVL1556-.Ltext0
-	.4byte	.LVL1559-.Ltext0
+	.4byte	.LVL1546-.Ltext0
+	.4byte	.LVL1549-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
 .LLST284:
-	.4byte	.LVL1556-.Ltext0
-	.4byte	.LVL1558-.Ltext0
+	.4byte	.LVL1546-.Ltext0
+	.4byte	.LVL1548-.Ltext0
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
 .LLST285:
-	.4byte	.LVL1556-.Ltext0
-	.4byte	.LVL1557-.Ltext0
+	.4byte	.LVL1546-.Ltext0
+	.4byte	.LVL1547-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	0
 	.4byte	0
 .LLST269:
-	.4byte	.LVL1454-.Ltext0
-	.4byte	.LVL1457-.Ltext0
+	.4byte	.LVL1432-.Ltext0
+	.4byte	.LVL1435-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
 .LLST270:
-	.4byte	.LVL1454-.Ltext0
-	.4byte	.LVL1456-.Ltext0
+	.4byte	.LVL1432-.Ltext0
+	.4byte	.LVL1434-.Ltext0
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
 .LLST271:
-	.4byte	.LVL1454-.Ltext0
-	.4byte	.LVL1455-.Ltext0
+	.4byte	.LVL1432-.Ltext0
+	.4byte	.LVL1433-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	0
 	.4byte	0
 .LLST234:
-	.4byte	.LVL1222-.Ltext0
-	.4byte	.LVL1223-.Ltext0
+	.4byte	.LVL1215-.Ltext0
+	.4byte	.LVL1216-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1223-.Ltext0
-	.4byte	.LVL1229-.Ltext0
+	.4byte	.LVL1216-.Ltext0
+	.4byte	.LVL1222-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
 .LLST235:
-	.4byte	.LVL1222-.Ltext0
-	.4byte	.LVL1226-1-.Ltext0
+	.4byte	.LVL1215-.Ltext0
+	.4byte	.LVL1219-1-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL1226-1-.Ltext0
-	.4byte	.LFE158-.Ltext0
+	.4byte	.LVL1219-1-.Ltext0
+	.4byte	.LFE168-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
 .LLST236:
-	.4byte	.LVL1224-.Ltext0
-	.4byte	.LVL1225-.Ltext0
+	.4byte	.LVL1217-.Ltext0
+	.4byte	.LVL1218-.Ltext0
 	.2byte	0x1
 	.byte	0x57
-	.4byte	.LVL1230-.Ltext0
-	.4byte	.LFE158-.Ltext0
+	.4byte	.LVL1223-.Ltext0
+	.4byte	.LFE168-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
 .LLST237:
-	.4byte	.LVL1224-.Ltext0
-	.4byte	.LVL1225-.Ltext0
+	.4byte	.LVL1217-.Ltext0
+	.4byte	.LVL1218-.Ltext0
 	.2byte	0x1
 	.byte	0x58
-	.4byte	.LVL1228-.Ltext0
-	.4byte	.LFE158-.Ltext0
+	.4byte	.LVL1221-.Ltext0
+	.4byte	.LFE168-.Ltext0
 	.2byte	0x1
 	.byte	0x58
 	.4byte	0
 	.4byte	0
 .LLST238:
-	.4byte	.LVL1224-.Ltext0
-	.4byte	.LVL1225-.Ltext0
+	.4byte	.LVL1217-.Ltext0
+	.4byte	.LVL1218-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -48
-	.4byte	.LVL1231-.Ltext0
-	.4byte	.LVL1236-.Ltext0
+	.sleb128 -44
+	.4byte	.LVL1224-.Ltext0
+	.4byte	.LVL1229-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -48
-	.4byte	.LVL1236-.Ltext0
-	.4byte	.LVL1237-.Ltext0
+	.sleb128 -44
+	.4byte	.LVL1229-.Ltext0
+	.4byte	.LVL1230-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1237-.Ltext0
-	.4byte	.LFE158-.Ltext0
+	.4byte	.LVL1230-.Ltext0
+	.4byte	.LFE168-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -48
+	.sleb128 -44
 	.4byte	0
 	.4byte	0
 .LLST239:
-	.4byte	.LVL1224-.Ltext0
-	.4byte	.LVL1225-.Ltext0
+	.4byte	.LVL1217-.Ltext0
+	.4byte	.LVL1218-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -44
-	.4byte	.LVL1231-.Ltext0
-	.4byte	.LFE158-.Ltext0
+	.sleb128 -40
+	.4byte	.LVL1224-.Ltext0
+	.4byte	.LFE168-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -44
+	.sleb128 -40
 	.4byte	0
 	.4byte	0
 .LLST272:
-	.4byte	.LVL1459-.Ltext0
-	.4byte	.LVL1461-.Ltext0
+	.4byte	.LVL1437-.Ltext0
+	.4byte	.LVL1439-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1463-.Ltext0
-	.4byte	.LVL1466-.Ltext0
+	.4byte	.LVL1441-.Ltext0
+	.4byte	.LVL1444-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
 .LLST273:
-	.4byte	.LVL1459-.Ltext0
-	.4byte	.LVL1462-.Ltext0
+	.4byte	.LVL1437-.Ltext0
+	.4byte	.LVL1440-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL1462-.Ltext0
-	.4byte	.LFE157-.Ltext0
+	.4byte	.LVL1440-.Ltext0
+	.4byte	.LFE167-.Ltext0
 	.2byte	0x1
-	.byte	0x59
+	.byte	0x58
 	.4byte	0
 	.4byte	0
 .LLST274:
-	.4byte	.LVL1459-.Ltext0
-	.4byte	.LVL1460-.Ltext0
+	.4byte	.LVL1437-.Ltext0
+	.4byte	.LVL1438-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL1463-.Ltext0
-	.4byte	.LVL1464-.Ltext0
+	.4byte	.LVL1441-.Ltext0
+	.4byte	.LVL1442-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL1464-.Ltext0
-	.4byte	.LVL1465-.Ltext0
+	.4byte	.LVL1442-.Ltext0
+	.4byte	.LVL1443-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1503-.Ltext0
-	.4byte	.LVL1504-.Ltext0
+	.4byte	.LVL1487-.Ltext0
+	.4byte	.LVL1488-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1508-.Ltext0
-	.4byte	.LVL1509-.Ltext0
+	.byte	0x53
+	.4byte	.LVL1492-.Ltext0
+	.4byte	.LVL1493-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1524-.Ltext0
-	.4byte	.LVL1525-.Ltext0
+	.4byte	.LVL1508-.Ltext0
+	.4byte	.LVL1509-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL1536-.Ltext0
-	.4byte	.LVL1537-.Ltext0
+	.4byte	.LVL1521-.Ltext0
+	.4byte	.LVL1522-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	0
 	.4byte	0
 .LLST275:
-	.4byte	.LVL1459-.Ltext0
-	.4byte	.LVL1462-1-.Ltext0
+	.4byte	.LVL1437-.Ltext0
+	.4byte	.LVL1440-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1463-.Ltext0
-	.4byte	.LVL1464-.Ltext0
+	.4byte	.LVL1441-.Ltext0
+	.4byte	.LVL1442-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1509-.Ltext0
-	.4byte	.LVL1510-1-.Ltext0
+	.4byte	.LVL1493-.Ltext0
+	.4byte	.LVL1494-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1526-.Ltext0
-	.4byte	.LVL1527-.Ltext0
+	.4byte	.LVL1512-.Ltext0
+	.4byte	.LVL1513-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1528-.Ltext0
-	.4byte	.LVL1530-.Ltext0
+	.4byte	.LVL1514-.Ltext0
+	.4byte	.LVL1516-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1545-.Ltext0
-	.4byte	.LVL1546-.Ltext0
+	.4byte	.LVL1534-.Ltext0
+	.4byte	.LVL1535-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1548-.Ltext0
-	.4byte	.LVL1549-.Ltext0
+	.4byte	.LVL1539-.Ltext0
+	.4byte	.LVL1540-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	0
 	.4byte	0
 .LLST276:
-	.4byte	.LVL1462-.Ltext0
-	.4byte	.LVL1463-.Ltext0
+	.4byte	.LVL1456-.Ltext0
+	.4byte	.LVL1479-.Ltext0
 	.2byte	0x1
-	.byte	0x56
-	.4byte	.LVL1475-.Ltext0
-	.4byte	.LVL1501-.Ltext0
+	.byte	0x55
+	.4byte	.LVL1496-.Ltext0
+	.4byte	.LFE167-.Ltext0
 	.2byte	0x1
-	.byte	0x56
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST277:
+	.4byte	.LVL1447-.Ltext0
+	.4byte	.LVL1450-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1451-.Ltext0
+	.4byte	.LVL1452-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1476-.Ltext0
+	.4byte	.LVL1478-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1484-.Ltext0
+	.4byte	.LVL1486-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1494-.Ltext0
+	.4byte	.LVL1495-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1503-.Ltext0
+	.4byte	.LVL1505-.Ltext0
+	.2byte	0x1
+	.byte	0x53
 	.4byte	.LVL1506-.Ltext0
-	.4byte	.LVL1507-.Ltext0
+	.4byte	.LVL1507-1-.Ltext0
 	.2byte	0x1
-	.byte	0x56
+	.byte	0x52
+	.4byte	.LVL1510-.Ltext0
 	.4byte	.LVL1511-.Ltext0
-	.4byte	.LFE157-.Ltext0
 	.2byte	0x1
-	.byte	0x56
-	.4byte	0
-	.4byte	0
-.LLST277:
-	.4byte	.LVL1462-.Ltext0
-	.4byte	.LVL1463-.Ltext0
+	.byte	0x53
+	.4byte	.LVL1520-.Ltext0
+	.4byte	.LVL1521-.Ltext0
 	.2byte	0x1
-	.byte	0x58
-	.4byte	.LVL1468-.Ltext0
-	.4byte	.LFE157-.Ltext0
+	.byte	0x52
+	.4byte	.LVL1523-.Ltext0
+	.4byte	.LVL1524-.Ltext0
 	.2byte	0x1
-	.byte	0x58
+	.byte	0x53
+	.4byte	.LVL1528-.Ltext0
+	.4byte	.LVL1529-.Ltext0
+	.2byte	0x1
+	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST278:
-	.4byte	.LVL1469-.Ltext0
+	.4byte	.LVL1448-.Ltext0
+	.4byte	.LVL1452-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1452-.Ltext0
+	.4byte	.LVL1454-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1455-.Ltext0
+	.4byte	.LVL1460-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1461-.Ltext0
+	.4byte	.LVL1463-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1468-.Ltext0
+	.4byte	.LVL1471-.Ltext0
+	.2byte	0x1
+	.byte	0x50
 	.4byte	.LVL1472-.Ltext0
+	.4byte	.LVL1475-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1494-.Ltext0
-	.4byte	.LVL1495-1-.Ltext0
+	.4byte	.LVL1475-.Ltext0
+	.4byte	.LVL1478-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1521-.Ltext0
-	.4byte	.LVL1522-.Ltext0
+	.4byte	.LVL1484-.Ltext0
+	.4byte	.LVL1485-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1498-.Ltext0
+	.4byte	.LVL1499-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1504-.Ltext0
+	.4byte	.LVL1506-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1515-.Ltext0
+	.4byte	.LVL1516-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1529-.Ltext0
-	.4byte	.LVL1530-.Ltext0
+	.4byte	.LVL1531-.Ltext0
+	.4byte	.LVL1532-.Ltext0
 	.2byte	0x1
 	.byte	0x53
+	.4byte	.LVL1537-.Ltext0
+	.4byte	.LVL1538-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1540-.Ltext0
 	.4byte	.LVL1542-.Ltext0
-	.4byte	.LVL1543-.Ltext0
 	.2byte	0x1
-	.byte	0x53
+	.byte	0x50
 	.4byte	0
 	.4byte	0
 .LLST279:
-	.4byte	.LVL1462-.Ltext0
-	.4byte	.LVL1463-.Ltext0
+	.4byte	.LVL1440-.Ltext0
+	.4byte	.LVL1441-.Ltext0
 	.2byte	0x3
 	.byte	0x91
-	.sleb128 -72
-	.4byte	.LVL1475-.Ltext0
-	.4byte	.LVL1501-.Ltext0
+	.sleb128 -68
+	.4byte	.LVL1457-.Ltext0
+	.4byte	.LVL1484-.Ltext0
 	.2byte	0x3
 	.byte	0x91
-	.sleb128 -72
-	.4byte	.LVL1506-.Ltext0
-	.4byte	.LVL1507-.Ltext0
+	.sleb128 -68
+	.4byte	.LVL1490-.Ltext0
+	.4byte	.LVL1491-.Ltext0
 	.2byte	0x3
 	.byte	0x91
-	.sleb128 -72
-	.4byte	.LVL1511-.Ltext0
-	.4byte	.LVL1532-.Ltext0
+	.sleb128 -68
+	.4byte	.LVL1496-.Ltext0
+	.4byte	.LVL1518-.Ltext0
 	.2byte	0x3
 	.byte	0x91
-	.sleb128 -72
-	.4byte	.LVL1532-.Ltext0
-	.4byte	.LVL1533-.Ltext0
+	.sleb128 -68
+	.4byte	.LVL1518-.Ltext0
+	.4byte	.LVL1519-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1533-.Ltext0
-	.4byte	.LFE157-.Ltext0
+	.4byte	.LVL1519-.Ltext0
+	.4byte	.LFE167-.Ltext0
 	.2byte	0x3
 	.byte	0x91
-	.sleb128 -72
+	.sleb128 -68
 	.4byte	0
 	.4byte	0
 .LLST280:
-	.4byte	.LVL1475-.Ltext0
-	.4byte	.LVL1477-.Ltext0
-	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1489-.Ltext0
-	.4byte	.LVL1490-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL1492-.Ltext0
-	.4byte	.LVL1494-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL1494-.Ltext0
-	.4byte	.LVL1495-1-.Ltext0
-	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1513-.Ltext0
-	.4byte	.LVL1514-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL1517-.Ltext0
-	.4byte	.LVL1518-.Ltext0
-	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL1518-.Ltext0
-	.4byte	.LVL1519-.Ltext0
+	.4byte	.LVL1440-.Ltext0
+	.4byte	.LVL1441-.Ltext0
 	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL1534-.Ltext0
-	.4byte	.LVL1535-.Ltext0
+	.byte	0x59
+	.4byte	.LVL1457-.Ltext0
+	.4byte	.LVL1462-.Ltext0
 	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL1549-.Ltext0
-	.4byte	.LVL1550-.Ltext0
+	.byte	0x59
+	.4byte	.LVL1473-.Ltext0
+	.4byte	.LVL1484-.Ltext0
 	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL1553-.Ltext0
-	.4byte	.LVL1554-.Ltext0
+	.byte	0x59
+	.4byte	.LVL1490-.Ltext0
+	.4byte	.LVL1491-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1555-.Ltext0
-	.4byte	.LFE157-.Ltext0
+	.byte	0x59
+	.4byte	.LVL1498-.Ltext0
+	.4byte	.LFE167-.Ltext0
 	.2byte	0x1
-	.byte	0x52
+	.byte	0x59
 	.4byte	0
 	.4byte	0
 .LLST281:
-	.4byte	.LVL1470-.Ltext0
-	.4byte	.LVL1471-.Ltext0
+	.4byte	.LVL1449-.Ltext0
+	.4byte	.LVL1450-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1471-.Ltext0
-	.4byte	.LVL1473-1-.Ltext0
+	.4byte	.LVL1450-.Ltext0
+	.4byte	.LVL1451-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL1473-.Ltext0
-	.4byte	.LVL1476-.Ltext0
+	.4byte	.LVL1452-.Ltext0
+	.4byte	.LVL1458-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL1476-.Ltext0
-	.4byte	.LVL1478-.Ltext0
+	.4byte	.LVL1458-.Ltext0
+	.4byte	.LVL1459-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1486-.Ltext0
-	.4byte	.LVL1487-.Ltext0
+	.4byte	.LVL1469-.Ltext0
+	.4byte	.LVL1470-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL1491-.Ltext0
-	.4byte	.LVL1492-.Ltext0
+	.4byte	.LVL1474-.Ltext0
+	.4byte	.LVL1475-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1493-.Ltext0
-	.4byte	.LVL1494-.Ltext0
+	.4byte	.LVL1540-.Ltext0
+	.4byte	.LVL1541-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1501-.Ltext0
-	.4byte	.LVL1502-1-.Ltext0
-	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1552-.Ltext0
-	.4byte	.LVL1555-1-.Ltext0
+	.4byte	.LVL1544-.Ltext0
+	.4byte	.LVL1545-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1555-.Ltext0
-	.4byte	.LFE157-.Ltext0
+	.4byte	.LVL1545-.Ltext0
+	.4byte	.LFE167-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST282:
-	.4byte	.LVL1462-.Ltext0
-	.4byte	.LVL1463-.Ltext0
+	.4byte	.LVL1453-.Ltext0
+	.4byte	.LVL1466-.Ltext0
 	.2byte	0x1
-	.byte	0x55
-	.4byte	.LVL1474-.Ltext0
-	.4byte	.LVL1483-.Ltext0
+	.byte	0x54
+	.4byte	.LVL1467-.Ltext0
+	.4byte	.LVL1477-.Ltext0
 	.2byte	0x1
-	.byte	0x55
-	.4byte	.LVL1484-.Ltext0
+	.byte	0x54
 	.4byte	.LVL1496-.Ltext0
+	.4byte	.LFE167-.Ltext0
 	.2byte	0x1
-	.byte	0x55
-	.4byte	.LVL1506-.Ltext0
-	.4byte	.LVL1507-.Ltext0
-	.2byte	0x1
-	.byte	0x55
-	.4byte	.LVL1511-.Ltext0
-	.4byte	.LFE157-.Ltext0
-	.2byte	0x1
-	.byte	0x55
+	.byte	0x54
 	.4byte	0
 	.4byte	0
 .LLST227:
-	.4byte	.LVL1191-.Ltext0
-	.4byte	.LVL1195-1-.Ltext0
+	.4byte	.LVL1184-.Ltext0
+	.4byte	.LVL1188-1-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1195-1-.Ltext0
-	.4byte	.LVL1196-.Ltext0
+	.4byte	.LVL1188-1-.Ltext0
+	.4byte	.LVL1189-.Ltext0
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL1201-.Ltext0
-	.4byte	.LVL1202-.Ltext0
+	.4byte	.LVL1194-.Ltext0
+	.4byte	.LVL1195-.Ltext0
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL1212-.Ltext0
-	.4byte	.LVL1215-.Ltext0
+	.4byte	.LVL1205-.Ltext0
+	.4byte	.LVL1208-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
 .LLST228:
-	.4byte	.LVL1191-.Ltext0
-	.4byte	.LVL1195-1-.Ltext0
+	.4byte	.LVL1184-.Ltext0
+	.4byte	.LVL1188-1-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL1195-1-.Ltext0
-	.4byte	.LVL1215-.Ltext0
+	.4byte	.LVL1188-1-.Ltext0
+	.4byte	.LVL1208-.Ltext0
 	.2byte	0x1
 	.byte	0x59
 	.4byte	0
 	.4byte	0
 .LLST229:
-	.4byte	.LVL1191-.Ltext0
-	.4byte	.LVL1193-.Ltext0
+	.4byte	.LVL1184-.Ltext0
+	.4byte	.LVL1186-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	0
 	.4byte	0
 .LLST230:
-	.4byte	.LVL1191-.Ltext0
-	.4byte	.LVL1194-.Ltext0
+	.4byte	.LVL1184-.Ltext0
+	.4byte	.LVL1187-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1194-.Ltext0
-	.4byte	.LVL1215-.Ltext0
+	.4byte	.LVL1187-.Ltext0
+	.4byte	.LVL1208-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
 .LLST231:
-	.4byte	.LVL1192-.Ltext0
-	.4byte	.LVL1215-.Ltext0
+	.4byte	.LVL1185-.Ltext0
+	.4byte	.LVL1208-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
 .LLST232:
-	.4byte	.LVL1195-.Ltext0
-	.4byte	.LVL1196-.Ltext0
+	.4byte	.LVL1188-.Ltext0
+	.4byte	.LVL1189-.Ltext0
 	.2byte	0x2
 	.byte	0x71
 	.sleb128 -4
-	.4byte	.LVL1196-.Ltext0
-	.4byte	.LVL1204-.Ltext0
+	.4byte	.LVL1189-.Ltext0
+	.4byte	.LVL1197-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -52
-	.4byte	.LVL1204-.Ltext0
-	.4byte	.LFE155-.Ltext0
+	.sleb128 -48
+	.4byte	.LVL1197-.Ltext0
+	.4byte	.LFE165-.Ltext0
 	.2byte	0x2
 	.byte	0x71
 	.sleb128 -4
 	.4byte	0
 	.4byte	0
 .LLST233:
-	.4byte	.LVL1195-.Ltext0
-	.4byte	.LVL1196-.Ltext0
+	.4byte	.LVL1188-.Ltext0
+	.4byte	.LVL1189-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1201-.Ltext0
-	.4byte	.LVL1202-.Ltext0
+	.4byte	.LVL1194-.Ltext0
+	.4byte	.LVL1195-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1206-.Ltext0
-	.4byte	.LVL1207-1-.Ltext0
+	.4byte	.LVL1199-.Ltext0
+	.4byte	.LVL1200-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1208-.Ltext0
-	.4byte	.LVL1209-.Ltext0
+	.4byte	.LVL1201-.Ltext0
+	.4byte	.LVL1202-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1211-.Ltext0
-	.4byte	.LVL1213-.Ltext0
+	.4byte	.LVL1204-.Ltext0
+	.4byte	.LVL1206-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST254:
-	.4byte	.LVL1387-.Ltext0
-	.4byte	.LVL1389-.Ltext0
-	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL1391-.Ltext0
-	.4byte	.LVL1392-.Ltext0
+	.4byte	.LVL1370-.Ltext0
+	.4byte	.LVL1372-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1393-.Ltext0
-	.4byte	.LVL1396-1-.Ltext0
+	.4byte	.LVL1374-.Ltext0
+	.4byte	.LVL1375-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1453-.Ltext0
-	.4byte	.LFE154-.Ltext0
+	.4byte	.LVL1376-.Ltext0
+	.4byte	.LVL1379-1-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
 .LLST255:
-	.4byte	.LVL1387-.Ltext0
-	.4byte	.LVL1391-.Ltext0
+	.4byte	.LVL1370-.Ltext0
+	.4byte	.LVL1374-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL1391-.Ltext0
-	.4byte	.LVL1453-.Ltext0
-	.2byte	0x1
-	.byte	0x57
-	.4byte	.LVL1453-.Ltext0
-	.4byte	.LFE154-.Ltext0
+	.4byte	.LVL1374-.Ltext0
+	.4byte	.LFE164-.Ltext0
 	.2byte	0x1
-	.byte	0x51
+	.byte	0x56
 	.4byte	0
 	.4byte	0
 .LLST256:
-	.4byte	.LVL1387-.Ltext0
-	.4byte	.LVL1388-.Ltext0
+	.4byte	.LVL1370-.Ltext0
+	.4byte	.LVL1371-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL1393-.Ltext0
-	.4byte	.LVL1394-.Ltext0
+	.4byte	.LVL1376-.Ltext0
+	.4byte	.LVL1377-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL1394-.Ltext0
-	.4byte	.LVL1395-.Ltext0
+	.4byte	.LVL1377-.Ltext0
+	.4byte	.LVL1378-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1420-.Ltext0
-	.4byte	.LVL1422-.Ltext0
+	.4byte	.LVL1402-.Ltext0
+	.4byte	.LVL1404-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST257:
-	.4byte	.LVL1387-.Ltext0
-	.4byte	.LVL1390-1-.Ltext0
+	.4byte	.LVL1370-.Ltext0
+	.4byte	.LVL1373-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1390-1-.Ltext0
-	.4byte	.LFE154-.Ltext0
+	.4byte	.LVL1373-1-.Ltext0
+	.4byte	.LFE164-.Ltext0
 	.2byte	0x1
 	.byte	0x59
 	.4byte	0
 	.4byte	0
 .LLST258:
-	.4byte	.LVL1401-.Ltext0
-	.4byte	.LVL1403-.Ltext0
+	.4byte	.LVL1384-.Ltext0
+	.4byte	.LVL1386-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1390-.Ltext0
+	.4byte	.LVL1391-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1399-.Ltext0
+	.4byte	.LVL1401-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	.LVL1417-.Ltext0
 	.4byte	.LVL1418-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1437-.Ltext0
-	.4byte	.LVL1438-.Ltext0
+	.byte	0x53
+	.4byte	.LVL1419-.Ltext0
+	.4byte	.LVL1420-.Ltext0
 	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL1441-.Ltext0
-	.4byte	.LVL1442-.Ltext0
+	.byte	0x53
+	.4byte	.LVL1423-.Ltext0
+	.4byte	.LVL1424-1-.Ltext0
 	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL1445-.Ltext0
-	.4byte	.LVL1446-.Ltext0
+	.byte	0x53
+	.4byte	.LVL1425-.Ltext0
+	.4byte	.LVL1427-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1449-.Ltext0
-	.4byte	.LVL1450-.Ltext0
+	.byte	0x53
+	.4byte	.LVL1430-.Ltext0
+	.4byte	.LVL1431-.Ltext0
 	.2byte	0x1
-	.byte	0x50
+	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST259:
-	.4byte	.LVL1391-.Ltext0
-	.4byte	.LVL1392-.Ltext0
+	.4byte	.LVL1374-.Ltext0
+	.4byte	.LVL1375-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1404-.Ltext0
-	.4byte	.LVL1410-.Ltext0
+	.4byte	.LVL1387-.Ltext0
+	.4byte	.LVL1393-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1412-.Ltext0
-	.4byte	.LVL1413-.Ltext0
+	.4byte	.LVL1395-.Ltext0
+	.4byte	.LVL1396-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1423-.Ltext0
-	.4byte	.LVL1424-.Ltext0
+	.4byte	.LVL1405-.Ltext0
+	.4byte	.LVL1406-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1439-.Ltext0
-	.4byte	.LVL1440-1-.Ltext0
+	.byte	0x53
+	.4byte	.LVL1411-.Ltext0
+	.4byte	.LVL1412-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1441-.Ltext0
-	.4byte	.LVL1442-.Ltext0
+	.4byte	.LVL1417-.Ltext0
+	.4byte	.LVL1418-.Ltext0
 	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL1446-.Ltext0
-	.4byte	.LVL1447-.Ltext0
+	.byte	0x53
+	.4byte	.LVL1421-.Ltext0
+	.4byte	.LVL1422-1-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1448-.Ltext0
-	.4byte	.LVL1449-.Ltext0
+	.byte	0x53
+	.4byte	.LVL1423-.Ltext0
+	.4byte	.LVL1424-1-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1450-.Ltext0
-	.4byte	.LVL1451-.Ltext0
+	.byte	0x53
+	.4byte	.LVL1425-.Ltext0
+	.4byte	.LVL1426-.Ltext0
 	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL1452-.Ltext0
-	.4byte	.LVL1453-.Ltext0
+	.byte	0x53
+	.4byte	.LVL1427-.Ltext0
+	.4byte	.LVL1428-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1429-.Ltext0
+	.4byte	.LVL1430-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1431-.Ltext0
+	.4byte	.LFE164-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST260:
-	.4byte	.LVL1426-.Ltext0
-	.4byte	.LVL1427-.Ltext0
+	.4byte	.LVL1407-.Ltext0
+	.4byte	.LVL1408-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1428-.Ltext0
-	.4byte	.LVL1429-.Ltext0
+	.4byte	.LVL1409-.Ltext0
+	.4byte	.LVL1410-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
 .LLST261:
-	.4byte	.LVL1391-.Ltext0
-	.4byte	.LVL1393-.Ltext0
+	.4byte	.LVL1374-.Ltext0
+	.4byte	.LVL1376-.Ltext0
 	.2byte	0x1
-	.byte	0x55
-	.4byte	.LVL1402-.Ltext0
-	.4byte	.LVL1453-.Ltext0
+	.byte	0x54
+	.4byte	.LVL1385-.Ltext0
+	.4byte	.LFE164-.Ltext0
 	.2byte	0x1
-	.byte	0x55
+	.byte	0x54
 	.4byte	0
 	.4byte	0
 .LLST262:
-	.4byte	.LVL1391-.Ltext0
-	.4byte	.LVL1393-.Ltext0
+	.4byte	.LVL1374-.Ltext0
+	.4byte	.LVL1376-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -52
-	.4byte	.LVL1407-.Ltext0
-	.4byte	.LVL1453-.Ltext0
+	.sleb128 -48
+	.4byte	.LVL1390-.Ltext0
+	.4byte	.LFE164-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -52
+	.sleb128 -48
 	.4byte	0
 	.4byte	0
 .LLST263:
-	.4byte	.LVL1391-.Ltext0
-	.4byte	.LVL1393-.Ltext0
+	.4byte	.LVL1374-.Ltext0
+	.4byte	.LVL1376-.Ltext0
 	.2byte	0x1
 	.byte	0x5a
-	.4byte	.LVL1407-.Ltext0
-	.4byte	.LVL1415-.Ltext0
+	.4byte	.LVL1390-.Ltext0
+	.4byte	.LVL1398-.Ltext0
 	.2byte	0x1
 	.byte	0x5a
-	.4byte	.LVL1433-.Ltext0
-	.4byte	.LVL1445-.Ltext0
+	.4byte	.LVL1413-.Ltext0
+	.4byte	.LVL1426-.Ltext0
 	.2byte	0x1
 	.byte	0x5a
-	.4byte	.LVL1449-.Ltext0
-	.4byte	.LVL1453-.Ltext0
+	.4byte	.LVL1430-.Ltext0
+	.4byte	.LFE164-.Ltext0
 	.2byte	0x1
 	.byte	0x5a
 	.4byte	0
 	.4byte	0
 .LLST264:
-	.4byte	.LVL1391-.Ltext0
-	.4byte	.LVL1393-.Ltext0
+	.4byte	.LVL1374-.Ltext0
+	.4byte	.LVL1376-.Ltext0
 	.2byte	0x1
-	.byte	0x56
-	.4byte	.LVL1398-.Ltext0
-	.4byte	.LVL1453-.Ltext0
+	.byte	0x55
+	.4byte	.LVL1381-.Ltext0
+	.4byte	.LFE164-.Ltext0
 	.2byte	0x1
-	.byte	0x56
+	.byte	0x55
 	.4byte	0
 	.4byte	0
 .LLST265:
-	.4byte	.LVL1405-.Ltext0
-	.4byte	.LVL1406-.Ltext0
+	.4byte	.LVL1388-.Ltext0
+	.4byte	.LVL1389-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1406-.Ltext0
-	.4byte	.LVL1408-.Ltext0
+	.4byte	.LVL1389-.Ltext0
+	.4byte	.LVL1390-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL1408-.Ltext0
-	.4byte	.LVL1409-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL1412-.Ltext0
-	.4byte	.LVL1414-1-.Ltext0
+	.4byte	.LVL1390-.Ltext0
+	.4byte	.LVL1392-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1430-.Ltext0
-	.4byte	.LVL1431-.Ltext0
+	.4byte	.LVL1395-.Ltext0
+	.4byte	.LVL1397-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1432-.Ltext0
-	.4byte	.LVL1434-1-.Ltext0
+	.4byte	.LVL1412-.Ltext0
+	.4byte	.LVL1414-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST266:
-	.4byte	.LVL1420-.Ltext0
-	.4byte	.LVL1421-.Ltext0
+	.4byte	.LVL1402-.Ltext0
+	.4byte	.LVL1403-.Ltext0
 	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL1435-.Ltext0
-	.4byte	.LVL1436-.Ltext0
+	.byte	0x50
+	.4byte	.LVL1415-.Ltext0
+	.4byte	.LVL1416-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST267:
-	.4byte	.LVL1391-.Ltext0
-	.4byte	.LVL1393-.Ltext0
+	.4byte	.LVL1374-.Ltext0
+	.4byte	.LVL1376-.Ltext0
 	.2byte	0x1
 	.byte	0x58
-	.4byte	.LVL1397-.Ltext0
-	.4byte	.LVL1453-.Ltext0
+	.4byte	.LVL1380-.Ltext0
+	.4byte	.LFE164-.Ltext0
 	.2byte	0x1
 	.byte	0x58
 	.4byte	0
 	.4byte	0
 .LLST268:
-	.4byte	.LVL1391-.Ltext0
-	.4byte	.LVL1393-.Ltext0
+	.4byte	.LVL1374-.Ltext0
+	.4byte	.LVL1376-.Ltext0
 	.2byte	0x1
 	.byte	0x5a
-	.4byte	.LVL1407-.Ltext0
-	.4byte	.LVL1416-.Ltext0
+	.4byte	.LVL1390-.Ltext0
+	.4byte	.LVL1400-.Ltext0
 	.2byte	0x1
 	.byte	0x5a
-	.4byte	.LVL1425-.Ltext0
-	.4byte	.LVL1433-.Ltext0
+	.4byte	.LVL1406-.Ltext0
+	.4byte	.LVL1413-.Ltext0
 	.2byte	0x1
 	.byte	0x5a
 	.4byte	0
 	.4byte	0
 .LLST288:
-	.4byte	.LVL1611-.Ltext0
-	.4byte	.LVL1614-.Ltext0
+	.4byte	.LVL1600-.Ltext0
+	.4byte	.LVL1604-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL1628-.Ltext0
-	.4byte	.LVL1630-.Ltext0
+	.4byte	.LVL1618-.Ltext0
+	.4byte	.LVL1620-.Ltext0
 	.2byte	0x1
 	.byte	0x56
-	.4byte	.LVL1631-.Ltext0
-	.4byte	.LVL1632-.Ltext0
+	.4byte	.LVL1621-.Ltext0
+	.4byte	.LVL1622-.Ltext0
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
 .LLST289:
-	.4byte	.LVL1609-.Ltext0
-	.4byte	.LVL1610-.Ltext0
+	.4byte	.LVL1599-.Ltext0
+	.4byte	.LVL1601-.Ltext0
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL1619-.Ltext0
-	.4byte	.LVL1621-.Ltext0
+	.4byte	.LVL1609-.Ltext0
+	.4byte	.LVL1611-.Ltext0
 	.2byte	0x1
 	.byte	0x55
-	.4byte	.LVL1622-.Ltext0
-	.4byte	.LVL1626-.Ltext0
+	.4byte	.LVL1612-.Ltext0
+	.4byte	.LVL1616-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
 .LLST96:
-	.4byte	.LVL410-.Ltext0
 	.4byte	.LVL412-.Ltext0
+	.4byte	.LVL413-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL431-.Ltext0
-	.4byte	.LVL434-1-.Ltext0
+	.4byte	.LVL413-.Ltext0
+	.4byte	.LVL415-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL434-.Ltext0
-	.4byte	.LVL435-.Ltext0
+	.4byte	.LVL417-.Ltext0
+	.4byte	.LVL418-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL436-.Ltext0
+	.4byte	.LVL439-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL439-.Ltext0
+	.4byte	.LVL440-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST97:
-	.4byte	.LVL410-.Ltext0
-	.4byte	.LVL432-.Ltext0
+	.4byte	.LVL412-.Ltext0
+	.4byte	.LVL414-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL434-.Ltext0
-	.4byte	.LFE149-.Ltext0
+	.4byte	.LVL414-.Ltext0
+	.4byte	.LVL437-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL439-.Ltext0
+	.4byte	.LFE159-.Ltext0
 	.2byte	0x1
 	.byte	0x56
 	.4byte	0
 	.4byte	0
 .LLST98:
-	.4byte	.LVL411-.Ltext0
-	.4byte	.LVL439-.Ltext0
+	.4byte	.LVL416-.Ltext0
+	.4byte	.LVL444-.Ltext0
 	.2byte	0x1
 	.byte	0x54
-	.4byte	.LVL440-.Ltext0
-	.4byte	.LVL441-.Ltext0
+	.4byte	.LVL445-.Ltext0
+	.4byte	.LVL446-.Ltext0
 	.2byte	0x1
 	.byte	0x54
-	.4byte	.LVL442-.Ltext0
-	.4byte	.LVL451-.Ltext0
+	.4byte	.LVL447-.Ltext0
+	.4byte	.LVL456-.Ltext0
 	.2byte	0x1
 	.byte	0x54
-	.4byte	.LVL452-.Ltext0
-	.4byte	.LFE149-.Ltext0
+	.4byte	.LVL457-.Ltext0
+	.4byte	.LFE159-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
 .LLST99:
-	.4byte	.LVL414-.Ltext0
-	.4byte	.LVL415-.Ltext0
+	.4byte	.LVL420-.Ltext0
+	.4byte	.LVL421-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL416-.Ltext0
-	.4byte	.LVL417-.Ltext0
+	.4byte	.LVL422-.Ltext0
+	.4byte	.LVL423-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL420-.Ltext0
-	.4byte	.LVL421-.Ltext0
+	.4byte	.LVL424-.Ltext0
+	.4byte	.LVL425-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL429-.Ltext0
-	.4byte	.LVL430-.Ltext0
+	.4byte	.LVL427-.Ltext0
+	.4byte	.LVL428-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL434-.Ltext0
+	.4byte	.LVL435-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST100:
-	.4byte	.LVL419-.Ltext0
-	.4byte	.LVL421-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL421-.Ltext0
-	.4byte	.LVL422-.Ltext0
-	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL424-.Ltext0
 	.4byte	.LVL426-.Ltext0
-	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL427-.Ltext0
 	.4byte	.LVL428-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	.LVL428-.Ltext0
-	.4byte	.LVL433-.Ltext0
+	.4byte	.LVL429-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL434-.Ltext0
-	.4byte	.LVL435-.Ltext0
+	.4byte	.LVL431-.Ltext0
+	.4byte	.LVL433-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL433-.Ltext0
+	.4byte	.LVL438-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL444-.Ltext0
-	.4byte	.LVL445-.Ltext0
+	.4byte	.LVL439-.Ltext0
+	.4byte	.LVL440-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	.LVL449-.Ltext0
 	.4byte	.LVL450-.Ltext0
 	.2byte	0x1
-	.byte	0x53
+	.byte	0x52
 	.4byte	.LVL454-.Ltext0
 	.4byte	.LVL455-.Ltext0
 	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL459-.Ltext0
+	.4byte	.LVL460-.Ltext0
+	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL456-.Ltext0
-	.4byte	.LFE149-.Ltext0
+	.4byte	.LVL461-.Ltext0
+	.4byte	.LFE159-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	0
 	.4byte	0
 .LLST101:
-	.4byte	.LVL415-.Ltext0
-	.4byte	.LVL416-.Ltext0
+	.4byte	.LVL421-.Ltext0
+	.4byte	.LVL422-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL417-.Ltext0
-	.4byte	.LVL418-.Ltext0
+	.4byte	.LVL423-.Ltext0
+	.4byte	.LVL425-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL425-.Ltext0
-	.4byte	.LVL428-.Ltext0
+	.4byte	.LVL432-.Ltext0
+	.4byte	.LVL433-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	0
 	.4byte	0
 .LLST102:
-	.4byte	.LVL418-.Ltext0
-	.4byte	.LVL419-.Ltext0
+	.4byte	.LVL425-.Ltext0
+	.4byte	.LVL426-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST110:
-	.4byte	.LVL514-.Ltext0
-	.4byte	.LVL515-.Ltext0
+.LLST111:
+	.4byte	.LVL529-.Ltext0
+	.4byte	.LVL530-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL517-.Ltext0
-	.4byte	.LVL518-.Ltext0
+	.4byte	.LVL532-.Ltext0
+	.4byte	.LVL533-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
@@ -42332,7 +41049,7 @@ check_vpc_table:
 	.2byte	0x1
 	.byte	0x50
 	.4byte	.LVL24-.Ltext0
-	.4byte	.LVL29-.Ltext0
+	.4byte	.LVL30-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
@@ -42357,55 +41074,55 @@ check_vpc_table:
 	.2byte	0x1
 	.byte	0x50
 	.4byte	.LVL19-.Ltext0
-	.4byte	.LFE142-.Ltext0
+	.4byte	.LFE152-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST63:
-	.4byte	.LVL281-.Ltext0
-	.4byte	.LVL282-1-.Ltext0
+.LLST61:
+	.4byte	.LVL275-.Ltext0
+	.4byte	.LVL276-1-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL282-1-.Ltext0
-	.4byte	.LFE141-.Ltext0
+	.4byte	.LVL276-1-.Ltext0
+	.4byte	.LFE151-.Ltext0
 	.2byte	0x1
 	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST60:
-	.4byte	.LVL202-.Ltext0
-	.4byte	.LVL203-1-.Ltext0
+.LLST58:
+	.4byte	.LVL196-.Ltext0
+	.4byte	.LVL197-1-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL203-1-.Ltext0
-	.4byte	.LFE140-.Ltext0
+	.4byte	.LVL197-1-.Ltext0
+	.4byte	.LFE150-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
-.LLST61:
-	.4byte	.LVL274-.Ltext0
-	.4byte	.LVL275-1-.Ltext0
+.LLST59:
+	.4byte	.LVL268-.Ltext0
+	.4byte	.LVL269-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL276-.Ltext0
-	.4byte	.LVL277-.Ltext0
+	.4byte	.LVL270-.Ltext0
+	.4byte	.LVL271-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST62:
-	.4byte	.LVL270-.Ltext0
-	.4byte	.LVL271-.Ltext0
+.LLST60:
+	.4byte	.LVL264-.Ltext0
+	.4byte	.LVL265-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL278-.Ltext0
-	.4byte	.LVL279-1-.Ltext0
+	.4byte	.LVL272-.Ltext0
+	.4byte	.LVL273-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL280-.Ltext0
-	.4byte	.LFE140-.Ltext0
+	.4byte	.LVL274-.Ltext0
+	.4byte	.LFE150-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
@@ -42422,428 +41139,544 @@ check_vpc_table:
 	.4byte	.LVL34-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL35-.Ltext0
-	.4byte	.LVL36-.Ltext0
+	.4byte	.LVL34-.Ltext0
+	.4byte	.LFE158-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST26:
+	.4byte	.LVL80-.Ltext0
+	.4byte	.LVL105-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL106-.Ltext0
+	.4byte	.LFE196-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST27:
+	.4byte	.LVL81-.Ltext0
+	.4byte	.LVL108-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST28:
+	.4byte	.LVL82-.Ltext0
+	.4byte	.LVL103-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL104-.Ltext0
+	.4byte	.LFE196-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST29:
+	.4byte	.LVL85-.Ltext0
+	.4byte	.LVL87-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST30:
+	.4byte	.LVL92-.Ltext0
+	.4byte	.LVL93-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL93-.Ltext0
+	.4byte	.LVL95-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
+	.4byte	0
+	.4byte	0
+.LLST31:
+	.4byte	.LVL86-.Ltext0
+	.4byte	.LVL88-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL95-.Ltext0
+	.4byte	.LVL96-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
+	.4byte	.LVL98-.Ltext0
+	.4byte	.LVL99-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
+	.4byte	.LVL100-.Ltext0
+	.4byte	.LVL102-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
+	.4byte	0
+	.4byte	0
+.LLST32:
+	.4byte	.LVL83-.Ltext0
+	.4byte	.LVL84-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL94-.Ltext0
+	.4byte	.LVL97-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL98-.Ltext0
+	.4byte	.LVL101-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL104-.Ltext0
+	.4byte	.LVL106-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL107-.Ltext0
+	.4byte	.LFE196-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST33:
+	.4byte	.LVL83-.Ltext0
+	.4byte	.LVL84-.Ltext0
+	.2byte	0x1
+	.byte	0x5e
+	.4byte	.LVL89-.Ltext0
+	.4byte	.LVL90-.Ltext0
+	.2byte	0x1
+	.byte	0x5e
+	.4byte	.LVL91-.Ltext0
+	.4byte	.LFE196-.Ltext0
+	.2byte	0x1
+	.byte	0x5e
+	.4byte	0
+	.4byte	0
+.LLST34:
+	.4byte	.LVL109-.Ltext0
+	.4byte	.LVL110-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
 .LLST36:
-	.4byte	.LVL113-.Ltext0
-	.4byte	.LVL114-1-.Ltext0
+	.4byte	.LVL119-.Ltext0
+	.4byte	.LVL120-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST39:
-	.4byte	.LVL125-.Ltext0
-	.4byte	.LVL126-1-.Ltext0
+.LLST45:
+	.4byte	.LVL151-.Ltext0
+	.4byte	.LVL152-.Ltext0
 	.2byte	0x1
 	.byte	0x50
+	.4byte	.LVL152-.Ltext0
+	.4byte	.LFE202-.Ltext0
+	.2byte	0x1
+	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST48:
+.LLST46:
+	.4byte	.LVL154-.Ltext0
 	.4byte	.LVL157-.Ltext0
-	.4byte	.LVL164-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST47:
+	.4byte	.LVL159-.Ltext0
+	.4byte	.LVL161-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	.LVL164-.Ltext0
-	.4byte	.LFE192-.Ltext0
+	.4byte	.LVL165-.Ltext0
 	.2byte	0x1
-	.byte	0x55
+	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST49:
-	.4byte	.LVL161-.Ltext0
+.LLST48:
+	.4byte	.LVL160-.Ltext0
 	.4byte	.LVL162-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	.LVL164-.Ltext0
-	.4byte	.LFE192-.Ltext0
+	.4byte	.LFE202-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
+.LLST49:
+	.4byte	.LVL167-.Ltext0
+	.4byte	.LVL168-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
 .LLST50:
-	.4byte	.LVL165-.Ltext0
-	.4byte	.LVL168-1-.Ltext0
+	.4byte	.LVL169-.Ltext0
+	.4byte	.LVL170-1-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL168-1-.Ltext0
-	.4byte	.LFE195-.Ltext0
+	.4byte	.LVL171-.Ltext0
+	.4byte	.LVL173-.Ltext0
 	.2byte	0x1
-	.byte	0x54
+	.byte	0x50
 	.4byte	0
 	.4byte	0
 .LLST51:
-	.4byte	.LVL170-.Ltext0
+	.4byte	.LVL169-.Ltext0
+	.4byte	.LVL170-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
 	.4byte	.LVL171-.Ltext0
+	.4byte	.LVL172-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST67:
+	.4byte	.LVL302-.Ltext0
+	.4byte	.LVL303-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL303-.Ltext0
+	.4byte	.LVL304-.Ltext0
 	.2byte	0x1
 	.byte	0x50
 	.4byte	0
 	.4byte	0
-.LLST52:
-	.4byte	.LVL172-.Ltext0
-	.4byte	.LVL173-1-.Ltext0
+.LLST94:
+	.4byte	.LVL407-.Ltext0
+	.4byte	.LVL408-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL174-.Ltext0
-	.4byte	.LVL175-.Ltext0
+	.4byte	.LVL408-.Ltext0
+	.4byte	.LFE190-.Ltext0
 	.2byte	0x1
-	.byte	0x53
+	.byte	0x55
 	.4byte	0
 	.4byte	0
-.LLST53:
-	.4byte	.LVL172-.Ltext0
-	.4byte	.LVL173-1-.Ltext0
+.LLST95:
+	.4byte	.LVL407-.Ltext0
+	.4byte	.LVL409-1-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL174-.Ltext0
-	.4byte	.LVL176-.Ltext0
+	.4byte	.LVL411-.Ltext0
+	.4byte	.LFE190-.Ltext0
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
-.LLST68:
-	.4byte	.LVL303-.Ltext0
-	.4byte	.LVL304-1-.Ltext0
+.LLST103:
+	.4byte	.LVL466-.Ltext0
+	.4byte	.LVL470-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL304-.Ltext0
-	.4byte	.LVL305-.Ltext0
+	.4byte	.LVL470-.Ltext0
+	.4byte	.LFE205-.Ltext0
 	.2byte	0x1
-	.byte	0x50
+	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST103:
-	.4byte	.LVL457-.Ltext0
-	.4byte	.LVL458-.Ltext0
+.LLST104:
+	.4byte	.LVL472-.Ltext0
+	.4byte	.LVL473-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL459-.Ltext0
-	.4byte	.LVL460-.Ltext0
+	.4byte	.LVL473-.Ltext0
+	.4byte	.LVL474-.Ltext0
 	.2byte	0x1
 	.byte	0x54
-	.4byte	.LVL464-.Ltext0
-	.4byte	.LVL465-.Ltext0
+	.4byte	.LVL475-.Ltext0
+	.4byte	.LVL476-.Ltext0
 	.2byte	0x1
-	.byte	0x50
+	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST107:
-	.4byte	.LVL477-.Ltext0
-	.4byte	.LVL478-.Ltext0
+.LLST108:
+	.4byte	.LVL492-.Ltext0
+	.4byte	.LVL493-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL478-.Ltext0
-	.4byte	.LFE267-.Ltext0
+	.4byte	.LVL493-.Ltext0
+	.4byte	.LFE277-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST108:
-	.4byte	.LVL477-.Ltext0
-	.4byte	.LVL478-1-.Ltext0
+.LLST109:
+	.4byte	.LVL492-.Ltext0
+	.4byte	.LVL493-1-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL478-.Ltext0
-	.4byte	.LFE267-.Ltext0
+	.4byte	.LVL493-.Ltext0
+	.4byte	.LFE277-.Ltext0
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
-.LLST109:
-	.4byte	.LVL477-.Ltext0
-	.4byte	.LVL478-1-.Ltext0
+.LLST110:
+	.4byte	.LVL492-.Ltext0
+	.4byte	.LVL493-1-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL478-.Ltext0
-	.4byte	.LFE267-.Ltext0
+	.4byte	.LVL493-.Ltext0
+	.4byte	.LFE277-.Ltext0
 	.2byte	0x1
 	.byte	0x52
 	.4byte	0
 	.4byte	0
-.LLST141:
-	.4byte	.LVL640-.Ltext0
-	.4byte	.LVL645-.Ltext0
+.LLST143:
+	.4byte	.LVL661-.Ltext0
+	.4byte	.LVL666-.Ltext0
 	.2byte	0x3
 	.byte	0x91
 	.sleb128 -112
-	.4byte	0
-	.4byte	0
-.LLST182:
-	.4byte	.LVL889-.Ltext0
-	.4byte	.LVL891-.Ltext0
-	.2byte	0x1
-	.byte	0x50
-	.4byte	.LVL892-.Ltext0
-	.4byte	.LVL893-.Ltext0
+	.4byte	0
+	.4byte	0
+.LLST184:
+	.4byte	.LVL885-.Ltext0
+	.4byte	.LVL886-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL895-.Ltext0
-	.4byte	.LVL896-1-.Ltext0
+	.4byte	.LVL886-.Ltext0
+	.4byte	.LVL887-.Ltext0
 	.2byte	0x1
-	.byte	0x50
+	.byte	0x53
 	.4byte	0
 	.4byte	0
-.LLST183:
-	.4byte	.LVL890-.Ltext0
-	.4byte	.LVL900-.Ltext0
+.LLST185:
+	.4byte	.LVL888-.Ltext0
+	.4byte	.LVL895-.Ltext0
 	.2byte	0x1
 	.byte	0x54
-	.4byte	.LVL901-.Ltext0
-	.4byte	.LFE257-.Ltext0
+	.4byte	.LVL896-.Ltext0
+	.4byte	.LFE267-.Ltext0
 	.2byte	0x1
 	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST184:
-	.4byte	.LVL902-.Ltext0
-	.4byte	.LVL908-.Ltext0
+.LLST186:
+	.4byte	.LVL897-.Ltext0
+	.4byte	.LVL898-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL908-.Ltext0
-	.4byte	.LFE241-.Ltext0
+	.4byte	.LVL898-.Ltext0
+	.4byte	.LFE251-.Ltext0
 	.2byte	0x1
-	.byte	0x55
+	.byte	0x54
 	.4byte	0
 	.4byte	0
-.LLST186:
-	.4byte	.LVL915-.Ltext0
-	.4byte	.LVL925-.Ltext0
+.LLST188:
+	.4byte	.LVL910-.Ltext0
+	.4byte	.LVL920-.Ltext0
 	.2byte	0x1
 	.byte	0x57
 	.4byte	0
 	.4byte	0
-.LLST187:
-	.4byte	.LVL916-.Ltext0
-	.4byte	.LVL925-.Ltext0
+.LLST189:
+	.4byte	.LVL911-.Ltext0
+	.4byte	.LVL920-.Ltext0
 	.2byte	0x3
 	.byte	0x91
-	.sleb128 -72
+	.sleb128 -68
 	.4byte	0
 	.4byte	0
-.LLST188:
-	.4byte	.LVL918-.Ltext0
-	.4byte	.LVL919-.Ltext0
+.LLST190:
+	.4byte	.LVL913-.Ltext0
+	.4byte	.LVL914-.Ltext0
 	.2byte	0x1
 	.byte	0x59
-	.4byte	.LVL921-.Ltext0
-	.4byte	.LVL925-.Ltext0
+	.4byte	.LVL916-.Ltext0
+	.4byte	.LVL920-.Ltext0
 	.2byte	0x1
 	.byte	0x59
 	.4byte	0
 	.4byte	0
 .LLST245:
-	.4byte	.LVL1296-.Ltext0
-	.4byte	.LVL1297-.Ltext0
+	.4byte	.LVL1289-.Ltext0
+	.4byte	.LVL1290-.Ltext0
 	.2byte	0x1
 	.byte	0x50
-	.4byte	.LVL1297-.Ltext0
-	.4byte	.LVL1305-.Ltext0
+	.4byte	.LVL1290-.Ltext0
+	.4byte	.LVL1298-.Ltext0
 	.2byte	0x1
-	.byte	0x55
-	.4byte	.LVL1311-.Ltext0
-	.4byte	.LVL1313-.Ltext0
+	.byte	0x56
+	.4byte	.LVL1304-.Ltext0
+	.4byte	.LVL1306-.Ltext0
 	.2byte	0x1
-	.byte	0x55
+	.byte	0x56
 	.4byte	0
 	.4byte	0
 .LLST246:
-	.4byte	.LVL1296-.Ltext0
-	.4byte	.LVL1298-.Ltext0
+	.4byte	.LVL1289-.Ltext0
+	.4byte	.LVL1291-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL1311-.Ltext0
-	.4byte	.LVL1312-.Ltext0
+	.4byte	.LVL1304-.Ltext0
+	.4byte	.LVL1305-.Ltext0
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
 .LLST247:
+	.4byte	.LVL1299-.Ltext0
+	.4byte	.LVL1300-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1301-.Ltext0
+	.4byte	.LVL1305-.Ltext0
+	.2byte	0x1
+	.byte	0x56
 	.4byte	.LVL1306-.Ltext0
 	.4byte	.LVL1307-.Ltext0
 	.2byte	0x1
-	.byte	0x55
+	.byte	0x56
 	.4byte	.LVL1308-.Ltext0
-	.4byte	.LVL1312-.Ltext0
-	.2byte	0x1
-	.byte	0x55
 	.4byte	.LVL1313-.Ltext0
-	.4byte	.LVL1314-.Ltext0
 	.2byte	0x1
-	.byte	0x55
+	.byte	0x56
+	.4byte	.LVL1314-.Ltext0
 	.4byte	.LVL1315-.Ltext0
-	.4byte	.LVL1319-.Ltext0
-	.2byte	0x1
-	.byte	0x55
-	.4byte	.LVL1320-.Ltext0
-	.4byte	.LVL1321-.Ltext0
 	.2byte	0x1
-	.byte	0x55
-	.4byte	.LVL1325-.Ltext0
-	.4byte	.LVL1337-.Ltext0
+	.byte	0x56
+	.4byte	.LVL1319-.Ltext0
+	.4byte	.LVL1331-.Ltext0
 	.2byte	0x1
-	.byte	0x55
-	.4byte	.LVL1338-.Ltext0
-	.4byte	.LVL1367-.Ltext0
+	.byte	0x56
+	.4byte	.LVL1332-.Ltext0
+	.4byte	.LVL1355-.Ltext0
 	.2byte	0x1
-	.byte	0x55
-	.4byte	.LVL1380-.Ltext0
-	.4byte	.LVL1384-.Ltext0
+	.byte	0x56
+	.4byte	.LVL1365-.Ltext0
+	.4byte	.LVL1368-.Ltext0
 	.2byte	0x1
-	.byte	0x55
+	.byte	0x56
 	.4byte	0
 	.4byte	0
 .LLST248:
-	.4byte	.LVL1338-.Ltext0
-	.4byte	.LVL1339-.Ltext0
-	.2byte	0x1
-	.byte	0x58
-	.4byte	.LVL1354-.Ltext0
-	.4byte	.LVL1359-.Ltext0
+	.4byte	.LVL1345-.Ltext0
+	.4byte	.LVL1346-1-.Ltext0
 	.2byte	0x1
-	.byte	0x58
-	.4byte	.LVL1365-.Ltext0
-	.4byte	.LVL1366-.Ltext0
+	.byte	0x53
+	.4byte	.LVL1347-.Ltext0
+	.4byte	.LVL1348-1-.Ltext0
 	.2byte	0x1
-	.byte	0x58
+	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST249:
-	.4byte	.LVL1311-.Ltext0
-	.4byte	.LVL1312-.Ltext0
+	.4byte	.LVL1304-.Ltext0
+	.4byte	.LVL1305-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -52
-	.4byte	.LVL1318-.Ltext0
-	.4byte	.LVL1319-.Ltext0
+	.sleb128 -48
+	.4byte	.LVL1311-.Ltext0
+	.4byte	.LVL1313-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -52
-	.4byte	.LVL1325-.Ltext0
-	.4byte	.LVL1361-.Ltext0
+	.sleb128 -48
+	.4byte	.LVL1319-.Ltext0
+	.4byte	.LVL1350-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -52
-	.4byte	.LVL1361-.Ltext0
-	.4byte	.LVL1362-.Ltext0
+	.sleb128 -48
+	.4byte	.LVL1350-.Ltext0
+	.4byte	.LVL1351-.Ltext0
 	.2byte	0x1
-	.byte	0x53
-	.4byte	.LVL1362-.Ltext0
-	.4byte	.LFE259-.Ltext0
+	.byte	0x52
+	.4byte	.LVL1351-.Ltext0
+	.4byte	.LFE269-.Ltext0
 	.2byte	0x2
 	.byte	0x91
-	.sleb128 -52
+	.sleb128 -48
 	.4byte	0
 	.4byte	0
 .LLST250:
-	.4byte	.LVL1338-.Ltext0
-	.4byte	.LVL1340-.Ltext0
-	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1344-.Ltext0
-	.4byte	.LVL1346-.Ltext0
-	.2byte	0x1
-	.byte	0x5e
-	.4byte	.LVL1347-.Ltext0
-	.4byte	.LVL1348-.Ltext0
-	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL1349-.Ltext0
-	.4byte	.LVL1352-.Ltext0
-	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL1355-.Ltext0
-	.4byte	.LVL1356-.Ltext0
-	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1366-.Ltext0
-	.4byte	.LVL1369-.Ltext0
+	.4byte	.LVL1304-.Ltext0
+	.4byte	.LVL1305-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1371-.Ltext0
-	.4byte	.LVL1373-1-.Ltext0
+	.byte	0x58
+	.4byte	.LVL1312-.Ltext0
+	.4byte	.LVL1313-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1374-.Ltext0
-	.4byte	.LVL1375-.Ltext0
+	.byte	0x58
+	.4byte	.LVL1332-.Ltext0
+	.4byte	.LVL1333-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1379-.Ltext0
-	.4byte	.LVL1381-.Ltext0
+	.byte	0x58
+	.4byte	.LVL1335-.Ltext0
+	.4byte	.LVL1339-.Ltext0
 	.2byte	0x1
-	.byte	0x52
-	.4byte	.LVL1384-.Ltext0
-	.4byte	.LVL1385-.Ltext0
+	.byte	0x58
+	.4byte	.LVL1340-.Ltext0
+	.4byte	.LVL1354-.Ltext0
 	.2byte	0x1
-	.byte	0x52
+	.byte	0x58
 	.4byte	0
 	.4byte	0
 .LLST251:
-	.4byte	.LVL1343-.Ltext0
-	.4byte	.LVL1345-.Ltext0
-	.2byte	0x1
-	.byte	0x51
-	.4byte	.LVL1350-.Ltext0
-	.4byte	.LVL1352-.Ltext0
+	.4byte	.LVL1337-.Ltext0
+	.4byte	.LVL1338-.Ltext0
 	.2byte	0x1
 	.byte	0x51
 	.4byte	0
 	.4byte	0
 .LLST252:
-	.4byte	.LVL1334-.Ltext0
-	.4byte	.LVL1335-.Ltext0
+	.4byte	.LVL1328-.Ltext0
+	.4byte	.LVL1329-.Ltext0
 	.2byte	0x1
 	.byte	0x53
+	.4byte	.LVL1330-.Ltext0
 	.4byte	.LVL1336-.Ltext0
-	.4byte	.LVL1342-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL1351-.Ltext0
-	.4byte	.LVL1352-.Ltext0
+	.4byte	.LVL1341-.Ltext0
+	.4byte	.LVL1342-.Ltext0
 	.2byte	0x1
 	.byte	0x51
-	.4byte	.LVL1366-.Ltext0
-	.4byte	.LVL1368-.Ltext0
+	.4byte	.LVL1354-.Ltext0
+	.4byte	.LVL1356-.Ltext0
 	.2byte	0x1
 	.byte	0x52
-	.4byte	.LVL1368-.Ltext0
-	.4byte	.LVL1370-.Ltext0
+	.4byte	.LVL1356-.Ltext0
+	.4byte	.LVL1357-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1371-.Ltext0
-	.4byte	.LVL1372-.Ltext0
+	.4byte	.LVL1358-.Ltext0
+	.4byte	.LVL1359-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
 	.4byte	0
 .LLST253:
-	.4byte	.LVL1311-.Ltext0
+	.4byte	.LVL1304-.Ltext0
+	.4byte	.LVL1305-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
 	.4byte	.LVL1312-.Ltext0
+	.4byte	.LVL1313-.Ltext0
 	.2byte	0x1
-	.byte	0x59
-	.4byte	.LVL1332-.Ltext0
-	.4byte	.LVL1341-.Ltext0
+	.byte	0x5a
+	.4byte	.LVL1326-.Ltext0
+	.4byte	.LVL1334-.Ltext0
 	.2byte	0x1
-	.byte	0x59
-	.4byte	.LVL1354-.Ltext0
-	.4byte	.LVL1382-.Ltext0
+	.byte	0x5a
+	.4byte	.LVL1344-.Ltext0
+	.4byte	.LVL1366-.Ltext0
 	.2byte	0x1
-	.byte	0x59
-	.4byte	.LVL1384-.Ltext0
-	.4byte	.LFE259-.Ltext0
+	.byte	0x5a
+	.4byte	.LVL1368-.Ltext0
+	.4byte	.LFE269-.Ltext0
 	.2byte	0x1
-	.byte	0x59
+	.byte	0x5a
 	.4byte	0
 	.4byte	0
 .LLST287:
-	.4byte	.LVL1591-.Ltext0
-	.4byte	.LVL1592-1-.Ltext0
+	.4byte	.LVL1581-.Ltext0
+	.4byte	.LVL1582-1-.Ltext0
 	.2byte	0x1
 	.byte	0x53
-	.4byte	.LVL1599-.Ltext0
-	.4byte	.LVL1600-.Ltext0
+	.4byte	.LVL1589-.Ltext0
+	.4byte	.LVL1590-.Ltext0
 	.2byte	0x1
 	.byte	0x53
 	.4byte	0
@@ -42862,1513 +41695,1534 @@ check_vpc_table:
 	.4byte	0
 	.section	.debug_ranges,"",%progbits
 .Ldebug_ranges0:
-	.4byte	.LBB218-.Ltext0
-	.4byte	.LBE218-.Ltext0
-	.4byte	.LBB221-.Ltext0
-	.4byte	.LBE221-.Ltext0
-	.4byte	0
-	.4byte	0
+	.4byte	.LBB222-.Ltext0
+	.4byte	.LBE222-.Ltext0
+	.4byte	.LBB226-.Ltext0
+	.4byte	.LBE226-.Ltext0
 	.4byte	.LBB227-.Ltext0
 	.4byte	.LBE227-.Ltext0
-	.4byte	.LBB234-.Ltext0
-	.4byte	.LBE234-.Ltext0
-	.4byte	.LBB235-.Ltext0
-	.4byte	.LBE235-.Ltext0
 	.4byte	0
 	.4byte	0
-	.4byte	.LBB241-.Ltext0
-	.4byte	.LBE241-.Ltext0
-	.4byte	.LBB248-.Ltext0
-	.4byte	.LBE248-.Ltext0
-	.4byte	.LBB249-.Ltext0
-	.4byte	.LBE249-.Ltext0
+	.4byte	.LBB233-.Ltext0
+	.4byte	.LBE233-.Ltext0
+	.4byte	.LBB238-.Ltext0
+	.4byte	.LBE238-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB244-.Ltext0
+	.4byte	.LBE244-.Ltext0
+	.4byte	.LBB251-.Ltext0
+	.4byte	.LBE251-.Ltext0
+	.4byte	.LBB252-.Ltext0
+	.4byte	.LBE252-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB253-.Ltext0
+	.4byte	.LBE253-.Ltext0
+	.4byte	.LBB256-.Ltext0
+	.4byte	.LBE256-.Ltext0
 	.4byte	0
 	.4byte	0
-	.4byte	.LBB254-.Ltext0
-	.4byte	.LBE254-.Ltext0
-	.4byte	.LBB255-.Ltext0
-	.4byte	.LBE255-.Ltext0
+	.4byte	.LBB259-.Ltext0
+	.4byte	.LBE259-.Ltext0
+	.4byte	.LBB262-.Ltext0
+	.4byte	.LBE262-.Ltext0
 	.4byte	0
 	.4byte	0
-	.4byte	.LBB274-.Ltext0
-	.4byte	.LBE274-.Ltext0
 	.4byte	.LBB277-.Ltext0
 	.4byte	.LBE277-.Ltext0
+	.4byte	.LBB280-.Ltext0
+	.4byte	.LBE280-.Ltext0
 	.4byte	0
 	.4byte	0
-	.4byte	.LBB294-.Ltext0
-	.4byte	.LBE294-.Ltext0
-	.4byte	.LBB295-.Ltext0
-	.4byte	.LBE295-.Ltext0
-	.4byte	.LBB296-.Ltext0
-	.4byte	.LBE296-.Ltext0
+	.4byte	.LBB297-.Ltext0
+	.4byte	.LBE297-.Ltext0
+	.4byte	.LBB298-.Ltext0
+	.4byte	.LBE298-.Ltext0
+	.4byte	.LBB299-.Ltext0
+	.4byte	.LBE299-.Ltext0
 	.4byte	0
 	.4byte	0
-	.4byte	.LBB315-.Ltext0
-	.4byte	.LBE315-.Ltext0
-	.4byte	.LBB320-.Ltext0
-	.4byte	.LBE320-.Ltext0
+	.4byte	.LBB313-.Ltext0
+	.4byte	.LBE313-.Ltext0
+	.4byte	.LBB316-.Ltext0
+	.4byte	.LBE316-.Ltext0
 	.4byte	0
 	.4byte	0
-	.4byte	.LBB321-.Ltext0
-	.4byte	.LBE321-.Ltext0
-	.4byte	.LBB326-.Ltext0
-	.4byte	.LBE326-.Ltext0
+	.4byte	.LBB317-.Ltext0
+	.4byte	.LBE317-.Ltext0
+	.4byte	.LBB318-.Ltext0
+	.4byte	.LBE318-.Ltext0
 	.4byte	0
 	.4byte	0
 	.4byte	.LBB337-.Ltext0
 	.4byte	.LBE337-.Ltext0
-	.4byte	.LBB344-.Ltext0
-	.4byte	.LBE344-.Ltext0
-	.4byte	.LBB345-.Ltext0
-	.4byte	.LBE345-.Ltext0
+	.4byte	.LBB342-.Ltext0
+	.4byte	.LBE342-.Ltext0
 	.4byte	0
 	.4byte	0
-	.4byte	.LBB353-.Ltext0
-	.4byte	.LBE353-.Ltext0
-	.4byte	.LBB354-.Ltext0
-	.4byte	.LBE354-.Ltext0
+	.4byte	.LBB343-.Ltext0
+	.4byte	.LBE343-.Ltext0
+	.4byte	.LBB348-.Ltext0
+	.4byte	.LBE348-.Ltext0
 	.4byte	0
 	.4byte	0
-	.4byte	.LBB362-.Ltext0
-	.4byte	.LBE362-.Ltext0
+	.4byte	.LBB359-.Ltext0
+	.4byte	.LBE359-.Ltext0
+	.4byte	.LBB366-.Ltext0
+	.4byte	.LBE366-.Ltext0
 	.4byte	.LBB367-.Ltext0
 	.4byte	.LBE367-.Ltext0
 	.4byte	0
 	.4byte	0
-	.4byte	.LBB368-.Ltext0
-	.4byte	.LBE368-.Ltext0
-	.4byte	.LBB369-.Ltext0
-	.4byte	.LBE369-.Ltext0
-	.4byte	0
-	.4byte	0
+	.4byte	.LBB375-.Ltext0
+	.4byte	.LBE375-.Ltext0
 	.4byte	.LBB376-.Ltext0
 	.4byte	.LBE376-.Ltext0
-	.4byte	.LBB378-.Ltext0
-	.4byte	.LBE378-.Ltext0
 	.4byte	0
 	.4byte	0
-	.4byte	.LBB420-.Ltext0
-	.4byte	.LBE420-.Ltext0
-	.4byte	.LBB427-.Ltext0
-	.4byte	.LBE427-.Ltext0
-	.4byte	.LBB428-.Ltext0
-	.4byte	.LBE428-.Ltext0
+	.4byte	.LBB384-.Ltext0
+	.4byte	.LBE384-.Ltext0
+	.4byte	.LBB389-.Ltext0
+	.4byte	.LBE389-.Ltext0
 	.4byte	0
 	.4byte	0
-	.4byte	.LBB429-.Ltext0
-	.4byte	.LBE429-.Ltext0
-	.4byte	.LBB432-.Ltext0
-	.4byte	.LBE432-.Ltext0
+	.4byte	.LBB390-.Ltext0
+	.4byte	.LBE390-.Ltext0
+	.4byte	.LBB391-.Ltext0
+	.4byte	.LBE391-.Ltext0
 	.4byte	0
 	.4byte	0
-	.4byte	.LBB435-.Ltext0
-	.4byte	.LBE435-.Ltext0
-	.4byte	.LBB438-.Ltext0
-	.4byte	.LBE438-.Ltext0
+	.4byte	.LBB398-.Ltext0
+	.4byte	.LBE398-.Ltext0
+	.4byte	.LBB400-.Ltext0
+	.4byte	.LBE400-.Ltext0
 	.4byte	0
 	.4byte	0
-	.4byte	.LBB447-.Ltext0
-	.4byte	.LBE447-.Ltext0
-	.4byte	.LBB448-.Ltext0
-	.4byte	.LBE448-.Ltext0
+	.4byte	.LBB442-.Ltext0
+	.4byte	.LBE442-.Ltext0
+	.4byte	.LBB449-.Ltext0
+	.4byte	.LBE449-.Ltext0
+	.4byte	.LBB450-.Ltext0
+	.4byte	.LBE450-.Ltext0
 	.4byte	0
 	.4byte	0
 	.4byte	.LBB451-.Ltext0
 	.4byte	.LBE451-.Ltext0
-	.4byte	.LBB452-.Ltext0
-	.4byte	.LBE452-.Ltext0
-	.4byte	.LBB453-.Ltext0
-	.4byte	.LBE453-.Ltext0
+	.4byte	.LBB454-.Ltext0
+	.4byte	.LBE454-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB457-.Ltext0
+	.4byte	.LBE457-.Ltext0
+	.4byte	.LBB460-.Ltext0
+	.4byte	.LBE460-.Ltext0
 	.4byte	0
 	.4byte	0
-	.4byte	.LBB465-.Ltext0
-	.4byte	.LBE465-.Ltext0
+	.4byte	.LBB469-.Ltext0
+	.4byte	.LBE469-.Ltext0
 	.4byte	.LBB470-.Ltext0
 	.4byte	.LBE470-.Ltext0
 	.4byte	0
 	.4byte	0
-	.4byte	.LBB497-.Ltext0
-	.4byte	.LBE497-.Ltext0
-	.4byte	.LBB504-.Ltext0
-	.4byte	.LBE504-.Ltext0
-	.4byte	.LBB505-.Ltext0
-	.4byte	.LBE505-.Ltext0
+	.4byte	.LBB472-.Ltext0
+	.4byte	.LBE472-.Ltext0
+	.4byte	.LBB473-.Ltext0
+	.4byte	.LBE473-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB474-.Ltext0
+	.4byte	.LBE474-.Ltext0
+	.4byte	.LBB475-.Ltext0
+	.4byte	.LBE475-.Ltext0
+	.4byte	.LBB476-.Ltext0
+	.4byte	.LBE476-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB488-.Ltext0
+	.4byte	.LBE488-.Ltext0
+	.4byte	.LBB493-.Ltext0
+	.4byte	.LBE493-.Ltext0
 	.4byte	0
 	.4byte	0
-	.4byte	.LBB499-.Ltext0
-	.4byte	.LBE499-.Ltext0
-	.4byte	.LBB500-.Ltext0
-	.4byte	.LBE500-.Ltext0
-	.4byte	.LBB501-.Ltext0
-	.4byte	.LBE501-.Ltext0
+	.4byte	.LBB520-.Ltext0
+	.4byte	.LBE520-.Ltext0
+	.4byte	.LBB527-.Ltext0
+	.4byte	.LBE527-.Ltext0
+	.4byte	.LBB528-.Ltext0
+	.4byte	.LBE528-.Ltext0
 	.4byte	0
 	.4byte	0
 	.4byte	.LBB522-.Ltext0
 	.4byte	.LBE522-.Ltext0
 	.4byte	.LBB523-.Ltext0
 	.4byte	.LBE523-.Ltext0
+	.4byte	.LBB524-.Ltext0
+	.4byte	.LBE524-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB545-.Ltext0
+	.4byte	.LBE545-.Ltext0
+	.4byte	.LBB546-.Ltext0
+	.4byte	.LBE546-.Ltext0
 	.4byte	0
 	.4byte	0
 	.section	.debug_line,"",%progbits
 .Ldebug_line0:
 	.section	.debug_str,"MS",%progbits,1
-.LASF471:
+.LASF470:
 	.ascii	"recovery_flash_mode\000"
-.LASF47:
+.LASF46:
 	.ascii	"root_mountflags\000"
-.LASF401:
+.LASF400:
 	.ascii	"error_phy_page\000"
-.LASF339:
+.LASF338:
 	.ascii	"gc_ink_free_return_value\000"
-.LASF172:
+.LASF171:
 	.ascii	"available_pages\000"
-.LASF467:
+.LASF466:
 	.ascii	"mlc_detected_active_page\000"
-.LASF389:
+.LASF388:
 	.ascii	"spperBlk\000"
 .LASF14:
 	.ascii	"size_t\000"
-.LASF190:
+.LASF189:
 	.ascii	"c_ftl_nand_planes_num\000"
 .LASF1:
 	.ascii	"sizetype\000"
-.LASF594:
+.LASF592:
 	.ascii	"re_try_next_blk\000"
-.LASF24:
+.LASF23:
 	.ascii	"saved_command_line\000"
-.LASF589:
+.LASF587:
 	.ascii	"P2V_block_in_plane\000"
-.LASF344:
+.LASF343:
 	.ascii	"ftl_memcmp\000"
-.LASF217:
+.LASF216:
 	.ascii	"g_GlobalSysVersion\000"
-.LASF265:
+.LASF264:
 	.ascii	"g_totle_vendor_block\000"
-.LASF97:
+.LASF96:
 	.ascii	"BlkNum\000"
-.LASF599:
+.LASF597:
 	.ascii	"totle_count\000"
-.LASF489:
+.LASF488:
 	.ascii	"lastWritePage\000"
-.LASF446:
+.LASF445:
 	.ascii	"ftl_check_vpc\000"
-.LASF356:
+.LASF355:
 	.ascii	"request\000"
-.LASF327:
+.LASF326:
 	.ascii	"DeviceCapacity\000"
-.LASF559:
+.LASF558:
 	.ascii	"List_remove_node\000"
-.LASF136:
+.LASF135:
 	.ascii	"PowerOnTimes\000"
-.LASF499:
+.LASF498:
 	.ascii	"FtlLoadEctTbl\000"
-.LASF386:
+.LASF385:
 	.ascii	"req_read_temp\000"
-.LASF70:
+.LASF69:
 	.ascii	"plane_per_die\000"
-.LASF59:
+.LASF58:
 	.ascii	"uint32\000"
-.LASF450:
+.LASF449:
 	.ascii	"FtlSuperblockPowerLostFix\000"
-.LASF226:
+.LASF225:
 	.ascii	"gL2pMapInfo\000"
-.LASF502:
+.LASF501:
 	.ascii	"pMapHeader\000"
-.LASF363:
+.LASF362:
 	.ascii	"__func__\000"
-.LASF478:
+.LASF477:
 	.ascii	"prev_ppa_ver\000"
-.LASF87:
+.LASF86:
 	.ascii	"prev_id\000"
-.LASF104:
+.LASF103:
 	.ascii	"dump_write_en\000"
-.LASF149:
+.LASF148:
 	.ascii	"max_erase_count\000"
-.LASF229:
+.LASF228:
 	.ascii	"req_read\000"
-.LASF396:
+.LASF395:
 	.ascii	"FtlGcScanTempBlk\000"
-.LASF405:
+.LASF404:
 	.ascii	"BOPS_EN\000"
-.LASF422:
+.LASF421:
 	.ascii	"get_new_active_ppa\000"
-.LASF324:
+.LASF323:
 	.ascii	"g_nand_phy_info\000"
-.LASF404:
+.LASF403:
 	.ascii	"FtlGcFreeTempBlock\000"
-.LASF252:
+.LASF251:
 	.ascii	"g_totle_swl_count\000"
-.LASF564:
+.LASF563:
 	.ascii	"tmp_id\000"
-.LASF95:
+.LASF94:
 	.ascii	"sign\000"
-.LASF233:
+.LASF232:
 	.ascii	"req_gc_dst\000"
-.LASF443:
+.LASF442:
 	.ascii	"FtlSysBlkInit\000"
-.LASF468:
+.LASF467:
 	.ascii	"lookup_superblock_id\000"
-.LASF142:
+.LASF141:
 	.ascii	"gc_page_count\000"
-.LASF567:
+.LASF566:
 	.ascii	"tmp_data_count\000"
-.LASF191:
+.LASF190:
 	.ascii	"c_ftl_nand_blk_pre_plane\000"
-.LASF76:
+.LASF75:
 	.ascii	"sec_per_blk\000"
-.LASF371:
+.LASF370:
 	.ascii	"sftl_gc\000"
-.LASF383:
+.LASF382:
 	.ascii	"get_new_gc_superblock\000"
-.LASF563:
+.LASF562:
 	.ascii	"tmp_erase_count\000"
-.LASF425:
+.LASF424:
 	.ascii	"allocate_new_data_superblock\000"
-.LASF382:
+.LASF381:
 	.ascii	"gc_next_superblock\000"
-.LASF23:
+.LASF22:
 	.ascii	"boot_command_line\000"
-.LASF510:
-	.ascii	"FtlUpdateVaildLpn\000"
-.LASF534:
+.LASF533:
 	.ascii	"update_map_block\000"
-.LASF608:
-	.ascii	"FtlBbmMapBadBlock\000"
 .LASF606:
+	.ascii	"FtlBbmMapBadBlock\000"
+.LASF604:
 	.ascii	"FtlBbtInfoPrint\000"
-.LASF56:
+.LASF55:
 	.ascii	"hex_asc_upper\000"
-.LASF462:
+.LASF461:
 	.ascii	"saved_active_page\000"
-.LASF506:
+.LASF505:
 	.ascii	"re_save_vpndata\000"
-.LASF536:
+.LASF535:
 	.ascii	"region_num\000"
-.LASF603:
+.LASF601:
 	.ascii	"re_save_bbmdata\000"
-.LASF623:
+.LASF621:
 	.ascii	"first_lpa_sctidx\000"
-.LASF21:
+.LASF20:
 	.ascii	"__security_initcall_start\000"
-.LASF308:
+.LASF307:
 	.ascii	"g_totle_slc_erase_count\000"
-.LASF597:
+.LASF595:
 	.ascii	"FtlLoadBbt\000"
-.LASF176:
+.LASF175:
 	.ascii	"check_en\000"
-.LASF222:
+.LASF221:
 	.ascii	"g_MaxLbn\000"
-.LASF63:
+.LASF62:
 	.ascii	"page_addr\000"
-.LASF398:
+.LASF397:
 	.ascii	"totle_num\000"
-.LASF325:
+.LASF324:
 	.ascii	"g_nand_ops\000"
-.LASF588:
+.LASF586:
 	.ascii	"ver2\000"
-.LASF215:
-	.ascii	"c_ftl_nand_max_data_blks\000"
 .LASF214:
+	.ascii	"c_ftl_nand_max_data_blks\000"
+.LASF213:
 	.ascii	"c_ftl_nand_data_op_blks_per_plane\000"
-.LASF571:
+.LASF570:
 	.ascii	"FtlFreeSysBlkQueueOut\000"
-.LASF117:
+.LASF116:
 	.ascii	"ftl_data_blk_header\000"
-.LASF231:
+.LASF230:
 	.ascii	"req_erase\000"
-.LASF615:
+.LASF613:
 	.ascii	"num_lpa\000"
-.LASF200:
+.LASF199:
 	.ascii	"c_ftl_nand_byte_pre_oob\000"
-.LASF511:
+.LASF510:
 	.ascii	"FtlEctTblFlush\000"
-.LASF121:
+.LASF120:
 	.ascii	"ftl_sys_blk_header\000"
-.LASF345:
+.LASF344:
 	.ascii	"ftl_memcpy\000"
-.LASF301:
+.LASF300:
 	.ascii	"g_totle_read_page_count\000"
-.LASF237:
+.LASF236:
 	.ascii	"p_sys_data_buf_1\000"
-.LASF45:
+.LASF44:
 	.ascii	"sysctl_panic_on_stackoverflow\000"
-.LASF203:
+.LASF616:
+	.ascii	"FtlCacheWriteBack\000"
+.LASF202:
 	.ascii	"c_ftl_nand_map_region_num\000"
-.LASF53:
+.LASF52:
 	.ascii	"SYSTEM_RESTART\000"
-.LASF126:
+.LASF125:
 	.ascii	"activeFlashMode\000"
-.LASF364:
+.LASF363:
 	.ascii	"read_req\000"
-.LASF261:
+.LASF260:
 	.ascii	"p_vendor_block_table\000"
-.LASF148:
+.LASF147:
 	.ascii	"discard_page_count\000"
-.LASF544:
+.LASF543:
 	.ascii	"vpcTbl\000"
-.LASF276:
+.LASF275:
 	.ascii	"g_buffer_superblock\000"
 .LASF10:
 	.ascii	"long int\000"
-.LASF636:
+.LASF634:
 	.ascii	"create_first_buffer_superblock\000"
-.LASF64:
+.LASF63:
 	.ascii	"p_data\000"
-.LASF246:
+.LASF245:
 	.ascii	"c_gc_page_buf_num\000"
-.LASF655:
+.LASF653:
 	.ascii	"limit\000"
-.LASF515:
+.LASF514:
 	.ascii	"Index\000"
-.LASF225:
+.LASF224:
 	.ascii	"gSysFreeQueue\000"
-.LASF145:
+.LASF144:
 	.ascii	"l2p_write_count\000"
-.LASF622:
+.LASF620:
 	.ascii	"absolute_sector\000"
-.LASF557:
+.LASF556:
 	.ascii	"pHead\000"
-.LASF67:
+.LASF66:
 	.ascii	"nand_phy_info\000"
-.LASF185:
+.LASF184:
 	.ascii	"c_ftl_nand_type\000"
-.LASF335:
+.LASF334:
 	.ascii	"FtlUpdateVaildLpnCount\000"
-.LASF352:
+.LASF351:
 	.ascii	"FlashTestBlk\000"
-.LASF673:
+.LASF671:
 	.ascii	"__builtin_strcpy\000"
-.LASF291:
+.LASF290:
 	.ascii	"g_gc_bad_block_gc_index\000"
-.LASF270:
+.LASF269:
 	.ascii	"p_free_data_block_list_head\000"
-.LASF101:
+.LASF100:
 	.ascii	"pBlkVpcTbl\000"
-.LASF583:
+.LASF581:
 	.ascii	"high\000"
-.LASF638:
+.LASF636:
 	.ascii	"is_sys_blk\000"
-.LASF264:
+.LASF263:
 	.ascii	"p_vendor_region_ppn_table\000"
-.LASF546:
+.LASF545:
 	.ascii	"load_l2p_region\000"
-.LASF532:
+.LASF531:
 	.ascii	"flush_l2p_region\000"
-.LASF38:
+.LASF37:
 	.ascii	"panic_blink\000"
-.LASF458:
+.LASF457:
 	.ascii	"num_free_node\000"
-.LASF360:
+.LASF359:
 	.ascii	"block_size\000"
-.LASF347:
+.LASF346:
 	.ascii	"pvForm\000"
-.LASF209:
+.LASF208:
 	.ascii	"c_ftl_vendor_part_size\000"
-.LASF560:
+.LASF559:
 	.ascii	"pTmp\000"
-.LASF390:
+.LASF389:
 	.ascii	"FtlGcMarkBadPhyBlk\000"
-.LASF114:
+.LASF113:
 	.ascii	"ftl_bbt_blk_header\000"
-.LASF444:
+.LASF443:
 	.ascii	"ftl_scan_all_data\000"
-.LASF354:
+.LASF353:
 	.ascii	"spare\000"
-.LASF570:
+.LASF569:
 	.ascii	"INSERT_FREE_LIST\000"
-.LASF55:
+.LASF54:
 	.ascii	"hex_asc\000"
 .LASF4:
 	.ascii	"signed char\000"
-.LASF299:
+.LASF298:
 	.ascii	"g_totle_read_sector\000"
-.LASF66:
+.LASF65:
 	.ascii	"nand_req\000"
-.LASF263:
+.LASF262:
 	.ascii	"p_vendor_block_ver_table\000"
-.LASF323:
+.LASF322:
 	.ascii	"gNandPhyInfo\000"
-.LASF484:
+.LASF483:
 	.ascii	"FtlL2PDataInit\000"
-.LASF523:
+.LASF522:
 	.ascii	"action\000"
-.LASF406:
+.LASF405:
 	.ascii	"superblock_id\000"
-.LASF314:
+.LASF313:
 	.ascii	"g_gc_head_data_block\000"
-.LASF54:
+.LASF53:
 	.ascii	"system_state\000"
-.LASF621:
+.LASF619:
 	.ascii	"FtlRead\000"
-.LASF273:
+.LASF272:
 	.ascii	"g_num_free_superblocks\000"
-.LASF593:
+.LASF591:
 	.ascii	"pBbtHeader\000"
 .LASF5:
 	.ascii	"unsigned char\000"
-.LASF346:
+.LASF345:
 	.ascii	"pvTo\000"
-.LASF48:
+.LASF47:
 	.ascii	"early_boot_irqs_disabled\000"
-.LASF205:
+.LASF204:
 	.ascii	"c_ftl_nand_vendor_region_num\000"
-.LASF464:
+.LASF463:
 	.ascii	"next_free_active_plane\000"
-.LASF521:
+.LASF520:
 	.ascii	"FtlVendorPartWrite\000"
-.LASF49:
+.LASF48:
 	.ascii	"SYSTEM_BOOTING\000"
-.LASF120:
+.LASF119:
 	.ascii	"regionId\000"
-.LASF613:
+.LASF611:
 	.ascii	"start_lpa\000"
-.LASF311:
+.LASF310:
 	.ascii	"g_in_gc_progress\000"
-.LASF19:
+.LASF18:
 	.ascii	"__con_initcall_start\000"
-.LASF84:
+.LASF83:
 	.ascii	"read_page\000"
-.LASF665:
-	.ascii	"GNU C89 6.3.1 20170404 -mlittle-endian -mapcs -mno-"
-	.ascii	"sched-prolog -mabi=aapcs-linux -mno-thumb-interwork"
-	.ascii	" -mfpu=vfp -marm -march=armv7-a -mfloat-abi=soft -m"
-	.ascii	"tune=cortex-a9 -mtls-dialect=gnu -g -Os -std=gnu90 "
-	.ascii	"-p -fno-strict-aliasing -fno-common -fno-PIE -fno-d"
-	.ascii	"warf2-cfi-asm -fno-ipa-sra -funwind-tables -fno-del"
-	.ascii	"ete-null-pointer-checks -fno-stack-protector -fno-o"
-	.ascii	"mit-frame-pointer -fno-optimize-sibling-calls -fno-"
-	.ascii	"var-tracking-assignments -fno-strict-overflow -fno-"
-	.ascii	"merge-all-constants -fmerge-constants -fstack-check"
-	.ascii	"=no -fconserve-stack --param allow-store-data-races"
-	.ascii	"=0\000"
-.LASF432:
+.LASF283:
+	.ascii	"g_gc_blk_num\000"
+.LASF431:
 	.ascii	"GetSwlReplaceBlock\000"
-.LASF91:
+.LASF90:
 	.ascii	"ftl_sys_info\000"
-.LASF159:
+.LASF158:
 	.ascii	"refresh_start_lpa\000"
-.LASF460:
+.LASF459:
 	.ascii	"FtlPowerLostRecovery\000"
-.LASF561:
+.LASF560:
 	.ascii	"insert_free_list\000"
 .LASF13:
 	.ascii	"_Bool\000"
-.LASF461:
+.LASF460:
 	.ascii	"FtlRecoverySuperblock\000"
-.LASF29:
+.LASF28:
 	.ascii	"linux_proc_banner\000"
-.LASF430:
+.LASF429:
 	.ascii	"get_new_id\000"
-.LASF317:
+.LASF316:
 	.ascii	"g_cur_erase_blk\000"
-.LASF350:
+.LASF349:
 	.ascii	"table\000"
-.LASF166:
+.LASF165:
 	.ascii	"value\000"
-.LASF224:
+.LASF223:
 	.ascii	"gSysInfo\000"
-.LASF375:
+.LASF374:
 	.ascii	"gc_page_num\000"
-.LASF349:
+.LASF348:
 	.ascii	"FlashGetBadBlockList\000"
-.LASF90:
+.LASF89:
 	.ascii	"BbtMap\000"
 .LASF2:
 	.ascii	"char\000"
-.LASF650:
+.LASF648:
 	.ascii	"FtlSysBlkNumInit\000"
-.LASF659:
+.LASF657:
 	.ascii	"memset\000"
-.LASF329:
+.LASF328:
 	.ascii	"TotleReadBufferCount1\000"
-.LASF161:
+.LASF160:
 	.ascii	"totle_read_sector\000"
-.LASF331:
+.LASF330:
 	.ascii	"TotleReadBufferCount3\000"
-.LASF628:
+.LASF626:
 	.ascii	"FtlSysFlush\000"
-.LASF258:
+.LASF257:
 	.ascii	"p_map_block_ver_table\000"
-.LASF132:
+.LASF131:
 	.ascii	"bufferPageOffset\000"
-.LASF525:
+.LASF524:
 	.ascii	"l2p_region_id\000"
-.LASF411:
+.LASF410:
 	.ascii	"FtlGcUpdatePage\000"
-.LASF437:
+.LASF436:
 	.ascii	"maxFreeBlockEraseCount\000"
-.LASF643:
+.LASF641:
 	.ascii	"re_test_next_page\000"
-.LASF43:
+.LASF42:
 	.ascii	"panic_on_io_nmi\000"
-.LASF426:
+.LASF425:
 	.ascii	"allocate_data_superblock\000"
-.LASF576:
+.LASF575:
 	.ascii	"FtlFreeSysBlkQueueIn\000"
-.LASF492:
+.LASF491:
 	.ascii	"pMapBlkHeader\000"
-.LASF72:
+.LASF71:
 	.ascii	"blk_per_die\000"
-.LASF330:
+.LASF329:
 	.ascii	"TotleReadBufferCount2\000"
-.LASF378:
+.LASF377:
 	.ascii	"num_io\000"
-.LASF585:
+.LASF583:
 	.ascii	"pagePreBlk\000"
-.LASF130:
+.LASF129:
 	.ascii	"activePageOffset\000"
-.LASF78:
+.LASF77:
 	.ascii	"reserved_blk\000"
-.LASF483:
+.LASF482:
 	.ascii	"FtlLoadMapInfo\000"
-.LASF367:
+.LASF366:
 	.ascii	"block_index\000"
-.LASF652:
+.LASF650:
 	.ascii	"FtlPrintInfo\000"
-.LASF481:
+.LASF480:
 	.ascii	"FtlReUsePrevPpa\000"
-.LASF251:
+.LASF250:
 	.ascii	"p_swl_mul_table\000"
-.LASF565:
+.LASF564:
 	.ascii	"insert_data_list\000"
-.LASF646:
+.LASF644:
 	.ascii	"FtlVariablesInit\000"
-.LASF269:
+.LASF268:
 	.ascii	"p_data_block_list_table\000"
-.LASF513:
+.LASF512:
 	.ascii	"ec_mod_count\000"
-.LASF436:
+.LASF435:
 	.ascii	"pNode\000"
-.LASF305:
+.LASF304:
 	.ascii	"g_totle_mlc_erase_count\000"
-.LASF586:
+.LASF584:
 	.ascii	"ftl_cmp_data_ver\000"
-.LASF277:
+.LASF276:
 	.ascii	"g_gc_temp_superblock\000"
-.LASF262:
+.LASF261:
 	.ascii	"p_vendor_block_valid_page_count\000"
-.LASF500:
+.LASF499:
 	.ascii	"FtlScanSysBlk\000"
-.LASF669:
+.LASF667:
 	.ascii	"l2p_addr_tran\000"
-.LASF310:
+.LASF309:
 	.ascii	"g_max_erase_count\000"
-.LASF211:
+.LASF210:
 	.ascii	"c_ftl_nand_init_sys_blks_per_plane\000"
-.LASF183:
+.LASF182:
 	.ascii	"ftl_gc_page_buffer\000"
-.LASF234:
+.LASF233:
 	.ascii	"g_req_cache\000"
-.LASF649:
+.LASF647:
 	.ascii	"FtlConstantsInit\000"
-.LASF452:
+.LASF451:
 	.ascii	"pages\000"
-.LASF421:
+.LASF420:
 	.ascii	"update_vpc_list\000"
-.LASF662:
+.LASF660:
 	.ascii	"rknand_print_hex\000"
-.LASF409:
+.LASF408:
 	.ascii	"p_gc_page\000"
 .LASF15:
 	.ascii	"elf_hwcap\000"
-.LASF395:
+.LASF394:
 	.ascii	"Ftl_get_new_temp_ppa\000"
-.LASF137:
+.LASF136:
 	.ascii	"PowerLostTimes\000"
-.LASF578:
+.LASF572:
 	.ascii	"blk_Id\000"
-.LASF294:
+.LASF293:
 	.ascii	"g_gc_merge_free_blk_threshold\000"
-.LASF39:
+.LASF38:
 	.ascii	"oops_in_progress\000"
-.LASF433:
+.LASF432:
 	.ascii	"node_id\000"
-.LASF135:
+.LASF134:
 	.ascii	"cache_write_count\000"
-.LASF260:
+.LASF259:
 	.ascii	"g_totle_map_block\000"
-.LASF660:
+.LASF658:
 	.ascii	"printk\000"
-.LASF547:
+.LASF546:
 	.ascii	"phyAddr\000"
-.LASF187:
+.LASF186:
 	.ascii	"c_ftl_nand_planes_per_die\000"
-.LASF490:
+.LASF489:
 	.ascii	"ppnTbl\000"
-.LASF365:
+.LASF364:
 	.ascii	"FlashReadPages\000"
-.LASF376:
+.LASF375:
 	.ascii	"gc_blk\000"
-.LASF485:
+.LASF484:
 	.ascii	"FtlLoadVonderInfo\000"
-.LASF555:
+.LASF554:
 	.ascii	"List_get_gc_head_node\000"
-.LASF504:
+.LASF503:
 	.ascii	"pSysHeader\000"
-.LASF181:
+.LASF180:
 	.ascii	"scr_ppa\000"
-.LASF210:
+.LASF209:
 	.ascii	"c_ftl_nand_sys_blks_per_plane\000"
-.LASF573:
+.LASF574:
 	.ascii	"FtlFreeSysBLkSort\000"
-.LASF267:
+.LASF266:
 	.ascii	"p_l2p_map_buf\000"
-.LASF644:
+.LASF642:
 	.ascii	"IsBlkInVendorPart\000"
-.LASF600:
+.LASF598:
 	.ascii	"FtlBbtMemInit\000"
-.LASF245:
+.LASF244:
 	.ascii	"gp_gc_page_buf_info\000"
-.LASF574:
-	.ascii	"tmp_blk_id\000"
-.LASF168:
+.LASF167:
 	.ascii	"front\000"
-.LASF236:
+.LASF235:
 	.ascii	"p_sys_data_buf\000"
-.LASF94:
+.LASF93:
 	.ascii	"index\000"
-.LASF539:
+.LASF538:
 	.ascii	"lastMapBlk\000"
-.LASF625:
+.LASF623:
 	.ascii	"last_lpa_nscts\000"
-.LASF302:
+.LASF301:
 	.ascii	"g_tmp_data_superblock_id\000"
-.LASF248:
+.LASF247:
 	.ascii	"gp_ect_tbl_info\000"
-.LASF656:
+.LASF654:
 	.ascii	"rknand_proc_ftlread\000"
-.LASF543:
+.LASF542:
 	.ascii	"ftl_free_no_use_map_blk\000"
-.LASF667:
+.LASF665:
 	.ascii	"/home/ldq/rk-linux/kernel-debug\000"
-.LASF36:
+.LASF35:
 	.ascii	"atomic_notifier_head\000"
-.LASF385:
+.LASF384:
 	.ascii	"FtlReadRefresh\000"
-.LASF188:
+.LASF187:
 	.ascii	"c_ftl_nand_blks_per_die\000"
-.LASF566:
+.LASF565:
 	.ascii	"node_data_count\000"
-.LASF602:
+.LASF600:
 	.ascii	"write_count\000"
-.LASF242:
+.LASF241:
 	.ascii	"p_io_spare_buf\000"
-.LASF480:
+.LASF479:
 	.ascii	"current_ppa_ver\000"
 .LASF0:
 	.ascii	"long unsigned int\000"
-.LASF174:
+.LASF173:
 	.ascii	"num_planes\000"
-.LASF122:
+.LASF121:
 	.ascii	"res32_0\000"
-.LASF123:
+.LASF122:
 	.ascii	"res32_1\000"
-.LASF434:
+.LASF433:
 	.ascii	"min_ec_id\000"
-.LASF362:
+.LASF361:
 	.ascii	"check\000"
-.LASF30:
+.LASF29:
 	.ascii	"console_printk\000"
-.LASF672:
+.LASF670:
 	.ascii	"strcpy\000"
-.LASF62:
+.LASF61:
 	.ascii	"status\000"
-.LASF69:
+.LASF68:
 	.ascii	"die_num\000"
-.LASF629:
+.LASF627:
 	.ascii	"sftl_init\000"
-.LASF293:
+.LASF292:
 	.ascii	"g_gc_free_blk_threshold\000"
-.LASF33:
+.LASF32:
 	.ascii	"kptr_restrict\000"
-.LASF595:
+.LASF593:
 	.ascii	"FtlLoadFactoryBbt\000"
-.LASF408:
+.LASF407:
 	.ascii	"scan_page_num\000"
-.LASF150:
+.LASF149:
 	.ascii	"min_erase_count\000"
-.LASF186:
+.LASF185:
 	.ascii	"c_ftl_nand_die_num\000"
-.LASF307:
+.LASF306:
 	.ascii	"g_min_erase_count\000"
-.LASF482:
+.LASF481:
 	.ascii	"ftl_sb_update_avl_pages\000"
-.LASF106:
+.LASF105:
 	.ascii	"region_id\000"
-.LASF632:
+.LASF630:
 	.ascii	"ftl_low_format\000"
-.LASF343:
+.LASF342:
 	.ascii	"str2\000"
-.LASF96:
+.LASF95:
 	.ascii	"maxRegion\000"
-.LASF326:
+.LASF325:
 	.ascii	"ftl_temp_buf\000"
-.LASF162:
+.LASF161:
 	.ascii	"progErrorCount\000"
-.LASF524:
+.LASF523:
 	.ascii	"ram_region_id\000"
-.LASF336:
+.LASF335:
 	.ascii	"check_vpc_table\000"
-.LASF454:
+.LASF453:
 	.ascii	"FtlGcPageRecovery\000"
-.LASF31:
+.LASF30:
 	.ascii	"printk_delay_msec\000"
-.LASF494:
+.LASF493:
 	.ascii	"ftl_get_blk_mode\000"
-.LASF28:
+.LASF27:
 	.ascii	"linux_banner\000"
-.LASF664:
+.LASF662:
 	.ascii	"sprintf\000"
-.LASF109:
+.LASF108:
 	.ascii	"ftl_ect_tbl_info\000"
-.LASF541:
+.LASF540:
 	.ascii	"ftl_map_blk_alloc_new_blk\000"
-.LASF514:
+.LASF513:
 	.ascii	"FtlVendorPartRead\000"
-.LASF612:
+.LASF610:
 	.ascii	"FtlWrite\000"
-.LASF75:
+.LASF74:
 	.ascii	"sec_per_page\000"
-.LASF71:
+.LASF70:
 	.ascii	"blk_per_plane\000"
-.LASF402:
+.LASF401:
 	.ascii	"ReInit\000"
-.LASF519:
+.LASF518:
 	.ascii	"result\000"
-.LASF100:
+.LASF99:
 	.ascii	"pBlkVerTbl\000"
-.LASF451:
+.LASF450:
 	.ascii	"req_temp\000"
-.LASF118:
+.LASF117:
 	.ascii	"lastPpa\000"
-.LASF322:
+.LASF321:
 	.ascii	"g_power_lost_recovery_flag\000"
-.LASF604:
+.LASF602:
 	.ascii	"FtlBbt2Bitmap\000"
-.LASF73:
+.LASF72:
 	.ascii	"page_per_blk\000"
-.LASF473:
+.LASF472:
 	.ascii	"recovery_super_page\000"
-.LASF313:
+.LASF312:
 	.ascii	"g_ftl_nand_free_count\000"
-.LASF369:
+.LASF368:
 	.ascii	"die_index\000"
-.LASF416:
+.LASF415:
 	.ascii	"numREQ\000"
-.LASF79:
+.LASF78:
 	.ascii	"ecc_bits\000"
-.LASF634:
+.LASF632:
 	.ascii	"sys_bad_block_cnt\000"
-.LASF196:
+.LASF195:
 	.ascii	"c_ftl_nand_page_pre_super_blk\000"
-.LASF178:
+.LASF177:
 	.ascii	"reversed\000"
-.LASF403:
+.LASF402:
 	.ascii	"read_super_page\000"
-.LASF40:
+.LASF39:
 	.ascii	"panic_timeout\000"
-.LASF128:
+.LASF127:
 	.ascii	"gcTempFlashMode\000"
-.LASF296:
+.LASF295:
 	.ascii	"g_totle_gc_page_count\000"
-.LASF238:
+.LASF237:
 	.ascii	"p_vendor_data_buf\000"
-.LASF601:
+.LASF599:
 	.ascii	"FtlBbmTblFlush\000"
-.LASF568:
+.LASF567:
 	.ascii	"tmp_multiplier_value\000"
-.LASF661:
+.LASF659:
 	.ascii	"__memzero\000"
-.LASF407:
+.LASF406:
 	.ascii	"lookup_ppa\000"
 .LASF8:
 	.ascii	"long long int\000"
-.LASF306:
+.LASF305:
 	.ascii	"g_totle_avg_erase_count\000"
-.LASF216:
+.LASF215:
 	.ascii	"ftl_gc_temp_power_lost_recovery_flag\000"
-.LASF552:
+.LASF551:
 	.ascii	"prev_valid_page_count\000"
-.LASF388:
+.LASF387:
 	.ascii	"FtlGcFreeBadSuperBlk\000"
 .LASF11:
 	.ascii	"__kernel_size_t\000"
-.LASF223:
+.LASF222:
 	.ascii	"gBbtInfo\000"
-.LASF227:
+.LASF226:
 	.ascii	"gVendorBlkInfo\000"
-.LASF423:
+.LASF422:
 	.ascii	"p_superblock\000"
-.LASF271:
+.LASF270:
 	.ascii	"p_data_block_list_head\000"
-.LASF476:
+.LASF475:
 	.ascii	"last_page_version\000"
-.LASF232:
+.LASF231:
 	.ascii	"req_gc\000"
-.LASF611:
+.LASF609:
 	.ascii	"FtlDiscard\000"
-.LASF37:
+.LASF36:
 	.ascii	"panic_notifier_list\000"
-.LASF288:
+.LASF287:
 	.ascii	"g_gc_next_blk\000"
-.LASF387:
+.LASF386:
 	.ascii	"add_count\000"
-.LASF155:
+.LASF154:
 	.ascii	"inkDie_write_and_check_en\000"
-.LASF582:
+.LASF580:
 	.ascii	"FtlGetLastWrittenPage\000"
-.LASF466:
+.LASF465:
 	.ascii	"detected_active_page\000"
-.LASF284:
-	.ascii	"g_gc_blk_num\000"
-.LASF25:
+.LASF509:
+	.ascii	"FtlUpdateVaildLpn\000"
+.LASF24:
 	.ascii	"reset_devices\000"
-.LASF158:
+.LASF157:
 	.ascii	"refresh_enable_mode\000"
-.LASF607:
+.LASF605:
 	.ascii	"FtlBbmIsBadBlock\000"
-.LASF177:
+.LASF176:
 	.ascii	"dump_writed\000"
-.LASF392:
+.LASF391:
 	.ascii	"FtlGcRefreshBlock\000"
-.LASF89:
+.LASF88:
 	.ascii	"fBbtBlk\000"
-.LASF537:
+.LASF536:
 	.ascii	"blkTbl\000"
-.LASF381:
+.LASF380:
 	.ascii	"p_dataHeader\000"
-.LASF463:
+.LASF462:
 	.ascii	"saved_active_plane\000"
-.LASF127:
+.LASF126:
 	.ascii	"bufferFlashMode\000"
-.LASF115:
+.LASF114:
 	.ascii	"count\000"
-.LASF134:
+.LASF133:
 	.ascii	"gcTempPageOffset\000"
-.LASF359:
+.LASF358:
 	.ascii	"addr\000"
-.LASF140:
+.LASF139:
 	.ascii	"GlobalSysVersion\000"
-.LASF412:
+.LASF411:
 	.ascii	"src_ppa\000"
-.LASF558:
+.LASF557:
 	.ascii	"List_pop_index_node\000"
-.LASF274:
+.LASF273:
 	.ascii	"g_num_data_superblocks\000"
-.LASF448:
+.LASF447:
 	.ascii	"error_flag\000"
-.LASF666:
+.LASF664:
 	.ascii	"drivers/rkflash/rksftl/rk_sftl.c\000"
-.LASF312:
+.LASF311:
 	.ascii	"g_in_swl_replace\000"
-.LASF170:
+.LASF169:
 	.ascii	"ftl_superblock_info\000"
 .LASF3:
 	.ascii	"unsigned int\000"
-.LASF99:
+.LASF98:
 	.ascii	"pBlkTbl\000"
-.LASF169:
+.LASF168:
 	.ascii	"rear\000"
-.LASF193:
+.LASF192:
 	.ascii	"c_ftl_nand_bbm_buf_size\000"
-.LASF220:
+.LASF219:
 	.ascii	"g_MaxLpn\000"
-.LASF542:
+.LASF541:
 	.ascii	"blk_index\000"
-.LASF457:
+.LASF456:
 	.ascii	"num_data_node\000"
-.LASF51:
+.LASF50:
 	.ascii	"SYSTEM_HALT\000"
-.LASF292:
+.LASF291:
 	.ascii	"g_gc_bad_block_temp_tbl\000"
-.LASF34:
+.LASF33:
 	.ascii	"kmsg_fops\000"
-.LASF569:
+.LASF568:
 	.ascii	"INSERT_DATA_LIST\000"
-.LASF616:
+.LASF614:
 	.ascii	"sctidx\000"
-.LASF391:
+.LASF390:
 	.ascii	"superBlk\000"
-.LASF184:
+.LASF183:
 	.ascii	"flag\000"
-.LASF285:
+.LASF284:
 	.ascii	"g_gc_page_offset\000"
-.LASF642:
+.LASF640:
 	.ascii	"test_mode\000"
-.LASF300:
+.LASF299:
 	.ascii	"g_totle_discard_page_count\000"
-.LASF218:
+.LASF217:
 	.ascii	"g_GlobalDataVersion\000"
-.LASF653:
+.LASF651:
 	.ascii	"debug_flag\000"
-.LASF328:
+.LASF327:
 	.ascii	"gFtlInitStatus\000"
-.LASF531:
+.LASF530:
 	.ascii	"hit_count\000"
-.LASF83:
+.LASF82:
 	.ascii	"prog_page\000"
-.LASF131:
+.LASF130:
 	.ascii	"bufferSuperblockId\000"
-.LASF493:
+.LASF492:
 	.ascii	"FtlLoadSysInfo\000"
-.LASF156:
+.LASF155:
 	.ascii	"readErrorCount\000"
-.LASF173:
+.LASF172:
 	.ascii	"current_plane\000"
-.LASF400:
+.LASF399:
 	.ascii	"page_count\000"
-.LASF278:
+.LASF277:
 	.ascii	"g_gc_superblock\000"
-.LASF275:
+.LASF274:
 	.ascii	"g_active_superblock\000"
-.LASF518:
+.LASF517:
 	.ascii	"offset\000"
-.LASF253:
+.LASF252:
 	.ascii	"p_valid_page_count_table\000"
-.LASF198:
+.LASF197:
 	.ascii	"c_ftl_nand_sec_pre_page_shift\000"
-.LASF27:
+.LASF26:
 	.ascii	"initcall_debug\000"
-.LASF393:
+.LASF392:
 	.ascii	"block\000"
-.LASF355:
+.LASF354:
 	.ascii	"FlashEraseBlocks\000"
-.LASF86:
+.LASF85:
 	.ascii	"page\000"
-.LASF414:
+.LASF413:
 	.ascii	"IsBlkInGcList\000"
-.LASF342:
+.LASF341:
 	.ascii	"str1\000"
-.LASF68:
+.LASF67:
 	.ascii	"nand_type\000"
-.LASF617:
+.LASF615:
 	.ascii	"nscts\000"
-.LASF105:
+.LASF104:
 	.ascii	"ftl_l2p_ram_map_info\000"
-.LASF298:
+.LASF297:
 	.ascii	"g_totle_write_sector\000"
-.LASF447:
+.LASF446:
 	.ascii	"prev_ppa\000"
-.LASF81:
+.LASF80:
 	.ascii	"get_bad_blk_list\000"
-.LASF297:
+.LASF296:
 	.ascii	"g_totle_write_page_count\000"
-.LASF647:
+.LASF645:
 	.ascii	"FtlMemInit\000"
-.LASF304:
+.LASF303:
 	.ascii	"g_totle_l2p_write_count\000"
-.LASF590:
+.LASF588:
 	.ascii	"P2V_plane\000"
 .LASF12:
 	.ascii	"bool\000"
-.LASF257:
+.LASF256:
 	.ascii	"p_map_block_valid_page_count\000"
-.LASF340:
+.LASF339:
 	.ascii	"check_buf\000"
-.LASF562:
+.LASF561:
 	.ascii	"node_erase_count\000"
-.LASF556:
+.LASF555:
 	.ascii	"List_pop_head_node\000"
-.LASF146:
+.LASF145:
 	.ascii	"slc_erase_count\000"
-.LASF545:
+.LASF544:
 	.ascii	"minValidPageCount\000"
-.LASF645:
+.LASF643:
 	.ascii	"ven_blk\000"
-.LASF194:
+.LASF193:
 	.ascii	"c_ftl_nand_page_pre_blk\000"
-.LASF108:
+.LASF107:
 	.ascii	"L2PMap\000"
-.LASF348:
+.LASF347:
 	.ascii	"size\000"
-.LASF548:
+.LASF547:
 	.ascii	"List_update_data_list\000"
-.LASF309:
+.LASF308:
 	.ascii	"g_totle_sys_slc_erase_count\000"
-.LASF125:
+.LASF124:
 	.ascii	"maxDieNum\000"
-.LASF247:
+.LASF246:
 	.ascii	"g_gc_num_req\000"
-.LASF92:
+.LASF91:
 	.ascii	"maxLogicBlk\000"
-.LASF151:
+.LASF150:
 	.ascii	"totle_power_on_run_times\000"
-.LASF522:
+.LASF521:
 	.ascii	"log2phys\000"
-.LASF470:
+.LASF469:
 	.ascii	"detected_error_page\000"
-.LASF584:
+.LASF582:
 	.ascii	"spareBuf\000"
-.LASF189:
+.LASF188:
 	.ascii	"c_ftl_nand_blks_per_die_shift\000"
-.LASF141:
+.LASF140:
 	.ascii	"ftl_sys_ext_info\000"
-.LASF266:
+.LASF265:
 	.ascii	"p_l2p_ram_map\000"
-.LASF98:
+.LASF97:
 	.ascii	"maxBlkNum\000"
-.LASF663:
+.LASF661:
 	.ascii	"ftl_malloc\000"
-.LASF445:
+.LASF444:
 	.ascii	"pDataHeader\000"
-.LASF171:
+.LASF170:
 	.ascii	"current_page\000"
-.LASF82:
+.LASF81:
 	.ascii	"erase_blk\000"
-.LASF456:
+.LASF455:
 	.ascii	"SupperBlkListInit\000"
-.LASF635:
+.LASF633:
 	.ascii	"create_first_active_superblock\000"
-.LASF167:
+.LASF166:
 	.ascii	"sys_blk_queue\000"
-.LASF35:
+.LASF34:
 	.ascii	"file_operations\000"
-.LASF361:
+.LASF360:
 	.ascii	"FlashProgPages\000"
-.LASF520:
+.LASF519:
 	.ascii	"ppn_index\000"
 .LASF9:
 	.ascii	"long long unsigned int\000"
-.LASF221:
+.LASF220:
 	.ascii	"g_VaildLpn\000"
-.LASF250:
+.LASF249:
 	.ascii	"p_erase_count_table\000"
-.LASF529:
+.LASF528:
 	.ascii	"select_l2p_ram_region\000"
-.LASF439:
+.LASF438:
 	.ascii	"GetFreeBlockMaxEraseCount\000"
-.LASF553:
+.LASF552:
 	.ascii	"prev_multiplier_value\000"
-.LASF22:
+.LASF21:
 	.ascii	"__security_initcall_end\000"
-.LASF41:
+.LASF40:
 	.ascii	"panic_on_oops\000"
-.LASF268:
+.LASF267:
 	.ascii	"g_l2p_last_update_region_id\000"
-.LASF202:
+.LASF201:
 	.ascii	"c_ftl_nand_totle_phy_blks\000"
-.LASF637:
+.LASF635:
 	.ascii	"FtlLowFormatEraseBlock\000"
-.LASF77:
+.LASF76:
 	.ascii	"byte_per_sec\000"
-.LASF182:
+.LASF181:
 	.ascii	"des_ppa\000"
-.LASF256:
+.LASF255:
 	.ascii	"p_map_block_table\000"
-.LASF17:
-	.ascii	"soc_mb\000"
-.LASF549:
+.LASF548:
 	.ascii	"prev_node_id\000"
-.LASF244:
+.LASF243:
 	.ascii	"p_gc_data_buf\000"
-.LASF533:
+.LASF532:
 	.ascii	"FtlMapWritePage\000"
 .LASF16:
 	.ascii	"elf_hwcap2\000"
-.LASF255:
+.LASF254:
 	.ascii	"p_blk_mode_table\000"
-.LASF286:
+.LASF285:
 	.ascii	"g_gc_cur_blk_valid_pages\000"
-.LASF580:
+.LASF578:
 	.ascii	"FtlFreeSysBlkQueueEmpty\000"
-.LASF195:
+.LASF194:
 	.ascii	"c_ftl_nand_page_pre_slc_blk\000"
-.LASF516:
+.LASF515:
 	.ascii	"nSec\000"
-.LASF598:
+.LASF596:
 	.ascii	"FtlBbtCalcTotleCnt\000"
-.LASF197:
+.LASF196:
 	.ascii	"c_ftl_nand_sec_pre_page\000"
-.LASF496:
+.LASF495:
 	.ascii	"FtlSlcSuperblockCheck\000"
-.LASF587:
+.LASF585:
 	.ascii	"ver1\000"
-.LASF154:
+.LASF153:
 	.ascii	"SlcPartLbaEndSector\000"
-.LASF207:
+.LASF206:
 	.ascii	"c_ftl_nand_max_map_blks\000"
-.LASF498:
+.LASF497:
 	.ascii	"FtlGcReFreshBadBlk\000"
-.LASF477:
+.LASF476:
 	.ascii	"last_mlc_page_version\000"
-.LASF509:
+.LASF508:
 	.ascii	"FtlMapBlkWriteDump_data\000"
-.LASF249:
+.LASF248:
 	.ascii	"g_ect_tbl_info_size\000"
-.LASF111:
+.LASF110:
 	.ascii	"totleEc\000"
-.LASF441:
+.LASF440:
 	.ascii	"GetFreeBlockMinEraseCount\000"
-.LASF438:
+.LASF437:
 	.ascii	"minDataBlockEraseCount\000"
-.LASF52:
+.LASF51:
 	.ascii	"SYSTEM_POWER_OFF\000"
-.LASF219:
+.LASF218:
 	.ascii	"g_MaxLbaSector\000"
-.LASF88:
+.LASF87:
 	.ascii	"version\000"
-.LASF32:
+.LASF31:
 	.ascii	"dmesg_restrict\000"
-.LASF465:
+.LASF464:
 	.ascii	"next_free_active_page\000"
-.LASF133:
+.LASF132:
 	.ascii	"gcTempSuperblockId\000"
-.LASF624:
+.LASF622:
 	.ascii	"first_lpa_nscts\000"
-.LASF303:
+.LASF302:
 	.ascii	"g_totle_cache_write_count\000"
-.LASF497:
+.LASF496:
 	.ascii	"ftl_set_blk_mode\000"
-.LASF453:
+.LASF452:
 	.ascii	"Ftl_load_ext_data\000"
-.LASF507:
+.LASF506:
 	.ascii	"FtlWriteDump_data\000"
-.LASF639:
+.LASF637:
 	.ascii	"max_test_page_num\000"
-.LASF394:
+.LASF393:
 	.ascii	"Ftl_gc_temp_data_write_back\000"
-.LASF370:
+.LASF369:
 	.ascii	"block_in_die\000"
-.LASF419:
+.LASF418:
 	.ascii	"FtlGcBufInit\000"
-.LASF235:
+.LASF234:
 	.ascii	"p_plane_order_table\000"
-.LASF102:
+.LASF101:
 	.ascii	"pMapPpnTbl\000"
-.LASF431:
+.LASF430:
 	.ascii	"free_data_superblock\000"
-.LASF147:
+.LASF146:
 	.ascii	"sys_slc_erase_count\000"
-.LASF208:
+.LASF207:
 	.ascii	"c_ftl_nand_max_vendor_blks\000"
-.LASF379:
+.LASF378:
 	.ascii	"physical_block\000"
-.LASF449:
+.LASF448:
 	.ascii	"FtlVpcCheckAndModify\000"
-.LASF280:
+.LASF279:
 	.ascii	"g_sys_save_data\000"
-.LASF85:
+.LASF84:
 	.ascii	"ftl_bbt_info\000"
-.LASF429:
+.LASF428:
 	.ascii	"free_blk_index\000"
-.LASF254:
+.LASF253:
 	.ascii	"p_valid_page_count_check_table\000"
-.LASF213:
+.LASF212:
 	.ascii	"c_ftl_nand_data_blks_per_plane\000"
-.LASF372:
+.LASF371:
 	.ascii	"rk_ftl_garbage_collect\000"
-.LASF658:
+.LASF656:
 	.ascii	"memcmp\000"
-.LASF374:
+.LASF373:
 	.ascii	"numPages\000"
-.LASF315:
+.LASF314:
 	.ascii	"g_gc_head_data_block_count\000"
-.LASF259:
+.LASF258:
 	.ascii	"p_map_region_ppn_table\000"
-.LASF528:
+.LASF527:
 	.ascii	"l2p_flush\000"
-.LASF459:
+.LASF458:
 	.ascii	"make_superblock\000"
-.LASF20:
+.LASF19:
 	.ascii	"__con_initcall_end\000"
-.LASF633:
+.LASF631:
 	.ascii	"bad_block_cnt\000"
-.LASF551:
+.LASF550:
 	.ascii	"node_multiplier_value\000"
-.LASF334:
+.LASF333:
 	.ascii	"g_ect_tbl_power_up_flush\000"
-.LASF320:
+.LASF319:
 	.ascii	"g_recovery_ppa_tbl\000"
-.LASF527:
+.LASF526:
 	.ascii	"found_lpa\000"
-.LASF281:
+.LASF280:
 	.ascii	"g_sys_ext_data\000"
-.LASF357:
+.LASF356:
 	.ascii	"flash_type\000"
-.LASF417:
+.LASF416:
 	.ascii	"req_num\000"
-.LASF512:
+.LASF571:
+	.ascii	"remalloc\000"
+.LASF511:
 	.ascii	"forceFlush\000"
-.LASF57:
+.LASF56:
 	.ascii	"uint8\000"
-.LASF333:
+.LASF332:
 	.ascii	"power_up_flag\000"
-.LASF283:
+.LASF282:
 	.ascii	"p_gc_blk_tbl\000"
-.LASF415:
+.LASF414:
 	.ascii	"FtlGcBufAlloc\000"
-.LASF192:
+.LASF191:
 	.ascii	"c_ftl_nand_ext_blk_pre_plane\000"
-.LASF380:
+.LASF379:
 	.ascii	"max_gc_page_num\000"
-.LASF199:
+.LASF198:
 	.ascii	"c_ftl_nand_byte_pre_page\000"
-.LASF442:
+.LASF441:
 	.ascii	"update_multiplier_value\000"
-.LASF620:
+.LASF618:
 	.ascii	"flashType\000"
 .LASF6:
 	.ascii	"short int\000"
-.LASF243:
+.LASF242:
 	.ascii	"p_gc_spare_buf\000"
-.LASF495:
+.LASF494:
 	.ascii	"sblk\000"
-.LASF373:
+.LASF372:
 	.ascii	"mode\000"
-.LASF427:
+.LASF426:
 	.ascii	"new_id\000"
-.LASF630:
+.LASF628:
 	.ascii	"pNand\000"
-.LASF50:
+.LASF49:
 	.ascii	"SYSTEM_RUNNING\000"
-.LASF517:
+.LASF516:
 	.ascii	"pBuf\000"
-.LASF143:
+.LASF142:
 	.ascii	"write_page_count\000"
-.LASF605:
+.LASF603:
 	.ascii	"bitmap\000"
-.LASF201:
+.LASF200:
 	.ascii	"c_ftl_nand_reserved_blks\000"
-.LASF670:
+.LASF668:
 	.ascii	"sftl_get_density\000"
-.LASF641:
+.LASF639:
 	.ascii	"test_page_step\000"
-.LASF596:
+.LASF594:
 	.ascii	"blkAddr\000"
-.LASF287:
+.LASF286:
 	.ascii	"g_gc_cur_blk_max_valid_pages\000"
-.LASF289:
+.LASF288:
 	.ascii	"g_gc_next_blk_1\000"
-.LASF530:
+.LASF529:
 	.ascii	"target_region\000"
-.LASF614:
+.LASF612:
 	.ascii	"end_lpa\000"
-.LASF474:
+.LASF473:
 	.ascii	"scan_completed\000"
-.LASF657:
+.LASF655:
 	.ascii	"FtlPrintInfo2buf\000"
-.LASF366:
+.LASF365:
 	.ascii	"p_die\000"
-.LASF240:
+.LASF239:
 	.ascii	"p_io_data_buf_0\000"
-.LASF241:
+.LASF240:
 	.ascii	"p_io_data_buf_1\000"
-.LASF138:
+.LASF137:
 	.ascii	"mlc_erase_count\000"
-.LASF179:
+.LASF178:
 	.ascii	"phyBlk\000"
-.LASF627:
+.LASF625:
 	.ascii	"sftl_deinit\000"
-.LASF487:
+.LASF486:
 	.ascii	"pMapBlockInfo\000"
-.LASF152:
+.LASF151:
 	.ascii	"last_refresh_data_times\000"
-.LASF668:
+.LASF666:
 	.ascii	"system_states\000"
-.LASF160:
+.LASF159:
 	.ascii	"totle_write_sector\000"
-.LASF230:
+.LASF229:
 	.ascii	"req_prgm\000"
-.LASF592:
+.LASF590:
 	.ascii	"FtlMakeBbt\000"
-.LASF103:
+.LASF102:
 	.ascii	"in_gc_mode\000"
-.LASF435:
+.LASF434:
 	.ascii	"min_ec\000"
-.LASF61:
+.LASF60:
 	.ascii	"int16\000"
-.LASF282:
+.LASF281:
 	.ascii	"p_gc_page_info\000"
-.LASF212:
+.LASF211:
 	.ascii	"c_ftl_nand_max_sys_blks\000"
-.LASF440:
+.LASF439:
 	.ascii	"max_ec\000"
-.LASF239:
+.LASF238:
 	.ascii	"p_sys_spare_buf\000"
-.LASF671:
+.LASF669:
 	.ascii	"memcpy\000"
-.LASF505:
+.LASF504:
 	.ascii	"prog_error_count\000"
-.LASF337:
+.LASF336:
 	.ascii	"gc_discard_updated\000"
-.LASF413:
+.LASF412:
 	.ascii	"prev_superblock_id\000"
-.LASF640:
+.LASF638:
 	.ascii	"test_page_num\000"
-.LASF157:
+.LASF156:
 	.ascii	"last_refresh_read_count\000"
-.LASF479:
+.LASF478:
 	.ascii	"lookup_ppa_ver\000"
-.LASF491:
+.LASF490:
 	.ascii	"totleBlkNum\000"
-.LASF610:
+.LASF608:
 	.ascii	"sftl_read\000"
-.LASF579:
+.LASF577:
 	.ascii	"FtlFreeSysBlkQueueFull\000"
-.LASF410:
+.LASF409:
 	.ascii	"FtlGcPageVarInit\000"
-.LASF113:
+.LASF112:
 	.ascii	"padding\000"
-.LASF175:
+.LASF174:
 	.ascii	"flash_mode\000"
-.LASF469:
+.LASF468:
 	.ascii	"recovery_cur_page_ver\000"
-.LASF538:
+.LASF537:
 	.ascii	"ftl_map_blk_gc\000"
-.LASF609:
+.LASF607:
 	.ascii	"sftl_write\000"
-.LASF119:
+.LASF118:
 	.ascii	"ftl_map_blk_header\000"
-.LASF581:
+.LASF579:
 	.ascii	"FtlFreeSysBlkQueueInit\000"
-.LASF26:
+.LASF25:
 	.ascii	"late_time_init\000"
-.LASF648:
+.LASF646:
 	.ascii	"mem_size\000"
-.LASF486:
+.LASF485:
 	.ascii	"FtlMapTblRecovery\000"
-.LASF424:
+.LASF423:
 	.ascii	"new_ppa\000"
-.LASF428:
+.LASF427:
 	.ascii	"num_bad_block\000"
-.LASF526:
+.LASF525:
 	.ascii	"lpn_index\000"
-.LASF204:
+.LASF203:
 	.ascii	"c_ftl_nand_l2pmap_ram_region_num\000"
-.LASF626:
+.LASF624:
 	.ascii	"sector\000"
-.LASF508:
+.LASF507:
 	.ascii	"num_page\000"
-.LASF619:
+.LASF617:
 	.ascii	"FtlProgPages\000"
-.LASF418:
+.LASF417:
 	.ascii	"FtlGcBufFree\000"
-.LASF272:
+.LASF271:
 	.ascii	"p_data_block_list_tail\000"
-.LASF399:
+.LASF398:
 	.ascii	"current_ppa\000"
-.LASF65:
+.LASF64:
 	.ascii	"p_spare\000"
-.LASF384:
+.LASF383:
 	.ascii	"tmp_blk\000"
-.LASF295:
+.LASF294:
 	.ascii	"g_gc_blk_index\000"
-.LASF501:
+.LASF500:
 	.ascii	"block_in_plane\000"
-.LASF112:
+.LASF111:
 	.ascii	"lastEc\000"
-.LASF353:
+.LASF352:
 	.ascii	"PhyBlk\000"
-.LASF107:
+.LASF106:
 	.ascii	"reserved\000"
-.LASF318:
+.LASF317:
 	.ascii	"g_recovery_page_num\000"
-.LASF550:
+.LASF549:
 	.ascii	"node_valid_page_count\000"
-.LASF180:
+.LASF179:
 	.ascii	"ftl_gc_page_item\000"
-.LASF144:
+.LASF143:
 	.ascii	"read_page_count\000"
-.LASF420:
+.LASF419:
 	.ascii	"decrement_vpc_count\000"
 .LASF7:
 	.ascii	"short unsigned int\000"
-.LASF540:
+.LASF539:
 	.ascii	"minValidPageIndex\000"
-.LASF332:
+.LASF331:
 	.ascii	"TotleReadBufferMatchCount\000"
-.LASF341:
+.LASF340:
 	.ascii	"check_spare_buf\000"
-.LASF575:
-	.ascii	"tmp_ec\000"
-.LASF316:
+.LASF315:
 	.ascii	"g_gc_skip_write_count\000"
-.LASF60:
+.LASF59:
 	.ascii	"int32\000"
-.LASF74:
+.LASF73:
 	.ascii	"page_per_slc_blk\000"
-.LASF319:
+.LASF318:
 	.ascii	"g_recovery_page_min_ver\000"
-.LASF228:
+.LASF227:
 	.ascii	"req_sys\000"
-.LASF163:
+.LASF162:
 	.ascii	"List_Node\000"
-.LASF654:
+.LASF652:
 	.ascii	"Ftl_log2\000"
-.LASF153:
+.LASF152:
 	.ascii	"all_blk_used_slc_mode\000"
-.LASF397:
+.LASF396:
 	.ascii	"pSuperblock\000"
-.LASF475:
+.LASF474:
 	.ascii	"function_exit\000"
-.LASF206:
+.LASF205:
 	.ascii	"c_ftl_nand_map_blks_per_plane\000"
-.LASF18:
+.LASF17:
 	.ascii	"initcall_t\000"
-.LASF591:
+.LASF589:
 	.ascii	"V2P_block\000"
-.LASF116:
+.LASF115:
 	.ascii	"sysBlksPerPlane\000"
-.LASF455:
+.LASF454:
 	.ascii	"Ftl_save_ext_data\000"
-.LASF618:
-	.ascii	"FtlCacheWriteBack\000"
-.LASF80:
+.LASF663:
+	.ascii	"GNU C89 6.3.1 20170404 -mlittle-endian -mapcs -mno-"
+	.ascii	"sched-prolog -mabi=apcs-gnu -mno-thumb-interwork -m"
+	.ascii	"arm -march=armv7-a -mfloat-abi=soft -mtune=cortex-a"
+	.ascii	"9 -mfpu=vfpv3-d16 -mtls-dialect=gnu -g -Os -std=gnu"
+	.ascii	"90 -fno-strict-aliasing -fno-common -fno-PIE -fno-d"
+	.ascii	"warf2-cfi-asm -fno-ipa-sra -fno-delete-null-pointer"
+	.ascii	"-checks -fno-stack-protector -fno-omit-frame-pointe"
+	.ascii	"r -fno-optimize-sibling-calls -fno-var-tracking-ass"
+	.ascii	"ignments -fno-strict-overflow -fno-merge-all-consta"
+	.ascii	"nts -fmerge-constants -fstack-check=no -fconserve-s"
+	.ascii	"tack --param allow-store-data-races=0\000"
+.LASF79:
 	.ascii	"nand_ops\000"
-.LASF631:
+.LASF629:
 	.ascii	"load_bbt\000"
-.LASF651:
+.LASF649:
 	.ascii	"blkNum\000"
-.LASF368:
+.LASF367:
 	.ascii	"page_index\000"
-.LASF503:
+.LASF502:
 	.ascii	"FtlVpcTblFlush\000"
-.LASF110:
+.LASF109:
 	.ascii	"hash\000"
-.LASF572:
+.LASF573:
 	.ascii	"IsInFreeQueue\000"
-.LASF472:
+.LASF471:
 	.ascii	"read_super_page_end\000"
-.LASF358:
+.LASF357:
 	.ascii	"num_req\000"
-.LASF321:
+.LASF320:
 	.ascii	"c_mlc_erase_count_value\000"
-.LASF554:
+.LASF553:
 	.ascii	"pPrev\000"
-.LASF139:
+.LASF138:
 	.ascii	"GlobalDataVersion\000"
-.LASF42:
+.LASF41:
 	.ascii	"panic_on_unrecovered_nmi\000"
-.LASF164:
+.LASF163:
 	.ascii	"next\000"
-.LASF129:
+.LASF128:
 	.ascii	"activeSuperblockId\000"
-.LASF377:
+.LASF376:
 	.ascii	"plane\000"
-.LASF44:
+.LASF43:
 	.ascii	"panic_on_warn\000"
-.LASF93:
+.LASF92:
 	.ascii	"ftl_l2p_map_info\000"
-.LASF165:
+.LASF164:
 	.ascii	"prev\000"
-.LASF58:
+.LASF57:
 	.ascii	"uint16\000"
-.LASF351:
+.LASF350:
 	.ascii	"ftl_memset\000"
-.LASF535:
+.LASF534:
 	.ascii	"Ftl_write_map_blk_to_last_page\000"
-.LASF46:
+.LASF45:
 	.ascii	"crash_kexec_post_notifiers\000"
-.LASF290:
+.LASF289:
 	.ascii	"g_gc_bad_block_temp_num\000"
-.LASF124:
+.LASF123:
 	.ascii	"ftl_sys_save_info\000"
-.LASF279:
+.LASF278:
 	.ascii	"gp_last_act_superblock\000"
-.LASF577:
+.LASF576:
 	.ascii	"erase_flag\000"
-.LASF488:
+.LASF487:
 	.ascii	"blk_id\000"
-.LASF338:
+.LASF337:
 	.ascii	"ftl_gc_temp_block_bops_scan_page_addr\000"
+	.ident	"GCC: (Linaro GCC 6.3-2017.05) 6.3.1 20170404"
+	.section	.note.GNU-stack,"",%progbits
-- 
2.11.0

