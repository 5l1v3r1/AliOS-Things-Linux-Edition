From 703a456eb0b737020d93509494e97f18989de2fd Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Sat, 14 Jul 2018 15:03:04 +0800
Subject: [PATCH 25/73] Sync BSP kernel's rkflash

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 drivers/Kconfig                        |     2 +
 drivers/Makefile                       |     1 +
 drivers/rkflash/Kconfig                |    66 +
 drivers/rkflash/Makefile               |    13 +
 drivers/rkflash/flash.c                |   514 +
 drivers/rkflash/flash.h                |   143 +
 drivers/rkflash/flash_com.h            |    70 +
 drivers/rkflash/ftl_flash_plat.c       |   132 +
 drivers/rkflash/ftl_include.h          |    51 +
 drivers/rkflash/nand_boot.c            |    61 +
 drivers/rkflash/nandc.c                |   294 +
 drivers/rkflash/nandc.h                |   222 +
 drivers/rkflash/rk_sftl.h              |    16 +
 drivers/rkflash/rk_sftl_arm_v7.S       | 44374 +++++++++++++++++++++++++++++++
 drivers/rkflash/rk_sftl_arm_v7_thumb.S | 41577 +++++++++++++++++++++++++++++
 drivers/rkflash/rk_sftl_arm_v8.S       | 38819 +++++++++++++++++++++++++++
 drivers/rkflash/rkflash_api.h          |    41 +
 drivers/rkflash/rkflash_blk.c          |   736 +
 drivers/rkflash/rkflash_blk.h          |   126 +
 drivers/rkflash/rkflash_debug.c        |    16 +
 drivers/rkflash/rkflash_debug.h        |    69 +
 drivers/rkflash/rknandc_base.c         |   196 +
 drivers/rkflash/rksfc_base.c           |   207 +
 drivers/rkflash/sfc.c                  |   191 +
 drivers/rkflash/sfc.h                  |   179 +
 drivers/rkflash/sfc_nand.c             |   624 +
 drivers/rkflash/sfc_nand.h             |   124 +
 drivers/rkflash/sfc_nand_boot.c        |    52 +
 drivers/rkflash/sfc_nor.c              |   656 +
 drivers/rkflash/sfc_nor.h              |   171 +
 drivers/rkflash/sfc_nor_boot.c         |   112 +
 drivers/rkflash/sfc_nor_mtd.c          |   224 +
 drivers/rkflash/typedef.h              |    41 +
 33 files changed, 130120 insertions(+)
 create mode 100644 drivers/rkflash/Kconfig
 create mode 100644 drivers/rkflash/Makefile
 create mode 100644 drivers/rkflash/flash.c
 create mode 100644 drivers/rkflash/flash.h
 create mode 100644 drivers/rkflash/flash_com.h
 create mode 100644 drivers/rkflash/ftl_flash_plat.c
 create mode 100644 drivers/rkflash/ftl_include.h
 create mode 100644 drivers/rkflash/nand_boot.c
 create mode 100644 drivers/rkflash/nandc.c
 create mode 100644 drivers/rkflash/nandc.h
 create mode 100644 drivers/rkflash/rk_sftl.h
 create mode 100644 drivers/rkflash/rk_sftl_arm_v7.S
 create mode 100644 drivers/rkflash/rk_sftl_arm_v7_thumb.S
 create mode 100644 drivers/rkflash/rk_sftl_arm_v8.S
 create mode 100644 drivers/rkflash/rkflash_api.h
 create mode 100644 drivers/rkflash/rkflash_blk.c
 create mode 100644 drivers/rkflash/rkflash_blk.h
 create mode 100644 drivers/rkflash/rkflash_debug.c
 create mode 100644 drivers/rkflash/rkflash_debug.h
 create mode 100644 drivers/rkflash/rknandc_base.c
 create mode 100644 drivers/rkflash/rksfc_base.c
 create mode 100644 drivers/rkflash/sfc.c
 create mode 100644 drivers/rkflash/sfc.h
 create mode 100644 drivers/rkflash/sfc_nand.c
 create mode 100644 drivers/rkflash/sfc_nand.h
 create mode 100644 drivers/rkflash/sfc_nand_boot.c
 create mode 100644 drivers/rkflash/sfc_nor.c
 create mode 100644 drivers/rkflash/sfc_nor.h
 create mode 100644 drivers/rkflash/sfc_nor_boot.c
 create mode 100644 drivers/rkflash/sfc_nor_mtd.c
 create mode 100644 drivers/rkflash/typedef.h

diff --git a/drivers/Kconfig b/drivers/Kconfig
index db18540abdb1..4ee6c65eb9fb 100644
--- a/drivers/Kconfig
+++ b/drivers/Kconfig
@@ -202,6 +202,8 @@ source "drivers/hwtracing/intel_th/Kconfig"
 
 source "drivers/fpga/Kconfig"
 
+source "drivers/rkflash/Kconfig"
+
 source "drivers/rk_nand/Kconfig"
 
 endmenu
diff --git a/drivers/Makefile b/drivers/Makefile
index 26d69ce0ce42..a63123890211 100644
--- a/drivers/Makefile
+++ b/drivers/Makefile
@@ -175,3 +175,4 @@ obj-$(CONFIG_ANDROID)		+= android/
 obj-$(CONFIG_NVMEM)		+= nvmem/
 obj-$(CONFIG_FPGA)		+= fpga/
 obj-$(CONFIG_RK_NAND)		+= rk_nand/
+obj-$(CONFIG_RK_FLASH)		+= rkflash/
diff --git a/drivers/rkflash/Kconfig b/drivers/rkflash/Kconfig
new file mode 100644
index 000000000000..12fd16a61929
--- /dev/null
+++ b/drivers/rkflash/Kconfig
@@ -0,0 +1,66 @@
+# SPDX-License-Identifier: GPL-2.0
+
+if ARCH_ROCKCHIP
+
+menuconfig RK_FLASH
+	tristate "Rockchip Flash Devices Support"
+	default n
+	help
+	  This enables support for Rockchip Flash Devices including Nandc Slc
+	  Nand, SFC Spi Nand and SFC Spi Nor.
+
+	  They're block interface.
+
+	  Say Y when you have a board with one of them.
+
+if RK_FLASH
+
+comment "Rockchip Flash Devices"
+
+config RK_NANDC_NAND
+	tristate "Rockchip NANDC Slc Nand Devices support"
+	default n
+	depends on RK_NAND != y
+	help
+	  This enables support for NANDC Slc Nand Devices.
+
+	  It's block interface, 512Kb/sector.
+
+	  Say Y when you have a board with Slc Nand Flash supported by Rockchip
+	  Nandc controller.
+
+config RK_SFC_NAND
+	tristate "Rockchip SFC Spi Nand Devices support"
+	default n
+	depends on RK_NAND != y
+	help
+	  This enables support for Rockchip SFC Spi Nand Devices.
+
+	  It's block interface, 512Kb/sector.
+
+	  Say Y when you have a board with Spi Nand Flash supported by Rockchip
+	  Serial Flash Controller(SFC).
+
+config RK_SFC_NOR
+	tristate "Rockchip SFC Spi Nor Devices Support"
+	default n
+	help
+	  This enables support for Rockchip SFC Spi Nor Devices.
+
+	  It's block interface,512Kb/sector.
+
+	  Say Y when you have a board with Spi Nor Flash supported by Rockchip
+	  Serial Flash Controller(SFC).
+
+config RK_SFC_NOR_MTD
+	bool "RK SFC NOR mtd Interface Support"
+	default n
+	depends on RK_SFC_NOR
+	help
+	  Enable mtd interface for SFC_NOR device.
+
+	  Say Y when you wanna use mtd interface for SFC_NOR flash.
+
+endif # RK_FLASH
+
+endif # ARCH_ROCKCHIP
diff --git a/drivers/rkflash/Makefile b/drivers/rkflash/Makefile
new file mode 100644
index 000000000000..e1a3ccee8978
--- /dev/null
+++ b/drivers/rkflash/Makefile
@@ -0,0 +1,13 @@
+# SPDX-License-Identifier: GPL-2.0
+
+obj-$(CONFIG_RK_NANDC_NAND) += rkflash_blk.o rknandc_base.o rkflash_debug.o nand_boot.o  flash.o nandc.o ftl_flash_plat.o
+obj-$(CONFIG_RK_SFC_NAND) += rkflash_blk.o rksfc_base.o rkflash_debug.o sfc_nand_boot.o sfc_nand.o sfc.o ftl_flash_plat.o
+obj-$(CONFIG_RK_SFC_NOR) += rkflash_blk.o rksfc_base.o rkflash_debug.o sfc_nor_boot.o sfc_nor.o sfc.o
+obj-$(CONFIG_RK_SFC_NOR_MTD) += sfc_nor_mtd.o
+
+ifdef CONFIG_THUMB2_KERNEL
+obj-$(CONFIG_THUMB2_KERNEL) += rk_sftl_arm_v7_thumb.o
+else
+obj-$(CONFIG_ARM64) += rk_sftl_arm_v8.o
+obj-$(CONFIG_ARM) += rk_sftl_arm_v7.o
+endif
diff --git a/drivers/rkflash/flash.c b/drivers/rkflash/flash.c
new file mode 100644
index 000000000000..6febe8389146
--- /dev/null
+++ b/drivers/rkflash/flash.c
@@ -0,0 +1,514 @@
+// SPDX-License-Identifier: GPL-2.0
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#include <linux/delay.h>
+#include <linux/kernel.h>
+
+#include "flash.h"
+#include "flash_com.h"
+#include "nandc.h"
+#include "rkflash_debug.h"
+
+#define FLASH_STRESS_TEST_EN		0
+
+static u8 id_byte[MAX_FLASH_NUM][8];
+static u8 die_cs_index[MAX_FLASH_NUM];
+static u8 g_nand_max_die;
+static u16 g_totle_block;
+static u8 g_nand_flash_ecc_bits;
+static u8 g_nand_idb_res_blk_num;
+
+static struct NAND_PARA_INFO_T nand_para = {
+	2,
+	{0x98, 0xF1, 0, 0, 0, 0},
+	TOSHIBA,
+	1,
+	4,
+	64,
+	1,
+	1,
+	1024,
+	0x100,
+	LSB_0,
+	RR_NONE,
+	16,
+	40,
+	1,
+	0,
+	BBF_1,
+	MPM_0,
+	{0}
+};	/* TC58NVG0S3HTA00 */
+
+void nandc_flash_reset(u8 cs)
+{
+	nandc_flash_cs(cs);
+	nandc_writel(RESET_CMD, NANDC_CHIP_CMD(cs));
+	nandc_wait_flash_ready(cs);
+	nandc_flash_de_cs(cs);
+}
+
+static void flash_read_id_raw(u8 cs, u8 *buf)
+{
+	u8 *ptr = (u8 *)buf;
+
+	nandc_flash_reset(cs);
+	nandc_flash_cs(cs);
+	nandc_writel(READ_ID_CMD, NANDC_CHIP_CMD(cs));
+	nandc_writel(0x00, NANDC_CHIP_ADDR(cs));
+	nandc_delayns(200);
+
+	ptr[0] = nandc_readl(NANDC_CHIP_DATA(cs));
+	ptr[1] = nandc_readl(NANDC_CHIP_DATA(cs));
+	ptr[2] = nandc_readl(NANDC_CHIP_DATA(cs));
+	ptr[3] = nandc_readl(NANDC_CHIP_DATA(cs));
+	ptr[4] = nandc_readl(NANDC_CHIP_DATA(cs));
+	ptr[5] = nandc_readl(NANDC_CHIP_DATA(cs));
+	ptr[6] = nandc_readl(NANDC_CHIP_DATA(cs));
+	ptr[7] = nandc_readl(NANDC_CHIP_DATA(cs));
+
+	nandc_flash_de_cs(cs);
+	if (ptr[0] != 0xFF && ptr[0] && ptr[1] != 0xFF)
+		PRINT_NANDC_E("No.%d FLASH ID:%x %x %x %x %x %x\n",
+			      cs + 1, ptr[0], ptr[1], ptr[2],
+			      ptr[3], ptr[4], ptr[5]);
+}
+
+static void flash_bch_sel(u8 bits)
+{
+	g_nand_flash_ecc_bits = bits;
+	nandc_bch_sel(bits);
+}
+
+static __maybe_unused void flash_timing_cfg(u32 ahb_khz)
+{
+	nandc_time_cfg(nand_para.access_freq);
+}
+
+static void flash_read_cmd(u8 cs, u32 page_addr)
+{
+	nandc_writel(READ_CMD >> 8, NANDC_CHIP_CMD(cs));
+	nandc_writel(0x00, NANDC_CHIP_ADDR(cs));
+	nandc_writel(0x00, NANDC_CHIP_ADDR(cs));
+	nandc_writel(page_addr & 0x00ff, NANDC_CHIP_ADDR(cs));
+	nandc_writel(page_addr >> 8, NANDC_CHIP_ADDR(cs));
+	nandc_writel(page_addr >> 16, NANDC_CHIP_ADDR(cs));
+	nandc_writel(READ_CMD & 0x00ff, NANDC_CHIP_CMD(cs));
+}
+
+static void flash_prog_first_cmd(u8 cs, u32 page_addr)
+{
+	nandc_writel(PAGE_PROG_CMD >> 8, NANDC_CHIP_CMD(cs));
+	nandc_writel(0x00, NANDC_CHIP_ADDR(cs));
+	nandc_writel(0x00, NANDC_CHIP_ADDR(cs));
+	nandc_writel(page_addr & 0x00ff, NANDC_CHIP_ADDR(cs));
+	nandc_writel(page_addr >> 8, NANDC_CHIP_ADDR(cs));
+	nandc_writel(page_addr >> 16, NANDC_CHIP_ADDR(cs));
+}
+
+static void flash_erase_cmd(u8 cs, u32 page_addr)
+{
+	nandc_writel(BLOCK_ERASE_CMD >> 8, NANDC_CHIP_CMD(cs));
+	nandc_writel(page_addr & 0x00ff, NANDC_CHIP_ADDR(cs));
+	nandc_writel(page_addr >> 8, NANDC_CHIP_ADDR(cs));
+	nandc_writel(page_addr >> 16, NANDC_CHIP_ADDR(cs));
+	nandc_writel(BLOCK_ERASE_CMD & 0x00ff, NANDC_CHIP_CMD(cs));
+}
+
+static void flash_prog_second_cmd(u8 cs, u32 page_addr)
+{
+	nandc_writel(PAGE_PROG_CMD & 0x00ff, NANDC_CHIP_CMD(cs));
+}
+
+static u32 flash_read_status(u8 cs, u32 page_addr)
+{
+	nandc_writel(READ_STATUS_CMD, NANDC_CHIP_CMD(cs));
+	nandc_delayns(80);
+
+	return nandc_readl(NANDC_CHIP_DATA(cs));
+}
+
+static void flash_read_random_dataout_cmd(u8 cs, u32 col_addr)
+{
+	nandc_writel(READ_DP_OUT_CMD >> 8, NANDC_CHIP_CMD(cs));
+	nandc_writel(col_addr & 0x00ff, NANDC_CHIP_ADDR(cs));
+	nandc_writel(col_addr >> 8, NANDC_CHIP_ADDR(cs));
+	nandc_writel(READ_DP_OUT_CMD & 0x00ff, NANDC_CHIP_CMD(cs));
+}
+
+static u32 flash_read_page_raw(u8 cs, u32 page_addr, u32 *p_data, u32 *p_spare)
+{
+	u32 ret = 0;
+	u32 error_ecc_bits;
+	u32 sec_per_page = nand_para.sec_per_page;
+
+	nandc_wait_flash_ready(cs);
+	nandc_flash_cs(cs);
+	flash_read_cmd(cs, page_addr);
+	nandc_wait_flash_ready(cs);
+	flash_read_random_dataout_cmd(cs, 0);
+	nandc_wait_flash_ready(cs);
+
+	error_ecc_bits = nandc_xfer_data(cs, NANDC_READ, sec_per_page,
+					 p_data, p_spare);
+	if (error_ecc_bits > 2) {
+		PRINT_NANDC_E("FlashReadRawPage %x %x error_ecc_bits %d\n",
+			      cs, page_addr, error_ecc_bits);
+		if (p_data)
+			PRINT_NANDC_HEX("data:", p_data, 4, 8);
+		if (p_spare)
+			PRINT_NANDC_HEX("spare:", p_spare, 4, 2);
+	}
+	nandc_flash_de_cs(cs);
+
+	if (error_ecc_bits != NAND_STS_ECC_ERR) {
+		if (error_ecc_bits >= (u32)nand_para.ecc_bits - 3)
+			ret = NAND_STS_REFRESH;
+		else
+			ret = NAND_STS_OK;
+	}
+
+	return ret;
+}
+
+static u32 flash_read_page(u8 cs, u32 page_addr, u32 *p_data, u32 *p_spare)
+{
+	u32 ret;
+
+	ret = flash_read_page_raw(cs, page_addr, p_data, p_spare);
+	if (ret == NAND_STS_ECC_ERR)
+		ret = flash_read_page_raw(cs, page_addr, p_data, p_spare);
+
+	return ret;
+}
+
+static u32 flash_prog_page(u8 cs, u32 page_addr, u32 *p_data, u32 *p_spare)
+{
+	u32 status;
+	u32 sec_per_page = nand_para.sec_per_page;
+
+	nandc_wait_flash_ready(cs);
+	nandc_flash_cs(cs);
+	flash_prog_first_cmd(cs, page_addr);
+	nandc_xfer_data(cs, NANDC_WRITE, sec_per_page, p_data, p_spare);
+	flash_prog_second_cmd(cs, page_addr);
+	nandc_wait_flash_ready(cs);
+	status = flash_read_status(cs, page_addr);
+	nandc_flash_de_cs(cs);
+	status &= 0x01;
+	if (status) {
+		PRINT_NANDC_I("%s addr=%x status=%x\n",
+			      __func__, page_addr, status);
+	}
+	return status;
+}
+
+static u32 flash_erase_block(u8 cs, u32 page_addr)
+{
+	u32 status;
+
+	nandc_wait_flash_ready(cs);
+	nandc_flash_cs(cs);
+	flash_erase_cmd(cs, page_addr);
+	nandc_wait_flash_ready(cs);
+	status = flash_read_status(cs, page_addr);
+	nandc_flash_de_cs(cs);
+	status &= 0x01;
+	if (status) {
+		PRINT_NANDC_I("%s pageadd=%x status=%x\n",
+			      __func__, page_addr, status);
+	}
+	return status;
+}
+
+static void flash_read_spare(u8 cs, u32 page_addr, u8 *spare)
+{
+	u32 col = nand_para.sec_per_page << 9;
+
+	nandc_writel(READ_CMD >> 8, NANDC_CHIP_CMD(cs));
+	nandc_writel(col, NANDC_CHIP_ADDR(cs));
+	nandc_writel(col >> 8, NANDC_CHIP_ADDR(cs));
+	nandc_writel(page_addr & 0x00ff, NANDC_CHIP_ADDR(cs));
+	nandc_writel(page_addr >> 8, NANDC_CHIP_ADDR(cs));
+	nandc_writel(page_addr >> 16, NANDC_CHIP_ADDR(cs));
+	nandc_writel(READ_CMD & 0x00ff, NANDC_CHIP_CMD(cs));
+
+	nandc_wait_flash_ready(cs);
+
+	*spare = nandc_readl(NANDC_CHIP_DATA(cs));
+}
+
+/*
+ * Read the 1st page's 1st spare byte of a phy_blk
+ * If not FF, it's bad blk
+ */
+static s32 get_bad_blk_list(u16 *table, u32 die)
+{
+	u16 blk;
+	u32 bad_cnt, page_addr0, page_addr1, page_addr2;
+	u32 blk_per_die;
+	u8 bad_flag0, bad_flag1, bad_flag2;
+
+	bad_cnt = 0;
+	blk_per_die = nand_para.plane_per_die * nand_para.blk_per_plane;
+	for (blk = 0; blk < blk_per_die; blk++) {
+		bad_flag0 = 0xFF;
+		bad_flag1 = 0xFF;
+		bad_flag2 = 0xFF;
+		page_addr0 = (blk + blk_per_die * die) *
+			nand_para.page_per_blk + 0;
+		page_addr1 = page_addr0 + 1;
+		page_addr2 = page_addr0 + nand_para.page_per_blk - 1;
+		flash_read_spare(die, page_addr0, &bad_flag0);
+		flash_read_spare(die, page_addr1, &bad_flag1);
+		flash_read_spare(die, page_addr2, &bad_flag2);
+		if (bad_flag0 != 0xFF ||
+		    bad_flag1 != 0xFF ||
+		    bad_flag2 != 0xFF) {
+			table[bad_cnt++] = blk;
+			PRINT_NANDC_E("die[%d], bad_blk[%d]\n", die, blk);
+		}
+	}
+	return bad_cnt;
+}
+
+#if FLASH_STRESS_TEST_EN
+
+#define FLASH_PAGE_SIZE	2048
+#define FLASH_SPARE_SIZE	8
+
+static u16 bad_blk_list[1024];
+static u32 pwrite[FLASH_PAGE_SIZE / 4];
+static u32 pread[FLASH_PAGE_SIZE / 4];
+static u32 pspare_write[FLASH_SPARE_SIZE / 4];
+static u32 pspare_read[FLASH_SPARE_SIZE / 4];
+static u32 bad_blk_num;
+static u32 bad_page_num;
+
+static void flash_test(void)
+{
+	u32 i, blk, page, bad_cnt, page_addr;
+	int ret;
+	u32 pages_num = 64;
+	u32 blk_addr = 64;
+	u32 is_bad_blk = 0;
+
+	PRINT_NANDC_E("%s\n", __func__);
+	bad_blk_num = 0;
+	bad_page_num = 0;
+	bad_cnt	= get_bad_blk_list(bad_blk_list, 0);
+
+	for (blk = 0; blk < 1024; blk++) {
+		for (i = 0; i < bad_cnt; i++) {
+			if (bad_blk_list[i] == blk)
+				break;
+		}
+		if (i < bad_cnt)
+			continue;
+		is_bad_blk = 0;
+		PRINT_NANDC_E("Flash prog block: %x\n", blk);
+		flash_erase_block(0, blk * blk_addr);
+		for (page = 0; page < pages_num; page++) {
+			page_addr = blk * blk_addr + page;
+			for (i = 0; i < 512; i++)
+				pwrite[i] = (page_addr << 16) + i;
+			pspare_write[0] = pwrite[0] + 0x5AF0;
+			pspare_write[1] = pspare_write[0] + 1;
+			flash_prog_page(0, page_addr, pwrite, pspare_write);
+			memset(pread, 0, 2048);
+			memset(pspare_read, 0, 8);
+			ret = flash_read_page(0, page_addr, pread,
+					      pspare_read);
+			if (ret != NAND_STS_OK)
+				is_bad_blk = 1;
+			for (i = 0; i < 512; i++) {
+				if (pwrite[i] != pread[i]) {
+					is_bad_blk = 1;
+					break;
+				}
+			}
+			for (i = 0; i < 2; i++) {
+				if (pspare_write[i] != pspare_read[i]) {
+					is_bad_blk = 1;
+					break;
+				}
+			}
+			if (is_bad_blk) {
+				bad_page_num++;
+				PRINT_NANDC_E("ERR:page %x, ret= %x\n",
+					      page_addr,
+					      ret);
+				PRINT_NANDC_HEX("data:", pread, 4, 8);
+				PRINT_NANDC_HEX("spare:", pspare_read, 4, 2);
+			}
+		}
+		flash_erase_block(0, blk * blk_addr);
+		if (is_bad_blk)
+			bad_blk_num++;
+	}
+	PRINT_NANDC_E("bad_blk_num = %d, bad_page_num = %d\n",
+		      bad_blk_num, bad_page_num);
+
+	PRINT_NANDC_E("Flash Test Finish!!!\n");
+	while (1)
+		;
+}
+#endif
+
+static void flash_die_info_init(void)
+{
+	u32 cs;
+
+	g_nand_max_die = 0;
+	for (cs = 0; cs < MAX_FLASH_NUM; cs++) {
+		if (nand_para.nand_id[1] == id_byte[cs][1]) {
+			die_cs_index[g_nand_max_die] = cs;
+			g_nand_max_die++;
+		}
+	}
+	g_totle_block = g_nand_max_die *  nand_para.plane_per_die *
+			nand_para.blk_per_plane;
+}
+
+static void nandc_flash_print_info(void)
+{
+	PRINT_NANDC_I("No.0 FLASH ID: %x %x %x %x %x %x\n",
+		      nand_para.nand_id[0],
+		      nand_para.nand_id[1],
+		      nand_para.nand_id[2],
+		      nand_para.nand_id[3],
+		      nand_para.nand_id[4],
+		      nand_para.nand_id[5]);
+	PRINT_NANDC_I("die_per_chip: %x\n", nand_para.die_per_chip);
+	PRINT_NANDC_I("sec_per_page: %x\n", nand_para.sec_per_page);
+	PRINT_NANDC_I("page_per_blk: %x\n", nand_para.page_per_blk);
+	PRINT_NANDC_I("cell: %x\n", nand_para.cell);
+	PRINT_NANDC_I("plane_per_die: %x\n", nand_para.plane_per_die);
+	PRINT_NANDC_I("blk_per_plane: %x\n", nand_para.blk_per_plane);
+	PRINT_NANDC_I("TotleBlock: %x\n", g_totle_block);
+	PRINT_NANDC_I("die gap: %x\n", nand_para.die_gap);
+	PRINT_NANDC_I("lsb_mode: %x\n", nand_para.lsb_mode);
+	PRINT_NANDC_I("read_retry_mode: %x\n", nand_para.read_retry_mode);
+	PRINT_NANDC_I("ecc_bits: %x\n", nand_para.ecc_bits);
+	PRINT_NANDC_I("Use ecc_bits: %x\n", g_nand_flash_ecc_bits);
+	PRINT_NANDC_I("access_freq: %x\n", nand_para.access_freq);
+	PRINT_NANDC_I("opt_mode: %x\n", nand_para.opt_mode);
+
+	PRINT_NANDC_I("Cache read enable: %x\n",
+		      nand_para.operation_opt & NAND_CACHE_READ_EN ? 1 : 0);
+	PRINT_NANDC_I("Cache random read enable: %x\n",
+		      nand_para.operation_opt &
+			NAND_CACHE_RANDOM_READ_EN ? 1 : 0);
+	PRINT_NANDC_I("Cache prog enable: %x\n",
+		      nand_para.operation_opt & NAND_CACHE_PROG_EN ? 1 : 0);
+	PRINT_NANDC_I("multi read enable: %x\n",
+		      nand_para.operation_opt & NAND_MULTI_READ_EN ? 1 : 0);
+
+	PRINT_NANDC_I("multi prog enable: %x\n",
+		      nand_para.operation_opt & NAND_MULTI_PROG_EN ? 1 : 0);
+	PRINT_NANDC_I("interleave enable: %x\n",
+		      nand_para.operation_opt & NAND_INTERLEAVE_EN ? 1 : 0);
+
+	PRINT_NANDC_I("read retry enable: %x\n",
+		      nand_para.operation_opt & NAND_READ_RETRY_EN ? 1 : 0);
+	PRINT_NANDC_I("randomizer enable: %x\n",
+		      nand_para.operation_opt & NAND_RANDOMIZER_EN ? 1 : 0);
+
+	PRINT_NANDC_I("SDR enable: %x\n",
+		      nand_para.operation_opt & NAND_SDR_EN ? 1 : 0);
+	PRINT_NANDC_I("ONFI enable: %x\n",
+		      nand_para.operation_opt & NAND_ONFI_EN ? 1 : 0);
+	PRINT_NANDC_I("TOGGLE enable: %x\n",
+		      nand_para.operation_opt & NAND_TOGGLE_EN ? 1 : 0);
+
+	PRINT_NANDC_I("g_nand_idb_res_blk_num: %x\n", g_nand_idb_res_blk_num);
+}
+
+static void ftl_flash_init(void)
+{
+	/* para init */
+	g_nand_phy_info.nand_type	= nand_para.cell;
+	g_nand_phy_info.die_num		= nand_para.die_per_chip;
+	g_nand_phy_info.plane_per_die	= nand_para.plane_per_die;
+	g_nand_phy_info.blk_per_plane	= nand_para.blk_per_plane;
+	g_nand_phy_info.page_per_blk	= nand_para.page_per_blk;
+	g_nand_phy_info.page_per_slc_blk	= nand_para.page_per_blk /
+						  nand_para.cell;
+	g_nand_phy_info.byte_per_sec	= 512;
+	g_nand_phy_info.sec_per_page	= nand_para.sec_per_page;
+	g_nand_phy_info.sec_per_blk	= nand_para.sec_per_page *
+					  nand_para.page_per_blk;
+	g_nand_phy_info.reserved_blk	= 8;
+	g_nand_phy_info.blk_per_die	= nand_para.plane_per_die *
+					  nand_para.blk_per_plane;
+	g_nand_phy_info.ecc_bits	= nand_para.ecc_bits;
+
+	/* driver register */
+	g_nand_ops.get_bad_blk_list	= get_bad_blk_list;
+	g_nand_ops.erase_blk		= flash_erase_block;
+	g_nand_ops.prog_page		= flash_prog_page;
+	g_nand_ops.read_page		= flash_read_page;
+}
+
+u32 nandc_flash_init(void __iomem *nandc_addr)
+{
+	u32 cs;
+
+	PRINT_NANDC_I("...%s enter...\n", __func__);
+	g_nand_idb_res_blk_num = MAX_IDB_RESERVED_BLOCK;
+
+	nandc_init(nandc_addr);
+
+	for (cs = 0; cs < MAX_FLASH_NUM; cs++) {
+		flash_read_id_raw(cs, id_byte[cs]);
+		if (cs == 0) {
+			if (id_byte[0][0] == 0xFF ||
+			    id_byte[0][0] == 0 ||
+			    id_byte[0][1] == 0xFF)
+				return FTL_NO_FLASH;
+			if (id_byte[0][1] != 0xF1 &&
+			    id_byte[0][1] != 0xDA &&
+			    id_byte[0][1] != 0xD1 &&
+			    id_byte[0][1] != 0x95 &&
+			    id_byte[0][1] != 0xDC)
+
+				return FTL_UNSUPPORTED_FLASH;
+		}
+	}
+	nand_para.nand_id[1] = id_byte[0][1];
+	if (id_byte[0][1] == 0xDA) {
+		nand_para.plane_per_die = 2;
+		nand_para.nand_id[1] = 0xDA;
+	} else if (id_byte[0][1] == 0xDC) {
+		nand_para.nand_id[1] = 0xDC;
+		if (id_byte[0][0] == 0x2C && id_byte[0][3] == 0xA6) {
+			nand_para.plane_per_die = 2;
+			nand_para.sec_per_page = 8;
+		} else {
+			nand_para.plane_per_die = 2;
+			nand_para.blk_per_plane = 2048;
+		}
+	}
+	flash_die_info_init();
+	flash_bch_sel(nand_para.ecc_bits);
+	nandc_flash_print_info();
+	/* flash_print_info(); */
+	ftl_flash_init();
+
+	#if FLASH_STRESS_TEST_EN
+	flash_test();
+	#endif
+
+	return 0;
+}
+
+void nandc_flash_get_id(u8 cs, void *buf)
+{
+	memcpy(buf, id_byte[cs], 5);
+}
+
+u32 nandc_flash_deinit(void)
+{
+	return 0;
+}
diff --git a/drivers/rkflash/flash.h b/drivers/rkflash/flash.h
new file mode 100644
index 000000000000..ce8145794586
--- /dev/null
+++ b/drivers/rkflash/flash.h
@@ -0,0 +1,143 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#ifndef __FLASH_H
+#define __FLASH_H
+
+#include "typedef.h"
+
+#ifndef BIT
+#define BIT(nr)			(1 << (nr))
+#endif
+
+#define MAX_FLASH_NUM			2
+#define MAX_IDB_RESERVED_BLOCK		12
+
+#define NAND_CACHE_READ_EN		BIT(0)
+#define NAND_CACHE_RANDOM_READ_EN	BIT(1)
+#define NAND_CACHE_PROG_EN		BIT(2)
+#define NAND_MULTI_READ_EN		BIT(3)
+
+#define NAND_MULTI_PROG_EN		BIT(4)
+#define NAND_INTERLEAVE_EN		BIT(5)
+#define NAND_READ_RETRY_EN		BIT(6)
+#define NAND_RANDOMIZER_EN		BIT(7)
+
+#define NAND_INTER_MODE_OFFSET		(0x8)
+#define NAND_INTER_MODE_MARK		(0x07)
+#define NAND_INTER_SDR_EN		BIT(0)
+#define NAND_INTER_ONFI_EN		BIT(1)
+#define NAND_INTER_TOGGLE_EN		BIT(2)
+
+#define NAND_SDR_EN			BIT(8)
+#define NAND_ONFI_EN			BIT(9)
+#define NAND_TOGGLE_EN			BIT(10)
+#define NAND_UNIQUE_ID_EN		BIT(11)
+
+#define RESET_CMD		0xff
+#define READ_ID_CMD		0x90
+#define READ_STATUS_CMD		0x70
+#define PAGE_PROG_CMD		0x8010
+#define BLOCK_ERASE_CMD		0x60d0
+#define READ_CMD		0x0030
+#define READ_DP_OUT_CMD		0x05E0
+
+#define SAMSUNG			0x00	/* SAMSUNG */
+#define TOSHIBA			0x01	/* TOSHIBA */
+#define HYNIX			0x02	/* HYNIX */
+#define INFINEON		0x03	/* INFINEON */
+#define MICRON			0x04	/* MICRON */
+#define RENESAS			0x05	/* RENESAS */
+#define ST			0x06	/* ST */
+#define INTEL			0x07	/* intel */
+#define Sandisk			0x08	/* Sandisk */
+
+#define RR_NONE			0x00
+#define RR_HY_1			0x01	/* hynix H27UCG8T2M */
+#define RR_HY_2			0x02	/* hynix H27UBG08U0B */
+#define RR_HY_3			0x03	/* hynix H27UCG08U0B H27UBG08U0C */
+#define RR_HY_4                 0x04	/* hynix H27UCG8T2A */
+#define RR_HY_5                 0x05	/* hynix H27UCG8T2E */
+#define RR_HY_6                 0x06	/* hynix H27QCG8T2F5R-BCG */
+#define RR_MT_1                 0x11	/* micron */
+#define RR_MT_2                 0x12	/* micron L94C L95B */
+#define RR_TH_1                 0x21	/* toshiba */
+#define RR_TH_2                 0x22	/* toshiba */
+#define RR_TH_3                 0x23	/* toshiba */
+#define RR_SS_1                 0x31	/* samsung */
+#define RR_SD_1                 0x41	/* Sandisk */
+#define RR_SD_2                 0x42	/* Sandisk */
+#define RR_SD_3                 0x43	/* Sandisk */
+#define RR_SD_4                 0x44	/* Sandisk */
+
+/*  0 1 2 3 4 5 6 7 8 9 slc */
+#define LSB_0	0
+/*  0 1 2 3 6 7 A B E F hynix, micron 74A */
+#define LSB_1	1
+/*  0 1 3 5 7 9 B D toshiba samsung sandisk */
+#define LSB_2	2
+/*  0 1 2 3 4 5 8 9 C D 10 11 micron 84A */
+#define LSB_3	3
+/*  0 1 2 3 4 5 7 8 A B E F micron L95B */
+#define LSB_4	4
+/*  0 1 2 3 4 5 8 9 14 15 20 21 26 27 micron B74A TLC */
+#define LSB_6	6
+/*  0 3 6 9 C F 12 15 18 15 1B 1E 21 24 K9ABGD8U0C TLC */
+#define LSB_7	7
+
+/* BadBlockFlagMode */
+/* first spare @ first page of each blocks */
+#define BBF_1	1
+/* first spare @ last page of each blocks */
+#define BBF_2	2
+/* first spare @ first and last page of each blocks */
+#define BBF_11	3
+/* sandisk 15nm flash prog first page without data and check status */
+#define BBF_3	4
+
+#define MPM_0	0	/* block 0 ~ 1 */
+#define MPM_1	1	/* block 0 ~ 2048... */
+
+struct NAND_PARA_INFO_T {
+	u8	id_bytes;
+	u8	nand_id[6];
+	u8	vendor;
+	u8	die_per_chip;
+	u8	sec_per_page;
+	u16	page_per_blk;
+	u8	cell;	/* 1 slc , 2 mlc , 3 tlc */
+	u8	plane_per_die;
+	u16	 blk_per_plane;
+	u16	operation_opt;
+	u8	lsb_mode;
+	u8	read_retry_mode;
+	u8	ecc_bits;
+	u8	access_freq;
+	u8	opt_mode;
+	u8	die_gap;
+	u8	bad_block_mode;
+	u8	multi_plane_mode;
+	u8	reversd2[6];	/* 32 bytes */
+};
+
+struct FLASH_INFO_T {
+	u16	block_size;
+	u8	ecc_bits;
+	u32	flash_size;
+	u16	page_size;
+	u8	access_time;
+	u8	manufacturer_name;
+	u8	flash_mask;
+};
+
+extern struct nand_phy_info	g_nand_phy_info;
+extern struct nand_ops		g_nand_ops;
+extern void __iomem *nandc_base;
+
+void nandc_flash_get_id(u8 cs, void *buf);
+void nandc_flash_reset(u8 chip_sel);
+u32 nandc_flash_init(void __iomem *nandc_addr);
+u32 nandc_flash_deinit(void);
+
+#endif
diff --git a/drivers/rkflash/flash_com.h b/drivers/rkflash/flash_com.h
new file mode 100644
index 000000000000..8e2cbce9bbb5
--- /dev/null
+++ b/drivers/rkflash/flash_com.h
@@ -0,0 +1,70 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#ifndef __FLASH_COM_H
+#define __FLASH_COM_H
+
+#include "typedef.h"
+
+#define NAND_ERROR			INVALID_UINT32
+#define NAND_OK				0
+
+#define NAND_STS_OK                     0	/* bit 0 ecc error or ok */
+#define NAND_STS_REFRESH                256	/* need refresh */
+#define NAND_STS_EMPTY                  512	/* page is not proged */
+#define NAND_STS_ECC_ERR                NAND_ERROR
+
+#define FULL_SLC			0
+#define SLC				1
+
+#define NAND_FLASH_MLC_PAGE_TAG         0xFFFF
+#define MAX_FLASH_PAGE_SIZE		0x1000 /* 4KB */
+
+#define PAGE_ADDR_BITS			0
+#define PAGE_ADDR_MASK			((1u << 11) - 1)
+#define BLOCK_ADDR_BITS			11
+#define BLOCK_ADDR_MASK			((1u << 14) - 1)
+#define DIE_ADDR_BITS			25
+#define DIE_ADDR_MASK			((1u << 3) - 1)
+#define FLAG_ADDR_BITS			28
+#define FLAG_ADDR_MASK			((1u << 4) - 1)
+#define PHY_BLK_DIE_ADDR_BITS		14
+
+struct nand_req {
+	u32 status;
+	u32 page_addr;   /* 31:28 flag, 27:25: die, 24:11 block, 10:0 page */
+	u32 *p_data;
+	u32 *p_spare;
+	u32 lpa;
+};
+
+struct nand_phy_info {
+	u16	nand_type;		/* SLC,MLC,TLC */
+	u16	die_num;		/* number of LUNs */
+	u16	plane_per_die;
+	u16	blk_per_plane;
+	u16	blk_per_die;
+	u16	page_per_blk;		/* in MLC mode */
+	u16	page_per_slc_blk;	/* in SLC mode */
+	u16	sec_per_page;		/* physical page data size */
+	u16	sec_per_blk;		/* physical page data size */
+	u16	byte_per_sec;		/* size of logical sectors */
+	u16	reserved_blk;		/* reserved for boot loader in die 0*/
+	u8	ecc_bits;
+};
+
+struct nand_ops {
+	s32 (*get_bad_blk_list)(u16 *table, u32 die);
+	u32 (*erase_blk)(u8 cs, u32 page_addr);
+	u32 (*prog_page)(u8 cs, u32 page_addr, u32 *data, u32 *spare);
+	u32 (*read_page)(u8 cs, u32 page_addr, u32 *data, u32 *spare);
+};
+
+s32 ftl_flash_prog_pages(void *req, u32 num_req, u32 flash_type, u32 check);
+s32 ftl_flash_read_pages(void *req, u32 num_req, u32 flash_type);
+s32 ftl_flash_erase_blocks(void *req, u32 num_req);
+s32 ftl_flash_test_blk(u16 phy_block);
+s32 ftl_flash_get_bad_blk_list(u16 *table, u32 die);
+
+#endif
diff --git a/drivers/rkflash/ftl_flash_plat.c b/drivers/rkflash/ftl_flash_plat.c
new file mode 100644
index 000000000000..16a1d4fecb10
--- /dev/null
+++ b/drivers/rkflash/ftl_flash_plat.c
@@ -0,0 +1,132 @@
+// SPDX-License-Identifier: GPL-2.0
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#include <linux/kernel.h>
+#include <linux/slab.h>
+
+#include "flash_com.h"
+
+struct nand_phy_info	g_nand_phy_info;
+struct nand_ops		g_nand_ops;
+
+static u32 check_buf[MAX_FLASH_PAGE_SIZE / 4];
+static u32 check_spare_buf[MAX_FLASH_PAGE_SIZE / 8 / 4];
+static u32 pg_buf0[MAX_FLASH_PAGE_SIZE / 4];
+
+void *ftl_malloc(int size)
+{
+	return kmalloc(size, GFP_KERNEL | GFP_DMA);
+}
+
+void ftl_free(void *buf)
+{
+	kfree(buf);
+}
+
+static u32 l2p_addr_tran(struct nand_req *req, u32 *addr, u32 *p_die)
+{
+	u16 block_index, page_index;
+	u16 blk_per_die = g_nand_phy_info.blk_per_die;
+	u32 die_index;
+
+	block_index = (u16)((req[0].page_addr >> BLOCK_ADDR_BITS) &
+			    BLOCK_ADDR_MASK);
+	page_index = (u16)(req[0].page_addr & PAGE_ADDR_MASK);
+	die_index = (u16)((req[0].page_addr >> DIE_ADDR_BITS) &
+			  DIE_ADDR_MASK);
+	*p_die = die_index;
+	*addr = (block_index + blk_per_die * die_index) *
+		g_nand_phy_info.page_per_blk + page_index;
+	return 0;
+}
+
+s32 ftl_flash_prog_pages(void *request, u32 num_req, u32 flash_type, u32 check)
+{
+	u32 i, cs, status, addr;
+	struct nand_req *req = (struct nand_req *)request;
+
+	for (i = 0; i < num_req; i++) {
+		l2p_addr_tran(&req[i], &addr, &cs);
+		status = g_nand_ops.prog_page(cs,
+					      addr,
+					      req[i].p_data,
+					      req[i].p_spare);
+		req[i].status = status;
+		if (status != NAND_STS_OK)
+			req[i].status = NAND_STS_ECC_ERR;
+	}
+
+	if (check == 0)
+		return 0;
+	for (i = 0; i < num_req; i++) {
+		l2p_addr_tran(&req[i], &addr, &cs);
+		status = g_nand_ops.read_page(cs,
+					      addr,
+					      check_buf,
+					      check_spare_buf);
+		if (status != NAND_STS_ECC_ERR)
+			req[i].status = NAND_STS_OK;
+		if (check_buf[0] != req[i].p_data[0])
+			req[i].status = NAND_STS_ECC_ERR;
+	}
+	return 0;
+}
+
+s32 ftl_flash_read_pages(void *request, u32 num_req, u32 flash_type)
+{
+	u32 i, cs, status, addr;
+	struct nand_req *req = (struct nand_req *)request;
+
+	for (i = 0; i < num_req; i++) {
+		l2p_addr_tran(&req[i], &addr, &cs);
+		status = g_nand_ops.read_page(cs,
+					      addr,
+					      req[i].p_data,
+					      req[i].p_spare);
+		req[i].status = status;
+	}
+	return OK;
+}
+
+s32 ftl_flash_erase_blocks(void *request, u32 num_req)
+{
+	u32 i, cs, status, addr;
+	struct nand_req *req = (struct nand_req *)request;
+
+	for (i = 0; i < num_req; i++) {
+		l2p_addr_tran(&req[i], &addr, &cs);
+		status = g_nand_ops.erase_blk(cs, addr);
+		req[i].status = status;
+		if (status != NAND_STS_OK)
+			req[i].status = NAND_STS_ECC_ERR;
+	}
+	return OK;
+}
+
+s32 ftl_flash_get_bad_blk_list(u16 *table, u32 die)
+{
+	return g_nand_ops.get_bad_blk_list(table, die);
+}
+
+s32 ftl_flash_test_blk(u16 phy_block)
+{
+	s32 sts = 0;
+	u32 spare[16];
+	struct nand_req req;
+
+	req.p_data = pg_buf0;
+	req.p_spare = spare;
+	memset(spare, 0xA5, 32);
+	memset(pg_buf0, 0x5A, 8);
+	req.page_addr = phy_block << BLOCK_ADDR_BITS;
+	ftl_flash_erase_blocks((void *)&req, 1);
+	ftl_flash_prog_pages((void *)&req, 1, SLC, 1);
+	if (req.status == NAND_STS_ECC_ERR) {
+		PRINT_E("%s %x is bad block\n", __func__, phy_block);
+		sts = -1;
+	}
+	ftl_flash_erase_blocks((void *)&req, 1);
+
+	return sts;
+}
diff --git a/drivers/rkflash/ftl_include.h b/drivers/rkflash/ftl_include.h
new file mode 100644
index 000000000000..f9967e323f6d
--- /dev/null
+++ b/drivers/rkflash/ftl_include.h
@@ -0,0 +1,51 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#ifndef _FTL_INCLUDE_
+#define _FTL_INCLUDE_
+
+#include <linux/kernel.h>
+
+#include "flash_com.h"
+#include "typedef.h"
+
+#define ENABLE_LOW_FORMAT
+#define SYS_FTL_VERSION  "ftl_ver 1.2.2"
+
+/*
+ * debug
+ */
+#define FTL_DEBUG_LEVEL		D_INF
+#define FTL_DEBUG(level, format, arg...)	\
+	do {\
+		if ((level) <= FTL_DEBUG_LEVEL) {\
+			pr_info(format, ##arg);\
+		} \
+	} while (0)
+
+#define D_ERR	0
+#define D_WAN	1
+#define D_INF	2
+#define D_DBG	3
+
+/* For init, load, recovery, flush_all */
+#define FTL_DBG_GLB	D_DBG
+/* For open_blk, erase_blk, write_trace_page, get_trace_list */
+#define FTL_DBG_BLK	(FTL_DBG_GLB + 1)
+/* For flush 1 cache, write page */
+#define FTL_DBG_PAGE	(FTL_DBG_GLB + 2)
+/* For lookup/update l2p */
+#define FTL_DBG_MAP	(FTL_DBG_GLB + 3)
+
+#define FTL_DEBUG_BREAK(exp)		\
+	do {							\
+		if (exp) {					\
+			FTL_DEBUG(0, "FILE: %s:%d:\n", __FILE__, __LINE__);\
+			dump_ftl_info();\
+			while (1)\
+				;\
+		}	\
+	} while (0)
+
+#endif
diff --git a/drivers/rkflash/nand_boot.c b/drivers/rkflash/nand_boot.c
new file mode 100644
index 000000000000..1a9abc99f79f
--- /dev/null
+++ b/drivers/rkflash/nand_boot.c
@@ -0,0 +1,61 @@
+// SPDX-License-Identifier: GPL-2.0
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#include <linux/kernel.h>
+#include <linux/mutex.h>
+
+#include "flash.h"
+#include "rkflash_api.h"
+#include "rk_sftl.h"
+#include "typedef.h"
+
+int sftl_flash_init(void __iomem *reg_addr)
+{
+	int ret;
+
+	ret = nandc_flash_init(reg_addr);
+	if (ret == 0)
+		ret = sftl_init();
+
+	return ret;
+}
+EXPORT_SYMBOL_GPL(sftl_flash_init);
+
+void sftl_flash_read_id(u8 chip_sel, void *buf)
+{
+	nandc_flash_get_id(chip_sel, buf);
+}
+EXPORT_SYMBOL_GPL(sftl_flash_read_id);
+
+unsigned int sftl_flash_get_capacity(void)
+{
+	return sftl_get_density();
+}
+
+int sftl_flash_write(u32 sec, u32 n_sec, void *p_data)
+{
+	return sftl_write(sec, n_sec, p_data);
+}
+
+int sftl_flash_read(u32 sec, u32 n_sec, void *p_data)
+{
+	return sftl_read(sec, n_sec, p_data);
+}
+
+void sftl_flash_deinit(void)
+{
+	u8 chip_sel = 0;
+
+	sftl_deinit();
+	nandc_flash_reset(chip_sel);
+}
+
+int sftl_flash_resume(void __iomem *reg_addr)
+{
+	return nandc_flash_init(reg_addr);
+}
+
+void sftl_flash_clean_irq(void)
+{
+}
diff --git a/drivers/rkflash/nandc.c b/drivers/rkflash/nandc.c
new file mode 100644
index 000000000000..78a286e63829
--- /dev/null
+++ b/drivers/rkflash/nandc.c
@@ -0,0 +1,294 @@
+// SPDX-License-Identifier: GPL-2.0
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#include <linux/delay.h>
+#include <linux/kernel.h>
+
+#include "flash.h"
+#include "flash_com.h"
+#include "nandc.h"
+#include "typedef.h"
+
+#define     CPU_DELAY_NS(n)	ndelay(n)
+
+#define	    NANDC_MASTER_EN
+
+void __iomem *nandc_base;
+
+static u32 g_nandc_ecc_bits;
+#ifdef NANDC_MASTER_EN
+static struct MASTER_INFO_T master;
+static u32 *g_master_temp_buf;
+#endif
+
+void nandc_init(void __iomem *nandc_addr)
+{
+	union FM_CTL_T ctl_reg;
+
+	nandc_base = nandc_addr;
+
+	ctl_reg.d32 = 0;
+	ctl_reg.V6.wp = 1;
+	nandc_writel(ctl_reg.d32, NANDC_FMCTL);
+	nandc_writel(0, NANDC_RANDMZ_CFG);
+	nandc_time_cfg(40);
+
+#ifdef NANDC_MASTER_EN
+	if (!g_master_temp_buf)
+		g_master_temp_buf = (u32 *)ftl_malloc(MAX_FLASH_PAGE_SIZE +
+					      MAX_FLASH_PAGE_SIZE / 8);
+	master.page_buf = &g_master_temp_buf[0];
+	master.spare_buf = &g_master_temp_buf[MAX_FLASH_PAGE_SIZE / 4];
+	master.mapped = 0;
+#endif
+}
+
+void nandc_flash_cs(u8 chip_sel)
+{
+	union FM_CTL_T tmp;
+
+	tmp.d32 = nandc_readl(NANDC_FMCTL);
+	tmp.V6.cs = 0x01 << chip_sel;
+	nandc_writel(tmp.d32, NANDC_FMCTL);
+}
+
+void nandc_flash_de_cs(u8 chip_sel)
+{
+	union FM_CTL_T tmp;
+
+	tmp.d32 = nandc_readl(NANDC_FMCTL);
+	tmp.V6.cs = 0;
+	tmp.V6.flash_abort_clear = 0;
+	nandc_writel(tmp.d32, NANDC_FMCTL);
+}
+
+u32 nandc_delayns(u32 count)
+{
+	CPU_DELAY_NS(count);
+	return 0;
+}
+
+u32 nandc_wait_flash_ready(u8 chip_sel)
+{
+	union FM_CTL_T tmp;
+	u32 status;
+	u32 i;
+
+	status = 0;
+	for (i = 0; i < 100000; i++) {
+		nandc_delayns(100);
+		tmp.d32 = nandc_readl(NANDC_FMCTL);
+		if (tmp.V6.rdy != 0)
+			break;
+	}
+
+	if (i >= 100000)
+		status = -1;
+	return status;
+}
+
+void nandc_randmz_sel(u8 chip_sel, u32 randmz_seed)
+{
+	nandc_writel(randmz_seed, NANDC_RANDMZ_CFG);
+}
+
+void nandc_time_cfg(u32 ns)
+{
+	if (ns < 36)
+		nandc_writel(0x1061, NANDC_FMWAIT);
+	else if (ns >= 100)
+		nandc_writel(0x2082, NANDC_FMWAIT);
+	else
+		nandc_writel(0x1081, NANDC_FMWAIT);
+}
+
+void nandc_bch_sel(u8 bits)
+{
+	union BCH_CTL_T tmp;
+	union FL_CTL_T fl_reg;
+
+	fl_reg.d32 = 0;
+	fl_reg.V6.rst = 1;
+	nandc_writel(fl_reg.d32, NANDC_FLCTL);
+	g_nandc_ecc_bits = bits;
+	tmp.d32 = 0;
+	tmp.V6.addr = 0x10;
+	tmp.V6.bch_mode1 = 0;
+	if (bits == 16) {
+		tmp.V6.bch_mode = 0;
+	} else if (bits == 24) {
+		tmp.V6.bch_mode = 1;
+	} else {
+		tmp.V6.bch_mode1 = 1;
+		tmp.V6.bch_mode = 1;
+		if (bits == 40)
+			tmp.V6.bch_mode = 0;
+	}
+	tmp.V6.rst = 1;
+	nandc_writel(tmp.d32, NANDC_BCHCTL);
+}
+
+static void nandc_xfer_start(u8 chip_sel,
+			     u8 dir,
+			     u8 sector_count,
+			     u8 st_buf,
+			     u32 *p_data,
+			     u32 *p_spare)
+{
+	union BCH_CTL_T bch_reg;
+	union FL_CTL_T fl_reg;
+	u8 bus_mode = (p_spare || p_data);
+	u32 i;
+	union MTRANS_CFG_T master_reg;
+	u16 *p_spare_tmp = (u16 *)p_spare;
+
+	fl_reg.d32 = 0;
+	bch_reg.d32 = nandc_readl(NANDC_BCHCTL);
+	bch_reg.V6.addr = 0x10;
+	bch_reg.V6.power_down = 0;
+	bch_reg.V6.region = chip_sel;
+
+	fl_reg.V6.rdn = dir;
+	fl_reg.V6.dma = 1;
+	fl_reg.V6.tr_count = 1;
+	fl_reg.V6.async_tog_mix = 1;
+	fl_reg.V6.cor_en = 1;
+	fl_reg.V6.st_addr = st_buf / 2;
+
+	master_reg.d32 = nandc_readl(NANDC_MTRANS_CFG);
+	master_reg.V6.bus_mode = 0;
+	#ifdef NANDC_MASTER_EN
+	if (bus_mode != 0 && dir != 0) {
+		u32 spare_sz = 64;
+
+		for (i = 0; i < sector_count / 2; i++) {
+			if (p_spare) {
+				master.spare_buf[i * spare_sz / 4] =
+				(p_spare_tmp[0]) | ((u32)p_spare_tmp[1] << 16);
+				p_spare_tmp += 2;
+			} else{
+				master.spare_buf[i * spare_sz / 4] =
+				0xffffffff;
+			}
+		}
+	}
+	fl_reg.V6.page_num = (sector_count + 1) / 2;
+	master.page_vir = (u32 *)((p_data == (u32 *)NULL) ?
+				  master.page_buf :
+				  (u32 *)p_data);
+	master.spare_vir = (u32 *)master.spare_buf;
+	master.page_phy =
+	(u32)rknandc_dma_map_single((unsigned long)master.page_vir,
+				    fl_reg.V6.page_num * 1024,
+				    dir);
+	master.spare_phy =
+	(u32)rknandc_dma_map_single((unsigned long)master.spare_vir,
+				    fl_reg.V6.page_num * 64,
+				    dir);
+	master.mapped = 1;
+	nandc_writel(master.page_phy, NANDC_MTRANS_SADDR0);
+	nandc_writel(master.spare_phy, NANDC_MTRANS_SADDR1);
+	master_reg.d32 = 0;
+	master_reg.V6.incr_num = 16;
+	master_reg.V6.burst = 7;
+	if ((((unsigned long)p_data) & 0x03) == 0)
+		master_reg.V6.hsize = 2;
+	master_reg.V6.bus_mode = 1;
+	master_reg.V6.ahb_wr = !dir;
+	master_reg.V6.ahb_wr_st = 1;
+	#endif
+
+	nandc_writel(master_reg.d32, NANDC_MTRANS_CFG);
+	nandc_writel(bch_reg.d32, NANDC_BCHCTL);
+	nandc_writel(fl_reg.d32, NANDC_FLCTL);
+	fl_reg.V6.start = 1;
+	nandc_writel(fl_reg.d32, NANDC_FLCTL);
+}
+
+static void nandc_xfer_comp(u8 chip_sel)
+{
+	union FL_CTL_T fl_reg;
+	union MTRANS_CFG_T master_reg;
+
+	master_reg.d32 = nandc_readl(NANDC_MTRANS_CFG);
+	if (master_reg.V6.bus_mode != 0) {
+		union MTRANS_STAT_T stat_reg;
+
+		if (master_reg.V6.ahb_wr != 0) {
+			do {
+				fl_reg.d32 = nandc_readl(NANDC_FLCTL);
+				stat_reg.d32 = nandc_readl(NANDC_MTRANS_STAT);
+			} while (stat_reg.V6.mtrans_cnt < fl_reg.V6.page_num);
+
+			if (master.mapped) {
+				rknandc_dma_unmap_single((u64)master.page_phy,
+						fl_reg.V6.page_num * 1024,
+						0);
+				rknandc_dma_unmap_single((u64)master.spare_phy,
+						fl_reg.V6.page_num * 64,
+						0);
+			}
+		} else {
+			do {
+				fl_reg.d32 = nandc_readl(NANDC_FLCTL);
+			} while (fl_reg.V6.tr_rdy == 0);
+		}
+	} else {
+		do {
+			fl_reg.d32 = nandc_readl(NANDC_FLCTL);
+		} while ((fl_reg.V6.tr_rdy == 0));
+	}
+}
+
+u32 nandc_xfer_data(u8 chip_sel, u8 dir, u8 sector_count,
+		    u32 *p_data, u32 *p_spare)
+{
+	u32 status = NAND_STS_OK;
+	u32 i;
+	u32 spare[16];
+	union BCH_ST_T bch_st_reg;
+
+	if (dir == NANDC_WRITE && !p_spare) {
+		p_spare = (u32 *)spare;
+		memset(spare, 0xFF, sizeof(spare));
+	}
+	nandc_xfer_start(chip_sel, dir, sector_count, 0, p_data, p_spare);
+	nandc_xfer_comp(chip_sel);
+	if (dir == NANDC_READ) {
+		if (p_spare) {
+			u32 spare_sz = 64;
+			u32 temp_data;
+			u8 *p_spare_temp = (u8 *)p_spare;
+
+			for (i = 0; i < sector_count / 2; i++) {
+				temp_data = master.spare_buf[i * spare_sz / 4];
+				*p_spare_temp++ = (u8)temp_data;
+				*p_spare_temp++ = (u8)(temp_data >> 8);
+				*p_spare_temp++ = (u8)(temp_data >> 16);
+				*p_spare_temp++ = (u8)(temp_data >> 24);
+			}
+		}
+		for (i = 0; i < sector_count / 4 ; i++) {
+			bch_st_reg.d32 = nandc_readl(NANDC_BCHST(i));
+			if (bch_st_reg.V6.fail0 || bch_st_reg.V6.fail1) {
+				status = NAND_STS_ECC_ERR;
+			} else {
+				u32 tmp = 0;
+
+				tmp =
+				max(bch_st_reg.V6.err_bits0 |
+				    ((u32)bch_st_reg.V6.err_bits0_5 << 5),
+				    bch_st_reg.V6.err_bits1 |
+				    ((u32)bch_st_reg.V6.err_bits1_5 << 5));
+				status = max(tmp, status);
+			}
+		}
+	}
+	nandc_writel(0, NANDC_MTRANS_CFG);
+	return status;
+}
+
+void nandc_clean_irq(void)
+{
+}
diff --git a/drivers/rkflash/nandc.h b/drivers/rkflash/nandc.h
new file mode 100644
index 000000000000..07f04bc6f5c7
--- /dev/null
+++ b/drivers/rkflash/nandc.h
@@ -0,0 +1,222 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#ifndef __NAND_H
+#define __NAND_H
+
+#include <linux/io.h>
+
+#define nandc_writel(v, offs)	writel((v), (offs) + nandc_base)
+#define nandc_readl(offs)	readl((offs) + nandc_base)
+
+#define NANDC_READ	0
+#define NANDC_WRITE	1
+
+/* INT ID */
+enum NANDC_IRQ_NUM_T {
+	NC_IRQ_DMA = 0,
+	NC_IRQ_FRDY,
+	NC_IRQ_BCHERR,
+	NC_IRQ_BCHFAIL,
+	NC_IRQ_LLP
+};
+
+union FM_CTL_T {
+	u32 d32;
+	struct {
+		unsigned cs : 8;		/* bits[0:7] */
+		unsigned wp : 1;		/* bits[8] */
+		unsigned rdy : 1;		/* bits[9] */
+		unsigned fifo_empty : 1;	/* bits[10] */
+		unsigned reserved11 : 1;	/* bits[11] */
+		unsigned dwidth : 1;		/* bits[12] */
+		unsigned tm : 1;		/* bits[13] */
+		unsigned onficlk_en : 1;	/* bits[14] */
+		unsigned toggle_en : 1;		/* bits[15] */
+		unsigned flash_abort_en : 1;	/* bits[16] */
+		unsigned flash_abort_clear : 1;	/* bits[17] */
+		unsigned reserved18_23 : 6;	/* bits[18:23] */
+		unsigned read_delay : 3;	/* bits[24:26] */
+		unsigned reserved27_31 : 5;	/* bits[27:31] */
+	} V6;
+};
+
+union FM_WAIT_T {
+	u32 d32;
+	struct {
+		unsigned csrw : 5;
+		unsigned rwpw : 6;
+		unsigned rdy : 1;
+		unsigned rwcs : 6;
+		unsigned reserved18_23 : 6;
+		unsigned fmw_dly : 6;
+		unsigned fmw_dly_en : 1;
+		unsigned reserved31_31 : 1;
+	} V6;
+};
+
+union FL_CTL_T {
+	u32 d32;
+	struct {
+		unsigned rst : 1;
+		unsigned rdn : 1;
+		unsigned start : 1;
+		unsigned dma : 1;
+		unsigned st_addr : 1;
+		unsigned tr_count : 2;
+		unsigned rdy_ignore : 1;
+		/* unsigned int_clr : 1; */
+		/* unsigned int_en : 1; */
+		unsigned reserved8_9 : 2;
+		unsigned cor_en : 1;
+		unsigned lba_en : 1;
+		unsigned spare_size : 7;
+		unsigned reserved19 : 1;
+		unsigned tr_rdy : 1;
+		unsigned page_size : 1;
+		unsigned page_num : 6;
+		unsigned low_power : 1;
+		unsigned async_tog_mix : 1;
+		unsigned reserved30_31 : 2;
+	} V6;
+};
+
+union BCH_CTL_T {
+	u32 d32;
+	struct {
+		unsigned rst : 1;
+		unsigned reserved : 1;
+		unsigned addr_not_care : 1;
+		unsigned power_down : 1;
+		unsigned bch_mode : 1;	   /* 0-16bit/1KB, 1-24bit/1KB */
+		unsigned region : 3;
+		unsigned addr : 8;
+		unsigned bchpage : 1;
+		unsigned reserved17 : 1;
+		unsigned bch_mode1 : 1;
+		unsigned thres : 8;
+		unsigned reserved27_31 : 5;
+	} V6;
+};
+
+union BCH_ST_T {
+	u32 d32;
+	struct {
+		unsigned errf0 : 1;
+		unsigned done0 : 1;
+		unsigned fail0 : 1;
+		unsigned err_bits0 : 5;
+		unsigned err_bits_low0 : 5;
+		unsigned errf1 : 1;
+		unsigned done1 : 1;
+		unsigned fail1 : 1;
+		unsigned err_bits1 : 5;
+		unsigned err_bits_low1 : 5;
+		unsigned rdy : 1;
+		/* unsigned cnt : 1; */
+		unsigned err_bits0_5 : 1;
+		unsigned err_bits_low0_5 : 1;
+		unsigned err_bits1_5 : 1;
+		unsigned err_bits_low1_5 : 1;
+		unsigned reserved31_31 : 1;
+	} V6;
+};
+
+union MTRANS_CFG_T {
+	u32 d32;
+	struct {
+		unsigned ahb_wr_st : 1;
+		unsigned ahb_wr : 1;
+		unsigned bus_mode : 1;
+		unsigned hsize : 3;
+		unsigned burst : 3;
+		unsigned incr_num : 5;
+		unsigned fl_pwd : 1;
+		unsigned ahb_rst : 1;
+		unsigned reserved16_31 : 16;
+	} V6;
+};
+
+union MTRANS_STAT_T {
+	u32 d32;
+	struct {
+		unsigned bus_err : 16;
+		unsigned mtrans_cnt : 5;
+		unsigned reserved21_31 : 11;
+	} V6;
+};
+
+/* NANDC Registers */
+#define NANDC_FMCTL		0x0
+#define NANDC_FMWAIT		0x4
+#define NANDC_FLCTL		0x8
+#define NANDC_BCHCTL		0xc
+#define NANDC_MTRANS_CFG	0x10
+#define NANDC_MTRANS_SADDR0	0x14
+#define NANDC_MTRANS_SADDR1	0x18
+#define NANDC_MTRANS_STAT	0x1c
+#define NANDC_DLL_CTL_REG0	0x130
+#define NANDC_DLL_CTL_REG1	0x134
+#define NANDC_DLL_OBS_REG0	0x138
+#define NANDC_RANDMZ_CFG	0x150
+#define NANDC_EBI_EN		0x154
+#define NANDC_FMWAIT_SYN	0x158
+#define NANDC_MTRANS_STAT2	0x15c
+#define NANDC_NANDC_VER		0x160
+#define NANDC_LLP_CTL		0x164
+#define NANDC_LLP_STAT		0x168
+#define NANDC_INTEN		0x16c
+#define NANDC_INTCLR		0x170
+#define NANDC_INTST		0x174
+#define NANDC_SPARE0		0x200
+#define NANDC_SPARE1		0x230
+
+#define NANDC_BCHST(i)		({		\
+	u32 x = (i);				\
+	4 * x + x < 8 ? 0x20 : 0x520; })
+
+#define NANDC_CHIP_DATA(id)	(0x800 + (id) * 0x100)
+#define NANDC_CHIP_ADDR(id)	(0x800 + (id) * 0x100 + 0x4)
+#define NANDC_CHIP_CMD(id)	(0x800 + (id) * 0x100 + 0x8)
+
+struct MASTER_INFO_T {
+	u32  *page_buf;		/* [DATA_LEN]; */
+	u32  *spare_buf;	/* [DATA_LEN / (1024/128)]; */
+	u32  *page_vir;	/* page_buf_vir_addr */
+	u32  *spare_vir;	/* spare_buf_vir_addr */
+	u32  page_phy;		/* page_buf_phy_addr */
+	u32  spare_phy;	/* spare_buf_phy_addr*/
+	u32  mapped;
+	u32  cnt;
+};
+
+struct CHIP_MAP_INFO_T {
+	u32  *nandc_addr;
+	u32  chip_num;
+};
+
+unsigned long rknandc_dma_map_single(unsigned long ptr,
+				     int size,
+				     int dir);
+void rknandc_dma_unmap_single(unsigned long ptr,
+			      int size,
+			      int dir);
+
+void nandc_init(void __iomem *nandc_addr);
+void nandc_flash_cs(u8 chip_sel);
+void nandc_flash_de_cs(u8 chip_sel);
+u32 nandc_wait_flash_ready(u8 chip_sel);
+u32 nandc_delayns(u32 count);
+u32 nandc_xfer_data(u8 chip_sel,
+		    u8 dir,
+		    u8 sector_count,
+		    u32 *p_data,
+		    u32 *p_spare);
+void nandc_randmz_sel(u8 chip_sel, u32 randmz_seed);
+void nandc_bch_sel(u8 bits);
+void nandc_read_not_case_busy_en(u8 en);
+void nandc_time_cfg(u32 ns);
+void nandc_clean_irq(void);
+
+#endif
diff --git a/drivers/rkflash/rk_sftl.h b/drivers/rkflash/rk_sftl.h
new file mode 100644
index 000000000000..7412fd49db78
--- /dev/null
+++ b/drivers/rkflash/rk_sftl.h
@@ -0,0 +1,16 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#ifndef __RK_SFTL_H
+#define __RK_SFTL_H
+
+u32 ftl_low_format(void);
+int sftl_init(void);
+int sftl_deinit(void);
+int sftl_read(u32 index, u32 count, u8 *buf);
+int sftl_write(u32 index, u32 count, u8 *buf);
+u32 sftl_get_density(void);
+s32 sftl_gc(void);
+
+#endif
diff --git a/drivers/rkflash/rk_sftl_arm_v7.S b/drivers/rkflash/rk_sftl_arm_v7.S
new file mode 100644
index 000000000000..ee7141daed1e
--- /dev/null
+++ b/drivers/rkflash/rk_sftl_arm_v7.S
@@ -0,0 +1,44374 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+/*
+ * Copyright (c) 2018 Rockchip Electronics Co. Ltd.
+ * date: 2018-06-13
+ */
+	.arch armv7-a
+	.eabi_attribute 20, 1
+	.eabi_attribute 21, 1
+	.eabi_attribute 23, 3
+	.eabi_attribute 24, 1
+	.eabi_attribute 25, 1
+	.eabi_attribute 26, 2
+	.eabi_attribute 30, 4
+	.eabi_attribute 34, 1
+	.eabi_attribute 18, 4
+	.file	"rk_sftl.c"
+	.text
+.Ltext0:
+	.global	__aeabi_uidiv
+	.align	2
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	l2p_addr_tran, %function
+l2p_addr_tran:
+	.fnstart
+.LFB261:
+	.file 1 "drivers/rkflash/rksftl/sftl_flash.c"
+	.loc 1 18 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL0:
+	.movsp ip
+	mov	ip, sp
+.LCFI0:
+	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
+.LCFI1:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI2:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 1 18 0
+	mov	r8, r1
+	mov	r9, r2
+	.loc 1 25 0
+	ldr	r3, .L3
+	.loc 1 32 0
+	ldr	r6, [r0, #4]
+.LVL1:
+	.loc 1 25 0
+	ldrh	r4, [r3, #8]
+.LVL2:
+	.loc 1 26 0
+	ldrh	r5, [r3, #10]
+.LVL3:
+	.loc 1 27 0
+	ldrh	r3, [r3, #14]
+	.loc 1 33 0
+	lsr	r7, r6, #10
+	.loc 1 37 0
+	ubfx	r6, r6, #0, #10
+.LVL4:
+	.loc 1 34 0
+	uxth	r0, r7
+.LVL5:
+	.loc 1 35 0
+	uxth	r7, r7
+	.loc 1 27 0
+	cmp	r3, #4
+	.loc 1 28 0
+	lsreq	r4, r4, #1
+	.loc 1 29 0
+	lsleq	r5, r5, #1
+.LVL6:
+	.loc 1 34 0
+	mov	r1, r4
+.LVL7:
+	.loc 1 29 0
+	uxtheq	r5, r5
+.LVL8:
+	.loc 1 34 0
+	bl	__aeabi_uidiv
+.LVL9:
+	uxth	r0, r0
+.LVL10:
+	.loc 1 35 0
+	mls	r4, r0, r4, r7
+.LVL11:
+	.loc 1 37 0
+	mla	r4, r5, r4, r6
+.LVL12:
+	str	r4, [r8]
+	.loc 1 38 0
+	str	r0, [r9]
+	.loc 1 41 0
+	mov	r0, #0
+.LVL13:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
+.L4:
+	.align	2
+.L3:
+	.word	g_nand_phy_info
+.LFE261:
+	.fnend
+	.size	l2p_addr_tran, .-l2p_addr_tran
+	.align	2
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	ftl_set_blk_mode.part.6, %function
+ftl_set_blk_mode.part.6:
+	.fnstart
+.LFB276:
+	.file 2 "drivers/rkflash/rksftl/sftl_sys.c"
+	.loc 2 1346 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL14:
+	.movsp ip
+	mov	ip, sp
+.LCFI3:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI4:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI5:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 1346 0
+	.loc 2 1349 0
+	lsr	r1, r0, #5
+	mov	ip, #1
+	ldr	r3, .L6
+	and	r0, r0, #31
+.LVL15:
+	ldr	r2, [r3]
+	ldr	r3, [r2, r1, lsl #2]
+	orr	r0, r3, ip, lsl r0
+	str	r0, [r2, r1, lsl #2]
+	ldmfd	sp, {fp, sp, pc}
+.L7:
+	.align	2
+.L6:
+	.word	.LANCHOR0
+.LFE276:
+	.fnend
+	.size	ftl_set_blk_mode.part.6, .-ftl_set_blk_mode.part.6
+	.align	2
+	.global	Ftl_log2
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	Ftl_log2, %function
+Ftl_log2:
+	.fnstart
+.LFB142:
+	.file 3 "drivers/rkflash/rksftl/sftl_plat.c"
+	.loc 3 128 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL16:
+	.movsp ip
+	mov	ip, sp
+.LCFI6:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI7:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI8:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 128 0
+	.loc 3 132 0
+	mov	r1, #0
+	.loc 3 130 0
+	mov	r2, #1
+.LVL17:
+.L9:
+	.loc 3 132 0 discriminator 1
+	cmp	r2, r0
+	uxth	r3, r1
+	add	r1, r1, #1
+	bls	.L10
+	.loc 3 134 0
+	sub	r0, r3, #1
+.LVL18:
+	.loc 3 136 0
+	uxth	r0, r0
+	ldmfd	sp, {fp, sp, pc}
+.LVL19:
+.L10:
+	.loc 3 133 0 discriminator 3
+	lsl	r2, r2, #1
+	b	.L9
+.LFE142:
+	.fnend
+	.size	Ftl_log2, .-Ftl_log2
+	.align	2
+	.global	FtlPrintInfo
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlPrintInfo, %function
+FtlPrintInfo:
+	.fnstart
+.LFB143:
+	.loc 3 159 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL20:
+	.movsp ip
+	mov	ip, sp
+.LCFI9:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI10:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI11:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 159 0
+	ldmfd	sp, {fp, sp, pc}
+.LFE143:
+	.fnend
+	.size	FtlPrintInfo, .-FtlPrintInfo
+	.align	2
+	.global	FtlSysBlkNumInit
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlSysBlkNumInit, %function
+FtlSysBlkNumInit:
+	.fnstart
+.LFB144:
+	.loc 3 165 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL21:
+	.movsp ip
+	mov	ip, sp
+.LCFI12:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI13:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI14:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 165 0
+	cmp	r0, #24
+	.loc 3 168 0
+	ldr	r3, .L13
+	movcc	r0, #24
+	.loc 3 169 0
+	ldrh	r2, [r3, #8]
+	.loc 3 170 0
+	ldrh	r1, [r3, #18]
+	.loc 3 168 0
+	str	r0, [r3, #4]
+	.loc 3 169 0
+	mul	r2, r0, r2
+	.loc 3 170 0
+	sub	r0, r1, r0
+.LVL22:
+	.loc 3 171 0
+	ldr	r1, [r3, #24]
+	.loc 3 170 0
+	strh	r0, [r3, #16]	@ movhi
+	.loc 3 174 0
+	mov	r0, #0
+	.loc 3 169 0
+	str	r2, [r3, #12]
+	.loc 3 171 0
+	sub	r2, r1, r2
+	str	r2, [r3, #20]
+	.loc 3 174 0
+	ldmfd	sp, {fp, sp, pc}
+.L14:
+	.align	2
+.L13:
+	.word	.LANCHOR0
+.LFE144:
+	.fnend
+	.size	FtlSysBlkNumInit, .-FtlSysBlkNumInit
+	.global	__aeabi_idiv
+	.align	2
+	.global	FtlConstantsInit
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlConstantsInit, %function
+FtlConstantsInit:
+	.fnstart
+.LFB145:
+	.loc 3 183 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL23:
+	.movsp ip
+	mov	ip, sp
+.LCFI15:
+	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI16:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI17:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 183 0
+	mov	r7, r0
+	.loc 3 191 0
+	ldrh	r2, [r7, #14]
+	.loc 3 188 0
+	ldr	r4, .L25
+	.loc 3 197 0
+	ldr	ip, .L25+4
+	.loc 3 191 0
+	cmp	r2, #4
+	.loc 3 188 0
+	ldrh	r1, [r0]
+	.loc 3 192 0
+	ldrheq	r2, [r7, #6]
+	.loc 3 189 0
+	ldrh	r6, [r0, #2]
+	.loc 3 190 0
+	ldrh	r0, [r0, #4]
+.LVL24:
+	.loc 3 188 0
+	strh	r1, [r4, #28]	@ movhi
+	.loc 3 192 0
+	lsreq	r2, r2, #1
+	.loc 3 189 0
+	strh	r6, [r4, #30]	@ movhi
+	.loc 3 190 0
+	strh	r0, [r4, #32]	@ movhi
+	.loc 3 192 0
+	strheq	r2, [r4, #18]	@ movhi
+	.loc 3 193 0
+	moveq	r2, #8
+	strheq	r2, [r4, #34]	@ movhi
+	.loc 3 183 0
+	mov	r2, #0
+.LVL25:
+.L17:
+	.loc 3 197 0 discriminator 3
+	strb	r2, [r2, ip]
+	.loc 3 196 0 discriminator 3
+	add	r2, r2, #1
+	cmp	r2, #32
+	bne	.L17
+	.loc 3 205 0
+	ldrh	r5, [r4, #18]
+	.loc 3 204 0
+	smulbb	r6, r6, r0
+	.loc 3 198 0
+	mov	r2, #5
+.LVL26:
+	.loc 3 200 0
+	cmp	r1, #1
+	.loc 3 198 0
+	strh	r2, [r4, #68]	@ movhi
+	.loc 3 204 0
+	uxth	r6, r6
+	.loc 3 202 0
+	mov	r3, #640	@ movhi
+	.loc 3 205 0
+	smulbb	r0, r0, r5
+	.loc 3 199 0
+	mov	r2, #0
+	.loc 3 201 0
+	strheq	r1, [r4, #68]	@ movhi
+	.loc 3 202 0
+	strh	r3, [r4, #72]	@ movhi
+	.loc 3 205 0
+	uxth	r0, r0
+	.loc 3 199 0
+	strh	r2, [r4, #70]	@ movhi
+	.loc 3 204 0
+	strh	r6, [r4, #8]	@ movhi
+	.loc 3 205 0
+	strh	r0, [r4, #74]	@ movhi
+	.loc 3 206 0
+	bl	Ftl_log2
+.LVL27:
+	.loc 3 207 0
+	ldrh	r9, [r7, #12]
+	.loc 3 210 0
+	ldrh	r10, [r4, #34]
+	.loc 3 206 0
+	strh	r0, [r4, #76]	@ movhi
+	.loc 3 207 0
+	strh	r9, [r4, #78]	@ movhi
+	.loc 3 209 0
+	smulbb	r2, r6, r9
+	.loc 3 210 0
+	mov	r0, r10
+	.loc 3 208 0
+	strh	r9, [r4, #80]	@ movhi
+	.loc 3 209 0
+	strh	r2, [r4, #82]	@ movhi
+	.loc 3 210 0
+	bl	Ftl_log2
+.LVL28:
+	.loc 3 214 0
+	ldrh	r3, [r7, #20]
+	.loc 3 212 0
+	lsl	r2, r10, #9
+	.loc 3 210 0
+	mov	r8, r0
+	strh	r0, [r4, #84]	@ movhi
+	.loc 3 212 0
+	uxth	r2, r2
+	mov	r7, #640
+.LVL29:
+	.loc 3 214 0
+	strh	r3, [r4, #90]	@ movhi
+	.loc 3 216 0
+	mul	r3, r5, r6
+	.loc 3 212 0
+	strh	r2, [r4, #86]	@ movhi
+	.loc 3 213 0
+	lsr	r2, r2, #8
+	.loc 3 223 0
+	lsl	r5, r5, #6
+	.loc 3 218 0
+	mul	r1, r9, r10
+	.loc 3 213 0
+	strh	r2, [r4, #88]	@ movhi
+	.loc 3 221 0
+	asr	r7, r7, r8
+	.loc 3 216 0
+	str	r3, [r4, #24]
+	.loc 3 217 0
+	mul	r3, r10, r3
+	.loc 3 223 0
+	add	r8, r8, #9
+	.loc 3 218 0
+	mov	r0, #5120
+	.loc 3 223 0
+	asr	r5, r5, r8
+	.loc 3 221 0
+	add	r7, r7, #2
+	.loc 3 217 0
+	mul	r3, r9, r3
+	asr	r3, r3, #11
+	str	r3, [r4, #92]
+	.loc 3 218 0
+	bl	__aeabi_idiv
+.LVL30:
+	uxth	r0, r0
+	.loc 3 223 0
+	strh	r5, [r4, #100]	@ movhi
+	uxth	r5, r5
+	.loc 3 226 0
+	mov	r1, r6
+	.loc 3 219 0
+	cmp	r0, #4
+	.loc 3 221 0
+	strh	r7, [r4, #98]	@ movhi
+	.loc 3 220 0
+	movls	r3, #4
+	.loc 3 218 0
+	strhhi	r0, [r4, #96]	@ movhi
+	.loc 3 220 0
+	strhls	r3, [r4, #96]	@ movhi
+	.loc 3 224 0
+	mul	r3, r6, r5
+	.loc 3 226 0
+	ldrh	r0, [r4, #96]
+	add	r5, r5, #8
+	.loc 3 224 0
+	str	r3, [r4, #104]
+	.loc 3 226 0
+	bl	__aeabi_uidiv
+.LVL31:
+	uxtah	r0, r5, r0
+	.loc 3 227 0
+	cmp	r6, #1
+	.loc 3 228 0
+	addeq	r0, r0, #4
+	str	r0, [r4, #4]
+	.loc 3 231 0
+	ldrh	r0, [r4, #4]
+	bl	FtlSysBlkNumInit
+.LVL32:
+	.loc 3 232 0
+	ldr	r3, [r4, #4]
+	.loc 3 236 0
+	mov	r0, #0
+	str	r0, [r4, #116]
+	.loc 3 232 0
+	str	r3, [r4, #108]
+	.loc 3 234 0
+	ldr	r3, [r4, #20]
+	lsl	r2, r3, #2
+	ldrh	r3, [r4, #78]
+	mul	r3, r3, r2
+	ldrh	r2, [r4, #84]
+	add	r2, r2, #9
+	lsr	r3, r3, r2
+	add	r3, r3, #2
+	strh	r3, [r4, #112]	@ movhi
+	.loc 3 235 0
+	mov	r3, #32
+	strh	r3, [r4, #114]	@ movhi
+	.loc 3 237 0
+	ldrh	r3, [r4, #96]
+	add	r3, r3, #3
+	strh	r3, [r4, #96]	@ movhi
+	.loc 3 238 0
+	ldr	r3, [r4, #104]
+	add	r3, r3, #3
+	str	r3, [r4, #104]
+	.loc 3 263 0
+	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.L26:
+	.align	2
+.L25:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+36
+.LFE145:
+	.fnend
+	.size	FtlConstantsInit, .-FtlConstantsInit
+	.align	2
+	.global	IsBlkInVendorPart
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	IsBlkInVendorPart, %function
+IsBlkInVendorPart:
+	.fnstart
+.LFB148:
+	.loc 3 514 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL33:
+	.movsp ip
+	mov	ip, sp
+.LCFI18:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI19:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI20:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 514 0
+	.loc 3 517 0
+	ldr	r2, .L34
+	ldrh	r3, [r2, #120]
+	cmp	r3, #0
+.LBB218:
+.LBB219:
+	.loc 3 519 0
+	ldrne	r3, [r2, #124]
+	ldrhne	r2, [r2, #96]
+	addne	r2, r3, r2, lsl #1
+.LBE219:
+.LBE218:
+	.loc 3 517 0
+	bne	.L29
+.L33:
+	.loc 3 524 0
+	mov	r0, #0
+.LVL34:
+	ldmfd	sp, {fp, sp, pc}
+.LVL35:
+.L30:
+.LBB221:
+.LBB220:
+	.loc 3 519 0
+	ldrh	r1, [r3], #2
+	cmp	r0, r1
+	beq	.L32
+.L29:
+	.loc 3 518 0
+	cmp	r3, r2
+	bne	.L30
+	b	.L33
+.L32:
+	.loc 3 520 0
+	mov	r0, #1
+.LVL36:
+.LBE220:
+.LBE221:
+	.loc 3 525 0
+	ldmfd	sp, {fp, sp, pc}
+.L35:
+	.align	2
+.L34:
+	.word	.LANCHOR0
+.LFE148:
+	.fnend
+	.size	IsBlkInVendorPart, .-IsBlkInVendorPart
+	.align	2
+	.global	sftl_get_density
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	sftl_get_density, %function
+sftl_get_density:
+	.fnstart
+.LFB161:
+	.loc 3 1212 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI21:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI22:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI23:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 1212 0
+	.loc 3 1214 0
+	ldr	r3, .L37
+	ldr	r0, [r3, #116]
+	ldmfd	sp, {fp, sp, pc}
+.L38:
+	.align	2
+.L37:
+	.word	.LANCHOR0
+.LFE161:
+	.fnend
+	.size	sftl_get_density, .-sftl_get_density
+	.global	__aeabi_uidivmod
+	.align	2
+	.global	FtlBbmMapBadBlock
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlBbmMapBadBlock, %function
+FtlBbmMapBadBlock:
+	.fnstart
+.LFB162:
+	.file 4 "drivers/rkflash/rksftl/sftl_bbm.c"
+	.loc 4 5 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL37:
+	.movsp ip
+	mov	ip, sp
+.LCFI24:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI25:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI26:
+	.pad #8
+	sub	sp, sp, #8
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 4 5 0
+	.loc 4 10 0
+	ldr	r4, .L40
+	.loc 4 5 0
+	mov	r5, r0
+	.loc 4 10 0
+	ldrh	r7, [r4, #74]
+	mov	r1, r7
+	bl	__aeabi_uidiv
+.LVL38:
+	uxth	r6, r0
+.LVL39:
+	mov	r1, r7
+	mov	r0, r5
+	bl	__aeabi_uidivmod
+.LVL40:
+	.loc 4 13 0
+	add	r2, r4, r6, lsl #2
+	uxth	r3, r1
+	.loc 4 15 0
+	ldr	r2, [r2, #156]
+	lsr	r1, r3, #5
+	and	ip, r3, #31
+	mov	lr, #1
+	ldr	r0, [r2, r1, lsl #2]
+	orr	r0, r0, lr, lsl ip
+	str	r0, [r2, r1, lsl #2]
+	.loc 4 16 0
+	mov	r2, r6
+	str	r0, [sp]
+	mov	r1, r5
+	ldr	r0, .L40+4
+	bl	printk
+.LVL41:
+	.loc 4 17 0
+	ldrh	r3, [r4, #134]
+	.loc 4 19 0
+	mov	r0, #0
+	.loc 4 17 0
+	add	r3, r3, #1
+	strh	r3, [r4, #134]	@ movhi
+	.loc 4 19 0
+	sub	sp, fp, #28
+.LCFI27:
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.LVL42:
+.L41:
+	.align	2
+.L40:
+	.word	.LANCHOR0
+	.word	.LC0
+.LFE162:
+	.fnend
+	.size	FtlBbmMapBadBlock, .-FtlBbmMapBadBlock
+	.align	2
+	.global	FtlBbmIsBadBlock
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlBbmIsBadBlock, %function
+FtlBbmIsBadBlock:
+	.fnstart
+.LFB163:
+	.loc 4 24 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL43:
+	.movsp ip
+	mov	ip, sp
+.LCFI28:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI29:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI30:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 4 24 0
+	mov	r7, r0
+	.loc 4 30 0
+	ldr	r5, .L43
+	ldrh	r6, [r5, #74]
+	.loc 4 31 0
+	mov	r1, r6
+	bl	__aeabi_uidivmod
+.LVL44:
+	.loc 4 30 0
+	mov	r0, r7
+	.loc 4 31 0
+	uxth	r4, r1
+.LVL45:
+	.loc 4 30 0
+	mov	r1, r6
+	bl	__aeabi_uidiv
+.LVL46:
+	uxth	r0, r0
+.LVL47:
+	.loc 4 34 0
+	lsr	r2, r4, #5
+	.loc 4 33 0
+	add	r5, r5, r0, lsl #2
+	.loc 4 34 0
+	and	r4, r4, #31
+.LVL48:
+	ldr	r3, [r5, #156]
+	ldr	r0, [r3, r2, lsl #2]
+.LVL49:
+	lsr	r0, r0, r4
+	.loc 4 36 0
+	and	r0, r0, #1
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L44:
+	.align	2
+.L43:
+	.word	.LANCHOR0
+.LFE163:
+	.fnend
+	.size	FtlBbmIsBadBlock, .-FtlBbmIsBadBlock
+	.align	2
+	.global	FtlBbtInfoPrint
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlBbtInfoPrint, %function
+FtlBbtInfoPrint:
+	.fnstart
+.LFB164:
+	.loc 4 39 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI31:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI32:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI33:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 4 39 0
+	ldmfd	sp, {fp, sp, pc}
+.LFE164:
+	.fnend
+	.size	FtlBbtInfoPrint, .-FtlBbtInfoPrint
+	.align	2
+	.global	FtlBbtMemInit
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlBbtMemInit, %function
+FtlBbtMemInit:
+	.fnstart
+.LFB167:
+	.loc 4 149 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI34:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI35:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI36:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 4 149 0
+	.loc 4 150 0
+	mvn	r3, #0
+.LBB227:
+.LBB228:
+.LBB229:
+	.loc 1 202 0
+	mov	r2, #16
+.LBE229:
+.LBE228:
+.LBE227:
+	.loc 4 150 0
+	ldr	r0, .L47
+.LBB234:
+.LBB232:
+.LBB230:
+	.loc 1 202 0
+	mov	r1, #255
+.LBE230:
+.LBE232:
+.LBE234:
+	.loc 4 150 0
+	strh	r3, [r0, #128]	@ movhi
+	.loc 4 151 0
+	mov	r3, #0
+	strh	r3, [r0, #134]	@ movhi
+.LBB235:
+.LBB233:
+.LBB231:
+	.loc 1 202 0
+	add	r0, r0, #140
+	bl	memset
+.LVL50:
+	ldmfd	sp, {fp, sp, pc}
+.L48:
+	.align	2
+.L47:
+	.word	.LANCHOR0
+.LBE231:
+.LBE233:
+.LBE235:
+.LFE167:
+	.fnend
+	.size	FtlBbtMemInit, .-FtlBbtMemInit
+	.align	2
+	.global	FtlBbtCalcTotleCnt
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlBbtCalcTotleCnt, %function
+FtlBbtCalcTotleCnt:
+	.fnstart
+.LFB168:
+	.loc 4 157 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI37:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI38:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI39:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 4 157 0
+	.loc 4 160 0
+	mov	r5, #0
+	ldr	r3, .L56
+	.loc 4 159 0
+	mov	r4, r5
+	.loc 4 160 0
+	ldrh	r2, [r3, #74]
+	ldrh	r6, [r3, #30]
+	mul	r6, r6, r2
+.L50:
+	uxth	r0, r5
+.LVL51:
+	.loc 4 160 0 is_stmt 0 discriminator 1
+	cmp	r0, r6
+.LVL52:
+	blt	.L52
+	.loc 4 169 0 is_stmt 1
+	mov	r0, r4
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L52:
+	.loc 4 162 0
+	bl	FtlBbmIsBadBlock
+.LVL53:
+	cmp	r0, #0
+	add	r5, r5, #1
+	.loc 4 164 0
+	addne	r4, r4, #1
+	uxthne	r4, r4
+	b	.L50
+.L57:
+	.align	2
+.L56:
+	.word	.LANCHOR0
+.LFE168:
+	.fnend
+	.size	FtlBbtCalcTotleCnt, .-FtlBbtCalcTotleCnt
+	.align	2
+	.global	V2P_block
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	V2P_block, %function
+V2P_block:
+	.fnstart
+.LFB172:
+	.loc 2 5 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL54:
+	.movsp ip
+	mov	ip, sp
+.LCFI40:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI41:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI42:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 5 0
+	mov	r5, r1
+	mov	r7, r0
+	.loc 2 8 0
+	ldr	r4, .L59
+	ldrh	r6, [r4, #32]
+	mov	r1, r6
+.LVL55:
+	bl	__aeabi_uidiv
+.LVL56:
+	ldrh	r4, [r4, #74]
+	smulbb	r5, r6, r5
+.LVL57:
+	mov	r1, r6
+	smulbb	r4, r4, r0
+	mov	r0, r7
+	bl	__aeabi_uidivmod
+.LVL58:
+	add	r0, r5, r1
+	add	r0, r4, r0
+	.loc 2 10 0
+	uxth	r0, r0
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L60:
+	.align	2
+.L59:
+	.word	.LANCHOR0
+.LFE172:
+	.fnend
+	.size	V2P_block, .-V2P_block
+	.align	2
+	.global	P2V_plane
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	P2V_plane, %function
+P2V_plane:
+	.fnstart
+.LFB173:
+	.loc 2 13 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL59:
+	.movsp ip
+	mov	ip, sp
+.LCFI43:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI44:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI45:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 13 0
+	mov	r6, r0
+	.loc 2 16 0
+	ldr	r3, .L62
+	ldrh	r5, [r3, #32]
+	ldrh	r1, [r3, #74]
+	bl	__aeabi_uidiv
+.LVL60:
+	mov	r1, r5
+	smulbb	r4, r0, r5
+	mov	r0, r6
+	bl	__aeabi_uidivmod
+.LVL61:
+	add	r1, r4, r1
+	.loc 2 18 0
+	uxth	r0, r1
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L63:
+	.align	2
+.L62:
+	.word	.LANCHOR0
+.LFE173:
+	.fnend
+	.size	P2V_plane, .-P2V_plane
+	.align	2
+	.global	P2V_block_in_plane
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	P2V_block_in_plane, %function
+P2V_block_in_plane:
+	.fnstart
+.LFB174:
+	.loc 2 21 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL62:
+	.movsp ip
+	mov	ip, sp
+.LCFI46:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI47:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI48:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 21 0
+	.loc 2 24 0
+	ldr	r4, .L65
+	ldrh	r1, [r4, #74]
+	bl	__aeabi_uidivmod
+.LVL63:
+	uxth	r0, r1
+	.loc 2 25 0
+	ldrh	r1, [r4, #32]
+	bl	__aeabi_uidiv
+.LVL64:
+	.loc 2 27 0
+	uxth	r0, r0
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L66:
+	.align	2
+.L65:
+	.word	.LANCHOR0
+.LFE174:
+	.fnend
+	.size	P2V_block_in_plane, .-P2V_block_in_plane
+	.align	2
+	.global	ftl_cmp_data_ver
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	ftl_cmp_data_ver, %function
+ftl_cmp_data_ver:
+	.fnstart
+.LFB175:
+	.loc 2 31 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL65:
+	.movsp ip
+	mov	ip, sp
+.LCFI49:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI50:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI51:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 31 0
+	.loc 2 34 0
+	cmp	r0, r1
+	bls	.L68
+	.loc 2 36 0
+	sub	r0, r0, r1
+.LVL66:
+	cmp	r0, #-2147483648
+	movhi	r0, #0
+	movls	r0, #1
+	ldmfd	sp, {fp, sp, pc}
+.LVL67:
+.L68:
+	.loc 2 40 0
+	sub	r0, r1, r0
+.LVL68:
+	cmp	r0, #-2147483648
+	movls	r0, #0
+	movhi	r0, #1
+	.loc 2 44 0
+	ldmfd	sp, {fp, sp, pc}
+.LFE175:
+	.fnend
+	.size	ftl_cmp_data_ver, .-ftl_cmp_data_ver
+	.align	2
+	.global	FtlFreeSysBlkQueueInit
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlFreeSysBlkQueueInit, %function
+FtlFreeSysBlkQueueInit:
+	.fnstart
+.LFB177:
+	.loc 2 76 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL69:
+	.movsp ip
+	mov	ip, sp
+.LCFI52:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI53:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI54:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 76 0
+	.loc 2 79 0
+	mov	r4, #0
+.LBB241:
+.LBB242:
+.LBB243:
+	.loc 1 202 0
+	mov	r1, #2048
+.LBE243:
+.LBE242:
+.LBE241:
+	.loc 2 79 0
+	ldr	r3, .L71
+	.loc 2 82 0
+	strh	r0, [r3, #188]	@ movhi
+.LBB248:
+.LBB246:
+.LBB244:
+	.loc 1 202 0
+	add	r0, r3, #196
+.LVL70:
+.LBE244:
+.LBE246:
+.LBE248:
+	.loc 2 79 0
+	strh	r4, [r3, #190]	@ movhi
+	.loc 2 80 0
+	strh	r4, [r3, #192]	@ movhi
+	.loc 2 81 0
+	strh	r4, [r3, #194]	@ movhi
+.LBB249:
+.LBB247:
+.LBB245:
+	.loc 1 202 0
+	bl	__memzero
+.LVL71:
+.LBE245:
+.LBE247:
+.LBE249:
+	.loc 2 85 0
+	mov	r0, r4
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L72:
+	.align	2
+.L71:
+	.word	.LANCHOR0
+.LFE177:
+	.fnend
+	.size	FtlFreeSysBlkQueueInit, .-FtlFreeSysBlkQueueInit
+	.align	2
+	.global	FtlFreeSysBlkQueueEmpty
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlFreeSysBlkQueueEmpty, %function
+FtlFreeSysBlkQueueEmpty:
+	.fnstart
+.LFB178:
+	.loc 2 88 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI55:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI56:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI57:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 88 0
+	.loc 2 89 0
+	ldr	r3, .L74
+	ldrh	r0, [r3, #194]
+	.loc 2 90 0
+	clz	r0, r0
+	lsr	r0, r0, #5
+	ldmfd	sp, {fp, sp, pc}
+.L75:
+	.align	2
+.L74:
+	.word	.LANCHOR0
+.LFE178:
+	.fnend
+	.size	FtlFreeSysBlkQueueEmpty, .-FtlFreeSysBlkQueueEmpty
+	.align	2
+	.global	FtlFreeSysBlkQueueFull
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlFreeSysBlkQueueFull, %function
+FtlFreeSysBlkQueueFull:
+	.fnstart
+.LFB179:
+	.loc 2 93 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI58:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI59:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI60:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 93 0
+	.loc 2 94 0
+	ldr	r3, .L77
+	ldrh	r0, [r3, #194]
+	.loc 2 95 0
+	sub	r0, r0, #1024
+	clz	r0, r0
+	lsr	r0, r0, #5
+	ldmfd	sp, {fp, sp, pc}
+.L78:
+	.align	2
+.L77:
+	.word	.LANCHOR0
+.LFE179:
+	.fnend
+	.size	FtlFreeSysBlkQueueFull, .-FtlFreeSysBlkQueueFull
+	.align	2
+	.global	FtlFreeSysBLkSort
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlFreeSysBLkSort, %function
+FtlFreeSysBLkSort:
+	.fnstart
+.LFB181:
+	.loc 2 116 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI61:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI62:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI63:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 116 0
+	.loc 2 123 0
+	mov	r3, #0
+	ldr	r6, .L88
+	mov	r4, r6
+.L80:
+	.loc 2 123 0 is_stmt 0 discriminator 1
+	ldrh	r1, [r6, #194]
+	uxth	r2, r3
+	add	r7, r3, #1
+	cmp	r1, r2
+	bhi	.L81
+	mov	r1, #0
+.LVL72:
+.L82:
+	.loc 2 128 0 is_stmt 1 discriminator 1
+	ldrh	lr, [r4, #194]
+.LVL73:
+	sub	r3, lr, #1
+.LVL74:
+	cmp	r1, r3
+	blt	.L87
+	.loc 2 144 0
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.LVL75:
+.L81:
+	.loc 2 124 0 discriminator 3
+	ldrh	r2, [r6, #190]
+	uxth	r5, r3
+	add	r3, r2, r5
+	add	r3, r6, r3, lsl #1
+	ldrh	r0, [r3, #196]
+	bl	P2V_block_in_plane
+.LVL76:
+	.loc 2 125 0 discriminator 3
+	ldr	r2, [r6, #2248]
+	lsl	r0, r0, #1
+	ldr	r3, [r6, #2244]
+	ldrh	r2, [r2, r0]
+	str	r2, [r3, r5, lsl #2]
+	mov	r3, r7
+	b	.L80
+.LVL77:
+.L87:
+	.loc 2 130 0
+	add	r0, r1, #1
+	.loc 2 131 0
+	ldr	ip, [r4, #2244]
+.LVL78:
+	.loc 2 130 0
+	uxth	r0, r0
+	mov	r3, r1
+.LVL79:
+	mov	r2, r0
+.L83:
+	.loc 2 130 0 is_stmt 0 discriminator 1
+	cmp	r2, lr
+	bcc	.L85
+	.loc 2 134 0 is_stmt 1
+	cmp	r1, r3
+	beq	.L86
+	.loc 2 136 0
+	ldr	r2, [ip, r1, lsl #2]
+	.loc 2 135 0
+	ldr	lr, [ip, r3, lsl #2]
+.LVL80:
+	.loc 2 136 0
+	str	r2, [ip, r3, lsl #2]
+	.loc 2 137 0
+	ldr	r2, [r4, #2244]
+	str	lr, [r2, r1, lsl #2]
+	.loc 2 139 0
+	ldrh	r2, [r4, #190]
+	add	r3, r3, r2
+.LVL81:
+	.loc 2 140 0
+	add	r2, r1, r2
+	.loc 2 139 0
+	add	r3, r3, #4
+	.loc 2 140 0
+	add	r2, r2, #4
+	.loc 2 139 0
+	add	r3, r4, r3, lsl #1
+	.loc 2 140 0
+	add	r2, r4, r2, lsl #1
+	.loc 2 139 0
+	ldrh	ip, [r3, #188]
+.LVL82:
+	.loc 2 140 0
+	ldrh	r1, [r2, #188]
+	strh	r1, [r3, #188]	@ movhi
+	.loc 2 141 0
+	strh	ip, [r2, #188]	@ movhi
+.LVL83:
+.L86:
+	.loc 2 130 0 discriminator 1
+	mov	r1, r0
+	b	.L82
+.LVL84:
+.L85:
+	.loc 2 131 0
+	ldr	r6, [ip, r3, lsl #2]
+	ldr	r5, [ip, r2, lsl #2]
+	cmp	r6, r5
+	movhi	r3, r2
+	.loc 2 130 0
+	add	r2, r2, #1
+	uxth	r2, r2
+	b	.L83
+.L89:
+	.align	2
+.L88:
+	.word	.LANCHOR0
+.LFE181:
+	.fnend
+	.size	FtlFreeSysBLkSort, .-FtlFreeSysBLkSort
+	.align	2
+	.global	IsInFreeQueue
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	IsInFreeQueue, %function
+IsInFreeQueue:
+	.fnstart
+.LFB182:
+	.loc 2 147 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL85:
+	.movsp ip
+	mov	ip, sp
+.LCFI64:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI65:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI66:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 147 0
+.LBB250:
+.LBB251:
+	.loc 2 94 0
+	ldr	r3, .L96
+	ldrh	ip, [r3, #194]
+.LBE251:
+.LBE250:
+	.loc 2 152 0
+	cmp	ip, #1024
+	.loc 2 155 0
+	ldrhne	lr, [r3, #190]
+	movne	r1, #0
+.LVL86:
+	.loc 2 152 0
+	bne	.L92
+.L94:
+	.loc 2 148 0
+	mov	r0, #0
+.LVL87:
+	ldmfd	sp, {fp, sp, pc}
+.LVL88:
+.L93:
+	.loc 2 155 0
+	add	r2, r1, lr
+	ubfx	r2, r2, #0, #10
+	add	r2, r3, r2, lsl #1
+	ldrh	r2, [r2, #196]
+	cmp	r2, r0
+	beq	.L95
+	.loc 2 154 0 discriminator 2
+	add	r1, r1, #1
+.L92:
+	.loc 2 154 0 is_stmt 0 discriminator 1
+	cmp	r1, ip
+	bcc	.L93
+	b	.L94
+.L95:
+	.loc 2 156 0 is_stmt 1
+	mov	r0, #1
+.LVL89:
+	.loc 2 162 0
+	ldmfd	sp, {fp, sp, pc}
+.L97:
+	.align	2
+.L96:
+	.word	.LANCHOR0
+.LFE182:
+	.fnend
+	.size	IsInFreeQueue, .-IsInFreeQueue
+	.align	2
+	.global	FtlFreeSysBlkQueueOut
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlFreeSysBlkQueueOut, %function
+FtlFreeSysBlkQueueOut:
+	.fnstart
+.LFB183:
+	.loc 2 165 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI67:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI68:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI69:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 165 0
+.LBB252:
+.LBB253:
+	.loc 2 89 0
+	ldr	r2, .L101
+	ldrh	r1, [r2, #194]
+.LBE253:
+.LBE252:
+	.loc 2 168 0
+	cmp	r1, #0
+.LBB254:
+	.loc 2 170 0
+	ldrhne	r3, [r2, #190]
+	.loc 2 171 0
+	subne	r1, r1, #1
+	strhne	r1, [r2, #194]	@ movhi
+	.loc 2 170 0
+	addne	r0, r2, r3, lsl #1
+	.loc 2 172 0
+	addne	r3, r3, #1
+	ubfxne	r3, r3, #0, #10
+	.loc 2 170 0
+	ldrhne	r0, [r0, #196]
+.LBE254:
+	.loc 2 166 0
+	movweq	r0, #65535
+.LBB255:
+	.loc 2 172 0
+	strhne	r3, [r2, #190]	@ movhi
+.LBE255:
+	.loc 2 176 0
+	ldmfd	sp, {fp, sp, pc}
+.L102:
+	.align	2
+.L101:
+	.word	.LANCHOR0
+.LFE183:
+	.fnend
+	.size	FtlFreeSysBlkQueueOut, .-FtlFreeSysBlkQueueOut
+	.align	2
+	.global	insert_data_list
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	insert_data_list, %function
+insert_data_list:
+	.fnstart
+.LFB186:
+	.loc 2 217 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL90:
+	.movsp ip
+	mov	ip, sp
+.LCFI70:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI71:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI72:
+	.pad #12
+	sub	sp, sp, #12
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 217 0
+	.loc 2 225 0
+	movw	r3, #65535
+	cmp	r0, r3
+	beq	.L104
+	.loc 2 230 0
+	ldr	r2, .L116
+	mov	lr, #6
+	mul	lr, lr, r0
+	.loc 2 231 0
+	mvn	ip, #0
+	.loc 2 230 0
+	ldr	r5, [r2, #2252]
+	mov	r4, r2
+	add	r1, r5, lr
+.LVL91:
+	.loc 2 231 0
+	strh	ip, [r1, #2]	@ movhi
+	strh	ip, [r5, lr]	@ movhi
+	.loc 2 233 0
+	ldr	r3, [r2, #2256]
+.LVL92:
+	cmp	r3, #0
+	.loc 2 234 0
+	streq	r1, [r2, #2256]
+	.loc 2 233 0
+	beq	.L104
+	.loc 2 238 0
+	ldr	r7, [r2, #2260]
+	lsl	r9, r0, #1
+	.loc 2 239 0
+	ldrh	r2, [r1, #4]
+	.loc 2 238 0
+	ldrh	r6, [r7, r9]
+.LVL93:
+	.loc 2 240 0
+	cmp	r2, #0
+	.loc 2 239 0
+	mulne	ip, r2, r6
+.LVL94:
+	.loc 2 244 0
+	ldr	r6, [r4, #2252]
+.LVL95:
+	sub	r2, r3, r6
+	asr	r8, r2, #1
+	ldr	r2, .L116+4
+	mul	r2, r2, r8
+	.loc 2 252 0
+	ldr	r8, [r4, #2248]
+	add	r4, r8, r9
+	.loc 2 244 0
+	uxth	r2, r2
+	.loc 2 252 0
+	str	r4, [fp, #-48]
+.LVL96:
+.L112:
+	.loc 2 246 0
+	lsl	r9, r2, #1
+	.loc 2 247 0
+	ldrh	r4, [r3, #4]
+	.loc 2 246 0
+	ldrh	r10, [r7, r9]
+	.loc 2 248 0
+	cmp	r4, #0
+	.loc 2 249 0
+	mvneq	r4, #0
+.LVL97:
+	.loc 2 247 0
+	mulne	r4, r4, r10
+.LVL98:
+	.loc 2 251 0
+	cmp	ip, r4
+	bne	.L108
+	.loc 2 252 0
+	ldr	r4, [fp, #-48]
+.LVL99:
+	ldrh	r9, [r8, r9]
+	ldrh	r4, [r4]
+	cmp	r9, r4
+	bcc	.L110
+.LVL100:
+.L109:
+	.loc 2 270 0
+	strh	r2, [r5, lr]	@ movhi
+	.loc 2 273 0
+	ldr	ip, .L116
+.LVL101:
+	.loc 2 271 0
+	ldrh	r2, [r3, #2]
+	strh	r2, [r1, #2]	@ movhi
+	.loc 2 273 0
+	ldr	r2, [ip, #2256]
+	cmp	r3, r2
+	.loc 2 277 0
+	ldrhne	lr, [r3, #2]
+	movne	r2, #6
+	ldrne	r1, [ip, #2252]
+.LVL102:
+	.loc 2 274 0
+	strheq	r0, [r3, #2]	@ movhi
+.LVL103:
+	.loc 2 275 0
+	streq	r1, [ip, #2256]
+	.loc 2 277 0
+	mulne	r2, r2, lr
+	strhne	r0, [r1, r2]	@ movhi
+.LVL104:
+	.loc 2 278 0
+	strhne	r0, [r3, #2]	@ movhi
+	b	.L104
+.LVL105:
+.L108:
+	.loc 2 256 0
+	bcc	.L109
+.L110:
+	.loc 2 259 0
+	ldrh	r4, [r3]
+.LVL106:
+	movw	r9, #65535
+	cmp	r4, r9
+	bne	.L111
+	.loc 2 260 0
+	strh	r2, [r1, #2]	@ movhi
+	.loc 2 261 0
+	strh	r0, [r3]	@ movhi
+	.loc 2 262 0
+	ldr	r3, .L116
+.LVL107:
+	str	r1, [r3, #2264]
+.LVL108:
+.L104:
+	.loc 2 281 0
+	mov	r0, #0
+.LVL109:
+	sub	sp, fp, #40
+.LCFI73:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL110:
+.L111:
+.LCFI74:
+	.loc 2 267 0
+	mov	r3, #6
+.LVL111:
+	.loc 2 246 0
+	mov	r2, r4
+	.loc 2 267 0
+	mla	r3, r3, r4, r6
+.LVL112:
+	.loc 2 246 0
+	b	.L112
+.L117:
+	.align	2
+.L116:
+	.word	.LANCHOR0
+	.word	-1431655765
+.LFE186:
+	.fnend
+	.size	insert_data_list, .-insert_data_list
+	.align	2
+	.global	INSERT_DATA_LIST
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	INSERT_DATA_LIST, %function
+INSERT_DATA_LIST:
+	.fnstart
+.LFB185:
+	.loc 2 186 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL113:
+	.movsp ip
+	mov	ip, sp
+.LCFI75:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI76:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI77:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 186 0
+	.loc 2 187 0
+	bl	insert_data_list
+.LVL114:
+	.loc 2 188 0
+	ldr	r2, .L120
+	movw	r1, #2268
+	ldrh	r3, [r2, r1]
+	add	r3, r3, #1
+	uxth	r3, r3
+	strh	r3, [r2, r1]	@ movhi
+	.loc 2 189 0
+	ldrh	r2, [r2, #16]
+	cmp	r2, r3
+	ldmfdcs	sp, {fp, sp, pc}
+.LBB258:
+.LBB259:
+	mov	r2, #189
+	ldr	r1, .L120+4
+	ldr	r0, .L120+8
+	bl	printk
+.LVL115:
+	ldmfd	sp, {fp, sp, pc}
+.L121:
+	.align	2
+.L120:
+	.word	.LANCHOR0
+	.word	.LANCHOR1
+	.word	.LC1
+.LBE259:
+.LBE258:
+.LFE185:
+	.fnend
+	.size	INSERT_DATA_LIST, .-INSERT_DATA_LIST
+	.align	2
+	.global	insert_free_list
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	insert_free_list, %function
+insert_free_list:
+	.fnstart
+.LFB187:
+	.loc 2 284 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL116:
+	.movsp ip
+	mov	ip, sp
+.LCFI78:
+	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI79:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI80:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 284 0
+	.loc 2 290 0
+	movw	r4, #65535
+	cmp	r0, r4
+	beq	.L123
+	.loc 2 293 0
+	ldr	r2, .L129
+	mov	lr, #6
+	mul	r5, lr, r0
+	.loc 2 294 0
+	mvn	r3, #0
+	.loc 2 293 0
+	ldr	r6, [r2, #2252]
+	mov	r1, r2
+	add	ip, r6, r5
+.LVL117:
+	.loc 2 294 0
+	strh	r3, [ip, #2]	@ movhi
+	strh	r3, [r6, r5]	@ movhi
+	.loc 2 296 0
+	ldr	r3, [r2, #2272]
+.LVL118:
+	cmp	r3, #0
+	.loc 2 297 0
+	streq	ip, [r2, #2272]
+	.loc 2 296 0
+	beq	.L123
+	.loc 2 301 0
+	ldr	r9, [r2, #2248]
+	lsl	r2, r0, #1
+	.loc 2 303 0
+	ldr	r8, [r1, #2252]
+	.loc 2 301 0
+	ldrh	r10, [r9, r2]
+.LVL119:
+	.loc 2 303 0
+	sub	r2, r3, r8
+	asr	r7, r2, #1
+	ldr	r2, .L129+4
+	mul	r2, r2, r7
+	uxth	r2, r2
+.L127:
+	.loc 2 306 0
+	lsl	r7, r2, #1
+	.loc 2 307 0
+	ldrh	r7, [r9, r7]
+	cmp	r7, r10
+	bcs	.L125
+	.loc 2 310 0
+	ldrh	r7, [r3]
+	cmp	r7, r4
+	bne	.L126
+	.loc 2 311 0
+	strh	r2, [ip, #2]	@ movhi
+	.loc 2 312 0
+	strh	r0, [r3]	@ movhi
+.L123:
+	.loc 2 330 0
+	mov	r0, #0
+.LVL120:
+	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL121:
+.L126:
+	.loc 2 316 0
+	mla	r3, lr, r7, r8
+	.loc 2 306 0
+	mov	r2, r7
+	b	.L127
+.L125:
+	.loc 2 319 0
+	ldrh	lr, [r3, #2]
+	strh	lr, [ip, #2]	@ movhi
+	.loc 2 320 0
+	strh	r2, [r6, r5]	@ movhi
+	.loc 2 322 0
+	ldr	r2, [r1, #2272]
+	cmp	r3, r2
+	.loc 2 326 0
+	ldrhne	ip, [r3, #2]
+.LVL122:
+	movne	r2, #6
+	ldrne	r1, [r1, #2252]
+	.loc 2 323 0
+	strheq	r0, [r3, #2]	@ movhi
+.LVL123:
+	.loc 2 324 0
+	streq	ip, [r1, #2272]
+	.loc 2 326 0
+	mulne	r2, r2, ip
+.LVL124:
+	strhne	r0, [r1, r2]	@ movhi
+	.loc 2 327 0
+	strhne	r0, [r3, #2]	@ movhi
+	b	.L123
+.L130:
+	.align	2
+.L129:
+	.word	.LANCHOR0
+	.word	-1431655765
+.LFE187:
+	.fnend
+	.size	insert_free_list, .-insert_free_list
+	.align	2
+	.global	INSERT_FREE_LIST
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	INSERT_FREE_LIST, %function
+INSERT_FREE_LIST:
+	.fnstart
+.LFB184:
+	.loc 2 179 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL125:
+	.movsp ip
+	mov	ip, sp
+.LCFI81:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI82:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI83:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 179 0
+	.loc 2 180 0
+	bl	insert_free_list
+.LVL126:
+	.loc 2 181 0
+	ldr	r2, .L133
+	movw	r1, #2276
+	ldrh	r3, [r2, r1]
+	add	r3, r3, #1
+	uxth	r3, r3
+	strh	r3, [r2, r1]	@ movhi
+	.loc 2 182 0
+	ldrh	r2, [r2, #16]
+	cmp	r2, r3
+	ldmfdcs	sp, {fp, sp, pc}
+.LBB262:
+.LBB263:
+	mov	r2, #182
+	ldr	r1, .L133+4
+	ldr	r0, .L133+8
+	bl	printk
+.LVL127:
+	ldmfd	sp, {fp, sp, pc}
+.L134:
+	.align	2
+.L133:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+17
+	.word	.LC1
+.LBE263:
+.LBE262:
+.LFE184:
+	.fnend
+	.size	INSERT_FREE_LIST, .-INSERT_FREE_LIST
+	.align	2
+	.global	List_remove_node
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	List_remove_node, %function
+List_remove_node:
+	.fnstart
+.LFB188:
+	.loc 2 333 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL128:
+	.movsp ip
+	mov	ip, sp
+.LCFI84:
+	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
+.LCFI85:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI86:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 333 0
+	.loc 2 336 0
+	mov	r5, #6
+	.loc 2 337 0
+	movw	r3, #65535
+	.loc 2 336 0
+	ldr	r7, .L142
+	mul	r5, r5, r1
+	.loc 2 333 0
+	mov	r8, r0
+	.loc 2 336 0
+	ldr	r6, [r7, #2252]
+	add	r4, r6, r5
+.LVL129:
+	.loc 2 337 0
+	ldrh	r2, [r4, #2]
+	cmp	r2, r3
+	bne	.L136
+	.loc 2 337 0 is_stmt 0 discriminator 1
+	ldr	r3, [r0]
+	cmp	r4, r3
+	beq	.L136
+	.loc 2 337 0 discriminator 2
+	movw	r2, #337
+	ldr	r1, .L142+4
+.LVL130:
+	ldr	r0, .L142+8
+	bl	printk
+.LVL131:
+.L136:
+	.loc 2 339 0 is_stmt 1
+	ldr	r3, [r8]
+	movw	r2, #65535
+	cmp	r4, r3
+	ldrh	r3, [r6, r5]
+	bne	.L137
+	.loc 2 340 0
+	cmp	r3, r2
+	.loc 2 343 0
+	ldrne	r2, [r7, #2252]
+	movne	r1, #6
+.LVL132:
+	.loc 2 341 0
+	moveq	r3, #0
+	streq	r3, [r8]
+	.loc 2 343 0
+	mlane	r3, r1, r3, r2
+	.loc 2 344 0
+	mvnne	r2, #0
+	.loc 2 343 0
+	strne	r3, [r8]
+	.loc 2 344 0
+	strhne	r2, [r3, #2]	@ movhi
+.L139:
+	.loc 2 355 0
+	mvn	r3, #0
+	.loc 2 357 0
+	mov	r0, #0
+	.loc 2 355 0
+	strh	r3, [r6, r5]	@ movhi
+	strh	r3, [r4, #2]	@ movhi
+	.loc 2 357 0
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
+.LVL133:
+.L137:
+	.loc 2 346 0
+	cmp	r3, r2
+	mov	r2, #6
+	.loc 2 351 0
+	ldrne	r0, [r7, #2252]
+	ldrh	r1, [r4, #2]
+.LVL134:
+	.loc 2 348 0
+	ldreq	r3, [r7, #2252]
+	.loc 2 351 0
+	mlane	r3, r2, r3, r0
+	.loc 2 348 0
+	muleq	r2, r2, r1
+	mvneq	r1, #0
+	.loc 2 351 0
+	strhne	r1, [r3, #2]	@ movhi
+	.loc 2 352 0
+	ldrhne	r0, [r4, #2]
+	.loc 2 353 0
+	ldrhne	r1, [r6, r5]
+	ldrne	r3, [r7, #2252]
+	mulne	r2, r2, r0
+	strh	r1, [r3, r2]	@ movhi
+	b	.L139
+.L143:
+	.align	2
+.L142:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+34
+	.word	.LC1
+.LFE188:
+	.fnend
+	.size	List_remove_node, .-List_remove_node
+	.align	2
+	.global	List_pop_index_node
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	List_pop_index_node, %function
+List_pop_index_node:
+	.fnstart
+.LFB189:
+	.loc 2 360 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL135:
+	.movsp ip
+	mov	ip, sp
+.LCFI87:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI88:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI89:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 360 0
+	.loc 2 364 0
+	ldr	r3, [r0]
+.LVL136:
+	cmp	r3, #0
+	beq	.L150
+	.loc 2 369 0
+	ldr	r2, .L151
+	.loc 2 368 0
+	movw	lr, #65535
+	.loc 2 369 0
+	mov	r4, #6
+	ldr	r2, [r2, #2252]
+.L146:
+	.loc 2 368 0
+	cmp	r1, #0
+	bne	.L147
+.L149:
+	.loc 2 372 0
+	ldr	r4, .L151+4
+	sub	r3, r3, r2
+.LVL137:
+	asr	r3, r3, #1
+	mul	r4, r4, r3
+	.loc 2 373 0
+	uxth	r1, r4
+.LVL138:
+	bl	List_remove_node
+.LVL139:
+	uxth	r0, r4
+	.loc 2 375 0
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.LVL140:
+.L147:
+	.loc 2 368 0 discriminator 1
+	ldrh	ip, [r3]
+	cmp	ip, lr
+	beq	.L149
+	.loc 2 370 0
+	sub	r1, r1, #1
+.LVL141:
+	.loc 2 369 0
+	mla	r3, r4, ip, r2
+	.loc 2 370 0
+	uxth	r1, r1
+.LVL142:
+	b	.L146
+.L150:
+	.loc 2 365 0
+	movw	r0, #65535
+.LVL143:
+	.loc 2 376 0
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L152:
+	.align	2
+.L151:
+	.word	.LANCHOR0
+	.word	-1431655765
+.LFE189:
+	.fnend
+	.size	List_pop_index_node, .-List_pop_index_node
+	.align	2
+	.global	List_pop_head_node
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	List_pop_head_node, %function
+List_pop_head_node:
+	.fnstart
+.LFB190:
+	.loc 2 379 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL144:
+	.movsp ip
+	mov	ip, sp
+.LCFI90:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI91:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI92:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 379 0
+	.loc 2 380 0
+	mov	r1, #0
+	bl	List_pop_index_node
+.LVL145:
+	.loc 2 381 0
+	ldmfd	sp, {fp, sp, pc}
+.LFE190:
+	.fnend
+	.size	List_pop_head_node, .-List_pop_head_node
+	.align	2
+	.global	List_get_gc_head_node
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	List_get_gc_head_node, %function
+List_get_gc_head_node:
+	.fnstart
+.LFB191:
+	.loc 2 384 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL146:
+	.movsp ip
+	mov	ip, sp
+.LCFI93:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI94:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI95:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 384 0
+	.loc 2 388 0
+	ldr	r2, .L160
+	ldr	r3, [r2, #2256]
+.LVL147:
+	cmp	r3, #0
+	.loc 2 393 0
+	ldrne	r1, [r2, #2252]
+	movne	ip, #6
+	.loc 2 392 0
+	movwne	r2, #65535
+	.loc 2 388 0
+	bne	.L156
+.L159:
+	.loc 2 389 0
+	movw	r0, #65535
+.LVL148:
+	ldmfd	sp, {fp, sp, pc}
+.LVL149:
+.L158:
+	.loc 2 394 0
+	sub	r0, r0, #1
+.LVL150:
+	.loc 2 393 0
+	mla	r3, ip, r3, r1
+.LVL151:
+	.loc 2 394 0
+	uxth	r0, r0
+.LVL152:
+.L156:
+	.loc 2 392 0
+	cmp	r0, #0
+	beq	.L157
+	.loc 2 392 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r3]
+.LVL153:
+	cmp	r3, r2
+	bne	.L158
+	b	.L159
+.LVL154:
+.L157:
+	.loc 2 398 0 is_stmt 1
+	ldr	r0, .L160+4
+.LVL155:
+	sub	r3, r3, r1
+.LVL156:
+	asr	r3, r3, #1
+	mul	r3, r0, r3
+	uxth	r0, r3
+	.loc 2 401 0
+	ldmfd	sp, {fp, sp, pc}
+.L161:
+	.align	2
+.L160:
+	.word	.LANCHOR0
+	.word	-1431655765
+.LFE191:
+	.fnend
+	.size	List_get_gc_head_node, .-List_get_gc_head_node
+	.align	2
+	.global	List_update_data_list
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	List_update_data_list, %function
+List_update_data_list:
+	.fnstart
+.LFB192:
+	.loc 2 404 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL157:
+	.movsp ip
+	mov	ip, sp
+.LCFI96:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI97:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI98:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 404 0
+	.loc 2 413 0
+	movw	r3, #2280
+	.loc 2 404 0
+	mov	r5, r0
+	.loc 2 413 0
+	ldr	r4, .L170
+	ldrh	r3, [r4, r3]
+	cmp	r3, r0
+	beq	.L164
+	.loc 2 413 0 is_stmt 0 discriminator 1
+	movw	r3, #2328
+	ldrh	r3, [r4, r3]
+	cmp	r3, r0
+	beq	.L164
+	.loc 2 413 0 discriminator 2
+	movw	r3, #2376
+	ldrh	r3, [r4, r3]
+	cmp	r3, r0
+	beq	.L164
+.LBB266:
+.LBB267:
+	.loc 2 416 0 is_stmt 1
+	mov	r3, #6
+	ldr	r1, [r4, #2252]
+	mul	r3, r3, r0
+	.loc 2 418 0
+	ldr	r2, [r4, #2256]
+	.loc 2 416 0
+	add	r7, r1, r3
+.LVL158:
+	.loc 2 418 0
+	cmp	r7, r2
+	beq	.L164
+	.loc 2 421 0
+	ldr	r0, [r4, #2260]
+	lsl	r2, r5, #1
+	.loc 2 422 0
+	ldrh	r6, [r0, r2]
+	.loc 2 426 0
+	movw	r0, #65535
+	.loc 2 422 0
+	ldrh	r2, [r7, #4]
+	.loc 2 424 0
+	muls	r6, r2, r6
+.LVL159:
+	.loc 2 426 0
+	ldrh	r2, [r7, #2]
+	.loc 2 424 0
+	mvneq	r6, #0
+	.loc 2 426 0
+	cmp	r2, r0
+	bne	.L167
+	ldrh	r3, [r1, r3]
+	cmp	r3, r2
+	bne	.L167
+	movw	r2, #426
+	ldr	r1, .L170+4
+	ldr	r0, .L170+8
+	bl	printk
+.LVL160:
+.L167:
+	.loc 2 427 0
+	ldrh	r3, [r7, #2]
+	mov	r2, #6
+	mul	r2, r2, r3
+	.loc 2 428 0
+	ldr	r3, .L170+12
+	asr	r1, r2, #1
+	mul	r3, r3, r1
+	.loc 2 429 0
+	ldr	r1, [r4, #2260]
+	lsl	r3, r3, #1
+	.loc 2 430 0
+	ldrh	r3, [r1, r3]
+	ldr	r1, [r4, #2252]
+	add	r2, r1, r2
+	ldrh	r2, [r2, #4]
+	.loc 2 432 0
+	muls	r3, r2, r3
+.LVL161:
+	mvneq	r3, #0
+	.loc 2 434 0
+	cmp	r6, r3
+	bcs	.L164
+	.loc 2 435 0
+	mov	r1, r5
+	ldr	r0, .L170+16
+	bl	List_remove_node
+.LVL162:
+	movw	r3, #2268
+	ldrh	r3, [r4, r3]
+	cmp	r3, #0
+	bne	.L169
+	movw	r2, #435
+	ldr	r1, .L170+4
+	ldr	r0, .L170+8
+	bl	printk
+.LVL163:
+.L169:
+	movw	r2, #2268
+	.loc 2 436 0
+	mov	r0, r5
+	.loc 2 435 0
+	ldrh	r3, [r4, r2]
+	sub	r3, r3, #1
+	strh	r3, [r4, r2]	@ movhi
+	.loc 2 436 0
+	bl	INSERT_DATA_LIST
+.LVL164:
+.L164:
+.LBE267:
+.LBE266:
+	.loc 2 439 0
+	mov	r0, #0
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L171:
+	.align	2
+.L170:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+51
+	.word	.LC1
+	.word	-1431655765
+	.word	.LANCHOR0+2256
+.LFE192:
+	.fnend
+	.size	List_update_data_list, .-List_update_data_list
+	.align	2
+	.global	ftl_map_blk_alloc_new_blk
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	ftl_map_blk_alloc_new_blk, %function
+ftl_map_blk_alloc_new_blk:
+	.fnstart
+.LFB195:
+	.loc 2 516 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL165:
+	.movsp ip
+	mov	ip, sp
+.LCFI99:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI100:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI101:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 516 0
+	.loc 2 520 0
+	mov	r3, #0
+	.loc 2 516 0
+	mov	r4, r0
+	.loc 2 520 0
+	ldrh	r1, [r0, #10]
+	ldr	r2, [r0, #12]
+.LVL166:
+.L173:
+	uxth	r5, r3
+	.loc 2 520 0 is_stmt 0 discriminator 1
+	cmp	r5, r1
+	bcc	.L175
+.L176:
+.LBB270:
+.LBB271:
+	.loc 2 532 0 is_stmt 1
+	mov	r2, #532
+	ldr	r1, .L182
+	ldr	r0, .L182+4
+	bl	printk
+.LVL167:
+	b	.L177
+.L175:
+.LBE271:
+.LBE270:
+	.loc 2 521 0
+	mov	r7, r2
+	add	r3, r3, #1
+	ldrh	r6, [r7]
+	add	r2, r2, #2
+	cmp	r6, #0
+	bne	.L173
+	.loc 2 522 0
+	bl	FtlFreeSysBlkQueueOut
+.LVL168:
+	.loc 2 523 0
+	cmp	r0, #0
+	.loc 2 522 0
+	strh	r0, [r7]	@ movhi
+	.loc 2 523 0
+	beq	.L174
+	.loc 2 526 0
+	ldr	r3, [r4, #28]
+	.loc 2 524 0
+	strh	r6, [r4, #2]	@ movhi
+	.loc 2 525 0
+	strh	r5, [r4]	@ movhi
+	.loc 2 526 0
+	add	r3, r3, #1
+	str	r3, [r4, #28]
+	.loc 2 527 0
+	ldrh	r3, [r4, #8]
+	add	r3, r3, #1
+	strh	r3, [r4, #8]	@ movhi
+.L174:
+	.loc 2 532 0
+	ldrh	r3, [r4, #10]
+	cmp	r3, r5
+	bls	.L176
+.L177:
+	.loc 2 534 0
+	mov	r0, #0
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L183:
+	.align	2
+.L182:
+	.word	.LANCHOR1+73
+	.word	.LC1
+.LFE195:
+	.fnend
+	.size	ftl_map_blk_alloc_new_blk, .-ftl_map_blk_alloc_new_blk
+	.align	2
+	.global	select_l2p_ram_region
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	select_l2p_ram_region, %function
+select_l2p_ram_region:
+	.fnstart
+.LFB200:
+	.loc 2 700 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI102:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI103:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI104:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 700 0
+	.loc 2 705 0
+	mov	r1, #0
+	.loc 2 706 0
+	movw	ip, #65535
+	.loc 2 705 0
+	ldr	r0, .L194
+	ldrh	r2, [r0, #114]
+	mov	lr, r0
+	.loc 2 706 0
+	ldr	r3, [r0, #2424]
+	mov	r0, #12
+.L185:
+	uxth	r4, r1
+	.loc 2 705 0 discriminator 1
+	cmp	r4, r2
+	bcc	.L187
+	mov	r4, r2
+	mov	r1, #0
+	mov	r0, #-2147483648
+	.loc 2 716 0
+	mov	r6, #12
+.L188:
+	uxth	r5, r1
+	.loc 2 715 0 discriminator 1
+	cmp	r5, r2
+	bcc	.L190
+	.loc 2 724 0
+	cmp	r4, r2
+	bcc	.L186
+	.loc 2 730 0
+	movw	r1, #2428
+	mov	r4, r2
+	ldrh	r5, [lr, r1]
+	mvn	r0, #0
+	mov	r1, #0
+.L191:
+	uxth	ip, r1
+	.loc 2 729 0 discriminator 1
+	cmp	ip, r2
+	bcc	.L193
+	.loc 2 735 0
+	cmp	r4, r2
+	bcc	.L186
+	.loc 2 735 0 is_stmt 0 discriminator 1
+	movw	r2, #735
+	ldr	r1, .L194+4
+	ldr	r0, .L194+8
+	bl	printk
+.LVL169:
+	b	.L186
+.L187:
+	add	r1, r1, #1
+	.loc 2 706 0 is_stmt 1
+	mla	r5, r0, r1, r3
+	ldrh	r5, [r5, #-12]
+	cmp	r5, ip
+	bne	.L185
+.L186:
+	.loc 2 737 0
+	mov	r0, r4
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L190:
+	.loc 2 716 0
+	mla	ip, r6, r1, r3
+	add	r1, r1, #1
+	ldr	ip, [ip, #4]
+	.loc 2 717 0
+	cmp	r0, ip
+	movls	r7, #0
+	movhi	r7, #1
+	cmp	ip, #0
+	movlt	r7, #0
+	cmp	r7, #0
+	movne	r0, ip
+	movne	r4, r5
+	b	.L188
+.L193:
+	.loc 2 730 0
+	ldr	lr, [r3, #4]
+	cmp	r0, lr
+	bls	.L192
+	.loc 2 730 0 is_stmt 0 discriminator 1
+	ldrh	r6, [r3]
+	cmp	r6, r5
+	movne	r0, lr
+	movne	r4, ip
+.L192:
+	add	r1, r1, #1
+	add	r3, r3, #12
+	b	.L191
+.L195:
+	.align	2
+.L194:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+99
+	.word	.LC1
+.LFE200:
+	.fnend
+	.size	select_l2p_ram_region, .-select_l2p_ram_region
+	.align	2
+	.global	FtlUpdateVaildLpn
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlUpdateVaildLpn, %function
+FtlUpdateVaildLpn:
+	.fnstart
+.LFB206:
+	.loc 2 882 0 is_stmt 1
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL170:
+	.movsp ip
+	mov	ip, sp
+.LCFI105:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI106:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI107:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 882 0
+	.loc 2 885 0
+	movw	r1, #2430
+	ldr	ip, .L202
+	ldrh	r2, [ip, r1]
+	mov	r3, ip
+	cmp	r2, #4
+	cmpls	r0, #0
+	bne	.L197
+	add	r2, r2, #1
+	strh	r2, [ip, r1]	@ movhi
+	.loc 2 894 0
+	ldmfd	sp, {fp, sp, pc}
+.L197:
+	.loc 2 886 0
+	mov	r2, #0
+.LBB274:
+.LBB275:
+	.loc 2 890 0
+	movw	lr, #65535
+.LBE275:
+.LBE274:
+	.loc 2 886 0
+	strh	r2, [ip, r1]	@ movhi
+	.loc 2 887 0
+	str	r2, [ip, #2432]
+	ldrh	r1, [ip, #16]
+.LBB277:
+.LBB276:
+	.loc 2 890 0
+	ldr	r2, [ip, #2260]
+	add	r1, r2, r1, lsl #1
+.L198:
+	.loc 2 888 0
+	cmp	r2, r1
+	bne	.L200
+	ldmfd	sp, {fp, sp, pc}
+.L200:
+	.loc 2 890 0
+	ldrh	ip, [r2], #2
+	cmp	ip, lr
+	.loc 2 891 0
+	ldrne	r0, [r3, #2432]
+.LVL171:
+	addne	r0, r0, ip
+	strne	r0, [r3, #2432]
+	b	.L198
+.L203:
+	.align	2
+.L202:
+	.word	.LANCHOR0
+.LBE276:
+.LBE277:
+.LFE206:
+	.fnend
+	.size	FtlUpdateVaildLpn, .-FtlUpdateVaildLpn
+	.align	2
+	.global	ftl_set_blk_mode
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	ftl_set_blk_mode, %function
+ftl_set_blk_mode:
+	.fnstart
+.LFB212:
+	.loc 2 1347 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL172:
+	.movsp ip
+	mov	ip, sp
+.LCFI108:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI109:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI110:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 1347 0
+	.loc 2 1348 0
+	cmp	r1, #0
+	.loc 2 1347 0
+	mov	r3, r0
+	.loc 2 1348 0
+	beq	.L205
+	bl	ftl_set_blk_mode.part.6
+.LVL173:
+	ldmfd	sp, {fp, sp, pc}
+.LVL174:
+.L205:
+	.loc 2 1351 0
+	ldr	r2, .L207
+	lsr	r0, r0, #5
+	and	r3, r3, #31
+.LVL175:
+	mov	ip, #1
+	ldr	r1, [r2]
+.LVL176:
+	ldr	r2, [r1, r0, lsl #2]
+	bic	r3, r2, ip, lsl r3
+	str	r3, [r1, r0, lsl #2]
+	ldmfd	sp, {fp, sp, pc}
+.L208:
+	.align	2
+.L207:
+	.word	.LANCHOR0
+.LFE212:
+	.fnend
+	.size	ftl_set_blk_mode, .-ftl_set_blk_mode
+	.align	2
+	.global	ftl_get_blk_mode
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	ftl_get_blk_mode, %function
+ftl_get_blk_mode:
+	.fnstart
+.LFB213:
+	.loc 2 1355 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL177:
+	.movsp ip
+	mov	ip, sp
+.LCFI111:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI112:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI113:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 1355 0
+	.loc 2 1356 0
+	lsr	r2, r0, #5
+	and	r0, r0, #31
+.LVL178:
+	ldr	r3, .L210
+	ldr	r3, [r3]
+	ldr	r3, [r3, r2, lsl #2]
+	lsr	r0, r3, r0
+	.loc 2 1357 0
+	and	r0, r0, #1
+	ldmfd	sp, {fp, sp, pc}
+.L211:
+	.align	2
+.L210:
+	.word	.LANCHOR0
+.LFE213:
+	.fnend
+	.size	ftl_get_blk_mode, .-ftl_get_blk_mode
+	.align	2
+	.global	ftl_sb_update_avl_pages
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	ftl_sb_update_avl_pages, %function
+ftl_sb_update_avl_pages:
+	.fnstart
+.LFB219:
+	.loc 2 1608 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL179:
+	.movsp ip
+	mov	ip, sp
+.LCFI114:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI115:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI116:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 1608 0
+	.loc 2 1610 0
+	mov	r3, #0
+	add	ip, r0, r2, lsl #1
+	strh	r3, [r0, #4]	@ movhi
+	.loc 2 1613 0
+	movw	r5, #65535
+	.loc 2 1611 0
+	ldr	r3, .L219
+	add	ip, ip, #14
+	ldrh	lr, [r3, #8]
+.L213:
+	.loc 2 1611 0 is_stmt 0 discriminator 1
+	cmp	r2, lr
+	bcc	.L215
+	ldrh	r3, [r3, #78]
+	add	ip, r0, #16
+	.loc 2 1620 0 is_stmt 1
+	movw	r4, #65535
+	sub	r3, r3, #1
+	sub	r1, r3, r1
+.LVL180:
+	.loc 2 1622 0
+	mov	r3, #0
+	uxth	r1, r1
+.L216:
+	.loc 2 1618 0 discriminator 1
+	uxth	r2, r3
+.LVL181:
+	cmp	lr, r2
+	bhi	.L218
+	.loc 2 1625 0
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.LVL182:
+.L215:
+	.loc 2 1613 0
+	ldrh	r4, [ip, #2]!
+	.loc 2 1611 0
+	add	r2, r2, #1
+.LVL183:
+	uxth	r2, r2
+.LVL184:
+	.loc 2 1613 0
+	cmp	r4, r5
+	.loc 2 1615 0
+	ldrhne	r4, [r0, #4]
+	addne	r4, r4, #1
+	strhne	r4, [r0, #4]	@ movhi
+	b	.L213
+.LVL185:
+.L218:
+	.loc 2 1620 0
+	ldrh	r2, [ip], #2
+	add	r3, r3, #1
+	cmp	r2, r4
+	.loc 2 1622 0
+	ldrhne	r2, [r0, #4]
+	addne	r2, r1, r2
+	strhne	r2, [r0, #4]	@ movhi
+	b	.L216
+.L220:
+	.align	2
+.L219:
+	.word	.LANCHOR0
+.LFE219:
+	.fnend
+	.size	ftl_sb_update_avl_pages, .-ftl_sb_update_avl_pages
+	.align	2
+	.global	FtlSlcSuperblockCheck
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlSlcSuperblockCheck, %function
+FtlSlcSuperblockCheck:
+	.fnstart
+.LFB222:
+	.loc 2 2013 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL186:
+	.movsp ip
+	mov	ip, sp
+.LCFI117:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI118:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI119:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2013 0
+	.loc 2 2016 0
+	ldrh	r3, [r0, #4]
+	cmp	r3, #0
+	ldmfdeq	sp, {fp, sp, pc}
+	.loc 2 2018 0
+	ldrh	r2, [r0]
+	movw	r3, #65535
+	cmp	r2, r3
+	ldmfdeq	sp, {fp, sp, pc}
+.LBB280:
+.LBB281:
+	.loc 2 2020 0
+	ldrb	r2, [r0, #6]	@ zero_extendqisi2
+	.loc 2 2025 0
+	mov	lr, #0
+	.loc 2 2020 0
+	add	r2, r0, r2, lsl #1
+	ldrh	r1, [r2, #16]
+.LVL187:
+	.loc 2 2023 0
+	ldr	r2, .L227
+	ldrh	ip, [r2, #8]
+	.loc 2 2021 0
+	mov	r2, r3
+.L224:
+	cmp	r1, r2
+	beq	.L226
+	ldmfd	sp, {fp, sp, pc}
+.L226:
+	.loc 2 2022 0
+	ldrb	r3, [r0, #6]	@ zero_extendqisi2
+	add	r3, r3, #1
+	uxtb	r3, r3
+	.loc 2 2023 0
+	cmp	r3, ip
+	.loc 2 2022 0
+	strb	r3, [r0, #6]
+	.loc 2 2024 0
+	ldrheq	r3, [r0, #2]
+	.loc 2 2025 0
+	strbeq	lr, [r0, #6]
+	.loc 2 2024 0
+	addeq	r3, r3, #1
+	strheq	r3, [r0, #2]	@ movhi
+	.loc 2 2027 0
+	ldrb	r3, [r0, #6]	@ zero_extendqisi2
+	add	r3, r0, r3, lsl #1
+	ldrh	r1, [r3, #16]
+	b	.L224
+.L228:
+	.align	2
+.L227:
+	.word	.LANCHOR0
+.LBE281:
+.LBE280:
+.LFE222:
+	.fnend
+	.size	FtlSlcSuperblockCheck, .-FtlSlcSuperblockCheck
+	.align	2
+	.global	make_superblock
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	make_superblock, %function
+make_superblock:
+	.fnstart
+.LFB224:
+	.loc 2 2045 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL188:
+	.movsp ip
+	mov	ip, sp
+.LCFI120:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI121:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI122:
+	.pad #12
+	sub	sp, sp, #12
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2045 0
+	.loc 2 2048 0
+	ldr	r6, .L234
+	.loc 2 2045 0
+	mov	r4, r0
+	.loc 2 2048 0
+	ldrh	r2, [r0]
+	ldrh	r3, [r6, #16]
+	cmp	r2, r3
+	bcc	.L230
+	.loc 2 2048 0 is_stmt 0 discriminator 1
+	mov	r2, #2048
+	ldr	r1, .L234+4
+	ldr	r0, .L234+8
+	bl	printk
+.LVL189:
+.L230:
+	.loc 2 2051 0 is_stmt 1
+	ldrh	r9, [r6, #8]
+	add	r7, r4, #16
+	.loc 2 2052 0
+	ldr	r10, .L234+12
+	.loc 2 2053 0
+	mvn	r8, #0
+	.loc 2 2049 0
+	mov	r5, #0
+	strh	r5, [r4, #4]	@ movhi
+	.loc 2 2050 0
+	strb	r5, [r4, #7]
+.L231:
+	.loc 2 2051 0 discriminator 1
+	uxth	r3, r5
+	cmp	r9, r3
+	bhi	.L233
+	.loc 2 2061 0
+	ldrb	r3, [r4, #7]	@ zero_extendqisi2
+	.loc 2 2064 0
+	mov	r0, #0
+	.loc 2 2061 0
+	ldrh	r2, [r6, #78]
+	smulbb	r3, r3, r2
+	strh	r3, [r4, #4]	@ movhi
+	.loc 2 2062 0
+	mov	r3, #1
+	strb	r3, [r4, #9]
+	.loc 2 2064 0
+	sub	sp, fp, #40
+.LCFI123:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL190:
+.L233:
+.LCFI124:
+	.loc 2 2052 0
+	ldrb	r0, [r10, r5]	@ zero_extendqisi2
+	add	r7, r7, #2
+	ldrh	r1, [r4]
+	add	r5, r5, #1
+	bl	V2P_block
+.LVL191:
+	.loc 2 2053 0
+	strh	r8, [r7, #-2]	@ movhi
+	.loc 2 2052 0
+	str	r0, [fp, #-48]
+	.loc 2 2054 0
+	bl	FtlBbmIsBadBlock
+.LVL192:
+	cmp	r0, #0
+	.loc 2 2055 0
+	ldreq	r3, [fp, #-48]
+	strheq	r3, [r7, #-2]	@ movhi
+	.loc 2 2056 0
+	ldrbeq	r3, [r4, #7]	@ zero_extendqisi2
+	addeq	r3, r3, #1
+	strbeq	r3, [r4, #7]
+	b	.L231
+.L235:
+	.align	2
+.L234:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+121
+	.word	.LC1
+	.word	.LANCHOR0+36
+.LFE224:
+	.fnend
+	.size	make_superblock, .-make_superblock
+	.align	2
+	.global	update_multiplier_value
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	update_multiplier_value, %function
+update_multiplier_value:
+	.fnstart
+.LFB233:
+	.loc 2 2401 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL193:
+	.movsp ip
+	mov	ip, sp
+.LCFI125:
+	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI126:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI127:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2401 0
+	.loc 2 2405 0
+	mov	r5, #0
+	.loc 2 2401 0
+	mov	r7, r0
+	.loc 2 2405 0
+	ldr	r3, .L242
+	.loc 2 2403 0
+	mov	r4, r5
+	.loc 2 2405 0
+	ldrh	r8, [r3, #8]
+	mov	r6, r3
+	.loc 2 2408 0
+	ldrh	r9, [r3, #78]
+	.loc 2 2406 0
+	add	r10, r3, #36
+.L237:
+	.loc 2 2405 0 discriminator 1
+	uxth	r3, r5
+	cmp	r8, r3
+	bhi	.L239
+	.loc 2 2410 0
+	cmp	r4, #0
+	moveq	r0, r4
+	beq	.L240
+	.loc 2 2411 0
+	mov	r1, r4
+	mov	r0, #32768
+	bl	__aeabi_idiv
+.LVL194:
+.L240:
+	.loc 2 2412 0
+	ldr	r1, [r6, #2252]
+	mov	r3, #6
+	mla	r1, r3, r7, r1
+	strh	r0, [r1, #4]	@ movhi
+	.loc 2 2414 0
+	mov	r0, #0
+	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL195:
+.L239:
+	.loc 2 2406 0
+	mov	r1, r7
+	ldrb	r0, [r10, r5]	@ zero_extendqisi2
+	bl	V2P_block
+.LVL196:
+	.loc 2 2407 0
+	bl	FtlBbmIsBadBlock
+.LVL197:
+	cmp	r0, #0
+	add	r5, r5, #1
+	.loc 2 2408 0
+	addeq	r4, r4, r9
+	uxtheq	r4, r4
+	b	.L237
+.L243:
+	.align	2
+.L242:
+	.word	.LANCHOR0
+.LFE233:
+	.fnend
+	.size	update_multiplier_value, .-update_multiplier_value
+	.align	2
+	.global	GetFreeBlockMinEraseCount
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	GetFreeBlockMinEraseCount, %function
+GetFreeBlockMinEraseCount:
+	.fnstart
+.LFB234:
+	.loc 2 2417 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI128:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI129:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI130:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2417 0
+	.loc 2 2420 0
+	ldr	r2, .L247
+	ldr	r0, [r2, #2272]
+	cmp	r0, #0
+	ldmfdeq	sp, {fp, sp, pc}
+	.loc 2 2421 0
+	ldr	r3, [r2, #2252]
+	sub	r0, r0, r3
+	ldr	r3, .L247+4
+	asr	r0, r0, #1
+	mul	r0, r3, r0
+	ldr	r3, [r2, #2248]
+	uxth	r0, r0
+	lsl	r0, r0, #1
+	ldrh	r0, [r3, r0]
+	.loc 2 2423 0
+	ldmfd	sp, {fp, sp, pc}
+.L248:
+	.align	2
+.L247:
+	.word	.LANCHOR0
+	.word	-1431655765
+.LFE234:
+	.fnend
+	.size	GetFreeBlockMinEraseCount, .-GetFreeBlockMinEraseCount
+	.align	2
+	.global	GetFreeBlockMaxEraseCount
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	GetFreeBlockMaxEraseCount, %function
+GetFreeBlockMaxEraseCount:
+	.fnstart
+.LFB235:
+	.loc 2 2426 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL198:
+	.movsp ip
+	mov	ip, sp
+.LCFI131:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI132:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI133:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2426 0
+	.loc 2 2431 0
+	ldr	r1, .L257
+	ldr	r3, [r1, #2272]
+	cmp	r3, #0
+	beq	.L255
+	.loc 2 2432 0
+	movw	r2, #2276
+	.loc 2 2434 0
+	ldr	ip, [r1, #2252]
+	.loc 2 2432 0
+	ldrh	r2, [r1, r2]
+	.loc 2 2436 0
+	mov	r4, #6
+	movw	r5, #65535
+	.loc 2 2434 0
+	sub	r3, r3, ip
+	asr	r3, r3, #1
+	.loc 2 2432 0
+	rsb	r2, r2, r2, lsl #3
+	asr	r2, r2, #3
+	cmp	r0, r2
+	.loc 2 2433 0
+	uxthgt	r0, r2
+	.loc 2 2434 0
+	ldr	r2, .L257+4
+	mul	r3, r2, r3
+	.loc 2 2435 0
+	mov	r2, #0
+	.loc 2 2434 0
+	uxth	r3, r3
+.L252:
+	.loc 2 2435 0 discriminator 1
+	uxth	lr, r2
+	cmp	r0, lr
+	bls	.L254
+	.loc 2 2436 0
+	mul	lr, r4, r3
+	add	r2, r2, #1
+	ldrh	lr, [ip, lr]
+	cmp	lr, r5
+	bne	.L256
+.L254:
+	.loc 2 2440 0
+	ldr	r2, [r1, #2248]
+	lsl	r3, r3, #1
+	ldrh	r0, [r2, r3]
+.LVL199:
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.LVL200:
+.L256:
+	mov	r3, lr
+	b	.L252
+.L255:
+	.loc 2 2427 0
+	mov	r0, r3
+.LVL201:
+	.loc 2 2443 0
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L258:
+	.align	2
+.L257:
+	.word	.LANCHOR0
+	.word	-1431655765
+.LFE235:
+	.fnend
+	.size	GetFreeBlockMaxEraseCount, .-GetFreeBlockMaxEraseCount
+	.align	2
+	.global	FtlPrintInfo2buf
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlPrintInfo2buf, %function
+FtlPrintInfo2buf:
+	.fnstart
+.LFB140:
+	.loc 3 11 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL202:
+	.movsp ip
+	mov	ip, sp
+.LCFI134:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI135:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI136:
+	.pad #20
+	sub	sp, sp, #20
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 11 0
+	.loc 3 17 0
+	ldr	r6, .L271
+	.loc 3 11 0
+	mov	r7, r0
+	.loc 3 15 0
+	ldr	r1, .L271+4
+	add	r5, r7, #12
+	bl	strcpy
+.LVL203:
+	.loc 3 17 0
+	ldr	r2, [r6, #92]
+	mov	r0, r5
+	ldr	r1, .L271+8
+	.loc 3 32 0
+	movw	r9, #2276
+	.loc 3 17 0
+	bl	sprintf
+.LVL204:
+	add	r5, r5, r0
+	.loc 3 18 0
+	ldr	r1, .L271+12
+	mov	r0, r5
+	add	r5, r5, #10
+	bl	strcpy
+.LVL205:
+	.loc 3 19 0
+	ldr	r2, [r6, #2436]
+	mov	r0, r5
+	ldr	r1, .L271+16
+	bl	sprintf
+.LVL206:
+	add	r5, r5, r0
+	.loc 3 20 0
+	ldr	r2, [r6, #2432]
+	ldr	r1, .L271+20
+	mov	r0, r5
+	bl	sprintf
+.LVL207:
+	add	r5, r5, r0
+	.loc 3 21 0
+	ldr	r2, [r6, #2440]
+	ldr	r1, .L271+24
+	mov	r0, r5
+	bl	sprintf
+.LVL208:
+	add	r5, r5, r0
+	.loc 3 22 0
+	ldr	r2, [r6, #2444]
+	ldr	r1, .L271+28
+	mov	r0, r5
+	bl	sprintf
+.LVL209:
+	add	r5, r5, r0
+	.loc 3 23 0
+	ldr	r2, [r6, #2448]
+	ldr	r1, .L271+32
+	mov	r0, r5
+	bl	sprintf
+.LVL210:
+	add	r5, r5, r0
+	.loc 3 24 0
+	ldr	r2, [r6, #2452]
+	ldr	r1, .L271+36
+	mov	r0, r5
+	bl	sprintf
+.LVL211:
+	add	r5, r5, r0
+	.loc 3 25 0
+	ldr	r2, [r6, #2456]
+	ldr	r1, .L271+40
+	mov	r0, r5
+	bl	sprintf
+.LVL212:
+	add	r5, r5, r0
+	.loc 3 26 0
+	ldr	r2, [r6, #2460]
+	ldr	r1, .L271+44
+	mov	r0, r5
+	bl	sprintf
+.LVL213:
+	.loc 3 27 0
+	ldr	r2, [r6, #2464]
+	.loc 3 26 0
+	add	r5, r5, r0
+	.loc 3 27 0
+	ldr	r1, .L271+48
+	mov	r0, r5
+	.loc 3 39 0
+	ldr	r4, .L271+52
+	.loc 3 50 0
+	ldr	r8, .L271+56
+	.loc 3 27 0
+	lsr	r2, r2, #11
+	bl	sprintf
+.LVL214:
+	.loc 3 28 0
+	ldr	r2, [r6, #2468]
+	.loc 3 27 0
+	add	r5, r5, r0
+	.loc 3 28 0
+	ldr	r1, .L271+60
+	mov	r0, r5
+	lsr	r2, r2, #11
+	bl	sprintf
+.LVL215:
+	add	r5, r5, r0
+	.loc 3 29 0
+	ldr	r2, [r6, #2472]
+	ldr	r1, .L271+64
+	mov	r0, r5
+	bl	sprintf
+.LVL216:
+	add	r5, r5, r0
+	.loc 3 30 0
+	ldr	r2, [r6, #2476]
+	ldr	r1, .L271+68
+	mov	r0, r5
+	bl	sprintf
+.LVL217:
+	add	r5, r5, r0
+	.loc 3 31 0
+	ldrh	r2, [r6, #134]
+	ldr	r1, .L271+72
+	mov	r0, r5
+	bl	sprintf
+.LVL218:
+	add	r5, r5, r0
+	.loc 3 32 0
+	ldrh	r2, [r6, r9]
+	ldr	r1, .L271+76
+	mov	r0, r5
+	bl	sprintf
+.LVL219:
+	add	r5, r5, r0
+	.loc 3 33 0
+	ldr	r2, [r6, #2480]
+	ldr	r1, .L271+80
+	mov	r0, r5
+	bl	sprintf
+.LVL220:
+	add	r5, r5, r0
+	.loc 3 34 0
+	ldr	r2, [r6, #2484]
+	ldr	r1, .L271+84
+	mov	r0, r5
+	bl	sprintf
+.LVL221:
+	add	r5, r5, r0
+	.loc 3 35 0
+	ldr	r2, [r6, #2488]
+	ldr	r1, .L271+88
+	mov	r0, r5
+	bl	sprintf
+.LVL222:
+	add	r5, r5, r0
+	.loc 3 36 0
+	ldr	r2, [r6, #2492]
+	ldr	r1, .L271+92
+	mov	r0, r5
+	bl	sprintf
+.LVL223:
+	add	r5, r5, r0
+	.loc 3 37 0
+	ldr	r2, [r6, #2496]
+	ldr	r1, .L271+96
+	mov	r0, r5
+	bl	sprintf
+.LVL224:
+	add	r5, r5, r0
+	.loc 3 38 0
+	ldr	r2, [r6, #2500]
+	ldr	r1, .L271+100
+	mov	r0, r5
+	bl	sprintf
+.LVL225:
+	add	r5, r5, r0
+	.loc 3 39 0
+	ldrh	r2, [r4, #30]
+	ldr	r1, .L271+104
+	mov	r0, r5
+	bl	sprintf
+.LVL226:
+	add	r5, r5, r0
+	.loc 3 40 0
+	ldrh	r2, [r4, #28]
+	ldr	r1, .L271+108
+	mov	r0, r5
+	bl	sprintf
+.LVL227:
+	add	r5, r5, r0
+	.loc 3 41 0
+	ldr	r2, [r6, #116]
+	ldr	r1, .L271+112
+	mov	r0, r5
+	bl	sprintf
+.LVL228:
+	add	r5, r5, r0
+	.loc 3 42 0
+	ldr	r2, [r6, #108]
+	ldr	r1, .L271+116
+	mov	r0, r5
+	bl	sprintf
+.LVL229:
+	add	r5, r5, r0
+	.loc 3 43 0
+	ldr	r2, [r6, #4]
+	ldr	r1, .L271+120
+	mov	r0, r5
+	bl	sprintf
+.LVL230:
+	add	r5, r5, r0
+	.loc 3 44 0
+	ldrh	r2, [r6, #194]
+	ldr	r1, .L271+124
+	mov	r0, r5
+	bl	sprintf
+.LVL231:
+	add	r5, r5, r0
+	.loc 3 45 0
+	ldrh	r2, [r6, #16]
+	ldr	r1, .L271+128
+	mov	r0, r5
+	bl	sprintf
+.LVL232:
+	.loc 3 46 0
+	movw	r3, #2552
+	.loc 3 45 0
+	add	r5, r5, r0
+	.loc 3 46 0
+	ldrh	r2, [r6, r3]
+	mov	r0, r5
+	ldr	r1, .L271+132
+	.loc 3 50 0
+	movw	r4, #2280
+	.loc 3 46 0
+	bl	sprintf
+.LVL233:
+	add	r5, r5, r0
+	.loc 3 47 0
+	ldr	r2, [r6, #20]
+	ldr	r1, .L271+136
+	mov	r0, r5
+	bl	sprintf
+.LVL234:
+	.loc 3 48 0
+	movw	r3, #2556
+	.loc 3 47 0
+	add	r5, r5, r0
+	.loc 3 48 0
+	ldrh	r2, [r6, r3]
+	mov	r0, r5
+	ldr	r1, .L271+140
+	bl	sprintf
+.LVL235:
+	add	r5, r5, r0
+	.loc 3 49 0
+	ldrh	r2, [r6, #128]
+	ldr	r1, .L271+144
+	mov	r0, r5
+	bl	sprintf
+.LVL236:
+	add	r5, r5, r0
+	.loc 3 50 0
+	ldrh	r2, [r8, #2]
+	ldr	r1, .L271+148
+	mov	r0, r5
+	bl	sprintf
+.LVL237:
+	add	r5, r5, r0
+	.loc 3 51 0
+	ldrb	r2, [r6, #2286]	@ zero_extendqisi2
+	ldr	r1, .L271+152
+	mov	r0, r5
+	bl	sprintf
+.LVL238:
+	add	r5, r5, r0
+	.loc 3 52 0
+	ldrh	r2, [r6, r4]
+	ldr	r1, .L271+156
+	mov	r0, r5
+	bl	sprintf
+.LVL239:
+	add	r5, r5, r0
+	.loc 3 53 0
+	ldrb	r2, [r6, #2288]	@ zero_extendqisi2
+	ldr	r1, .L271+160
+	mov	r0, r5
+	bl	sprintf
+.LVL240:
+	add	r5, r5, r0
+	.loc 3 54 0
+	ldrh	r2, [r8, #4]
+	ldr	r1, .L271+164
+	mov	r0, r5
+	bl	sprintf
+.LVL241:
+	.loc 3 55 0
+	ldrh	r3, [r6, r4]
+	.loc 3 54 0
+	add	r5, r5, r0
+	.loc 3 55 0
+	ldr	r2, [r6, #2260]
+	mov	r0, r5
+	ldr	r1, .L271+168
+	.loc 3 56 0
+	movw	r4, #2328
+	.loc 3 55 0
+	lsl	r3, r3, #1
+	ldrh	r2, [r2, r3]
+	bl	sprintf
+.LVL242:
+	add	r5, r5, r0
+	.loc 3 56 0
+	ldrh	r2, [r8, #50]
+	ldr	r1, .L271+172
+	mov	r0, r5
+	bl	sprintf
+.LVL243:
+	add	r5, r5, r0
+	.loc 3 57 0
+	ldrb	r2, [r6, #2334]	@ zero_extendqisi2
+	ldr	r1, .L271+176
+	mov	r0, r5
+	bl	sprintf
+.LVL244:
+	add	r5, r5, r0
+	.loc 3 58 0
+	ldrh	r2, [r6, r4]
+	ldr	r1, .L271+180
+	mov	r0, r5
+	bl	sprintf
+.LVL245:
+	add	r5, r5, r0
+	.loc 3 59 0
+	ldrb	r2, [r6, #2336]	@ zero_extendqisi2
+	ldr	r1, .L271+184
+	mov	r0, r5
+	bl	sprintf
+.LVL246:
+	add	r5, r5, r0
+	.loc 3 60 0
+	ldrh	r2, [r8, #52]
+	ldr	r1, .L271+188
+	mov	r0, r5
+	bl	sprintf
+.LVL247:
+	.loc 3 61 0
+	ldrh	r3, [r6, r4]
+	.loc 3 60 0
+	add	r5, r5, r0
+	.loc 3 61 0
+	ldr	r2, [r6, #2260]
+	mov	r0, r5
+	ldr	r1, .L271+192
+	.loc 3 62 0
+	add	r4, r8, #96
+	.loc 3 61 0
+	lsl	r3, r3, #1
+	ldrh	r2, [r2, r3]
+	bl	sprintf
+.LVL248:
+	add	r5, r5, r0
+	.loc 3 62 0
+	ldrh	r2, [r8, #98]
+	ldr	r1, .L271+196
+	mov	r0, r5
+	bl	sprintf
+.LVL249:
+	add	r5, r5, r0
+	.loc 3 63 0
+	ldrb	r2, [r6, #2382]	@ zero_extendqisi2
+	ldr	r1, .L271+200
+	mov	r0, r5
+	bl	sprintf
+.LVL250:
+	.loc 3 64 0
+	movw	r3, #2376
+	.loc 3 63 0
+	add	r5, r5, r0
+	.loc 3 64 0
+	ldrh	r2, [r6, r3]
+	mov	r0, r5
+	ldr	r1, .L271+204
+	bl	sprintf
+.LVL251:
+	add	r5, r5, r0
+	.loc 3 65 0
+	ldrb	r2, [r6, #2384]	@ zero_extendqisi2
+	ldr	r1, .L271+208
+	mov	r0, r5
+	bl	sprintf
+.LVL252:
+	add	r5, r5, r0
+	.loc 3 66 0
+	ldrh	r2, [r8, #100]
+	ldr	r1, .L271+212
+	mov	r0, r5
+	bl	sprintf
+.LVL253:
+	add	r5, r5, r0
+	.loc 3 67 0
+	ldrh	r2, [r4, #194]
+	ldr	r1, .L271+216
+	mov	r0, r5
+	bl	sprintf
+.LVL254:
+	add	r5, r5, r0
+	.loc 3 68 0
+	ldrb	r2, [r6, #2574]	@ zero_extendqisi2
+	ldr	r1, .L271+220
+	mov	r0, r5
+	bl	sprintf
+.LVL255:
+	.loc 3 67 0
+	movw	r8, #2568
+	.loc 3 68 0
+	add	r5, r5, r0
+	.loc 3 69 0
+	ldrh	r2, [r6, r8]
+	mov	r0, r5
+	ldr	r1, .L271+224
+	bl	sprintf
+.LVL256:
+	add	r5, r5, r0
+	.loc 3 70 0
+	ldrb	r2, [r6, #2576]	@ zero_extendqisi2
+	ldr	r1, .L271+228
+	mov	r0, r5
+	bl	sprintf
+.LVL257:
+	add	r5, r5, r0
+	.loc 3 71 0
+	ldrh	r2, [r4, #196]
+	ldr	r1, .L271+232
+	mov	r0, r5
+	bl	sprintf
+.LVL258:
+	.loc 3 72 0
+	ldr	r3, [r6, #2692]
+	.loc 3 71 0
+	add	r5, r5, r0
+	.loc 3 72 0
+	ldr	r2, [r6, #2696]
+	mov	r0, r5
+	ldr	r1, .L271+236
+	str	r3, [sp]
+	ldr	r3, [r6, #2700]
+	bl	sprintf
+.LVL259:
+	add	r4, r5, r0
+	.loc 3 73 0
+	ldr	r2, [r6, #2688]
+	ldr	r1, .L271+240
+	mov	r0, r4
+	bl	sprintf
+.LVL260:
+	add	r4, r4, r0
+	.loc 3 74 0
+	ldr	r2, [r6, #2712]
+	ldr	r1, .L271+244
+	mov	r0, r4
+	bl	sprintf
+.LVL261:
+	.loc 3 75 0
+	movw	r3, #3128
+	.loc 3 74 0
+	add	r4, r4, r0
+	.loc 3 75 0
+	ldrh	r2, [r6, r3]
+	mov	r0, r4
+	ldr	r1, .L271+248
+	bl	sprintf
+.LVL262:
+	.loc 3 76 0
+	movw	r3, #3130
+	.loc 3 75 0
+	add	r4, r4, r0
+	.loc 3 76 0
+	ldrh	r2, [r6, r3]
+	mov	r0, r4
+	ldr	r1, .L271+252
+	bl	sprintf
+.LVL263:
+	add	r4, r4, r0
+	.loc 3 77 0
+	ldr	r2, [r6, #3132]
+	ldr	r1, .L271+256
+	mov	r0, r4
+	bl	sprintf
+.LVL264:
+	.loc 3 78 0
+	add	r3, r6, #3136
+	.loc 3 77 0
+	add	r4, r4, r0
+	.loc 3 78 0
+	ldrh	r2, [r3]
+	mov	r0, r4
+	ldr	r1, .L271+260
+	bl	sprintf
+.LVL265:
+	add	r4, r4, r0
+	.loc 3 79 0
+	bl	GetFreeBlockMinEraseCount
+.LVL266:
+	ldr	r1, .L271+264
+	mov	r2, r0
+	mov	r0, r4
+	bl	sprintf
+.LVL267:
+	add	r4, r4, r0
+	.loc 3 80 0
+	ldrh	r0, [r6, r9]
+	bl	GetFreeBlockMaxEraseCount
+.LVL268:
+	ldr	r1, .L271+268
+	mov	r2, r0
+	mov	r0, r4
+	bl	sprintf
+.LVL269:
+	.loc 3 81 0
+	ldr	r3, .L271+272
+	.loc 3 80 0
+	add	r4, r4, r0
+	.loc 3 81 0
+	ldr	r3, [r3]
+	cmp	r3, #1
+	beq	.L260
+.LVL270:
+.L265:
+	.loc 3 104 0
+	sub	r0, r4, r7
+	.loc 3 105 0
+	sub	sp, fp, #40
+.LCFI137:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL271:
+.L260:
+.LCFI138:
+	.loc 3 84 0
+	ldrh	r3, [r6, r8]
+	movw	r2, #65535
+	cmp	r3, r2
+	beq	.L262
+	.loc 3 85 0
+	ldr	r2, [r6, #2260]
+	lsl	r3, r3, #1
+	mov	r0, r4
+	ldr	r1, .L271+276
+	ldrh	r2, [r2, r3]
+	bl	sprintf
+.LVL272:
+	add	r4, r4, r0
+.L262:
+.LBB282:
+	.loc 3 87 0
+	mov	r0, #0
+	.loc 3 91 0
+	ldr	r9, .L271+280
+	.loc 3 87 0
+	bl	List_get_gc_head_node
+.LVL273:
+	uxth	r3, r0
+.LVL274:
+	.loc 3 88 0
+	mov	r5, #0
+	.loc 3 89 0
+	movw	r10, #65535
+.L264:
+	cmp	r3, r10
+	beq	.L263
+	.loc 3 91 0 discriminator 2
+	ldr	r2, [r6, #2248]
+	lsl	r1, r3, #1
+	mov	r8, #6
+	mul	r8, r8, r3
+	mov	r0, r4
+	ldrh	r2, [r2, r1]
+	str	r2, [sp, #8]
+	ldr	r2, [r6, #2252]
+	add	r2, r2, r8
+	ldrh	r2, [r2, #4]
+	str	r2, [sp, #4]
+	ldr	r2, [r6, #2260]
+	ldrh	r2, [r2, r1]
+	mov	r1, r9
+	str	r2, [sp]
+	mov	r2, r5
+	bl	sprintf
+.LVL275:
+	.loc 3 88 0 discriminator 2
+	add	r5, r5, #1
+	.loc 3 92 0 discriminator 2
+	ldr	r3, [r6, #2252]
+	.loc 3 88 0 discriminator 2
+	cmp	r5, #16
+	.loc 3 91 0 discriminator 2
+	add	r4, r4, r0
+	.loc 3 92 0 discriminator 2
+	ldrh	r3, [r3, r8]
+.LVL276:
+	.loc 3 88 0 discriminator 2
+	bne	.L264
+.L263:
+.LBE282:
+.LBB283:
+	.loc 3 96 0
+	ldr	r2, [r6, #2252]
+	.loc 3 97 0
+	mov	r8, #0
+	.loc 3 96 0
+	ldr	r3, [r6, #2272]
+.LVL277:
+	.loc 3 98 0
+	movw	r9, #65535
+	.loc 3 100 0
+	ldr	r10, .L271+284
+	.loc 3 96 0
+	sub	r3, r3, r2
+	ldr	r2, .L271+288
+	asr	r3, r3, #1
+	mul	r3, r2, r3
+	uxth	r3, r3
+.LVL278:
+.L266:
+	.loc 3 98 0
+	cmp	r3, r9
+	beq	.L265
+	.loc 3 100 0 discriminator 2
+	ldr	r1, [r6, #2248]
+	lsl	r2, r3, #1
+	mov	r5, #6
+	mul	r5, r5, r3
+	mov	r0, r4
+	ldrh	r2, [r1, r2]
+	mov	r1, r10
+	str	r2, [sp, #4]
+	ldr	r2, [r6, #2252]
+	add	r2, r2, r5
+	ldrh	r2, [r2, #4]
+	str	r2, [sp]
+	mov	r2, r8
+	.loc 3 97 0 discriminator 2
+	add	r8, r8, #1
+	.loc 3 100 0 discriminator 2
+	bl	sprintf
+.LVL279:
+	.loc 3 97 0 discriminator 2
+	cmp	r8, #4
+	.loc 3 100 0 discriminator 2
+	add	r4, r4, r0
+	.loc 3 97 0 discriminator 2
+	beq	.L265
+	.loc 3 101 0
+	ldr	r3, [r6, #2252]
+	ldrh	r3, [r3, r5]
+.LVL280:
+	b	.L266
+.L272:
+	.align	2
+.L271:
+	.word	.LANCHOR0
+	.word	.LC2
+	.word	.LC3
+	.word	.LC4
+	.word	.LC5
+	.word	.LC6
+	.word	.LC7
+	.word	.LC8
+	.word	.LC9
+	.word	.LC10
+	.word	.LC11
+	.word	.LC12
+	.word	.LC13
+	.word	.LANCHOR0+2504
+	.word	.LANCHOR0+2280
+	.word	.LC14
+	.word	.LC15
+	.word	.LC16
+	.word	.LC17
+	.word	.LC18
+	.word	.LC19
+	.word	.LC20
+	.word	.LC21
+	.word	.LC22
+	.word	.LC23
+	.word	.LC24
+	.word	.LC25
+	.word	.LC26
+	.word	.LC27
+	.word	.LC28
+	.word	.LC29
+	.word	.LC30
+	.word	.LC31
+	.word	.LC32
+	.word	.LC33
+	.word	.LC34
+	.word	.LC35
+	.word	.LC36
+	.word	.LC37
+	.word	.LC38
+	.word	.LC39
+	.word	.LC40
+	.word	.LC41
+	.word	.LC42
+	.word	.LC43
+	.word	.LC44
+	.word	.LC45
+	.word	.LC46
+	.word	.LC47
+	.word	.LC48
+	.word	.LC49
+	.word	.LC50
+	.word	.LC51
+	.word	.LC52
+	.word	.LC53
+	.word	.LC54
+	.word	.LC55
+	.word	.LC56
+	.word	.LC57
+	.word	.LC58
+	.word	.LC59
+	.word	.LC60
+	.word	.LC61
+	.word	.LC62
+	.word	.LC63
+	.word	.LC64
+	.word	.LC65
+	.word	.LC66
+	.word	.LANCHOR2
+	.word	.LC67
+	.word	.LC68
+	.word	.LC69
+	.word	-1431655765
+.LBE283:
+.LFE140:
+	.fnend
+	.size	FtlPrintInfo2buf, .-FtlPrintInfo2buf
+	.align	2
+	.global	rknand_proc_ftlread
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	rknand_proc_ftlread, %function
+rknand_proc_ftlread:
+	.fnstart
+.LFB141:
+	.loc 3 114 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL281:
+	.movsp ip
+	mov	ip, sp
+.LCFI139:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI140:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI141:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 114 0
+	mov	r5, r0
+	.loc 3 120 0
+	ldr	r2, .L274
+	ldr	r1, .L274+4
+	bl	sprintf
+.LVL282:
+	add	r4, r5, r0
+	.loc 3 122 0
+	mov	r0, r4
+	bl	FtlPrintInfo2buf
+.LVL283:
+	add	r0, r4, r0
+	.loc 3 124 0
+	sub	r0, r0, r5
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L275:
+	.align	2
+.L274:
+	.word	.LC70
+	.word	.LC71
+.LFE141:
+	.fnend
+	.size	rknand_proc_ftlread, .-rknand_proc_ftlread
+	.align	2
+	.global	GetSwlReplaceBlock
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	GetSwlReplaceBlock, %function
+GetSwlReplaceBlock:
+	.fnstart
+.LFB236:
+	.loc 2 2447 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI142:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI143:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI144:
+	.pad #28
+	sub	sp, sp, #28
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2447 0
+	.loc 2 2456 0
+	ldr	r4, .L300
+	ldr	r2, [r4, #2488]
+	ldr	r3, [r4, #2500]
+	cmp	r2, r3
+	bcs	.L277
+	ldr	r2, [r4, #2248]
+	.loc 2 2458 0
+	mov	r3, #0
+	.loc 2 2459 0
+	ldrh	r1, [r4, #16]
+	.loc 2 2458 0
+	str	r3, [r4, #2480]
+	sub	r2, r2, #2
+.L278:
+	.loc 2 2459 0 discriminator 1
+	cmp	r3, r1
+	bcc	.L279
+	.loc 2 2461 0
+	ldr	r5, [r4, #2480]
+	mov	r0, r5
+	bl	__aeabi_uidiv
+.LVL284:
+	str	r0, [r4, #2488]
+	.loc 2 2462 0
+	ldr	r0, [r4, #2484]
+	ldrh	r1, [r4, #68]
+	sub	r0, r5, r0
+	bl	__aeabi_uidiv
+.LVL285:
+	str	r0, [r4, #2480]
+.L280:
+	.loc 2 2468 0
+	ldr	r6, [r4, #2500]
+	ldr	r8, [r4, #2488]
+	add	r3, r6, #256
+	cmp	r3, r8
+	bls	.L285
+	.loc 2 2468 0 is_stmt 0 discriminator 1
+	ldr	r2, [r4, #2496]
+	add	r3, r6, #768
+	cmp	r3, r2
+	bls	.L285
+.LVL286:
+.L287:
+	.loc 2 2469 0 is_stmt 1
+	movw	r5, #65535
+.L286:
+	.loc 2 2518 0
+	mov	r0, r5
+	sub	sp, fp, #40
+.LCFI145:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL287:
+.L279:
+.LCFI146:
+	.loc 2 2460 0 discriminator 3
+	ldrh	r0, [r2, #2]!
+	.loc 2 2459 0 discriminator 3
+	add	r3, r3, #1
+	.loc 2 2460 0 discriminator 3
+	ldr	ip, [r4, #2480]
+	add	r0, r0, ip
+	str	r0, [r4, #2480]
+	b	.L278
+.L277:
+	.loc 2 2463 0
+	ldr	r3, [r4, #2496]
+	cmp	r2, r3
+	.loc 2 2464 0
+	addhi	r3, r3, #1
+	strhi	r3, [r4, #2496]
+	.loc 2 2465 0
+	movhi	r3, #0
+	.loc 2 2463 0
+	bls	.L280
+.L282:
+	.loc 2 2465 0 discriminator 1
+	ldrh	r2, [r4, #16]
+	cmp	r3, r2
+	bcs	.L280
+	.loc 2 2466 0 discriminator 3
+	ldr	r0, [r4, #2248]
+	lsl	r1, r3, #1
+	.loc 2 2465 0 discriminator 3
+	add	r3, r3, #1
+	.loc 2 2466 0 discriminator 3
+	ldrh	r2, [r0, r1]
+	add	r2, r2, #1
+	strh	r2, [r0, r1]	@ movhi
+	b	.L282
+.L285:
+	.loc 2 2471 0
+	movw	r3, #2276
+	ldrh	r0, [r4, r3]
+	add	r0, r0, r0, lsl #1
+	ubfx	r0, r0, #2, #16
+	bl	GetFreeBlockMaxEraseCount
+.LVL288:
+	.loc 2 2472 0
+	add	r3, r6, #64
+	.loc 2 2471 0
+	mov	r10, r0
+.LVL289:
+	.loc 2 2472 0
+	cmp	r0, r3
+	movcs	r3, #0
+	movcc	r3, #1
+	cmp	r6, #30
+	movls	r3, #0
+	cmp	r3, #0
+	bne	.L287
+	.loc 2 2476 0
+	ldr	r3, [r4, #2256]
+.LVL290:
+	cmp	r3, #0
+	beq	.L287
+	.loc 2 2483 0
+	ldr	r0, [r4, #2252]
+	.loc 2 2484 0
+	movw	r7, #65535
+.LVL291:
+	ldr	r9, [r4, #2248]
+	mov	r2, r7
+	.loc 2 2483 0
+	ldr	ip, .L300+4
+	.loc 2 2495 0
+	mov	lr, #6
+.L288:
+	.loc 2 2479 0
+	ldrh	r1, [r3]
+	movw	r5, #65535
+	cmp	r1, r5
+	bne	.L291
+	mov	r5, r2
+.L290:
+	.loc 2 2498 0
+	movw	r3, #65535
+.LVL292:
+	cmp	r5, r3
+	beq	.L287
+	.loc 2 2500 0
+	lsl	r2, r5, #1
+	ldrh	r3, [r9, r2]
+.LVL293:
+	.loc 2 2501 0
+	cmp	r6, r3
+	bcs	.L292
+	str	r3, [fp, #-52]
+	str	r2, [fp, #-48]
+	.loc 2 2503 0
+	bl	GetFreeBlockMinEraseCount
+.LVL294:
+	ldr	r2, [fp, #-48]
+	cmp	r6, r0
+	ldr	r3, [fp, #-52]
+.LVL295:
+	.loc 2 2504 0
+	strcc	r7, [r4, #2500]
+.L292:
+	.loc 2 2506 0
+	cmp	r8, r3
+	bls	.L287
+	.loc 2 2506 0 is_stmt 0 discriminator 1
+	add	r1, r3, #128
+	cmp	r10, r1
+	ble	.L287
+	.loc 2 2508 0 is_stmt 1
+	add	r1, r3, #256
+	cmp	r8, r1
+	bhi	.L293
+	.loc 2 2508 0 is_stmt 0 discriminator 1
+	ldr	r1, [r4, #2496]
+	add	r3, r3, #768
+.LVL296:
+	cmp	r3, r1
+	bcs	.L287
+.LVL297:
+.L293:
+	.loc 2 2510 0 is_stmt 1
+	str	r10, [sp, #8]
+	mov	r1, r5
+	ldrh	r3, [r9, r2]
+.LVL298:
+	ldr	r0, .L300+8
+	str	r3, [sp, #4]
+	ldr	r3, [r4, #2260]
+	ldrh	r3, [r3, r2]
+	mov	r2, r8
+	str	r3, [sp]
+	ldr	r3, [r4, #2496]
+	bl	printk
+.LVL299:
+	.loc 2 2511 0
+	mov	r3, #1
+	str	r3, [r4, #3140]
+	.loc 2 2512 0
+	b	.L286
+.LVL300:
+.L291:
+	.loc 2 2481 0
+	ldrh	r5, [r3, #4]
+	cmp	r5, #0
+	beq	.L289
+	.loc 2 2483 0
+	sub	r3, r3, r0
+.LVL301:
+	asr	r3, r3, #1
+	mul	r3, ip, r3
+	uxth	r5, r3
+	.loc 2 2484 0
+	lsl	r3, r5, #1
+	ldrh	r3, [r9, r3]
+	cmp	r6, r3
+	bcs	.L290
+	.loc 2 2483 0
+	cmp	r7, r3
+	movhi	r7, r3
+	movhi	r2, r5
+.LVL302:
+.L289:
+	.loc 2 2495 0
+	mla	r3, lr, r1, r0
+	b	.L288
+.L301:
+	.align	2
+.L300:
+	.word	.LANCHOR0
+	.word	-1431655765
+	.word	.LC72
+.LFE236:
+	.fnend
+	.size	GetSwlReplaceBlock, .-GetSwlReplaceBlock
+	.align	2
+	.global	free_data_superblock
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	free_data_superblock, %function
+free_data_superblock:
+	.fnstart
+.LFB237:
+	.loc 2 2522 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL303:
+	.movsp ip
+	mov	ip, sp
+.LCFI147:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI148:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI149:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2522 0
+	.loc 2 2523 0
+	movw	r2, #65535
+	cmp	r0, r2
+	beq	.L303
+.LBB286:
+.LBB287:
+	.loc 2 2525 0
+	ldr	r2, .L304
+	lsl	r3, r0, #1
+	mov	r1, #0
+	ldr	r2, [r2, #2260]
+	strh	r1, [r2, r3]	@ movhi
+	.loc 2 2526 0
+	bl	INSERT_FREE_LIST
+.LVL304:
+.L303:
+.LBE287:
+.LBE286:
+	.loc 2 2528 0
+	mov	r0, #0
+.LVL305:
+	ldmfd	sp, {fp, sp, pc}
+.L305:
+	.align	2
+.L304:
+	.word	.LANCHOR0
+.LFE237:
+	.fnend
+	.size	free_data_superblock, .-free_data_superblock
+	.align	2
+	.global	get_new_active_ppa
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	get_new_active_ppa, %function
+get_new_active_ppa:
+	.fnstart
+.LFB240:
+	.loc 2 2655 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL306:
+	.movsp ip
+	mov	ip, sp
+.LCFI150:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI151:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI152:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2655 0
+	.loc 2 2659 0
+	movw	r3, #65535
+	.loc 2 2655 0
+	mov	r4, r0
+	.loc 2 2659 0
+	ldrh	r2, [r0]
+	cmp	r2, r3
+	bne	.L307
+	.loc 2 2659 0 is_stmt 0 discriminator 1
+	movw	r2, #2659
+	ldr	r1, .L320
+	ldr	r0, .L320+4
+	bl	printk
+.LVL307:
+.L307:
+	.loc 2 2660 0 is_stmt 1
+	ldr	r5, .L320+8
+	ldrh	r2, [r4, #2]
+	ldrh	r3, [r5, #78]
+	cmp	r2, r3
+	bne	.L308
+	.loc 2 2660 0 is_stmt 0 discriminator 1
+	movw	r2, #2660
+	ldr	r1, .L320
+	ldr	r0, .L320+4
+	bl	printk
+.LVL308:
+.L308:
+	.loc 2 2661 0 is_stmt 1
+	ldrh	r3, [r4, #4]
+	cmp	r3, #0
+	bne	.L309
+	.loc 2 2661 0 is_stmt 0 discriminator 1
+	movw	r2, #2661
+	ldr	r1, .L320
+	ldr	r0, .L320+4
+	bl	printk
+.LVL309:
+.L309:
+	.loc 2 2663 0 is_stmt 1
+	ldrb	r2, [r4, #6]	@ zero_extendqisi2
+	.loc 2 2662 0
+	mov	r3, #0
+	.loc 2 2666 0
+	ldrh	r1, [r5, #8]
+	.loc 2 2664 0
+	movw	ip, #65535
+	.loc 2 2662 0
+	strb	r3, [r4, #10]
+	.loc 2 2663 0
+	add	r2, r4, r2, lsl #1
+	ldrh	r0, [r2, #16]
+.LVL310:
+	.loc 2 2668 0
+	mov	r2, r3
+.L310:
+	.loc 2 2664 0
+	cmp	r0, ip
+	ldrb	r3, [r4, #6]	@ zero_extendqisi2
+	beq	.L312
+	.loc 2 2673 0
+	ldrh	r2, [r4, #4]
+	.loc 2 2672 0
+	ldrh	r6, [r4, #2]
+	.loc 2 2673 0
+	sub	r2, r2, #1
+	uxth	r2, r2
+	.loc 2 2672 0
+	orr	r6, r6, r0, lsl #10
+	.loc 2 2680 0
+	movw	r0, #65535
+.LVL311:
+	.loc 2 2673 0
+	strh	r2, [r4, #4]	@ movhi
+.L314:
+	.loc 2 2675 0
+	add	r3, r3, #1
+	uxtb	r3, r3
+	.loc 2 2676 0
+	cmp	r1, r3
+	.loc 2 2677 0
+	ldrheq	r3, [r4, #2]
+	addeq	r3, r3, #1
+	strheq	r3, [r4, #2]	@ movhi
+	.loc 2 2678 0
+	moveq	r3, #0
+	.loc 2 2680 0
+	add	ip, r4, r3, lsl #1
+	ldrh	ip, [ip, #16]
+	cmp	ip, r0
+	beq	.L314
+	strb	r3, [r4, #6]
+	.loc 2 2682 0
+	cmp	r2, #0
+	ldrh	r3, [r4, #2]
+	ldrh	r1, [r5, #78]
+	sub	r3, r3, r1
+	clz	r3, r3
+	lsr	r3, r3, #5
+	moveq	r3, #0
+	cmp	r3, #0
+	beq	.L306
+	.loc 2 2682 0 is_stmt 0 discriminator 2
+	movw	r2, #2682
+	ldr	r1, .L320
+	ldr	r0, .L320+4
+	bl	printk
+.LVL312:
+.L306:
+	.loc 2 2684 0 is_stmt 1
+	mov	r0, r6
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.LVL313:
+.L312:
+	.loc 2 2665 0
+	add	r3, r3, #1
+	uxtb	r3, r3
+	.loc 2 2666 0
+	cmp	r3, r1
+	.loc 2 2665 0
+	strb	r3, [r4, #6]
+	.loc 2 2667 0
+	ldrheq	r3, [r4, #2]
+	.loc 2 2668 0
+	strbeq	r2, [r4, #6]
+	.loc 2 2667 0
+	addeq	r3, r3, #1
+	strheq	r3, [r4, #2]	@ movhi
+	.loc 2 2670 0
+	ldrb	r3, [r4, #6]	@ zero_extendqisi2
+	add	r3, r4, r3, lsl #1
+	ldrh	r0, [r3, #16]
+	b	.L310
+.L321:
+	.align	2
+.L320:
+	.word	.LANCHOR1+137
+	.word	.LC1
+	.word	.LANCHOR0
+.LFE240:
+	.fnend
+	.size	get_new_active_ppa, .-get_new_active_ppa
+	.align	2
+	.global	FtlGcBufInit
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlGcBufInit, %function
+FtlGcBufInit:
+	.fnstart
+.LFB243:
+	.file 5 "drivers/rkflash/rksftl/sftl_gc.c"
+	.loc 5 22 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI153:
+	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
+.LCFI154:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI155:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 22 0
+	.loc 5 27 0
+	mov	lr, #12
+	mov	r4, #1
+	.loc 5 25 0
+	ldr	r3, .L327
+	.loc 5 30 0
+	mov	r5, #20
+	.loc 5 25 0
+	mov	r2, #0
+	str	r2, [r3, #3144]
+.L323:
+	.loc 5 26 0 discriminator 1
+	ldrh	r1, [r3, #8]
+	uxth	r0, r2
+	add	ip, r2, #1
+	cmp	r0, r1
+	bcc	.L324
+	.loc 5 35 0 discriminator 1
+	mov	ip, #12
+	mov	lr, #0
+.L325:
+	.loc 5 34 0 discriminator 1
+	ldr	r2, [r3, #3164]
+	cmp	r1, r2
+	bcc	.L326
+	.loc 5 39 0
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
+.L324:
+	uxth	r2, r2
+	.loc 5 27 0 discriminator 3
+	ldr	r6, [r3, #3148]
+	mul	r0, lr, r2
+	add	r1, r6, r0
+	str	r4, [r1, #8]
+	.loc 5 28 0 discriminator 3
+	ldrh	r1, [r3, #86]
+	mul	r1, r2, r1
+	add	r7, r1, #3
+	cmp	r1, #0
+	movlt	r1, r7
+	ldr	r7, [r3, #3152]
+	bic	r1, r1, #3
+	add	r1, r7, r1
+	str	r1, [r6, r0]
+	.loc 5 29 0 discriminator 3
+	ldrh	r1, [r3, #88]
+	ldr	r7, [r3, #3148]
+	mul	r1, r2, r1
+	add	r6, r7, r0
+	add	r8, r1, #3
+	cmp	r1, #0
+	movlt	r1, r8
+	ldr	r8, [r3, #3156]
+	bic	r1, r1, #3
+	add	r1, r8, r1
+	str	r1, [r6, #4]
+	.loc 5 30 0 discriminator 3
+	ldr	r1, [r3, #3160]
+	mla	r2, r5, r2, r1
+	ldr	r1, [r7, r0]
+	str	r1, [r2, #8]
+	.loc 5 31 0 discriminator 3
+	ldr	r1, [r6, #4]
+	str	r1, [r2, #12]
+	mov	r2, ip
+	b	.L323
+.L326:
+	.loc 5 35 0 discriminator 3
+	mul	r4, ip, r1
+	ldr	r5, [r3, #3148]
+	add	r2, r5, r4
+	str	lr, [r2, #8]
+	.loc 5 36 0 discriminator 3
+	ldrh	r2, [r3, #86]
+	mul	r2, r1, r2
+	add	r0, r2, #3
+	cmp	r2, #0
+	movlt	r2, r0
+	ldr	r0, [r3, #3152]
+	bic	r2, r2, #3
+	add	r2, r0, r2
+	str	r2, [r5, r4]
+	.loc 5 37 0 discriminator 3
+	ldrh	r2, [r3, #88]
+	ldr	r0, [r3, #3148]
+	mul	r2, r1, r2
+	add	r0, r0, r4
+	.loc 5 34 0 discriminator 3
+	add	r1, r1, #1
+	uxth	r1, r1
+	.loc 5 37 0 discriminator 3
+	add	r4, r2, #3
+	cmp	r2, #0
+	movlt	r2, r4
+	ldr	r4, [r3, #3156]
+	bic	r2, r2, #3
+	add	r2, r4, r2
+	str	r2, [r0, #4]
+	b	.L325
+.L328:
+	.align	2
+.L327:
+	.word	.LANCHOR0
+.LFE243:
+	.fnend
+	.size	FtlGcBufInit, .-FtlGcBufInit
+	.align	2
+	.global	FtlGcBufFree
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlGcBufFree, %function
+FtlGcBufFree:
+	.fnstart
+.LFB244:
+	.loc 5 42 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL314:
+	.movsp ip
+	mov	ip, sp
+.LCFI156:
+	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI157:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI158:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 42 0
+	.loc 5 46 0
+	mov	lr, #0
+	.loc 5 48 0
+	mov	r5, #20
+	.loc 5 47 0
+	ldr	r3, .L336
+	.loc 5 48 0
+	mov	r7, #12
+	.loc 5 49 0
+	mov	r8, lr
+	.loc 5 47 0
+	ldr	r6, [r3, #3164]
+	.loc 5 48 0
+	ldr	r4, [r3, #3148]
+.L330:
+	uxth	r3, lr
+	.loc 5 46 0 discriminator 1
+	cmp	r1, r3
+	ldmfdls	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+	.loc 5 48 0
+	mla	ip, r5, r3, r0
+	mov	r2, #0
+.L331:
+	uxth	r3, r2
+	.loc 5 47 0 discriminator 1
+	cmp	r6, r3
+	bls	.L332
+	.loc 5 48 0
+	mul	r3, r7, r3
+	add	r2, r2, #1
+	ldr	r10, [r4, r3]
+	add	r9, r4, r3
+	ldr	r3, [ip, #8]
+	cmp	r10, r3
+	bne	.L331
+	.loc 5 49 0
+	str	r8, [r9, #8]
+.L332:
+	add	lr, lr, #1
+	b	.L330
+.L337:
+	.align	2
+.L336:
+	.word	.LANCHOR0
+.LFE244:
+	.fnend
+	.size	FtlGcBufFree, .-FtlGcBufFree
+	.align	2
+	.global	FtlGcBufAlloc
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlGcBufAlloc, %function
+FtlGcBufAlloc:
+	.fnstart
+.LFB245:
+	.loc 5 57 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL315:
+	.movsp ip
+	mov	ip, sp
+.LCFI159:
+	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
+.LCFI160:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI161:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 57 0
+	.loc 5 61 0
+	mov	ip, #0
+	.loc 5 63 0
+	mov	r6, #12
+	.loc 5 62 0
+	ldr	r3, .L345
+	.loc 5 64 0
+	mov	r7, #1
+	.loc 5 65 0
+	mov	r8, #20
+	.loc 5 62 0
+	ldr	r4, [r3, #3164]
+	.loc 5 63 0
+	ldr	r5, [r3, #3148]
+.L339:
+	uxth	r2, ip
+	.loc 5 61 0 discriminator 1
+	cmp	r1, r2
+	bhi	.L343
+	.loc 5 71 0
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
+.L343:
+	mov	lr, #0
+.L340:
+	uxth	r3, lr
+	.loc 5 62 0 discriminator 1
+	cmp	r4, r3
+	bls	.L341
+	.loc 5 63 0
+	mla	r3, r6, r3, r5
+	add	lr, lr, #1
+	ldr	r9, [r3, #8]
+	cmp	r9, #0
+	bne	.L340
+	.loc 5 65 0
+	mla	r2, r8, r2, r0
+	ldr	lr, [r3]
+	.loc 5 64 0
+	str	r7, [r3, #8]
+	.loc 5 65 0
+	str	lr, [r2, #8]
+	.loc 5 66 0
+	ldr	r3, [r3, #4]
+	str	r3, [r2, #12]
+.L341:
+	add	ip, ip, #1
+	b	.L339
+.L346:
+	.align	2
+.L345:
+	.word	.LANCHOR0
+.LFE245:
+	.fnend
+	.size	FtlGcBufAlloc, .-FtlGcBufAlloc
+	.align	2
+	.global	IsBlkInGcList
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	IsBlkInGcList, %function
+IsBlkInGcList:
+	.fnstart
+.LFB246:
+	.loc 5 74 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL316:
+	.movsp ip
+	mov	ip, sp
+.LCFI162:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI163:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI164:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 74 0
+	.loc 5 77 0
+	movw	r1, #3172
+	.loc 5 78 0
+	ldr	r2, .L352
+	ldr	r3, [r2, #3168]
+	ldrh	r2, [r2, r1]
+	add	r2, r3, r2, lsl #1
+.L348:
+	.loc 5 77 0 discriminator 1
+	cmp	r3, r2
+	bne	.L350
+	.loc 5 81 0
+	mov	r0, #0
+.LVL317:
+	ldmfd	sp, {fp, sp, pc}
+.LVL318:
+.L350:
+	.loc 5 78 0
+	ldrh	r1, [r3], #2
+	cmp	r1, r0
+	bne	.L348
+	.loc 5 79 0
+	mov	r0, #1
+.LVL319:
+	.loc 5 82 0
+	ldmfd	sp, {fp, sp, pc}
+.L353:
+	.align	2
+.L352:
+	.word	.LANCHOR0
+.LFE246:
+	.fnend
+	.size	IsBlkInGcList, .-IsBlkInGcList
+	.align	2
+	.global	FtlGcUpdatePage
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlGcUpdatePage, %function
+FtlGcUpdatePage:
+	.fnstart
+.LFB247:
+	.loc 5 85 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL320:
+	.movsp ip
+	mov	ip, sp
+.LCFI165:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI166:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI167:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 85 0
+	mov	r4, r0
+	.loc 5 88 0
+	ubfx	r0, r0, #10, #16
+.LVL321:
+	.loc 5 85 0
+	mov	r5, r1
+	mov	r6, r2
+	.loc 5 88 0
+	bl	P2V_block_in_plane
+.LVL322:
+	.loc 5 91 0
+	ldr	r3, .L358
+	movw	r2, #3172
+	mov	ip, #0
+	ldrh	lr, [r3, r2]
+	.loc 5 92 0
+	ldr	r2, [r3, #3168]
+	sub	r1, r2, #2
+.LVL323:
+.L355:
+	uxth	r7, ip
+.LVL324:
+	.loc 5 91 0 discriminator 1
+	cmp	r7, lr
+	bcc	.L357
+	.loc 5 96 0
+	bne	.L356
+	.loc 5 97 0
+	lsl	ip, r7, #1
+.LVL325:
+	.loc 5 98 0
+	movw	r1, #3172
+	.loc 5 97 0
+	strh	r0, [r2, ip]	@ movhi
+	.loc 5 98 0
+	ldrh	r2, [r3, r1]
+	add	r2, r2, #1
+	strh	r2, [r3, r1]	@ movhi
+	b	.L356
+.LVL326:
+.L357:
+	.loc 5 92 0
+	ldrh	r7, [r1, #2]!
+.LVL327:
+	add	ip, ip, #1
+	cmp	r7, r0
+	bne	.L355
+.LVL328:
+.L356:
+	.loc 5 101 0
+	movw	ip, #3180
+	mov	r0, #12
+.LVL329:
+	ldrh	r2, [r3, ip]
+	mul	r0, r0, r2
+	ldr	r2, [r3, #3176]
+	add	r1, r2, r0
+	.loc 5 102 0
+	stmib	r1, {r5, r6}
+.LVL330:
+	.loc 5 103 0
+	str	r4, [r2, r0]
+	.loc 5 107 0
+	ldrh	r2, [r3, ip]
+	add	r2, r2, #1
+	strh	r2, [r3, ip]	@ movhi
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L359:
+	.align	2
+.L358:
+	.word	.LANCHOR0
+.LFE247:
+	.fnend
+	.size	FtlGcUpdatePage, .-FtlGcUpdatePage
+	.align	2
+	.global	FtlGcRefreshBlock
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlGcRefreshBlock, %function
+FtlGcRefreshBlock:
+	.fnstart
+.LFB254:
+	.loc 5 345 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL331:
+	.movsp ip
+	mov	ip, sp
+.LCFI168:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI169:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI170:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 345 0
+	mov	r4, r0
+	.loc 5 347 0
+	mov	r1, r0
+	ldr	r0, .L363
+.LVL332:
+	bl	printk
+.LVL333:
+	.loc 5 349 0
+	ldr	r3, .L363+4
+	movw	ip, #3182
+	ldrh	lr, [r3, ip]
+	cmp	r4, lr
+	beq	.L361
+	.loc 5 349 0 is_stmt 0 discriminator 1
+	add	r2, r3, #3184
+	ldrh	r0, [r2]
+	cmp	r4, r0
+	beq	.L361
+	.loc 5 351 0 is_stmt 1
+	movw	r1, #65535
+	cmp	lr, r1
+	.loc 5 352 0
+	strheq	r4, [r3, ip]	@ movhi
+	.loc 5 351 0
+	beq	.L361
+	.loc 5 353 0
+	cmp	r0, r1
+	.loc 5 354 0
+	strheq	r4, [r2]	@ movhi
+.L361:
+	.loc 5 356 0
+	mov	r0, #0
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L364:
+	.align	2
+.L363:
+	.word	.LC73
+	.word	.LANCHOR0
+.LFE254:
+	.fnend
+	.size	FtlGcRefreshBlock, .-FtlGcRefreshBlock
+	.align	2
+	.global	FtlGcMarkBadPhyBlk
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlGcMarkBadPhyBlk, %function
+FtlGcMarkBadPhyBlk:
+	.fnstart
+.LFB255:
+	.loc 5 359 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL334:
+	.movsp ip
+	mov	ip, sp
+.LCFI171:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI172:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI173:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 359 0
+	.loc 5 364 0
+	movw	r6, #3186
+	.loc 5 359 0
+	mov	r5, r0
+	.loc 5 364 0
+	ldr	r4, .L369
+	.loc 5 361 0
+	bl	P2V_block_in_plane
+.LVL335:
+	.loc 5 364 0
+	mov	r2, r5
+	.loc 5 361 0
+	mov	r7, r0
+	.loc 5 364 0
+	ldrh	r1, [r4, r6]
+	ldr	r0, .L369+4
+	bl	printk
+.LVL336:
+	.loc 5 366 0
+	mov	r0, r7
+	bl	FtlGcRefreshBlock
+.LVL337:
+	.loc 5 368 0
+	ldrh	r3, [r4, r6]
+	mov	r2, #0
+	.loc 5 369 0
+	ldr	r0, .L369+8
+.L366:
+	.loc 5 368 0 discriminator 1
+	uxth	r1, r2
+	cmp	r3, r1
+	bhi	.L368
+	.loc 5 372 0
+	cmp	r3, #15
+	.loc 5 373 0
+	movwls	r2, #3186
+	addls	r1, r3, #1
+	strhls	r1, [r4, r2]	@ movhi
+	lslls	r3, r3, #1
+	ldrls	r2, .L369+8
+	strhls	r5, [r2, r3]	@ movhi
+	b	.L367
+.L368:
+	add	r2, r2, #1
+	.loc 5 369 0
+	add	r1, r0, r2, lsl #1
+	ldrh	r1, [r1, #-2]
+	cmp	r1, r5
+	bne	.L366
+.L367:
+	.loc 5 375 0
+	mov	r0, #0
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L370:
+	.align	2
+.L369:
+	.word	.LANCHOR0
+	.word	.LC74
+	.word	.LANCHOR0+3188
+.LFE255:
+	.fnend
+	.size	FtlGcMarkBadPhyBlk, .-FtlGcMarkBadPhyBlk
+	.align	2
+	.global	FtlGcReFreshBadBlk
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlGcReFreshBadBlk, %function
+FtlGcReFreshBadBlk:
+	.fnstart
+.LFB256:
+	.loc 5 379 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI174:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI175:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI176:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 379 0
+	.loc 5 380 0
+	movw	r3, #3186
+	ldr	r4, .L377
+	ldrh	r2, [r4, r3]
+	cmp	r2, #0
+	beq	.L372
+	.loc 5 380 0 is_stmt 0 discriminator 1
+	movw	r3, #3182
+	ldrh	r1, [r4, r3]
+	movw	r3, #65535
+	cmp	r1, r3
+	bne	.L372
+	.loc 5 381 0 is_stmt 1
+	movw	r3, #3222
+.LBB290:
+.LBB291:
+	.loc 5 383 0
+	movw	r5, #3222
+.LBE291:
+.LBE290:
+	.loc 5 381 0
+	ldrh	r1, [r4, r3]
+	cmp	r1, r2
+	.loc 5 382 0
+	movcs	r2, #0
+	strhcs	r2, [r4, r3]	@ movhi
+.LBB293:
+.LBB292:
+	.loc 5 383 0
+	ldrh	r3, [r4, r5]
+	ldr	r2, .L377+4
+	lsl	r3, r3, #1
+	ldrh	r0, [r2, r3]
+	bl	P2V_block_in_plane
+.LVL338:
+	bl	FtlGcRefreshBlock
+.LVL339:
+	.loc 5 384 0
+	ldrh	r3, [r4, r5]
+	add	r3, r3, #1
+	strh	r3, [r4, r5]	@ movhi
+.L372:
+.LBE292:
+.LBE293:
+	.loc 5 387 0
+	mov	r0, #0
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L378:
+	.align	2
+.L377:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+3188
+.LFE256:
+	.fnend
+	.size	FtlGcReFreshBadBlk, .-FtlGcReFreshBadBlk
+	.align	2
+	.global	FlashReadPages
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FlashReadPages, %function
+FlashReadPages:
+	.fnstart
+.LFB262:
+	.loc 1 44 0
+	@ args = 0, pretend = 0, frame = 16
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL340:
+	.movsp ip
+	mov	ip, sp
+.LCFI177:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI178:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI179:
+	.pad #20
+	sub	sp, sp, #20
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 1 44 0
+	.loc 1 46 0
+	ldr	r3, .L397
+	.loc 1 44 0
+	mov	r7, r1
+	.loc 1 51 0
+	ldr	r8, .L397+4
+	mov	r4, r0
+	ldr	r9, .L397+8
+	.loc 1 50 0
+	mov	r5, #0
+.LVL341:
+	.loc 1 46 0
+	ldrh	r10, [r3, #12]
+.LVL342:
+	str	r3, [fp, #-56]
+.LVL343:
+.L380:
+	.loc 1 50 0 discriminator 1
+	cmp	r5, r7
+	bne	.L387
+	.loc 1 71 0
+	mov	r0, #0
+.LVL344:
+	sub	sp, fp, #40
+.LCFI180:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL345:
+.L387:
+.LCFI181:
+	.loc 1 51 0
+	ldr	r3, [r4, #8]
+	cmp	r3, #0
+	beq	.L381
+	.loc 1 51 0 is_stmt 0 discriminator 2
+	ldr	r3, [r4, #12]
+	cmp	r3, #0
+	bne	.L382
+.L381:
+	.loc 1 51 0 discriminator 3
+	mov	r2, #51
+.LVL346:
+	mov	r1, r8
+	mov	r0, r9
+.LVL347:
+	bl	printk
+.LVL348:
+.L382:
+	.loc 1 53 0 is_stmt 1
+	ldr	r6, .L397+12
+	.loc 1 52 0
+	sub	r2, fp, #52
+.LVL349:
+	sub	r1, fp, #48
+	mov	r0, r4
+.LVL350:
+	bl	l2p_addr_tran
+.LVL351:
+	.loc 1 53 0
+	ldr	r3, [r4, #12]
+	ldr	r2, [r4, #8]
+	ldr	r1, [fp, #-48]
+	ldrb	r0, [fp, #-52]	@ zero_extendqisi2
+	ldr	ip, [r6, #12]
+	blx	ip
+.LVL352:
+	.loc 1 58 0
+	ldr	r3, [fp, #-56]
+	.loc 1 57 0
+	str	r0, [r4]
+	.loc 1 58 0
+	ldrh	r3, [r3, #14]
+	cmp	r3, #4
+	bne	.L384
+	.loc 1 59 0
+	ldr	r3, [r4, #12]
+	ldr	r2, [r4, #8]
+	ldr	r1, [fp, #-48]
+	ldr	r6, [r6, #12]
+	add	r3, r3, #8
+	add	r2, r2, #2048
+	ldrb	r0, [fp, #-52]	@ zero_extendqisi2
+	add	r1, r10, r1
+	blx	r6
+.LVL353:
+	.loc 1 63 0
+	cmn	r0, #1
+	beq	.L385
+	.loc 1 64 0 discriminator 1
+	ldr	r3, [r4, #12]
+	.loc 1 63 0 discriminator 1
+	ldr	r2, [r3, #12]
+	cmn	r2, #1
+	bne	.L384
+	.loc 1 64 0
+	ldr	r2, [r3, #8]
+	cmn	r2, #1
+	bne	.L384
+	.loc 1 65 0
+	ldr	r3, [r3]
+	cmn	r3, #1
+	beq	.L384
+.L385:
+	.loc 1 67 0
+	mvn	r3, #0
+	str	r3, [r4]
+.L384:
+	.loc 1 50 0 discriminator 2
+	add	r5, r5, #1
+	add	r4, r4, #20
+	b	.L380
+.L398:
+	.align	2
+.L397:
+	.word	g_nand_phy_info
+	.word	.LANCHOR1+156
+	.word	.LC1
+	.word	g_nand_ops
+.LFE262:
+	.fnend
+	.size	FlashReadPages, .-FlashReadPages
+	.align	2
+	.global	FtlLoadFactoryBbt
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlLoadFactoryBbt, %function
+FtlLoadFactoryBbt:
+	.fnstart
+.LFB170:
+	.loc 4 279 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI182:
+	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI183:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI184:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 4 279 0
+	.loc 4 289 0
+	mov	r6, #0
+.LVL354:
+	.loc 4 290 0
+	mvn	r9, #0
+	.loc 4 286 0
+	ldr	r4, .L409
+	.loc 4 294 0
+	ldr	r10, .L409+4
+	.loc 4 286 0
+	ldr	r3, [r4, #2244]
+	add	r7, r4, #138
+	.loc 4 287 0
+	ldr	r8, [r4, #3244]
+	.loc 4 286 0
+	str	r3, [r4, #3232]
+	.loc 4 287 0
+	str	r8, [r4, #3236]
+.LVL355:
+.L400:
+	.loc 4 289 0 discriminator 1
+	ldrh	r3, [r4, #30]
+	cmp	r6, r3
+	bcc	.L405
+	.loc 4 314 0
+	mov	r0, #0
+	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.L405:
+	.loc 4 291 0
+	ldrh	r5, [r4, #74]
+.LVL356:
+	.loc 4 290 0
+	strh	r9, [r7, #2]!	@ movhi
+.LVL357:
+.L402:
+	.loc 4 291 0 discriminator 2
+	ldrh	r3, [r4, #74]
+	sub	r5, r5, #1
+.LVL358:
+	uxth	r5, r5
+.LVL359:
+	sub	r2, r3, #16
+	cmp	r5, r2
+	ble	.L403
+	.loc 4 292 0
+	mla	r3, r6, r3, r5
+	.loc 4 294 0
+	mov	r2, #1
+	mov	r1, r2
+	mov	r0, r10
+	.loc 4 292 0
+	lsl	r3, r3, #10
+.LVL360:
+	.loc 4 293 0
+	str	r3, [r4, #3228]
+	.loc 4 294 0
+	bl	FlashReadPages
+.LVL361:
+	.loc 4 295 0
+	ldr	r3, [r4, #3224]
+	cmn	r3, #1
+	beq	.L402
+	.loc 4 301 0
+	ldrh	r2, [r8]
+	movw	r3, #61664
+	cmp	r2, r3
+	bne	.L402
+	.loc 4 303 0
+	strh	r5, [r7]	@ movhi
+.L403:
+	.loc 4 289 0 discriminator 2
+	add	r6, r6, #1
+	b	.L400
+.L410:
+	.align	2
+.L409:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+3224
+.LFE170:
+	.fnend
+	.size	FtlLoadFactoryBbt, .-FtlLoadFactoryBbt
+	.align	2
+	.global	FtlGetLastWrittenPage
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlGetLastWrittenPage, %function
+FtlGetLastWrittenPage:
+	.fnstart
+.LFB176:
+	.loc 2 47 0
+	@ args = 0, pretend = 0, frame = 88
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL362:
+	.movsp ip
+	mov	ip, sp
+.LCFI185:
+	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, fp, ip, lr}
+.LCFI186:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI187:
+	.pad #92
+	sub	sp, sp, #92
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 47 0
+	ldr	r3, .L419
+	.loc 2 51 0
+	cmp	r1, #1
+	.loc 2 57 0
+	lsl	r7, r0, #10
+	.loc 2 58 0
+	mov	r2, r1
+	.loc 2 47 0
+	mov	r6, r1
+	.loc 2 51 0
+	ldrheq	r5, [r3, #80]
+	.loc 2 58 0
+	mov	r1, #1
+.LVL363:
+	.loc 2 51 0
+	ldrhne	r5, [r3, #78]
+	.loc 2 58 0
+	sub	r0, fp, #120
+.LVL364:
+	.loc 2 53 0
+	ldr	r3, .L419+4
+	.loc 2 56 0
+	sub	r5, r5, #1
+	sxth	r5, r5
+.LVL365:
+	.loc 2 53 0
+	str	r3, [fp, #-112]
+	.loc 2 54 0
+	sub	r3, fp, #100
+	str	r3, [fp, #-108]
+	.loc 2 57 0
+	orr	r3, r5, r7
+	str	r3, [fp, #-116]
+	.loc 2 58 0
+	bl	FlashReadPages
+.LVL366:
+	.loc 2 59 0
+	ldr	r3, [fp, #-100]
+	cmn	r3, #1
+	moveq	r8, #0
+.LVL367:
+	beq	.L415
+.L414:
+	.loc 2 73 0
+	mov	r0, r5
+	sub	sp, fp, #32
+.LCFI188:
+	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
+.LVL368:
+.L418:
+.LCFI189:
+	.loc 2 61 0
+	add	r3, r8, r5
+	.loc 2 63 0
+	mov	r2, r6
+	.loc 2 61 0
+	add	r3, r3, r3, lsr #31
+	.loc 2 63 0
+	mov	r1, #1
+	sub	r0, fp, #120
+	.loc 2 61 0
+	asr	r4, r3, #1
+	.loc 2 62 0
+	sxth	r3, r4
+	orr	r3, r3, r7
+	str	r3, [fp, #-116]
+	.loc 2 63 0
+	bl	FlashReadPages
+.LVL369:
+	.loc 2 65 0
+	ldr	r3, [fp, #-100]
+	cmn	r3, #1
+	bne	.L416
+	.loc 2 65 0 is_stmt 0 discriminator 1
+	ldr	r3, [fp, #-96]
+	cmn	r3, #1
+	.loc 2 66 0 is_stmt 1 discriminator 1
+	subeq	r4, r4, #1
+	sxtheq	r5, r4
+	.loc 2 65 0 discriminator 1
+	beq	.L415
+.L416:
+	.loc 2 68 0
+	add	r4, r4, #1
+	sxth	r8, r4
+.L415:
+	.loc 2 60 0
+	cmp	r8, r5
+	ble	.L418
+	b	.L414
+.L420:
+	.align	2
+.L419:
+	.word	.LANCHOR0
+	.word	ftl_temp_buf
+.LFE176:
+	.fnend
+	.size	FtlGetLastWrittenPage, .-FtlGetLastWrittenPage
+	.align	2
+	.global	FlashProgPages
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FlashProgPages, %function
+FlashProgPages:
+	.fnstart
+.LFB263:
+	.loc 1 74 0
+	@ args = 0, pretend = 0, frame = 40
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL370:
+	.movsp ip
+	mov	ip, sp
+.LCFI190:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI191:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI192:
+	.pad #44
+	sub	sp, sp, #44
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 1 74 0
+	mov	r8, r3
+	.loc 1 76 0
+	ldr	r3, .L451
+.LVL371:
+	.loc 1 74 0
+	mov	r7, r2
+	mov	r9, r1
+	mov	r4, r0
+	.loc 1 80 0
+	mov	r5, r0
+.LVL372:
+	.loc 1 76 0
+	ldrh	r2, [r3, #12]
+.LVL373:
+	.loc 1 80 0
+	mov	r6, #0
+	str	r3, [fp, #-84]
+	.loc 1 76 0
+	str	r2, [fp, #-80]
+.LVL374:
+.L422:
+	.loc 1 80 0 discriminator 1
+	cmp	r6, r9
+	bne	.L430
+	.loc 1 101 0
+	cmp	r8, #0
+	bne	.L437
+.L450:
+	.loc 1 131 0
+	mov	r0, #0
+	sub	sp, fp, #40
+.LCFI193:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL375:
+.L430:
+.LCFI194:
+	.loc 1 81 0
+	ldr	r3, [r5, #8]
+	cmp	r3, #0
+	beq	.L423
+	.loc 1 81 0 is_stmt 0 discriminator 2
+	ldr	r3, [r5, #12]
+	cmp	r3, #0
+	bne	.L424
+.L423:
+	.loc 1 81 0 discriminator 3
+	mov	r2, #81
+.LVL376:
+	ldr	r1, .L451+4
+	ldr	r0, .L451+8
+	bl	printk
+.LVL377:
+.L424:
+	.loc 1 82 0 is_stmt 1
+	sub	r2, fp, #72
+.LVL378:
+	sub	r1, fp, #68
+	mov	r0, r5
+	bl	l2p_addr_tran
+.LVL379:
+	.loc 1 83 0
+	ldr	r3, .L451+12
+	ldr	r2, [r5, #8]
+	ldr	r1, [fp, #-68]
+	ldr	r10, [r3, #8]
+	ldrb	r0, [fp, #-72]	@ zero_extendqisi2
+	ldr	r3, [r5, #12]
+	blx	r10
+.LVL380:
+	.loc 1 88 0
+	cmp	r0, #0
+	.loc 1 89 0
+	mvnne	r3, #0
+	.loc 1 87 0
+	streq	r0, [r5]
+	.loc 1 89 0
+	strne	r3, [r5]
+	.loc 1 91 0
+	ldr	r3, [fp, #-84]
+	ldrh	r3, [r3, #14]
+	cmp	r3, #4
+	bne	.L428
+	.loc 1 92 0
+	ldr	r1, .L451+12
+	ldr	r0, [fp, #-80]
+.LVL381:
+	ldr	r3, [r5, #12]
+	ldr	r2, [r5, #8]
+	ldr	r10, [r1, #8]
+	ldr	r1, [fp, #-68]
+	add	r3, r3, #8
+	add	r2, r2, #2048
+	add	r1, r0, r1
+	ldrb	r0, [fp, #-72]	@ zero_extendqisi2
+.LVL382:
+	blx	r10
+.LVL383:
+	.loc 1 96 0
+	cmp	r0, #0
+	.loc 1 97 0
+	mvnne	r3, #0
+	strne	r3, [r5]
+.L428:
+	.loc 1 80 0 discriminator 2
+	add	r6, r6, #1
+	add	r5, r5, #20
+	b	.L422
+.LVL384:
+.L435:
+.LBB294:
+	.loc 1 106 0
+	ldr	r9, .L451+16
+.LVL385:
+	mov	r3, #0
+	.loc 1 107 0
+	str	r3, [r8, #3248]
+	.loc 1 112 0
+	mov	r2, r7
+.LVL386:
+	mov	r1, #1
+.LVL387:
+	sub	r0, fp, #64
+	.loc 1 106 0
+	str	r3, [r9]
+	.loc 1 108 0
+	ldr	r3, [r4, #4]
+	.loc 1 109 0
+	str	r9, [fp, #-56]
+	.loc 1 110 0
+	str	r10, [fp, #-52]
+	.loc 1 108 0
+	str	r3, [fp, #-60]
+	.loc 1 112 0
+	bl	FlashReadPages
+.LVL388:
+	.loc 1 113 0
+	ldr	r3, [fp, #-64]
+	cmn	r3, #1
+	bne	.L432
+	.loc 1 114 0
+	ldr	r1, [r4, #4]
+	ldr	r0, .L451+20
+	str	r3, [fp, #-80]
+	bl	printk
+.LVL389:
+	.loc 1 115 0
+	ldr	r3, [fp, #-80]
+	str	r3, [r4]
+.L432:
+	.loc 1 117 0
+	ldr	r3, [r4, #12]
+	cmp	r3, #0
+	beq	.L433
+	.loc 1 118 0
+	ldr	r2, [r3]
+	ldr	r3, [r8, #3248]
+	cmp	r2, r3
+	beq	.L433
+	.loc 1 119 0
+	ldr	r1, [r4, #4]
+	ldr	r0, .L451+24
+	bl	printk
+.LVL390:
+	.loc 1 120 0
+	mvn	r3, #0
+	str	r3, [r4]
+.L433:
+	.loc 1 123 0
+	ldr	r3, [r4, #8]
+	cmp	r3, #0
+	beq	.L434
+	.loc 1 124 0
+	ldr	r2, [r3]
+	ldr	r3, [r9]
+	cmp	r2, r3
+	beq	.L434
+	.loc 1 125 0
+	ldr	r1, [r4, #4]
+	ldr	r0, .L451+28
+	bl	printk
+.LVL391:
+	.loc 1 126 0
+	mvn	r3, #0
+	str	r3, [r4]
+.L434:
+.LBE294:
+	.loc 1 103 0 discriminator 2
+	add	r5, r5, #1
+	add	r4, r4, #20
+.LVL392:
+.L431:
+	.loc 1 103 0 is_stmt 0 discriminator 1
+	cmp	r6, r5
+	bne	.L435
+	b	.L450
+.LVL393:
+.L437:
+.LBB295:
+	.loc 1 107 0 is_stmt 1
+	ldr	r8, .L451+32
+.LVL394:
+.LBE295:
+	mov	r5, #0
+.LBB296:
+	.loc 1 110 0
+	add	r10, r8, #3248
+	b	.L431
+.L452:
+	.align	2
+.L451:
+	.word	g_nand_phy_info
+	.word	.LANCHOR1+171
+	.word	.LC1
+	.word	g_nand_ops
+	.word	check_buf
+	.word	.LC75
+	.word	.LC76
+	.word	.LC77
+	.word	.LANCHOR0
+.LBE296:
+.LFE263:
+	.fnend
+	.size	FlashProgPages, .-FlashProgPages
+	.align	2
+	.global	FlashEraseBlocks
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FlashEraseBlocks, %function
+FlashEraseBlocks:
+	.fnstart
+.LFB264:
+	.loc 1 134 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL395:
+	.movsp ip
+	mov	ip, sp
+.LCFI195:
+	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
+.LCFI196:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI197:
+	.pad #8
+	sub	sp, sp, #8
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 1 134 0
+	.loc 1 137 0
+	ldr	r3, .L464
+	.loc 1 134 0
+	mov	r8, r2
+	.loc 1 142 0
+	ldr	r7, .L464+4
+	mov	r4, r0
+	.loc 1 140 0
+	mov	r6, #0
+.LVL396:
+	.loc 1 137 0
+	ldrh	r9, [r3, #12]
+.LVL397:
+	mov	r5, r3
+.LVL398:
+.L454:
+	.loc 1 140 0 discriminator 1
+	cmp	r6, r8
+	bne	.L460
+	.loc 1 153 0
+	mov	r0, #0
+.LVL399:
+	sub	sp, fp, #36
+.LCFI198:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
+.LVL400:
+.L460:
+.LCFI199:
+	.loc 1 141 0
+	sub	r2, fp, #44
+	sub	r1, fp, #40
+.LVL401:
+	mov	r0, r4
+.LVL402:
+	bl	l2p_addr_tran
+.LVL403:
+	.loc 1 142 0
+	ldr	r3, [r7, #4]
+	ldr	r1, [fp, #-40]
+	ldrb	r0, [fp, #-44]	@ zero_extendqisi2
+	blx	r3
+.LVL404:
+	.loc 1 144 0
+	cmp	r0, #0
+	.loc 1 145 0
+	mvnne	r3, #0
+	.loc 1 143 0
+	streq	r0, [r4]
+	.loc 1 145 0
+	strne	r3, [r4]
+	.loc 1 146 0
+	ldrh	r3, [r5, #14]
+	cmp	r3, #4
+	bne	.L458
+	.loc 1 147 0
+	ldr	r1, [fp, #-40]
+	ldr	r3, [r7, #4]
+	ldrb	r0, [fp, #-44]	@ zero_extendqisi2
+	add	r1, r9, r1
+	blx	r3
+.LVL405:
+	.loc 1 148 0
+	cmp	r0, #0
+	.loc 1 149 0
+	mvnne	r3, #0
+	strne	r3, [r4]
+.L458:
+	.loc 1 140 0 discriminator 2
+	add	r6, r6, #1
+	add	r4, r4, #20
+	b	.L454
+.L465:
+	.align	2
+.L464:
+	.word	g_nand_phy_info
+	.word	g_nand_ops
+.LFE264:
+	.fnend
+	.size	FlashEraseBlocks, .-FlashEraseBlocks
+	.align	2
+	.global	FtlFreeSysBlkQueueIn
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlFreeSysBlkQueueIn, %function
+FtlFreeSysBlkQueueIn:
+	.fnstart
+.LFB180:
+	.loc 2 98 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL406:
+	.movsp ip
+	mov	ip, sp
+.LCFI200:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI201:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI202:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 98 0
+	mov	r6, r0
+.LBB297:
+.LBB298:
+	.loc 2 94 0
+	ldr	r4, .L475
+.LBE298:
+.LBE297:
+	.loc 2 99 0
+	ldrh	r3, [r4, #194]
+	cmp	r3, #1024
+	ldmfdeq	sp, {r4, r5, r6, r7, fp, sp, pc}
+.LBB299:
+	.loc 2 101 0
+	cmp	r1, #0
+	beq	.L468
+.LBB300:
+	.loc 2 102 0
+	bl	P2V_block_in_plane
+.LVL407:
+	mov	r5, r0
+	.loc 2 103 0
+	ldr	r0, [r4, #3760]
+	lsl	r3, r6, #10
+	.loc 2 104 0
+	mov	r2, #1
+	mov	r1, r2
+	.loc 2 103 0
+	str	r3, [r0, #4]
+	.loc 2 104 0
+	bl	FlashEraseBlocks
+.LVL408:
+	.loc 2 105 0
+	ldr	r2, [r4, #2248]
+	lsl	r0, r5, #1
+	ldrh	r3, [r2, r0]
+	add	r3, r3, #1
+	strh	r3, [r2, r0]	@ movhi
+	.loc 2 106 0
+	ldr	r3, [r4, #2492]
+	add	r3, r3, #1
+	str	r3, [r4, #2492]
+.LVL409:
+.L468:
+.LBE300:
+	.loc 2 108 0
+	ldrh	r3, [r4, #194]
+	add	r3, r3, #1
+	strh	r3, [r4, #194]	@ movhi
+	.loc 2 109 0
+	ldrh	r3, [r4, #192]
+	add	r2, r4, r3, lsl #1
+	.loc 2 110 0
+	add	r3, r3, #1
+	ubfx	r3, r3, #0, #10
+	.loc 2 109 0
+	strh	r6, [r2, #196]	@ movhi
+	.loc 2 110 0
+	strh	r3, [r4, #192]	@ movhi
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L476:
+	.align	2
+.L475:
+	.word	.LANCHOR0
+.LBE299:
+.LFE180:
+	.fnend
+	.size	FtlFreeSysBlkQueueIn, .-FtlFreeSysBlkQueueIn
+	.align	2
+	.global	FtlLowFormatEraseBlock
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlLowFormatEraseBlock, %function
+FtlLowFormatEraseBlock:
+	.fnstart
+.LFB149:
+	.loc 3 528 0
+	@ args = 0, pretend = 0, frame = 24
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL410:
+	.movsp ip
+	mov	ip, sp
+.LCFI203:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI204:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI205:
+	.pad #28
+	sub	sp, sp, #28
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 528 0
+	.loc 3 538 0
+	ldr	r3, .L519
+	.loc 3 539 0
+	mov	r10, #0
+	.loc 3 528 0
+	mov	r6, r1
+	.loc 3 536 0
+	mov	r5, r10
+	.loc 3 537 0
+	mov	r4, r10
+.LVL411:
+	.loc 3 540 0
+	mov	r9, #20
+	mov	r8, r3
+	.loc 3 528 0
+	str	r0, [fp, #-52]
+	.loc 3 538 0
+	str	r0, [r3, #3764]
+.L478:
+	.loc 3 539 0 discriminator 1
+	ldrh	r0, [r8, #8]
+.LVL412:
+	uxth	r1, r10
+	cmp	r0, r1
+	bhi	.L482
+	.loc 3 559 0
+	cmp	r5, #0
+	beq	.L477
+	.loc 3 563 0
+	mov	r7, #0
+	.loc 3 564 0
+	mov	r9, #20
+	.loc 3 562 0
+	mov	r2, r5
+	mov	r1, #0
+	ldr	r0, [r8, #3760]
+	bl	FlashEraseBlocks
+.LVL413:
+.L485:
+	.loc 3 563 0 discriminator 1
+	uxth	r2, r7
+	cmp	r5, r2
+	bhi	.L487
+.L488:
+	.loc 3 571 0
+	cmp	r6, #0
+	.loc 3 578 0
+	ldr	r7, .L519
+	.loc 3 573 0
+	ldrhne	r3, [r8, #80]
+.LVL414:
+	.loc 3 533 0
+	moveq	r3, #6
+.LVL415:
+	streq	r3, [fp, #-64]
+	.loc 3 531 0
+	moveq	r3, #1
+.LVL416:
+	mov	r10, r7
+	streq	r3, [fp, #-56]
+	.loc 3 573 0
+	strne	r3, [fp, #-56]
+	.loc 3 574 0
+	lsrne	r3, r3, #2
+.LVL417:
+	.loc 3 534 0
+	streq	r6, [fp, #-60]
+	.loc 3 574 0
+	strne	r3, [fp, #-64]
+	.loc 3 572 0
+	movne	r3, #1
+.LVL418:
+	strne	r3, [fp, #-60]
+	mov	r3, #0
+.LVL419:
+	str	r3, [fp, #-48]
+.LVL420:
+.L497:
+	.loc 3 578 0
+	mov	r8, #0
+	.loc 3 577 0
+	mov	r5, r8
+.L489:
+	.loc 3 578 0 discriminator 1
+	ldrh	r1, [r7, #8]
+	uxth	r3, r8
+.LVL421:
+	cmp	r1, r3
+	bhi	.L492
+	.loc 3 593 0
+	cmp	r5, #0
+	beq	.L477
+	.loc 3 596 0
+	ldr	r2, [fp, #-60]
+.LVL422:
+	mov	r3, #1
+	mov	r1, r5
+	ldr	r0, [r7, #3760]
+	bl	FlashProgPages
+.LVL423:
+	.loc 3 597 0
+	mov	r9, #0
+	.loc 3 598 0
+	mov	r2, #20
+.L494:
+	.loc 3 597 0 discriminator 1
+	uxth	r3, r9
+	cmp	r5, r3
+	bhi	.L496
+	.loc 3 604 0
+	ldr	r3, [fp, #-48]
+.LVL424:
+	ldr	r2, [fp, #-64]
+.LVL425:
+	add	r3, r3, r2
+.LVL426:
+	uxth	r3, r3
+.LVL427:
+	str	r3, [fp, #-48]
+	.loc 3 605 0
+	ldr	r2, [fp, #-48]
+.LVL428:
+	ldr	r3, [fp, #-56]
+.LVL429:
+	cmp	r3, r2
+	bhi	.L497
+	mov	r7, #0
+	.loc 3 611 0 discriminator 1
+	mov	r9, #20
+.L498:
+	.loc 3 610 0 discriminator 1
+	uxth	r3, r7
+.LVL430:
+	cmp	r5, r3
+	bhi	.L500
+	.loc 3 615 0
+	ldr	r3, [fp, #-52]
+.LVL431:
+	adds	r6, r6, #0
+.LVL432:
+	movne	r6, #1
+	cmp	r3, #63
+	movhi	r8, r6
+	orrls	r8, r6, #1
+	cmp	r8, #0
+	beq	.L477
+	.loc 3 616 0
+	mov	r2, r5
+.LVL433:
+	ldr	r1, [fp, #-60]
+	ldr	r0, [r10, #3760]
+	bl	FlashEraseBlocks
+.LVL434:
+.L477:
+	.loc 3 619 0
+	mov	r0, r4
+	sub	sp, fp, #40
+.LCFI206:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL435:
+.L482:
+.LCFI207:
+	.loc 3 540 0
+	uxth	r1, r10
+	ldr	ip, [r8, #3760]
+	mov	r3, #0
+	mul	r0, r9, r1
+	str	r3, [ip, r0]
+	.loc 3 541 0
+	add	r0, r8, r1
+	ldrb	r0, [r0, #36]	@ zero_extendqisi2
+	ldr	r1, [fp, #-52]
+	bl	V2P_block
+.LVL436:
+	.loc 3 543 0
+	cmp	r6, #0
+	.loc 3 541 0
+	mov	r7, r0
+	.loc 3 543 0
+	beq	.L479
+	.loc 3 544 0
+	bl	IsBlkInVendorPart
+.LVL437:
+	cmp	r0, #0
+	bne	.L480
+.L479:
+	.loc 3 548 0
+	mov	r0, r7
+	bl	FtlBbmIsBadBlock
+.LVL438:
+	cmp	r0, #0
+	.loc 3 554 0
+	addne	r4, r4, #1
+.LVL439:
+	uxthne	r4, r4
+.LVL440:
+	.loc 3 548 0
+	bne	.L480
+	.loc 3 549 0
+	ldr	r0, [r8, #3760]
+	lsl	r7, r7, #10
+	.loc 3 550 0
+	ldr	r1, [r8, #3768]
+	.loc 3 549 0
+	mla	r0, r9, r5, r0
+	.loc 3 550 0
+	str	r1, [r0, #8]
+	.loc 3 551 0
+	ldrh	r1, [r8, #88]
+	.loc 3 549 0
+	str	r7, [r0, #4]
+	.loc 3 551 0
+	mul	r1, r5, r1
+	.loc 3 552 0
+	add	r5, r5, #1
+	uxth	r5, r5
+	.loc 3 551 0
+	add	ip, r1, #3
+	cmp	r1, #0
+	movlt	r1, ip
+	ldr	ip, [r8, #3772]
+	bic	r1, r1, #3
+	add	r1, ip, r1
+	str	r1, [r0, #12]
+.L480:
+	add	r10, r10, #1
+	b	.L478
+.L487:
+	.loc 3 564 0
+	mul	r2, r9, r7
+	ldr	r1, [r8, #3760]
+	add	r0, r1, r2
+	ldr	r2, [r1, r2]
+	cmn	r2, #1
+	bne	.L486
+	.loc 3 566 0
+	ldr	r0, [r0, #4]
+	.loc 3 565 0
+	add	r4, r4, #1
+.LVL441:
+	uxth	r4, r4
+.LVL442:
+	.loc 3 566 0
+	ubfx	r0, r0, #10, #16
+	bl	FtlBbmMapBadBlock
+.LVL443:
+.L486:
+	add	r7, r7, #1
+	b	.L485
+.LVL444:
+.L492:
+	.loc 3 579 0
+	uxth	r3, r8
+	mov	r2, #20
+.LVL445:
+	ldr	r0, [r7, #3760]
+	mul	r1, r2, r3
+	mov	r2, #0
+	.loc 3 580 0
+	add	r3, r7, r3
+	.loc 3 579 0
+	str	r2, [r0, r1]
+	.loc 3 580 0
+	ldr	r1, [fp, #-52]
+	ldrb	r0, [r3, #36]	@ zero_extendqisi2
+	bl	V2P_block
+.LVL446:
+	.loc 3 581 0
+	cmp	r6, #0
+	.loc 3 580 0
+	mov	r9, r0
+	.loc 3 581 0
+	beq	.L490
+	.loc 3 582 0
+	bl	IsBlkInVendorPart
+.LVL447:
+	cmp	r0, #0
+	bne	.L491
+.L490:
+	.loc 3 585 0
+	mov	r0, r9
+	bl	FtlBbmIsBadBlock
+.LVL448:
+	cmp	r0, #0
+	bne	.L491
+	.loc 3 586 0
+	ldr	r1, [r7, #3760]
+	mov	r3, #20
+	mla	r1, r3, r5, r1
+	ldr	r3, [fp, #-48]
+.LVL449:
+	add	r9, r3, r9, lsl #10
+	.loc 3 587 0
+	ldr	r3, [r7, #3776]
+.LVL450:
+	.loc 3 586 0
+	str	r9, [r1, #4]
+	.loc 3 587 0
+	str	r3, [r1, #8]
+	.loc 3 588 0
+	ldrh	r3, [r7, #88]
+	mul	r3, r5, r3
+	.loc 3 589 0
+	add	r5, r5, #1
+	uxth	r5, r5
+	.loc 3 588 0
+	add	r0, r3, #3
+	cmp	r3, #0
+	movlt	r3, r0
+	ldr	r0, [r7, #3768]
+	bic	r3, r3, #3
+	add	r3, r0, r3
+	str	r3, [r1, #12]
+.L491:
+	add	r8, r8, #1
+	b	.L489
+.L496:
+	.loc 3 598 0
+	mul	r3, r2, r9
+	ldr	r1, [r10, #3760]
+	add	r0, r1, r3
+	ldr	r3, [r1, r3]
+	cmp	r3, #0
+	beq	.L495
+	.loc 3 600 0
+	ldr	r0, [r0, #4]
+	.loc 3 599 0
+	add	r4, r4, #1
+.LVL451:
+	str	r2, [fp, #-68]
+	uxth	r4, r4
+.LVL452:
+	.loc 3 600 0
+	ubfx	r0, r0, #10, #16
+	bl	FtlBbmMapBadBlock
+.LVL453:
+	ldr	r2, [fp, #-68]
+.L495:
+	add	r9, r9, #1
+	b	.L494
+.LVL454:
+.L500:
+	.loc 3 611 0
+	cmp	r6, #0
+	beq	.L499
+	.loc 3 611 0 is_stmt 0 discriminator 1
+	mul	r3, r9, r7
+	ldr	r2, [r10, #3760]
+.LVL455:
+	add	r1, r2, r3
+	ldr	r3, [r2, r3]
+	cmp	r3, #0
+	bne	.L499
+	.loc 3 612 0 is_stmt 1
+	ldr	r0, [r1, #4]
+	mov	r1, #1
+	ubfx	r0, r0, #10, #16
+	bl	FtlFreeSysBlkQueueIn
+.LVL456:
+.L499:
+	add	r7, r7, #1
+	b	.L498
+.L520:
+	.align	2
+.L519:
+	.word	.LANCHOR0
+.LFE149:
+	.fnend
+	.size	FtlLowFormatEraseBlock, .-FtlLowFormatEraseBlock
+	.align	2
+	.global	FlashTestBlk
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FlashTestBlk, %function
+FlashTestBlk:
+	.fnstart
+.LFB265:
+	.loc 1 156 0
+	@ args = 0, pretend = 0, frame = 88
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL457:
+	.movsp ip
+	mov	ip, sp
+.LCFI208:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI209:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI210:
+	.pad #88
+	sub	sp, sp, #88
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 1 156 0
+	.loc 1 161 0
+	cmp	r0, #11
+	.loc 1 156 0
+	mov	r4, r0
+	.loc 1 162 0
+	movls	r4, #0
+	.loc 1 161 0
+	bls	.L521
+.LBB313:
+.LBB314:
+	.loc 1 165 0
+	ldr	r5, .L524
+	.loc 1 166 0
+	sub	r0, fp, #84
+.LVL458:
+.LBB315:
+.LBB316:
+.LBB317:
+	.loc 1 202 0
+	mov	r2, #32
+	mov	r1, #165
+.LBE317:
+.LBE316:
+.LBE315:
+	.loc 1 166 0
+	str	r0, [fp, #-92]
+.LVL459:
+	.loc 1 169 0
+	lsl	r4, r4, #10
+.LVL460:
+	.loc 1 165 0
+	str	r5, [fp, #-96]
+.LBB320:
+.LBB319:
+.LBB318:
+	.loc 1 202 0
+	bl	memset
+.LVL461:
+.LBE318:
+.LBE319:
+.LBE320:
+.LBB321:
+.LBB322:
+.LBB323:
+	ldr	r3, .L524+4
+.LBE323:
+.LBE322:
+.LBE321:
+	.loc 1 170 0
+	mov	r2, #1
+	mov	r1, r2
+	sub	r0, fp, #104
+	.loc 1 169 0
+	str	r4, [fp, #-100]
+.LBB326:
+.LBB325:
+.LBB324:
+	.loc 1 202 0
+	str	r3, [r5]
+	str	r3, [r5, #4]
+.LBE324:
+.LBE325:
+.LBE326:
+	.loc 1 170 0
+	bl	FlashEraseBlocks
+.LVL462:
+	.loc 1 171 0
+	mov	r3, #1
+	sub	r0, fp, #104
+	mov	r2, r3
+	mov	r1, r3
+	bl	FlashProgPages
+.LVL463:
+	.loc 1 172 0
+	ldr	r4, [fp, #-104]
+	.loc 1 178 0
+	mov	r2, #1
+	mov	r1, #0
+	sub	r0, fp, #104
+	.loc 1 172 0
+	adds	r4, r4, #0
+	movne	r4, #1
+	rsb	r4, r4, #0
+	.loc 1 178 0
+	bl	FlashEraseBlocks
+.LVL464:
+.L521:
+.LBE314:
+.LBE313:
+	.loc 1 180 0
+	mov	r0, r4
+.LVL465:
+	sub	sp, fp, #20
+.LCFI211:
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L525:
+	.align	2
+.L524:
+	.word	ftl_temp_buf
+	.word	1515870810
+.LFE265:
+	.fnend
+	.size	FlashTestBlk, .-FlashTestBlk
+	.align	2
+	.global	FlashGetBadBlockList
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FlashGetBadBlockList, %function
+FlashGetBadBlockList:
+	.fnstart
+.LFB266:
+	.loc 1 183 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL466:
+	.movsp ip
+	mov	ip, sp
+.LCFI212:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI213:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI214:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 1 183 0
+.LBB337:
+.LBB338:
+.LBB339:
+	.loc 1 202 0
+	mov	r2, #256
+.LBE339:
+.LBE338:
+.LBE337:
+	.loc 1 183 0
+	mov	r5, r1
+.LBB344:
+.LBB342:
+.LBB340:
+	.loc 1 202 0
+	mov	r1, #255
+.LVL467:
+.LBE340:
+.LBE342:
+.LBE344:
+	.loc 1 183 0
+	mov	r4, r0
+.LBB345:
+.LBB343:
+.LBB341:
+	.loc 1 202 0
+	bl	memset
+.LVL468:
+.LBE341:
+.LBE343:
+.LBE345:
+	.loc 1 187 0
+	ldr	r3, .L533
+	mov	r1, r5
+	mov	r0, r4
+	ldr	r3, [r3]
+	blx	r3
+.LVL469:
+	uxth	r0, r0
+.LVL470:
+	.loc 1 188 0
+	cmp	r0, #50
+	bls	.L527
+.LBB346:
+.LBB347:
+.LBB348:
+	.loc 1 202 0
+	mov	r2, #256
+	mov	r1, #255
+	mov	r0, r4
+.LVL471:
+	bl	memset
+.LVL472:
+.LBE348:
+.LBE347:
+.LBE346:
+	.loc 1 190 0
+	mov	r0, #0
+.LVL473:
+.L527:
+	.loc 1 192 0
+	ldr	r3, .L533+4
+.LVL474:
+	ldrh	r3, [r3, #14]
+	cmp	r3, #4
+	moveq	r3, r4
+.LVL475:
+	addeq	r1, r3, r0, lsl #1
+	beq	.L529
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L530:
+	.loc 1 194 0 discriminator 3
+	ldrh	r2, [r3]
+	lsr	r2, r2, #1
+	strh	r2, [r3], #2	@ movhi
+.L529:
+	.loc 1 193 0 discriminator 1
+	cmp	r3, r1
+	bne	.L530
+.LVL476:
+	.loc 1 198 0
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L534:
+	.align	2
+.L533:
+	.word	g_nand_ops
+	.word	g_nand_phy_info
+.LFE266:
+	.fnend
+	.size	FlashGetBadBlockList, .-FlashGetBadBlockList
+	.align	2
+	.global	ftl_memset
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	ftl_memset, %function
+ftl_memset:
+	.fnstart
+.LFB267:
+	.loc 1 201 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL477:
+	.movsp ip
+	mov	ip, sp
+.LCFI215:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI216:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI217:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 1 201 0
+.LBB353:
+	.loc 1 202 0
+	cmp	r2, #0
+.LBE353:
+	.loc 1 201 0
+	mov	r4, r0
+.LBB354:
+	.loc 1 202 0
+	beq	.L536
+.LBE354:
+.LBB355:
+.LBB356:
+	bl	memset
+.LVL478:
+.L536:
+.LBE356:
+.LBE355:
+	.loc 1 203 0 discriminator 8
+	mov	r0, r4
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.LFE267:
+	.fnend
+	.size	ftl_memset, .-ftl_memset
+	.align	2
+	.global	FtlMemInit
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlMemInit, %function
+FtlMemInit:
+	.fnstart
+.LFB146:
+	.loc 3 279 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI218:
+	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
+.LCFI219:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI220:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 279 0
+	.loc 3 297 0
+	movw	r3, #65535
+	.loc 3 301 0
+	movw	r2, #3182
+	.loc 3 282 0
+	ldr	r4, .L641
+	mov	r5, #0
+	.loc 3 311 0
+	mov	r6, #12
+	.loc 3 312 0
+	mov	r7, #20
+	.loc 3 297 0
+	str	r3, [r4, #3784]
+	.loc 3 301 0
+	mvn	r3, #0
+	strh	r3, [r4, r2]	@ movhi
+	.loc 3 302 0
+	add	r2, r4, #3184
+	strh	r3, [r2]	@ movhi
+	.loc 3 303 0
+	mov	r2, #32
+	movw	r3, #3128
+	.loc 3 310 0
+	ldrh	r0, [r4, #82]
+	.loc 3 303 0
+	strh	r2, [r4, r3]	@ movhi
+	.loc 3 304 0
+	mov	r2, #128
+	movw	r3, #3130
+	.loc 3 282 0
+	str	r5, [r4, #2472]
+	.loc 3 304 0
+	strh	r2, [r4, r3]	@ movhi
+	.loc 3 305 0
+	add	r3, r4, #3136
+	strh	r5, [r3]	@ movhi
+	.loc 3 306 0
+	movw	r3, #3186
+	strh	r5, [r4, r3]	@ movhi
+	.loc 3 310 0
+	lsl	r0, r0, #1
+	.loc 3 307 0
+	movw	r3, #3222
+	.loc 3 283 0
+	str	r5, [r4, #2476]
+	.loc 3 307 0
+	strh	r5, [r4, r3]	@ movhi
+	.loc 3 284 0
+	str	r5, [r4, #2460]
+	.loc 3 285 0
+	str	r5, [r4, #2448]
+	.loc 3 286 0
+	str	r5, [r4, #2444]
+	.loc 3 287 0
+	str	r5, [r4, #2452]
+	.loc 3 288 0
+	str	r5, [r4, #2456]
+	.loc 3 289 0
+	str	r5, [r4, #2440]
+	.loc 3 290 0
+	str	r5, [r4, #2480]
+	.loc 3 291 0
+	str	r5, [r4, #2484]
+	.loc 3 292 0
+	str	r5, [r4, #2492]
+	.loc 3 293 0
+	str	r5, [r4, #2496]
+	.loc 3 294 0
+	str	r5, [r4, #2500]
+	.loc 3 295 0
+	str	r5, [r4, #3780]
+	.loc 3 296 0
+	str	r5, [r4, #3140]
+	.loc 3 298 0
+	str	r5, [r4, #3788]
+	.loc 3 299 0
+	str	r5, [r4, #3132]
+	.loc 3 300 0
+	str	r5, [r4, #3764]
+	.loc 3 310 0
+	bl	ftl_malloc
+.LVL479:
+	str	r0, [r4, #3168]
+	.loc 3 311 0
+	ldrh	r0, [r4, #82]
+	mul	r0, r6, r0
+	bl	ftl_malloc
+.LVL480:
+	.loc 3 312 0
+	ldrh	r3, [r4, #8]
+	.loc 3 311 0
+	str	r0, [r4, #3176]
+	.loc 3 312 0
+	mul	r7, r7, r3
+	.loc 3 313 0
+	lsl	r8, r7, #2
+	mov	r0, r8
+	bl	ftl_malloc
+.LVL481:
+	str	r0, [r4, #3792]
+	.loc 3 314 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL482:
+	str	r0, [r4, #3796]
+	.loc 3 315 0
+	mov	r0, r8
+	bl	ftl_malloc
+.LVL483:
+	str	r0, [r4, #3800]
+	.loc 3 316 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL484:
+	str	r0, [r4, #3760]
+	.loc 3 317 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL485:
+	.loc 3 320 0
+	ldrh	r3, [r4, #8]
+	.loc 3 319 0
+	ldrh	r7, [r4, #86]
+	.loc 3 317 0
+	str	r0, [r4, #3160]
+	.loc 3 320 0
+	lsl	r3, r3, #1
+	.loc 3 321 0
+	mov	r0, r7
+	.loc 3 320 0
+	add	r3, r3, #1
+	str	r3, [r4, #3164]
+	.loc 3 321 0
+	bl	ftl_malloc
+.LVL486:
+	str	r0, [r4, #2244]
+	.loc 3 322 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL487:
+	str	r0, [r4, #3804]
+	.loc 3 323 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL488:
+	str	r0, [r4, #3808]
+	.loc 3 324 0
+	ldr	r0, [r4, #3164]
+	mul	r0, r0, r7
+	bl	ftl_malloc
+.LVL489:
+	str	r0, [r4, #3152]
+	.loc 3 325 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL490:
+	str	r0, [r4, #3776]
+	.loc 3 326 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL491:
+	str	r0, [r4, #3768]
+	.loc 3 327 0
+	ldr	r0, [r4, #3164]
+	mul	r0, r6, r0
+	bl	ftl_malloc
+.LVL492:
+	.loc 3 329 0
+	ldrh	r3, [r4, #88]
+	ldrh	r7, [r4, #8]
+	.loc 3 327 0
+	str	r0, [r4, #3148]
+	.loc 3 329 0
+	mul	r7, r7, r3
+	.loc 3 330 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL493:
+	str	r0, [r4, #3244]
+	.loc 3 331 0
+	lsl	r0, r7, #2
+	.loc 3 335 0
+	movw	r7, #3812
+	.loc 3 331 0
+	bl	ftl_malloc
+.LVL494:
+	.loc 3 332 0
+	ldrh	r3, [r4, #88]
+	.loc 3 331 0
+	str	r0, [r4, #3772]
+	.loc 3 332 0
+	ldr	r0, [r4, #3164]
+	mul	r0, r0, r3
+	bl	ftl_malloc
+.LVL495:
+	str	r0, [r4, #3156]
+	.loc 3 335 0
+	ldrh	r0, [r4, #18]
+	lsl	r0, r0, #1
+	uxth	r0, r0
+	strh	r0, [r4, r7]	@ movhi
+	.loc 3 336 0
+	bl	ftl_malloc
+.LVL496:
+	str	r0, [r4, #3816]
+	.loc 3 337 0
+	ldrh	r0, [r4, r7]
+	.loc 3 338 0
+	ldr	r3, .L641+4
+	.loc 3 337 0
+	add	r0, r0, #544
+	add	r0, r0, #3
+	lsr	r0, r0, #9
+	strh	r0, [r4, r7]	@ movhi
+	.loc 3 338 0
+	and	r0, r3, r0, lsl #9
+	bl	ftl_malloc
+.LVL497:
+	.loc 3 345 0
+	ldrh	r7, [r4, #18]
+	.loc 3 338 0
+	str	r0, [r4, #3820]
+	.loc 3 339 0
+	add	r0, r0, #32
+	str	r0, [r4, #2248]
+	.loc 3 345 0
+	lsl	r7, r7, #1
+	.loc 3 347 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL498:
+	str	r0, [r4, #3824]
+	.loc 3 349 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL499:
+	.loc 3 350 0
+	ldr	r7, [r4, #104]
+	.loc 3 349 0
+	str	r0, [r4, #2260]
+	.loc 3 350 0
+	lsl	r7, r7, #1
+	.loc 3 351 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL500:
+	str	r0, [r4, #3828]
+	.loc 3 352 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL501:
+	str	r0, [r4, #3832]
+	.loc 3 353 0
+	ldrh	r0, [r4, #18]
+	lsr	r0, r0, #3
+	add	r0, r0, #4
+	bl	ftl_malloc
+.LVL502:
+	str	r0, [r4]
+	.loc 3 354 0
+	ldrh	r0, [r4, #96]
+	lsl	r0, r0, #1
+	bl	ftl_malloc
+.LVL503:
+	str	r0, [r4, #124]
+	.loc 3 355 0
+	ldrh	r0, [r4, #96]
+	lsl	r0, r0, #1
+	bl	ftl_malloc
+.LVL504:
+	str	r0, [r4, #3836]
+	.loc 3 356 0
+	ldrh	r0, [r4, #96]
+	lsl	r0, r0, #2
+	bl	ftl_malloc
+.LVL505:
+	str	r0, [r4, #3840]
+	.loc 3 357 0
+	ldrh	r0, [r4, #98]
+	lsl	r0, r0, #2
+	bl	ftl_malloc
+.LVL506:
+	.loc 3 358 0
+	ldrh	r2, [r4, #98]
+	mov	r1, r5
+	.loc 3 357 0
+	str	r0, [r4, #3844]
+	.loc 3 370 0
+	movw	r5, #3860
+	.loc 3 358 0
+	lsl	r2, r2, #2
+	bl	ftl_memset
+.LVL507:
+	.loc 3 360 0
+	ldrh	r0, [r4, #112]
+	.loc 3 361 0
+	lsl	r0, r0, #2
+	bl	ftl_malloc
+.LVL508:
+	str	r0, [r4, #3848]
+	.loc 3 362 0
+	ldr	r0, [r4, #104]
+	.loc 3 363 0
+	lsl	r0, r0, #2
+	bl	ftl_malloc
+.LVL509:
+	str	r0, [r4, #3852]
+	.loc 3 364 0
+	ldrh	r0, [r4, #114]
+	.loc 3 365 0
+	mul	r0, r6, r0
+	bl	ftl_malloc
+.LVL510:
+	.loc 3 366 0
+	ldrh	r3, [r4, #114]
+	.loc 3 365 0
+	str	r0, [r4, #2424]
+	.loc 3 366 0
+	ldrh	r0, [r4, #86]
+	.loc 3 367 0
+	mul	r0, r0, r3
+	bl	ftl_malloc
+.LVL511:
+	.loc 3 368 0
+	ldrh	r3, [r4, #18]
+	.loc 3 367 0
+	str	r0, [r4, #3856]
+	.loc 3 369 0
+	mov	r0, #6
+	mul	r0, r0, r3
+	bl	ftl_malloc
+.LVL512:
+	str	r0, [r4, #2252]
+	.loc 3 370 0
+	ldrh	r0, [r4, #74]
+	.loc 3 371 0
+	ldrh	r3, [r4, #30]
+	.loc 3 370 0
+	add	r0, r0, #31
+	asr	r0, r0, #5
+	strh	r0, [r4, r5]	@ movhi
+	.loc 3 371 0
+	mul	r0, r0, r3
+	.loc 3 372 0
+	lsl	r0, r0, #2
+	bl	ftl_malloc
+.LVL513:
+	.loc 3 374 0
+	ldrh	r2, [r4, r5]
+	add	ip, r4, #156
+	.loc 3 373 0
+	ldrh	lr, [r4, #30]
+	mov	r3, #1
+.LVL514:
+	.loc 3 372 0
+	str	r0, [r4, #156]
+	lsl	r2, r2, #2
+	.loc 3 373 0
+	mov	r1, r2
+.L541:
+	.loc 3 373 0 is_stmt 0 discriminator 1
+	cmp	r3, lr
+	bcc	.L542
+	ldr	r2, .L641+8
+	.loc 3 379 0 is_stmt 1
+	mov	r1, #0
+	add	r3, r2, r3, lsl #2
+.LVL515:
+	add	r2, r2, #56
+	add	r3, r3, #24
+.L543:
+	.loc 3 377 0 discriminator 1
+	cmp	r2, r3
+	bne	.L544
+	.loc 3 383 0
+	ldr	r3, [r4, #3828]
+	cmp	r3, #0
+	bne	.L545
+.L547:
+	.loc 3 385 0
+	ldr	r1, .L641+12
+	ldr	r0, .L641+16
+	bl	printk
+.LVL516:
+	.loc 3 386 0
+	mvn	r0, #0
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
+.LVL517:
+.L542:
+	.loc 3 374 0 discriminator 3
+	ldr	r0, [r4, #156]
+	.loc 3 373 0 discriminator 3
+	add	r3, r3, #1
+	.loc 3 374 0 discriminator 3
+	add	r0, r0, r1
+	add	r1, r1, r2
+	str	r0, [ip, #4]!
+	b	.L541
+.LVL518:
+.L544:
+	.loc 3 379 0 discriminator 2
+	str	r1, [r3, #4]!
+	b	.L543
+.L545:
+	.loc 3 388 0
+	ldr	r3, [r4, #3832]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 393 0
+	ldr	r3, [r4, #3848]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 398 0
+	ldr	r3, [r4, #3852]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 404 0
+	ldr	r3, [r4, #2424]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 409 0
+	ldr	r3, [r4, #3856]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 414 0
+	ldr	r3, [r4, #2252]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 419 0
+	ldr	r3, [r4, #156]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 425 0
+	ldr	r3, [r4, #2260]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 430 0
+	ldr	r3, [r4, #3168]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 430 0 is_stmt 0 discriminator 1
+	ldr	r3, [r4, #3176]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 435 0 is_stmt 1
+	ldr	r3, [r4, #3792]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 435 0 is_stmt 0 discriminator 1
+	ldr	r3, [r4, #3800]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 435 0 discriminator 2
+	ldr	r3, [r4, #3760]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 435 0 discriminator 3
+	ldr	r3, [r4, #3160]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 435 0 discriminator 4
+	ldr	r3, [r4, #3796]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 440 0 is_stmt 1
+	ldr	r3, [r4, #2244]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 440 0 is_stmt 0 discriminator 1
+	ldr	r3, [r4, #3804]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 440 0 discriminator 2
+	ldr	r3, [r4, #3808]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 440 0 discriminator 3
+	ldr	r3, [r4, #3152]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 441 0 is_stmt 1
+	ldr	r3, [r4, #3776]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 441 0 is_stmt 0 discriminator 1
+	ldr	r3, [r4, #3768]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 441 0 discriminator 2
+	ldr	r3, [r4, #3148]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 446 0 is_stmt 1
+	ldr	r3, [r4, #3244]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 446 0 is_stmt 0 discriminator 1
+	ldr	r3, [r4, #3772]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 446 0 discriminator 2
+	ldr	r3, [r4, #3156]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 452 0 is_stmt 1
+	ldr	r3, [r4, #2248]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 452 0 is_stmt 0 discriminator 1
+	ldr	r3, [r4, #3816]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 458 0 is_stmt 1
+	ldr	r3, [r4, #124]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 464 0
+	ldr	r3, .L641
+	ldr	r2, [r3, #3836]
+	cmp	r2, #0
+	beq	.L547
+	.loc 3 470 0
+	ldr	r2, [r3, #3840]
+	cmp	r2, #0
+	beq	.L547
+	.loc 3 476 0
+	ldr	r3, [r3, #3844]
+	cmp	r3, #0
+	beq	.L547
+	.loc 3 483 0
+	mov	r0, #0
+	.loc 3 484 0
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
+.L642:
+	.align	2
+.L641:
+	.word	.LANCHOR0
+	.word	33553920
+	.word	.LANCHOR0+128
+	.word	.LANCHOR1+186
+	.word	.LC78
+.LFE146:
+	.fnend
+	.size	FtlMemInit, .-FtlMemInit
+	.align	2
+	.global	FtlBbt2Bitmap
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlBbt2Bitmap, %function
+FtlBbt2Bitmap:
+	.fnstart
+.LFB165:
+	.loc 4 66 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL519:
+	.movsp ip
+	mov	ip, sp
+.LCFI221:
+	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
+.LCFI222:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI223:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 4 66 0
+	.loc 4 69 0
+	movw	r3, #3860
+	.loc 4 66 0
+	mov	r4, r0
+	.loc 4 69 0
+	ldr	r6, .L649
+	sub	r5, r4, #2
+	.loc 4 74 0
+	ldr	r8, .L649+4
+	add	r4, r4, #1020
+	ldr	r9, .L649+8
+	.loc 4 66 0
+	mov	r7, r1
+	.loc 4 69 0
+	ldrh	r2, [r6, r3]
+	add	r4, r4, #2
+	mov	r1, #0
+.LVL520:
+	mov	r0, r7
+.LVL521:
+	lsl	r2, r2, #2
+	bl	ftl_memset
+.LVL522:
+.L646:
+	.loc 4 72 0
+	ldrh	r3, [r5, #2]
+	movw	r2, #65535
+	cmp	r3, r2
+	ldmfdeq	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
+	.loc 4 74 0
+	ldrh	r2, [r6, #74]
+	cmp	r2, r3
+	bhi	.L645
+	.loc 4 74 0 is_stmt 0 discriminator 1
+	mov	r2, #74
+	mov	r1, r8
+	mov	r0, r9
+	bl	printk
+.LVL523:
+.L645:
+	.loc 4 75 0 is_stmt 1 discriminator 2
+	ldrh	r3, [r5, #2]!
+	mov	r0, #1
+	.loc 4 70 0 discriminator 2
+	cmp	r4, r5
+	.loc 4 75 0 discriminator 2
+	lsr	r1, r3, #5
+	and	r3, r3, #31
+	ldr	r2, [r7, r1, lsl #2]
+	orr	r3, r2, r0, lsl r3
+	str	r3, [r7, r1, lsl #2]
+	.loc 4 70 0 discriminator 2
+	bne	.L646
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
+.L650:
+	.align	2
+.L649:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+197
+	.word	.LC1
+.LFE165:
+	.fnend
+	.size	FtlBbt2Bitmap, .-FtlBbt2Bitmap
+	.align	2
+	.global	load_l2p_region
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	load_l2p_region, %function
+load_l2p_region:
+	.fnstart
+.LFB193:
+	.loc 2 442 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL524:
+	.movsp ip
+	mov	ip, sp
+.LCFI224:
+	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
+.LCFI225:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI226:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 442 0
+	mov	r6, r0
+	mov	r8, r1
+	.loc 2 446 0
+	ldr	r4, .L657
+	ldrh	r3, [r4, #112]
+	cmp	r3, r0
+	bcs	.L652
+	.loc 2 446 0 is_stmt 0 discriminator 1
+	movw	r2, #446
+	ldr	r1, .L657+4
+	ldr	r0, .L657+8
+	bl	printk
+.LVL525:
+.L652:
+	.loc 2 447 0 is_stmt 1
+	ldr	r3, [r4, #3848]
+	mov	r5, #12
+	ldr	r7, [r3, r6, lsl #2]
+.LVL526:
+	.loc 2 449 0
+	cmp	r7, #0
+	bne	.L653
+	.loc 2 450 0
+	mul	r5, r5, r8
+	ldr	r3, [r4, #2424]
+	ldrh	r2, [r4, #86]
+	mov	r1, #255
+	add	r3, r3, r5
+	ldr	r0, [r3, #8]
+	bl	ftl_memset
+.LVL527:
+	.loc 2 451 0
+	ldr	r3, [r4, #2424]
+	strh	r6, [r3, r5]	@ movhi
+	.loc 2 452 0
+	ldr	r3, [r4, #2424]
+	add	r5, r3, r5
+	str	r7, [r5, #4]
+.LVL528:
+.L654:
+	.loc 2 473 0
+	mov	r0, #0
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
+.LVL529:
+.L653:
+	.loc 2 456 0
+	mul	r5, r5, r8
+	ldr	r3, [r4, #2424]
+	.loc 2 458 0
+	mov	r2, #1
+	ldr	r0, .L657+12
+	mov	r1, r2
+	.loc 2 455 0
+	str	r7, [r4, #3228]
+	.loc 2 456 0
+	add	r3, r3, r5
+	ldr	r3, [r3, #8]
+	str	r3, [r4, #3232]
+	.loc 2 457 0
+	ldr	r3, [r4, #3244]
+	str	r3, [r4, #3236]
+	.loc 2 458 0
+	bl	FlashReadPages
+.LVL530:
+	.loc 2 459 0
+	ldr	r8, [r4, #3236]
+.LVL531:
+	.loc 2 461 0
+	ldrh	r3, [r8, #8]
+	cmp	r3, r6
+	beq	.L655
+	.loc 2 462 0
+	mov	r2, r7
+	mov	r1, r6
+	ldr	r0, .L657+16
+	bl	printk
+.LVL532:
+	.loc 2 463 0
+	mov	r3, #4
+	ldr	r1, [r4, #3236]
+	mov	r2, r3
+	ldr	r0, .L657+20
+	bl	rknand_print_hex
+.LVL533:
+	.loc 2 464 0
+	ldrh	r3, [r4, #112]
+	mov	r2, #4
+	ldr	r1, [r4, #3848]
+	ldr	r0, .L657+24
+	bl	rknand_print_hex
+.LVL534:
+.L655:
+	.loc 2 467 0
+	ldrh	r3, [r8, #8]
+	cmp	r3, r6
+	beq	.L656
+	.loc 2 467 0 is_stmt 0 discriminator 1
+	movw	r2, #467
+	ldr	r1, .L657+4
+	ldr	r0, .L657+8
+	bl	printk
+.LVL535:
+.L656:
+	.loc 2 470 0 is_stmt 1
+	ldr	r3, [r4, #2424]
+	mov	r1, #0
+	add	r2, r3, r5
+	str	r1, [r2, #4]
+	.loc 2 471 0
+	strh	r6, [r3, r5]	@ movhi
+	.loc 2 472 0
+	b	.L654
+.L658:
+	.align	2
+.L657:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+211
+	.word	.LC1
+	.word	.LANCHOR0+3224
+	.word	.LC79
+	.word	.LC80
+	.word	.LC81
+.LFE193:
+	.fnend
+	.size	load_l2p_region, .-load_l2p_region
+	.align	2
+	.global	ftl_free_no_use_map_blk
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	ftl_free_no_use_map_blk, %function
+ftl_free_no_use_map_blk:
+	.fnstart
+.LFB194:
+	.loc 2 476 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL536:
+	.movsp ip
+	mov	ip, sp
+.LCFI227:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI228:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI229:
+	.pad #12
+	sub	sp, sp, #12
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 476 0
+	.loc 2 485 0
+	ldrh	r2, [r0, #10]
+	.loc 2 476 0
+	mov	r4, r0
+	.loc 2 479 0
+	ldr	r5, [r0, #20]
+.LVL537:
+	.loc 2 485 0
+	mov	r1, #0
+	.loc 2 477 0
+	ldr	r9, [r0, #12]
+.LVL538:
+	.loc 2 478 0
+	ldr	r6, [r0, #24]
+.LVL539:
+	.loc 2 485 0
+	lsl	r2, r2, #1
+	mov	r0, r5
+.LVL540:
+	bl	ftl_memset
+.LVL541:
+	.loc 2 486 0
+	mov	r2, #0
+.LVL542:
+.L660:
+	.loc 2 486 0 is_stmt 0 discriminator 1
+	ldrh	r1, [r4, #6]
+	uxth	r3, r2
+	cmp	r1, r3
+	bhi	.L664
+	.loc 2 494 0 is_stmt 1
+	ldrh	r3, [r5]
+.LVL543:
+	.loc 2 497 0
+	mov	r7, #0
+	.loc 2 498 0
+	ldr	r2, .L673
+	.loc 2 495 0
+	mov	r10, r7
+.LVL544:
+.L665:
+	.loc 2 497 0 discriminator 1
+	ldrh	r0, [r4, #10]
+.LVL545:
+	uxth	r1, r7
+	cmp	r0, r1
+	bhi	.L669
+	.loc 2 513 0
+	mov	r0, r10
+	sub	sp, fp, #40
+.LCFI230:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL546:
+.L664:
+.LCFI231:
+	.loc 2 487 0
+	uxth	r3, r2
+	.loc 2 488 0
+	mov	r1, #0
+	.loc 2 487 0
+	ldr	r0, [r6, r3, lsl #2]
+.LVL547:
+	ubfx	r0, r0, #10, #16
+.LVL548:
+.L661:
+	.loc 2 488 0 discriminator 1
+	ldrh	ip, [r4, #10]
+	uxth	r3, r1
+	cmp	ip, r3
+	addls	r2, r2, #1
+	bls	.L660
+.L663:
+	.loc 2 489 0
+	uxth	r3, r1
+	add	r1, r1, #1
+	lsl	r3, r3, #1
+	ldrh	ip, [r9, r3]
+	cmp	ip, r0
+	.loc 2 490 0
+	ldrheq	ip, [r5, r3]
+	addeq	ip, ip, #1
+	strheq	ip, [r5, r3]	@ movhi
+	b	.L661
+.LVL549:
+.L669:
+	.loc 2 498 0
+	ldrh	r0, [r4]
+	uxth	r6, r7
+.LVL550:
+	cmp	r0, r1
+	bne	.L666
+	.loc 2 498 0 is_stmt 0 discriminator 1
+	ldrh	ip, [r4, #2]
+	ldrh	r0, [r2, #80]
+	cmp	ip, r0
+	.loc 2 499 0 is_stmt 1 discriminator 1
+	lslcc	ip, r6, #1
+	strhcc	r0, [r5, ip]	@ movhi
+.L666:
+	.loc 2 500 0
+	lsl	r6, r6, #1
+	ldrh	r8, [r5, r6]
+	cmp	r3, r8
+	movhi	r10, r1
+	movhi	r3, r8
+	.loc 2 504 0
+	cmp	r8, #0
+	bne	.L668
+	.loc 2 504 0 is_stmt 0 discriminator 1
+	ldrh	r0, [r9, r6]
+	cmp	r0, #0
+	beq	.L668
+	.loc 2 506 0 is_stmt 1
+	mov	r1, #1
+	str	r2, [fp, #-52]
+	str	r3, [fp, #-48]
+	bl	FtlFreeSysBlkQueueIn
+.LVL551:
+	.loc 2 507 0
+	strh	r8, [r9, r6]	@ movhi
+	.loc 2 508 0
+	ldr	r2, [fp, #-52]
+	ldrh	r1, [r4, #8]
+	ldr	r3, [fp, #-48]
+.LVL552:
+	sub	r1, r1, #1
+	strh	r1, [r4, #8]	@ movhi
+.L668:
+	add	r7, r7, #1
+	b	.L665
+.L674:
+	.align	2
+.L673:
+	.word	.LANCHOR0
+.LFE194:
+	.fnend
+	.size	ftl_free_no_use_map_blk, .-ftl_free_no_use_map_blk
+	.align	2
+	.global	Ftl_write_map_blk_to_last_page
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	Ftl_write_map_blk_to_last_page, %function
+Ftl_write_map_blk_to_last_page:
+	.fnstart
+.LFB197:
+	.loc 2 583 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL553:
+	.movsp ip
+	mov	ip, sp
+.LCFI232:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI233:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI234:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 583 0
+	.loc 2 591 0
+	movw	r2, #65535
+	.loc 2 583 0
+	mov	r4, r0
+	.loc 2 591 0
+	ldrh	r3, [r0]
+	.loc 2 586 0
+	ldr	r5, [r0, #12]
+.LVL554:
+	.loc 2 591 0
+	cmp	r3, r2
+	bne	.L676
+	.loc 2 592 0
+	ldrh	r3, [r0, #8]
+	cmp	r3, #0
+	beq	.L677
+	.loc 2 592 0 is_stmt 0 discriminator 1
+	mov	r2, #592
+	ldr	r1, .L685
+	ldr	r0, .L685+4
+	bl	printk
+.LVL555:
+.L677:
+	.loc 2 593 0 is_stmt 1
+	ldrh	r3, [r4, #8]
+	add	r3, r3, #1
+	strh	r3, [r4, #8]	@ movhi
+	.loc 2 594 0
+	bl	FtlFreeSysBlkQueueOut
+.LVL556:
+	.loc 2 595 0
+	mov	r3, #0
+	.loc 2 594 0
+	strh	r0, [r5]	@ movhi
+	.loc 2 595 0
+	strh	r3, [r4, #2]	@ movhi
+	.loc 2 596 0
+	strh	r3, [r4]	@ movhi
+	.loc 2 597 0
+	ldr	r3, [r4, #28]
+	add	r3, r3, #1
+	str	r3, [r4, #28]
+.LVL557:
+.L678:
+	.loc 2 628 0
+	mov	r0, #0
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.LVL558:
+.L676:
+	.loc 2 601 0
+	lsl	r3, r3, #1
+	.loc 2 607 0
+	ldr	r2, [r0, #28]
+	.loc 2 587 0
+	ldr	r6, [r0, #24]
+.LVL559:
+	.loc 2 612 0
+	mov	r1, #255
+	.loc 2 601 0
+	ldrh	r7, [r5, r3]
+	.loc 2 602 0
+	ldrh	r3, [r0, #2]
+	ldr	r5, .L685+8
+.LVL560:
+	orr	r3, r3, r7, lsl #10
+	str	r3, [r5, #3228]
+	.loc 2 603 0
+	ldr	r3, [r5, #2244]
+	str	r3, [r5, #3232]
+	.loc 2 604 0
+	ldr	r3, [r5, #3244]
+	str	r3, [r5, #3236]
+	.loc 2 607 0
+	str	r2, [r3, #4]
+	.loc 2 608 0
+	ldr	r2, .L685+12
+	strh	r2, [r3, #8]	@ movhi
+	.loc 2 609 0
+	ldrh	r2, [r0, #4]
+	.loc 2 610 0
+	strh	r7, [r3, #2]	@ movhi
+	.loc 2 609 0
+	strh	r2, [r3]	@ movhi
+	.loc 2 612 0
+	ldrh	r2, [r5, #80]
+	ldr	r0, [r5, #2244]
+.LVL561:
+	lsl	r2, r2, #3
+	bl	ftl_memset
+.LVL562:
+	.loc 2 614 0
+	mov	r2, #0
+	.loc 2 613 0
+	mov	r3, r2
+.LVL563:
+.L679:
+	.loc 2 614 0 discriminator 1
+	ldrh	r0, [r4, #6]
+	uxth	r1, r2
+	cmp	r0, r1
+	bhi	.L681
+	.loc 2 621 0
+	mov	r2, #1
+	mov	r3, #0
+.LVL564:
+	mov	r1, r2
+	ldr	r0, .L685+16
+	bl	FlashProgPages
+.LVL565:
+	.loc 2 622 0
+	ldrh	r3, [r4, #2]
+	.loc 2 626 0
+	mov	r0, r4
+	.loc 2 622 0
+	add	r3, r3, #1
+	strh	r3, [r4, #2]	@ movhi
+	.loc 2 626 0
+	bl	ftl_map_blk_gc
+.LVL566:
+	.loc 2 627 0
+	b	.L678
+.LVL567:
+.L681:
+	uxth	r1, r2
+	.loc 2 615 0
+	ldr	r0, [r6, r1, lsl #2]
+	cmp	r7, r0, lsr #10
+	bne	.L680
+	.loc 2 617 0
+	ldr	r0, [r5, #2244]
+	.loc 2 616 0
+	add	r3, r3, #1
+.LVL568:
+	uxth	r3, r3
+.LVL569:
+	.loc 2 617 0
+	str	r1, [r0, r3, lsl #3]
+	.loc 2 618 0
+	ldr	r0, [r6, r1, lsl #2]
+	ldr	r1, [r5, #2244]
+	add	r1, r1, r3, lsl #3
+	str	r0, [r1, #4]
+.L680:
+	add	r2, r2, #1
+	b	.L679
+.L686:
+	.align	2
+.L685:
+	.word	.LANCHOR1+227
+	.word	.LC1
+	.word	.LANCHOR0
+	.word	-1291
+	.word	.LANCHOR0+3224
+.LFE197:
+	.fnend
+	.size	Ftl_write_map_blk_to_last_page, .-Ftl_write_map_blk_to_last_page
+	.align	2
+	.global	FtlMapWritePage
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlMapWritePage, %function
+FtlMapWritePage:
+	.fnstart
+.LFB198:
+	.loc 2 631 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL570:
+	.movsp ip
+	mov	ip, sp
+.LCFI235:
+	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI236:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI237:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 631 0
+	.loc 2 634 0
+	mov	r6, #0
+.LVL571:
+	.loc 2 631 0
+	mov	r4, r0
+	.loc 2 637 0
+	ldr	r7, .L706
+	.loc 2 631 0
+	mov	r8, r1
+	mov	r9, r2
+	mov	r5, r7
+.L688:
+	.loc 2 637 0
+	ldr	r3, [r7, #2456]
+	add	r3, r3, #1
+	str	r3, [r7, #2456]
+	.loc 2 638 0
+	ldrh	r3, [r7, #80]
+	ldrh	r2, [r4, #2]
+	sub	r3, r3, #1
+	cmp	r2, r3
+	bge	.L689
+	.loc 2 638 0 is_stmt 0 discriminator 1
+	ldrh	r2, [r4]
+	movw	r3, #65535
+	cmp	r2, r3
+	bne	.L690
+.L689:
+	.loc 2 639 0 is_stmt 1
+	mov	r0, r4
+	bl	Ftl_write_map_blk_to_last_page
+.LVL572:
+.L690:
+	.loc 2 650 0
+	ldrh	r3, [r4]
+	ldr	r2, [r4, #12]
+	lsl	r3, r3, #1
+	ldrh	r3, [r2, r3]
+	cmp	r3, #0
+	bne	.L691
+	.loc 2 650 0 is_stmt 0 discriminator 1
+	movw	r2, #650
+	ldr	r1, .L706+4
+	ldr	r0, .L706+8
+	bl	printk
+.LVL573:
+.L691:
+	.loc 2 651 0 is_stmt 1
+	ldrh	r2, [r4]
+	ldrh	r3, [r4, #10]
+	cmp	r2, r3
+	bcc	.L692
+	.loc 2 651 0 is_stmt 0 discriminator 1
+	movw	r2, #651
+	ldr	r1, .L706+4
+	ldr	r0, .L706+8
+	bl	printk
+.LVL574:
+.L692:
+	.loc 2 652 0 is_stmt 1
+	ldrh	r3, [r4]
+.LBB362:
+.LBB363:
+.LBB364:
+	.loc 1 202 0
+	mov	r1, #16
+.LBE364:
+.LBE363:
+.LBE362:
+	.loc 2 652 0
+	ldr	r2, [r4, #12]
+	.loc 2 656 0
+	ldr	r0, [r5, #3244]
+	.loc 2 652 0
+	lsl	r3, r3, #1
+	ldrh	r10, [r2, r3]
+	.loc 2 654 0
+	ldrh	r3, [r4, #2]
+	.loc 2 656 0
+	str	r0, [r5, #3236]
+	.loc 2 655 0
+	str	r9, [r5, #3232]
+	.loc 2 654 0
+	orr	r3, r3, r10, lsl #10
+	str	r3, [r5, #3228]
+.LBB367:
+.LBB366:
+.LBB365:
+	.loc 1 202 0
+	bl	__memzero
+.LVL575:
+.LBE365:
+.LBE366:
+.LBE367:
+	.loc 2 659 0
+	ldr	r3, [r5, #3236]
+.LVL576:
+	.loc 2 660 0
+	ldr	r2, [r4, #28]
+	.loc 2 664 0
+	ldr	r0, .L706+12
+	.loc 2 661 0
+	strh	r8, [r3, #8]	@ movhi
+	.loc 2 660 0
+	str	r2, [r3, #4]
+	.loc 2 662 0
+	ldrh	r2, [r4, #4]
+	.loc 2 663 0
+	strh	r10, [r3, #2]	@ movhi
+	.loc 2 662 0
+	strh	r2, [r3]	@ movhi
+	.loc 2 664 0
+	mov	r3, #1
+.LVL577:
+	mov	r2, r3
+	mov	r1, r3
+	bl	FlashProgPages
+.LVL578:
+	.loc 2 665 0
+	ldrh	r3, [r4, #2]
+	add	r3, r3, #1
+	uxth	r3, r3
+	strh	r3, [r4, #2]	@ movhi
+	.loc 2 667 0
+	ldr	r2, [r5, #3224]
+	cmn	r2, #1
+	bne	.L693
+	.loc 2 668 0
+	ldr	r1, [r5, #3228]
+	.loc 2 669 0
+	add	r6, r6, #1
+.LVL579:
+	.loc 2 668 0
+	ldr	r0, .L706+16
+	.loc 2 669 0
+	uxth	r6, r6
+.LVL580:
+	.loc 2 668 0
+	bl	printk
+.LVL581:
+	.loc 2 670 0
+	ldrh	r3, [r4, #2]
+	cmp	r3, #2
+	.loc 2 671 0
+	ldrhls	r3, [r5, #80]
+	subls	r3, r3, #1
+	strhls	r3, [r4, #2]	@ movhi
+	.loc 2 673 0
+	cmp	r6, #3
+	bls	.L695
+	.loc 2 674 0
+	mov	r2, r6
+	ldr	r1, [r5, #3228]
+	ldr	r0, .L706+20
+	bl	printk
+.LVL582:
+.L696:
+	b	.L696
+.L695:
+	.loc 2 678 0
+	ldr	r3, [r4, #32]
+	cmp	r3, #0
+	beq	.L688
+.L705:
+	b	.L705
+.L693:
+	.loc 2 682 0
+	cmp	r3, #1
+	beq	.L688
+	.loc 2 685 0
+	ldr	r2, [r5, #3228]
+	.loc 2 687 0
+	mov	r0, #0
+	.loc 2 685 0
+	ldr	r3, [r4, #24]
+	str	r2, [r3, r8, lsl #2]
+	.loc 2 687 0
+	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.L707:
+	.align	2
+.L706:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+258
+	.word	.LC1
+	.word	.LANCHOR0+3224
+	.word	.LC82
+	.word	.LC83
+.LFE198:
+	.fnend
+	.size	FtlMapWritePage, .-FtlMapWritePage
+	.align	2
+	.global	ftl_map_blk_gc
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	ftl_map_blk_gc, %function
+ftl_map_blk_gc:
+	.fnstart
+.LFB196:
+	.loc 2 537 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL583:
+	.movsp ip
+	mov	ip, sp
+.LCFI238:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI239:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI240:
+	.pad #12
+	sub	sp, sp, #12
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 537 0
+	mov	r4, r0
+	.loc 2 541 0
+	ldr	r6, [r0, #12]
+.LVL584:
+	.loc 2 542 0
+	ldr	r9, [r0, #24]
+.LVL585:
+	.loc 2 545 0
+	bl	ftl_free_no_use_map_blk
+.LVL586:
+	.loc 2 547 0
+	ldrh	r3, [r4, #10]
+	ldrh	r2, [r4, #8]
+	ldr	r5, .L720
+	sub	r3, r3, #4
+	cmp	r2, r3
+	blt	.L709
+	.loc 2 548 0
+	uxth	r0, r0
+	lsl	r0, r0, #1
+	ldrh	r8, [r6, r0]
+.LVL587:
+	.loc 2 549 0
+	cmp	r8, #0
+	beq	.L709
+	.loc 2 549 0 is_stmt 0 discriminator 1
+	ldr	r3, [r4, #32]
+	cmp	r3, #0
+	bne	.L709
+	.loc 2 550 0 is_stmt 1
+	mov	r2, #1
+	str	r2, [r4, #32]
+	.loc 2 551 0
+	strh	r3, [r6, r0]	@ movhi
+	.loc 2 552 0
+	ldrh	r3, [r4, #8]
+	.loc 2 553 0
+	ldrh	r2, [r4, #2]
+	.loc 2 552 0
+	sub	r3, r3, #1
+	strh	r3, [r4, #8]	@ movhi
+	.loc 2 553 0
+	ldrh	r3, [r5, #80]
+	cmp	r2, r3
+	bcc	.L710
+	.loc 2 554 0
+	mov	r0, r4
+	bl	ftl_map_blk_alloc_new_blk
+.LVL588:
+.L710:
+	.loc 2 537 0 discriminator 1
+	mov	r6, #0
+.LVL589:
+.L711:
+	.loc 2 556 0 discriminator 1
+	ldrh	r3, [r4, #6]
+	uxth	r10, r6
+	cmp	r3, r10
+	bhi	.L715
+	.loc 2 572 0
+	mov	r1, #1
+	mov	r0, r8
+	bl	FtlFreeSysBlkQueueIn
+.LVL590:
+	.loc 2 573 0
+	mov	r3, #0
+	str	r3, [r4, #32]
+.LVL591:
+.L709:
+	.loc 2 577 0
+	ldrh	r2, [r4, #2]
+	ldrh	r3, [r5, #80]
+	cmp	r2, r3
+	bcc	.L716
+	.loc 2 578 0
+	mov	r0, r4
+	bl	ftl_map_blk_alloc_new_blk
+.LVL592:
+.L716:
+	.loc 2 580 0
+	mov	r0, #0
+	sub	sp, fp, #40
+.LCFI241:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL593:
+.L715:
+.LCFI242:
+	uxth	r7, r6
+	.loc 2 557 0
+	ldr	r3, [r9, r7, lsl #2]
+	cmp	r8, r3, lsr #10
+	bne	.L712
+	.loc 2 558 0
+	ldr	r3, [r5, #3804]
+	.loc 2 562 0
+	ldr	r0, .L720+4
+	.loc 2 558 0
+	str	r3, [r5, #3232]
+	.loc 2 559 0
+	ldr	r3, [r5, #3244]
+	str	r3, [r5, #3236]
+	.loc 2 560 0
+	ldr	r2, [r9, r7, lsl #2]
+	.loc 2 559 0
+	str	r3, [fp, #-48]
+	.loc 2 560 0
+	str	r2, [r5, #3228]
+	.loc 2 562 0
+	mov	r2, #1
+	mov	r1, r2
+	bl	FlashReadPages
+.LVL594:
+	.loc 2 564 0
+	ldr	r3, [fp, #-48]
+	ldrh	r3, [r3, #8]
+	cmp	r3, r10
+	beq	.L713
+	.loc 2 564 0 is_stmt 0 discriminator 1
+	mov	r2, #564
+	ldr	r1, .L720+8
+	ldr	r0, .L720+12
+	bl	printk
+.LVL595:
+.L713:
+	.loc 2 565 0 is_stmt 1
+	ldr	r3, [r5, #3224]
+	cmn	r3, #1
+	.loc 2 566 0
+	moveq	r3, #0
+	streq	r3, [r9, r7, lsl #2]
+	.loc 2 565 0
+	beq	.L712
+	.loc 2 568 0
+	ldr	r2, [r5, #3232]
+	mov	r1, r7
+	mov	r0, r4
+	bl	FtlMapWritePage
+.LVL596:
+.L712:
+	add	r6, r6, #1
+	b	.L711
+.L721:
+	.align	2
+.L720:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+3224
+	.word	.LANCHOR1+274
+	.word	.LC1
+.LFE196:
+	.fnend
+	.size	ftl_map_blk_gc, .-ftl_map_blk_gc
+	.align	2
+	.global	flush_l2p_region
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	flush_l2p_region, %function
+flush_l2p_region:
+	.fnstart
+.LFB199:
+	.loc 2 690 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL597:
+	.movsp ip
+	mov	ip, sp
+.LCFI243:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI244:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI245:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 690 0
+	.loc 2 693 0
+	mov	r4, #12
+	ldr	r5, .L723
+	mul	r4, r4, r0
+	ldr	r3, [r5, #2424]
+	.loc 2 694 0
+	add	r0, r5, #3856
+.LVL598:
+	add	r0, r0, #8
+	.loc 2 693 0
+	add	r2, r3, r4
+	.loc 2 694 0
+	ldrh	r1, [r3, r4]
+	ldr	r2, [r2, #8]
+	bl	FtlMapWritePage
+.LVL599:
+	.loc 2 695 0
+	ldr	r3, [r5, #2424]
+	.loc 2 697 0
+	mov	r0, #0
+	.loc 2 695 0
+	add	r4, r3, r4
+	ldr	r3, [r4, #4]
+	bic	r3, r3, #-2147483648
+	str	r3, [r4, #4]
+	.loc 2 697 0
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L724:
+	.align	2
+.L723:
+	.word	.LANCHOR0
+.LFE199:
+	.fnend
+	.size	flush_l2p_region, .-flush_l2p_region
+	.align	2
+	.global	log2phys
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	log2phys, %function
+log2phys:
+	.fnstart
+.LFB202:
+	.loc 2 753 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL600:
+	.movsp ip
+	mov	ip, sp
+.LCFI246:
+	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI247:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI248:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 753 0
+	.loc 2 757 0
+	mvn	r6, #0
+	.loc 2 753 0
+	mov	r7, r1
+	.loc 2 756 0
+	ldr	r4, .L739
+	.loc 2 753 0
+	mov	r10, r2
+	.loc 2 756 0
+	ldrh	r3, [r4, #84]
+	add	r3, r3, #7
+	lsr	r8, r0, r3
+	.loc 2 757 0
+	bic	r6, r0, r6, lsl r3
+	.loc 2 759 0
+	ldr	r3, [r4, #2436]
+	.loc 2 756 0
+	uxth	r8, r8
+.LVL601:
+	.loc 2 757 0
+	uxth	r6, r6
+.LVL602:
+	.loc 2 759 0
+	cmp	r0, r3
+	bcc	.L726
+	.loc 2 759 0 is_stmt 0 discriminator 1
+	movw	r2, #759
+	ldr	r1, .L739+4
+	ldr	r0, .L739+8
+.LVL603:
+	bl	printk
+.LVL604:
+.L726:
+	.loc 2 761 0 is_stmt 1
+	ldrh	r2, [r4, #114]
+	mov	r3, #0
+	.loc 2 762 0
+	ldr	r1, [r4, #2424]
+	mov	r9, #12
+.LVL605:
+.L727:
+	uxth	r5, r3
+	.loc 2 761 0 discriminator 1
+	cmp	r5, r2
+	bcc	.L732
+	.loc 2 776 0
+	bl	select_l2p_ram_region
+.LVL606:
+	.loc 2 777 0
+	mul	r9, r9, r0
+	ldr	r3, [r4, #2424]
+	.loc 2 776 0
+	mov	r5, r0
+	.loc 2 777 0
+	ldrh	r1, [r3, r9]
+	add	r2, r3, r9
+	movw	r3, #65535
+	cmp	r1, r3
+	beq	.L733
+	.loc 2 777 0 is_stmt 0 discriminator 1
+	ldr	r3, [r2, #4]
+	cmp	r3, #0
+	bge	.L733
+	.loc 2 778 0 is_stmt 1
+	bl	flush_l2p_region
+.LVL607:
+.L733:
+	.loc 2 781 0
+	mov	r1, r5
+	mov	r0, r8
+	bl	load_l2p_region
+.LVL608:
+	.loc 2 782 0
+	b	.L728
+.LVL609:
+.L732:
+	add	r3, r3, #1
+	.loc 2 762 0
+	mla	r0, r9, r3, r1
+.LVL610:
+	ldrh	r0, [r0, #-12]
+	cmp	r0, r8
+	bne	.L727
+.L728:
+	.loc 2 764 0
+	cmp	r10, #0
+	mov	r3, #12
+	bne	.L729
+	.loc 2 765 0
+	ldr	r2, [r4, #2424]
+	mla	r3, r3, r5, r2
+	ldr	r3, [r3, #8]
+	ldr	r3, [r3, r6, lsl #2]
+	str	r3, [r7]
+.L730:
+	.loc 2 771 0
+	ldr	r2, [r4, #2424]
+	mov	r3, #12
+	.loc 2 783 0
+	mov	r0, #0
+	.loc 2 771 0
+	mla	r5, r3, r5, r2
+.LVL611:
+	ldr	r3, [r5, #4]
+	cmn	r3, #1
+	.loc 2 772 0
+	addne	r3, r3, #1
+	strne	r3, [r5, #4]
+	.loc 2 783 0
+	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL612:
+.L729:
+	.loc 2 767 0
+	mul	r3, r3, r5
+	ldr	r2, [r4, #2424]
+	ldr	r1, [r7]
+	add	r2, r2, r3
+	ldr	r2, [r2, #8]
+	str	r1, [r2, r6, lsl #2]
+	.loc 2 768 0
+	ldr	r2, [r4, #2424]
+	add	r3, r2, r3
+	ldr	r2, [r3, #4]
+	orr	r2, r2, #-2147483648
+	str	r2, [r3, #4]
+	.loc 2 769 0
+	movw	r3, #2428
+	strh	r8, [r4, r3]	@ movhi
+	b	.L730
+.L740:
+	.align	2
+.L739:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+289
+	.word	.LC1
+.LFE202:
+	.fnend
+	.size	log2phys, .-log2phys
+	.align	2
+	.global	FtlReUsePrevPpa
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlReUsePrevPpa, %function
+FtlReUsePrevPpa:
+	.fnstart
+.LFB220:
+	.loc 2 1628 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL613:
+	.movsp ip
+	mov	ip, sp
+.LCFI249:
+	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, fp, ip, lr}
+.LCFI250:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI251:
+	.pad #12
+	sub	sp, sp, #12
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 1628 0
+	.loc 2 1631 0
+	ldr	r5, .L751
+	.loc 2 1628 0
+	mov	r7, r0
+	.loc 2 1629 0
+	ubfx	r0, r1, #10, #16
+.LVL614:
+	.loc 2 1628 0
+	str	r1, [fp, #-40]
+	.loc 2 1629 0
+	bl	P2V_block_in_plane
+.LVL615:
+	.loc 2 1631 0
+	ldr	r2, [r5, #2260]
+.LVL616:
+	lsl	r6, r0, #1
+	ldrh	r3, [r2, r6]
+	cmp	r3, #0
+	bne	.L742
+	.loc 2 1632 0
+	ldr	r4, [r5, #2272]
+	cmp	r4, #0
+	beq	.L743
+.LBB368:
+	.loc 2 1635 0
+	movw	r2, #2276
+	.loc 2 1636 0
+	ldr	ip, .L751+4
+	.loc 2 1635 0
+	ldrh	r1, [r5, r2]
+.LVL617:
+	.loc 2 1644 0
+	mov	lr, #6
+	.loc 2 1636 0
+	ldr	r2, [r5, #2252]
+	.loc 2 1644 0
+	movw	r8, #65535
+	.loc 2 1636 0
+	sub	r4, r4, r2
+	asr	r4, r4, #1
+	mul	r4, ip, r4
+	uxth	r4, r4
+.LVL618:
+.L744:
+	.loc 2 1637 0 discriminator 1
+	uxth	ip, r3
+	cmp	r1, ip
+	bls	.L743
+	.loc 2 1638 0
+	cmp	r4, r0
+	bne	.L745
+	.loc 2 1639 0
+	mov	r1, r4
+.LVL619:
+	ldr	r0, .L751+8
+.LVL620:
+	bl	List_remove_node
+.LVL621:
+	movw	r3, #2276
+	ldrh	r3, [r5, r3]
+	cmp	r3, #0
+	bne	.L746
+	.loc 2 1639 0 is_stmt 0 discriminator 1
+	movw	r2, #1639
+	ldr	r1, .L751+12
+	ldr	r0, .L751+16
+	bl	printk
+.LVL622:
+.L746:
+	.loc 2 1639 0 discriminator 3
+	movw	r2, #2276
+	.loc 2 1640 0 is_stmt 1 discriminator 3
+	mov	r0, r4
+	.loc 2 1639 0 discriminator 3
+	ldrh	r3, [r5, r2]
+	sub	r3, r3, #1
+	strh	r3, [r5, r2]	@ movhi
+	.loc 2 1640 0 discriminator 3
+	bl	INSERT_DATA_LIST
+.LVL623:
+	.loc 2 1641 0 discriminator 3
+	ldr	r2, [r5, #2260]
+	ldrh	r3, [r2, r6]
+.LVL624:
+.L742:
+.LBE368:
+	.loc 2 1650 0
+	add	r3, r3, #1
+	strh	r3, [r2, r6]	@ movhi
+	b	.L743
+.LVL625:
+.L745:
+.LBB369:
+	.loc 2 1644 0
+	mul	r4, lr, r4
+.LVL626:
+	add	r3, r3, #1
+	ldrh	r4, [r2, r4]
+.LVL627:
+	cmp	r4, r8
+	bne	.L744
+.L743:
+.LBE369:
+	.loc 2 1652 0
+	mov	r2, #1
+	sub	r1, fp, #40
+.LVL628:
+	mov	r0, r7
+.LVL629:
+	bl	log2phys
+.LVL630:
+	.loc 2 1653 0
+	sub	sp, fp, #32
+.LCFI252:
+	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
+.LVL631:
+.L752:
+	.align	2
+.L751:
+	.word	.LANCHOR0
+	.word	-1431655765
+	.word	.LANCHOR0+2272
+	.word	.LANCHOR1+298
+	.word	.LC1
+.LFE220:
+	.fnend
+	.size	FtlReUsePrevPpa, .-FtlReUsePrevPpa
+	.align	2
+	.global	ftl_scan_all_data
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	ftl_scan_all_data, %function
+ftl_scan_all_data:
+	.fnstart
+.LFB231:
+	.loc 2 2275 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI253:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI254:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI255:
+	.pad #32
+	sub	sp, sp, #32
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2275 0
+	.loc 2 2281 0
+	ldr	r6, .L761
+	mov	r5, #0
+.LVL632:
+	.loc 2 2280 0
+	mov	r1, #0
+	ldr	r0, .L761+4
+	bl	printk
+.LVL633:
+	mov	r4, r6
+.LVL634:
+.L754:
+	.loc 2 2281 0 discriminator 1
+	ldr	r3, [r6, #2436]
+	cmp	r5, r3
+	bcc	.L760
+	.loc 2 2303 0
+	sub	sp, fp, #28
+.LCFI256:
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.LVL635:
+.L760:
+.LCFI257:
+	.loc 2 2282 0
+	mov	r2, #0
+	sub	r1, fp, #32
+	mov	r0, r5
+	bl	log2phys
+.LVL636:
+	.loc 2 2283 0
+	ubfx	r3, r5, #0, #11
+	cmp	r3, #0
+	bne	.L755
+	.loc 2 2284 0
+	ldr	r2, [fp, #-32]
+	mov	r1, r5
+	ldr	r0, .L761+8
+	bl	printk
+.LVL637:
+.L755:
+	.loc 2 2285 0
+	ldr	r3, [fp, #-32]
+	cmn	r3, #1
+	beq	.L757
+	.loc 2 2286 0
+	str	r3, [r4, #3228]
+	.loc 2 2290 0
+	mov	r2, #0
+	.loc 2 2288 0
+	ldr	r3, [r4, #2244]
+	.loc 2 2292 0
+	mov	r1, #1
+	.loc 2 2289 0
+	ldr	r7, [r4, #3244]
+	.loc 2 2292 0
+	ldr	r0, .L761+12
+	.loc 2 2288 0
+	str	r3, [r4, #3232]
+	.loc 2 2287 0
+	str	r5, [r4, #3240]
+	.loc 2 2289 0
+	str	r7, [r4, #3236]
+	.loc 2 2290 0
+	str	r2, [r4, #3224]
+	.loc 2 2292 0
+	bl	FlashReadPages
+.LVL638:
+	.loc 2 2293 0
+	ldr	r3, [r4, #3224]
+	cmn	r3, #1
+	cmpne	r3, #256
+	beq	.L758
+	.loc 2 2294 0
+	ldr	r3, [r7, #8]
+	cmp	r5, r3
+	beq	.L757
+.L758:
+	.loc 2 2297 0
+	ldr	r2, [r4, #3232]
+	ldr	r3, [r4, #3236]
+	ldr	r0, .L761+16
+	ldr	r1, [r2, #4]
+	str	r1, [sp, #16]
+	mov	r1, r5
+	ldr	r2, [r2]
+	str	r2, [sp, #12]
+	ldr	r2, [r3, #12]
+	str	r2, [sp, #8]
+	ldr	r2, [r3, #8]
+	str	r2, [sp, #4]
+	ldr	r2, [r3, #4]
+	str	r2, [sp]
+	ldr	r3, [r3]
+	ldr	r2, [r4, #3228]
+	bl	printk
+.LVL639:
+.L757:
+	.loc 2 2281 0 discriminator 2
+	add	r5, r5, #1
+	b	.L754
+.L762:
+	.align	2
+.L761:
+	.word	.LANCHOR0
+	.word	.LC84
+	.word	.LC85
+	.word	.LANCHOR0+3224
+	.word	.LC86
+.LFE231:
+	.fnend
+	.size	ftl_scan_all_data, .-ftl_scan_all_data
+	.align	2
+	.global	FtlReadRefresh
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlReadRefresh, %function
+FtlReadRefresh:
+	.fnstart
+.LFB258:
+	.loc 5 419 0
+	@ args = 0, pretend = 0, frame = 88
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI258:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI259:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI260:
+	.pad #88
+	sub	sp, sp, #88
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 419 0
+	.loc 5 425 0
+	ldr	r3, .L776
+	ldr	r0, [r3, #2696]
+	mov	r4, r3
+	cmp	r0, #0
+	beq	.L764
+	.loc 5 426 0
+	ldr	r1, [r3, #2700]
+	ldr	r2, [r3, #2436]
+	cmp	r1, r2
+	bcs	.L765
+	mov	r5, #2048
+.LVL640:
+.L770:
+.LBB375:
+.LBB376:
+	.loc 5 428 0
+	ldr	r0, [r4, #2700]
+	ldr	r3, [r4, #2436]
+	cmp	r0, r3
+	bcs	.L767
+	.loc 5 430 0
+	mov	r2, #0
+	sub	r1, fp, #108
+	bl	log2phys
+.LVL641:
+	.loc 5 432 0
+	ldr	r2, [fp, #-108]
+	.loc 5 431 0
+	ldr	r3, [r4, #2700]
+	.loc 5 432 0
+	cmn	r2, #1
+	.loc 5 431 0
+	add	r3, r3, #1
+	str	r3, [r4, #2700]
+	.loc 5 432 0
+	beq	.L768
+.LBB377:
+	.loc 5 435 0
+	str	r3, [fp, #-88]
+	.loc 5 438 0
+	sub	r0, fp, #20
+	.loc 5 436 0
+	ldr	r3, .L776+4
+	.loc 5 439 0
+	mov	r1, #1
+	.loc 5 434 0
+	str	r2, [fp, #-100]
+	.loc 5 438 0
+	mov	r2, #0
+	str	r2, [r0, #-84]!
+	.loc 5 436 0
+	str	r3, [fp, #-96]
+	.loc 5 437 0
+	sub	r3, fp, #84
+	str	r3, [fp, #-92]
+	.loc 5 439 0
+	bl	FlashReadPages
+.LVL642:
+	.loc 5 440 0
+	ldr	r3, [fp, #-104]
+	cmp	r3, #256
+	bne	.L767
+	.loc 5 442 0
+	ldr	r0, [fp, #-108]
+	ubfx	r0, r0, #10, #16
+	bl	P2V_block_in_plane
+.LVL643:
+	bl	FtlGcRefreshBlock
+.LVL644:
+.L767:
+.LBE377:
+	mvn	r0, #0
+.L763:
+.LBE376:
+.LBE375:
+	.loc 5 466 0
+	sub	sp, fp, #20
+.LCFI261:
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L768:
+.LCFI262:
+.LBB379:
+.LBB378:
+	.loc 5 427 0
+	subs	r5, r5, #1
+	bne	.L770
+	b	.L767
+.LVL645:
+.L765:
+.LBE378:
+.LBE379:
+	.loc 5 451 0
+	ldr	r2, [r3, #2440]
+	.loc 5 449 0
+	mov	r0, #0
+	str	r0, [r3, #2696]
+	.loc 5 450 0
+	str	r0, [r3, #2700]
+	.loc 5 451 0
+	str	r2, [r3, #2692]
+	b	.L763
+.L764:
+.LBB380:
+	.loc 5 456 0
+	ldr	r1, [r3, #2440]
+	ldr	r2, [r3, #2692]
+	add	ip, r1, #1048576
+	cmp	r2, ip
+	bhi	.L773
+	.loc 5 454 0
+	ldr	r3, [r3, #2496]
+	.loc 5 457 0
+	mov	ip, #33554432
+	.loc 5 454 0
+	lsr	r3, r3, #10
+	.loc 5 457 0
+	add	r2, r2, ip, asr r3
+	cmp	r1, r2
+	bhi	.L773
+	.loc 5 458 0
+	ldr	r3, .L776+8
+	ldrb	r3, [r3, #28]	@ zero_extendqisi2
+	cmp	r3, #0
+	bne	.L763
+.L773:
+	.loc 5 460 0
+	mov	r3, #1
+	.loc 5 461 0
+	mov	r0, #0
+	.loc 5 460 0
+	str	r3, [r4, #2696]
+	.loc 5 461 0
+	str	r0, [r4, #2700]
+	.loc 5 462 0
+	str	r1, [r4, #2692]
+	b	.L763
+.L777:
+	.align	2
+.L776:
+	.word	.LANCHOR0
+	.word	ftl_temp_buf
+	.word	.LANCHOR0+2504
+.LBE380:
+.LFE258:
+	.fnend
+	.size	FtlReadRefresh, .-FtlReadRefresh
+	.align	2
+	.global	ftl_check_vpc
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	ftl_check_vpc, %function
+ftl_check_vpc:
+	.fnstart
+.LFB230:
+	.loc 2 2223 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI263:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI264:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI265:
+	.pad #12
+	sub	sp, sp, #12
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2223 0
+	.loc 2 2232 0
+	ldr	r6, .L802
+	mov	r4, #0
+.LVL646:
+	.loc 2 2229 0
+	ldr	r1, .L802+4
+	ldr	r0, .L802+8
+	mov	r5, r6
+	bl	printk
+.LVL647:
+.LBB387:
+.LBB388:
+.LBB389:
+	.loc 1 202 0
+	mov	r1, #8192
+	ldr	r0, .L802+12
+	bl	__memzero
+.LVL648:
+.L779:
+.LBE389:
+.LBE388:
+.LBE387:
+	.loc 2 2232 0 discriminator 1
+	ldr	r3, [r6, #2436]
+	cmp	r4, r3
+	bcc	.L781
+	.loc 2 2245 0 discriminator 1
+	ldr	r8, .L802+12
+	mov	r4, #0
+.LVL649:
+	.loc 2 2247 0 discriminator 1
+	ldr	r9, .L802+16
+	mov	r6, r4
+.LVL650:
+.L782:
+	.loc 2 2243 0 discriminator 1
+	ldrh	r2, [r5, #16]
+	uxth	r3, r4
+	cmp	r2, r3
+	bhi	.L784
+	.loc 2 2255 0
+	ldr	r4, [r5, #2272]
+	cmp	r4, #0
+	beq	.L785
+.LBB390:
+	.loc 2 2257 0
+	movw	r3, #2276
+	.loc 2 2263 0
+	ldr	r9, .L802+12
+	.loc 2 2257 0
+	ldrh	r7, [r5, r3]
+.LVL651:
+	.loc 2 2259 0
+	mov	r8, #0
+	.loc 2 2258 0
+	ldr	r3, [r5, #2252]
+	.loc 2 2263 0
+	ldr	r10, .L802+20
+	.loc 2 2258 0
+	sub	r4, r4, r3
+	ldr	r3, .L802+24
+	asr	r4, r4, #1
+	mul	r4, r3, r4
+	uxth	r4, r4
+.L786:
+	.loc 2 2259 0 discriminator 1
+	uxth	r3, r8
+	cmp	r7, r3
+	bls	.L785
+	.loc 2 2261 0
+	ldr	r2, [r5, #2260]
+	lsl	r3, r4, #1
+	ldrh	r2, [r2, r3]
+	cmp	r2, #0
+	beq	.L787
+	.loc 2 2264 0
+	mov	r6, #1
+	.loc 2 2263 0
+	ldrh	r3, [r9, r3]
+	mov	r1, r4
+	mov	r0, r10
+	bl	printk
+.LVL652:
+.L787:
+	.loc 2 2266 0
+	mov	r3, #6
+	ldr	r2, [r5, #2252]
+	mul	r4, r3, r4
+	movw	r3, #65535
+	add	r8, r8, #1
+	ldrh	r4, [r2, r4]
+	cmp	r4, r3
+	bne	.L786
+.L785:
+.LBE390:
+	.loc 2 2271 0
+	cmp	r6, #0
+	beq	.L778
+	.loc 2 2271 0 is_stmt 0 discriminator 1
+	movw	r2, #2271
+	ldr	r1, .L802+4
+	ldr	r0, .L802+28
+	bl	printk
+.LVL653:
+.L778:
+	.loc 2 2272 0 is_stmt 1
+	sub	sp, fp, #40
+.LCFI266:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL654:
+.L781:
+.LCFI267:
+	.loc 2 2234 0
+	mov	r2, #0
+	sub	r1, fp, #48
+	mov	r0, r4
+	bl	log2phys
+.LVL655:
+	.loc 2 2235 0
+	ldr	r0, [fp, #-48]
+	cmn	r0, #1
+	beq	.L780
+	.loc 2 2237 0
+	ubfx	r0, r0, #10, #16
+	bl	P2V_block_in_plane
+.LVL656:
+	.loc 2 2238 0
+	ldr	r2, .L802+12
+	lsl	r0, r0, #1
+	ldrh	r3, [r2, r0]
+	add	r3, r3, #1
+	strh	r3, [r2, r0]	@ movhi
+.L780:
+	.loc 2 2232 0 discriminator 2
+	add	r4, r4, #1
+	b	.L779
+.LVL657:
+.L784:
+	.loc 2 2245 0
+	uxth	r1, r4
+	ldr	r3, [r5, #2260]
+	lsl	r7, r1, #1
+	ldrh	r2, [r3, r7]
+	ldrh	r3, [r8, r7]
+	cmp	r2, r3
+	beq	.L783
+	.loc 2 2247 0
+	mov	r0, r9
+	bl	printk
+.LVL658:
+	.loc 2 2248 0
+	ldr	r3, [r5, #2260]
+	movw	r2, #65535
+	ldrh	r3, [r3, r7]
+	cmp	r3, r2
+	beq	.L783
+	.loc 2 2248 0 is_stmt 0 discriminator 1
+	ldrh	r2, [r8, r7]
+	.loc 2 2250 0 is_stmt 1 discriminator 1
+	cmp	r2, r3
+	movhi	r6, #1
+.L783:
+	add	r4, r4, #1
+	b	.L782
+.L803:
+	.align	2
+.L802:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+314
+	.word	.LC87
+	.word	check_vpc_table
+	.word	.LC88
+	.word	.LC89
+	.word	-1431655765
+	.word	.LC1
+.LFE230:
+	.fnend
+	.size	ftl_check_vpc, .-ftl_check_vpc
+	.align	2
+	.global	FtlMapBlkWriteDump_data
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlMapBlkWriteDump_data, %function
+FtlMapBlkWriteDump_data:
+	.fnstart
+.LFB207:
+	.loc 2 897 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL659:
+	.movsp ip
+	mov	ip, sp
+.LCFI268:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI269:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI270:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 897 0
+	mov	r6, r0
+	.loc 2 903 0
+	ldr	r3, [r0, #36]
+	cmp	r3, #0
+	ldmfdeq	sp, {r4, r5, r6, r7, fp, sp, pc}
+	.loc 2 905 0
+	mov	r3, #0
+	.loc 2 899 0
+	ldrh	r5, [r0, #6]
+	.loc 2 905 0
+	str	r3, [r0, #36]
+	.loc 2 907 0
+	ldr	r3, .L811
+	.loc 2 900 0
+	ldr	r2, [r0, #24]
+.LVL660:
+	.loc 2 899 0
+	sub	r5, r5, #1
+	.loc 2 930 0
+	uxth	r5, r5
+	.loc 2 907 0
+	ldr	r0, [r3, #3804]
+	mov	r4, r3
+	.loc 2 908 0
+	ldr	r1, [r3, #3244]
+	.loc 2 907 0
+	str	r0, [r3, #3232]
+	.loc 2 908 0
+	str	r1, [r3, #3236]
+	.loc 2 930 0
+	ldr	r2, [r2, r5, lsl #2]
+.LVL661:
+	.loc 2 932 0
+	cmp	r2, #0
+	.loc 2 931 0
+	str	r2, [r3, #3228]
+	.loc 2 932 0
+	beq	.L806
+	.loc 2 934 0
+	mov	r2, #1
+.LVL662:
+	ldr	r0, .L811+4
+	mov	r1, r2
+	bl	FlashReadPages
+.LVL663:
+.L807:
+	.loc 2 941 0
+	ldr	r2, [r4, #3232]
+	mov	r1, r5
+	mov	r0, r6
+	bl	FtlMapWritePage
+.LVL664:
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.LVL665:
+.L806:
+	.loc 2 938 0
+	ldrh	r2, [r3, #86]
+.LVL666:
+	mov	r1, #255
+	bl	ftl_memset
+.LVL667:
+	b	.L807
+.L812:
+	.align	2
+.L811:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+3224
+.LFE207:
+	.fnend
+	.size	FtlMapBlkWriteDump_data, .-FtlMapBlkWriteDump_data
+	.align	2
+	.global	FtlScanSysBlk
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlScanSysBlk, %function
+FtlScanSysBlk:
+	.fnstart
+.LFB210:
+	.loc 2 1095 0
+	@ args = 0, pretend = 0, frame = 24
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI271:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI272:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI273:
+	.pad #28
+	sub	sp, sp, #28
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 1095 0
+	.loc 2 1101 0
+	ldr	r4, .L895
+	mov	r5, #0
+	.loc 2 1103 0
+	mov	r1, r5
+	ldr	r2, [r4, #104]
+	.loc 2 1101 0
+	add	r6, r4, #3904
+	.loc 2 1103 0
+	ldr	r0, [r4, #3852]
+	mov	r8, r4
+	.loc 2 1101 0
+	strh	r5, [r6]	@ movhi
+	.loc 2 1102 0
+	strh	r5, [r4, #120]	@ movhi
+	.loc 2 1103 0
+	lsl	r2, r2, #2
+	bl	ftl_memset
+.LVL668:
+	.loc 2 1104 0
+	ldr	r2, [r4, #104]
+	mov	r1, r5
+	ldr	r0, [r4, #3828]
+	lsl	r2, r2, #1
+	bl	ftl_memset
+.LVL669:
+	.loc 2 1105 0
+	ldrh	r2, [r4, #96]
+	mov	r1, r5
+	ldr	r0, [r4, #3840]
+	lsl	r2, r2, #2
+	bl	ftl_memset
+.LVL670:
+	.loc 2 1106 0
+	ldrh	r2, [r4, #96]
+	mov	r1, r5
+	ldr	r0, [r4, #124]
+	.loc 2 1109 0
+	mov	r5, r4
+	.loc 2 1106 0
+	lsl	r2, r2, #1
+	bl	ftl_memset
+.LVL671:
+.LBB396:
+.LBB397:
+.LBB398:
+	.loc 1 202 0
+	ldr	r2, .L895+4
+	mvn	r3, #0
+	str	r3, [r4, #2556]
+	str	r6, [fp, #-60]
+	str	r3, [r2, #4]
+	str	r3, [r2, #8]
+.LBE398:
+.LBE397:
+.LBE396:
+	.loc 2 1109 0
+	ldrh	r3, [r4, #16]
+.LVL672:
+	str	r3, [fp, #-52]
+.LVL673:
+.L814:
+	.loc 2 1109 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r5, #18]
+.LVL674:
+	ldr	r2, [fp, #-52]
+.LVL675:
+	cmp	r3, r2
+	bls	.L855
+	.loc 2 1120 0 is_stmt 1 discriminator 1
+	mov	r6, #0
+	.loc 2 1113 0 discriminator 1
+	ldrh	r3, [r5, #8]
+	.loc 2 1118 0 discriminator 1
+	ldr	r7, [r5, #3792]
+.LVL676:
+	.loc 2 1119 0 discriminator 1
+	ldr	r10, [r5, #3152]
+	.loc 2 1120 0 discriminator 1
+	ldr	r9, [r5, #3156]
+	ldrh	r2, [r5, #88]
+.LVL677:
+	str	r6, [fp, #-48]
+	b	.L856
+.L816:
+	str	r3, [fp, #-64]
+	.loc 2 1115 0
+	ldr	r3, .L895+8
+	ldr	r1, [fp, #-52]
+	str	r2, [fp, #-68]
+	ldrb	r0, [r3, r6]	@ zero_extendqisi2
+	bl	V2P_block
+.LVL678:
+	str	r0, [fp, #-56]
+	.loc 2 1116 0
+	bl	FtlBbmIsBadBlock
+.LVL679:
+	cmp	r0, #0
+	ldr	r3, [fp, #-64]
+	ldr	r2, [fp, #-68]
+	bne	.L815
+	.loc 2 1118 0
+	ldr	r1, [fp, #-48]
+.LVL680:
+	mov	r0, #20
+	mla	r0, r0, r1, r7
+	ldr	r1, [fp, #-56]
+.LVL681:
+	lsl	r1, r1, #10
+	.loc 2 1119 0
+	stmib	r0, {r1, r10}
+	.loc 2 1120 0
+	ldr	r1, [fp, #-48]
+.LVL682:
+	mul	r1, r2, r1
+.LVL683:
+	add	ip, r1, #3
+	cmp	r1, #0
+	movlt	r1, ip
+	bic	r1, r1, #3
+	add	r1, r9, r1
+	str	r1, [r0, #12]
+	.loc 2 1121 0
+	ldr	r1, [fp, #-48]
+.LVL684:
+	add	r1, r1, #1
+.LVL685:
+	uxth	r1, r1
+.LVL686:
+	str	r1, [fp, #-48]
+.L815:
+	add	r6, r6, #1
+.L856:
+	.loc 2 1113 0 discriminator 1
+	uxth	r1, r6
+.LVL687:
+	cmp	r3, r1
+	bhi	.L816
+	.loc 2 1124 0
+	ldr	r3, [fp, #-48]
+.LVL688:
+	cmp	r3, #0
+	bne	.L817
+.LVL689:
+.L854:
+	.loc 2 1109 0
+	ldr	r3, [fp, #-52]
+.LVL690:
+	add	r3, r3, #1
+.LVL691:
+	uxth	r3, r3
+.LVL692:
+	str	r3, [fp, #-52]
+	b	.L814
+.LVL693:
+.L817:
+	.loc 2 1127 0
+	mov	r2, #1
+	ldr	r1, [fp, #-48]
+	mov	r0, r7
+	bl	FlashReadPages
+.LVL694:
+	.loc 2 1128 0
+	mov	r3, #0
+.LVL695:
+.L894:
+	str	r3, [fp, #-56]
+	.loc 2 1128 0 is_stmt 0 discriminator 2
+	ldr	r2, [fp, #-48]
+.LVL696:
+	ldrh	r3, [fp, #-56]
+	cmp	r2, r3
+	bls	.L854
+	ldr	r3, [fp, #-56]
+	mov	r9, #20
+	mul	r9, r9, r3
+	.loc 2 1129 0 is_stmt 1
+	ldr	r3, [r4, #3792]
+	add	r2, r3, r9
+.LVL697:
+	.loc 2 1132 0
+	ldr	r3, [r3, r9]
+	.loc 2 1129 0
+	ldr	r6, [r2, #4]
+	.loc 2 1130 0
+	ldr	r7, [r2, #12]
+	.loc 2 1132 0
+	cmn	r3, #1
+	.loc 2 1129 0
+	ubfx	r6, r6, #10, #16
+	.loc 2 1132 0
+	bne	.L821
+	mov	r10, #16
+	.loc 2 1136 0
+	movw	r3, #65535
+.L823:
+	.loc 2 1134 0
+	ldr	r0, [r4, #3792]
+	str	r3, [fp, #-64]
+	add	r0, r0, r9
+	ldr	r2, [r0, #4]
+	add	r2, r2, #1
+	str	r2, [r0, #4]
+	.loc 2 1135 0
+	mov	r2, #1
+	mov	r1, r2
+	bl	FlashReadPages
+.LVL698:
+	.loc 2 1136 0
+	ldrh	r2, [r7]
+	ldr	r3, [fp, #-64]
+	cmp	r2, r3
+	bne	.L820
+	.loc 2 1137 0
+	ldr	r3, [r4, #3792]
+	mvn	r2, #0
+	str	r2, [r3, r9]
+	.loc 2 1145 0
+	ldr	r3, [r4, #3792]
+	ldr	r3, [r3, r9]
+	cmp	r3, r2
+	bne	.L821
+.L822:
+	.loc 2 1287 0
+	mov	r1, #1
+	b	.L893
+.L820:
+	.loc 2 1139 0
+	ldr	r2, [r4, #3792]
+	ldr	r2, [r2, r9]
+	cmn	r2, #1
+	bne	.L821
+	sub	r10, r10, #1
+	uxth	r10, r10
+	.loc 2 1133 0 discriminator 2
+	cmp	r10, #0
+	bne	.L823
+	b	.L822
+.L821:
+	.loc 2 1147 0
+	ldr	r2, [r5, #2472]
+	ldr	r3, [r7, #4]
+	cmn	r2, #1
+	beq	.L824
+	.loc 2 1147 0 is_stmt 0 discriminator 1
+	cmp	r2, r3
+	bhi	.L825
+.L824:
+	.loc 2 1149 0 is_stmt 1
+	cmn	r3, #1
+	.loc 2 1152 0
+	addne	r2, r3, #1
+	strne	r2, [r8, #2472]
+.L825:
+	.loc 2 1157 0
+	ldrh	r2, [r7]
+	movw	r1, #61604
+	cmp	r2, r1
+	beq	.L827
+	bhi	.L828
+	movw	r3, #61574
+	cmp	r2, r3
+	beq	.L829
+.L826:
+	ldr	r3, [fp, #-56]
+	add	r3, r3, #1
+	b	.L894
+.L828:
+	movw	r3, #61634
+	cmp	r2, r3
+	beq	.L830
+	movw	r3, #65535
+	cmp	r2, r3
+	.loc 2 1280 0
+	moveq	r1, #0
+	.loc 2 1157 0
+	bne	.L826
+.L893:
+	.loc 2 1287 0
+	mov	r0, r6
+	bl	FtlFreeSysBlkQueueIn
+.LVL699:
+	b	.L826
+.L830:
+	.loc 2 1162 0
+	ldr	r3, [fp, #-60]
+	ldrh	r2, [r3]
+	ldr	r3, [r4, #104]
+	cmp	r2, r3
+	bls	.L832
+	.loc 2 1162 0 is_stmt 0 discriminator 1
+	movw	r2, #1162
+	ldr	r1, .L895+12
+	ldr	r0, .L895+16
+	bl	printk
+.LVL700:
+.L832:
+	.loc 2 1163 0 is_stmt 1
+	ldr	r0, [r4, #104]
+	ldr	r2, [fp, #-60]
+	.loc 2 1165 0
+	ldr	ip, [r4, #3852]
+	.loc 2 1163 0
+	ldrh	r2, [r2]
+	uxth	r1, r0
+	sub	r3, r1, #1
+	sub	r1, r1, r2
+	sxth	r3, r3
+	sub	r1, r1, #1
+	sxth	r1, r1
+.L833:
+	.loc 2 1163 0 is_stmt 0 discriminator 1
+	cmp	r3, r1
+	bgt	.L839
+	.loc 2 1186 0 is_stmt 1
+	cmp	r3, #0
+	bge	.L871
+	b	.L826
+.L839:
+	.loc 2 1165 0
+	ldr	r10, [r7, #4]
+	lsl	lr, r3, #2
+	ldr	r9, [ip, r3, lsl #2]
+	cmp	r10, r9
+	bls	.L834
+	.loc 2 1167 0
+	ldr	r1, [ip]
+	cmp	r1, #0
+	bne	.L835
+	.loc 2 1167 0 is_stmt 0 discriminator 1
+	cmp	r0, r2
+	.loc 2 1172 0 is_stmt 1 discriminator 1
+	ldrne	r1, .L895+20
+	addne	r2, r2, #1
+	strhne	r2, [r1]	@ movhi
+.L835:
+	.loc 2 1175 0 discriminator 1
+	uxth	ip, r3
+	mov	r1, #0
+.L836:
+	uxth	r0, r1
+	sxth	r2, r1
+	cmp	ip, r0
+	bhi	.L837
+	.loc 2 1180 0
+	ldr	r1, [r7, #4]
+	.loc 2 1186 0
+	cmp	r3, #0
+	.loc 2 1180 0
+	ldr	r2, [r5, #3852]
+	str	r1, [r2, lr]
+	.loc 2 1181 0
+	lsl	r2, r3, #1
+	ldr	r1, [r5, #3828]
+	strh	r6, [r1, r2]	@ movhi
+	.loc 2 1186 0
+	blt	.L826
+	.loc 2 1193 0
+	ldr	r2, .L895+20
+	ldr	r1, [r5, #104]
+	ldrh	r2, [r2]
+	sub	r1, r1, r2
+	sub	r1, r1, #1
+	sxth	r1, r1
+	cmp	r3, r1
+	bgt	.L826
+.L871:
+	.loc 2 1195 0
+	ldr	r1, [fp, #-60]
+	add	r2, r2, #1
+	strh	r2, [r1]	@ movhi
+	.loc 2 1196 0
+	ldr	r2, [r4, #3852]
+	ldr	r1, [r7, #4]
+	str	r1, [r2, r3, lsl #2]
+	.loc 2 1197 0
+	lsl	r3, r3, #1
+	ldr	r2, [r4, #3828]
+.L891:
+	.loc 2 1241 0
+	strh	r6, [r2, r3]	@ movhi
+	b	.L826
+.L837:
+	.loc 2 1177 0 discriminator 3
+	ldr	r0, [r5, #3852]
+	add	r1, r1, #1
+	add	r9, r0, r2, lsl #2
+	ldr	r9, [r9, #4]
+	str	r9, [r0, r2, lsl #2]
+	.loc 2 1178 0 discriminator 3
+	lsl	r2, r2, #1
+	ldr	r0, [r5, #3828]
+	add	r9, r0, r2
+	ldrh	r9, [r9, #2]
+	strh	r9, [r0, r2]	@ movhi
+	b	.L836
+.L834:
+	sub	r3, r3, #1
+	sxth	r3, r3
+	b	.L833
+.L829:
+	.loc 2 1203 0
+	ldrh	r2, [r4, #120]
+	ldrh	r3, [r4, #96]
+	cmp	r2, r3
+	bls	.L842
+	.loc 2 1203 0 is_stmt 0 discriminator 1
+	movw	r2, #1203
+	ldr	r1, .L895+12
+	ldr	r0, .L895+16
+	bl	printk
+.LVL701:
+.L842:
+	.loc 2 1204 0 is_stmt 1
+	ldrh	r2, [r4, #96]
+	ldrh	r1, [r4, #120]
+	.loc 2 1206 0
+	ldr	ip, [r4, #3840]
+	.loc 2 1204 0
+	sub	r0, r2, #1
+	sxth	r3, r0
+	sub	r0, r0, r1
+.L843:
+	.loc 2 1204 0 is_stmt 0 discriminator 1
+	cmp	r3, r0
+	ble	.L848
+	.loc 2 1206 0 is_stmt 1
+	ldr	r10, [r7, #4]
+	lsl	lr, r3, #2
+	ldr	r9, [ip, r3, lsl #2]
+	cmp	r10, r9
+	bls	.L844
+	.loc 2 1208 0
+	sub	r2, r2, r1
+	ldr	r0, [ip]
+	clz	r2, r2
+	.loc 2 1218 0
+	uxth	ip, r3
+	.loc 2 1208 0
+	lsr	r2, r2, #5
+	cmp	r0, #0
+	orrne	r2, r2, #1
+	cmp	r2, #0
+	.loc 2 1216 0
+	addeq	r1, r1, #1
+	strheq	r1, [r8, #120]	@ movhi
+	mov	r1, #0
+.L846:
+	.loc 2 1218 0 discriminator 1
+	uxth	r0, r1
+	sxth	r2, r1
+	cmp	ip, r0
+	bhi	.L847
+	.loc 2 1223 0
+	ldr	r1, [r7, #4]
+	ldr	r2, [r5, #3840]
+	str	r1, [r2, lr]
+	.loc 2 1224 0
+	lsl	r2, r3, #1
+	ldr	r1, [r5, #124]
+	strh	r6, [r1, r2]	@ movhi
+.L848:
+	.loc 2 1229 0
+	cmp	r3, #0
+	blt	.L826
+	.loc 2 1237 0
+	ldrh	r2, [r5, #96]
+	ldrh	r1, [r5, #120]
+	sub	r2, r2, #1
+	sub	r2, r2, r1
+	sxth	r2, r2
+	cmp	r3, r2
+	bgt	.L826
+	.loc 2 1239 0
+	add	r1, r1, #1
+	.loc 2 1240 0
+	ldr	r2, [r5, #3840]
+	.loc 2 1239 0
+	strh	r1, [r5, #120]	@ movhi
+	.loc 2 1240 0
+	ldr	r1, [r7, #4]
+	str	r1, [r2, r3, lsl #2]
+	.loc 2 1241 0
+	lsl	r3, r3, #1
+	ldr	r2, [r5, #124]
+	b	.L891
+.L847:
+	.loc 2 1220 0 discriminator 3
+	ldr	r0, [r5, #3840]
+	add	r1, r1, #1
+	add	r9, r0, r2, lsl #2
+	ldr	r9, [r9, #4]
+	str	r9, [r0, r2, lsl #2]
+	.loc 2 1221 0 discriminator 3
+	lsl	r2, r2, #1
+	ldr	r0, [r5, #124]
+	add	r9, r0, r2
+	ldrh	r9, [r9, #2]
+	strh	r9, [r0, r2]	@ movhi
+	b	.L846
+.L844:
+	sub	r3, r3, #1
+	sxth	r3, r3
+	b	.L843
+.L827:
+	.loc 2 1248 0
+	ldr	r9, .L895+4
+	movw	r2, #65535
+	ldrh	r1, [r9]
+	cmp	r1, r2
+	.loc 2 1250 0
+	strheq	r6, [r9]	@ movhi
+	.loc 2 1248 0
+	beq	.L892
+	.loc 2 1255 0
+	ldrh	r0, [r9, #4]
+	cmp	r0, r2
+	beq	.L851
+	.loc 2 1256 0
+	mov	r1, #1
+	bl	FtlFreeSysBlkQueueIn
+.LVL702:
+.L851:
+	.loc 2 1257 0
+	ldr	r3, [r7, #4]
+	ldr	r2, [r4, #2564]
+	cmp	r2, r3
+	.loc 2 1265 0
+	strhcs	r6, [r9, #4]	@ movhi
+	.loc 2 1257 0
+	bcs	.L826
+	.loc 2 1259 0
+	ldrh	r3, [r9]
+	.loc 2 1260 0
+	strh	r6, [r9]	@ movhi
+	.loc 2 1259 0
+	strh	r3, [r9, #4]	@ movhi
+	.loc 2 1261 0
+	ldr	r3, [r7, #4]
+.L892:
+	str	r3, [r4, #2564]
+	b	.L826
+.LVL703:
+.L855:
+	.loc 2 1292 0
+	ldr	r1, [r5, #3828]
+	ldrh	r3, [r1]
+	cmp	r3, #0
+	beq	.L857
+.L860:
+	.loc 2 1310 0
+	ldr	r1, [r4, #124]
+	ldrh	r2, [r1]
+.LVL704:
+	cmp	r2, #0
+	beq	.L858
+.L859:
+	.loc 2 1328 0
+	ldr	r3, [fp, #-60]
+	ldrh	r2, [r3]
+	ldr	r3, [r4, #104]
+	cmp	r2, r3
+	bls	.L890
+	.loc 2 1328 0 is_stmt 0 discriminator 1
+	mov	r2, #1328
+	ldr	r1, .L895+12
+	ldr	r0, .L895+16
+	bl	printk
+.LVL705:
+.L890:
+	.loc 2 1330 0 is_stmt 1
+	mov	r0, #0
+	sub	sp, fp, #40
+.LCFI274:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL706:
+.L857:
+.LCFI275:
+	.loc 2 1292 0 discriminator 1
+	ldr	r2, .L895+20
+.LVL707:
+	ldrh	r2, [r2]
+	cmp	r2, #0
+	.loc 2 1294 0 discriminator 1
+	ldrne	r0, [r5, #104]
+	.loc 2 1292 0 discriminator 1
+	beq	.L860
+.L861:
+	sxth	r2, r3
+	.loc 2 1294 0 discriminator 1
+	cmp	r2, r0
+	bcs	.L860
+	.loc 2 1296 0
+	lsl	ip, r2, #1
+	add	r3, r3, #1
+	ldrh	ip, [r1, ip]
+	cmp	ip, #0
+	beq	.L861
+	mov	r3, r2
+	.loc 2 1302 0 discriminator 1
+	mov	lr, #0
+.L862:
+	.loc 2 1298 0 discriminator 1
+	ldr	r1, [r8, #104]
+	cmp	r3, r1
+	bcs	.L860
+	.loc 2 1300 0 discriminator 3
+	ldr	r0, [r8, #3828]
+	lsl	r1, r3, #1
+	sub	ip, r3, r2
+	lsl	r5, ip, #1
+	ldrh	r6, [r0, r1]
+	strh	r6, [r0, r5]	@ movhi
+	.loc 2 1301 0 discriminator 3
+	ldr	r0, [r8, #3852]
+	ldr	r5, [r0, r3, lsl #2]
+	add	r3, r3, #1
+	sxth	r3, r3
+	str	r5, [r0, ip, lsl #2]
+	.loc 2 1302 0 discriminator 3
+	ldr	r0, [r8, #3828]
+	strh	lr, [r0, r1]	@ movhi
+	b	.L862
+.L858:
+	.loc 2 1310 0 discriminator 1
+	ldrh	r3, [r4, #120]
+	cmp	r3, #0
+	.loc 2 1312 0 discriminator 1
+	ldrhne	r0, [r4, #96]
+	.loc 2 1310 0 discriminator 1
+	beq	.L859
+.L867:
+	sxth	r3, r2
+	.loc 2 1312 0 discriminator 1
+	cmp	r3, r0
+	mov	ip, r3
+	bge	.L859
+	.loc 2 1314 0
+	lsl	lr, r3, #1
+	add	r2, r2, #1
+	ldrh	lr, [r1, lr]
+	cmp	lr, #0
+	beq	.L867
+	.loc 2 1320 0 discriminator 1
+	mov	lr, #0
+.L868:
+	.loc 2 1316 0 discriminator 1
+	ldrh	r2, [r8, #96]
+	cmp	r3, r2
+	bge	.L859
+	.loc 2 1318 0 discriminator 3
+	ldr	r1, [r8, #124]
+	lsl	r2, r3, #1
+	sub	r0, r3, ip
+	lsl	r5, r0, #1
+	ldrh	r6, [r1, r2]
+	strh	r6, [r1, r5]	@ movhi
+	.loc 2 1319 0 discriminator 3
+	ldr	r1, [r8, #3840]
+	ldr	r5, [r1, r3, lsl #2]
+	add	r3, r3, #1
+	sxth	r3, r3
+	str	r5, [r1, r0, lsl #2]
+	.loc 2 1320 0 discriminator 3
+	ldr	r1, [r8, #124]
+	strh	lr, [r1, r2]	@ movhi
+	b	.L868
+.L896:
+	.align	2
+.L895:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+2556
+	.word	.LANCHOR0+36
+	.word	.LANCHOR1+328
+	.word	.LC1
+	.word	.LANCHOR0+3904
+.LFE210:
+	.fnend
+	.size	FtlScanSysBlk, .-FtlScanSysBlk
+	.align	2
+	.global	FtlMapTblRecovery
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlMapTblRecovery, %function
+FtlMapTblRecovery:
+	.fnstart
+.LFB215:
+	.loc 2 1466 0
+	@ args = 0, pretend = 0, frame = 24
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL708:
+	.movsp ip
+	mov	ip, sp
+.LCFI276:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI277:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI278:
+	.pad #28
+	sub	sp, sp, #28
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 1466 0
+	.loc 2 1470 0
+	ldr	r3, [r0, #24]
+.LVL709:
+	.loc 2 1466 0
+	mov	r4, r0
+	.loc 2 1478 0
+	ldr	r6, .L924
+	.loc 2 1477 0
+	mov	r1, #0
+	.loc 2 1471 0
+	ldr	r9, [r0, #12]
+.LVL710:
+	.loc 2 1483 0
+	mov	r7, #0
+	.loc 2 1470 0
+	str	r3, [fp, #-48]
+	.loc 2 1472 0
+	ldr	r3, [r0, #16]
+.LVL711:
+	mov	r5, r6
+	str	r3, [fp, #-60]
+	.loc 2 1473 0
+	ldrh	r3, [r0, #6]
+.LVL712:
+	str	r3, [fp, #-52]
+	.loc 2 1474 0
+	ldrh	r3, [r0, #8]
+.LVL713:
+	.loc 2 1477 0
+	ldr	r0, [fp, #-48]
+.LVL714:
+	.loc 2 1474 0
+	str	r3, [fp, #-56]
+	.loc 2 1477 0
+	ldr	r3, [fp, #-52]
+.LVL715:
+	lsl	r2, r3, #2
+	bl	ftl_memset
+.LVL716:
+	.loc 2 1478 0
+	ldr	r3, [r6, #2244]
+	.loc 2 1479 0
+	ldr	r8, [r6, #3244]
+	.loc 2 1483 0
+	str	r7, [r4, #32]
+	.loc 2 1478 0
+	str	r3, [r6, #3232]
+	.loc 2 1481 0
+	mvn	r3, #0
+	.loc 2 1479 0
+	str	r8, [r6, #3236]
+	.loc 2 1481 0
+	strh	r3, [r4]	@ movhi
+	.loc 2 1482 0
+	strh	r3, [r4, #2]	@ movhi
+	.loc 2 1485 0
+	mov	r3, #1
+	.loc 2 1484 0
+	str	r7, [r4, #28]
+	.loc 2 1485 0
+	str	r3, [r4, #36]
+.LVL717:
+.L898:
+	.loc 2 1486 0 discriminator 1
+	ldr	r2, [fp, #-56]
+.LVL718:
+	sxth	r3, r7
+.LVL719:
+	cmp	r3, r2
+	bge	.L915
+	.loc 2 1488 0
+	ldr	r2, [fp, #-56]
+	sub	r2, r2, #1
+.LVL720:
+	cmp	r3, r2
+	lsl	r2, r3, #1
+	bne	.L899
+	.loc 2 1490 0
+	ldrh	r0, [r9, r2]
+.LVL721:
+	mov	r1, #1
+.LVL722:
+	add	r10, r9, r2
+.LVL723:
+	str	r3, [fp, #-56]
+	bl	FtlGetLastWrittenPage
+.LVL724:
+	.loc 2 1493 0
+	ldr	r1, [fp, #-60]
+.LVL725:
+	.loc 2 1490 0
+	sxth	r2, r0
+.LVL726:
+	.loc 2 1493 0
+	ldr	r3, [fp, #-56]
+.LVL727:
+	.loc 2 1491 0
+	add	r0, r0, #1
+	.loc 2 1492 0
+	strh	r7, [r4]	@ movhi
+	.loc 2 1494 0
+	mov	r9, #0
+.LVL728:
+	.loc 2 1491 0
+	strh	r0, [r4, #2]	@ movhi
+	.loc 2 1494 0
+	add	r7, r2, #1
+	.loc 2 1493 0
+	ldr	r3, [r1, r3, lsl #2]
+.LVL729:
+	str	r3, [r4, #28]
+	.loc 2 1497 0
+	ldr	r3, .L924+4
+.LVL730:
+.L900:
+	.loc 2 1494 0 discriminator 1
+	sxth	r2, r9
+.LVL731:
+	cmp	r2, r7
+	blt	.L902
+.LVL732:
+.L915:
+	.loc 2 1547 0
+	mov	r0, r4
+.LVL733:
+	bl	ftl_free_no_use_map_blk
+.LVL734:
+	.loc 2 1548 0
+	ldrh	r2, [r4, #2]
+	ldrh	r3, [r5, #80]
+	cmp	r2, r3
+	bne	.L904
+	.loc 2 1550 0
+	mov	r0, r4
+	bl	ftl_map_blk_alloc_new_blk
+.LVL735:
+.L904:
+	.loc 2 1553 0
+	mov	r0, r4
+	bl	ftl_map_blk_gc
+.LVL736:
+	.loc 2 1555 0
+	mov	r0, r4
+	bl	ftl_map_blk_gc
+.LVL737:
+	.loc 2 1557 0
+	mov	r0, #0
+	sub	sp, fp, #40
+.LCFI279:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL738:
+.L902:
+.LCFI280:
+	.loc 2 1496 0
+	ldrh	r1, [r10]
+.LVL739:
+	.loc 2 1497 0
+	mov	r0, r3
+.LVL740:
+	str	r3, [fp, #-56]
+	.loc 2 1496 0
+	orr	r2, r2, r1, lsl #10
+	str	r2, [r6, #3228]
+	.loc 2 1497 0
+	mov	r2, #1
+	mov	r1, r2
+	bl	FlashReadPages
+.LVL741:
+	.loc 2 1500 0
+	ldr	r2, [r6, #3224]
+	ldr	r3, [fp, #-56]
+	cmn	r2, #1
+	beq	.L901
+	.loc 2 1502 0
+	ldrh	r2, [r8, #8]
+	ldr	r1, [fp, #-52]
+.LVL742:
+	cmp	r1, r2
+	bls	.L901
+	.loc 2 1502 0 is_stmt 0 discriminator 1
+	ldrh	r0, [r8]
+	ldrh	r1, [r4, #4]
+.LVL743:
+	cmp	r0, r1
+	.loc 2 1504 0 is_stmt 1 discriminator 1
+	ldreq	r1, [r6, #3228]
+	ldreq	r0, [fp, #-48]
+.LVL744:
+	streq	r1, [r0, r2, lsl #2]
+.LVL745:
+.L901:
+	add	r9, r9, #1
+	b	.L900
+.LVL746:
+.L899:
+	.loc 2 1510 0
+	ldr	r3, [r5, #2244]
+.LVL747:
+	.loc 2 1512 0
+	ldr	r0, .L924+4
+.LVL748:
+	.loc 2 1510 0
+	str	r3, [r5, #3232]
+	.loc 2 1511 0
+	add	r3, r9, r2
+	str	r3, [fp, #-64]
+	ldrh	r2, [r9, r2]
+	ldrh	r3, [r5, #80]
+	sub	r3, r3, #1
+	orr	r3, r3, r2, lsl #10
+	.loc 2 1512 0
+	mov	r2, #1
+	mov	r1, r2
+.LVL749:
+	.loc 2 1511 0
+	str	r3, [r5, #3228]
+	.loc 2 1512 0
+	bl	FlashReadPages
+.LVL750:
+	.loc 2 1515 0
+	ldr	r3, [r5, #3224]
+	cmn	r3, #1
+	beq	.L917
+	.loc 2 1515 0 is_stmt 0 discriminator 1
+	ldrh	r2, [r8]
+	ldrh	r3, [r4, #4]
+	cmp	r2, r3
+	bne	.L917
+	.loc 2 1515 0 discriminator 2
+	ldrh	r2, [r8, #8]
+	movw	r3, #64245
+	cmp	r2, r3
+	beq	.L906
+.L917:
+	mov	r10, #0
+.LVL751:
+.L907:
+	.loc 2 1530 0 is_stmt 1 discriminator 1
+	ldrh	r2, [r5, #80]
+.LVL752:
+	sxth	r3, r10
+	cmp	r3, r2
+	bge	.L913
+	.loc 2 1532 0
+	ldr	r2, [fp, #-64]
+	.loc 2 1533 0
+	ldr	r0, .L924+4
+	.loc 2 1532 0
+	ldrh	r2, [r2]
+	orr	r3, r3, r2, lsl #10
+	.loc 2 1533 0
+	mov	r2, #1
+	mov	r1, r2
+.LVL753:
+	.loc 2 1532 0
+	str	r3, [r5, #3228]
+	.loc 2 1533 0
+	bl	FlashReadPages
+.LVL754:
+	.loc 2 1536 0
+	ldr	r3, [r5, #3224]
+	cmn	r3, #1
+	beq	.L911
+	.loc 2 1538 0
+	ldrh	r3, [r8, #8]
+	ldr	r2, [fp, #-52]
+.LVL755:
+	cmp	r2, r3
+	bls	.L911
+	.loc 2 1538 0 is_stmt 0 discriminator 1
+	ldrh	r1, [r8]
+	ldrh	r2, [r4, #4]
+.LVL756:
+	cmp	r1, r2
+	.loc 2 1540 0 is_stmt 1 discriminator 1
+	ldreq	r2, [r5, #3228]
+	ldreq	r1, [fp, #-48]
+.LVL757:
+	streq	r2, [r1, r3, lsl #2]
+.LVL758:
+.L911:
+	add	r10, r10, #1
+	b	.L907
+.LVL759:
+.L906:
+	mov	r1, #0
+	.loc 2 1523 0 discriminator 1
+	mov	ip, #4
+.LVL760:
+.L908:
+	.loc 2 1518 0 discriminator 1
+	ldrh	r2, [r5, #80]
+	sxth	r3, r1
+	sub	r2, r2, #1
+	cmp	r3, r2
+	blt	.L910
+.L913:
+	add	r7, r7, #1
+	b	.L898
+.L910:
+	.loc 2 1520 0
+	ldr	r0, [r5, #2244]
+.LVL761:
+	add	r1, r1, #1
+	.loc 2 1521 0
+	ldr	r10, [fp, #-52]
+	.loc 2 1520 0
+	ldr	r2, [r0, r3, lsl #3]
+	.loc 2 1521 0
+	uxth	lr, r2
+	cmp	r10, lr
+	.loc 2 1523 0
+	addhi	r3, ip, r3, lsl #3
+	movhi	r2, lr
+	ldrhi	r3, [r0, r3]
+	ldrhi	r0, [fp, #-48]
+.LVL762:
+	strhi	r3, [r0, r2, lsl #2]
+	b	.L908
+.L925:
+	.align	2
+.L924:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+3224
+.LFE215:
+	.fnend
+	.size	FtlMapTblRecovery, .-FtlMapTblRecovery
+	.align	2
+	.global	FtlLoadVonderInfo
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlLoadVonderInfo, %function
+FtlLoadVonderInfo:
+	.fnstart
+.LFB216:
+	.loc 2 1560 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI281:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI282:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI283:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 1560 0
+	.loc 2 1561 0
+	ldr	r3, .L927
+	ldrh	r2, [r3, #96]
+	add	r0, r3, #3904
+	add	r0, r0, #4
+	strh	r2, [r0, #10]	@ movhi
+	.loc 2 1562 0
+	ldr	r2, .L927+4
+	strh	r2, [r0, #4]	@ movhi
+	.loc 2 1563 0
+	ldrh	r2, [r3, #120]
+	strh	r2, [r0, #8]	@ movhi
+	.loc 2 1564 0
+	ldrh	r2, [r3, #98]
+	strh	r2, [r0, #6]	@ movhi
+	.loc 2 1565 0
+	ldr	r2, [r3, #124]
+	str	r2, [r3, #3920]
+	.loc 2 1566 0
+	ldr	r2, [r3, #3840]
+	str	r2, [r3, #3924]
+	.loc 2 1567 0
+	ldr	r2, [r3, #3836]
+	str	r2, [r3, #3928]
+	.loc 2 1568 0
+	ldr	r2, [r3, #3844]
+	str	r2, [r3, #3932]
+	.loc 2 1570 0
+	bl	FtlMapTblRecovery
+.LVL763:
+	.loc 2 1573 0
+	mov	r0, #0
+	ldmfd	sp, {fp, sp, pc}
+.L928:
+	.align	2
+.L927:
+	.word	.LANCHOR0
+	.word	-3962
+.LFE216:
+	.fnend
+	.size	FtlLoadVonderInfo, .-FtlLoadVonderInfo
+	.align	2
+	.global	FtlL2PDataInit
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlL2PDataInit, %function
+FtlL2PDataInit:
+	.fnstart
+.LFB217:
+	.loc 2 1576 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI284:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI285:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI286:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 1576 0
+	.loc 2 1578 0
+	mov	r1, #0
+	.loc 2 1583 0
+	mvn	r5, #0
+	.loc 2 1578 0
+	ldr	r4, .L932
+	ldr	r2, [r4, #104]
+	ldr	r0, [r4, #3832]
+	lsl	r2, r2, #1
+	bl	ftl_memset
+.LVL764:
+	.loc 2 1579 0
+	ldrh	r3, [r4, #86]
+	mov	r1, #255
+	ldrh	r2, [r4, #114]
+	ldr	r0, [r4, #3856]
+	mul	r2, r2, r3
+	bl	ftl_memset
+.LVL765:
+	.loc 2 1580 0
+	mov	r2, #0
+	mov	r3, r4
+	.loc 2 1582 0
+	mov	lr, #12
+	mov	r4, r2
+.L930:
+	.loc 2 1580 0 discriminator 1
+	ldrh	r0, [r3, #114]
+	uxth	r1, r2
+	add	ip, r2, #1
+	cmp	r0, r1
+	bhi	.L931
+	.loc 2 1586 0
+	ldr	r2, .L932+4
+	mvn	r1, #0
+	.loc 2 1587 0
+	movw	r0, #3864
+	strh	r1, [r3, r0]	@ movhi
+	.loc 2 1586 0
+	strh	r1, [r2, #2]	@ movhi
+	.loc 2 1588 0
+	ldr	r1, [r3, #104]
+	strh	r1, [r2, #10]	@ movhi
+	.loc 2 1589 0
+	ldr	r1, .L932+8
+	strh	r1, [r2, #4]	@ movhi
+	.loc 2 1590 0
+	ldrh	r1, [r2, #40]
+	strh	r1, [r2, #8]	@ movhi
+	.loc 2 1591 0
+	ldrh	r1, [r3, #112]
+	strh	r1, [r2, #6]	@ movhi
+	.loc 2 1592 0
+	ldr	r2, [r3, #3828]
+	str	r2, [r3, #3876]
+	.loc 2 1593 0
+	ldr	r2, [r3, #3852]
+	str	r2, [r3, #3880]
+	.loc 2 1594 0
+	ldr	r2, [r3, #3832]
+	str	r2, [r3, #3884]
+	.loc 2 1595 0
+	ldr	r2, [r3, #3848]
+	str	r2, [r3, #3888]
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L931:
+	.loc 2 1582 0 discriminator 3
+	uxth	r2, r2
+	ldr	r1, [r3, #2424]
+	mul	r0, lr, r2
+	add	r6, r1, r0
+	str	r4, [r6, #4]
+	.loc 2 1583 0 discriminator 3
+	strh	r5, [r1, r0]	@ movhi
+	.loc 2 1584 0 discriminator 3
+	ldr	r1, [r3, #2424]
+	add	r1, r1, r0
+	ldrh	r0, [r3, #86]
+	mul	r2, r2, r0
+	ldr	r0, [r3, #3856]
+	bic	r2, r2, #3
+	add	r2, r0, r2
+	str	r2, [r1, #8]
+	mov	r2, ip
+	b	.L930
+.L933:
+	.align	2
+.L932:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+3864
+	.word	-3902
+.LFE217:
+	.fnend
+	.size	FtlL2PDataInit, .-FtlL2PDataInit
+	.align	2
+	.global	FtlLoadMapInfo
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlLoadMapInfo, %function
+FtlLoadMapInfo:
+	.fnstart
+.LFB218:
+	.loc 2 1599 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI287:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI288:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI289:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 1599 0
+	.loc 2 1600 0
+	bl	FtlL2PDataInit
+.LVL766:
+	.loc 2 1602 0
+	ldr	r0, .L935
+	bl	FtlMapTblRecovery
+.LVL767:
+	.loc 2 1605 0
+	mov	r0, #0
+	ldmfd	sp, {fp, sp, pc}
+.L936:
+	.align	2
+.L935:
+	.word	.LANCHOR0+3864
+.LFE218:
+	.fnend
+	.size	FtlLoadMapInfo, .-FtlLoadMapInfo
+	.align	2
+	.global	FtlVariablesInit
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlVariablesInit, %function
+FtlVariablesInit:
+	.fnstart
+.LFB147:
+	.loc 3 493 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI290:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI291:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI292:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 493 0
+	.loc 3 497 0
+	mvn	r3, #0
+	.loc 3 496 0
+	mov	r5, #0
+	ldr	r4, .L938
+	.loc 3 502 0
+	mov	r1, r5
+	.loc 3 497 0
+	add	r2, r4, #3952
+	.loc 3 502 0
+	ldr	r0, [r4, #124]
+	.loc 3 497 0
+	strh	r3, [r2]	@ movhi
+	.loc 3 502 0
+	ldrh	r2, [r4, #96]
+	.loc 3 500 0
+	str	r3, [r4, #3964]
+	.loc 3 496 0
+	str	r5, [r4, #3948]
+	.loc 3 498 0
+	str	r5, [r4, #3956]
+	.loc 3 502 0
+	lsl	r2, r2, #1
+	.loc 3 499 0
+	str	r5, [r4, #3960]
+	.loc 3 501 0
+	strh	r5, [r4, #120]	@ movhi
+	.loc 3 502 0
+	bl	ftl_memset
+.LVL768:
+	.loc 3 503 0
+	ldrh	r2, [r4, #18]
+	mov	r1, r5
+	ldr	r0, [r4, #2248]
+	lsl	r2, r2, #1
+	bl	ftl_memset
+.LVL769:
+	.loc 3 504 0
+	ldrh	r2, [r4, #18]
+	mov	r1, r5
+	ldr	r0, [r4, #3816]
+	lsl	r2, r2, #1
+	bl	ftl_memset
+.LVL770:
+.LBB409:
+.LBB410:
+.LBB411:
+	.loc 1 202 0
+	add	r0, r4, #2496
+	mov	r1, #48
+	add	r0, r0, #8
+	bl	__memzero
+.LVL771:
+.LBE411:
+.LBE410:
+.LBE409:
+.LBB412:
+.LBB413:
+.LBB414:
+	add	r0, r4, #2608
+	mov	r1, #512
+	add	r0, r0, #8
+	bl	__memzero
+.LVL772:
+.LBE414:
+.LBE413:
+.LBE412:
+	.loc 3 507 0
+	bl	FtlGcBufInit
+.LVL773:
+	.loc 3 508 0
+	bl	FtlL2PDataInit
+.LVL774:
+	.loc 3 510 0
+	mov	r0, r5
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L939:
+	.align	2
+.L938:
+	.word	.LANCHOR0
+.LFE147:
+	.fnend
+	.size	FtlVariablesInit, .-FtlVariablesInit
+	.align	2
+	.global	SupperBlkListInit
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	SupperBlkListInit, %function
+SupperBlkListInit:
+	.fnstart
+.LFB225:
+	.loc 2 2067 0
+	@ args = 0, pretend = 0, frame = 16
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI293:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI294:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI295:
+	.pad #20
+	sub	sp, sp, #20
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2067 0
+	.loc 2 2071 0
+	ldr	r4, .L951
+	mov	r2, #6
+	.loc 2 2072 0
+	mov	r5, #0
+	.loc 2 2071 0
+	mov	r1, #0
+	.loc 2 2077 0
+	mov	r9, r5
+.LVL775:
+	mov	r7, r5
+.LVL776:
+	.loc 2 2071 0
+	ldrh	r3, [r4, #18]
+	.loc 2 2082 0
+	add	r10, r4, #36
+	.loc 2 2071 0
+	ldr	r0, [r4, #2252]
+	mul	r2, r2, r3
+	bl	ftl_memset
+.LVL777:
+	.loc 2 2075 0
+	movw	r3, #2268
+	.loc 2 2072 0
+	str	r5, [r4, #2272]
+	.loc 2 2075 0
+	strh	r5, [r4, r3]	@ movhi
+	.loc 2 2076 0
+	movw	r3, #2276
+	.loc 2 2073 0
+	str	r5, [r4, #2256]
+	.loc 2 2074 0
+	str	r5, [r4, #2264]
+	.loc 2 2076 0
+	strh	r5, [r4, r3]	@ movhi
+.LVL778:
+.L941:
+	.loc 2 2079 0 discriminator 1
+	ldrh	r3, [r4, #16]
+	uxth	r8, r5
+	cmp	r8, r3
+	bcs	.L947
+	.loc 2 2084 0
+	ldrh	r3, [r4, #78]
+	.loc 2 2081 0
+	ldrh	r2, [r4, #8]
+	.loc 2 2084 0
+	str	r3, [fp, #-48]
+	mov	r3, #0
+	mov	r6, r3
+	b	.L948
+.L943:
+	.loc 2 2082 0
+	mov	r1, r8
+	ldrb	r0, [r10, r3]	@ zero_extendqisi2
+	str	r2, [fp, #-56]
+	str	r3, [fp, #-52]
+	bl	V2P_block
+.LVL779:
+	.loc 2 2083 0
+	bl	FtlBbmIsBadBlock
+.LVL780:
+	cmp	r0, #0
+	ldr	r3, [fp, #-52]
+	.loc 2 2084 0
+	ldreq	r1, [fp, #-48]
+	.loc 2 2083 0
+	ldr	r2, [fp, #-56]
+	add	r3, r3, #1
+	.loc 2 2084 0
+	addeq	r6, r6, r1
+	uxtheq	r6, r6
+.L948:
+	.loc 2 2081 0 discriminator 1
+	uxth	r1, r3
+	cmp	r2, r1
+	bhi	.L943
+	.loc 2 2086 0
+	cmp	r6, #0
+	moveq	r0, r6
+	beq	.L944
+	.loc 2 2087 0
+	mov	r1, r6
+	mov	r0, #32768
+	bl	__aeabi_idiv
+.LVL781:
+.L944:
+	.loc 2 2088 0
+	ldr	r1, [r4, #2252]
+	uxth	r3, r5
+	mov	r2, #6
+	mla	r2, r2, r3, r1
+	strh	r0, [r2, #4]	@ movhi
+	.loc 2 2090 0
+	ldr	r2, .L951+4
+	ldrh	r1, [r2]
+	cmp	r1, r8
+	beq	.L945
+	.loc 2 2090 0 is_stmt 0 discriminator 1
+	ldrh	r1, [r2, #48]
+	cmp	r1, r8
+	beq	.L945
+	.loc 2 2091 0 is_stmt 1
+	ldrh	r2, [r2, #96]
+	cmp	r2, r8
+	beq	.L945
+	.loc 2 2094 0
+	ldr	r2, [r4, #2260]
+	lsl	r3, r3, #1
+	ldrh	r3, [r2, r3]
+	cmp	r3, #0
+	bne	.L946
+	.loc 2 2095 0
+	add	r9, r9, #1
+.LVL782:
+	.loc 2 2096 0
+	mov	r0, r8
+	.loc 2 2095 0
+	uxth	r9, r9
+.LVL783:
+	.loc 2 2096 0
+	bl	INSERT_FREE_LIST
+.LVL784:
+.L945:
+	add	r5, r5, #1
+	b	.L941
+.L946:
+	.loc 2 2098 0
+	add	r7, r7, #1
+.LVL785:
+	.loc 2 2099 0
+	mov	r0, r8
+	.loc 2 2098 0
+	uxth	r7, r7
+.LVL786:
+	.loc 2 2099 0
+	bl	INSERT_DATA_LIST
+.LVL787:
+	b	.L945
+.L947:
+	.loc 2 2103 0
+	movw	r2, #2268
+	strh	r7, [r4, r2]	@ movhi
+	.loc 2 2105 0
+	add	r7, r7, r9
+.LVL788:
+	cmp	r7, r3
+	.loc 2 2104 0
+	movw	r2, #2276
+	strh	r9, [r4, r2]	@ movhi
+	.loc 2 2105 0
+	ble	.L949
+	.loc 2 2105 0 is_stmt 0 discriminator 1
+	movw	r2, #2105
+	ldr	r1, .L951+8
+	ldr	r0, .L951+12
+	bl	printk
+.LVL789:
+.L949:
+	.loc 2 2107 0 is_stmt 1
+	mov	r0, #0
+	sub	sp, fp, #40
+.LCFI296:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL790:
+.L952:
+	.align	2
+.L951:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+2280
+	.word	.LANCHOR1+342
+	.word	.LC1
+.LFE225:
+	.fnend
+	.size	SupperBlkListInit, .-SupperBlkListInit
+	.align	2
+	.global	FtlGcPageVarInit
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlGcPageVarInit, %function
+FtlGcPageVarInit:
+	.fnstart
+.LFB249:
+	.loc 5 202 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI297:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI298:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI299:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 202 0
+	.loc 5 203 0
+	mov	r3, #0
+	movw	r2, #3172
+	ldr	r4, .L954
+	.loc 5 205 0
+	mov	r1, #255
+	.loc 5 203 0
+	strh	r3, [r4, r2]	@ movhi
+	.loc 5 204 0
+	movw	r2, #3180
+	strh	r3, [r4, r2]	@ movhi
+	.loc 5 205 0
+	ldrh	r2, [r4, #82]
+	ldr	r0, [r4, #3168]
+	lsl	r2, r2, #1
+	bl	ftl_memset
+.LVL791:
+	.loc 5 206 0
+	ldrh	r3, [r4, #82]
+	mov	r2, #12
+	mov	r1, #255
+	ldr	r0, [r4, #3176]
+	mul	r2, r2, r3
+	bl	ftl_memset
+.LVL792:
+	.loc 5 207 0
+	bl	FtlGcBufInit
+.LVL793:
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L955:
+	.align	2
+.L954:
+	.word	.LANCHOR0
+.LFE249:
+	.fnend
+	.size	FtlGcPageVarInit, .-FtlGcPageVarInit
+	.align	2
+	.global	FtlGcScanTempBlk
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlGcScanTempBlk, %function
+FtlGcScanTempBlk:
+	.fnstart
+.LFB250:
+	.loc 5 211 0
+	@ args = 0, pretend = 0, frame = 24
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL794:
+	.movsp ip
+	mov	ip, sp
+.LCFI300:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI301:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI302:
+	.pad #28
+	sub	sp, sp, #28
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 211 0
+	.loc 5 220 0
+	ldr	r3, .L979
+	.loc 5 211 0
+	mov	r6, r0
+	str	r1, [fp, #-48]
+	.loc 5 220 0
+	ldrh	r4, [r3, #4]
+.LVL795:
+	.loc 5 221 0
+	movw	r3, #65535
+	cmp	r4, r3
+	beq	.L973
+	.loc 5 223 0
+	cmp	r4, #0
+	bne	.L957
+.LVL796:
+.L958:
+	.loc 5 224 0
+	bl	FtlGcPageVarInit
+.LVL797:
+	b	.L959
+.LVL798:
+.L973:
+	.loc 5 222 0
+	mov	r4, #0
+.L957:
+	.loc 5 223 0 discriminator 1
+	ldr	r3, .L979+4
+	ldr	r2, [fp, #-48]
+.LVL799:
+	ldrh	r3, [r3, #78]
+	cmp	r3, r2
+	beq	.L958
+.L959:
+	.loc 5 231 0
+	ldr	r5, .L979+4
+	.loc 5 222 0
+	mov	r8, #0
+.LVL800:
+.L967:
+	.loc 5 228 0
+	ldrh	r2, [r6]
+.LVL801:
+	movw	r3, #65535
+	.loc 5 226 0
+	mov	r0, #0
+	strb	r0, [r6, #8]
+	.loc 5 228 0
+	cmp	r2, r3
+	beq	.L960
+.L970:
+	.loc 5 231 0
+	ldrh	r3, [r5, #8]
+	mov	r2, #0
+	.loc 5 234 0
+	ldr	r0, [r5, #3792]
+	add	ip, r6, #16
+	.loc 5 236 0
+	ldrh	r10, [r5, #88]
+	.loc 5 230 0
+	mov	r7, r2
+	.loc 5 231 0
+	str	r3, [fp, #-52]
+	.loc 5 233 0
+	movw	r9, #65535
+	.loc 5 235 0
+	ldr	r3, [r5, #3152]
+	str	r3, [fp, #-56]
+	ldrh	r3, [r5, #86]
+	str	r3, [fp, #-60]
+	.loc 5 236 0
+	ldr	r3, [r5, #3156]
+	str	r3, [fp, #-64]
+.LVL802:
+.L961:
+	.loc 5 231 0 discriminator 1
+	ldr	r1, [fp, #-52]
+	uxth	r3, r2
+.LVL803:
+	cmp	r1, r3
+	bhi	.L963
+	.loc 5 241 0
+	mov	r9, #0
+	.loc 5 240 0
+	mov	r2, #0
+	mov	r1, r7
+	bl	FlashReadPages
+.LVL804:
+.L964:
+	.loc 5 241 0 discriminator 1
+	uxth	r3, r9
+	cmp	r7, r3
+	bhi	.L968
+	.loc 5 268 0
+	ldr	r3, [fp, #-48]
+.LVL805:
+	.loc 5 266 0
+	add	r8, r8, #1
+	.loc 5 264 0
+	add	r4, r4, #1
+.LVL806:
+	uxth	r4, r4
+.LVL807:
+	.loc 5 268 0
+	cmp	r3, r8
+	bls	.L969
+.L971:
+	.loc 5 274 0
+	ldrh	r3, [r5, #78]
+.LVL808:
+	cmp	r3, r4
+	bhi	.L970
+	.loc 5 265 0
+	mov	r0, #0
+.LVL809:
+	b	.L960
+.LVL810:
+.L963:
+	.loc 5 232 0
+	ldrh	r3, [ip], #2
+.LVL811:
+	.loc 5 233 0
+	cmp	r3, r9
+	beq	.L962
+	.loc 5 234 0
+	mov	r1, #20
+	orr	r3, r4, r3, lsl #10
+.LVL812:
+	mla	r1, r1, r7, r0
+	str	r3, [r1, #4]
+	.loc 5 235 0
+	ldr	r3, [fp, #-60]
+	mul	r3, r3, r7
+	add	lr, r3, #3
+	cmp	r3, #0
+	movlt	r3, lr
+	ldr	lr, [fp, #-56]
+	bic	r3, r3, #3
+	add	r3, lr, r3
+	str	r3, [r1, #8]
+	.loc 5 236 0
+	mul	r3, r10, r7
+	.loc 5 237 0
+	add	r7, r7, #1
+.LVL813:
+	uxth	r7, r7
+.LVL814:
+	.loc 5 236 0
+	add	lr, r3, #3
+	cmp	r3, #0
+	movlt	r3, lr
+	ldr	lr, [fp, #-64]
+	bic	r3, r3, #3
+	add	r3, lr, r3
+	str	r3, [r1, #12]
+.LVL815:
+.L962:
+	add	r2, r2, #1
+	b	.L961
+.LVL816:
+.L968:
+	.loc 5 242 0
+	mov	r3, #20
+	ldr	r2, [r5, #3792]
+	mul	r10, r3, r9
+	str	r2, [fp, #-60]
+	add	r3, r2, r10
+	ldr	r1, [r3, #4]
+.LVL817:
+	str	r3, [fp, #-56]
+	.loc 5 243 0
+	ubfx	r0, r1, #10, #16
+	str	r1, [fp, #-52]
+	bl	P2V_plane
+.LVL818:
+	.loc 5 245 0
+	ldr	r2, [fp, #-60]
+	ldr	r2, [r2, r10]
+	cmp	r2, #0
+	bne	.L965
+	.loc 5 247 0
+	ldr	r3, [fp, #-56]
+	.loc 5 248 0
+	movw	r2, #65535
+	add	r9, r9, #1
+	ldr	r1, [fp, #-52]
+.LVL819:
+	.loc 5 247 0
+	ldr	r3, [r3, #12]
+.LVL820:
+	.loc 5 248 0
+	ldrh	ip, [r3]
+	cmp	ip, r2
+	bne	.L966
+	.loc 5 249 0
+	mov	r3, #1
+.LVL821:
+	str	r3, [r5, #3960]
+.LVL822:
+.L960:
+	.loc 5 281 0
+	ldr	r3, .L979
+	mvn	r2, #0
+	.loc 5 283 0
+	strb	r0, [r6, #6]
+	.loc 5 284 0
+	mov	r1, r4
+.LVL823:
+	.loc 5 282 0
+	strh	r4, [r6, #2]	@ movhi
+	.loc 5 281 0
+	strh	r2, [r3, #4]	@ movhi
+	.loc 5 284 0
+	mov	r2, r0
+	mov	r0, r6
+.LVL824:
+	bl	ftl_sb_update_avl_pages
+.LVL825:
+	.loc 5 285 0
+	b	.L972
+.LVL826:
+.L966:
+	.loc 5 252 0
+	ldr	r2, [r3, #8]
+	ldr	r0, [r3, #12]
+	bl	FtlGcUpdatePage
+.LVL827:
+	b	.L964
+.L965:
+	.loc 5 256 0
+	ldrh	r3, [r6]
+	mov	r4, #0
+.LVL828:
+	ldr	r2, [r5, #2260]
+	lsl	r3, r3, #1
+	strh	r4, [r2, r3]	@ movhi
+	.loc 5 257 0
+	ldrh	r0, [r6]
+	bl	INSERT_FREE_LIST
+.LVL829:
+	.loc 5 258 0
+	mvn	r3, #0
+	strh	r3, [r6]	@ movhi
+	.loc 5 260 0
+	bl	FtlGcPageVarInit
+.LVL830:
+	.loc 5 261 0
+	b	.L967
+.LVL831:
+.L969:
+	.loc 5 268 0 discriminator 1
+	ldr	r2, .L979
+	movw	r1, #65535
+	ldrh	r3, [r2, #4]
+.LVL832:
+	cmp	r3, r1
+	beq	.L971
+	.loc 5 269 0
+	add	r3, r3, r8
+	strh	r3, [r2, #4]	@ movhi
+	.loc 5 270 0
+	ldrh	r3, [r5, #78]
+	cmp	r3, r4
+	bls	.L971
+.L972:
+	.loc 5 286 0
+	mvn	r0, #0
+	sub	sp, fp, #40
+.LCFI303:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL833:
+.L980:
+	.align	2
+.L979:
+	.word	.LANCHOR2
+	.word	.LANCHOR0
+.LFE250:
+	.fnend
+	.size	FtlGcScanTempBlk, .-FtlGcScanTempBlk
+	.align	2
+	.global	ftl_memcpy
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	ftl_memcpy, %function
+ftl_memcpy:
+	.fnstart
+.LFB268:
+	.loc 1 206 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL834:
+	.movsp ip
+	mov	ip, sp
+.LCFI304:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI305:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI306:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 1 206 0
+	.loc 1 207 0
+	bl	memcpy
+.LVL835:
+	.loc 1 208 0
+	ldmfd	sp, {fp, sp, pc}
+.LFE268:
+	.fnend
+	.size	ftl_memcpy, .-ftl_memcpy
+	.align	2
+	.global	FtlBbmTblFlush
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlBbmTblFlush, %function
+FtlBbmTblFlush:
+	.fnstart
+.LFB166:
+	.loc 4 80 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI307:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI308:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI309:
+	.pad #12
+	sub	sp, sp, #12
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 4 80 0
+	.loc 4 87 0
+	ldr	r4, .L991
+	.loc 4 91 0
+	mov	r5, #0
+.LVL836:
+	.loc 4 92 0
+	ldr	r7, .L991+4
+	.loc 4 89 0
+	mov	r1, #0
+	.loc 4 87 0
+	ldr	r0, [r4, #2244]
+	add	r6, r4, #152
+	.loc 4 88 0
+	ldr	r3, [r4, #3244]
+	.loc 4 89 0
+	ldrh	r2, [r4, #86]
+	.loc 4 87 0
+	str	r0, [r4, #3232]
+	.loc 4 88 0
+	str	r3, [r4, #3236]
+	.loc 4 89 0
+	bl	ftl_memset
+.LVL837:
+.L983:
+	.loc 4 91 0 discriminator 1
+	ldrh	r3, [r4, #30]
+	cmp	r5, r3
+	blt	.L984
+	.loc 4 94 0
+	ldr	r6, [r4, #3236]
+.LVL838:
+.LBB420:
+.LBB421:
+.LBB422:
+	.loc 1 202 0
+	mov	r2, #16
+	mov	r1, #255
+.LBE422:
+.LBE421:
+.LBE420:
+	.loc 4 108 0
+	ldr	r9, .L991+8
+	.loc 4 109 0
+	ldr	r8, .L991+12
+	.loc 4 84 0
+	mov	r5, #0
+.LVL839:
+.LBB427:
+.LBB425:
+.LBB423:
+	.loc 1 202 0
+	mov	r0, r6
+.LBE423:
+.LBE425:
+.LBE427:
+	.loc 4 82 0
+	mov	r7, r5
+.LVL840:
+.LBB428:
+.LBB426:
+.LBB424:
+	.loc 1 202 0
+	bl	memset
+.LVL841:
+.LBE424:
+.LBE426:
+.LBE428:
+	.loc 4 97 0
+	ldr	r3, .L991+16
+	strh	r3, [r6]	@ movhi
+	.loc 4 98 0
+	ldr	r3, [r4, #136]
+	str	r3, [r6, #4]
+	.loc 4 99 0
+	ldrh	r3, [r4, #128]
+	strh	r3, [r6, #2]	@ movhi
+	.loc 4 100 0
+	ldrh	r3, [r4, #132]
+	strh	r3, [r6, #8]	@ movhi
+	.loc 4 101 0
+	ldrh	r3, [r4, #134]
+	strh	r3, [r6, #10]	@ movhi
+	.loc 4 102 0
+	ldr	r3, [r4, #4]
+	strh	r3, [r6, #12]	@ movhi
+.L985:
+	.loc 4 104 0
+	ldr	r3, [r4, #2244]
+	.loc 4 106 0
+	mov	r10, #0
+	.loc 4 107 0
+	ldrh	r1, [r4, #128]
+	ldrh	r2, [r4, #130]
+	.loc 4 104 0
+	str	r3, [r4, #3232]
+	.loc 4 105 0
+	ldr	r3, [r4, #3244]
+	.loc 4 106 0
+	str	r10, [r4, #3224]
+	.loc 4 105 0
+	str	r3, [r4, #3236]
+	.loc 4 107 0
+	orr	r3, r2, r1, lsl #10
+	.loc 4 108 0
+	ldrh	r0, [r6, #10]
+	.loc 4 107 0
+	str	r3, [r4, #3228]
+	.loc 4 108 0
+	ldrh	r3, [r4, #132]
+	str	r0, [sp]
+	mov	r0, r9
+	bl	printk
+.LVL842:
+	.loc 4 109 0
+	mov	r3, #1
+	mov	r0, r8
+	mov	r2, r3
+	mov	r1, r3
+	bl	FlashProgPages
+.LVL843:
+	.loc 4 110 0
+	ldrh	r3, [r4, #80]
+	ldrh	r2, [r4, #130]
+	sub	r3, r3, #1
+	cmp	r2, r3
+	blt	.L986
+	.loc 4 113 0
+	ldr	r3, [r4, #136]
+	.loc 4 115 0
+	ldrh	r2, [r4, #128]
+	.loc 4 121 0
+	ldr	r0, [r4, #3760]
+	.loc 4 113 0
+	add	r3, r3, #1
+	.loc 4 117 0
+	strh	r10, [r4, #130]	@ movhi
+	.loc 4 113 0
+	str	r3, [r4, #136]
+	.loc 4 114 0
+	str	r3, [r6, #4]
+	.loc 4 116 0
+	ldrh	r3, [r4, #132]
+	.loc 4 115 0
+	strh	r2, [r6, #8]	@ movhi
+	.loc 4 118 0
+	strh	r2, [r4, #132]	@ movhi
+	.loc 4 122 0
+	mov	r2, #1
+	.loc 4 116 0
+	strh	r3, [r4, #128]	@ movhi
+	.loc 4 122 0
+	mov	r1, r2
+	.loc 4 119 0
+	lsl	r3, r3, #10
+	str	r3, [r4, #3228]
+	.loc 4 121 0
+	str	r3, [r0, #4]
+	.loc 4 122 0
+	bl	FlashEraseBlocks
+.LVL844:
+	.loc 4 123 0
+	mov	r3, #1
+	mov	r0, r8
+	mov	r2, r3
+	mov	r1, r3
+	bl	FlashProgPages
+.LVL845:
+.L986:
+	.loc 4 126 0
+	ldrh	r3, [r4, #130]
+	add	r3, r3, #1
+	strh	r3, [r4, #130]	@ movhi
+	.loc 4 127 0
+	ldr	r3, [r4, #3224]
+	cmn	r3, #1
+	bne	.L987
+	.loc 4 130 0
+	add	r5, r5, #1
+.LVL846:
+	.loc 4 129 0
+	ldr	r1, [r4, #3228]
+	.loc 4 130 0
+	uxth	r5, r5
+.LVL847:
+	.loc 4 129 0
+	ldr	r0, .L991+20
+	bl	printk
+.LVL848:
+	.loc 4 131 0
+	cmp	r5, #3
+	bls	.L985
+	.loc 4 132 0
+	mov	r2, r5
+	ldr	r1, [r4, #3228]
+	ldr	r0, .L991+24
+	bl	printk
+.LVL849:
+.L989:
+	b	.L989
+.LVL850:
+.L984:
+	.loc 4 92 0 discriminator 3
+	ldrh	r2, [r7]
+	ldr	r3, [r4, #3232]
+	ldr	r1, [r6, #4]!
+	mul	r0, r2, r5
+	lsl	r2, r2, #2
+	.loc 4 91 0 discriminator 3
+	add	r5, r5, #1
+	.loc 4 92 0 discriminator 3
+	add	r0, r3, r0, lsl #2
+	bl	ftl_memcpy
+.LVL851:
+	b	.L983
+.LVL852:
+.L990:
+	mov	r7, #1
+	b	.L985
+.L987:
+	.loc 4 139 0
+	cmp	r7, #0
+	beq	.L990
+	.loc 4 146 0
+	mov	r0, #0
+	sub	sp, fp, #40
+.LCFI310:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL853:
+.L992:
+	.align	2
+.L991:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+3860
+	.word	.LC90
+	.word	.LANCHOR0+3224
+	.word	-3887
+	.word	.LC91
+	.word	.LC92
+.LFE166:
+	.fnend
+	.size	FtlBbmTblFlush, .-FtlBbmTblFlush
+	.align	2
+	.global	allocate_data_superblock
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	allocate_data_superblock, %function
+allocate_data_superblock:
+	.fnstart
+.LFB238:
+	.loc 2 2531 0
+	@ args = 0, pretend = 0, frame = 16
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL854:
+	.movsp ip
+	mov	ip, sp
+.LCFI311:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI312:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI313:
+	.pad #20
+	sub	sp, sp, #20
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2531 0
+	.loc 2 2537 0
+	ldr	r9, .L1028
+	.loc 2 2531 0
+	mov	r5, r0
+	mov	r4, r9
+.LVL855:
+.L994:
+	.loc 2 2537 0
+	ldr	r7, .L1028+4
+.LVL856:
+	ldrh	r2, [r7, #-8]
+	ldrh	r3, [r7]
+	add	r3, r3, r2
+	ldrh	r2, [r9, #16]
+	cmp	r3, r2
+	ble	.L995
+	.loc 2 2537 0 is_stmt 0 discriminator 1
+	movw	r2, #2537
+	ldr	r1, .L1028+8
+	ldr	r0, .L1028+12
+	bl	printk
+.LVL857:
+.L995:
+	.loc 2 2539 0 is_stmt 1
+	ldr	r3, .L1028+16
+	cmp	r5, r3
+	movne	r1, #0
+.LVL858:
+	bne	.L996
+	.loc 2 2540 0
+	ldrh	r3, [r7]
+	ldr	r1, [r4, #3140]
+.LVL859:
+	mul	r2, r1, r3
+	lsr	r1, r3, #1
+	add	r1, r1, #1
+	add	r1, r1, r2, lsr #2
+	uxth	r1, r1
+.LVL860:
+	.loc 2 2544 0
+	cmp	r1, #0
+	.loc 2 2545 0
+	subne	r1, r1, #1
+.LVL861:
+	uxthne	r1, r1
+.LVL862:
+.L996:
+	.loc 2 2546 0
+	ldr	r0, .L1028+20
+	bl	List_pop_index_node
+.LVL863:
+	ldrh	r3, [r7]
+	mov	r6, r0
+	uxth	r8, r0
+	cmp	r3, #0
+	bne	.L997
+	.loc 2 2546 0 is_stmt 0 discriminator 1
+	movw	r2, #2546
+	ldr	r1, .L1028+8
+	ldr	r0, .L1028+12
+	bl	printk
+.LVL864:
+.L997:
+	.loc 2 2546 0 discriminator 3
+	ldrh	r3, [r7]
+	.loc 2 2550 0 is_stmt 1 discriminator 3
+	mov	r0, r5
+	.loc 2 2546 0 discriminator 3
+	sub	r3, r3, #1
+	strh	r3, [r7]	@ movhi
+	.loc 2 2549 0 discriminator 3
+	strh	r8, [r5]	@ movhi
+	.loc 2 2550 0 discriminator 3
+	bl	make_superblock
+.LVL865:
+	.loc 2 2551 0 discriminator 3
+	ldrb	r3, [r5, #7]	@ zero_extendqisi2
+	cmp	r3, #0
+	bne	.L998
+	.loc 2 2555 0
+	uxth	r6, r6
+	ldr	r3, [r4, #2260]
+	mvn	r2, #0
+	lsl	r6, r6, #1
+	.loc 2 2556 0
+	mov	r0, r8
+	.loc 2 2555 0
+	strh	r2, [r3, r6]	@ movhi
+	.loc 2 2556 0
+	bl	INSERT_DATA_LIST
+.LVL866:
+	.loc 2 2557 0
+	ldrh	r2, [r7, #-8]
+	ldrh	r3, [r7]
+	add	r3, r3, r2
+	ldrh	r2, [r4, #16]
+	cmp	r3, r2
+	ble	.L994
+	.loc 2 2557 0 is_stmt 0 discriminator 1
+	movw	r2, #2557
+	ldr	r1, .L1028+8
+	ldr	r0, .L1028+12
+	bl	printk
+.LVL867:
+	b	.L994
+.L998:
+	.loc 2 2560 0 is_stmt 1
+	ldrh	r2, [r7, #-8]
+	ldrh	r3, [r7]
+	add	r3, r3, r2
+	ldrh	r2, [r4, #16]
+	cmp	r3, r2
+	ble	.L1000
+	.loc 2 2560 0 is_stmt 0 discriminator 1
+	mov	r2, #2560
+	ldr	r1, .L1028+8
+	ldr	r0, .L1028+12
+	bl	printk
+.LVL868:
+.L1000:
+	.loc 2 2564 0 is_stmt 1 discriminator 1
+	ldr	r0, [r4, #3760]
+	mov	r2, #20
+	ldrh	r1, [r4, #8]
+	mov	r7, #0
+.LVL869:
+	add	ip, r5, #16
+	mov	lr, r7
+	mov	r3, r0
+	mla	r1, r2, r1, r0
+	str	r1, [fp, #-48]
+.L1001:
+	.loc 2 2563 0 discriminator 1
+	ldr	r1, [fp, #-48]
+	cmp	r1, r3
+	bne	.L1003
+	.loc 2 2571 0
+	cmp	r7, #0
+	bne	.L1004
+	.loc 2 2571 0 is_stmt 0 discriminator 1
+	movw	r2, #2571
+	ldr	r1, .L1028+8
+	ldr	r0, .L1028+12
+	bl	printk
+.LVL870:
+.L1004:
+	.loc 2 2573 0 is_stmt 1
+	ldr	r3, .L1028+24
+	ldrh	r3, [r3]
+	cmp	r3, r8
+	bne	.L1005
+	.loc 2 2573 0 is_stmt 0 discriminator 1
+	movw	r2, #2573
+	ldr	r1, .L1028+8
+	ldr	r0, .L1028+12
+	bl	printk
+.LVL871:
+.L1005:
+	.loc 2 2574 0 is_stmt 1
+	ldrb	r3, [r5, #8]	@ zero_extendqisi2
+	uxth	r6, r6
+	cmp	r3, #0
+	bne	.L1006
+	.loc 2 2575 0
+	ldr	r1, [r4, #2248]
+	lsl	r2, r6, #1
+	ldrh	r3, [r1, r2]
+	cmp	r3, #0
+	.loc 2 2576 0
+	ldrhne	r0, [r4, #68]
+	.loc 2 2578 0
+	moveq	r3, #2
+	.loc 2 2576 0
+	addne	r3, r3, r0
+	.loc 2 2580 0
+	mov	r0, r8
+	.loc 2 2578 0
+	strh	r3, [r1, r2]	@ movhi
+	.loc 2 2580 0
+	mov	r1, #0
+	.loc 2 2579 0
+	ldr	r3, [r4, #2480]
+	add	r3, r3, #1
+	str	r3, [r4, #2480]
+	.loc 2 2580 0
+	bl	ftl_set_blk_mode
+.LVL872:
+.L1009:
+	.loc 2 2587 0
+	ldr	r3, [r4, #2248]
+	lsl	r6, r6, #1
+	ldr	r2, [r4, #2496]
+	.loc 2 2590 0
+	ldr	r0, [r4, #2480]
+	.loc 2 2587 0
+	ldrh	r3, [r3, r6]
+	.loc 2 2590 0
+	ldrh	r1, [r4, #16]
+	.loc 2 2587 0
+	cmp	r3, r2
+	.loc 2 2590 0
+	ldrh	r2, [r4, #68]
+	.loc 2 2588 0
+	strhi	r3, [r4, #2496]
+	.loc 2 2590 0
+	ldr	r3, [r4, #2484]
+	mla	r0, r0, r2, r3
+	bl	__aeabi_uidiv
+.LVL873:
+	.loc 2 2591 0
+	ldr	r2, [r4, #3820]
+	.loc 2 2594 0
+	ldr	r1, [r4, #3760]
+	.loc 2 2590 0
+	str	r0, [r4, #2488]
+	.loc 2 2591 0
+	ldr	r3, [r2, #16]
+	.loc 2 2594 0
+	ldr	r0, .L1028+28
+	.loc 2 2591 0
+	add	r3, r3, #1
+	str	r3, [r2, #16]
+	mov	r2, #20
+	mla	r2, r2, r7, r1
+	add	r3, r1, #4
+	add	r2, r2, #24
+.L1011:
+	add	r3, r3, #20
+	.loc 2 2593 0 discriminator 1
+	cmp	r2, r3
+	bne	.L1012
+	.loc 2 2595 0
+	mov	r2, r7
+	ldrb	r1, [r5, #8]	@ zero_extendqisi2
+	ldr	r0, [r4, #3760]
+	.loc 2 2597 0
+	mov	r10, #0
+	.loc 2 2595 0
+	bl	FlashEraseBlocks
+.LVL874:
+	.loc 2 2596 0
+	mov	r2, r10
+.LVL875:
+	.loc 2 2598 0
+	mov	r1, #20
+.L1013:
+	.loc 2 2597 0 discriminator 1
+	uxth	r3, r10
+	cmp	r7, r3
+	bhi	.L1015
+	.loc 2 2608 0
+	cmp	r2, #0
+	ble	.L1016
+	.loc 2 2609 0
+	mov	r0, r8
+	bl	update_multiplier_value
+.LVL876:
+	.loc 2 2610 0
+	bl	FtlBbmTblFlush
+.LVL877:
+.L1016:
+	.loc 2 2613 0
+	ldrb	r2, [r5, #7]	@ zero_extendqisi2
+.LVL878:
+	cmp	r2, #0
+	bne	.L1017
+	.loc 2 2615 0
+	ldr	r3, [r4, #2260]
+	mvn	r2, #0
+	.loc 2 2616 0
+	mov	r0, r8
+	.loc 2 2615 0
+	strh	r2, [r3, r6]	@ movhi
+	.loc 2 2616 0
+	bl	INSERT_DATA_LIST
+.LVL879:
+	.loc 2 2617 0
+	b	.L994
+.L1003:
+	.loc 2 2564 0
+	str	lr, [r3, #8]
+	.loc 2 2566 0
+	movw	r10, #65535
+	.loc 2 2565 0
+	str	lr, [r3, #12]
+	add	r3, r3, #20
+	.loc 2 2566 0
+	ldrh	r1, [ip], #2
+	cmp	r1, r10
+	.loc 2 2567 0
+	mlane	r10, r2, r7, r0
+	lslne	r1, r1, #10
+	.loc 2 2568 0
+	addne	r7, r7, #1
+.LVL880:
+	uxthne	r7, r7
+.LVL881:
+	.loc 2 2567 0
+	strne	r1, [r10, #4]
+	b	.L1001
+.L1006:
+	.loc 2 2582 0
+	ldr	r1, [r4, #2248]
+	lsl	r3, r6, #1
+.LBB429:
+.LBB430:
+	mov	r0, r8
+.LBE430:
+.LBE429:
+	ldrh	r2, [r1, r3]
+	add	r2, r2, #1
+	strh	r2, [r1, r3]	@ movhi
+	.loc 2 2583 0
+	ldr	r3, [r4, #2484]
+	add	r3, r3, #1
+	str	r3, [r4, #2484]
+.LBB432:
+.LBB431:
+	bl	ftl_set_blk_mode.part.6
+.LVL882:
+	b	.L1009
+.L1012:
+.LBE431:
+.LBE432:
+	.loc 2 2594 0 discriminator 3
+	ldr	r1, [r3, #-20]
+	and	r1, r1, r0
+	str	r1, [r3, #-20]
+	b	.L1011
+.LVL883:
+.L1015:
+	.loc 2 2598 0
+	mul	r3, r1, r10
+	ldr	r0, [r4, #3760]
+	add	ip, r0, r3
+	ldr	r3, [r0, r3]
+	cmn	r3, #1
+	bne	.L1014
+	.loc 2 2600 0
+	ldr	r0, [ip, #4]
+	.loc 2 2599 0
+	add	r2, r2, #1
+	str	r1, [fp, #-56]
+	str	r3, [fp, #-52]
+	.loc 2 2601 0
+	ubfx	r0, r0, #10, #16
+	.loc 2 2599 0
+	str	r2, [fp, #-48]
+	.loc 2 2601 0
+	bl	FtlBbmMapBadBlock
+.LVL884:
+	.loc 2 2602 0
+	ldr	r3, [fp, #-52]
+	add	r0, r5, r10, lsl #1
+	.loc 2 2603 0
+	ldr	r1, [fp, #-56]
+	ldr	r2, [fp, #-48]
+.LVL885:
+	.loc 2 2602 0
+	strh	r3, [r0, #16]	@ movhi
+	.loc 2 2603 0
+	ldrb	r3, [r5, #7]	@ zero_extendqisi2
+	sub	r3, r3, #1
+	strb	r3, [r5, #7]
+.L1014:
+	add	r10, r10, #1
+	b	.L1013
+.LVL886:
+.L1017:
+	.loc 2 2620 0
+	ldrh	r3, [r4, #78]
+	.loc 2 2621 0
+	strh	r8, [r5]	@ movhi
+	.loc 2 2620 0
+	smulbb	r3, r3, r2
+	.loc 2 2622 0
+	mov	r2, #0
+	strh	r2, [r5, #2]	@ movhi
+	.loc 2 2623 0
+	strb	r2, [r5, #6]
+	.loc 2 2624 0
+	ldr	r2, [r4, #2472]
+	.loc 2 2620 0
+	uxth	r3, r3
+	.loc 2 2625 0
+	ldr	r1, [r4, #2260]
+	.loc 2 2620 0
+	strh	r3, [r5, #4]	@ movhi
+	.loc 2 2624 0
+	str	r2, [r5, #12]
+	add	r2, r2, #1
+	str	r2, [r4, #2472]
+	.loc 2 2625 0
+	ldrh	r2, [r5]
+	lsl	r2, r2, #1
+	strh	r3, [r1, r2]	@ movhi
+	.loc 2 2626 0
+	ldrh	r3, [r5, #4]
+	cmp	r3, #0
+	beq	.L1018
+	.loc 2 2626 0 is_stmt 0 discriminator 2
+	ldrb	r3, [r5, #7]	@ zero_extendqisi2
+	cmp	r3, #0
+	bne	.L1019
+.L1018:
+	.loc 2 2626 0 discriminator 3
+	movw	r2, #2626
+	ldr	r1, .L1028+8
+	ldr	r0, .L1028+12
+	bl	printk
+.LVL887:
+.L1019:
+	.loc 2 2628 0 is_stmt 1
+	mov	r0, #0
+	sub	sp, fp, #40
+.LCFI314:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL888:
+.L1029:
+	.align	2
+.L1028:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+2276
+	.word	.LANCHOR1+360
+	.word	.LC1
+	.word	.LANCHOR0+2376
+	.word	.LANCHOR0+2272
+	.word	.LANCHOR0+2568
+	.word	-1024
+.LFE238:
+	.fnend
+	.size	allocate_data_superblock, .-allocate_data_superblock
+	.align	2
+	.global	FtlGcFreeBadSuperBlk
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlGcFreeBadSuperBlk, %function
+FtlGcFreeBadSuperBlk:
+	.fnstart
+.LFB257:
+	.loc 5 390 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL889:
+	.movsp ip
+	mov	ip, sp
+.LCFI315:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI316:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI317:
+	.pad #12
+	sub	sp, sp, #12
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 390 0
+	.loc 5 395 0
+	ldr	r6, .L1042
+	movw	r3, #3186
+	.loc 5 390 0
+	str	r0, [fp, #-48]
+	.loc 5 395 0
+	ldrh	r3, [r6, r3]
+	cmp	r3, #0
+	movne	r7, #0
+.LBB435:
+.LBB436:
+	.loc 5 398 0
+	ldrne	r10, .L1042+4
+.LBE436:
+.LBE435:
+	.loc 5 395 0
+	bne	.L1032
+.LVL890:
+.L1031:
+	.loc 5 415 0
+	mov	r0, #0
+.LVL891:
+	sub	sp, fp, #40
+.LCFI318:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL892:
+.L1038:
+.LCFI319:
+.LBB438:
+.LBB437:
+	.loc 5 397 0
+	uxtah	r3, r6, r7
+	ldr	r1, [fp, #-48]
+	mov	r8, #0
+	ldrb	r0, [r3, #36]	@ zero_extendqisi2
+.LVL893:
+	bl	V2P_block
+.LVL894:
+	mov	r9, r0
+.L1033:
+	.loc 5 398 0
+	ldrh	r3, [r10]
+	uxth	r4, r8
+	cmp	r3, r4
+	bhi	.L1037
+	add	r7, r7, #1
+.LVL895:
+.L1032:
+	.loc 5 396 0
+	ldrh	r2, [r6, #8]
+	uxth	r3, r7
+	cmp	r2, r3
+	bhi	.L1038
+	.loc 5 412 0
+	bl	FtlGcReFreshBadBlk
+.LVL896:
+	b	.L1031
+.L1037:
+	.loc 5 399 0
+	uxth	r3, r8
+	ldr	r5, .L1042+8
+	lsl	r1, r3, #1
+	ldrh	r1, [r5, r1]
+	cmp	r1, r9
+	bne	.L1034
+	.loc 5 401 0
+	mov	r1, r9
+	ldr	r0, .L1042+12
+	str	r3, [fp, #-52]
+	bl	printk
+.LVL897:
+	.loc 5 403 0
+	mov	r0, r9
+	bl	FtlBbmMapBadBlock
+.LVL898:
+	.loc 5 404 0
+	bl	FtlBbmTblFlush
+.LVL899:
+	ldr	r3, [fp, #-52]
+	.loc 5 405 0
+	ldrh	r1, [r10]
+	add	r3, r5, r3, lsl #1
+.L1035:
+	cmp	r4, r1
+	bcc	.L1036
+	.loc 5 407 0
+	sub	r1, r1, #1
+	strh	r1, [r10]	@ movhi
+.L1034:
+	add	r8, r8, #1
+	b	.L1033
+.L1036:
+	.loc 5 406 0
+	ldrh	r0, [r3, #2]!
+	.loc 5 405 0
+	add	r4, r4, #1
+.LVL900:
+	uxth	r4, r4
+.LVL901:
+	.loc 5 406 0
+	strh	r0, [r3, #-2]	@ movhi
+	b	.L1035
+.L1043:
+	.align	2
+.L1042:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+3186
+	.word	.LANCHOR0+3188
+	.word	.LC93
+.LBE437:
+.LBE438:
+.LFE257:
+	.fnend
+	.size	FtlGcFreeBadSuperBlk, .-FtlGcFreeBadSuperBlk
+	.align	2
+	.global	update_vpc_list
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	update_vpc_list, %function
+update_vpc_list:
+	.fnstart
+.LFB241:
+	.loc 2 2687 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL902:
+	.movsp ip
+	mov	ip, sp
+.LCFI320:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI321:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI322:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2687 0
+	.loc 2 2688 0
+	lsl	r3, r0, #1
+	.loc 2 2687 0
+	mov	r5, r0
+	.loc 2 2688 0
+	ldr	r2, .L1054
+	ldr	r1, [r2, #2260]
+	mov	r4, r2
+	ldrh	r3, [r1, r3]
+	cmp	r3, #0
+	bne	.L1045
+	.loc 2 2689 0
+	movw	r1, #2568
+	ldrh	r0, [r2, r1]
+	cmp	r0, r5
+	.loc 2 2691 0
+	mvneq	r3, #0
+	strheq	r3, [r2, r1]	@ movhi
+	.loc 2 2689 0
+	beq	.L1047
+	.loc 2 2692 0
+	movw	r1, #2280
+	ldrh	r1, [r2, r1]
+	cmp	r1, r5
+	beq	.L1044
+	.loc 2 2692 0 is_stmt 0 discriminator 1
+	movw	r1, #2328
+	ldrh	r1, [r2, r1]
+	cmp	r1, r5
+	beq	.L1044
+	.loc 2 2692 0 discriminator 2
+	movw	r1, #2376
+	ldrh	r2, [r2, r1]
+	cmp	r2, r5
+	beq	.L1044
+.L1047:
+.LBB441:
+.LBB442:
+	.loc 2 2696 0 is_stmt 1
+	mov	r1, r5
+	ldr	r0, .L1054+4
+	bl	List_remove_node
+.LVL903:
+	movw	r3, #2268
+	ldrh	r3, [r4, r3]
+	cmp	r3, #0
+	bne	.L1049
+	movw	r2, #2696
+	ldr	r1, .L1054+8
+	ldr	r0, .L1054+12
+	bl	printk
+.LVL904:
+.L1049:
+	movw	r6, #2268
+	.loc 2 2697 0
+	mov	r0, r5
+	.loc 2 2696 0
+	ldrh	r3, [r4, r6]
+	sub	r3, r3, #1
+	strh	r3, [r4, r6]	@ movhi
+	.loc 2 2697 0
+	bl	free_data_superblock
+.LVL905:
+	.loc 2 2698 0
+	mov	r0, r5
+	bl	FtlGcFreeBadSuperBlk
+.LVL906:
+	.loc 2 2699 0
+	movw	r3, #2276
+	ldrh	r2, [r4, r6]
+	ldrh	r3, [r4, r3]
+	add	r3, r3, r2
+	ldrh	r2, [r4, #16]
+	cmp	r3, r2
+	ble	.L1053
+	movw	r2, #2699
+	ldr	r1, .L1054+8
+	ldr	r0, .L1054+12
+	bl	printk
+.LVL907:
+.L1053:
+	mov	r3, #1
+	b	.L1044
+.LVL908:
+.L1045:
+.LBE442:
+.LBE441:
+	.loc 2 2702 0
+	bl	List_update_data_list
+.LVL909:
+	.loc 2 2704 0
+	mov	r3, #0
+.L1044:
+	.loc 2 2705 0
+	mov	r0, r3
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L1055:
+	.align	2
+.L1054:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+2256
+	.word	.LANCHOR1+385
+	.word	.LC1
+.LFE241:
+	.fnend
+	.size	update_vpc_list, .-update_vpc_list
+	.align	2
+	.global	decrement_vpc_count
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	decrement_vpc_count, %function
+decrement_vpc_count:
+	.fnstart
+.LFB242:
+	.loc 2 2708 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL910:
+	.movsp ip
+	mov	ip, sp
+.LCFI323:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI324:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI325:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2708 0
+	.loc 2 2711 0
+	movw	r3, #65535
+	.loc 2 2708 0
+	mov	r5, r0
+	.loc 2 2711 0
+	cmp	r0, r3
+	ldr	r6, .L1068
+	beq	.L1057
+	.loc 2 2712 0
+	ldr	r3, [r6, #2260]
+	lsl	r4, r0, #1
+	ldrh	r2, [r3, r4]
+	cmp	r2, #0
+	.loc 2 2717 0
+	subne	r2, r2, #1
+	strhne	r2, [r3, r4]	@ movhi
+	.loc 2 2712 0
+	bne	.L1057
+	.loc 2 2713 0
+	mov	r1, r0
+	ldr	r0, .L1068+4
+	bl	printk
+.LVL911:
+	.loc 2 2714 0
+	ldr	r3, [r6, #2260]
+	ldrh	r4, [r3, r4]
+	cmp	r4, #0
+	beq	.L1059
+.L1066:
+	.loc 2 2723 0
+	mov	r4, #0
+.L1056:
+	.loc 2 2733 0
+	mov	r0, r4
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L1059:
+	.loc 2 2714 0 discriminator 1
+	movw	r2, #2714
+.L1067:
+	.loc 2 2730 0 discriminator 2
+	ldr	r1, .L1068+8
+	ldr	r0, .L1068+12
+	bl	printk
+.LVL912:
+	b	.L1056
+.L1057:
+	.loc 2 2721 0
+	ldr	r7, .L1068+16
+	movw	r3, #65535
+	ldrh	r0, [r7]
+.LVL913:
+	cmp	r0, r3
+	.loc 2 2722 0
+	strheq	r5, [r7]	@ movhi
+	beq	.L1066
+.L1061:
+	.loc 2 2724 0
+	cmp	r5, r0
+	beq	.L1066
+	.loc 2 2727 0
+	bl	update_vpc_list
+.LVL914:
+	.loc 2 2730 0
+	ldr	r2, [r6, #2252]
+	.loc 2 2727 0
+	adds	r4, r0, #0
+	.loc 2 2730 0
+	ldr	r3, [r6, #2256]
+	.loc 2 2727 0
+	movne	r4, #1
+	.loc 2 2730 0
+	ldr	r1, [r6, #2260]
+	.loc 2 2729 0
+	strh	r5, [r7]	@ movhi
+	.loc 2 2730 0
+	sub	r3, r3, r2
+	asr	r2, r3, #1
+	ldr	r3, .L1068+20
+	mul	r3, r3, r2
+	uxth	r2, r3
+	uxth	r3, r3
+	lsl	r2, r2, #1
+	cmp	r3, r5
+	ldrh	r2, [r1, r2]
+	clz	r2, r2
+	lsr	r2, r2, #5
+	moveq	r2, #0
+	cmp	r2, #0
+	beq	.L1056
+	.loc 2 2730 0 is_stmt 0 discriminator 2
+	movw	r2, #2730
+	b	.L1067
+.L1069:
+	.align	2
+.L1068:
+	.word	.LANCHOR0
+	.word	.LC94
+	.word	.LANCHOR1+401
+	.word	.LC1
+	.word	.LANCHOR0+3952
+	.word	-1431655765
+.LFE242:
+	.fnend
+	.size	decrement_vpc_count, .-decrement_vpc_count
+	.align	2
+	.global	FtlWriteDump_data
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlWriteDump_data, %function
+FtlWriteDump_data:
+	.fnstart
+.LFB208:
+	.loc 2 947 0 is_stmt 1
+	@ args = 0, pretend = 0, frame = 24
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI326:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI327:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI328:
+	.pad #28
+	sub	sp, sp, #28
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 947 0
+	.loc 2 948 0
+	ldr	r6, .L1088
+	ldr	r4, .L1088+4
+	ldrh	r2, [r6, #4]
+	cmp	r2, #0
+	beq	.L1071
+	.loc 2 948 0 is_stmt 0 discriminator 1
+	ldrb	r3, [r4, #2288]	@ zero_extendqisi2
+	cmp	r3, #0
+	bne	.L1071
+	.loc 2 949 0 is_stmt 1
+	ldrb	r1, [r4, #2287]	@ zero_extendqisi2
+	ldrh	r3, [r4, #78]
+	mul	r3, r3, r1
+	cmp	r2, r3
+	beq	.L1071
+.LBB446:
+.LBB447:
+	.loc 2 956 0
+	ldrb	r8, [r4, #2290]	@ zero_extendqisi2
+	cmp	r8, #0
+	bne	.L1070
+	.loc 2 951 0
+	ldr	r7, [r4, #2436]
+	.loc 2 958 0
+	mov	r2, r8
+	sub	r1, fp, #68
+	.loc 2 953 0
+	ldrh	r9, [r4, #8]
+	.loc 2 951 0
+	sub	r7, r7, #1
+.LVL915:
+	.loc 2 958 0
+	mov	r0, r7
+	bl	log2phys
+.LVL916:
+	.loc 2 961 0
+	ldr	r3, [fp, #-68]
+	.loc 2 964 0
+	ldr	r5, [r4, #3244]
+	.loc 2 963 0
+	ldr	r0, [r4, #2244]
+	.loc 2 967 0
+	cmn	r3, #1
+	.loc 2 961 0
+	str	r3, [fp, #-60]
+	.loc 2 962 0
+	str	r7, [fp, #-48]
+	.loc 2 963 0
+	str	r0, [fp, #-56]
+	.loc 2 964 0
+	str	r5, [fp, #-52]
+	.loc 2 966 0
+	str	r8, [r5, #4]
+	.loc 2 967 0
+	beq	.L1073
+	.loc 2 969 0
+	mov	r2, r8
+	mov	r1, #1
+	sub	r0, fp, #64
+	bl	FlashReadPages
+.LVL917:
+.L1074:
+	.loc 2 975 0
+	ldr	r3, .L1088+8
+	mov	r8, #0
+	.loc 2 953 0
+	lsl	r9, r9, #2
+.LVL918:
+	.loc 2 987 0
+	mov	r10, r8
+	.loc 2 975 0
+	strh	r3, [r5]	@ movhi
+.L1075:
+	.loc 2 976 0
+	cmp	r9, r8
+	bne	.L1079
+.L1076:
+	.loc 2 992 0
+	mov	r3, #1
+.L1087:
+.LBE447:
+.LBE446:
+	.loc 2 998 0
+	strb	r3, [r4, #2290]
+.L1070:
+	.loc 2 1000 0
+	sub	sp, fp, #40
+.LCFI329:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL919:
+.L1073:
+.LCFI330:
+.LBB449:
+.LBB448:
+	.loc 2 973 0
+	ldrh	r2, [r4, #86]
+	mov	r1, #255
+	bl	ftl_memset
+.LVL920:
+	b	.L1074
+.LVL921:
+.L1079:
+	.loc 2 978 0
+	ldrh	r3, [r6, #4]
+	cmp	r3, #0
+	beq	.L1076
+	.loc 2 983 0
+	ldr	r3, [fp, #-60]
+	add	r8, r8, #1
+	.loc 2 982 0
+	str	r7, [r5, #8]
+	.loc 2 986 0
+	ldr	r0, .L1088
+	.loc 2 983 0
+	str	r3, [r5, #12]
+	.loc 2 984 0
+	ldrh	r3, [r6]
+	strh	r3, [r5, #2]	@ movhi
+	.loc 2 986 0
+	bl	get_new_active_ppa
+.LVL922:
+	.loc 2 987 0
+	ldr	r3, [r4, #2476]
+	.loc 2 988 0
+	mov	r1, #1
+	.loc 2 986 0
+	str	r0, [fp, #-60]
+	.loc 2 988 0
+	sub	r0, fp, #64
+	.loc 2 987 0
+	str	r3, [r5, #4]
+	add	r3, r3, #1
+	cmn	r3, #1
+	moveq	r3, r10
+	str	r3, [r4, #2476]
+	.loc 2 988 0
+	mov	r3, #0
+	mov	r2, r3
+	bl	FlashProgPages
+.LVL923:
+	.loc 2 990 0
+	ldrh	r0, [r6]
+	bl	decrement_vpc_count
+.LVL924:
+	b	.L1075
+.LVL925:
+.L1071:
+.LBE448:
+.LBE449:
+	.loc 2 998 0
+	mov	r3, #0
+	b	.L1087
+.L1089:
+	.align	2
+.L1088:
+	.word	.LANCHOR0+2280
+	.word	.LANCHOR0
+	.word	-3947
+.LFE208:
+	.fnend
+	.size	FtlWriteDump_data, .-FtlWriteDump_data
+	.align	2
+	.global	l2p_flush
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	l2p_flush, %function
+l2p_flush:
+	.fnstart
+.LFB201:
+	.loc 2 740 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI331:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI332:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI333:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 740 0
+	.loc 2 746 0
+	mov	r4, #0
+	.loc 2 747 0
+	mov	r6, #12
+	.loc 2 746 0
+	ldr	r5, .L1094
+	.loc 2 744 0
+	bl	FtlWriteDump_data
+.LVL926:
+.L1091:
+	.loc 2 746 0 discriminator 1
+	ldrh	r3, [r5, #114]
+	uxth	r0, r4
+	cmp	r3, r0
+	bhi	.L1093
+	.loc 2 750 0
+	mov	r0, #0
+.LVL927:
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.LVL928:
+.L1093:
+	.loc 2 747 0
+	ldr	r2, [r5, #2424]
+	uxth	r3, r4
+	mla	r3, r6, r3, r2
+	ldr	r3, [r3, #4]
+	cmp	r3, #0
+	bge	.L1092
+	.loc 2 748 0
+	bl	flush_l2p_region
+.LVL929:
+.L1092:
+	add	r4, r4, #1
+	b	.L1091
+.L1095:
+	.align	2
+.L1094:
+	.word	.LANCHOR0
+.LFE201:
+	.fnend
+	.size	l2p_flush, .-l2p_flush
+	.align	2
+	.global	FtlRecoverySuperblock
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlRecoverySuperblock, %function
+FtlRecoverySuperblock:
+	.fnstart
+.LFB221:
+	.loc 2 1656 0
+	@ args = 0, pretend = 0, frame = 56
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL930:
+	.movsp ip
+	mov	ip, sp
+.LCFI334:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI335:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI336:
+	.pad #60
+	sub	sp, sp, #60
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 1656 0
+	.loc 2 1670 0
+	ldrh	r3, [r0]
+	movw	r2, #65535
+	.loc 2 1656 0
+	mov	r4, r0
+	.loc 2 1670 0
+	cmp	r3, r2
+	beq	.L1217
+	.loc 2 1675 0
+	ldrh	r3, [r0, #2]
+.LVL931:
+	.loc 2 1681 0
+	ldr	r6, .L1225
+	.loc 2 1675 0
+	str	r3, [fp, #-68]
+	.loc 2 1676 0
+	ldrb	r3, [r0, #6]	@ zero_extendqisi2
+.LVL932:
+	.loc 2 1681 0
+	ldr	r1, [fp, #-68]
+.LVL933:
+	.loc 2 1676 0
+	str	r3, [fp, #-88]
+	.loc 2 1681 0
+	ldrh	r3, [r6, #78]
+.LVL934:
+	cmp	r3, r1
+	mov	r3, #0
+	.loc 2 1682 0
+	strheq	r3, [r0, #4]	@ movhi
+	.loc 2 1689 0
+	ldrhne	r0, [r0, #16]
+.LVL935:
+	.loc 2 1681 0
+	bne	.L1100
+.LVL936:
+.L1223:
+	.loc 2 1989 0
+	strb	r3, [r4, #6]
+.L1217:
+	.loc 2 2010 0
+	mov	r0, #0
+	sub	sp, fp, #40
+.LCFI337:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL937:
+.L1101:
+.LCFI338:
+	.loc 2 1692 0
+	uxth	r1, r3
+.LVL938:
+	add	r1, r4, r1, lsl #1
+	ldrh	r0, [r1, #16]
+.LVL939:
+.L1100:
+	.loc 2 1690 0
+	cmp	r0, r2
+	uxth	r7, r3
+	add	r3, r3, #1
+	beq	.L1101
+	.loc 2 1697 0
+	mov	r1, #1
+.LVL940:
+	bl	FtlGetLastWrittenPage
+.LVL941:
+	.loc 2 1705 0
+	cmn	r0, #1
+	.loc 2 1697 0
+	mov	r5, r0
+.LVL942:
+	.loc 2 1705 0
+	beq	.L1102
+	.loc 2 1717 0
+	ldrh	r3, [r6, #8]
+	.loc 2 1722 0
+	mov	r2, #0
+	.loc 2 1720 0
+	ldr	r0, [r6, #3792]
+	.loc 2 1719 0
+	movw	r8, #65535
+	.loc 2 1722 0
+	ldr	lr, [r6, #3156]
+	.loc 2 1720 0
+	mov	r9, #20
+	.loc 2 1717 0
+	str	r3, [fp, #-64]
+	.loc 2 1721 0
+	ldr	r3, [r6, #3152]
+	.loc 2 1722 0
+	ldrh	r7, [r6, #88]
+	.loc 2 1721 0
+	str	r3, [fp, #-72]
+	ldrh	r3, [r6, #86]
+	.loc 2 1722 0
+	mov	r6, r2
+	.loc 2 1721 0
+	str	r3, [fp, #-76]
+	add	r3, r4, #16
+	.loc 2 1722 0
+	mov	ip, r3
+	str	r3, [fp, #-84]
+.L1103:
+	.loc 2 1717 0 discriminator 1
+	ldr	r1, [fp, #-64]
+	uxth	r3, r2
+	cmp	r1, r3
+	bhi	.L1107
+	.loc 2 1728 0
+	ldr	r7, .L1225
+	.loc 2 1727 0
+	mov	r2, #0
+	mov	r1, r6
+	.loc 2 1729 0
+	mov	r8, #0
+	.loc 2 1727 0
+	bl	FlashReadPages
+.LVL943:
+	.loc 2 1728 0
+	ldr	r3, [r7, #2476]
+	.loc 2 1666 0
+	movw	r2, #65535
+	str	r2, [fp, #-76]
+	.loc 2 1742 0
+	uxth	r2, r5
+	.loc 2 1728 0
+	sub	r3, r3, #1
+.LVL944:
+	.loc 2 1742 0
+	str	r2, [fp, #-72]
+	.loc 2 1728 0
+	str	r3, [fp, #-64]
+	.loc 2 1730 0
+	ldr	r3, [r7, #3792]
+.LVL945:
+	mov	r10, r3
+.L1108:
+	uxth	r2, r8
+.LVL946:
+	.loc 2 1729 0 discriminator 1
+	cmp	r6, r2
+	bhi	.L1113
+	.loc 2 1747 0
+	addeq	r2, r5, #1
+.LVL947:
+	uxtheq	r9, r2
+.LVL948:
+	.loc 2 1745 0
+	bne	.L1111
+.L1218:
+	.loc 2 1753 0
+	ldr	r0, [r3, #4]
+	ubfx	r0, r0, #10, #16
+	bl	P2V_plane
+.LVL949:
+	.loc 2 1758 0
+	ldrh	r3, [r7, #78]
+	.loc 2 1753 0
+	str	r0, [fp, #-72]
+	.loc 2 1764 0
+	ldr	r2, [fp, #-72]
+.LVL950:
+	.loc 2 1758 0
+	cmp	r3, r9
+	.loc 2 1764 0
+	ldr	r1, [fp, #-88]
+.LVL951:
+	.loc 2 1760 0
+	moveq	r3, #0
+	.loc 2 1759 0
+	strheq	r9, [r4, #2]	@ movhi
+	.loc 2 1760 0
+	strbeq	r3, [r4, #6]
+	.loc 2 1761 0
+	strheq	r3, [r4, #4]	@ movhi
+	.loc 2 1764 0
+	ldr	r3, [fp, #-68]
+.LVL952:
+	cmp	r9, r3
+	cmpeq	r2, r1
+	bne	.L1116
+.LVL953:
+.L1224:
+	.loc 2 2004 0
+	mov	r1, r9
+.LVL954:
+	mov	r0, r4
+	bl	ftl_sb_update_avl_pages
+.LVL955:
+	b	.L1217
+.LVL956:
+.L1102:
+	.loc 2 1706 0
+	ldr	r3, [fp, #-68]
+.LVL957:
+	cmp	r3, #0
+	beq	.L1104
+	.loc 2 1706 0 is_stmt 0 discriminator 1
+	movw	r2, #1706
+	ldr	r1, .L1225+4
+	ldr	r0, .L1225+8
+	bl	printk
+.LVL958:
+.L1104:
+	.loc 2 1707 0 is_stmt 1
+	ldr	r3, [fp, #-88]
+.LVL959:
+	cmp	r3, #0
+	cmpne	r7, r3
+	beq	.L1105
+	.loc 2 1707 0 is_stmt 0 discriminator 1
+	movw	r2, #1707
+	ldr	r1, .L1225+4
+	ldr	r0, .L1225+8
+	bl	printk
+.LVL960:
+.L1105:
+	.loc 2 1708 0 is_stmt 1
+	mov	r3, #0
+.LVL961:
+	strh	r3, [r4, #2]	@ movhi
+	b	.L1223
+.L1107:
+	.loc 2 1718 0
+	ldrh	r3, [ip], #2
+	.loc 2 1719 0
+	cmp	r3, r8
+	beq	.L1106
+	.loc 2 1720 0
+	mla	r1, r9, r6, r0
+	orr	r3, r5, r3, lsl #10
+	str	r3, [r1, #4]
+	.loc 2 1721 0
+	ldr	r3, [fp, #-76]
+	mul	r3, r3, r6
+	add	r10, r3, #3
+	cmp	r3, #0
+	movlt	r3, r10
+	ldr	r10, [fp, #-72]
+	bic	r3, r3, #3
+	add	r3, r10, r3
+	str	r3, [r1, #8]
+	.loc 2 1722 0
+	mul	r3, r7, r6
+	.loc 2 1723 0
+	add	r6, r6, #1
+	uxth	r6, r6
+	.loc 2 1722 0
+	add	r10, r3, #3
+	cmp	r3, #0
+	movlt	r3, r10
+	bic	r3, r3, #3
+	add	r3, lr, r3
+	str	r3, [r1, #12]
+.L1106:
+	add	r2, r2, #1
+	b	.L1103
+.LVL962:
+.L1113:
+	.loc 2 1730 0
+	ldr	r2, [r10]
+.LVL963:
+	cmp	r2, #0
+	bne	.L1109
+	.loc 2 1731 0
+	ldr	r2, [r10, #12]
+	.loc 2 1732 0
+	ldr	r9, [r2, #4]
+	cmn	r9, #1
+	beq	.L1110
+	str	r3, [fp, #-80]
+	.loc 2 1733 0
+	mov	r0, r9
+	ldr	r3, .L1225
+	str	r2, [fp, #-92]
+	ldr	r1, [r3, #2476]
+	bl	ftl_cmp_data_ver
+.LVL964:
+	ldr	r3, [fp, #-80]
+	cmp	r0, #0
+	ldr	r2, [fp, #-92]
+	.loc 2 1735 0
+	addne	r9, r9, #1
+	ldrne	r1, .L1225
+	strne	r9, [r1, #2476]
+.L1110:
+	.loc 2 1738 0
+	ldr	r2, [r2]
+	cmn	r2, #1
+	bne	.L1112
+.LVL965:
+.L1111:
+	.loc 2 1753 0
+	uxth	r8, r8
+	mov	r2, #20
+	.loc 2 1752 0
+	uxth	r9, r5
+	.loc 2 1753 0
+	mla	r3, r2, r8, r3
+	b	.L1218
+.LVL966:
+.L1109:
+	.loc 2 1742 0
+	ldr	r2, [fp, #-72]
+	str	r2, [fp, #-76]
+.L1112:
+	add	r8, r8, #1
+	add	r10, r10, #20
+	b	.L1108
+.LVL967:
+.L1116:
+	.loc 2 1770 0
+	ldr	r2, [fp, #-76]
+.LVL968:
+	movw	r3, #65535
+.LVL969:
+	cmp	r2, r3
+	bne	.L1117
+	.loc 2 1770 0 is_stmt 0 discriminator 1
+	ldrb	r3, [r4, #8]	@ zero_extendqisi2
+	cmp	r3, #0
+	bne	.L1118
+.L1117:
+.LBB450:
+	.loc 2 1775 0 is_stmt 1
+	ldr	r3, [r7, #3964]
+	.loc 2 1774 0
+	uxth	r8, r5
+	.loc 2 1778 0
+	uxth	r5, r5
+.LVL970:
+	.loc 2 1775 0
+	cmn	r3, #1
+	.loc 2 1776 0
+	ldreq	r3, [fp, #-64]
+.LVL971:
+	streq	r3, [r7, #3964]
+	.loc 2 1778 0
+	ldr	r3, [fp, #-68]
+.LVL972:
+	ldr	r7, .L1225
+	add	r3, r3, #7
+.LVL973:
+	cmp	r5, r3
+	.loc 2 1779 0
+	subgt	r5, r8, #7
+	ldrle	r5, [fp, #-68]
+	uxthgt	r5, r5
+.L1121:
+	.loc 2 1780 0 discriminator 1
+	cmp	r5, r8
+	bhi	.L1128
+	.loc 2 1782 0
+	ldrh	r3, [r7, #8]
+	.loc 2 1784 0
+	movw	lr, #65535
+	.loc 2 1785 0
+	ldr	r0, [r7, #3792]
+	mov	ip, #20
+	ldr	r1, [fp, #-84]
+.LVL974:
+	.loc 2 1782 0
+	str	r3, [fp, #-76]
+	.loc 2 1785 0
+	mov	r3, #0
+	mov	r6, r3
+	b	.L1129
+.L1123:
+	.loc 2 1783 0
+	ldrh	r2, [r1], #2
+	add	r3, r3, #1
+	.loc 2 1784 0
+	cmp	r2, lr
+	.loc 2 1785 0
+	mlane	r10, ip, r6, r0
+	.loc 2 1786 0
+	addne	r6, r6, #1
+	.loc 2 1785 0
+	orrne	r2, r5, r2, lsl #10
+	.loc 2 1786 0
+	uxthne	r6, r6
+	.loc 2 1785 0
+	strne	r2, [r10, #4]
+.L1129:
+	.loc 2 1782 0 discriminator 1
+	ldr	r10, [fp, #-76]
+	uxth	r2, r3
+	cmp	r10, r2
+	bhi	.L1123
+	.loc 2 1789 0
+	mov	r1, r6
+	mov	r2, #0
+	bl	FlashReadPages
+.LVL975:
+	.loc 2 1791 0
+	ldr	r3, [r7, #3792]
+	mov	r2, #20
+	.loc 2 1793 0
+	movw	r1, #65535
+	mla	r6, r2, r6, r3
+.L1124:
+	.loc 2 1790 0 discriminator 1
+	cmp	r6, r3
+	.loc 2 1780 0
+	addeq	r5, r5, #1
+	uxtheq	r5, r5
+	beq	.L1121
+.L1127:
+	.loc 2 1791 0
+	ldr	r2, [r3]
+	cmp	r2, #0
+	bne	.L1118
+	.loc 2 1792 0
+	ldr	r2, [r3, #12]
+	.loc 2 1793 0
+	ldrh	r0, [r2]
+	cmp	r0, r1
+	beq	.L1126
+	.loc 2 1795 0
+	ldr	r2, [r2, #4]
+	cmn	r2, #1
+	.loc 2 1797 0
+	strne	r2, [r7, #3964]
+.L1126:
+	add	r3, r3, #20
+	b	.L1124
+.LVL976:
+.L1128:
+	.loc 2 1809 0
+	mvn	r3, #0
+	str	r3, [r7, #3964]
+.LVL977:
+.L1118:
+.LBE450:
+	.loc 2 1814 0
+	ldr	r5, .L1225+12
+.LVL978:
+	mov	r3, #1
+	mov	r0, r5
+	.loc 2 1821 0
+	sub	r5, r5, #3968
+	.loc 2 1814 0
+	strh	r3, [r0], #-104	@ movhi
+	.loc 2 1815 0
+	bl	FtlMapBlkWriteDump_data
+.LVL979:
+	ldr	r10, [fp, #-68]
+.LVL980:
+.L1130:
+	.loc 2 1821 0
+	ldrh	ip, [r5, #8]
+	.loc 2 1823 0
+	movw	lr, #65535
+	.loc 2 1824 0
+	ldr	r0, [r5, #3792]
+	mov	r6, #20
+.LVL981:
+	.loc 2 1821 0
+	ldr	r1, [fp, #-84]
+	mov	r3, #0
+	.loc 2 1820 0
+	str	r3, [fp, #-76]
+.L1131:
+	.loc 2 1821 0 discriminator 1
+	uxth	r2, r3
+	cmp	ip, r2
+	bhi	.L1133
+	.loc 2 1828 0
+	mov	r2, #0
+	ldr	r1, [fp, #-76]
+	bl	FlashReadPages
+.LVL982:
+	.loc 2 1829 0
+	mov	r3, #0
+.LVL983:
+.L1222:
+	str	r3, [fp, #-80]
+	.loc 2 1829 0 is_stmt 0 discriminator 2
+	ldr	r2, [fp, #-76]
+.LVL984:
+	ldrh	r3, [fp, #-80]
+	cmp	r2, r3
+	bhi	.L1161
+	.loc 2 1982 0 is_stmt 1
+	add	r3, r10, #1
+	uxth	r10, r3
+	.loc 2 1983 0
+	ldrh	r3, [r5, #78]
+	cmp	r3, r10
+	bne	.L1130
+	.loc 2 1986 0
+	ldrh	r2, [r5, #8]
+	.loc 2 1988 0
+	movw	r0, #65535
+	.loc 2 1985 0
+	mov	r3, #0
+	.loc 2 1984 0
+	strh	r10, [r4, #2]	@ movhi
+	.loc 2 1985 0
+	strh	r3, [r4, #4]	@ movhi
+.L1162:
+	.loc 2 1986 0 discriminator 1
+	uxth	r1, r3
+	cmp	r1, r2
+	bcs	.L1217
+	.loc 2 1987 0
+	ldr	r1, [fp, #-84]
+	ldrh	ip, [r1], #2
+	.loc 2 1988 0
+	cmp	ip, r0
+	.loc 2 1987 0
+	str	r1, [fp, #-84]
+	add	r1, r3, #1
+	.loc 2 1988 0
+	bne	.L1223
+	mov	r3, r1
+	b	.L1162
+.LVL985:
+.L1133:
+	.loc 2 1822 0
+	ldrh	r2, [r1], #2
+	.loc 2 1823 0
+	cmp	r2, lr
+	beq	.L1132
+	.loc 2 1824 0
+	ldr	r7, [fp, #-76]
+.LVL986:
+	orr	r2, r10, r2, lsl #10
+	mla	r7, r6, r7, r0
+	str	r2, [r7, #4]
+	.loc 2 1825 0
+	ldr	r2, [fp, #-76]
+	add	r2, r2, #1
+	uxth	r2, r2
+	str	r2, [fp, #-76]
+.LVL987:
+.L1132:
+	add	r3, r3, #1
+	b	.L1131
+.LVL988:
+.L1161:
+	ldr	r3, [fp, #-80]
+	mov	r7, #20
+.LVL989:
+	.loc 2 1830 0
+	ldr	r2, [r5, #3792]
+	mul	r7, r7, r3
+	str	r2, [fp, #-92]
+	add	r8, r2, r7
+	ldr	r6, [r8, #4]
+.LVL990:
+	.loc 2 1831 0
+	ubfx	r0, r6, #10, #16
+	.loc 2 1830 0
+	str	r6, [fp, #-48]
+	.loc 2 1831 0
+	bl	P2V_plane
+.LVL991:
+	.loc 2 1833 0
+	ldr	r3, [fp, #-68]
+.LVL992:
+	cmp	r10, r3
+	bcc	.L1135
+	.loc 2 1833 0 is_stmt 0 discriminator 1
+	ldr	r2, [fp, #-88]
+.LVL993:
+	.loc 2 1834 0 is_stmt 1 discriminator 1
+	moveq	r3, #1
+.LVL994:
+	movne	r3, #0
+	.loc 2 1833 0 discriminator 1
+	cmp	r2, r0
+	movls	r3, #0
+	andhi	r3, r3, #1
+	cmp	r3, #0
+	bne	.L1135
+	.loc 2 1837 0
+	ldr	r3, [fp, #-72]
+.LVL995:
+	cmp	r10, r9
+	cmpeq	r3, r0
+	beq	.L1136
+	.loc 2 1841 0
+	ldr	r2, [fp, #-92]
+.LVL996:
+	ldr	r3, [r2, r7]
+.LVL997:
+	cmn	r3, #1
+	beq	.L1137
+	.loc 2 1842 0
+	ldr	r8, [r8, #12]
+	.loc 2 1843 0
+	movw	r3, #61589
+	ldrh	r2, [r8]
+	cmp	r2, r3
+	beq	.L1138
+.LVL998:
+.L1145:
+.LBB451:
+	.loc 2 1876 0
+	ldrh	r0, [r4]
+.LVL999:
+.L1221:
+.LBE451:
+	.loc 2 1960 0
+	bl	decrement_vpc_count
+.LVL1000:
+.L1135:
+	ldr	r3, [fp, #-80]
+.LVL1001:
+	add	r3, r3, #1
+	b	.L1222
+.LVL1002:
+.L1138:
+	.loc 2 1849 0
+	ldr	r3, [r8, #4]
+.LVL1003:
+	.loc 2 1850 0
+	cmn	r3, #1
+	.loc 2 1849 0
+	str	r3, [fp, #-64]
+	.loc 2 1850 0
+	beq	.L1139
+	.loc 2 1851 0 discriminator 1
+	mov	r0, r3
+	ldr	r1, [r5, #2476]
+	bl	ftl_cmp_data_ver
+.LVL1004:
+	.loc 2 1850 0 discriminator 1
+	cmp	r0, #0
+	.loc 2 1853 0 discriminator 1
+	ldrne	r3, [fp, #-64]
+.LVL1005:
+	addne	r3, r3, #1
+.LVL1006:
+	strne	r3, [r5, #2476]
+.LVL1007:
+.L1139:
+	.loc 2 1856 0
+	ldrh	r2, [r8]
+	movw	r3, #61589
+.LVL1008:
+	cmp	r2, r3
+	beq	.L1140
+	.loc 2 1856 0 is_stmt 0 discriminator 1
+	mov	r2, #1856
+	ldr	r1, .L1225+4
+	ldr	r0, .L1225+8
+	bl	printk
+.LVL1009:
+.L1140:
+	.loc 2 1857 0 is_stmt 1
+	ldr	r6, [r8, #8]
+.LVL1010:
+	.loc 2 1859 0
+	sub	r1, fp, #52
+	.loc 2 1858 0
+	ldr	r3, [r8, #12]
+	.loc 2 1859 0
+	mov	r2, #0
+	mov	r0, r6
+	.loc 2 1858 0
+	str	r3, [fp, #-56]
+	.loc 2 1859 0
+	bl	log2phys
+.LVL1011:
+	.loc 2 1860 0
+	ldr	r1, [r5, #3964]
+	cmn	r1, #1
+	beq	.L1141
+	.loc 2 1861 0 discriminator 1
+	ldr	r0, [fp, #-64]
+	bl	ftl_cmp_data_ver
+.LVL1012:
+	.loc 2 1860 0 discriminator 1
+	cmp	r0, #0
+	beq	.L1141
+.LBB452:
+	.loc 2 1865 0
+	ldr	r3, [fp, #-56]
+	cmn	r3, #1
+	beq	.L1142
+	.loc 2 1866 0
+	ldr	r0, [r5, #3792]
+	.loc 2 1868 0
+	mov	r2, #0
+	mov	r1, #1
+	.loc 2 1866 0
+	add	r0, r0, r7
+	.loc 2 1867 0
+	str	r3, [r0, #4]
+	.loc 2 1866 0
+	ldr	r8, [r0, #12]
+	.loc 2 1868 0
+	bl	FlashReadPages
+.LVL1013:
+	.loc 2 1881 0
+	ldr	r3, [r5, #3792]
+	add	r2, r3, r7
+	str	r2, [fp, #-92]
+	ldr	r2, [r3, r7]
+	cmn	r2, #1
+	bne	.L1143
+.LVL1014:
+.L1144:
+	.loc 2 1913 0
+	mvn	r3, #0
+	.loc 2 1914 0
+	ldrh	r0, [r4]
+	.loc 2 1913 0
+	str	r3, [fp, #-56]
+	.loc 2 1914 0
+	bl	decrement_vpc_count
+.LVL1015:
+.L1152:
+.LBE452:
+	.loc 2 1954 0
+	ldr	r8, [fp, #-56]
+	cmn	r8, #1
+	beq	.L1135
+.L1165:
+	.loc 2 1956 0
+	ubfx	r0, r8, #10, #16
+	bl	P2V_block_in_plane
+.LVL1016:
+	.loc 2 1957 0
+	ldrh	r3, [r5, #16]
+	.loc 2 1956 0
+	mov	r6, r0
+.LVL1017:
+	.loc 2 1957 0
+	cmp	r3, r0
+	bhi	.L1157
+	.loc 2 1957 0 is_stmt 0 discriminator 1
+	movw	r2, #1957
+	ldr	r1, .L1225+4
+	ldr	r0, .L1225+8
+	bl	printk
+.LVL1018:
+.L1157:
+	.loc 2 1958 0 is_stmt 1
+	ldr	r2, [r5, #2260]
+	lsl	r3, r6, #1
+	ldrh	r3, [r2, r3]
+	cmp	r3, #0
+	beq	.L1158
+	.loc 2 1960 0
+	mov	r0, r6
+	b	.L1221
+.LVL1019:
+.L1142:
+.LBB453:
+	.loc 2 1872 0
+	ldr	r3, [fp, #-48]
+	ldr	r2, [fp, #-52]
+	cmp	r2, r3
+	bne	.L1145
+	.loc 2 1873 0
+	mov	r2, #1
+	sub	r1, fp, #56
+	mov	r0, r6
+	bl	log2phys
+.LVL1020:
+	b	.L1145
+.L1143:
+	.loc 2 1881 0 discriminator 1
+	ldr	r2, [r8, #8]
+	cmp	r6, r2
+	bne	.L1144
+	str	r3, [fp, #-100]
+	.loc 2 1869 0 discriminator 2
+	ldr	r3, [r8, #4]
+.LVL1021:
+	.loc 2 1882 0 discriminator 2
+	ldr	r0, [r5, #3964]
+	mov	r1, r3
+	.loc 2 1869 0 discriminator 2
+	str	r3, [fp, #-96]
+	.loc 2 1882 0 discriminator 2
+	bl	ftl_cmp_data_ver
+.LVL1022:
+	.loc 2 1881 0 discriminator 2
+	cmp	r0, #0
+	beq	.L1144
+	.loc 2 1883 0
+	ldr	r1, [fp, #-48]
+	ldr	r2, [fp, #-52]
+	ldr	r3, [fp, #-100]
+	cmp	r2, r1
+	.loc 2 1885 0
+	ldr	r1, [fp, #-56]
+	.loc 2 1883 0
+	bne	.L1147
+.LVL1023:
+.L1219:
+	.loc 2 1909 0
+	mov	r0, r6
+	bl	FtlReUsePrevPpa
+.LVL1024:
+	b	.L1144
+.LVL1025:
+.L1147:
+	.loc 2 1886 0
+	cmp	r2, r1
+	beq	.L1144
+	.loc 2 1887 0
+	cmn	r2, #1
+	.loc 2 1892 0
+	streq	r2, [r3, r7]
+	.loc 2 1887 0
+	beq	.L1149
+	.loc 2 1888 0
+	ldr	r3, [fp, #-92]
+	.loc 2 1890 0
+	mov	r1, #1
+	.loc 2 1889 0
+	str	r2, [r3, #4]
+	.loc 2 1890 0
+	mov	r0, r3
+	mov	r2, #0
+	.loc 2 1888 0
+	ldr	r8, [r3, #12]
+	.loc 2 1890 0
+	bl	FlashReadPages
+.LVL1026:
+.L1149:
+	.loc 2 1895 0
+	ldr	r3, [r5, #3792]
+	ldr	r3, [r3, r7]
+	cmn	r3, #1
+	beq	.L1150
+	.loc 2 1896 0
+	ldr	r7, [r8, #4]
+.LVL1027:
+	.loc 2 1897 0
+	ldr	r0, [r5, #3964]
+	mov	r1, r7
+	bl	ftl_cmp_data_ver
+.LVL1028:
+	cmp	r0, #0
+	beq	.L1150
+	.loc 2 1898 0
+	mov	r1, r7
+	ldr	r0, [fp, #-96]
+	bl	ftl_cmp_data_ver
+.LVL1029:
+	cmp	r0, #0
+	beq	.L1144
+.L1150:
+	.loc 2 1909 0
+	ldr	r1, [fp, #-56]
+	b	.L1219
+.LVL1030:
+.L1141:
+.LBE453:
+	.loc 2 1915 0
+	ldr	r3, [fp, #-48]
+	ldr	r2, [fp, #-52]
+	cmp	r2, r3
+	beq	.L1152
+	.loc 2 1917 0
+	mov	r2, #1
+	sub	r1, fp, #48
+	mov	r0, r6
+	bl	log2phys
+.LVL1031:
+	.loc 2 1918 0
+	ldr	r8, [fp, #-52]
+	cmn	r8, #1
+	beq	.L1152
+	.loc 2 1918 0 is_stmt 0 discriminator 1
+	ldr	r3, [fp, #-56]
+	cmp	r8, r3
+	beq	.L1165
+	.loc 2 1919 0 is_stmt 1
+	ubfx	r0, r8, #10, #16
+	bl	P2V_block_in_plane
+.LVL1032:
+	.loc 2 1921 0
+	ldr	r3, .L1225+16
+	ldrh	r2, [r3]
+	cmp	r2, r0
+	beq	.L1156
+	.loc 2 1921 0 is_stmt 0 discriminator 1
+	ldrh	r2, [r3, #48]
+	cmp	r2, r0
+	beq	.L1156
+	.loc 2 1922 0 is_stmt 1
+	ldrh	r3, [r3, #96]
+	cmp	r3, r0
+	bne	.L1152
+.L1156:
+.LBB454:
+	.loc 2 1927 0
+	ldr	r0, [r5, #3792]
+	.loc 2 1930 0
+	mov	r2, #0
+	mov	r1, #1
+	.loc 2 1929 0
+	str	r8, [r0, #4]
+	.loc 2 1927 0
+	ldr	r7, [r0, #12]
+	.loc 2 1930 0
+	bl	FlashReadPages
+.LVL1033:
+	.loc 2 1933 0
+	ldr	r3, [r5, #3792]
+	ldr	r3, [r3]
+	cmn	r3, #1
+	beq	.L1152
+	.loc 2 1934 0
+	ldr	r1, [r7, #4]
+	ldr	r0, [fp, #-64]
+	bl	ftl_cmp_data_ver
+.LVL1034:
+	cmp	r0, #0
+	bne	.L1152
+	.loc 2 1941 0
+	mov	r2, #1
+	sub	r1, fp, #52
+	mov	r0, r6
+	bl	log2phys
+.LVL1035:
+	b	.L1152
+.LVL1036:
+.L1158:
+.LBE454:
+	.loc 2 1962 0
+	mov	r1, r6
+	ldr	r0, .L1225+20
+	bl	printk
+.LVL1037:
+	b	.L1135
+.LVL1038:
+.L1137:
+	.loc 2 1969 0
+	ldr	r3, [r5, #3972]
+	cmp	r3, #31
+	.loc 2 1970 0
+	addls	r2, r5, r3, lsl #2
+	.loc 2 1971 0
+	addls	r3, r3, #1
+	strls	r3, [r5, #3972]
+	.loc 2 1970 0
+	strls	r6, [r2, #3976]
+	.loc 2 1973 0
+	ldrh	r0, [r4]
+	bl	decrement_vpc_count
+.LVL1039:
+	.loc 2 1975 0
+	ldr	r3, [r5, #3964]
+	cmn	r3, #1
+	.loc 2 1976 0
+	ldreq	r3, [fp, #-64]
+.LVL1040:
+	.loc 2 1975 0
+	beq	.L1220
+	.loc 2 1977 0
+	ldr	r2, [fp, #-64]
+.LVL1041:
+	cmp	r2, r3
+	bcs	.L1135
+	.loc 2 1978 0
+	mov	r3, r2
+.LVL1042:
+.L1220:
+	str	r3, [r5, #3964]
+	b	.L1135
+.LVL1043:
+.L1136:
+	.loc 2 2002 0
+	ldrb	r3, [fp, #-72]	@ zero_extendqisi2
+.LVL1044:
+	.loc 2 2003 0
+	strh	r9, [r4, #2]	@ movhi
+	.loc 2 2004 0
+	ldr	r2, [fp, #-72]
+.LVL1045:
+	.loc 2 2002 0
+	strb	r3, [r4, #6]
+	b	.L1224
+.L1226:
+	.align	2
+.L1225:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+421
+	.word	.LC1
+	.word	.LANCHOR0+3968
+	.word	.LANCHOR0+2280
+	.word	.LC95
+.LFE221:
+	.fnend
+	.size	FtlRecoverySuperblock, .-FtlRecoverySuperblock
+	.align	2
+	.global	FtlSuperblockPowerLostFix
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlSuperblockPowerLostFix, %function
+FtlSuperblockPowerLostFix:
+	.fnstart
+.LFB228:
+	.loc 2 2156 0
+	@ args = 0, pretend = 0, frame = 24
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL1046:
+	.movsp ip
+	mov	ip, sp
+.LCFI339:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI340:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI341:
+	.pad #24
+	sub	sp, sp, #24
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2156 0
+	ldr	r5, .L1238
+	mov	r4, r0
+	.loc 2 2162 0
+	mov	r6, #7
+	.loc 2 2168 0
+	mvn	r7, #0
+.L1228:
+	.loc 2 2162 0
+	subs	r6, r6, #1
+	beq	.L1230
+	.loc 2 2163 0
+	ldrh	r3, [r4, #4]
+	cmp	r3, #0
+	bne	.L1229
+.L1230:
+	.loc 2 2183 0
+	ldrh	r3, [r4]
+	ldr	r1, [r5, #2260]
+	ldrh	r0, [r4, #4]
+	lsl	r3, r3, #1
+	ldrh	r2, [r1, r3]
+	sub	r2, r2, r0
+	strh	r2, [r1, r3]	@ movhi
+	.loc 2 2184 0
+	ldrh	r3, [r5, #78]
+	strh	r3, [r4, #2]	@ movhi
+	.loc 2 2185 0
+	mov	r3, #0
+	strb	r3, [r4, #6]
+	.loc 2 2186 0
+	strh	r3, [r4, #4]	@ movhi
+	.loc 2 2188 0
+	sub	sp, fp, #28
+.LCFI342:
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.LVL1047:
+.L1229:
+.LCFI343:
+	.loc 2 2165 0
+	mov	r0, r4
+	bl	get_new_active_ppa
+.LVL1048:
+	.loc 2 2166 0
+	cmn	r0, #1
+	.loc 2 2165 0
+	str	r0, [fp, #-44]
+	.loc 2 2166 0
+	beq	.L1230
+	.loc 2 2170 0
+	ldr	r1, [r5, #3244]
+	.loc 2 2179 0
+	sub	r0, fp, #48
+	.loc 2 2169 0
+	ldr	r3, [r5, #2244]
+	.loc 2 2168 0
+	str	r7, [fp, #-32]
+	.loc 2 2170 0
+	str	r1, [fp, #-36]
+	.loc 2 2169 0
+	str	r3, [fp, #-40]
+	.loc 2 2174 0
+	str	r7, [r1, #12]
+	.loc 2 2173 0
+	str	r7, [r1, #8]
+	.loc 2 2175 0
+	ldrh	r3, [r4]
+	strh	r3, [r1, #2]	@ movhi
+	.loc 2 2176 0
+	mov	r3, #0
+	strh	r3, [r1]	@ movhi
+	.loc 2 2178 0
+	ldr	r2, [r5, #2476]
+	str	r2, [r1, #4]
+	add	r2, r2, #1
+	cmn	r2, #1
+	.loc 2 2179 0
+	mov	r1, #1
+	.loc 2 2178 0
+	moveq	r2, r3
+	str	r2, [r5, #2476]
+	.loc 2 2179 0
+	mov	r2, r3
+	bl	FlashProgPages
+.LVL1049:
+	.loc 2 2180 0
+	ldrh	r0, [r4]
+	bl	decrement_vpc_count
+.LVL1050:
+	b	.L1228
+.L1239:
+	.align	2
+.L1238:
+	.word	.LANCHOR0
+.LFE228:
+	.fnend
+	.size	FtlSuperblockPowerLostFix, .-FtlSuperblockPowerLostFix
+	.align	2
+	.global	FtlLoadBbt
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlLoadBbt, %function
+FtlLoadBbt:
+	.fnstart
+.LFB169:
+	.loc 4 173 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI344:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI345:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI346:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 4 173 0
+	.loc 4 180 0
+	ldr	r4, .L1272
+	.loc 4 186 0
+	ldr	r7, .L1272+4
+	.loc 4 180 0
+	ldr	r3, [r4, #2244]
+	.loc 4 181 0
+	ldr	r6, [r4, #3244]
+	.loc 4 180 0
+	str	r3, [r4, #3232]
+	.loc 4 181 0
+	str	r6, [r4, #3236]
+	.loc 4 183 0
+	bl	FtlBbtMemInit
+.LVL1051:
+	.loc 4 184 0
+	ldrh	r5, [r4, #74]
+	sub	r5, r5, #1
+	uxth	r5, r5
+.LVL1052:
+.L1241:
+	.loc 4 184 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #74]
+	sub	r3, r3, #16
+	cmp	r5, r3
+	ble	.L1244
+	.loc 4 185 0 is_stmt 1
+	lsl	r3, r5, #10
+	.loc 4 186 0
+	mov	r2, #1
+	mov	r1, r2
+	mov	r0, r7
+	.loc 4 185 0
+	str	r3, [r4, #3228]
+	.loc 4 186 0
+	bl	FlashReadPages
+.LVL1053:
+	.loc 4 187 0
+	ldr	r3, [r4, #3224]
+	cmn	r3, #1
+	bne	.L1242
+	.loc 4 188 0
+	ldr	r3, [r4, #3228]
+	.loc 4 189 0
+	mov	r2, #1
+	mov	r1, r2
+	mov	r0, r7
+	.loc 4 188 0
+	add	r3, r3, #1
+	str	r3, [r4, #3228]
+	.loc 4 189 0
+	bl	FlashReadPages
+.LVL1054:
+.L1242:
+	.loc 4 191 0
+	ldr	r3, [r4, #3224]
+	cmn	r3, #1
+	beq	.L1243
+	.loc 4 196 0
+	ldrh	r2, [r6]
+	movw	r3, #61649
+	cmp	r2, r3
+	bne	.L1243
+	.loc 4 199 0
+	ldr	r3, [r6, #4]
+	.loc 4 198 0
+	strh	r5, [r4, #128]	@ movhi
+	.loc 4 199 0
+	str	r3, [r4, #136]
+	.loc 4 200 0
+	ldrh	r3, [r6, #8]
+	strh	r3, [r4, #132]	@ movhi
+.L1244:
+	.loc 4 216 0
+	ldrh	r3, [r4, #128]
+	movw	r2, #65535
+	cmp	r3, r2
+	beq	.L1258
+	.loc 4 222 0
+	ldrh	r3, [r4, #132]
+	cmp	r3, r2
+	beq	.L1248
+	.loc 4 224 0
+	lsl	r3, r3, #10
+	.loc 4 225 0
+	mov	r2, #1
+	mov	r1, r2
+	ldr	r0, .L1272+4
+	.loc 4 224 0
+	str	r3, [r4, #3228]
+	.loc 4 225 0
+	bl	FlashReadPages
+.LVL1055:
+	.loc 4 226 0
+	ldr	r3, [r4, #3224]
+	cmn	r3, #1
+	beq	.L1248
+	.loc 4 229 0
+	ldrh	r2, [r6]
+	movw	r3, #61649
+	cmp	r2, r3
+	bne	.L1248
+	.loc 4 229 0 is_stmt 0 discriminator 1
+	ldr	r3, [r6, #4]
+	ldr	r2, [r4, #136]
+	cmp	r3, r2
+	.loc 4 231 0 is_stmt 1 discriminator 1
+	ldrhhi	r2, [r4, #132]
+	.loc 4 232 0 discriminator 1
+	strhi	r3, [r4, #136]
+	.loc 4 233 0 discriminator 1
+	ldrhhi	r3, [r6, #8]
+	.loc 4 231 0 discriminator 1
+	strhhi	r2, [r4, #128]	@ movhi
+	.loc 4 233 0 discriminator 1
+	strhhi	r3, [r4, #132]	@ movhi
+.L1248:
+	.loc 4 245 0
+	ldr	r7, .L1272+4
+	.loc 4 238 0
+	mov	r1, #1
+	ldrh	r0, [r4, #128]
+	bl	FtlGetLastWrittenPage
+.LVL1056:
+	sxth	r5, r0
+.LVL1057:
+	.loc 4 239 0
+	add	r0, r0, #1
+	strh	r0, [r4, #130]	@ movhi
+.L1250:
+	.loc 4 241 0
+	cmp	r5, #0
+	bge	.L1253
+	.loc 4 254 0
+	mov	r2, #254
+	ldr	r1, .L1272+8
+	ldr	r0, .L1272+12
+	bl	printk
+.LVL1058:
+.L1252:
+	.loc 4 255 0
+	ldrh	r3, [r6, #10]
+	.loc 4 257 0
+	ldrh	r0, [r6, #12]
+	.loc 4 255 0
+	strh	r3, [r4, #134]	@ movhi
+	.loc 4 257 0
+	movw	r3, #65535
+	cmp	r0, r3
+	beq	.L1255
+	.loc 4 259 0
+	ldr	r2, [r4, #4]
+	cmp	r0, r2
+	beq	.L1255
+	.loc 4 259 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #18]
+	lsr	r3, r3, #2
+	.loc 4 261 0 is_stmt 1 discriminator 1
+	cmp	r0, r3
+	cmpcc	r2, r3
+	bcs	.L1255
+	.loc 4 263 0
+	bl	FtlSysBlkNumInit
+.LVL1059:
+.L1255:
+	ldr	r6, .L1272+16
+	.loc 4 173 0 discriminator 1
+	mov	r5, #0
+.LVL1060:
+	.loc 4 269 0 discriminator 1
+	ldr	r7, .L1272+20
+.L1256:
+	.loc 4 268 0 discriminator 1
+	ldrh	r3, [r4, #30]
+	cmp	r5, r3
+	bcc	.L1257
+	.loc 4 275 0
+	mov	r0, #0
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.LVL1061:
+.L1243:
+	.loc 4 184 0 discriminator 2
+	sub	r5, r5, #1
+.LVL1062:
+	uxth	r5, r5
+.LVL1063:
+	b	.L1241
+.LVL1064:
+.L1253:
+	.loc 4 243 0
+	ldrh	r3, [r4, #128]
+	.loc 4 245 0
+	mov	r2, #1
+	mov	r1, r2
+	mov	r0, r7
+	.loc 4 243 0
+	orr	r3, r5, r3, lsl #10
+	str	r3, [r4, #3228]
+	.loc 4 244 0
+	ldr	r3, [r4, #2244]
+	str	r3, [r4, #3232]
+	.loc 4 245 0
+	bl	FlashReadPages
+.LVL1065:
+	.loc 4 247 0
+	ldr	r3, [r4, #3224]
+	cmn	r3, #1
+	beq	.L1251
+	.loc 4 247 0 is_stmt 0 discriminator 1
+	ldrh	r2, [r6]
+	movw	r3, #61649
+	cmp	r2, r3
+	beq	.L1252
+.L1251:
+	sub	r5, r5, #1
+.LVL1066:
+	sxth	r5, r5
+.LVL1067:
+	b	.L1250
+.LVL1068:
+.L1257:
+	.loc 4 269 0 is_stmt 1 discriminator 3
+	ldrh	r2, [r7]
+	ldr	r1, [r4, #3232]
+	ldr	r0, [r6, #4]!
+	lsl	r2, r2, #2
+	mla	r1, r5, r2, r1
+	.loc 4 268 0 discriminator 3
+	add	r5, r5, #1
+	.loc 4 269 0 discriminator 3
+	bl	ftl_memcpy
+.LVL1069:
+	b	.L1256
+.LVL1070:
+.L1258:
+	.loc 4 218 0
+	mvn	r0, #0
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L1273:
+	.align	2
+.L1272:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+3224
+	.word	.LANCHOR1+443
+	.word	.LC1
+	.word	.LANCHOR0+152
+	.word	.LANCHOR0+3860
+.LFE169:
+	.fnend
+	.size	FtlLoadBbt, .-FtlLoadBbt
+	.align	2
+	.global	FtlMakeBbt
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlMakeBbt, %function
+FtlMakeBbt:
+	.fnstart
+.LFB171:
+	.loc 4 317 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI347:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI348:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI349:
+	.pad #12
+	sub	sp, sp, #12
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 4 317 0
+	ldr	r8, .L1294
+	.loc 4 327 0
+	mov	r7, #0
+.LVL1071:
+	.loc 4 325 0
+	bl	FtlBbtMemInit
+.LVL1072:
+	.loc 4 326 0
+	bl	FtlLoadFactoryBbt
+.LVL1073:
+	.loc 4 327 0
+	sub	r5, r8, #156
+	sub	r9, r8, #18
+	mov	r4, r5
+.LVL1074:
+.L1275:
+	.loc 4 327 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r5, #30]
+	cmp	r7, r3
+	bcc	.L1281
+	mov	r5, #0
+.L1282:
+	.loc 4 381 0 is_stmt 1 discriminator 1
+	ldrh	r3, [r4, #90]
+	uxth	r0, r5
+	add	r5, r5, #1
+	cmp	r3, r0
+	bhi	.L1283
+	.loc 4 387 0
+	ldrh	r5, [r4, #140]
+	.loc 4 396 0
+	movw	r6, #65535
+.LVL1075:
+	.loc 4 387 0
+	sub	r5, r5, #1
+	uxth	r5, r5
+.L1284:
+	.loc 4 387 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #140]
+	sub	r3, r3, #48
+	cmp	r5, r3
+	ble	.L1288
+	.loc 4 389 0 is_stmt 1
+	mov	r0, r5
+	bl	FtlBbmIsBadBlock
+.LVL1076:
+	cmp	r0, #1
+	beq	.L1285
+	.loc 4 391 0
+	mov	r0, r5
+	bl	FlashTestBlk
+.LVL1077:
+	cmp	r0, #0
+	beq	.L1286
+	.loc 4 393 0
+	mov	r0, r5
+	bl	FtlBbmMapBadBlock
+.LVL1078:
+.L1285:
+	.loc 4 387 0 discriminator 2
+	sub	r5, r5, #1
+	uxth	r5, r5
+	b	.L1284
+.LVL1079:
+.L1281:
+	.loc 4 331 0
+	ldrh	r3, [r9, #2]!
+	movw	r2, #65535
+	.loc 4 328 0
+	ldr	r0, [r5, #2244]
+	.loc 4 329 0
+	ldr	r10, [r5, #3244]
+	.loc 4 331 0
+	cmp	r3, r2
+	.loc 4 328 0
+	str	r0, [r5, #3232]
+	.loc 4 329 0
+	str	r10, [r5, #3236]
+	.loc 4 331 0
+	beq	.L1276
+	.loc 4 333 0
+	ldrh	r6, [r5, #74]
+.LVL1080:
+	.loc 4 335 0
+	mov	r2, #1
+	mov	r1, r2
+	ldr	r0, .L1294+4
+	.loc 4 333 0
+	mla	r6, r7, r6, r3
+.LVL1081:
+	.loc 4 334 0
+	lsl	r3, r6, #10
+	str	r3, [r5, #3228]
+	.loc 4 335 0
+	bl	FlashReadPages
+.LVL1082:
+	.loc 4 336 0
+	ldrh	r2, [r5, #74]
+	ldr	r1, [r5, #3232]
+	ldr	r0, [r8]
+	add	r2, r2, #7
+	asr	r2, r2, #3
+	bl	ftl_memcpy
+.LVL1083:
+.L1277:
+	.loc 4 376 0 discriminator 2
+	uxth	r0, r6
+	.loc 4 327 0 discriminator 2
+	add	r7, r7, #1
+	add	r8, r8, #4
+	.loc 4 376 0 discriminator 2
+	bl	FtlBbmMapBadBlock
+.LVL1084:
+	b	.L1275
+.L1276:
+	.loc 4 340 0
+	mov	r1, r7
+	bl	FlashGetBadBlockList
+.LVL1085:
+	.loc 4 341 0
+	ldr	r1, [r8]
+	ldr	r0, [r5, #3232]
+	bl	FtlBbt2Bitmap
+.LVL1086:
+	.loc 4 343 0
+	ldrh	r3, [r5, #74]
+.L1293:
+	.loc 4 347 0
+	sub	r3, r3, #1
+	uxth	r3, r3
+	str	r3, [fp, #-48]
+.L1278:
+	.loc 4 345 0
+	ldr	r3, [fp, #-48]
+	ldrh	r0, [r4, #74]
+	smlabb	r0, r0, r7, r3
+	uxth	r0, r0
+	bl	FtlBbmIsBadBlock
+.LVL1087:
+	cmp	r0, #1
+	beq	.L1279
+	.loc 4 349 0
+	ldrh	r3, [fp, #-48]
+.LBB465:
+.LBB466:
+.LBB467:
+	.loc 1 202 0
+	mov	r1, #16
+	ldr	r0, [r4, #3244]
+.LBE467:
+.LBE466:
+.LBE465:
+	.loc 4 349 0
+	strh	r3, [r9]	@ movhi
+.LBB470:
+.LBB469:
+.LBB468:
+	.loc 1 202 0
+	bl	__memzero
+.LVL1088:
+.LBE468:
+.LBE469:
+.LBE470:
+.LBB471:
+.LBB472:
+.LBB473:
+	mov	r1, #4096
+	ldr	r0, [r4, #2244]
+	bl	__memzero
+.LVL1089:
+.LBE473:
+.LBE472:
+.LBE471:
+	.loc 4 352 0
+	ldr	r3, .L1294+8
+	strh	r3, [r10]	@ movhi
+	.loc 4 353 0
+	mov	r3, #0
+	str	r3, [r10, #4]
+	.loc 4 354 0
+	ldrh	r3, [r9]
+	.loc 4 355 0
+	ldrh	r6, [r4, #74]
+.LVL1090:
+	.loc 4 354 0
+	strh	r3, [r10, #2]	@ movhi
+	.loc 4 355 0
+	ldrh	r3, [r9]
+	.loc 4 357 0
+	ldr	r1, [r8]
+	ldr	r0, [r4, #3232]
+	.loc 4 355 0
+	mla	r6, r7, r6, r3
+.LVL1091:
+	.loc 4 356 0
+	lsl	r3, r6, #10
+	str	r3, [r4, #3228]
+	.loc 4 357 0
+	ldr	r3, .L1294+12
+	ldrh	r2, [r3]
+	lsl	r2, r2, #2
+	bl	ftl_memcpy
+.LVL1092:
+	.loc 4 358 0
+	mov	r2, #1
+	ldr	r0, .L1294+4
+	mov	r1, r2
+	bl	FlashEraseBlocks
+.LVL1093:
+	.loc 4 359 0
+	mov	r3, #1
+	ldr	r0, .L1294+4
+	mov	r2, r3
+	mov	r1, r3
+	bl	FlashProgPages
+.LVL1094:
+	.loc 4 360 0
+	ldr	r3, [r4, #3224]
+	cmn	r3, #1
+	bne	.L1277
+	.loc 4 362 0
+	uxth	r0, r6
+	bl	FtlBbmMapBadBlock
+.LVL1095:
+	.loc 4 363 0
+	b	.L1278
+.L1279:
+	.loc 4 347 0
+	ldr	r3, [fp, #-48]
+	b	.L1293
+.L1283:
+	.loc 4 383 0 discriminator 3
+	bl	FtlBbmMapBadBlock
+.LVL1096:
+	b	.L1282
+.LVL1097:
+.L1286:
+	.loc 4 396 0
+	ldrh	r3, [r4, #128]
+	cmp	r3, r6
+	.loc 4 398 0
+	strheq	r5, [r4, #128]	@ movhi
+	beq	.L1285
+.L1287:
+	.loc 4 402 0
+	strh	r5, [r4, #132]	@ movhi
+.L1288:
+	.loc 4 414 0
+	ldrh	r3, [r4, #128]
+	.loc 4 411 0
+	mov	r5, #0
+	.loc 4 414 0
+	ldr	r0, [r4, #3760]
+	.loc 4 416 0
+	mov	r1, #1
+	.loc 4 413 0
+	str	r5, [r4, #136]
+	.loc 4 416 0
+	mov	r2, #2
+	.loc 4 411 0
+	strh	r5, [r4, #130]	@ movhi
+	.loc 4 414 0
+	lsl	r3, r3, #10
+	str	r3, [r0, #4]
+	.loc 4 415 0
+	ldrh	r3, [r4, #132]
+	lsl	r3, r3, #10
+	str	r3, [r0, #24]
+	.loc 4 416 0
+	bl	FlashEraseBlocks
+.LVL1098:
+	.loc 4 418 0
+	ldrh	r0, [r4, #128]
+	bl	FtlBbmMapBadBlock
+.LVL1099:
+	.loc 4 419 0
+	ldrh	r0, [r4, #132]
+	bl	FtlBbmMapBadBlock
+.LVL1100:
+	.loc 4 421 0
+	bl	FtlBbmTblFlush
+.LVL1101:
+	.loc 4 422 0
+	ldr	r3, [r4, #136]
+	.loc 4 425 0
+	ldrh	r2, [r4, #132]
+	.loc 4 426 0
+	strh	r5, [r4, #130]	@ movhi
+	.loc 4 422 0
+	add	r3, r3, #1
+	str	r3, [r4, #136]
+	.loc 4 424 0
+	ldrh	r3, [r4, #128]
+	.loc 4 425 0
+	strh	r2, [r4, #128]	@ movhi
+	.loc 4 427 0
+	strh	r3, [r4, #132]	@ movhi
+	.loc 4 429 0
+	bl	FtlBbmTblFlush
+.LVL1102:
+	.loc 4 432 0
+	mov	r0, r5
+	sub	sp, fp, #40
+.LCFI350:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL1103:
+.L1295:
+	.align	2
+.L1294:
+	.word	.LANCHOR0+156
+	.word	.LANCHOR0+3224
+	.word	-3872
+	.word	.LANCHOR0+3860
+.LFE171:
+	.fnend
+	.size	FtlMakeBbt, .-FtlMakeBbt
+	.align	2
+	.global	FtlVendorPartWrite
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlVendorPartWrite, %function
+FtlVendorPartWrite:
+	.fnstart
+.LFB203:
+	.loc 2 786 0
+	@ args = 0, pretend = 0, frame = 104
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL1104:
+	.movsp ip
+	mov	ip, sp
+.LCFI351:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI352:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI353:
+	.pad #108
+	sub	sp, sp, #108
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 786 0
+	.loc 2 794 0
+	ldr	r4, .L1305
+	.loc 2 786 0
+	mov	r8, r0
+	str	r2, [fp, #-136]
+	.loc 2 794 0
+	add	r2, r0, r1
+.LVL1105:
+	.loc 2 786 0
+	mov	r6, r1
+	.loc 2 794 0
+	ldrh	r3, [r4, #72]
+	cmp	r2, r3
+	.loc 2 795 0
+	mvnhi	r9, #0
+	.loc 2 794 0
+	bhi	.L1296
+	.loc 2 791 0
+	ldrh	r7, [r4, #84]
+	mov	r9, #0
+	lsr	r7, r0, r7
+.LVL1106:
+	lsl	r10, r7, #2
+.LVL1107:
+.L1298:
+	.loc 2 797 0
+	cmp	r6, #0
+	bne	.L1303
+.L1296:
+	.loc 2 820 0
+	mov	r0, r9
+	sub	sp, fp, #40
+.LCFI354:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL1108:
+.L1303:
+.LCFI355:
+	.loc 2 798 0
+	ldr	r3, [r4, #3844]
+.LVL1109:
+	.loc 2 799 0
+	mov	r0, r8
+	.loc 2 798 0
+	ldr	r2, [r3, r10]
+.LVL1110:
+	.loc 2 799 0
+	ldrh	r3, [r4, #34]
+	.loc 2 798 0
+	str	r2, [fp, #-148]
+	.loc 2 799 0
+	mov	r1, r3
+	str	r3, [fp, #-144]
+	bl	__aeabi_uidivmod
+.LVL1111:
+	.loc 2 800 0
+	ldr	r3, [fp, #-144]
+	.loc 2 801 0
+	ldr	r2, [fp, #-148]
+.LVL1112:
+	.loc 2 799 0
+	str	r1, [fp, #-140]
+	.loc 2 800 0
+	sub	r5, r3, r1
+.LVL1113:
+	uxth	r5, r5
+.LVL1114:
+	.loc 2 801 0
+	cmp	r6, r5
+	.loc 2 802 0
+	uxthcc	r5, r6
+	.loc 2 803 0
+	cmp	r2, #0
+	cmpne	r5, r3
+	movne	r1, #1
+	moveq	r1, #0
+	beq	.L1300
+	.loc 2 805 0
+	ldr	r3, [r4, #3808]
+	.loc 2 807 0
+	sub	r0, fp, #128
+	.loc 2 804 0
+	str	r2, [fp, #-124]
+	.loc 2 807 0
+	mov	r2, #1
+.LVL1115:
+	mov	r1, r2
+	.loc 2 805 0
+	str	r3, [fp, #-120]
+	.loc 2 806 0
+	sub	r3, fp, #108
+	str	r3, [fp, #-116]
+	.loc 2 807 0
+	bl	FlashReadPages
+.LVL1116:
+.L1301:
+	.loc 2 811 0
+	lsl	r3, r5, #9
+	ldr	r0, [r4, #3808]
+	ldr	r1, [fp, #-136]
+	.loc 2 815 0
+	sub	r6, r6, r5
+	.loc 2 811 0
+	mov	r2, r3
+	str	r3, [fp, #-144]
+	ldr	r3, [fp, #-140]
+	.loc 2 816 0
+	add	r8, r8, r5
+	add	r10, r10, #4
+	.loc 2 811 0
+	add	r0, r0, r3, lsl #9
+	bl	ftl_memcpy
+.LVL1117:
+	.loc 2 812 0
+	ldr	r2, [r4, #3808]
+	mov	r1, r7
+	ldr	r0, .L1305+4
+	.loc 2 814 0
+	add	r7, r7, #1
+	.loc 2 812 0
+	bl	FtlMapWritePage
+.LVL1118:
+	.loc 2 817 0
+	ldr	r2, [fp, #-136]
+.LVL1119:
+	.loc 2 813 0
+	cmn	r0, #1
+	.loc 2 817 0
+	ldr	r3, [fp, #-144]
+	.loc 2 813 0
+	mvneq	r9, #0
+	.loc 2 817 0
+	add	r3, r2, r3
+.LVL1120:
+	str	r3, [fp, #-136]
+	b	.L1298
+.LVL1121:
+.L1300:
+	.loc 2 809 0
+	ldrh	r2, [r4, #86]
+.LVL1122:
+	ldr	r0, [r4, #3808]
+	bl	ftl_memset
+.LVL1123:
+	b	.L1301
+.L1306:
+	.align	2
+.L1305:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+3908
+.LFE203:
+	.fnend
+	.size	FtlVendorPartWrite, .-FtlVendorPartWrite
+	.align	2
+	.global	Ftl_save_ext_data
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	Ftl_save_ext_data, %function
+Ftl_save_ext_data:
+	.fnstart
+.LFB226:
+	.loc 2 2110 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI356:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI357:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI358:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2110 0
+	.loc 2 2111 0
+	ldr	r3, .L1309
+	ldr	r2, .L1309+4
+	ldr	r1, [r3, #2616]
+	cmp	r1, r2
+	ldmfdne	sp, {fp, sp, pc}
+.LBB476:
+.LBB477:
+	.loc 2 2112 0
+	ldr	r2, .L1309+8
+	.loc 2 2125 0
+	mov	r1, #1
+	mov	r0, #0
+	.loc 2 2112 0
+	str	r2, [r3, #2620]
+	.loc 2 2113 0
+	ldr	r2, [r3, #2464]
+	str	r2, [r3, #2704]
+	.loc 2 2114 0
+	ldr	r2, [r3, #2468]
+	str	r2, [r3, #2708]
+	.loc 2 2115 0
+	ldr	r2, [r3, #2460]
+	str	r2, [r3, #2624]
+	.loc 2 2116 0
+	ldr	r2, [r3, #2448]
+	str	r2, [r3, #2628]
+	.loc 2 2117 0
+	ldr	r2, [r3, #2440]
+	str	r2, [r3, #2632]
+	.loc 2 2118 0
+	ldr	r2, [r3, #2456]
+	str	r2, [r3, #2636]
+	.loc 2 2119 0
+	ldr	r2, [r3, #2484]
+	str	r2, [r3, #2644]
+	.loc 2 2120 0
+	ldr	r2, [r3, #2492]
+	str	r2, [r3, #2648]
+	.loc 2 2121 0
+	ldr	r2, [r3, #2444]
+	str	r2, [r3, #2652]
+	.loc 2 2122 0
+	ldr	r2, [r3, #2452]
+	str	r2, [r3, #2656]
+	.loc 2 2123 0
+	ldr	r2, [r3, #2496]
+	str	r2, [r3, #2660]
+	.loc 2 2124 0
+	ldr	r2, [r3, #2500]
+	str	r2, [r3, #2664]
+	.loc 2 2125 0
+	ldr	r2, .L1309+12
+	bl	FtlVendorPartWrite
+.LVL1124:
+	ldmfd	sp, {fp, sp, pc}
+.L1310:
+	.align	2
+.L1309:
+	.word	.LANCHOR0
+	.word	1179929683
+	.word	1342177344
+	.word	.LANCHOR0+2616
+.LBE477:
+.LBE476:
+.LFE226:
+	.fnend
+	.size	Ftl_save_ext_data, .-Ftl_save_ext_data
+	.align	2
+	.global	FtlEctTblFlush
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlEctTblFlush, %function
+FtlEctTblFlush:
+	.fnstart
+.LFB205:
+	.loc 2 861 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL1125:
+	.movsp ip
+	mov	ip, sp
+.LCFI359:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI360:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI361:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 861 0
+	.loc 2 864 0
+	ldr	r2, .L1316
+	ldrh	r3, [r2]
+	cmp	r3, #31
+	.loc 2 865 0
+	addls	r3, r3, #1
+	.loc 2 862 0
+	movhi	r2, #32
+.LVL1126:
+	.loc 2 865 0
+	strhls	r3, [r2]	@ movhi
+.LVL1127:
+	.loc 2 866 0
+	movls	r2, #1
+.LVL1128:
+	.loc 2 868 0
+	cmp	r0, #0
+	ldr	r3, .L1316+4
+	bne	.L1313
+	.loc 2 868 0 is_stmt 0 discriminator 1
+	ldr	r1, [r3, #3820]
+	ldr	r0, [r1, #20]
+.LVL1129:
+	ldr	r1, [r1, #16]
+	add	r2, r2, r0
+.LVL1130:
+	cmp	r1, r2
+	bcc	.L1314
+.LVL1131:
+.L1313:
+	.loc 2 870 0 is_stmt 1
+	ldr	r2, [r3, #3820]
+.LVL1132:
+	.loc 2 875 0
+	mov	r0, #64
+.LVL1133:
+	.loc 2 870 0
+	ldr	r1, [r2, #16]
+	str	r1, [r2, #20]
+	.loc 2 871 0
+	ldr	r1, .L1316+8
+	str	r1, [r2]
+	.loc 2 872 0
+	movw	r1, #3812
+	ldrh	r1, [r3, r1]
+	ldr	r2, [r3, #3820]
+	lsl	r3, r1, #9
+	str	r3, [r2, #12]
+	.loc 2 873 0
+	ldr	r3, [r2, #8]
+	add	r3, r3, #1
+	str	r3, [r2, #8]
+	.loc 2 874 0
+	mov	r3, #0
+	str	r3, [r2, #4]
+	.loc 2 875 0
+	bl	FtlVendorPartWrite
+.LVL1134:
+	.loc 2 876 0
+	bl	Ftl_save_ext_data
+.LVL1135:
+.L1314:
+	.loc 2 878 0
+	mov	r0, #0
+	ldmfd	sp, {fp, sp, pc}
+.L1317:
+	.align	2
+.L1316:
+	.word	.LANCHOR3-4080
+	.word	.LANCHOR0
+	.word	1112818501
+.LFE205:
+	.fnend
+	.size	FtlEctTblFlush, .-FtlEctTblFlush
+	.align	2
+	.global	FtlVendorPartRead
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlVendorPartRead, %function
+FtlVendorPartRead:
+	.fnstart
+.LFB204:
+	.loc 2 823 0
+	@ args = 0, pretend = 0, frame = 104
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL1136:
+	.movsp ip
+	mov	ip, sp
+.LCFI362:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI363:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI364:
+	.pad #108
+	sub	sp, sp, #108
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 823 0
+	.loc 2 832 0
+	ldr	r5, .L1327
+	.loc 2 823 0
+	mov	r9, r2
+	.loc 2 832 0
+	add	r2, r0, r1
+.LVL1137:
+	.loc 2 823 0
+	mov	r7, r0
+	mov	r6, r1
+	.loc 2 832 0
+	ldrh	r3, [r5, #72]
+	cmp	r2, r3
+	.loc 2 833 0
+	mvnhi	r8, #0
+	.loc 2 832 0
+	bhi	.L1318
+	.loc 2 828 0
+	ldrh	r3, [r5, #84]
+	mov	r8, #0
+	lsr	r3, r0, r3
+.LVL1138:
+	lsl	r3, r3, #2
+.LVL1139:
+	str	r3, [fp, #-136]
+.LVL1140:
+.L1320:
+	.loc 2 834 0
+	cmp	r6, #0
+	bne	.L1325
+.L1318:
+	.loc 2 857 0
+	mov	r0, r8
+	sub	sp, fp, #40
+.LCFI365:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL1141:
+.L1325:
+.LCFI366:
+	.loc 2 836 0
+	ldrh	r4, [r5, #34]
+.LVL1142:
+	mov	r0, r7
+	.loc 2 835 0
+	ldr	r3, [r5, #3844]
+	ldr	r2, [fp, #-136]
+	.loc 2 836 0
+	mov	r1, r4
+	.loc 2 835 0
+	ldr	r10, [r3, r2]
+	.loc 2 836 0
+	bl	__aeabi_uidivmod
+.LVL1143:
+	.loc 2 837 0
+	sub	r4, r4, r1
+	str	r1, [fp, #-144]
+	uxth	r4, r4
+.LVL1144:
+	.loc 2 838 0
+	cmp	r6, r4
+	.loc 2 839 0
+	uxthcc	r4, r6
+	.loc 2 840 0
+	cmp	r10, #0
+	lsl	r3, r4, #9
+	str	r3, [fp, #-140]
+	beq	.L1322
+	.loc 2 842 0
+	ldr	r2, [r5, #3808]
+	.loc 2 843 0
+	sub	r3, fp, #108
+	.loc 2 844 0
+	sub	r0, fp, #128
+	.loc 2 843 0
+	str	r3, [fp, #-116]
+	.loc 2 841 0
+	str	r10, [fp, #-124]
+	.loc 2 842 0
+	str	r2, [fp, #-120]
+	.loc 2 844 0
+	mov	r2, #1
+	mov	r1, r2
+	bl	FlashReadPages
+.LVL1145:
+	.loc 2 847 0
+	ldr	r1, [r5, #3808]
+	mov	r0, r9
+	ldr	r3, [fp, #-144]
+	.loc 2 845 0
+	ldr	r2, [fp, #-128]
+	.loc 2 847 0
+	add	r1, r1, r3, lsl #9
+	.loc 2 846 0
+	cmn	r2, #1
+	.loc 2 847 0
+	lsl	r2, r4, #9
+	.loc 2 846 0
+	mvneq	r8, #0
+	.loc 2 847 0
+	bl	ftl_memcpy
+.LVL1146:
+.L1324:
+	.loc 2 854 0
+	ldr	r3, [fp, #-140]
+	.loc 2 852 0
+	sub	r6, r6, r4
+	.loc 2 853 0
+	add	r7, r7, r4
+	.loc 2 854 0
+	add	r9, r9, r3
+	ldr	r3, [fp, #-136]
+	add	r3, r3, #4
+	str	r3, [fp, #-136]
+	b	.L1320
+.L1322:
+	.loc 2 849 0
+	lsl	r2, r4, #9
+	mov	r1, r10
+	mov	r0, r9
+	bl	ftl_memset
+.LVL1147:
+	b	.L1324
+.L1328:
+	.align	2
+.L1327:
+	.word	.LANCHOR0
+.LFE204:
+	.fnend
+	.size	FtlVendorPartRead, .-FtlVendorPartRead
+	.align	2
+	.global	FtlLoadEctTbl
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlLoadEctTbl, %function
+FtlLoadEctTbl:
+	.fnstart
+.LFB211:
+	.loc 2 1334 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI367:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI368:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI369:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 1334 0
+	.loc 2 1335 0
+	movw	r5, #3812
+	mov	r0, #64
+	ldr	r4, .L1331
+	ldr	r2, [r4, #3820]
+	ldrh	r1, [r4, r5]
+	bl	FtlVendorPartRead
+.LVL1148:
+	.loc 2 1336 0
+	ldr	r3, [r4, #3820]
+	ldr	r2, [r3]
+	ldr	r3, .L1331+4
+	cmp	r2, r3
+	beq	.L1330
+.LBB480:
+.LBB481:
+	.loc 2 1338 0
+	ldr	r1, .L1331+8
+	ldr	r0, .L1331+12
+	bl	printk
+.LVL1149:
+	.loc 2 1339 0
+	ldrh	r2, [r4, r5]
+	mov	r1, #0
+	ldr	r0, [r4, #3820]
+	lsl	r2, r2, #9
+	bl	ftl_memset
+.LVL1150:
+.L1330:
+.LBE481:
+.LBE480:
+	.loc 2 1344 0
+	mov	r0, #0
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L1332:
+	.align	2
+.L1331:
+	.word	.LANCHOR0
+	.word	1112818501
+	.word	.LC96
+	.word	.LC71
+.LFE211:
+	.fnend
+	.size	FtlLoadEctTbl, .-FtlLoadEctTbl
+	.align	2
+	.global	Ftl_load_ext_data
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	Ftl_load_ext_data, %function
+Ftl_load_ext_data:
+	.fnstart
+.LFB227:
+	.loc 2 2130 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI370:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI371:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI372:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2130 0
+	.loc 2 2131 0
+	mov	r1, #1
+	mov	r0, #0
+	ldr	r4, .L1336
+	ldr	r2, .L1336+4
+	bl	FtlVendorPartRead
+.LVL1151:
+	.loc 2 2132 0
+	ldr	r5, .L1336+8
+	ldr	r3, [r4, #2616]
+	cmp	r3, r5
+	beq	.L1334
+.LBB487:
+.LBB488:
+.LBB489:
+	.loc 1 202 0
+	mov	r1, #512
+	ldr	r0, .L1336+4
+	bl	__memzero
+.LVL1152:
+.LBE489:
+.LBE488:
+.LBE487:
+	.loc 2 2134 0
+	str	r5, [r4, #2616]
+.L1334:
+	.loc 2 2137 0
+	ldr	r3, [r4, #2616]
+	cmp	r3, r5
+	bne	.L1335
+	.loc 2 2138 0
+	ldr	r3, [r4, #2704]
+	str	r3, [r4, #2464]
+	.loc 2 2139 0
+	ldr	r3, [r4, #2708]
+	str	r3, [r4, #2468]
+	.loc 2 2140 0
+	ldr	r3, [r4, #2624]
+	str	r3, [r4, #2460]
+	.loc 2 2141 0
+	ldr	r3, [r4, #2628]
+	str	r3, [r4, #2448]
+	.loc 2 2142 0
+	ldr	r3, [r4, #2632]
+	str	r3, [r4, #2440]
+	.loc 2 2143 0
+	ldr	r3, [r4, #2636]
+	str	r3, [r4, #2456]
+	.loc 2 2144 0
+	ldr	r3, [r4, #2644]
+	str	r3, [r4, #2484]
+	.loc 2 2145 0
+	ldr	r3, [r4, #2648]
+	str	r3, [r4, #2492]
+	.loc 2 2146 0
+	ldr	r3, [r4, #2652]
+	str	r3, [r4, #2444]
+	.loc 2 2147 0
+	ldr	r3, [r4, #2656]
+	str	r3, [r4, #2452]
+	.loc 2 2148 0
+	ldr	r3, [r4, #2660]
+	str	r3, [r4, #2496]
+	.loc 2 2149 0
+	ldr	r3, [r4, #2664]
+	str	r3, [r4, #2500]
+.L1335:
+	.loc 2 2152 0
+	ldrh	r2, [r4, #68]
+	ldr	r3, [r4, #2484]
+	ldr	r0, [r4, #2480]
+	ldrh	r1, [r4, #16]
+	mla	r0, r0, r2, r3
+	bl	__aeabi_uidiv
+.LVL1153:
+	str	r0, [r4, #2488]
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L1337:
+	.align	2
+.L1336:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+2616
+	.word	1179929683
+.LFE227:
+	.fnend
+	.size	Ftl_load_ext_data, .-Ftl_load_ext_data
+	.align	2
+	.global	FtlVpcTblFlush
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlVpcTblFlush, %function
+FtlVpcTblFlush:
+	.fnstart
+.LFB209:
+	.loc 2 1004 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI373:
+	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI374:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI375:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 1004 0
+	.loc 2 1016 0
+	mov	r6, #0
+	.loc 2 1047 0
+	mov	r1, #255
+	.loc 2 1010 0
+	ldr	r4, .L1350
+	.loc 2 1013 0
+	ldr	r5, .L1350+4
+	.loc 2 1075 0
+	ldr	r10, .L1350+8
+	.loc 2 1010 0
+	ldr	r3, [r4, #2244]
+	.loc 2 1011 0
+	ldr	r7, [r4, #3244]
+	.loc 2 1021 0
+	sub	r8, r5, #52
+	.loc 2 1056 0
+	add	r9, r5, #668
+	.loc 2 1010 0
+	str	r3, [r4, #3232]
+	.loc 2 1013 0
+	movw	r3, #2556
+	ldrh	r3, [r4, r3]
+	.loc 2 1011 0
+	str	r7, [r4, #3236]
+	.loc 2 1017 0
+	str	r6, [r7, #12]
+	.loc 2 1013 0
+	strh	r3, [r7, #2]	@ movhi
+	.loc 2 1014 0
+	ldr	r3, .L1350+12
+	strh	r3, [r7]	@ movhi
+	.loc 2 1015 0
+	ldr	r3, [r4, #2564]
+	.loc 2 1016 0
+	str	r6, [r7, #8]
+	.loc 2 1015 0
+	str	r3, [r7, #4]
+	.loc 2 1019 0
+	ldr	r3, .L1350+16
+	str	r3, [r4, #2504]
+	.loc 2 1020 0
+	ldr	r3, .L1350+20
+	str	r3, [r4, #2508]
+	.loc 2 1021 0
+	ldrh	r3, [r5, #6]
+	strh	r3, [r5, #-44]	@ movhi
+	.loc 2 1022 0
+	ldrh	r3, [r4, #30]
+	strb	r3, [r4, #2514]
+	.loc 2 1024 0
+	movw	r3, #2280
+	ldrh	r3, [r4, r3]
+	strh	r3, [r5, #-38]	@ movhi
+	.loc 2 1025 0
+	sub	r3, r5, #276
+	ldrh	r2, [r3, #2]
+	ldrb	r3, [r4, #2286]	@ zero_extendqisi2
+	orr	r3, r3, r2, lsl #6
+	.loc 2 1029 0
+	ldrh	r2, [r5, #-226]
+	.loc 2 1025 0
+	strh	r3, [r5, #-36]	@ movhi
+	.loc 2 1026 0
+	ldrb	r3, [r4, #2288]	@ zero_extendqisi2
+	strb	r3, [r4, #2515]
+	.loc 2 1028 0
+	movw	r3, #2328
+	ldrh	r3, [r4, r3]
+	strh	r3, [r5, #-34]	@ movhi
+	.loc 2 1029 0
+	ldrb	r3, [r4, #2334]	@ zero_extendqisi2
+	orr	r3, r3, r2, lsl #6
+	strh	r3, [r5, #-32]	@ movhi
+	.loc 2 1030 0
+	ldrb	r3, [r4, #2336]	@ zero_extendqisi2
+	strb	r3, [r4, #2516]
+	.loc 2 1032 0
+	movw	r3, #2376
+	ldrh	r3, [r4, r3]
+	strh	r3, [r5, #-30]	@ movhi
+	.loc 2 1033 0
+	ldrh	r2, [r5, #-178]
+	ldrb	r3, [r4, #2382]	@ zero_extendqisi2
+	.loc 2 1047 0
+	ldr	r0, [r4, #3232]
+	.loc 2 1033 0
+	orr	r3, r3, r2, lsl #6
+	.loc 2 1047 0
+	ldrh	r2, [r4, #86]
+	.loc 2 1033 0
+	strh	r3, [r5, #-28]	@ movhi
+	.loc 2 1034 0
+	ldrb	r3, [r4, #2384]	@ zero_extendqisi2
+	strb	r3, [r4, #2517]
+	.loc 2 1036 0
+	ldr	r3, [r4, #2480]
+	str	r3, [r4, #2536]
+	.loc 2 1041 0
+	ldr	r3, [r4, #2472]
+	str	r3, [r4, #2544]
+	.loc 2 1042 0
+	ldr	r3, [r4, #2476]
+	str	r3, [r4, #2540]
+	.loc 2 1047 0
+	bl	ftl_memset
+.LVL1154:
+	.loc 2 1048 0
+	mov	r1, r8
+	mov	r2, #48
+	ldr	r0, [r4, #3232]
+	.loc 2 1005 0
+	movw	r8, #65535
+.LVL1155:
+	.loc 2 1048 0
+	bl	ftl_memcpy
+.LVL1156:
+	.loc 2 1049 0
+	ldrh	r2, [r4, #16]
+	ldr	r0, [r4, #3232]
+	ldr	r1, [r4, #2260]
+	lsl	r2, r2, #1
+	add	r0, r0, #48
+	bl	ftl_memcpy
+.LVL1157:
+	.loc 2 1050 0
+	ldrh	r0, [r4, #16]
+	ldr	r3, [r4, #3232]
+	ldr	r1, [r4]
+	lsr	r2, r0, #3
+	add	r0, r0, #24
+	lsl	r0, r0, #1
+	add	r2, r2, #4
+	bic	r0, r0, #3
+	add	r0, r3, r0
+	bl	ftl_memcpy
+.LVL1158:
+	.loc 2 1051 0
+	mov	r0, r6
+	bl	FtlUpdateVaildLpn
+.LVL1159:
+.L1339:
+	.loc 2 1053 0
+	ldr	r3, [r4, #2244]
+	.loc 2 1056 0
+	mov	r0, r9
+	.loc 2 1055 0
+	ldrh	r2, [r5]
+	.loc 2 1053 0
+	str	r3, [r4, #3232]
+	.loc 2 1054 0
+	ldr	r3, [r4, #3244]
+	str	r3, [r4, #3236]
+	.loc 2 1055 0
+	ldrh	r3, [r5, #2]
+	orr	r3, r3, r2, lsl #10
+	str	r3, [r4, #3228]
+	.loc 2 1056 0
+	mov	r3, #1
+	mov	r2, r3
+	mov	r1, r3
+	bl	FlashProgPages
+.LVL1160:
+	.loc 2 1057 0
+	ldrh	r3, [r4, #80]
+	ldrh	r2, [r5, #2]
+	sub	r3, r3, #1
+	cmp	r2, r3
+	blt	.L1340
+	.loc 2 1059 0
+	ldrh	r3, [r5]
+	.loc 2 1058 0
+	ldrh	r8, [r5, #4]
+	.loc 2 1059 0
+	strh	r3, [r5, #4]	@ movhi
+	.loc 2 1060 0
+	mov	r3, #0
+	strh	r3, [r5, #2]	@ movhi
+	.loc 2 1061 0
+	bl	FtlFreeSysBlkQueueOut
+.LVL1161:
+	.loc 2 1066 0
+	ldr	r3, [r4, #2472]
+	.loc 2 1061 0
+	strh	r0, [r5]	@ movhi
+	.loc 2 1066 0
+	add	r2, r3, #1
+	str	r3, [r4, #2564]
+	str	r2, [r4, #2472]
+	.loc 2 1067 0
+	lsl	r2, r0, #10
+	str	r2, [r4, #3228]
+	.loc 2 1068 0
+	str	r3, [r7, #4]
+	.loc 2 1070 0
+	mov	r3, #1
+	.loc 2 1069 0
+	strh	r0, [r7, #2]	@ movhi
+	.loc 2 1070 0
+	mov	r2, r3
+	mov	r1, r3
+	mov	r0, r9
+	bl	FlashProgPages
+.LVL1162:
+.L1340:
+	.loc 2 1072 0
+	ldrh	r3, [r5, #2]
+	.loc 2 1073 0
+	ldr	r2, [r4, #3224]
+	.loc 2 1072 0
+	add	r3, r3, #1
+	uxth	r3, r3
+	.loc 2 1073 0
+	cmn	r2, #1
+	.loc 2 1072 0
+	strh	r3, [r5, #2]	@ movhi
+	.loc 2 1073 0
+	bne	.L1341
+	.loc 2 1075 0
+	cmp	r3, #1
+	bne	.L1342
+	.loc 2 1075 0 is_stmt 0 discriminator 1
+	movw	r2, #1075
+	mov	r1, r10
+	ldr	r0, .L1350+24
+	bl	printk
+.LVL1163:
+.L1342:
+	.loc 2 1076 0 is_stmt 1
+	ldrh	r3, [r5, #2]
+	.loc 2 1078 0
+	add	r6, r6, #1
+.LVL1164:
+	uxth	r6, r6
+.LVL1165:
+	.loc 2 1076 0
+	cmp	r3, #1
+	.loc 2 1077 0
+	ldrheq	r3, [r4, #80]
+	subeq	r3, r3, #1
+	strheq	r3, [r5, #2]	@ movhi
+	.loc 2 1079 0
+	cmp	r6, #3
+	bls	.L1339
+	.loc 2 1080 0
+	mov	r2, r6
+	ldr	r1, [r4, #3228]
+	ldr	r0, .L1350+28
+	bl	printk
+.LVL1166:
+.L1345:
+	b	.L1345
+.L1341:
+	.loc 2 1086 0
+	cmp	r3, #1
+	beq	.L1339
+	.loc 2 1089 0
+	movw	r3, #65535
+	cmp	r8, r3
+	beq	.L1346
+	.loc 2 1090 0
+	mov	r1, #1
+	mov	r0, r8
+	bl	FtlFreeSysBlkQueueIn
+.LVL1167:
+.L1346:
+	.loc 2 1092 0
+	mov	r0, #0
+	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.L1351:
+	.align	2
+.L1350:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+2556
+	.word	.LANCHOR1+454
+	.word	-3932
+	.word	1179929683
+	.word	1342177344
+	.word	.LC1
+	.word	.LC97
+.LFE209:
+	.fnend
+	.size	FtlVpcTblFlush, .-FtlVpcTblFlush
+	.align	2
+	.global	FtlVpcCheckAndModify
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlVpcCheckAndModify, %function
+FtlVpcCheckAndModify:
+	.fnstart
+.LFB229:
+	.loc 2 2192 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI376:
+	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
+.LCFI377:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI378:
+	.pad #8
+	sub	sp, sp, #8
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2192 0
+	.loc 2 2198 0
+	ldr	r4, .L1364
+	.loc 2 2199 0
+	mov	r5, #0
+.LVL1168:
+	.loc 2 2197 0
+	ldr	r1, .L1364+4
+	ldr	r0, .L1364+8
+	bl	printk
+.LVL1169:
+	.loc 2 2198 0
+	ldrh	r2, [r4, #18]
+	mov	r1, #0
+	ldr	r0, [r4, #3824]
+	lsl	r2, r2, #1
+	bl	ftl_memset
+.LVL1170:
+.L1353:
+	.loc 2 2199 0 discriminator 1
+	ldr	r3, [r4, #2436]
+	cmp	r5, r3
+	bcc	.L1355
+	.loc 2 2209 0 discriminator 1
+	ldr	r8, .L1364+12
+	mov	r6, #0
+	.loc 2 2210 0 discriminator 1
+	ldr	r9, .L1364+16
+.LVL1171:
+.L1356:
+	.loc 2 2206 0 discriminator 1
+	ldrh	r3, [r4, #16]
+	uxth	r5, r6
+.LVL1172:
+	cmp	r3, r5
+	bhi	.L1360
+	.loc 2 2218 0
+	sub	sp, fp, #36
+.LCFI379:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
+.LVL1173:
+.L1355:
+.LCFI380:
+	.loc 2 2200 0
+	mov	r2, #0
+	sub	r1, fp, #40
+	mov	r0, r5
+	bl	log2phys
+.LVL1174:
+	.loc 2 2201 0
+	ldr	r0, [fp, #-40]
+	cmn	r0, #1
+	beq	.L1354
+	.loc 2 2202 0
+	ubfx	r0, r0, #10, #16
+	bl	P2V_block_in_plane
+.LVL1175:
+	.loc 2 2203 0
+	ldr	r2, [r4, #3824]
+	lsl	r0, r0, #1
+	ldrh	r3, [r2, r0]
+	add	r3, r3, #1
+	strh	r3, [r2, r0]	@ movhi
+.L1354:
+	.loc 2 2199 0 discriminator 2
+	add	r5, r5, #1
+	b	.L1353
+.LVL1176:
+.L1360:
+	.loc 2 2207 0
+	uxth	r1, r6
+	ldr	r3, [r4, #2260]
+	movw	r0, #65535
+	lsl	r7, r1, #1
+	ldrh	r2, [r3, r7]
+	ldr	r3, [r4, #3824]
+	ldrh	r3, [r3, r7]
+	cmp	r2, r0
+	cmpne	r2, r3
+	beq	.L1358
+	.loc 2 2209 0
+	mov	r0, r8
+	bl	printk
+.LVL1177:
+	.loc 2 2210 0
+	ldrh	r3, [r9]
+	cmp	r3, r5
+	beq	.L1358
+	.loc 2 2210 0 is_stmt 0 discriminator 1
+	ldr	r3, .L1364+20
+	ldrh	r2, [r3]
+	cmp	r2, r5
+	beq	.L1358
+	.loc 2 2210 0 discriminator 2
+	ldrh	r3, [r3, #-48]
+	cmp	r3, r5
+	beq	.L1358
+	.loc 2 2211 0 is_stmt 1
+	ldr	r3, [r4, #3824]
+	.loc 2 2212 0
+	mov	r0, r5
+	.loc 2 2211 0
+	ldrh	r2, [r3, r7]
+	ldr	r3, [r4, #2260]
+	strh	r2, [r3, r7]	@ movhi
+	.loc 2 2212 0
+	bl	update_vpc_list
+.LVL1178:
+	.loc 2 2213 0
+	bl	l2p_flush
+.LVL1179:
+	.loc 2 2214 0
+	bl	FtlVpcTblFlush
+.LVL1180:
+.L1358:
+	add	r6, r6, #1
+	b	.L1356
+.L1365:
+	.align	2
+.L1364:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+469
+	.word	.LC87
+	.word	.LC98
+	.word	.LANCHOR0+2280
+	.word	.LANCHOR0+2376
+.LFE229:
+	.fnend
+	.size	FtlVpcCheckAndModify, .-FtlVpcCheckAndModify
+	.align	2
+	.global	allocate_new_data_superblock
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	allocate_new_data_superblock, %function
+allocate_new_data_superblock:
+	.fnstart
+.LFB239:
+	.loc 2 2631 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL1181:
+	.movsp ip
+	mov	ip, sp
+.LCFI381:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI382:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI383:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2631 0
+	mov	r7, r0
+	.loc 2 2633 0
+	ldr	r5, .L1376
+	.loc 2 2632 0
+	ldrh	r4, [r0]
+.LVL1182:
+	.loc 2 2633 0
+	ldrh	r3, [r5, #16]
+	cmp	r3, r4
+	bcs	.L1367
+	.loc 2 2633 0 is_stmt 0 discriminator 1
+	movw	r2, #2633
+	ldr	r1, .L1376+4
+	ldr	r0, .L1376+8
+	bl	printk
+.LVL1183:
+.L1367:
+	.loc 2 2635 0 is_stmt 1
+	movw	r3, #65535
+	cmp	r4, r3
+	beq	.L1368
+	.loc 2 2636 0
+	ldr	r2, [r5, #2260]
+	lsl	r3, r4, #1
+	.loc 2 2637 0
+	mov	r0, r4
+	.loc 2 2636 0
+	ldrh	r3, [r2, r3]
+	cmp	r3, #0
+	beq	.L1369
+	.loc 2 2637 0
+	bl	INSERT_DATA_LIST
+.LVL1184:
+.L1368:
+	.loc 2 2641 0
+	mov	r3, #1
+	.loc 2 2642 0
+	movw	r2, #65535
+	.loc 2 2641 0
+	strb	r3, [r7, #8]
+	.loc 2 2642 0
+	ldr	r3, .L1376+12
+	ldrh	r0, [r3]
+	mov	r6, r3
+	cmp	r0, r2
+	beq	.L1370
+	.loc 2 2643 0
+	cmp	r4, r0
+	bne	.L1371
+	.loc 2 2643 0 is_stmt 0 discriminator 1
+	ldr	r2, [r5, #2260]
+	lsl	r3, r0, #1
+	ldrh	r3, [r2, r3]
+	cmp	r3, #0
+	beq	.L1372
+.L1371:
+	.loc 2 2644 0 is_stmt 1
+	bl	update_vpc_list
+.LVL1185:
+.L1372:
+	.loc 2 2645 0
+	mvn	r3, #0
+	strh	r3, [r6]	@ movhi
+.L1370:
+	.loc 2 2647 0
+	mov	r0, r7
+	bl	allocate_data_superblock
+.LVL1186:
+	.loc 2 2648 0
+	bl	l2p_flush
+.LVL1187:
+	.loc 2 2649 0
+	mov	r0, #0
+	bl	FtlEctTblFlush
+.LVL1188:
+	.loc 2 2650 0
+	bl	FtlVpcTblFlush
+.LVL1189:
+	.loc 2 2652 0
+	mov	r0, #0
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L1369:
+	.loc 2 2639 0
+	bl	INSERT_FREE_LIST
+.LVL1190:
+	b	.L1368
+.L1377:
+	.align	2
+.L1376:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+490
+	.word	.LC1
+	.word	.LANCHOR0+3952
+.LFE239:
+	.fnend
+	.size	allocate_new_data_superblock, .-allocate_new_data_superblock
+	.align	2
+	.global	FtlProgPages
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlProgPages, %function
+FtlProgPages:
+	.fnstart
+.LFB155:
+	.loc 3 902 0
+	@ args = 0, pretend = 0, frame = 16
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL1191:
+	.movsp ip
+	mov	ip, sp
+.LCFI384:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI385:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI386:
+	.pad #20
+	sub	sp, sp, #20
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 902 0
+	ldr	r6, .L1392
+	.loc 3 911 0
+	mov	r7, #0
+.LVL1192:
+	.loc 3 931 0
+	ldr	r10, .L1392+4
+	.loc 3 902 0
+	mov	r4, r3
+	.loc 3 909 0
+	mov	r2, #0
+.LVL1193:
+	ldrb	r3, [r3, #9]	@ zero_extendqisi2
+.LVL1194:
+	.loc 3 902 0
+	mov	r5, r0
+	mov	r9, r1
+	.loc 3 909 0
+	bl	FlashProgPages
+.LVL1195:
+.L1379:
+	.loc 3 911 0 discriminator 1
+	cmp	r7, r9
+	beq	.L1386
+	.loc 3 917 0
+	mov	r8, #0
+	b	.L1387
+.LVL1196:
+.L1382:
+	.loc 3 913 0
+	ldr	r0, [r5, #4]
+	ubfx	r0, r0, #10, #16
+	bl	P2V_block_in_plane
+.LVL1197:
+	.loc 3 914 0
+	ldrh	r3, [r4]
+	cmp	r3, r0
+	bne	.L1380
+	.loc 3 915 0
+	ldr	r1, [r6, #2260]
+	lsl	r3, r3, #1
+	ldrh	r0, [r4, #4]
+	ldrh	r2, [r1, r3]
+	sub	r2, r2, r0
+	strh	r2, [r1, r3]	@ movhi
+	.loc 3 916 0
+	ldrh	r3, [r6, #78]
+	.loc 3 917 0
+	strb	r8, [r4, #6]
+	.loc 3 918 0
+	strh	r8, [r4, #4]	@ movhi
+	.loc 3 916 0
+	strh	r3, [r4, #2]	@ movhi
+.L1380:
+	.loc 3 920 0
+	ldrh	r3, [r4, #4]
+	cmp	r3, #0
+	bne	.L1381
+	.loc 3 921 0
+	mov	r0, r4
+	bl	allocate_new_data_superblock
+.LVL1198:
+.L1381:
+	.loc 3 924 0
+	ldr	r3, [r6, #2712]
+	add	r3, r3, #1
+	str	r3, [r6, #2712]
+	.loc 3 925 0
+	ldr	r0, [r5, #4]
+	ubfx	r0, r0, #10, #16
+	bl	FtlGcMarkBadPhyBlk
+.LVL1199:
+	.loc 3 926 0
+	mov	r0, r4
+	bl	get_new_active_ppa
+.LVL1200:
+	.loc 3 928 0
+	mov	r2, #0
+	.loc 3 927 0
+	str	r0, [r5, #4]
+	.loc 3 926 0
+	str	r0, [fp, #-48]
+	.loc 3 928 0
+	mov	r1, #1
+	ldrb	r3, [r4, #9]	@ zero_extendqisi2
+	mov	r0, r5
+	bl	FlashProgPages
+.LVL1201:
+.L1387:
+	.loc 3 912 0
+	ldr	r3, [r5]
+.LVL1202:
+	cmn	r3, #1
+	beq	.L1382
+	.loc 3 931 0
+	ldrb	r2, [r4, #6]	@ zero_extendqisi2
+	ldrh	r3, [r6, #8]
+	cmp	r2, r3
+	bcc	.L1383
+	.loc 3 931 0 is_stmt 0 discriminator 1
+	movw	r2, #931
+	mov	r1, r10
+	ldr	r0, .L1392+8
+	bl	printk
+.LVL1203:
+.L1383:
+	.loc 3 932 0 is_stmt 1
+	ldr	r3, [r5, #4]
+	sub	r1, fp, #44
+	.loc 3 933 0
+	mov	r2, #1
+	ldr	r0, [r5, #16]
+	.loc 3 932 0
+	str	r3, [r1, #-4]!
+.LVL1204:
+	.loc 3 933 0
+	bl	log2phys
+.LVL1205:
+	.loc 3 935 0
+	ldr	r3, [r5, #12]
+	ldr	r3, [r3, #12]
+.LVL1206:
+	.loc 3 937 0
+	ubfx	r0, r3, #10, #16
+	str	r3, [fp, #-56]
+	bl	P2V_block_in_plane
+.LVL1207:
+	.loc 3 938 0
+	ldr	r3, [fp, #-56]
+.LVL1208:
+	.loc 3 937 0
+	mov	r8, r0
+	.loc 3 938 0
+	cmn	r3, #1
+	beq	.L1384
+	.loc 3 940 0
+	ldr	r2, [r6, #2260]
+	lsl	r3, r0, #1
+.LVL1209:
+	ldrh	r2, [r2, r3]
+	cmp	r2, #0
+	bne	.L1385
+	.loc 3 941 0
+	mov	r1, r0
+	ldr	r0, .L1392+12
+	bl	printk
+.LVL1210:
+.L1385:
+	.loc 3 942 0
+	mov	r0, r8
+	bl	decrement_vpc_count
+.LVL1211:
+.L1384:
+	.loc 3 911 0 discriminator 2
+	add	r7, r7, #1
+	add	r5, r5, #20
+	b	.L1379
+.LVL1212:
+.L1386:
+	.loc 3 946 0
+	ldrb	r2, [r4, #6]	@ zero_extendqisi2
+	ldrh	r3, [r6, #8]
+.LVL1213:
+	cmp	r2, r3
+	bcc	.L1378
+	.loc 3 946 0 is_stmt 0 discriminator 1
+	movw	r2, #946
+	ldr	r1, .L1392+4
+	ldr	r0, .L1392+8
+	bl	printk
+.LVL1214:
+.L1378:
+	.loc 3 947 0 is_stmt 1
+	sub	sp, fp, #40
+.LCFI387:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL1215:
+.L1393:
+	.align	2
+.L1392:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+519
+	.word	.LC1
+	.word	.LC99
+.LFE155:
+	.fnend
+	.size	FtlProgPages, .-FtlProgPages
+	.align	2
+	.global	FtlCacheWriteBack
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlCacheWriteBack, %function
+FtlCacheWriteBack:
+	.fnstart
+.LFB156:
+	.loc 3 950 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI388:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI389:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI390:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 950 0
+	.loc 3 951 0
+	ldr	r4, .L1399
+	ldr	r0, [r4, #3948]
+	cmp	r0, #0
+	beq	.L1395
+	.loc 3 952 0
+	ldr	r3, .L1399+4
+	mov	r2, #0
+	mov	r1, #1
+	ldr	r3, [r3, #-4076]
+	bl	FtlProgPages
+.LVL1216:
+	.loc 3 953 0
+	mov	r3, #0
+	str	r3, [r4, #3948]
+.L1395:
+	.loc 3 956 0
+	mov	r0, #0
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L1400:
+	.align	2
+.L1399:
+	.word	.LANCHOR0
+	.word	.LANCHOR3
+.LFE156:
+	.fnend
+	.size	FtlCacheWriteBack, .-FtlCacheWriteBack
+	.align	2
+	.global	FtlSysFlush
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlSysFlush, %function
+FtlSysFlush:
+	.fnstart
+.LFB152:
+	.loc 3 797 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI391:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI392:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI393:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 797 0
+	.loc 3 798 0
+	bl	FtlCacheWriteBack
+.LVL1217:
+	.loc 3 799 0
+	bl	l2p_flush
+.LVL1218:
+	.loc 3 800 0
+	mov	r0, #1
+	bl	FtlEctTblFlush
+.LVL1219:
+	.loc 3 801 0
+	bl	FtlVpcTblFlush
+.LVL1220:
+	.loc 3 803 0
+	mov	r0, #0
+	ldmfd	sp, {fp, sp, pc}
+.LFE152:
+	.fnend
+	.size	FtlSysFlush, .-FtlSysFlush
+	.align	2
+	.global	sftl_deinit
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	sftl_deinit, %function
+sftl_deinit:
+	.fnstart
+.LFB153:
+	.loc 3 806 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI394:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI395:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI396:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 806 0
+	.loc 3 807 0
+	ldr	r3, .L1404
+	ldr	r3, [r3]
+	cmp	r3, #1
+	bne	.L1403
+	.loc 3 808 0
+	bl	FtlSysFlush
+.LVL1221:
+.L1403:
+	.loc 3 810 0
+	mov	r0, #0
+	ldmfd	sp, {fp, sp, pc}
+.L1405:
+	.align	2
+.L1404:
+	.word	.LANCHOR2
+.LFE153:
+	.fnend
+	.size	sftl_deinit, .-sftl_deinit
+	.align	2
+	.global	FtlDiscard
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlDiscard, %function
+FtlDiscard:
+	.fnstart
+.LFB158:
+	.loc 3 1154 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL1222:
+	.movsp ip
+	mov	ip, sp
+.LCFI397:
+	push	{r4, r5, r6, r7, r8, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, fp, ip, lr}
+.LCFI398:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI399:
+	.pad #12
+	sub	sp, sp, #12
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 1154 0
+	.loc 3 1161 0
+	ldr	r6, .L1421
+	add	r2, r0, r1
+	.loc 3 1154 0
+	mov	r7, r0
+	mov	r5, r1
+	.loc 3 1161 0
+	ldr	r3, [r6, #116]
+	cmp	r2, r3
+	.loc 3 1162 0
+	mvnhi	r0, #0
+.LVL1223:
+	.loc 3 1161 0
+	bhi	.L1406
+	.loc 3 1164 0
+	cmp	r1, #31
+	bhi	.L1408
+.LVL1224:
+.L1413:
+	.loc 3 1165 0
+	mov	r0, #0
+.L1406:
+	.loc 3 1198 0
+	sub	sp, fp, #32
+.LCFI400:
+	ldmfd	sp, {r4, r5, r6, r7, r8, fp, sp, pc}
+.LVL1225:
+.L1408:
+.LCFI401:
+	.loc 3 1167 0
+	bl	FtlCacheWriteBack
+.LVL1226:
+	.loc 3 1169 0
+	ldrh	r4, [r6, #34]
+	mov	r0, r7
+	mov	r1, r4
+	bl	__aeabi_uidiv
+.LVL1227:
+	.loc 3 1170 0
+	smulbb	r3, r0, r4
+	.loc 3 1169 0
+	mov	r8, r0
+.LVL1228:
+	.loc 3 1170 0
+	sub	r7, r7, r3
+.LVL1229:
+	uxth	r7, r7
+.LVL1230:
+	.loc 3 1171 0
+	cmp	r7, #0
+	beq	.L1409
+	.loc 3 1172 0
+	sub	r4, r4, r7
+	.loc 3 1173 0
+	add	r8, r0, #1
+	.loc 3 1172 0
+	cmp	r4, r5
+	movcs	r4, r5
+	uxth	r4, r4
+	.loc 3 1174 0
+	sub	r5, r5, r4
+.L1409:
+	.loc 3 1181 0
+	ldr	r4, .L1421+4
+	.loc 3 1177 0
+	mvn	r3, #0
+	str	r3, [fp, #-40]
+.LVL1231:
+.L1410:
+	.loc 3 1178 0
+	ldrh	r3, [r6, #34]
+	cmp	r5, r3
+	bcs	.L1412
+	.loc 3 1191 0
+	ldr	r3, .L1421+4
+	ldr	r2, [r3, #-4072]
+	cmp	r2, #32
+	bls	.L1413
+	.loc 3 1193 0
+	mov	r4, #0
+	str	r4, [r3, #-4072]
+	.loc 3 1194 0
+	bl	l2p_flush
+.LVL1232:
+	.loc 3 1195 0
+	bl	FtlVpcTblFlush
+.LVL1233:
+	b	.L1413
+.L1412:
+	.loc 3 1179 0
+	mov	r2, #0
+	sub	r1, fp, #44
+	mov	r0, r8
+	bl	log2phys
+.LVL1234:
+	.loc 3 1180 0
+	ldr	r3, [fp, #-44]
+	cmn	r3, #1
+	beq	.L1411
+	.loc 3 1181 0
+	ldr	r3, [r4, #-4072]
+	.loc 3 1183 0
+	mov	r2, #1
+	sub	r1, fp, #40
+	mov	r0, r8
+	.loc 3 1181 0
+	add	r3, r3, #1
+	str	r3, [r4, #-4072]
+	.loc 3 1182 0
+	ldr	r3, [r6, #2444]
+	add	r3, r3, #1
+	str	r3, [r6, #2444]
+	.loc 3 1183 0
+	bl	log2phys
+.LVL1235:
+	.loc 3 1184 0
+	ldr	r0, [fp, #-44]
+.LVL1236:
+	ubfx	r0, r0, #10, #16
+.LVL1237:
+	bl	P2V_block_in_plane
+.LVL1238:
+	.loc 3 1185 0
+	bl	decrement_vpc_count
+.LVL1239:
+.L1411:
+	.loc 3 1188 0
+	ldrh	r3, [r6, #34]
+	.loc 3 1187 0
+	add	r8, r8, #1
+	.loc 3 1188 0
+	sub	r5, r5, r3
+	b	.L1410
+.L1422:
+	.align	2
+.L1421:
+	.word	.LANCHOR0
+	.word	.LANCHOR3
+.LFE158:
+	.fnend
+	.size	FtlDiscard, .-FtlDiscard
+	.align	2
+	.global	FtlGcFreeTempBlock
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlGcFreeTempBlock, %function
+FtlGcFreeTempBlock:
+	.fnstart
+.LFB248:
+	.loc 5 112 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL1240:
+	.movsp ip
+	mov	ip, sp
+.LCFI402:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI403:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI404:
+	.pad #12
+	sub	sp, sp, #12
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 112 0
+	.loc 5 115 0
+	ldr	r4, .L1449
+	.loc 5 119 0
+	movw	r3, #2376
+	movw	r2, #65535
+	ldrh	r5, [r4, r3]
+	.loc 5 115 0
+	ldrh	r1, [r4, #78]
+.LVL1241:
+	.loc 5 119 0
+	cmp	r5, r2
+	bne	.L1424
+.LVL1242:
+.L1434:
+	.loc 5 152 0
+	mov	r3, #0
+	str	r3, [r4, #3960]
+	.loc 5 153 0
+	movw	r3, #2376
+	ldrh	r2, [r4, r3]
+	movw	r3, #65535
+	cmp	r2, r3
+	bne	.L1447
+.L1425:
+	.loc 5 154 0
+	mov	r0, #0
+.LVL1243:
+.L1423:
+	.loc 5 199 0
+	sub	sp, fp, #40
+.LCFI405:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL1244:
+.L1424:
+.LCFI406:
+	.loc 5 121 0
+	cmp	r0, #0
+	beq	.L1427
+	.loc 5 123 0
+	ldr	r3, .L1449+4
+	ldrh	r0, [r3, #4]
+.LVL1245:
+	cmp	r0, r2
+	beq	.L1428
+.L1429:
+	.loc 5 122 0
+	mov	r1, #2
+.LVL1246:
+.L1427:
+	.loc 5 131 0
+	ldr	r0, .L1449+8
+.LVL1247:
+	bl	FtlGcScanTempBlk
+.LVL1248:
+	.loc 5 132 0
+	cmn	r0, #1
+	.loc 5 131 0
+	str	r0, [fp, #-48]
+.LVL1249:
+	.loc 5 132 0
+	beq	.L1430
+	.loc 5 135 0
+	ldr	r2, [r4, #2248]
+	lsl	r5, r5, #1
+	ldrh	r3, [r2, r5]
+	cmp	r3, #4
+	bls	.L1431
+	.loc 5 136 0
+	sub	r3, r3, #5
+	.loc 5 137 0
+	mov	r0, #1
+	.loc 5 136 0
+	strh	r3, [r2, r5]	@ movhi
+	.loc 5 137 0
+	bl	FtlEctTblFlush
+.LVL1250:
+.L1431:
+	.loc 5 139 0
+	ldr	r3, [r4, #3960]
+	cmp	r3, #0
+	bne	.L1432
+	.loc 5 140 0
+	ldr	r3, [r4, #2712]
+	.loc 5 141 0
+	ldr	r0, [fp, #-48]
+	.loc 5 140 0
+	add	r3, r3, #1
+	.loc 5 141 0
+	ubfx	r0, r0, #10, #16
+	.loc 5 140 0
+	str	r3, [r4, #2712]
+	.loc 5 141 0
+	bl	FtlBbmMapBadBlock
+.LVL1251:
+	.loc 5 142 0
+	bl	FtlBbmTblFlush
+.LVL1252:
+.L1432:
+	.loc 5 144 0
+	mov	r3, #0
+	str	r3, [r4, #3960]
+.L1443:
+	.loc 5 149 0
+	mov	r0, #1
+	b	.L1423
+.LVL1253:
+.L1428:
+	.loc 5 124 0
+	mov	r2, #0
+	strh	r2, [r3, #4]	@ movhi
+	.loc 5 125 0
+	movw	r3, #2276
+	ldrh	r3, [r4, r3]
+	cmp	r3, #17
+	bhi	.L1429
+	b	.L1427
+.LVL1254:
+.L1430:
+	.loc 5 148 0
+	ldr	r3, .L1449+4
+	ldrh	r2, [r3, #4]
+	movw	r3, #65535
+	cmp	r2, r3
+	bne	.L1443
+	b	.L1434
+.LVL1255:
+.L1447:
+	.loc 5 160 0
+	bl	FtlCacheWriteBack
+.LVL1256:
+	.loc 5 162 0
+	movw	r3, #3180
+	ldrb	r1, [r4, #2383]	@ zero_extendqisi2
+	ldrh	r2, [r4, r3]
+	ldrh	r3, [r4, #78]
+	mul	r3, r3, r1
+	cmp	r2, r3
+	beq	.L1435
+	.loc 5 162 0 is_stmt 0 discriminator 1
+	mov	r2, #162
+	ldr	r1, .L1449+12
+	ldr	r0, .L1449+16
+	bl	printk
+.LVL1257:
+.L1435:
+	.loc 5 163 0 is_stmt 1
+	ldrb	r2, [r4, #2383]	@ zero_extendqisi2
+	movw	r3, #2376
+	ldrh	r0, [r4, #78]
+	.loc 5 165 0
+	mov	r6, #0
+	.loc 5 163 0
+	ldrh	r3, [r4, r3]
+	ldr	r1, [r4, #2260]
+	.loc 5 165 0
+	ldr	r9, .L1449+20
+	.loc 5 163 0
+	smulbb	r2, r2, r0
+	.loc 5 168 0
+	ldr	r10, .L1449+12
+	.loc 5 163 0
+	lsl	r3, r3, #1
+	strh	r2, [r1, r3]	@ movhi
+	.loc 5 164 0
+	movw	r3, #3180
+	ldr	r2, [r4, #2460]
+	ldrh	r3, [r4, r3]
+	add	r3, r3, r2
+	str	r3, [r4, #2460]
+.LVL1258:
+.L1436:
+	.loc 5 165 0 discriminator 1
+	ldrh	r2, [r9]
+	uxth	r3, r6
+	cmp	r2, r3
+	bhi	.L1440
+	.loc 5 181 0
+	movw	r0, #65535
+	bl	decrement_vpc_count
+.LVL1259:
+	.loc 5 182 0
+	movw	r3, #2376
+	ldr	r1, [r4, #2260]
+	ldrh	r0, [r4, r3]
+	mov	r5, r3
+.LVL1260:
+	lsl	r2, r0, #1
+	ldrh	r2, [r1, r2]
+	cmp	r2, #0
+	beq	.L1441
+	.loc 5 183 0
+	bl	INSERT_DATA_LIST
+.LVL1261:
+.L1442:
+	.loc 5 186 0
+	mvn	r6, #0
+	.loc 5 187 0
+	movw	r3, #3180
+	.loc 5 186 0
+	strh	r6, [r4, r5]	@ movhi
+	.loc 5 187 0
+	mov	r5, #0
+	strh	r5, [r4, r3]	@ movhi
+	.loc 5 188 0
+	movw	r3, #3172
+	strh	r5, [r4, r3]	@ movhi
+	.loc 5 189 0
+	bl	l2p_flush
+.LVL1262:
+	.loc 5 190 0
+	bl	FtlVpcTblFlush
+.LVL1263:
+	.loc 5 191 0
+	movw	r3, #2276
+	ldrh	r2, [r4, r3]
+	movw	r3, #2552
+	ldrh	r3, [r4, r3]
+	add	r3, r3, r3, lsl #1
+	cmp	r2, r3, asr #2
+	.loc 5 192 0
+	movwgt	r3, #2568
+	.loc 5 193 0
+	movgt	r2, #20
+	.loc 5 192 0
+	strhgt	r6, [r4, r3]	@ movhi
+	.loc 5 193 0
+	movwgt	r3, #3128
+	strhgt	r2, [r4, r3]	@ movhi
+	b	.L1425
+.LVL1264:
+.L1440:
+	.loc 5 166 0
+	uxth	r3, r6
+	mov	r7, #12
+	ldr	r8, [r4, #3176]
+	mul	r7, r7, r3
+	.loc 5 168 0
+	ldr	r3, [r4, #2436]
+	.loc 5 166 0
+	add	r5, r8, r7
+	.loc 5 168 0
+	ldr	r2, [r5, #8]
+	cmp	r2, r3
+	bcc	.L1437
+	.loc 5 168 0 is_stmt 0 discriminator 1
+	mov	r2, #168
+	mov	r1, r10
+	ldr	r0, .L1449+16
+	bl	printk
+.LVL1265:
+.L1437:
+	.loc 5 169 0 is_stmt 1
+	mov	r2, #0
+	sub	r1, fp, #48
+	ldr	r0, [r5, #8]
+	bl	log2phys
+.LVL1266:
+	.loc 5 170 0
+	ldr	r3, [fp, #-48]
+	ldr	r0, [r8, r7]
+	cmp	r0, r3
+	bne	.L1438
+	.loc 5 171 0
+	ubfx	r0, r0, #10, #16
+	bl	P2V_block_in_plane
+.LVL1267:
+	.loc 5 172 0
+	mov	r2, #1
+	.loc 5 171 0
+	mov	r7, r0
+	.loc 5 172 0
+	add	r1, r5, #4
+	ldr	r0, [r5, #8]
+	bl	log2phys
+.LVL1268:
+	.loc 5 173 0
+	mov	r0, r7
+.L1448:
+	.loc 5 177 0
+	bl	decrement_vpc_count
+.LVL1269:
+.L1439:
+	add	r6, r6, #1
+	b	.L1436
+.L1438:
+	.loc 5 175 0
+	ldr	r2, [r5, #4]
+	cmp	r3, r2
+	beq	.L1439
+	.loc 5 177 0
+	ldr	r3, .L1449+8
+	ldrh	r0, [r3]
+	b	.L1448
+.LVL1270:
+.L1441:
+	.loc 5 185 0
+	bl	INSERT_FREE_LIST
+.LVL1271:
+	b	.L1442
+.L1450:
+	.align	2
+.L1449:
+	.word	.LANCHOR0
+	.word	.LANCHOR2
+	.word	.LANCHOR0+2376
+	.word	.LANCHOR1+532
+	.word	.LC1
+	.word	.LANCHOR0+3180
+.LFE248:
+	.fnend
+	.size	FtlGcFreeTempBlock, .-FtlGcFreeTempBlock
+	.align	2
+	.global	FtlGcPageRecovery
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlGcPageRecovery, %function
+FtlGcPageRecovery:
+	.fnstart
+.LFB251:
+	.loc 5 289 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI407:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI408:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI409:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 289 0
+	.loc 5 290 0
+	ldr	r4, .L1453
+	ldr	r5, .L1453+4
+	ldrh	r1, [r4, #78]
+	mov	r0, r5
+	bl	FtlGcScanTempBlk
+.LVL1272:
+	.loc 5 291 0
+	ldrh	r2, [r5, #2]
+	ldrh	r3, [r4, #78]
+	cmp	r2, r3
+	ldmfdcc	sp, {r4, r5, fp, sp, pc}
+.LBB492:
+.LBB493:
+	.loc 5 293 0
+	add	r0, r5, #1488
+	bl	FtlMapBlkWriteDump_data
+.LVL1273:
+	.loc 5 294 0
+	mov	r0, #0
+	bl	FtlGcFreeTempBlock
+.LVL1274:
+	.loc 5 295 0
+	mov	r3, #0
+	str	r3, [r4, #3960]
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L1454:
+	.align	2
+.L1453:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+2376
+.LBE493:
+.LBE492:
+.LFE251:
+	.fnend
+	.size	FtlGcPageRecovery, .-FtlGcPageRecovery
+	.align	2
+	.global	FtlPowerLostRecovery
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlPowerLostRecovery, %function
+FtlPowerLostRecovery:
+	.fnstart
+.LFB223:
+	.loc 2 2032 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI410:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI411:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI412:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2032 0
+	.loc 2 2033 0
+	mov	r6, #0
+	ldr	r4, .L1456
+	.loc 2 2035 0
+	add	r5, r4, #2272
+	.loc 2 2033 0
+	str	r6, [r4, #3972]
+	.loc 2 2035 0
+	add	r5, r5, #8
+	.loc 2 2037 0
+	add	r4, r4, #2320
+	.loc 2 2035 0
+	mov	r0, r5
+	.loc 2 2037 0
+	add	r4, r4, #8
+	.loc 2 2035 0
+	bl	FtlRecoverySuperblock
+.LVL1275:
+	.loc 2 2036 0
+	mov	r0, r5
+	bl	FtlSlcSuperblockCheck
+.LVL1276:
+	.loc 2 2037 0
+	mov	r0, r4
+	bl	FtlRecoverySuperblock
+.LVL1277:
+	.loc 2 2038 0
+	mov	r0, r4
+	bl	FtlSlcSuperblockCheck
+.LVL1278:
+	.loc 2 2039 0
+	bl	FtlGcPageRecovery
+.LVL1279:
+	.loc 2 2040 0
+	movw	r0, #65535
+	bl	decrement_vpc_count
+.LVL1280:
+	.loc 2 2042 0
+	mov	r0, r6
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L1457:
+	.align	2
+.L1456:
+	.word	.LANCHOR0
+.LFE223:
+	.fnend
+	.size	FtlPowerLostRecovery, .-FtlPowerLostRecovery
+	.align	2
+	.global	Ftl_gc_temp_data_write_back
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	Ftl_gc_temp_data_write_back, %function
+Ftl_gc_temp_data_write_back:
+	.fnstart
+.LFB253:
+	.loc 5 316 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI413:
+	push	{r4, r5, r6, r7, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, fp, ip, lr}
+.LCFI414:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI415:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 316 0
+	.loc 5 320 0
+	mov	r3, #0
+	.loc 5 321 0
+	mov	r5, #0
+	.loc 5 320 0
+	ldr	r4, .L1465
+	.loc 5 322 0
+	mov	r6, #20
+	.loc 5 320 0
+	mov	r2, r3
+	ldr	r1, [r4, #3144]
+	ldr	r0, [r4, #3796]
+	bl	FlashProgPages
+.LVL1281:
+.L1459:
+	.loc 5 321 0 discriminator 1
+	ldr	r1, [r4, #3144]
+	uxth	r3, r5
+	cmp	r1, r3
+	bhi	.L1462
+	.loc 5 335 0
+	ldr	r0, [r4, #3796]
+	bl	FtlGcBufFree
+.LVL1282:
+	.loc 5 337 0
+	ldr	r3, .L1465+4
+	.loc 5 336 0
+	mov	r0, #0
+	str	r0, [r4, #3144]
+	.loc 5 337 0
+	ldrh	r3, [r3, #4]
+	cmp	r3, r0
+	ldmfdne	sp, {r4, r5, r6, r7, fp, sp, pc}
+	.loc 5 338 0
+	mov	r0, #1
+	bl	FtlGcFreeTempBlock
+.LVL1283:
+	b	.L1464
+.L1462:
+	.loc 5 322 0
+	mul	r3, r6, r3
+	ldr	r2, [r4, #3796]
+	add	r5, r5, #1
+	ldr	r0, [r2, r3]
+	add	r1, r2, r3
+	cmn	r0, #1
+	bne	.L1460
+	.loc 5 323 0
+	movw	r1, #2376
+	ldr	ip, [r4, #2260]
+	ldrh	r2, [r4, r1]
+	mov	lr, #0
+	lsl	r2, r2, #1
+	strh	lr, [ip, r2]	@ movhi
+	.loc 5 325 0
+	ldr	r2, [r4, #2712]
+	.loc 5 324 0
+	strh	r0, [r4, r1]	@ movhi
+	.loc 5 325 0
+	add	r2, r2, #1
+	str	r2, [r4, #2712]
+	.loc 5 326 0
+	ldr	r2, [r4, #3796]
+	add	r3, r2, r3
+	ldr	r0, [r3, #4]
+	ubfx	r0, r0, #10, #16
+	bl	FtlBbmMapBadBlock
+.LVL1284:
+	.loc 5 327 0
+	bl	FtlBbmTblFlush
+.LVL1285:
+	.loc 5 328 0
+	bl	FtlGcPageVarInit
+.LVL1286:
+.L1464:
+	.loc 5 339 0
+	mov	r0, #1
+	.loc 5 342 0
+	ldmfd	sp, {r4, r5, r6, r7, fp, sp, pc}
+.L1460:
+	.loc 5 331 0 discriminator 2
+	ldr	r3, [r1, #12]
+.LVL1287:
+	.loc 5 332 0 discriminator 2
+	ldr	r1, [r1, #4]
+	ldr	r2, [r3, #8]
+	ldr	r0, [r3, #12]
+	bl	FtlGcUpdatePage
+.LVL1288:
+	b	.L1459
+.L1466:
+	.align	2
+.L1465:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+2376
+.LFE253:
+	.fnend
+	.size	Ftl_gc_temp_data_write_back, .-Ftl_gc_temp_data_write_back
+	.align	2
+	.global	Ftl_get_new_temp_ppa
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	Ftl_get_new_temp_ppa, %function
+Ftl_get_new_temp_ppa:
+	.fnstart
+.LFB252:
+	.loc 5 300 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI416:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI417:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI418:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 300 0
+	.loc 5 301 0
+	movw	r3, #2376
+	ldr	r4, .L1470
+	ldrh	r2, [r4, r3]
+	movw	r3, #65535
+	cmp	r2, r3
+	beq	.L1468
+	.loc 5 301 0 is_stmt 0 discriminator 1
+	ldr	r3, .L1470+4
+	ldrh	r3, [r3, #4]
+	cmp	r3, #0
+	bne	.L1469
+.L1468:
+	.loc 5 302 0 is_stmt 1
+	bl	FtlCacheWriteBack
+.LVL1289:
+	.loc 5 303 0
+	mov	r0, #0
+	.loc 5 304 0
+	mov	r5, #0
+	.loc 5 303 0
+	bl	FtlGcFreeTempBlock
+.LVL1290:
+	.loc 5 305 0
+	ldr	r0, .L1470+4
+	.loc 5 304 0
+	strb	r5, [r4, #2384]
+	.loc 5 305 0
+	bl	allocate_data_superblock
+.LVL1291:
+	.loc 5 306 0
+	movw	r3, #3172
+	strh	r5, [r4, r3]	@ movhi
+	.loc 5 307 0
+	movw	r3, #3180
+	strh	r5, [r4, r3]	@ movhi
+	.loc 5 308 0
+	bl	l2p_flush
+.LVL1292:
+	.loc 5 309 0
+	mov	r0, r5
+	bl	FtlEctTblFlush
+.LVL1293:
+	.loc 5 310 0
+	bl	FtlVpcTblFlush
+.LVL1294:
+.L1469:
+	.loc 5 312 0
+	ldr	r0, .L1470+4
+	bl	get_new_active_ppa
+.LVL1295:
+	.loc 5 313 0
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L1471:
+	.align	2
+.L1470:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+2376
+.LFE252:
+	.fnend
+	.size	Ftl_get_new_temp_ppa, .-Ftl_get_new_temp_ppa
+	.align	2
+	.global	rk_ftl_garbage_collect
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	rk_ftl_garbage_collect, %function
+rk_ftl_garbage_collect:
+	.fnstart
+.LFB259:
+	.loc 5 470 0
+	@ args = 0, pretend = 0, frame = 32
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL1296:
+	.movsp ip
+	mov	ip, sp
+.LCFI419:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI420:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI421:
+	.pad #44
+	sub	sp, sp, #44
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 470 0
+	.loc 5 478 0
+	ldr	r3, .L1584
+	.loc 5 470 0
+	mov	r5, r0
+	.loc 5 478 0
+	ldr	r0, [r3, #3780]
+.LVL1297:
+	mov	r6, r3
+	cmp	r0, #0
+	.loc 5 479 0
+	movne	r0, #0
+	.loc 5 478 0
+	bne	.L1472
+	.loc 5 481 0
+	movw	r2, #2268
+	ldrh	r2, [r3, r2]
+	cmp	r2, #47
+	bls	.L1472
+	.loc 5 485 0
+	ldr	r2, .L1584+4
+	ldrh	r1, [r2, #4]
+.LVL1298:
+	movw	r2, #65535
+	cmp	r1, r2
+	bne	.L1474
+.L1477:
+.LBB497:
+.LBB498:
+	.loc 5 489 0
+	ldr	r3, .L1584+8
+	movw	r0, #65535
+	ldrh	r1, [r3]
+	cmp	r1, r0
+	bne	.L1475
+.L1476:
+	.loc 5 496 0
+	ldr	r3, [r6, #3132]
+	.loc 5 497 0
+	movw	r2, #2568
+	ldrh	r2, [r6, r2]
+	movw	r4, #65535
+	.loc 5 496 0
+	add	r3, r3, #1
+	add	r3, r3, r5, lsl #7
+	.loc 5 497 0
+	cmp	r2, r4
+	.loc 5 496 0
+	str	r3, [r6, #3132]
+	.loc 5 497 0
+	bne	.L1478
+	movw	r1, #2376
+	ldrh	r4, [r6, r1]
+	cmp	r4, r2
+	.loc 5 473 0
+	movne	r4, r2
+	.loc 5 497 0
+	bne	.L1478
+	movw	r2, #3182
+	ldrh	r7, [r6, r2]
+	cmp	r7, r4
+	bne	.L1478
+	.loc 5 498 0
+	movw	r10, #2276
+	ldrh	r2, [r6, r10]
+	cmp	r2, #24
+	movcc	r2, #5120
+	movcs	r2, #1024
+	cmp	r3, r2
+	.loc 5 473 0
+	movls	r4, r7
+	.loc 5 498 0
+	bls	.L1478
+.LBB499:
+	.loc 5 502 0
+	ldr	r3, .L1584+12
+	.loc 5 501 0
+	mov	r9, #0
+	str	r9, [r6, #3132]
+	.loc 5 502 0
+	strh	r9, [r3, #-4]	@ movhi
+	.loc 5 503 0
+	bl	GetSwlReplaceBlock
+.LVL1299:
+	.loc 5 504 0
+	cmp	r0, r7
+	.loc 5 503 0
+	mov	r4, r0
+	.loc 5 504 0
+	movne	r7, r0
+	bne	.L1480
+	.loc 5 505 0
+	movw	r8, #3130
+	ldrh	r2, [r6, r10]
+	ldrh	r3, [r6, r8]
+	cmp	r2, r3
+	bcs	.L1481
+	.loc 5 506 0
+	mov	r0, #64
+	bl	List_get_gc_head_node
+.LVL1300:
+	.loc 5 507 0
+	uxth	r3, r0
+	cmp	r3, r4
+	beq	.L1483
+	.loc 5 508 0
+	mov	r0, r3
+	ldr	r3, [r6, #2260]
+	lsl	r0, r0, #1
+	ldrh	r3, [r3, r0]
+	cmp	r3, #7
+	bhi	.L1484
+	.loc 5 509 0
+	mov	r0, r9
+	bl	List_get_gc_head_node
+.LVL1301:
+	uxth	r7, r0
+	.loc 5 510 0
+	mov	r3, #128
+	strh	r3, [r6, r8]	@ movhi
+	.loc 5 520 0
+	cmp	r7, r4
+	beq	.L1483
+.L1480:
+	.loc 5 521 0
+	movw	r0, #3128
+	ldr	r3, [r6, #2260]
+	ldrh	r0, [r6, r0]
+	lsl	r1, r7, #1
+	movw	r2, #2276
+	ldrh	r3, [r3, r1]
+	mov	r4, r7
+	ldrh	r2, [r6, r2]
+	str	r0, [sp, #4]
+	ldr	r0, [r6, #2248]
+	ldrh	r1, [r0, r1]
+	ldr	r0, .L1584+16
+	str	r1, [sp]
+	mov	r1, r7
+	bl	printk
+.LVL1302:
+	b	.L1483
+.L1474:
+.LBE499:
+.LBE498:
+.LBE497:
+	.loc 5 485 0 discriminator 1
+	movw	r1, #2376
+	ldrh	r3, [r3, r1]
+	cmp	r3, r2
+	beq	.L1477
+	.loc 5 486 0
+	mov	r0, #1
+	bl	FtlGcFreeTempBlock
+.LVL1303:
+	cmp	r0, #0
+	beq	.L1477
+	.loc 5 487 0
+	mov	r0, #1
+	b	.L1472
+.L1475:
+.LBB504:
+.LBB502:
+	.loc 5 489 0
+	movw	r2, #3182
+	ldrh	ip, [r6, r2]
+	cmp	ip, r0
+	.loc 5 490 0
+	strheq	r1, [r6, r2]	@ movhi
+	.loc 5 491 0
+	mvneq	r2, #0
+	strheq	r2, [r3]	@ movhi
+	b	.L1476
+.L1484:
+.LBB500:
+	.loc 5 512 0
+	mov	r3, #64
+.L1577:
+	.loc 5 516 0
+	strh	r3, [r6, r8]	@ movhi
+.L1483:
+	.loc 5 523 0
+	bl	FtlGcReFreshBadBlk
+.LVL1304:
+.L1478:
+.LBE500:
+	.loc 5 527 0
+	movw	r2, #65535
+	sub	r3, r4, r2
+	clz	r3, r3
+	lsr	r3, r3, #5
+	cmp	r5, #0
+	movne	r5, #0
+	andeq	r5, r3, #1
+.LVL1305:
+	cmp	r5, #0
+	beq	.L1486
+	.loc 5 528 0
+	movw	r3, #2276
+	ldrh	r3, [r6, r3]
+	cmp	r3, #24
+	.loc 5 529 0
+	movhi	r5, #1
+.LVL1306:
+	.loc 5 528 0
+	bhi	.L1487
+	ldrh	r5, [r6, #78]
+.LVL1307:
+	.loc 5 530 0
+	cmp	r3, #16
+	.loc 5 531 0
+	lsrhi	r5, r5, #5
+.LVL1308:
+	.loc 5 530 0
+	bhi	.L1487
+	.loc 5 532 0
+	cmp	r3, #12
+	.loc 5 533 0
+	lsrhi	r5, r5, #4
+.LVL1309:
+	.loc 5 532 0
+	bhi	.L1487
+	.loc 5 534 0
+	cmp	r3, #8
+	.loc 5 535 0
+	lsrhi	r5, r5, #2
+.LVL1310:
+.L1487:
+	.loc 5 539 0
+	movw	r2, #3128
+	ldrh	r1, [r6, r2]
+	cmp	r1, r3
+	bcs	.L1491
+	.loc 5 540 0
+	movw	r3, #2376
+	movw	r1, #65535
+	ldrh	r3, [r6, r3]
+	cmp	r3, r1
+	bne	.L1492
+	movw	r1, #3182
+	ldrh	r1, [r6, r1]
+	cmp	r1, r3
+	bne	.L1492
+	.loc 5 542 0
+	ldr	r3, .L1584+12
+	ldrh	r0, [r3, #-4]
+	cmp	r0, #0
+	bne	.L1493
+	ldr	r3, [r6, #2436]
+	ldr	r1, [r6, #2432]
+	add	r3, r3, r3, lsl #1
+	cmp	r1, r3, lsr #2
+	.loc 5 545 0
+	movcs	r3, #18
+	.loc 5 542 0
+	bcs	.L1578
+.L1493:
+	.loc 5 543 0
+	movw	r3, #2552
+	movw	r2, #3128
+	ldrh	r3, [r6, r3]
+	add	r3, r3, r3, lsl #1
+	asr	r3, r3, #2
+.L1578:
+	.loc 5 545 0
+	strh	r3, [r6, r2]	@ movhi
+	.loc 5 546 0
+	mov	r3, #0
+	str	r3, [r6, #3140]
+.LVL1311:
+.L1472:
+.LBE502:
+.LBE504:
+	.loc 5 758 0
+	sub	sp, fp, #40
+.LCFI422:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL1312:
+.L1481:
+.LCFI423:
+.LBB505:
+.LBB503:
+.LBB501:
+	.loc 5 516 0
+	mov	r3, #80
+	b	.L1577
+.LVL1313:
+.L1492:
+.LBE501:
+	.loc 5 549 0
+	movw	r3, #2552
+	movw	r2, #3128
+	ldrh	r3, [r6, r3]
+	add	r3, r3, r3, lsl #1
+	asr	r3, r3, #2
+	strh	r3, [r6, r2]	@ movhi
+.L1491:
+	.loc 5 551 0
+	movw	r3, #3186
+	movw	r4, #65535
+	ldrh	r3, [r6, r3]
+	cmp	r3, #0
+	.loc 5 552 0
+	addne	r5, r5, #32
+.LVL1314:
+	uxthne	r5, r5
+.LVL1315:
+.L1497:
+	.loc 5 597 0
+	movw	r3, #2568
+	ldrh	r2, [r6, r3]
+	movw	r1, #65535
+	cmp	r2, r1
+	bne	.L1506
+	.loc 5 598 0
+	cmp	r4, r2
+	.loc 5 599 0
+	strhne	r4, [r6, r3]	@ movhi
+	.loc 5 598 0
+	bne	.L1508
+	.loc 5 600 0
+	movw	r2, #3182
+	ldrh	r3, [r6, r2]
+	cmp	r3, r4
+	beq	.L1508
+	.loc 5 604 0
+	ldr	r1, [r6, #2260]
+	lsl	r3, r3, #1
+	ldrh	r3, [r1, r3]
+	cmp	r3, #0
+	.loc 5 605 0
+	mvneq	r3, #0
+	strheq	r3, [r6, r2]	@ movhi
+	.loc 5 606 0
+	movw	r3, #3182
+	ldrh	r1, [r6, r3]
+	movw	r2, #2568
+	strh	r1, [r6, r2]	@ movhi
+	.loc 5 607 0
+	mvn	r2, #0
+	strh	r2, [r6, r3]	@ movhi
+.L1508:
+	.loc 5 611 0
+	movw	r7, #2568
+	.loc 5 610 0
+	mov	r3, #0
+	.loc 5 611 0
+	ldrh	r0, [r6, r7]
+	.loc 5 610 0
+	strb	r3, [r6, #2576]
+	.loc 5 611 0
+	movw	r3, #65535
+	cmp	r0, r3
+	beq	.L1506
+	.loc 5 612 0
+	bl	IsBlkInGcList
+.LVL1316:
+	cmp	r0, #0
+	.loc 5 615 0
+	ldr	r8, .L1584+20
+	.loc 5 613 0
+	mvnne	r3, #0
+	strhne	r3, [r6, r7]	@ movhi
+	.loc 5 615 0
+	movw	r7, #2568
+	ldrh	r2, [r6, r7]
+	movw	r3, #65535
+	cmp	r2, r3
+	beq	.L1506
+	.loc 5 616 0
+	mov	r0, r8
+	bl	make_superblock
+.LVL1317:
+	.loc 5 619 0
+	ldr	r2, .L1584+12
+	.loc 5 617 0
+	mov	r3, #0
+	strh	r3, [r8, #2]	@ movhi
+	.loc 5 618 0
+	strb	r3, [r6, #2574]
+	.loc 5 619 0
+	strh	r3, [r2, #-2]	@ movhi
+	.loc 5 620 0
+	ldrh	r3, [r6, r7]
+	ldr	r1, [r6, #2260]
+	lsl	r3, r3, #1
+	ldrh	r3, [r1, r3]
+	strh	r3, [r2]	@ movhi
+.L1506:
+	.loc 5 625 0
+	movw	r3, #2568
+	movw	r2, #2280
+	ldrh	r3, [r6, r3]
+	ldrh	r2, [r6, r2]
+	cmp	r2, r3
+	beq	.L1512
+	movw	r2, #2328
+	ldrh	r2, [r6, r2]
+	cmp	r2, r3
+	.loc 5 631 0
+	ldrne	r10, .L1584
+	movne	r6, r10
+	.loc 5 625 0
+	bne	.L1513
+.L1512:
+	.loc 5 626 0
+	mvn	r2, #0
+	movw	r3, #2568
+	strh	r2, [r6, r3]	@ movhi
+.LVL1318:
+.L1583:
+	.loc 5 652 0
+	ldr	r3, .L1584+12
+	ldrh	r0, [r3, #-4]
+	b	.L1472
+.LVL1319:
+.L1486:
+	.loc 5 557 0
+	movw	r1, #2376
+	ldrh	r7, [r6, r1]
+	cmp	r7, r2
+	bne	.L1555
+	movw	r2, #3182
+	ldrh	r2, [r6, r2]
+	cmp	r2, r7
+	movne	r3, #0
+	andeq	r3, r3, #1
+	cmp	r3, #0
+	beq	.L1555
+	movw	r3, #2568
+	ldrh	r3, [r6, r3]
+	cmp	r3, r7
+	beq	.L1498
+.L1503:
+	.loc 5 556 0
+	mov	r4, r7
+.L1555:
+	mov	r5, #1
+.LVL1320:
+	b	.L1497
+.LVL1321:
+.L1498:
+	.loc 5 560 0
+	movw	r3, #2276
+	movw	r2, #3128
+	ldrh	r8, [r6, r3]
+	ldrh	r3, [r6, r2]
+	.loc 5 558 0
+	str	r5, [r6, #3140]
+	ldr	r4, .L1584+12
+	.loc 5 560 0
+	cmp	r3, r8
+	bcs	.L1499
+	.loc 5 561 0
+	ldrh	r3, [r4, #-4]
+	cmp	r3, #0
+	bne	.L1500
+	ldr	r3, [r6, #2436]
+	ldr	r1, [r6, #2432]
+	add	r3, r3, r3, lsl #1
+	cmp	r1, r3, lsr #2
+	.loc 5 564 0
+	movcs	r3, #18
+	.loc 5 561 0
+	bcs	.L1579
+.L1500:
+	.loc 5 562 0
+	movw	r3, #2552
+	movw	r2, #3128
+	ldrh	r3, [r6, r3]
+	add	r3, r3, r3, lsl #1
+	asr	r3, r3, #2
+.L1579:
+	.loc 5 564 0
+	strh	r3, [r6, r2]	@ movhi
+.L1582:
+	.loc 5 578 0
+	bl	FtlReadRefresh
+.LVL1322:
+	.loc 5 579 0
+	ldrh	r0, [r4, #-4]
+	b	.L1472
+.L1499:
+	.loc 5 572 0
+	ldrh	r0, [r4, #-4]
+	cmp	r0, #0
+	bne	.L1503
+	.loc 5 573 0
+	movw	r3, #2552
+	ldrh	r5, [r6, r3]
+	add	r3, r5, r5, lsl #1
+	asr	r3, r3, #2
+	strh	r3, [r6, r2]	@ movhi
+	.loc 5 574 0
+	bl	List_get_gc_head_node
+.LVL1323:
+	.loc 5 575 0
+	uxth	r0, r0
+	ldr	r3, [r6, #2260]
+	ldrh	r1, [r6, #80]
+	lsl	r0, r0, #1
+	ldrh	r2, [r3, r0]
+	ldrh	r3, [r6, #8]
+	mul	r3, r3, r1
+	add	r3, r3, r3, lsr #31
+	cmp	r2, r3, asr #1
+	ble	.L1504
+	.loc 5 576 0
+	sub	r5, r5, #1
+	.loc 5 575 0
+	cmp	r8, r5
+	bge	.L1582
+.L1504:
+	.loc 5 584 0
+	cmp	r2, #0
+	bne	.L1503
+	.loc 5 585 0
+	movw	r0, #65535
+	bl	decrement_vpc_count
+.LVL1324:
+	.loc 5 586 0
+	movw	r3, #2276
+	ldrh	r0, [r6, r3]
+	add	r0, r0, #1
+	b	.L1472
+.LVL1325:
+.L1516:
+	str	r0, [fp, #-60]
+	.loc 5 640 0
+	mov	r0, r2
+	str	r2, [fp, #-56]
+	add	r9, r9, #1
+	bl	IsBlkInGcList
+.LVL1326:
+	cmp	r0, #0
+	ldr	r2, [fp, #-56]
+	ldr	r3, [fp, #-60]
+	.loc 5 641 0
+	strhne	r9, [r8]	@ movhi
+	.loc 5 640 0
+	bne	.L1515
+	.loc 5 645 0
+	uxth	r3, r3
+	ldrh	lr, [r6, #8]
+	ldr	r0, [r6, #2260]
+	.loc 5 644 0
+	uxth	r9, r9
+	.loc 5 645 0
+	lsl	r1, r3, #1
+	ldrh	r3, [r6, #78]
+	.loc 5 644 0
+	strh	r9, [r8]	@ movhi
+	.loc 5 645 0
+	ldrh	ip, [r0, r1]
+	mul	r3, lr, r3
+	add	lr, r3, r3, lsr #31
+	cmp	ip, lr, asr #1
+	bgt	.L1519
+	.loc 5 646 0
+	cmp	ip, #8
+	cmphi	r9, #48
+	bls	.L1520
+	ldr	ip, .L1584+24
+	ldrh	ip, [ip]
+	cmp	ip, #35
+	bhi	.L1520
+.L1519:
+	.loc 5 647 0
+	ldr	lr, .L1584+28
+	mov	ip, #0
+	strh	ip, [lr]	@ movhi
+.L1520:
+	.loc 5 649 0
+	ldrh	r1, [r0, r1]
+	movw	r0, #65535
+	cmp	r3, r1
+	cmple	r4, r0
+	moveq	r3, #1
+	movne	r3, #0
+	bne	.L1521
+	.loc 5 650 0
+	mvn	r2, #0
+	movw	r3, #2568
+	strh	r2, [r6, r3]	@ movhi
+	.loc 5 651 0
+	mov	r3, #0
+	ldr	r2, .L1584+28
+	strh	r3, [r2]	@ movhi
+	b	.L1583
+.L1521:
+	.loc 5 655 0
+	cmp	r1, #0
+	bne	.L1522
+	.loc 5 656 0
+	bl	decrement_vpc_count
+.LVL1327:
+	.loc 5 657 0
+	ldr	r3, .L1584+28
+	ldr	r2, .L1584+28
+	ldrh	r3, [r3]
+	add	r3, r3, #1
+	strh	r3, [r2]	@ movhi
+	b	.L1515
+.L1522:
+	.loc 5 660 0
+	strb	r3, [r6, #2576]
+	.loc 5 662 0
+	ldr	r3, .L1584+32
+	ldrh	r3, [r3]
+	cmp	r3, r2
+	bne	.L1523
+	movw	r2, #662
+	ldr	r1, .L1584+36
+	ldr	r0, .L1584+40
+	bl	printk
+.LVL1328:
+.L1523:
+	.loc 5 663 0
+	ldr	r3, .L1584+44
+	ldrh	r2, [r7]
+	ldrh	r3, [r3]
+	cmp	r2, r3
+	bne	.L1524
+	movw	r2, #663
+	ldr	r1, .L1584+36
+	ldr	r0, .L1584+40
+	bl	printk
+.LVL1329:
+.L1524:
+	.loc 5 664 0
+	ldr	r3, .L1584+48
+	ldrh	r2, [r7]
+	ldrh	r3, [r3]
+	cmp	r2, r3
+	bne	.L1525
+	mov	r2, #664
+	ldr	r1, .L1584+36
+	ldr	r0, .L1584+40
+	bl	printk
+.LVL1330:
+.L1525:
+	.loc 5 665 0
+	ldr	r0, .L1584+20
+	bl	make_superblock
+.LVL1331:
+	.loc 5 667 0
+	ldrh	r2, [r7]
+	.loc 5 666 0
+	mov	r3, #0
+	ldr	r1, .L1584+12
+	.loc 5 667 0
+	ldr	r0, [r6, #2260]
+	lsl	r2, r2, #1
+	.loc 5 666 0
+	strh	r3, [r1, #-2]	@ movhi
+	.loc 5 667 0
+	ldrh	r2, [r0, r2]
+	.loc 5 668 0
+	strh	r3, [r7, #2]	@ movhi
+	.loc 5 669 0
+	strb	r3, [r6, #2574]
+	.loc 5 667 0
+	strh	r2, [r1]	@ movhi
+.LVL1332:
+.L1514:
+	.loc 5 675 0
+	bl	FtlReadRefresh
+.LVL1333:
+	.loc 5 678 0
+	mov	r3, #1
+	str	r3, [r6, #3780]
+	.loc 5 679 0
+	ldrh	r3, [r6, #78]
+.LVL1334:
+	str	r3, [fp, #-68]
+	.loc 5 680 0
+	ldrh	r3, [r7, #2]
+.LVL1335:
+	ldr	r1, [fp, #-68]
+.LVL1336:
+	add	r2, r3, r5
+	cmp	r2, r1
+	.loc 5 681 0
+	movgt	r2, r1
+	subgt	r5, r2, r3
+.LVL1337:
+	.loc 5 693 0
+	mov	r3, #0
+	.loc 5 681 0
+	uxthgt	r5, r5
+.LVL1338:
+.L1581:
+	str	r3, [fp, #-64]
+	.loc 5 683 0
+	ldrh	r3, [fp, #-64]
+	ldr	r8, .L1584+20
+.LVL1339:
+	cmp	r5, r3
+	bls	.L1535
+	.loc 5 688 0
+	ldrh	r7, [r8, #2]
+	mov	r2, #0
+.LVL1340:
+	ldr	r3, [fp, #-64]
+	mov	r9, #20
+.LVL1341:
+	.loc 5 685 0
+	ldrh	ip, [r10, #8]
+	.loc 5 688 0
+	ldr	r0, [r10, #3160]
+	add	r7, r7, r3
+	str	r2, [fp, #-56]
+	add	r3, r8, #14
+	.loc 5 687 0
+	movw	r8, #65535
+	b	.L1536
+.LVL1342:
+.L1529:
+	.loc 5 686 0
+	ldrh	r1, [r3, #2]!
+.LVL1343:
+	.loc 5 687 0
+	cmp	r1, r8
+	beq	.L1528
+	.loc 5 688 0
+	ldr	lr, [fp, #-56]
+.LVL1344:
+	orr	r1, r7, r1, lsl #10
+.LVL1345:
+	mla	lr, r9, lr, r0
+.LVL1346:
+	str	r1, [lr, #4]
+	.loc 5 689 0
+	ldr	r1, [fp, #-56]
+.LVL1347:
+	add	r1, r1, #1
+.LVL1348:
+	uxth	r1, r1
+.LVL1349:
+	str	r1, [fp, #-56]
+.LVL1350:
+.L1528:
+	add	r2, r2, #1
+.LVL1351:
+.L1536:
+	.loc 5 685 0
+	uxth	r1, r2
+.LVL1352:
+	cmp	ip, r1
+	bhi	.L1529
+	.loc 5 693 0
+	ldrb	r2, [r10, #2576]	@ zero_extendqisi2
+	ldr	r1, [fp, #-56]
+	bl	FlashReadPages
+.LVL1353:
+	mov	r3, #0
+.LVL1354:
+.L1580:
+	str	r3, [fp, #-60]
+	.loc 5 695 0
+	ldr	r2, [fp, #-56]
+.LVL1355:
+	ldrh	r3, [fp, #-60]
+	cmp	r3, r2
+	ldrcs	r3, [fp, #-64]
+	addcs	r3, r3, #1
+	bcs	.L1581
+.L1534:
+	ldr	r3, [fp, #-60]
+	mov	r7, #20
+	mul	r7, r7, r3
+	.loc 5 696 0
+	ldr	r3, [r10, #3160]
+	add	r2, r3, r7
+.LVL1356:
+	.loc 5 697 0
+	ldr	r3, [r3, r7]
+	cmn	r3, #1
+	beq	.L1531
+	.loc 5 696 0
+	ldr	r9, [r2, #12]
+	.loc 5 697 0
+	movw	r3, #61589
+	ldrh	r2, [r9]
+	cmp	r2, r3
+	bne	.L1531
+	.loc 5 699 0
+	ldr	r8, [r9, #8]
+	.loc 5 700 0
+	cmn	r8, #1
+	bne	.L1532
+	mov	r2, #700
+	ldr	r1, .L1584+36
+	ldr	r0, .L1584+40
+	bl	printk
+.LVL1357:
+.L1532:
+	.loc 5 701 0
+	mov	r2, #0
+	sub	r1, fp, #48
+	mov	r0, r8
+	bl	log2phys
+.LVL1358:
+	.loc 5 702 0
+	ldr	r1, [r6, #3160]
+	ldr	r3, [fp, #-48]
+	add	r1, r1, r7
+	ldr	r2, [r1, #4]
+	cmp	r2, r3
+	bne	.L1531
+	.loc 5 704 0
+	ldr	r8, .L1584+52
+.LVL1359:
+	.loc 5 705 0
+	mov	r2, #20
+	ldr	r0, [r6, #3144]
+	ldr	r1, [r1, #16]
+	.loc 5 704 0
+	ldrh	r3, [r8]
+	.loc 5 705 0
+	str	r2, [fp, #-76]
+	.loc 5 704 0
+	add	r3, r3, #1
+	strh	r3, [r8], #2	@ movhi
+	.loc 5 705 0
+	ldr	r3, [r6, #3796]
+	mla	r3, r2, r0, r3
+	str	r1, [r3, #16]
+	str	r3, [fp, #-72]
+	.loc 5 706 0
+	bl	Ftl_get_new_temp_ppa
+.LVL1360:
+	ldr	r3, [fp, #-72]
+	.loc 5 707 0
+	ldr	r1, [r6, #3144]
+	ldr	r2, [fp, #-76]
+	.loc 5 706 0
+	str	r0, [r3, #4]
+	.loc 5 707 0
+	ldr	r3, [r6, #3796]
+	mla	r2, r2, r1, r3
+	ldr	r3, [r6, #3160]
+	add	r3, r3, r7
+	ldr	r1, [r3, #8]
+	str	r1, [r2, #8]
+	.loc 5 716 0
+	mov	r1, #1
+	.loc 5 708 0
+	ldr	r3, [r3, #12]
+	str	r3, [r2, #12]
+	.loc 5 709 0
+	ldr	r3, [fp, #-48]
+.LVL1361:
+	str	r3, [r9, #12]
+	.loc 5 710 0
+	ldr	r3, .L1584+48
+.LVL1362:
+	ldrh	r2, [r3]
+	str	r3, [fp, #-72]
+	strh	r2, [r9, #2]	@ movhi
+	.loc 5 713 0
+	ldr	r2, [r6, #2476]
+	.loc 5 716 0
+	ldr	r0, [r6, #3160]
+	.loc 5 713 0
+	str	r2, [r9, #4]
+	.loc 5 715 0
+	ldr	r2, [r6, #3144]
+	.loc 5 716 0
+	add	r0, r0, r7
+	.loc 5 715 0
+	add	r2, r2, #1
+	str	r2, [r6, #3144]
+	.loc 5 716 0
+	bl	FtlGcBufAlloc
+.LVL1363:
+	.loc 5 717 0
+	ldrb	r1, [r6, #2383]	@ zero_extendqisi2
+	ldr	r2, [r6, #3144]
+	cmp	r1, r2
+	beq	.L1533
+	ldr	r3, [fp, #-72]
+	ldrh	r3, [r3, #4]
+	cmp	r3, #0
+	bne	.L1531
+.L1533:
+	.loc 5 718 0
+	bl	Ftl_gc_temp_data_write_back
+.LVL1364:
+	cmp	r0, #0
+	.loc 5 719 0
+	ldrne	r3, .L1584
+	movne	r2, #0
+	.loc 5 720 0
+	ldrhne	r0, [r8, #-4]
+	.loc 5 719 0
+	strne	r2, [r3, #3780]
+	bne	.L1472
+.LVL1365:
+.L1531:
+	ldr	r3, [fp, #-60]
+	add	r3, r3, #1
+	b	.L1580
+.LVL1366:
+.L1535:
+	.loc 5 727 0
+	ldrh	r3, [r8, #2]
+	add	r5, r5, r3
+.LVL1367:
+	.loc 5 729 0
+	ldr	r3, [fp, #-68]
+.LVL1368:
+	.loc 5 727 0
+	uxth	r5, r5
+	.loc 5 729 0
+	cmp	r3, r5
+	.loc 5 727 0
+	strh	r5, [r8, #2]	@ movhi
+	ldr	r5, .L1584+12
+	.loc 5 729 0
+	bls	.L1537
+	ldrh	r2, [r5, #-2]
+.LVL1369:
+	ldrh	r3, [r5]
+.LVL1370:
+	cmp	r2, r3
+	bne	.L1538
+.LVL1371:
+.L1537:
+	.loc 5 731 0
+	ldr	r3, [r10, #3144]
+.LVL1372:
+	cmp	r3, #0
+	beq	.L1539
+	.loc 5 732 0
+	bl	Ftl_gc_temp_data_write_back
+.LVL1373:
+	cmp	r0, #0
+	.loc 5 733 0
+	movne	r3, #0
+	.loc 5 734 0
+	ldrhne	r0, [r5, #-4]
+	.loc 5 733 0
+	strne	r3, [r10, #3780]
+	bne	.L1472
+.LVL1374:
+.L1539:
+	.loc 5 737 0
+	ldrh	r1, [r5, #-2]
+	cmp	r1, #0
+	bne	.L1540
+	ldrh	r3, [r8]
+	ldr	r2, [r10, #2260]
+.LVL1375:
+	lsl	r3, r3, #1
+	ldrh	r0, [r2, r3]
+	cmp	r0, #0
+	beq	.L1540
+	.loc 5 739 0
+	strh	r1, [r2, r3]	@ movhi
+	.loc 5 740 0
+	ldrh	r0, [r8]
+	bl	update_vpc_list
+.LVL1376:
+	.loc 5 741 0
+	bl	FtlCacheWriteBack
+.LVL1377:
+	.loc 5 742 0
+	bl	l2p_flush
+.LVL1378:
+	.loc 5 743 0
+	bl	FtlVpcTblFlush
+.LVL1379:
+.L1540:
+	.loc 5 745 0
+	mvn	r3, #0
+	strh	r3, [r8]	@ movhi
+.L1538:
+	.loc 5 747 0
+	ldr	r3, .L1584+56
+	ldrh	r3, [r3]
+	cmp	r3, #2
+	bhi	.L1541
+	.loc 5 749 0
+	ldrh	r5, [r10, #78]
+.LVL1380:
+.L1513:
+	.loc 5 631 0
+	ldr	r7, .L1584+20
+	movw	r3, #65535
+	ldrh	r2, [r7]
+.LVL1381:
+	cmp	r2, r3
+	bne	.L1514
+	.loc 5 635 0
+	add	r8, r7, #568
+	.loc 5 632 0
+	mov	r3, #0
+	str	r3, [r10, #3140]
+.L1515:
+	.loc 5 635 0
+	ldrh	r9, [r8]
+.LVL1382:
+	mov	r0, r9
+	bl	List_get_gc_head_node
+.LVL1383:
+	ldr	r1, .L1584+20
+	uxth	r2, r0
+	strh	r2, [r1]	@ movhi
+	.loc 5 636 0
+	movw	r1, #65535
+	cmp	r2, r1
+	bne	.L1516
+	.loc 5 637 0
+	mov	r3, #0
+	.loc 5 638 0
+	mov	r0, #8
+	.loc 5 637 0
+	strh	r3, [r8]	@ movhi
+	b	.L1472
+.LVL1384:
+.L1541:
+	.loc 5 754 0
+	ldrh	r0, [r5, #-4]
+	.loc 5 752 0
+	mov	r2, #0
+.LVL1385:
+	str	r2, [r10, #3780]
+	.loc 5 754 0
+	cmp	r0, r2
+	.loc 5 757 0
+	addeq	r0, r3, #1
+	b	.L1472
+.L1585:
+	.align	2
+.L1584:
+	.word	.LANCHOR0
+	.word	.LANCHOR2
+	.word	.LANCHOR0+3184
+	.word	.LANCHOR3-4064
+	.word	.LC100
+	.word	.LANCHOR0+2568
+	.word	.LANCHOR0+3172
+	.word	.LANCHOR0+3136
+	.word	.LANCHOR0+2280
+	.word	.LANCHOR1+551
+	.word	.LC1
+	.word	.LANCHOR0+2328
+	.word	.LANCHOR0+2376
+	.word	.LANCHOR3-4066
+	.word	.LANCHOR0+2276
+.LBE503:
+.LBE505:
+.LFE259:
+	.fnend
+	.size	rk_ftl_garbage_collect, .-rk_ftl_garbage_collect
+	.align	2
+	.global	sftl_gc
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	sftl_gc, %function
+sftl_gc:
+	.fnstart
+.LFB260:
+	.loc 5 761 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI424:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI425:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI426:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 5 761 0
+	.loc 5 762 0
+	mov	r1, #1
+	mov	r0, r1
+	bl	rk_ftl_garbage_collect
+.LVL1386:
+	.loc 5 763 0
+	ldmfd	sp, {fp, sp, pc}
+.LFE260:
+	.fnend
+	.size	sftl_gc, .-sftl_gc
+	.align	2
+	.global	FtlRead
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlRead, %function
+FtlRead:
+	.fnstart
+.LFB154:
+	.loc 3 813 0
+	@ args = 0, pretend = 0, frame = 56
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL1387:
+	.movsp ip
+	mov	ip, sp
+.LCFI427:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI428:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI429:
+	.pad #60
+	sub	sp, sp, #60
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 813 0
+	.loc 3 823 0
+	cmp	r0, #16
+	.loc 3 813 0
+	mov	r7, r1
+	str	r2, [fp, #-76]
+	mov	r9, r3
+	.loc 3 823 0
+	bne	.L1588
+	.loc 3 824 0
+	mov	r2, r3
+.LVL1388:
+	ldr	r1, [fp, #-76]
+	add	r0, r7, #256
+.LVL1389:
+	bl	FtlVendorPartRead
+.LVL1390:
+	str	r0, [fp, #-56]
+.LVL1391:
+.L1587:
+	.loc 3 900 0
+	ldr	r0, [fp, #-56]
+.LVL1392:
+	sub	sp, fp, #40
+.LCFI430:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL1393:
+.L1588:
+.LCFI431:
+	.loc 3 829 0
+	ldr	r3, [fp, #-76]
+.LVL1394:
+	ldr	r4, .L1621
+	add	r3, r1, r3
+.LVL1395:
+	str	r3, [fp, #-64]
+	ldr	r2, [fp, #-64]
+	ldr	r3, [r4, #116]
+	cmp	r2, r3
+	bhi	.L1608
+	.loc 3 829 0 is_stmt 0 discriminator 1
+	ldr	r3, .L1621+4
+	ldr	r3, [r3]
+	cmn	r3, #1
+	beq	.L1609
+	.loc 3 832 0 is_stmt 1
+	bl	FtlCacheWriteBack
+.LVL1396:
+	.loc 3 834 0
+	ldrh	r5, [r4, #34]
+	mov	r0, r7
+	.loc 3 827 0
+	mov	r8, #0
+.LVL1397:
+	.loc 3 839 0
+	mov	r6, r8
+.LVL1398:
+	.loc 3 834 0
+	mov	r1, r5
+	bl	__aeabi_uidiv
+.LVL1399:
+	.loc 3 835 0
+	ldr	r3, [fp, #-64]
+	mov	r1, r5
+	.loc 3 834 0
+	str	r0, [fp, #-68]
+	.loc 3 835 0
+	sub	r0, r3, #1
+	bl	__aeabi_uidiv
+.LVL1400:
+	.loc 3 836 0
+	ldr	r3, [fp, #-68]
+.LVL1401:
+	.loc 3 834 0
+	ldr	r5, [fp, #-68]
+.LVL1402:
+	.loc 3 835 0
+	str	r0, [fp, #-72]
+	.loc 3 836 0
+	rsb	r3, r3, #1
+.LVL1403:
+	.loc 3 827 0
+	str	r8, [fp, #-84]
+.LVL1404:
+	.loc 3 836 0
+	add	r3, r3, r0
+.LVL1405:
+	.loc 3 819 0
+	str	r8, [fp, #-80]
+	.loc 3 836 0
+	str	r3, [fp, #-60]
+	.loc 3 840 0
+	ldr	r2, [fp, #-60]
+.LVL1406:
+	ldr	r3, [r4, #2440]
+	.loc 3 814 0
+	str	r8, [fp, #-56]
+	.loc 3 840 0
+	add	r3, r3, r2
+	str	r3, [r4, #2440]
+.LVL1407:
+.L1590:
+	.loc 3 841 0
+	ldr	r3, [fp, #-60]
+.LVL1408:
+	cmp	r3, #0
+	bne	.L1606
+	.loc 3 897 0
+	ldr	r3, .L1621
+.LVL1409:
+	movw	r2, #3186
+	ldrh	r2, [r3, r2]
+	cmp	r2, #0
+	bne	.L1607
+	.loc 3 897 0 is_stmt 0 discriminator 1
+	movw	r2, #2276
+	ldrh	r3, [r3, r2]
+	cmp	r3, #31
+	bhi	.L1587
+.L1607:
+	.loc 3 898 0 is_stmt 1
+	mov	r1, #1
+	mov	r0, #0
+.LVL1410:
+	bl	rk_ftl_garbage_collect
+.LVL1411:
+	b	.L1587
+.LVL1412:
+.L1606:
+	.loc 3 842 0
+	mov	r2, #0
+	sub	r1, fp, #48
+	mov	r0, r5
+.LVL1413:
+	bl	log2phys
+.LVL1414:
+	.loc 3 843 0
+	ldr	r2, [fp, #-48]
+	cmn	r2, #1
+	moveq	r10, #0
+.LVL1415:
+	beq	.L1592
+	.loc 3 850 0
+	ldr	r3, [r4, #3792]
+	mov	r1, #20
+	ldrh	r10, [r4, #34]
+.LVL1416:
+	mla	r3, r1, r6, r3
+	str	r2, [r3, #4]
+	.loc 3 851 0
+	ldr	r2, [fp, #-68]
+.LVL1417:
+	cmp	r5, r2
+	bne	.L1596
+	.loc 3 852 0
+	ldr	r2, [r4, #3776]
+.LVL1418:
+	.loc 3 853 0
+	mov	r1, r10
+	mov	r0, r7
+	.loc 3 852 0
+	str	r3, [fp, #-88]
+	str	r2, [r3, #8]
+	.loc 3 853 0
+	bl	__aeabi_uidivmod
+.LVL1419:
+	ldr	r3, [fp, #-76]
+.LVL1420:
+	.loc 3 854 0
+	sub	r2, r10, r1
+	.loc 3 853 0
+	str	r1, [fp, #-80]
+.LVL1421:
+	cmp	r3, r2
+	movcs	r3, r2
+.LVL1422:
+	.loc 3 856 0
+	cmp	r3, r10
+	str	r3, [fp, #-84]
+	ldr	r3, [fp, #-88]
+	.loc 3 857 0
+	streq	r9, [r3, #8]
+.LVL1423:
+.L1597:
+	.loc 3 866 0
+	ldrh	r2, [r4, #88]
+.LVL1424:
+	ldr	r1, [r4, #3772]
+	.loc 3 867 0
+	str	r5, [r3, #16]
+	.loc 3 866 0
+	mul	r2, r6, r2
+	.loc 3 868 0
+	add	r6, r6, #1
+	.loc 3 866 0
+	bic	r2, r2, #3
+	add	r2, r1, r2
+	str	r2, [r3, #12]
+	b	.L1595
+.LVL1425:
+.L1594:
+	.loc 3 845 0
+	mla	r0, r0, r5, r10
+.LVL1426:
+	.loc 3 846 0
+	ldr	r3, [fp, #-64]
+	cmp	r3, r0
+	movhi	r3, #1
+	movls	r3, #0
+	cmp	r7, r0
+	movhi	r3, #0
+	cmp	r3, #0
+	beq	.L1593
+	.loc 3 847 0
+	sub	r0, r0, r7
+.LVL1427:
+.LBB512:
+.LBB513:
+.LBB514:
+	.loc 1 202 0
+	mov	r1, #512
+	add	r0, r9, r0, lsl #9
+	bl	__memzero
+.LVL1428:
+.L1593:
+.LBE514:
+.LBE513:
+.LBE512:
+	.loc 3 844 0 discriminator 2
+	add	r10, r10, #1
+.L1592:
+	.loc 3 844 0 is_stmt 0 discriminator 1
+	ldrh	r0, [r4, #34]
+.LVL1429:
+	cmp	r10, r0
+	bcc	.L1594
+.L1595:
+	.loc 3 873 0 is_stmt 1
+	ldr	r3, [fp, #-60]
+.LVL1430:
+	.loc 3 871 0
+	add	r5, r5, #1
+	.loc 3 873 0
+	subs	r3, r3, #1
+	str	r3, [fp, #-60]
+	beq	.L1599
+	.loc 3 873 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #8]
+.LVL1431:
+	cmp	r6, r3, lsl #2
+	bne	.L1590
+.LVL1432:
+.L1599:
+	.loc 3 874 0 is_stmt 1
+	cmp	r6, #0
+	beq	.L1590
+	.loc 3 875 0
+	mov	r2, #0
+	mov	r1, r6
+	ldr	r0, [r4, #3792]
+	.loc 3 876 0
+	mov	r10, #0
+.LVL1433:
+	.loc 3 875 0
+	bl	FlashReadPages
+.LVL1434:
+	.loc 3 882 0
+	lsl	r3, r8, #9
+	str	r3, [fp, #-96]
+	.loc 3 879 0
+	ldr	r3, [fp, #-80]
+.LVL1435:
+	lsl	r3, r3, #9
+.LVL1436:
+	str	r3, [fp, #-88]
+	ldr	r3, [fp, #-84]
+	lsl	r3, r3, #9
+	str	r3, [fp, #-92]
+.L1605:
+	mov	r3, #20
+	.loc 3 877 0
+	ldr	r2, [r4, #3792]
+	mul	r3, r3, r10
+	ldr	r0, [fp, #-68]
+.LVL1437:
+	add	r2, r2, r3
+	ldr	r1, [r2, #16]
+	cmp	r0, r1
+	bne	.L1601
+	.loc 3 878 0
+	ldr	r1, [r2, #8]
+	ldr	r2, [r4, #3776]
+	cmp	r1, r2
+	bne	.L1602
+	str	r3, [fp, #-100]
+	.loc 3 879 0
+	mov	r0, r9
+.LVL1438:
+	ldr	r3, [fp, #-88]
+	ldr	r2, [fp, #-92]
+	add	r1, r1, r3
+.LVL1439:
+.L1620:
+	.loc 3 882 0
+	bl	ftl_memcpy
+.LVL1440:
+	ldr	r3, [fp, #-100]
+.LVL1441:
+.L1602:
+	.loc 3 884 0
+	ldr	r2, [r4, #3792]
+	ldr	r0, [r2, r3]
+.LVL1442:
+	add	ip, r2, r3
+	cmn	r0, #1
+	.loc 3 885 0
+	ldreq	r1, [r4, #2688]
+	.loc 3 886 0
+	streq	r0, [fp, #-56]
+	.loc 3 885 0
+	addeq	r1, r1, #1
+	streq	r1, [r4, #2688]
+	.loc 3 888 0
+	ldr	r3, [r2, r3]
+	cmp	r3, #256
+	bne	.L1604
+.LBB515:
+	.loc 3 889 0
+	ldr	r0, [ip, #4]
+	ubfx	r0, r0, #10, #16
+	bl	P2V_block_in_plane
+.LVL1443:
+	.loc 3 890 0
+	bl	FtlGcRefreshBlock
+.LVL1444:
+.L1604:
+.LBE515:
+	.loc 3 876 0 discriminator 2
+	add	r10, r10, #1
+	cmp	r6, r10
+	bne	.L1605
+	.loc 3 893 0
+	mov	r6, #0
+	b	.L1590
+.LVL1445:
+.L1596:
+	.loc 3 858 0
+	ldr	r2, [fp, #-72]
+.LVL1446:
+	cmp	r5, r2
+	bne	.L1598
+	.loc 3 859 0
+	ldr	r2, [r4, #3768]
+.LVL1447:
+	.loc 3 860 0
+	ldr	r1, [fp, #-64]
+	.loc 3 859 0
+	str	r2, [r3, #8]
+	.loc 3 860 0
+	mul	r2, r10, r5
+	sub	r8, r1, r2
+	.loc 3 861 0
+	cmp	r10, r8
+	.loc 3 862 0
+	subeq	r2, r2, r7
+	addeq	r2, r9, r2, lsl #9
+	streq	r2, [r3, #8]
+	b	.L1597
+.LVL1448:
+.L1598:
+	.loc 3 864 0
+	mul	r10, r5, r10
+	sub	r10, r10, r7
+	add	r10, r9, r10, lsl #9
+	str	r10, [r3, #8]
+	b	.L1597
+.LVL1449:
+.L1601:
+	.loc 3 880 0
+	ldr	r0, [fp, #-72]
+.LVL1450:
+	cmp	r0, r1
+	bne	.L1602
+	.loc 3 881 0
+	ldr	r1, [r2, #8]
+	ldr	r2, [r4, #3768]
+	cmp	r1, r2
+	bne	.L1602
+	str	r3, [fp, #-100]
+	.loc 3 882 0
+	ldrh	r0, [r4, #34]
+.LVL1451:
+	ldr	r3, [fp, #-72]
+.LVL1452:
+	ldr	r2, [fp, #-96]
+	mul	r0, r3, r0
+	sub	r0, r0, r7
+	add	r0, r9, r0, lsl #9
+	b	.L1620
+.LVL1453:
+.L1608:
+	.loc 3 830 0
+	mvn	r3, #0
+.L1609:
+	str	r3, [fp, #-56]
+	b	.L1587
+.L1622:
+	.align	2
+.L1621:
+	.word	.LANCHOR0
+	.word	.LANCHOR2
+.LFE154:
+	.fnend
+	.size	FtlRead, .-FtlRead
+	.align	2
+	.global	sftl_read
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	sftl_read, %function
+sftl_read:
+	.fnstart
+.LFB159:
+	.loc 3 1201 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL1454:
+	.movsp ip
+	mov	ip, sp
+.LCFI432:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI433:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI434:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 1201 0
+	.loc 3 1202 0
+	mov	r3, r2
+	mov	r2, r1
+.LVL1455:
+	mov	r1, r0
+.LVL1456:
+	mov	r0, #0
+.LVL1457:
+	bl	FtlRead
+.LVL1458:
+	.loc 3 1204 0
+	ldmfd	sp, {fp, sp, pc}
+.LFE159:
+	.fnend
+	.size	sftl_read, .-sftl_read
+	.align	2
+	.global	FtlWrite
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlWrite, %function
+FtlWrite:
+	.fnstart
+.LFB157:
+	.loc 3 959 0
+	@ args = 0, pretend = 0, frame = 64
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL1459:
+	.movsp ip
+	mov	ip, sp
+.LCFI435:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI436:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI437:
+	.pad #68
+	sub	sp, sp, #68
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 959 0
+	.loc 3 967 0
+	cmp	r0, #16
+	.loc 3 959 0
+	mov	r9, r1
+	str	r2, [fp, #-80]
+	str	r3, [fp, #-84]
+	.loc 3 967 0
+	bne	.L1625
+	.loc 3 968 0
+	mov	r2, r3
+.LVL1460:
+	ldr	r1, [fp, #-80]
+	add	r0, r9, #256
+.LVL1461:
+	bl	FtlVendorPartWrite
+.LVL1462:
+.L1624:
+	.loc 3 1150 0
+	sub	sp, fp, #40
+.LCFI438:
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.LVL1463:
+.L1625:
+.LCFI439:
+	.loc 3 971 0
+	ldr	r3, [fp, #-80]
+.LVL1464:
+	ldr	r10, .L1690
+	add	r6, r1, r3
+	ldr	r3, [r10, #116]
+.LVL1465:
+	cmp	r6, r3
+	.loc 3 972 0
+	mvnhi	r0, #0
+.LVL1466:
+	.loc 3 971 0
+	bhi	.L1624
+	.loc 3 971 0 is_stmt 0 discriminator 1
+	ldr	r5, .L1690+4
+	ldr	r0, [r5]
+	cmn	r0, #1
+	beq	.L1624
+	.loc 3 974 0 is_stmt 1
+	ldr	r3, .L1690+8
+	mov	r2, #2048
+	.loc 3 975 0
+	ldrh	r4, [r10, #34]
+	mov	r0, r9
+	.loc 3 974 0
+	str	r2, [r3, #-4060]
+	.loc 3 975 0
+	mov	r1, r4
+	bl	__aeabi_uidiv
+.LVL1467:
+	.loc 3 976 0
+	mov	r1, r4
+	.loc 3 975 0
+	mov	r8, r0
+.LVL1468:
+	.loc 3 976 0
+	sub	r0, r6, #1
+	bl	__aeabi_uidiv
+.LVL1469:
+	.loc 3 977 0
+	sub	r6, r0, r8
+	.loc 3 980 0
+	ldr	r7, [r10, #3948]
+	.loc 3 977 0
+	add	r3, r6, #1
+.LVL1470:
+	.loc 3 979 0
+	add	r2, r6, #1
+.LVL1471:
+	.loc 3 977 0
+	str	r3, [fp, #-76]
+	.loc 3 979 0
+	ldr	r3, [r10, #2448]
+	.loc 3 980 0
+	cmp	r7, #0
+	.loc 3 976 0
+	str	r0, [fp, #-92]
+.LVL1472:
+	.loc 3 979 0
+	add	r3, r3, r2
+	str	r3, [r10, #2448]
+	.loc 3 980 0
+	beq	.L1627
+	.loc 3 981 0
+	ldr	r3, [r7, #16]
+	cmp	r8, r3
+	beq	.L1628
+	.loc 3 982 0
+	bl	FtlCacheWriteBack
+.LVL1473:
+.L1627:
+	.loc 3 1005 0
+	ldr	r3, [r5, #8]
+	ldr	r5, .L1690+12
+.LVL1474:
+	cmp	r3, #0
+	beq	.L1630
+	.loc 3 1005 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r5, #4]
+	.loc 3 1006 0 is_stmt 1 discriminator 1
+	add	r0, r5, #48
+	cmp	r3, #0
+	moveq	r5, r0
+.L1630:
+	.loc 3 1009 0
+	ldr	r4, .L1690
+	.loc 3 1065 0
+	mov	r6, r8
+.LVL1475:
+.L1631:
+	.loc 3 1008 0
+	ldr	r3, [fp, #-76]
+.LVL1476:
+	cmp	r3, #0
+	beq	.L1665
+	.loc 3 1009 0
+	ldrb	r2, [r5, #6]	@ zero_extendqisi2
+.LVL1477:
+	ldrh	r3, [r4, #8]
+.LVL1478:
+	cmp	r2, r3
+	bcc	.L1632
+	.loc 3 1009 0 is_stmt 0 discriminator 1
+	movw	r2, #1009
+	ldr	r1, .L1690+16
+	ldr	r0, .L1690+20
+	bl	printk
+.LVL1479:
+.L1632:
+	.loc 3 1010 0 is_stmt 1
+	ldrh	r10, [r5, #4]
+	cmp	r10, #0
+	bne	.L1633
+	.loc 3 1011 0
+	bl	FtlCacheWriteBack
+.LVL1480:
+	.loc 3 1013 0
+	ldr	r3, .L1690+12
+	ldr	r7, .L1690+4
+	cmp	r5, r3
+	bne	.L1634
+	.loc 3 1014 0
+	add	r0, r5, #48
+	ldrh	r10, [r0, #4]
+	cmp	r10, #0
+	bne	.L1635
+	.loc 3 1015 0
+	bl	allocate_new_data_superblock
+.LVL1481:
+	.loc 3 1016 0
+	str	r10, [r7, #8]
+.L1635:
+	.loc 3 1018 0
+	ldr	r0, .L1690+12
+	bl	allocate_new_data_superblock
+.LVL1482:
+	.loc 3 1020 0
+	ldr	r5, .L1690+12
+.LVL1483:
+	.loc 3 1019 0
+	ldr	r3, [r7, #8]
+	.loc 3 1020 0
+	add	r0, r5, #48
+	cmp	r3, #0
+	movne	r5, r0
+.LVL1484:
+.L1636:
+	.loc 3 1030 0
+	ldrh	r3, [r5, #4]
+	cmp	r3, #0
+	bne	.L1633
+	.loc 3 1031 0
+	mov	r0, r5
+	bl	allocate_new_data_superblock
+.LVL1485:
+.L1633:
+	.loc 3 1040 0
+	ldrh	r3, [r5, #4]
+	ldr	r2, [fp, #-76]
+.LVL1486:
+	cmp	r3, r2
+	movcs	r3, r2
+	.loc 3 1038 0
+	ldrb	r2, [r5, #7]	@ zero_extendqisi2
+.LVL1487:
+	lsl	r2, r2, #2
+	cmp	r3, r2
+	movcs	r3, r2
+	.loc 3 1042 0
+	ldrb	r2, [r5, #6]	@ zero_extendqisi2
+	str	r3, [fp, #-108]
+	ldrh	r3, [r4, #8]
+	cmp	r2, r3
+	bcc	.L1637
+	.loc 3 1042 0 is_stmt 0 discriminator 1
+	movw	r2, #1042
+	ldr	r1, .L1690+16
+	ldr	r0, .L1690+20
+	bl	printk
+.LVL1488:
+.L1637:
+	.loc 3 1065 0 is_stmt 1 discriminator 1
+	mov	r3, #0
+.LVL1489:
+.L1689:
+	.loc 3 1043 0 discriminator 2
+	str	r3, [fp, #-72]
+	ldr	r3, [fp, #-72]
+	ldr	r2, [fp, #-108]
+	cmp	r3, r2
+	bne	.L1659
+.L1639:
+	.loc 3 1124 0
+	ldr	r3, [r4, #3948]
+.LVL1490:
+	cmp	r3, #0
+	beq	.L1660
+	.loc 3 1126 0
+	ldr	r3, [fp, #-76]
+.LVL1491:
+	sub	r3, r3, #1
+	str	r3, [fp, #-76]
+	.loc 3 1127 0
+	ldr	r3, [fp, #-72]
+.LVL1492:
+	subs	r3, r3, #1
+	str	r3, [fp, #-72]
+	bne	.L1660
+.LVL1493:
+.L1665:
+	.loc 3 1134 0
+	ldr	r3, [fp, #-92]
+.LVL1494:
+	mov	r0, #0
+	sub	r1, r3, r8
+	bl	rk_ftl_garbage_collect
+.LVL1495:
+	.loc 3 1136 0
+	ldr	r2, .L1690
+	movw	r3, #2276
+	ldrh	r3, [r2, r3]
+	cmp	r3, #15
+	bhi	.L1662
+	.loc 3 1138 0
+	ldr	r4, .L1690+24
+	ldr	r5, .L1690+28
+.LVL1496:
+.L1685:
+	ldrh	r3, [r4]
+	movw	r2, #65535
+	cmp	r3, r2
+	bne	.L1666
+	.loc 3 1138 0 is_stmt 0 discriminator 1
+	ldrh	r2, [r5]
+	cmp	r2, r3
+	bne	.L1666
+	.loc 3 1139 0 is_stmt 1
+	mov	r0, #0
+	bl	List_get_gc_head_node
+.LVL1497:
+	uxth	r0, r0
+	bl	FtlGcRefreshBlock
+.LVL1498:
+.L1666:
+	.loc 3 1140 0
+	ldr	r3, .L1690+32
+	.loc 3 1142 0
+	mov	r1, #1
+	.loc 3 1140 0
+	mov	r2, #128
+	.loc 3 1142 0
+	mov	r0, r1
+	.loc 3 1140 0
+	strh	r2, [r3]	@ movhi
+	.loc 3 1141 0
+	strh	r2, [r3, #-2]	@ movhi
+	.loc 3 1142 0
+	bl	rk_ftl_garbage_collect
+.LVL1499:
+	.loc 3 1143 0
+	mov	r1, #1
+	mov	r0, #0
+	bl	rk_ftl_garbage_collect
+.LVL1500:
+	.loc 3 1144 0
+	ldr	r3, .L1690+36
+	ldrh	r3, [r3]
+	cmp	r3, #8
+	bls	.L1685
+	b	.L1662
+.LVL1501:
+.L1628:
+	.loc 3 984 0
+	ldr	r3, [r10, #2452]
+	.loc 3 985 0
+	mov	r1, r4
+	mov	r0, r9
+	.loc 3 984 0
+	add	r3, r3, #1
+	str	r3, [r10, #2452]
+	.loc 3 985 0
+	bl	__aeabi_uidivmod
+.LVL1502:
+	ldr	r2, [fp, #-80]
+.LVL1503:
+	.loc 3 986 0
+	sub	r4, r4, r1
+	.loc 3 989 0
+	ldr	r0, [r7, #8]
+	.loc 3 985 0
+	mov	r3, r1
+	.loc 3 989 0
+	ldr	r1, [fp, #-84]
+	cmp	r2, r4
+	movcc	r4, r2
+	lsl	r10, r4, #9
+	add	r0, r0, r3, lsl #9
+	mov	r2, r10
+.LVL1504:
+	bl	ftl_memcpy
+.LVL1505:
+	.loc 3 991 0
+	cmp	r6, #0
+	bne	.L1629
+.LVL1506:
+.L1662:
+	.loc 3 992 0
+	mov	r0, #0
+	b	.L1624
+.LVL1507:
+.L1629:
+	.loc 3 993 0
+	ldr	r3, [fp, #-80]
+.LVL1508:
+	.loc 3 994 0
+	add	r9, r9, r4
+	.loc 3 996 0
+	add	r8, r8, #1
+	.loc 3 993 0
+	sub	r3, r3, r4
+	str	r3, [fp, #-80]
+	.loc 3 995 0
+	ldr	r3, [fp, #-84]
+.LVL1509:
+	add	r3, r3, r10
+	str	r3, [fp, #-84]
+	.loc 3 997 0
+	bl	FtlCacheWriteBack
+.LVL1510:
+	str	r6, [fp, #-76]
+	b	.L1627
+.LVL1511:
+.L1634:
+	.loc 3 1025 0
+	ldrh	r2, [r3, #4]
+	.loc 3 1024 0
+	str	r10, [r7, #8]
+	.loc 3 1025 0
+	cmp	r2, #0
+	movne	r5, r3
+	bne	.L1633
+	.loc 3 1026 0
+	mov	r0, r5
+	bl	allocate_new_data_superblock
+.LVL1512:
+	b	.L1636
+.LVL1513:
+.L1659:
+	.loc 3 1044 0
+	ldrh	r3, [r5, #4]
+.LVL1514:
+	cmp	r3, #0
+	beq	.L1639
+	.loc 3 1048 0
+	mov	r2, #0
+	sub	r1, fp, #68
+	mov	r0, r6
+	mov	r7, #20
+	bl	log2phys
+.LVL1515:
+	.loc 3 1049 0
+	mov	r0, r5
+	bl	get_new_active_ppa
+.LVL1516:
+	.loc 3 1052 0
+	ldrh	r2, [r4, #88]
+	ldr	r1, [fp, #-72]
+.LVL1517:
+	ldr	r3, [fp, #-72]
+.LVL1518:
+	mul	r1, r2, r1
+	mul	r7, r7, r3
+	.loc 3 1051 0
+	ldr	r3, [r4, #3800]
+.LVL1519:
+	.loc 3 1052 0
+	bic	r1, r1, #3
+	str	r1, [fp, #-100]
+	.loc 3 1051 0
+	add	r3, r3, r7
+	.loc 3 1052 0
+	ldr	r1, [r4, #3772]
+	.loc 3 1051 0
+	str	r0, [r3, #4]
+	.loc 3 1052 0
+	ldr	r0, [fp, #-100]
+	str	r1, [fp, #-104]
+	.loc 3 1053 0
+	str	r6, [r3, #16]
+	.loc 3 1052 0
+	add	r10, r1, r0
+	.loc 3 1056 0
+	mov	r1, #0
+	.loc 3 1052 0
+	str	r10, [r3, #12]
+	.loc 3 1056 0
+	mov	r0, r10
+	bl	ftl_memset
+.LVL1520:
+	.loc 3 1058 0
+	ldr	r3, [fp, #-92]
+.LVL1521:
+	cmp	r6, r3
+	cmpne	r6, r8
+	ldrh	r3, [r4, #34]
+.LVL1522:
+	bne	.L1640
+	.loc 3 1059 0
+	cmp	r6, r8
+	bne	.L1641
+	.loc 3 1060 0
+	mov	r1, r3
+	mov	r0, r9
+	str	r3, [fp, #-88]
+	bl	__aeabi_uidivmod
+.LVL1523:
+	.loc 3 1061 0
+	ldr	r3, [fp, #-88]
+	ldr	r2, [fp, #-80]
+.LVL1524:
+	.loc 3 1060 0
+	str	r1, [fp, #-96]
+	.loc 3 1061 0
+	sub	r3, r3, r1
+	cmp	r3, r2
+	movcs	r3, r2
+	str	r3, [fp, #-88]
+.L1642:
+	.loc 3 1069 0
+	ldrh	r3, [r4, #34]
+	ldr	r2, [fp, #-88]
+.LVL1525:
+	cmp	r2, r3
+	.loc 3 1071 0
+	ldr	r3, [r4, #3800]
+	.loc 3 1069 0
+	bne	.L1643
+	.loc 3 1070 0
+	cmp	r6, r8
+	.loc 3 1071 0
+	add	r7, r3, r7
+	ldreq	r3, [fp, #-84]
+.LVL1526:
+	.loc 3 1070 0
+	beq	.L1687
+	.loc 3 1073 0
+	ldr	r3, [fp, #-88]
+.LVL1527:
+	mul	r2, r3, r6
+	ldr	r3, [fp, #-84]
+.LVL1528:
+	sub	r2, r2, r9
+	add	r2, r3, r2, lsl #9
+	str	r2, [r7, #8]
+.LVL1529:
+.L1645:
+	.loc 3 1116 0
+	ldrb	r2, [r5, #6]	@ zero_extendqisi2
+	ldrh	r3, [r4, #8]
+.LVL1530:
+	cmp	r2, r3
+	bcc	.L1656
+	.loc 3 1116 0 is_stmt 0 discriminator 1
+	movw	r2, #1116
+	ldr	r1, .L1690+16
+	ldr	r0, .L1690+20
+	bl	printk
+.LVL1531:
+.L1656:
+	.loc 3 1117 0 is_stmt 1
+	ldr	r3, .L1690+40
+	ldr	r2, [fp, #-104]
+	ldr	r1, [fp, #-100]
+	strh	r3, [r2, r1]	@ movhi
+	.loc 3 1118 0
+	ldr	r3, [r4, #2476]
+	.loc 3 1119 0
+	str	r6, [r10, #8]
+	.loc 3 1122 0
+	add	r6, r6, #1
+	.loc 3 1118 0
+	str	r3, [r10, #4]
+	add	r3, r3, #1
+	cmn	r3, #1
+	moveq	r3, #0
+	str	r3, [r4, #2476]
+	.loc 3 1120 0
+	ldr	r3, [fp, #-68]
+.LVL1532:
+	str	r3, [r10, #12]
+	.loc 3 1121 0
+	ldrh	r3, [r5]
+.LVL1533:
+	strh	r3, [r10, #2]	@ movhi
+	.loc 3 1043 0
+	ldr	r3, [fp, #-72]
+.LVL1534:
+	add	r3, r3, #1
+	b	.L1689
+.LVL1535:
+.L1641:
+	.loc 3 1066 0
+	ldr	r2, [fp, #-80]
+.LVL1536:
+	smulbb	r3, r3, r6
+	add	r2, r9, r2
+.LVL1537:
+	sub	r2, r2, r3
+	uxth	r3, r2
+	str	r3, [fp, #-88]
+	.loc 3 1065 0
+	mov	r3, #0
+	str	r3, [fp, #-96]
+	b	.L1642
+.L1643:
+	.loc 3 1076 0
+	cmp	r6, r8
+	.loc 3 1077 0
+	add	r3, r3, r7
+	ldreq	r2, [r4, #3776]
+	.loc 3 1079 0
+	ldrne	r2, [r4, #3768]
+	str	r2, [r3, #8]
+	.loc 3 1081 0
+	ldr	r3, [fp, #-68]
+	cmn	r3, #1
+	beq	.L1648
+.LBB516:
+	.loc 3 1083 0
+	str	r3, [fp, #-60]
+	.loc 3 1087 0
+	mov	r1, #1
+	.loc 3 1085 0
+	ldr	r3, [r4, #3800]
+	.loc 3 1087 0
+	sub	r0, fp, #64
+	.loc 3 1084 0
+	str	r6, [fp, #-48]
+	.loc 3 1085 0
+	add	r3, r3, r7
+	ldr	r2, [r3, #8]
+	.loc 3 1086 0
+	ldr	r3, [r3, #12]
+	.loc 3 1085 0
+	str	r2, [fp, #-56]
+	.loc 3 1087 0
+	mov	r2, #0
+	.loc 3 1086 0
+	str	r3, [fp, #-52]
+	.loc 3 1087 0
+	bl	FlashReadPages
+.LVL1538:
+	.loc 3 1088 0
+	ldr	r3, [fp, #-64]
+	cmn	r3, #1
+	.loc 3 1089 0
+	ldreq	r3, [r4, #2688]
+	addeq	r3, r3, #1
+	streq	r3, [r4, #2688]
+	.loc 3 1088 0
+	beq	.L1652
+	.loc 3 1091 0
+	ldr	r3, [r10, #8]
+	cmp	r6, r3
+	beq	.L1651
+	.loc 3 1092 0
+	ldr	r3, [r4, #2688]
+	.loc 3 1093 0
+	mov	r2, r6
+	ldr	r0, .L1690+44
+	.loc 3 1092 0
+	add	r3, r3, #1
+	str	r3, [r4, #2688]
+	.loc 3 1093 0
+	ldr	r1, [r10, #8]
+	bl	printk
+.LVL1539:
+.L1651:
+	.loc 3 1095 0
+	ldr	r3, [r10, #8]
+	cmp	r6, r3
+	beq	.L1652
+	.loc 3 1095 0 is_stmt 0 discriminator 1
+	movw	r2, #1095
+	ldr	r1, .L1690+16
+	ldr	r0, .L1690+20
+	bl	printk
+.LVL1540:
+.L1652:
+	ldr	r3, [fp, #-88]
+.LBE516:
+	.loc 3 1101 0 is_stmt 1
+	cmp	r6, r8
+	lsl	r2, r3, #9
+	bne	.L1653
+	.loc 3 1102 0
+	ldr	r3, [r4, #3800]
+	ldr	r1, [fp, #-84]
+	add	r3, r3, r7
+	ldr	r0, [r3, #8]
+	ldr	r3, [fp, #-96]
+	add	r0, r0, r3, lsl #9
+	bl	ftl_memcpy
+.LVL1541:
+	.loc 3 1106 0
+	ldr	r3, [fp, #-92]
+.LVL1542:
+	cmp	r6, r3
+	bne	.L1645
+.L1654:
+	.loc 3 1107 0
+	ldrh	r3, [r5, #4]
+.LVL1543:
+	cmp	r3, #0
+	.loc 3 1108 0
+	ldrne	r3, [r4, #3800]
+	addne	r7, r3, r7
+	.loc 3 1109 0
+	ldrne	r3, .L1690+8
+	.loc 3 1108 0
+	strne	r7, [r4, #3948]
+	.loc 3 1109 0
+	strne	r5, [r3, #-4076]
+	b	.L1645
+.L1648:
+	.loc 3 1098 0
+	ldr	r3, [r4, #3800]
+	mov	r1, #0
+	ldrh	r2, [r4, #86]
+	add	r3, r3, r7
+	ldr	r0, [r3, #8]
+	bl	ftl_memset
+.LVL1544:
+	b	.L1652
+.L1653:
+	.loc 3 1104 0
+	ldrh	r1, [r4, #34]
+	ldr	r0, [fp, #-84]
+.LVL1545:
+	ldr	r3, [r4, #3800]
+	mul	r1, r6, r1
+	add	r3, r3, r7
+	sub	r1, r1, r9
+	add	r1, r0, r1, lsl #9
+	ldr	r0, [r3, #8]
+.LVL1546:
+	bl	ftl_memcpy
+.LVL1547:
+	b	.L1654
+.L1640:
+	.loc 3 1114 0
+	ldr	r2, [r4, #3800]
+	mul	r3, r6, r3
+	add	r7, r2, r7
+	ldr	r2, [fp, #-84]
+.LVL1548:
+	sub	r3, r3, r9
+	add	r3, r2, r3, lsl #9
+.L1687:
+	str	r3, [r7, #8]
+	b	.L1645
+.LVL1549:
+.L1660:
+	.loc 3 1130 0
+	mov	r3, r5
+.LVL1550:
+	mov	r2, #0
+	ldr	r1, [fp, #-72]
+	ldr	r0, [r4, #3800]
+	bl	FtlProgPages
+.LVL1551:
+	.loc 3 1131 0
+	ldr	r3, [fp, #-76]
+.LVL1552:
+	ldr	r2, [fp, #-72]
+.LVL1553:
+	cmp	r3, r2
+	bcs	.L1663
+	.loc 3 1131 0 is_stmt 0 discriminator 1
+	movw	r2, #1131
+.LVL1554:
+	ldr	r1, .L1690+16
+	ldr	r0, .L1690+20
+	bl	printk
+.LVL1555:
+.L1663:
+	.loc 3 1132 0 is_stmt 1
+	ldr	r3, [fp, #-76]
+	ldr	r2, [fp, #-72]
+	sub	r3, r3, r2
+	str	r3, [fp, #-76]
+	b	.L1631
+.L1691:
+	.align	2
+.L1690:
+	.word	.LANCHOR0
+	.word	.LANCHOR2
+	.word	.LANCHOR3
+	.word	.LANCHOR0+2280
+	.word	.LANCHOR1+574
+	.word	.LC1
+	.word	.LANCHOR0+2568
+	.word	.LANCHOR0+3182
+	.word	.LANCHOR0+3130
+	.word	.LANCHOR0+2276
+	.word	-3947
+	.word	.LC101
+.LFE157:
+	.fnend
+	.size	FtlWrite, .-FtlWrite
+	.align	2
+	.global	sftl_write
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	sftl_write, %function
+sftl_write:
+	.fnstart
+.LFB160:
+	.loc 3 1207 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL1556:
+	.movsp ip
+	mov	ip, sp
+.LCFI440:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI441:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI442:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 1207 0
+	.loc 3 1208 0
+	mov	r3, r2
+	mov	r2, r1
+.LVL1557:
+	mov	r1, r0
+.LVL1558:
+	mov	r0, #0
+.LVL1559:
+	bl	FtlWrite
+.LVL1560:
+	.loc 3 1209 0
+	ldmfd	sp, {fp, sp, pc}
+.LFE160:
+	.fnend
+	.size	sftl_write, .-sftl_write
+	.align	2
+	.global	FtlLoadSysInfo
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlLoadSysInfo, %function
+FtlLoadSysInfo:
+	.fnstart
+.LFB214:
+	.loc 2 1360 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI443:
+	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
+.LCFI444:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI445:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 1360 0
+	.loc 2 1368 0
+	mov	r1, #0
+	.loc 2 1365 0
+	ldr	r4, .L1714
+	ldr	r6, .L1714+4
+	ldr	r3, [r4, #2244]
+	.loc 2 1368 0
+	ldrh	r2, [r4, #16]
+	ldr	r0, [r4, #2260]
+	.loc 2 1365 0
+	str	r3, [r4, #3232]
+	.loc 2 1366 0
+	ldr	r3, [r4, #3244]
+	.loc 2 1368 0
+	lsl	r2, r2, #1
+	.loc 2 1366 0
+	str	r3, [r4, #3236]
+	.loc 2 1368 0
+	bl	ftl_memset
+.LVL1561:
+	.loc 2 1369 0
+	movw	r3, #2556
+	ldrh	r0, [r4, r3]
+	movw	r3, #65535
+	cmp	r0, r3
+	bne	.L1694
+.L1702:
+	.loc 2 1370 0
+	mvn	r0, #0
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
+.L1694:
+	.loc 2 1378 0
+	ldr	r7, .L1714+8
+	.loc 2 1372 0
+	mov	r1, #1
+	.loc 2 1381 0
+	ldr	r8, .L1714+12
+	.loc 2 1372 0
+	bl	FtlGetLastWrittenPage
+.LVL1562:
+	sxth	r5, r0
+.LVL1563:
+	.loc 2 1373 0
+	add	r0, r0, #1
+	strh	r0, [r6, #2]	@ movhi
+.L1696:
+	.loc 2 1375 0
+	cmp	r5, #0
+	bge	.L1699
+	.loc 2 1388 0
+	movw	r2, #1388
+	ldr	r1, .L1714+16
+	ldr	r0, .L1714+20
+	bl	printk
+.LVL1564:
+.L1698:
+	.loc 2 1390 0
+	ldrh	r3, [r4, #16]
+	ldrh	r2, [r4, #86]
+	add	r3, r3, #24
+	cmp	r2, r3, lsl #1
+	bcs	.L1701
+	.loc 2 1390 0 is_stmt 0 discriminator 1
+	movw	r2, #1390
+	ldr	r1, .L1714+16
+	ldr	r0, .L1714+20
+	bl	printk
+.LVL1565:
+.L1701:
+	.loc 2 1392 0 is_stmt 1
+	ldr	r5, .L1714+24
+.LVL1566:
+	mov	r2, #48
+	ldr	r1, [r4, #3232]
+	mov	r0, r5
+	bl	ftl_memcpy
+.LVL1567:
+	.loc 2 1393 0
+	ldrh	r2, [r4, #16]
+	ldr	r1, [r4, #3232]
+	ldr	r0, [r4, #2260]
+	lsl	r2, r2, #1
+	add	r1, r1, #48
+	bl	ftl_memcpy
+.LVL1568:
+	.loc 2 1394 0
+	ldrh	r1, [r4, #16]
+	ldr	r3, [r4, #3232]
+	ldr	r0, [r4]
+	lsr	r2, r1, #3
+	add	r1, r1, #24
+	lsl	r1, r1, #1
+	add	r2, r2, #4
+	bic	r1, r1, #3
+	add	r1, r3, r1
+	bl	ftl_memcpy
+.LVL1569:
+	.loc 2 1396 0
+	ldr	r2, [r4, #2504]
+	ldr	r3, .L1714+12
+	cmp	r2, r3
+	bne	.L1702
+	.loc 2 1400 0
+	ldrb	r2, [r4, #2514]	@ zero_extendqisi2
+	ldrh	r3, [r4, #30]
+	.loc 2 1399 0
+	ldrh	r7, [r5, #8]
+	.loc 2 1400 0
+	cmp	r2, r3
+	.loc 2 1399 0
+	strh	r7, [r6, #6]	@ movhi
+	.loc 2 1400 0
+	bne	.L1702
+	.loc 2 1403 0
+	ldr	r3, .L1714+28
+	.loc 2 1405 0
+	ldrh	r2, [r4, #34]
+	.loc 2 1406 0
+	ldr	r6, [r4, #20]
+	.loc 2 1403 0
+	str	r7, [r3, #-4056]
+	.loc 2 1404 0
+	ldrh	r3, [r4, #78]
+	.loc 2 1406 0
+	ldrh	r0, [r4, #134]
+	ldrh	r1, [r4, #8]
+	.loc 2 1404 0
+	mul	r3, r7, r3
+	.loc 2 1406 0
+	sub	r0, r6, r0
+	sub	r0, r0, r7
+	.loc 2 1404 0
+	str	r3, [r4, #2436]
+	.loc 2 1405 0
+	mul	r3, r3, r2
+	str	r3, [r4, #116]
+	.loc 2 1406 0
+	bl	__aeabi_uidiv
+.LVL1570:
+	.loc 2 1412 0
+	cmp	r7, r6
+	.loc 2 1406 0
+	movw	r3, #2552
+	strh	r0, [r4, r3]	@ movhi
+	.loc 2 1412 0
+	bls	.L1703
+	.loc 2 1412 0 is_stmt 0 discriminator 1
+	movw	r2, #1412
+	ldr	r1, .L1714+16
+	ldr	r0, .L1714+20
+	bl	printk
+.LVL1571:
+.L1703:
+	.loc 2 1414 0 is_stmt 1
+	ldrh	r0, [r5, #14]
+	movw	r3, #2280
+	ldr	r1, .L1714+32
+	.loc 2 1419 0
+	mvn	ip, #0
+	.loc 2 1414 0
+	strh	r0, [r4, r3]	@ movhi
+	.loc 2 1415 0
+	ldrh	r3, [r5, #16]
+	lsr	r2, r3, #6
+	.loc 2 1416 0
+	and	r3, r3, #63
+	strb	r3, [r4, #2286]
+	.loc 2 1417 0
+	ldrb	r3, [r4, #2515]	@ zero_extendqisi2
+	.loc 2 1415 0
+	strh	r2, [r1, #2]	@ movhi
+	.loc 2 1419 0
+	add	r2, r1, #288
+	.loc 2 1417 0
+	strb	r3, [r4, #2288]
+	.loc 2 1419 0
+	movw	r3, #2568
+	strh	ip, [r4, r3]	@ movhi
+	.loc 2 1420 0
+	mov	r3, #0
+	.loc 2 1424 0
+	ldrh	ip, [r5, #18]
+	.loc 2 1420 0
+	strh	r3, [r2, #2]	@ movhi
+	.loc 2 1424 0
+	movw	r2, #2328
+	.loc 2 1421 0
+	strb	r3, [r4, #2574]
+	.loc 2 1424 0
+	strh	ip, [r4, r2]	@ movhi
+	.loc 2 1425 0
+	ldrh	r2, [r5, #20]
+	.loc 2 1422 0
+	strb	r3, [r4, #2576]
+	.loc 2 1434 0
+	str	r3, [r4, #2460]
+	.loc 2 1435 0
+	str	r3, [r4, #2448]
+	.loc 2 1425 0
+	lsr	ip, r2, #6
+	.loc 2 1426 0
+	and	r2, r2, #63
+	strb	r2, [r4, #2334]
+	.loc 2 1427 0
+	ldrb	r2, [r4, #2516]	@ zero_extendqisi2
+	.loc 2 1425 0
+	strh	ip, [r1, #50]	@ movhi
+	.loc 2 1429 0
+	ldrh	ip, [r5, #22]
+	.loc 2 1427 0
+	strb	r2, [r4, #2336]
+	.loc 2 1429 0
+	movw	r2, #2376
+	.loc 2 1436 0
+	str	r3, [r4, #2440]
+	.loc 2 1429 0
+	strh	ip, [r4, r2]	@ movhi
+	.loc 2 1430 0
+	ldrh	r2, [r5, #24]
+	.loc 2 1437 0
+	str	r3, [r4, #2456]
+	.loc 2 1440 0
+	str	r3, [r4, #2484]
+	.loc 2 1430 0
+	lsr	ip, r2, #6
+	.loc 2 1431 0
+	and	r2, r2, #63
+	strb	r2, [r4, #2382]
+	.loc 2 1432 0
+	ldrb	r2, [r4, #2517]	@ zero_extendqisi2
+	.loc 2 1430 0
+	strh	ip, [r1, #98]	@ movhi
+	.loc 2 1432 0
+	strb	r2, [r4, #2384]
+	.loc 2 1439 0
+	ldr	r2, [r4, #2536]
+	str	r2, [r4, #2480]
+	.loc 2 1441 0
+	str	r3, [r4, #2496]
+	.loc 2 1444 0
+	ldr	r2, [r4, #2472]
+	.loc 2 1442 0
+	str	r3, [r4, #2452]
+	.loc 2 1444 0
+	ldr	r3, [r4, #2544]
+	cmp	r3, r2
+	.loc 2 1447 0
+	ldr	r2, [r4, #2476]
+	.loc 2 1445 0
+	strhi	r3, [r4, #2472]
+	.loc 2 1447 0
+	ldr	r3, [r4, #2540]
+	cmp	r3, r2
+	.loc 2 1448 0
+	strhi	r3, [r4, #2476]
+	.loc 2 1450 0
+	movw	r3, #65535
+	cmp	r0, r3
+	beq	.L1706
+	.loc 2 1451 0
+	ldr	r0, .L1714+32
+	bl	make_superblock
+.LVL1572:
+.L1706:
+	.loc 2 1453 0
+	movw	r3, #2328
+	ldrh	r2, [r4, r3]
+	movw	r3, #65535
+	cmp	r2, r3
+	beq	.L1707
+	.loc 2 1454 0
+	ldr	r0, .L1714+36
+	bl	make_superblock
+.LVL1573:
+.L1707:
+	.loc 2 1456 0
+	movw	r3, #2376
+	ldrh	r2, [r4, r3]
+	movw	r3, #65535
+	cmp	r2, r3
+	beq	.L1708
+	.loc 2 1457 0
+	ldr	r0, .L1714+40
+	bl	make_superblock
+.LVL1574:
+.L1708:
+	.loc 2 1459 0
+	movw	r3, #2568
+	ldrh	r2, [r4, r3]
+	movw	r3, #65535
+	cmp	r2, r3
+	beq	.L1709
+	.loc 2 1460 0
+	ldr	r0, .L1714+44
+	bl	make_superblock
+.LVL1575:
+.L1709:
+	.loc 2 1462 0
+	mov	r0, #0
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
+.LVL1576:
+.L1699:
+	.loc 2 1376 0
+	ldrh	r3, [r6]
+	.loc 2 1378 0
+	mov	r2, #1
+	mov	r1, r2
+	mov	r0, r7
+	.loc 2 1376 0
+	orr	r3, r5, r3, lsl #10
+	str	r3, [r4, #3228]
+	.loc 2 1377 0
+	ldr	r3, [r4, #2244]
+	str	r3, [r4, #3232]
+	.loc 2 1378 0
+	bl	FlashReadPages
+.LVL1577:
+	.loc 2 1381 0
+	ldr	r3, [r4, #3224]
+	cmn	r3, #1
+	beq	.L1697
+	.loc 2 1382 0 discriminator 1
+	ldr	r3, [r4, #2244]
+	.loc 2 1381 0 discriminator 1
+	ldr	r3, [r3]
+	cmp	r3, r8
+	bne	.L1697
+	.loc 2 1383 0
+	ldr	r3, [r4, #3244]
+	ldrh	r2, [r3]
+	.loc 2 1382 0
+	movw	r3, #61604
+	cmp	r2, r3
+	beq	.L1698
+.L1697:
+	sub	r5, r5, #1
+.LVL1578:
+	sxth	r5, r5
+.LVL1579:
+	b	.L1696
+.L1715:
+	.align	2
+.L1714:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+2556
+	.word	.LANCHOR0+3224
+	.word	1179929683
+	.word	.LANCHOR1+583
+	.word	.LC1
+	.word	.LANCHOR0+2504
+	.word	.LANCHOR3
+	.word	.LANCHOR0+2280
+	.word	.LANCHOR0+2328
+	.word	.LANCHOR0+2376
+	.word	.LANCHOR0+2568
+.LFE214:
+	.fnend
+	.size	FtlLoadSysInfo, .-FtlLoadSysInfo
+	.align	2
+	.global	FtlSysBlkInit
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	FtlSysBlkInit, %function
+FtlSysBlkInit:
+	.fnstart
+.LFB232:
+	.loc 2 2306 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI446:
+	push	{r4, r5, r6, r7, r8, r9, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, r6, r7, r8, r9, fp, ip, lr}
+.LCFI447:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI448:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 2 2306 0
+	.loc 2 2310 0
+	mov	r3, #0
+	ldr	r4, .L1732
+	add	r6, r4, #3968
+	.loc 2 2312 0
+	ldrh	r0, [r4, #12]
+	.loc 2 2310 0
+	strh	r3, [r6]	@ movhi
+	.loc 2 2312 0
+	bl	FtlFreeSysBlkQueueInit
+.LVL1580:
+	.loc 2 2313 0
+	bl	FtlScanSysBlk
+.LVL1581:
+	.loc 2 2314 0
+	movw	r3, #2556
+	ldrh	r2, [r4, r3]
+	movw	r3, #65535
+	cmp	r2, r3
+	bne	.L1717
+.L1719:
+	.loc 2 2315 0
+	mvn	r8, #0
+.L1716:
+	.loc 2 2398 0
+	mov	r0, r8
+	ldmfd	sp, {r4, r5, r6, r7, r8, r9, fp, sp, pc}
+.L1717:
+	.loc 2 2317 0
+	bl	FtlLoadSysInfo
+.LVL1582:
+	subs	r8, r0, #0
+	bne	.L1719
+	.loc 2 2320 0
+	bl	FtlLoadMapInfo
+.LVL1583:
+	.loc 2 2321 0
+	bl	FtlLoadVonderInfo
+.LVL1584:
+	.loc 2 2322 0
+	bl	Ftl_load_ext_data
+.LVL1585:
+	.loc 2 2324 0
+	bl	FtlLoadEctTbl
+.LVL1586:
+	.loc 2 2325 0
+	bl	FtlFreeSysBLkSort
+.LVL1587:
+	.loc 2 2327 0
+	bl	SupperBlkListInit
+.LVL1588:
+	.loc 2 2328 0
+	bl	FtlPowerLostRecovery
+.LVL1589:
+	.loc 2 2330 0
+	mov	r0, #1
+	bl	FtlUpdateVaildLpn
+.LVL1590:
+.LBB520:
+.LBB521:
+	.loc 2 2332 0
+	ldrh	r1, [r4, #114]
+	mov	r3, r8
+.LVL1591:
+	.loc 2 2333 0
+	ldr	r2, [r4, #2424]
+	mov	r0, #12
+.L1720:
+	.loc 2 2332 0
+	cmp	r3, r1
+	bge	.L1725
+	.loc 2 2333 0
+	mla	ip, r0, r3, r2
+	ldr	ip, [ip, #4]
+	cmp	ip, #0
+	bge	.L1721
+.L1725:
+	.loc 2 2336 0
+	ldr	r5, .L1732+4
+	.loc 2 2338 0
+	cmp	r3, r1
+	.loc 2 2336 0
+	ldrh	r2, [r5, #28]
+	sub	r7, r5, #224
+	add	r2, r2, #1
+	strh	r2, [r5, #28]	@ movhi
+	.loc 2 2338 0
+	bge	.L1731
+.L1722:
+	.loc 2 2340 0
+	ldr	r6, .L1732+8
+	.loc 2 2339 0
+	ldr	r0, .L1732+12
+	bl	FtlSuperblockPowerLostFix
+.LVL1592:
+	.loc 2 2340 0
+	mov	r0, r6
+	bl	FtlSuperblockPowerLostFix
+.LVL1593:
+.LBB522:
+	.loc 2 2346 0
+	movw	r3, #2280
+	ldr	r1, [r4, #2260]
+	ldrh	r3, [r4, r3]
+	ldrh	r0, [r7, #4]
+	lsl	r3, r3, #1
+	ldrh	r2, [r1, r3]
+	sub	r2, r2, r0
+	strh	r2, [r1, r3]	@ movhi
+	.loc 2 2352 0
+	movw	r2, #2328
+	ldrh	r2, [r4, r2]
+	.loc 2 2347 0
+	ldrh	r3, [r4, #78]
+	.loc 2 2352 0
+	ldr	r0, [r4, #2260]
+	ldrh	ip, [r6, #4]
+	lsl	r2, r2, #1
+	.loc 2 2347 0
+	strh	r3, [r7, #2]	@ movhi
+	.loc 2 2348 0
+	mov	r3, #0
+	strb	r3, [r4, #2286]
+	.loc 2 2349 0
+	strh	r3, [r7, #4]	@ movhi
+	.loc 2 2352 0
+	ldrh	r1, [r0, r2]
+	sub	r1, r1, ip
+	strh	r1, [r0, r2]	@ movhi
+.LBE522:
+	.loc 2 2359 0
+	add	r0, r6, #1536
+.LBB523:
+	.loc 2 2353 0
+	ldrh	r2, [r4, #78]
+	.loc 2 2354 0
+	strb	r3, [r4, #2334]
+	.loc 2 2355 0
+	strh	r3, [r6, #4]	@ movhi
+	.loc 2 2353 0
+	strh	r2, [r6, #2]	@ movhi
+.LBE523:
+	.loc 2 2359 0
+	bl	FtlMapBlkWriteDump_data
+.LVL1594:
+	.loc 2 2360 0
+	ldr	r0, .L1732+16
+	bl	FtlMapBlkWriteDump_data
+.LVL1595:
+	.loc 2 2372 0
+	ldrh	r3, [r5, #30]
+	add	r3, r3, #1
+	strh	r3, [r5, #30]	@ movhi
+	.loc 2 2373 0
+	bl	l2p_flush
+.LVL1596:
+	.loc 2 2374 0
+	bl	FtlVpcTblFlush
+.LVL1597:
+	.loc 2 2375 0
+	bl	FtlVpcTblFlush
+.LVL1598:
+	b	.L1726
+.LVL1599:
+.L1721:
+	.loc 2 2332 0
+	add	r3, r3, #1
+	b	.L1720
+.L1731:
+	.loc 2 2338 0
+	ldrh	r3, [r6]
+.LVL1600:
+	cmp	r3, #0
+	bne	.L1722
+.L1726:
+	.loc 2 2379 0
+	movw	r3, #2280
+	ldrh	r0, [r4, r3]
+	movw	r3, #65535
+	cmp	r0, r3
+	beq	.L1727
+	ldrh	r3, [r7, #4]
+	cmp	r3, #0
+	bne	.L1727
+	.loc 2 2381 0
+	ldr	r6, .L1732+8
+	.loc 2 2380 0
+	ldrh	r3, [r6, #4]
+	cmp	r3, #0
+	bne	.L1727
+	.loc 2 2382 0
+	bl	FtlGcRefreshBlock
+.LVL1601:
+	.loc 2 2383 0
+	movw	r3, #2328
+	ldrh	r0, [r4, r3]
+	bl	FtlGcRefreshBlock
+.LVL1602:
+	.loc 2 2384 0
+	sub	r0, r6, #48
+	bl	allocate_new_data_superblock
+.LVL1603:
+	.loc 2 2385 0
+	mov	r0, r6
+	bl	allocate_new_data_superblock
+.LVL1604:
+.L1727:
+	.loc 2 2390 0
+	ldrh	r3, [r5, #28]
+	tst	r3, #31
+	bne	.L1716
+	.loc 2 2391 0
+	bl	FtlVpcCheckAndModify
+.LVL1605:
+	b	.L1716
+.L1733:
+	.align	2
+.L1732:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+2504
+	.word	.LANCHOR0+2328
+	.word	.LANCHOR0+2280
+	.word	.LANCHOR0+3908
+.LBE521:
+.LBE520:
+.LFE232:
+	.fnend
+	.size	FtlSysBlkInit, .-FtlSysBlkInit
+	.align	2
+	.global	ftl_low_format
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	ftl_low_format, %function
+ftl_low_format:
+	.fnstart
+.LFB150:
+	.loc 3 623 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI449:
+	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr, pc}
+	.pad #4
+	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, ip, lr}
+.LCFI450:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI451:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 623 0
+	.loc 3 629 0
+	mov	r3, #0
+	ldr	r4, .L1758
+	.loc 3 631 0
+	ldrh	r0, [r4, #12]
+	.loc 3 629 0
+	str	r3, [r4, #2472]
+	.loc 3 630 0
+	str	r3, [r4, #2476]
+	.loc 3 631 0
+	bl	FtlFreeSysBlkQueueInit
+.LVL1606:
+	.loc 3 632 0
+	bl	FtlLoadBbt
+.LVL1607:
+	cmp	r0, #0
+	beq	.L1735
+	.loc 3 633 0
+	bl	FtlMakeBbt
+.LVL1608:
+.L1735:
+	.loc 3 637 0 discriminator 1
+	ldr	r0, .L1758+4
+	.loc 3 623 0 discriminator 1
+	mov	r2, #0
+.L1736:
+	.loc 3 635 0 discriminator 1
+	ldrh	r1, [r4, #34]
+	uxth	r3, r2
+	add	r2, r2, #1
+	cmp	r3, r1, lsl #7
+	blt	.L1737
+	.loc 3 642 0
+	ldrh	r6, [r4, #16]
+	.loc 3 641 0
+	mov	r5, #0
+.LVL1609:
+.L1738:
+	.loc 3 642 0 discriminator 1
+	ldrh	r3, [r4, #18]
+	cmp	r3, r6
+	bhi	.L1739
+	.loc 3 645 0
+	ldrh	r1, [r4, #8]
+	sub	r3, r5, #3
+	cmp	r3, r1, lsl #1
+	bge	.L1740
+.L1744:
+	.loc 3 641 0
+	mov	r5, #0
+.LVL1610:
+	mov	r6, r5
+.LVL1611:
+.L1741:
+	.loc 3 656 0 discriminator 1
+	ldrh	r3, [r4, #16]
+	uxth	r0, r5
+	add	r5, r5, #1
+	cmp	r3, r0
+	bhi	.L1745
+	.loc 3 658 0
+	ldrh	r3, [r4, #18]
+	.loc 3 662 0
+	movw	r9, #2552
+	.loc 3 661 0
+	ldrh	r5, [r4, #8]
+	ldr	r10, [r4, #20]
+	.loc 3 658 0
+	str	r3, [r4, #3764]
+	.loc 3 661 0
+	mov	r1, r5
+	mov	r0, r10
+	bl	__aeabi_uidiv
+.LVL1612:
+	.loc 3 662 0
+	ubfx	r7, r0, #5, #16
+	.loc 3 661 0
+	mov	r8, r0
+	.loc 3 662 0
+	add	r3, r7, #36
+	.loc 3 661 0
+	str	r0, [r4, #2436]
+	.loc 3 662 0
+	strh	r3, [r4, r9]	@ movhi
+	.loc 3 663 0
+	mov	r3, #24
+	mul	r3, r3, r5
+	cmp	r6, r3
+	ble	.L1746
+	.loc 3 664 0
+	mov	r1, r5
+	sub	r0, r10, r6
+	bl	__aeabi_uidiv
+.LVL1613:
+	str	r0, [r4, #2436]
+	.loc 3 665 0
+	lsr	r0, r0, #5
+	add	r0, r0, #24
+	strh	r0, [r4, r9]	@ movhi
+.L1746:
+	.loc 3 668 0
+	ldrh	r3, [r4, #70]
+	cmp	r3, #0
+	beq	.L1748
+	.loc 3 669 0
+	movw	r2, #2552
+	ldrh	r1, [r4, r2]
+	add	r1, r1, r3, lsr #1
+	strh	r1, [r4, r2]	@ movhi
+	.loc 3 670 0
+	mul	r1, r5, r3
+	cmp	r6, r1
+	.loc 3 672 0
+	addlt	r3, r3, #32
+	.loc 3 671 0
+	strlt	r8, [r4, #2436]
+	.loc 3 672 0
+	addlt	r3, r7, r3
+	strhlt	r3, [r4, r2]	@ movhi
+.L1748:
+	.loc 3 677 0
+	movw	r3, #2552
+	ldr	r6, .L1758+8
+.LVL1614:
+	ldrh	r2, [r4, r3]
+	.loc 3 689 0
+	mvn	r7, #0
+	.loc 3 677 0
+	ldr	r3, [r4, #2436]
+	sub	r3, r3, r2
+	mul	r5, r5, r3
+	.loc 3 678 0
+	ldrh	r3, [r4, #78]
+	.loc 3 677 0
+	str	r5, [r6, #-4056]
+	.loc 3 678 0
+	mul	r5, r5, r3
+	.loc 3 679 0
+	ldrh	r3, [r4, #34]
+	.loc 3 678 0
+	str	r5, [r4, #2436]
+	.loc 3 679 0
+	mul	r5, r5, r3
+	str	r5, [r4, #116]
+	.loc 3 684 0
+	bl	FtlBbmTblFlush
+.LVL1615:
+	.loc 3 687 0
+	ldrh	r2, [r4, #18]
+	mov	r1, #0
+	ldr	r0, [r4, #2260]
+	.loc 3 689 0
+	ldr	r5, .L1758+12
+	.loc 3 687 0
+	lsl	r2, r2, #1
+	bl	ftl_memset
+.LVL1616:
+	.loc 3 689 0
+	movw	r2, #2568
+	.loc 3 688 0
+	mov	r3, #0
+	.loc 3 689 0
+	strh	r7, [r4, r2]	@ movhi
+	.loc 3 696 0
+	movw	r2, #2280
+	strh	r3, [r4, r2]	@ movhi
+	.loc 3 698 0
+	mov	r1, #255
+	ldrh	r2, [r4, #16]
+	.loc 3 690 0
+	strh	r3, [r5, #2]	@ movhi
+	.loc 3 694 0
+	sub	r5, r5, #288
+	.loc 3 701 0
+	mov	r8, r5
+	.loc 3 688 0
+	str	r3, [r4, #2432]
+	.loc 3 691 0
+	strb	r3, [r4, #2574]
+	.loc 3 692 0
+	strb	r3, [r4, #2576]
+	.loc 3 698 0
+	lsr	r2, r2, #3
+	.loc 3 694 0
+	strh	r3, [r5, #2]	@ movhi
+	.loc 3 695 0
+	strb	r3, [r4, #2286]
+	.loc 3 697 0
+	mov	r3, #1
+	.loc 3 698 0
+	ldr	r0, [r4]
+	.loc 3 697 0
+	strb	r3, [r4, #2288]
+	.loc 3 698 0
+	bl	ftl_memset
+.LVL1617:
+.L1750:
+	.loc 3 701 0
+	mov	r0, r8
+	bl	make_superblock
+.LVL1618:
+	.loc 3 702 0
+	ldrb	r3, [r4, #2287]	@ zero_extendqisi2
+	cmp	r3, #0
+	ldrh	r3, [r5]
+	bne	.L1751
+	.loc 3 705 0
+	ldr	r2, [r4, #2260]
+	lsl	r3, r3, #1
+	strh	r7, [r2, r3]	@ movhi
+	.loc 3 706 0
+	ldrh	r3, [r5]
+	add	r3, r3, #1
+	strh	r3, [r5]	@ movhi
+	.loc 3 707 0
+	b	.L1750
+.L1737:
+	.loc 3 636 0 discriminator 3
+	ldr	ip, [r4, #3776]
+	mvn	r1, r3
+	orr	r1, r3, r1, lsl #16
+	str	r1, [ip, r3, lsl #2]
+	.loc 3 637 0 discriminator 3
+	ldr	r1, [r4, #3768]
+	str	r0, [r1, r3, lsl #2]
+	b	.L1736
+.LVL1619:
+.L1739:
+	.loc 3 643 0 discriminator 3
+	mov	r0, r6
+	mov	r1, #1
+	bl	FtlLowFormatEraseBlock
+.LVL1620:
+	.loc 3 642 0 discriminator 3
+	add	r6, r6, #1
+	.loc 3 643 0 discriminator 3
+	add	r5, r5, r0
+.LVL1621:
+	uxth	r5, r5
+.LVL1622:
+	.loc 3 642 0 discriminator 3
+	uxth	r6, r6
+	b	.L1738
+.L1740:
+	.loc 3 647 0
+	mov	r0, r5
+	bl	__aeabi_uidiv
+.LVL1623:
+	ldr	r3, [r4, #108]
+	add	r0, r0, r3
+	uxth	r0, r0
+	bl	FtlSysBlkNumInit
+.LVL1624:
+	.loc 3 648 0
+	ldrh	r0, [r4, #12]
+	bl	FtlFreeSysBlkQueueInit
+.LVL1625:
+	.loc 3 650 0
+	ldrh	r5, [r4, #16]
+.LVL1626:
+.L1742:
+	.loc 3 650 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #18]
+	cmp	r3, r5
+	bls	.L1744
+	.loc 3 651 0 is_stmt 1 discriminator 3
+	mov	r0, r5
+	mov	r1, #1
+	.loc 3 650 0 discriminator 3
+	add	r5, r5, #1
+	.loc 3 651 0 discriminator 3
+	bl	FtlLowFormatEraseBlock
+.LVL1627:
+	.loc 3 650 0 discriminator 3
+	uxth	r5, r5
+	b	.L1742
+.LVL1628:
+.L1745:
+	.loc 3 657 0 discriminator 3
+	mov	r1, #0
+	bl	FtlLowFormatEraseBlock
+.LVL1629:
+	add	r6, r6, r0
+.LVL1630:
+	uxth	r6, r6
+.LVL1631:
+	b	.L1741
+.LVL1632:
+.L1751:
+	.loc 3 709 0
+	ldr	r2, [r4, #2472]
+	.loc 3 710 0
+	lsl	r3, r3, #1
+	ldrh	r1, [r5, #4]
+	.loc 3 721 0
+	mvn	r7, #0
+	.loc 3 709 0
+	str	r2, [r4, #2292]
+	add	r2, r2, #1
+	str	r2, [r4, #2472]
+	.loc 3 710 0
+	ldr	r2, [r4, #2260]
+	strh	r1, [r2, r3]	@ movhi
+	.loc 3 712 0
+	mov	r3, #0
+	ldr	r2, .L1758+16
+	.loc 3 714 0
+	movw	r1, #2328
+	.loc 3 713 0
+	strb	r3, [r4, #2334]
+	.loc 3 712 0
+	strh	r3, [r2, #2]	@ movhi
+	.loc 3 717 0
+	mov	r8, r2
+	.loc 3 714 0
+	ldrh	r3, [r5]
+	mov	r5, r2
+	add	r3, r3, #1
+	strh	r3, [r4, r1]	@ movhi
+	.loc 3 715 0
+	mov	r3, #1
+	strb	r3, [r4, #2336]
+.L1752:
+	.loc 3 717 0
+	mov	r0, r8
+	bl	make_superblock
+.LVL1633:
+	.loc 3 718 0
+	ldrb	r3, [r4, #2335]	@ zero_extendqisi2
+	cmp	r3, #0
+	ldrh	r3, [r5]
+	bne	.L1753
+	.loc 3 721 0
+	ldr	r2, [r4, #2260]
+	lsl	r3, r3, #1
+	strh	r7, [r2, r3]	@ movhi
+	.loc 3 722 0
+	ldrh	r3, [r5]
+	add	r3, r3, #1
+	strh	r3, [r5]	@ movhi
+	.loc 3 723 0
+	b	.L1752
+.L1753:
+	.loc 3 725 0
+	ldr	r2, [r4, #2472]
+	.loc 3 726 0
+	lsl	r3, r3, #1
+	ldrh	r1, [r5, #4]
+	.loc 3 727 0
+	mvn	r5, #0
+	.loc 3 725 0
+	str	r2, [r4, #2340]
+	add	r2, r2, #1
+	str	r2, [r4, #2472]
+	.loc 3 726 0
+	ldr	r2, [r4, #2260]
+	strh	r1, [r2, r3]	@ movhi
+	.loc 3 727 0
+	movw	r3, #2376
+	strh	r5, [r4, r3]	@ movhi
+	.loc 3 730 0
+	bl	FtlFreeSysBlkQueueOut
+.LVL1634:
+	ldr	r3, .L1758+20
+	movw	r2, #2556
+	strh	r0, [r4, r2]	@ movhi
+	.loc 3 731 0
+	mov	r2, #0
+	strh	r2, [r3, #2]	@ movhi
+	.loc 3 733 0
+	ldr	r2, [r6, #-4056]
+	.loc 3 732 0
+	strh	r5, [r3, #4]	@ movhi
+	.loc 3 733 0
+	strh	r2, [r3, #6]	@ movhi
+	.loc 3 734 0
+	ldr	r3, [r4, #2472]
+	str	r3, [r4, #2564]
+	add	r3, r3, #1
+	str	r3, [r4, #2472]
+	.loc 3 735 0
+	bl	FtlVpcTblFlush
+.LVL1635:
+	.loc 3 736 0
+	bl	FtlSysBlkInit
+.LVL1636:
+	cmp	r0, #0
+	.loc 3 739 0
+	mov	r0, #0
+	.loc 3 737 0
+	ldreq	r3, .L1758+24
+	moveq	r2, #1
+	streq	r2, [r3]
+	.loc 3 739 0
+	ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, r10, fp, sp, pc}
+.L1759:
+	.align	2
+.L1758:
+	.word	.LANCHOR0
+	.word	168778952
+	.word	.LANCHOR3
+	.word	.LANCHOR0+2568
+	.word	.LANCHOR0+2328
+	.word	.LANCHOR0+2556
+	.word	.LANCHOR2
+.LFE150:
+	.fnend
+	.size	ftl_low_format, .-ftl_low_format
+	.align	2
+	.global	sftl_init
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	sftl_init, %function
+sftl_init:
+	.fnstart
+.LFB151:
+	.loc 3 743 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+	.movsp ip
+	mov	ip, sp
+.LCFI452:
+	push	{r4, r5, fp, ip, lr, pc}
+	.pad #4
+	.save {r4, r5, fp, ip, lr}
+.LCFI453:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI454:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 3 743 0
+	.loc 3 746 0
+	mvn	r3, #0
+	ldr	r5, .L1766
+	.loc 3 753 0
+	ldr	r4, .L1766+4
+	.loc 3 749 0
+	ldr	r1, .L1766+8
+	ldr	r0, .L1766+12
+	.loc 3 746 0
+	str	r3, [r5]
+	.loc 3 749 0
+	bl	printk
+.LVL1637:
+	.loc 3 750 0
+	ldr	r0, .L1766+16
+	bl	FtlConstantsInit
+.LVL1638:
+	.loc 3 751 0
+	bl	FtlMemInit
+.LVL1639:
+	.loc 3 752 0
+	bl	FtlVariablesInit
+.LVL1640:
+	.loc 3 753 0
+	ldrh	r0, [r4, #12]
+	bl	FtlFreeSysBlkQueueInit
+.LVL1641:
+	.loc 3 756 0
+	bl	FtlLoadBbt
+.LVL1642:
+	cmp	r0, #0
+	bne	.L1764
+	.loc 3 767 0
+	bl	FtlSysBlkInit
+.LVL1643:
+	cmp	r0, #0
+	bne	.L1764
+	.loc 3 779 0
+	mov	r3, #1
+	str	r3, [r5]
+	.loc 3 783 0
+	movw	r3, #2276
+	ldrh	r3, [r4, r3]
+	cmp	r3, #15
+	bhi	.L1764
+	movw	r4, #8129
+.L1763:
+.LBB524:
+	.loc 3 786 0 discriminator 3
+	mov	r1, #1
+	mov	r0, #0
+	bl	rk_ftl_garbage_collect
+.LVL1644:
+	.loc 3 785 0 discriminator 3
+	subs	r4, r4, #1
+	bne	.L1763
+.L1764:
+.LBE524:
+	.loc 3 794 0
+	mov	r0, #0
+	ldmfd	sp, {r4, r5, fp, sp, pc}
+.L1767:
+	.align	2
+.L1766:
+	.word	.LANCHOR2
+	.word	.LANCHOR0
+	.word	.LC70
+	.word	.LC71
+	.word	g_nand_phy_info
+.LFE151:
+	.fnend
+	.size	sftl_init, .-sftl_init
+	.align	2
+	.global	ftl_memcmp
+	.syntax unified
+	.arm
+	.fpu softvfp
+	.type	ftl_memcmp, %function
+ftl_memcmp:
+	.fnstart
+.LFB269:
+	.loc 1 211 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 1, uses_anonymous_args = 0
+.LVL1645:
+	.movsp ip
+	mov	ip, sp
+.LCFI455:
+	push	{fp, ip, lr, pc}
+	.pad #4
+	.save {fp, ip, lr}
+.LCFI456:
+	.setfp fp, ip, #-4
+	sub	fp, ip, #4
+.LCFI457:
+	push	{lr}
+	bl	__gnu_mcount_nc
+	.loc 1 211 0
+	.loc 1 212 0
+	bl	memcmp
+.LVL1646:
+	.loc 1 213 0
+	ldmfd	sp, {fp, sp, pc}
+.LFE269:
+	.fnend
+	.size	ftl_memcmp, .-ftl_memcmp
+	.global	ftl_temp_buf
+	.global	gc_ink_free_return_value
+	.global	check_vpc_table
+	.global	FtlUpdateVaildLpnCount
+	.global	g_ect_tbl_power_up_flush
+	.global	power_up_flag
+	.global	gFtlInitStatus
+	.global	DeviceCapacity
+	.global	g_power_lost_recovery_flag
+	.global	c_mlc_erase_count_value
+	.global	g_recovery_ppa_tbl
+	.global	g_recovery_page_min_ver
+	.global	g_recovery_page_num
+	.global	g_cur_erase_blk
+	.global	g_gc_skip_write_count
+	.global	g_gc_head_data_block_count
+	.global	g_gc_head_data_block
+	.global	g_ftl_nand_free_count
+	.global	g_in_swl_replace
+	.global	g_in_gc_progress
+	.global	g_max_erase_count
+	.global	g_totle_sys_slc_erase_count
+	.global	g_totle_slc_erase_count
+	.global	g_min_erase_count
+	.global	g_totle_avg_erase_count
+	.global	g_totle_mlc_erase_count
+	.global	g_totle_l2p_write_count
+	.global	g_totle_cache_write_count
+	.global	g_tmp_data_superblock_id
+	.global	g_totle_read_page_count
+	.global	g_totle_discard_page_count
+	.global	g_totle_read_sector
+	.global	g_totle_write_sector
+	.global	g_totle_write_page_count
+	.global	g_totle_gc_page_count
+	.global	g_gc_blk_index
+	.global	g_gc_merge_free_blk_threshold
+	.global	g_gc_free_blk_threshold
+	.global	g_gc_bad_block_temp_tbl
+	.global	g_gc_bad_block_gc_index
+	.global	g_gc_bad_block_temp_num
+	.global	g_gc_next_blk_1
+	.global	g_gc_next_blk
+	.global	g_gc_cur_blk_max_valid_pages
+	.global	g_gc_cur_blk_valid_pages
+	.global	g_gc_page_offset
+	.global	g_gc_blk_num
+	.global	p_gc_blk_tbl
+	.global	p_gc_page_info
+	.global	g_sys_ext_data
+	.global	g_sys_save_data
+	.global	gp_last_act_superblock
+	.global	g_gc_superblock
+	.global	g_gc_temp_superblock
+	.global	g_buffer_superblock
+	.global	g_active_superblock
+	.global	g_num_data_superblocks
+	.global	g_num_free_superblocks
+	.global	p_data_block_list_tail
+	.global	p_data_block_list_head
+	.global	p_free_data_block_list_head
+	.global	p_data_block_list_table
+	.global	g_l2p_last_update_region_id
+	.global	p_l2p_map_buf
+	.global	p_l2p_ram_map
+	.global	g_totle_vendor_block
+	.global	p_vendor_region_ppn_table
+	.global	p_vendor_block_ver_table
+	.global	p_vendor_block_valid_page_count
+	.global	p_vendor_block_table
+	.global	g_totle_map_block
+	.global	p_map_region_ppn_table
+	.global	p_map_block_ver_table
+	.global	p_map_block_valid_page_count
+	.global	p_map_block_table
+	.global	p_blk_mode_table
+	.global	p_valid_page_count_check_table
+	.global	p_valid_page_count_table
+	.global	g_totle_swl_count
+	.global	p_swl_mul_table
+	.global	p_erase_count_table
+	.global	g_ect_tbl_info_size
+	.global	gp_ect_tbl_info
+	.global	g_gc_num_req
+	.global	c_gc_page_buf_num
+	.global	gp_gc_page_buf_info
+	.global	p_gc_data_buf
+	.global	p_gc_spare_buf
+	.global	p_io_spare_buf
+	.global	p_io_data_buf_1
+	.global	p_io_data_buf_0
+	.global	p_sys_spare_buf
+	.global	p_vendor_data_buf
+	.global	p_sys_data_buf_1
+	.global	p_sys_data_buf
+	.global	p_plane_order_table
+	.global	g_req_cache
+	.global	req_gc_dst
+	.global	req_gc
+	.global	req_erase
+	.global	req_prgm
+	.global	req_read
+	.global	req_sys
+	.global	gVendorBlkInfo
+	.global	gL2pMapInfo
+	.global	gSysFreeQueue
+	.global	gSysInfo
+	.global	gBbtInfo
+	.global	g_MaxLbn
+	.global	g_VaildLpn
+	.global	g_MaxLpn
+	.global	g_MaxLbaSector
+	.global	g_GlobalDataVersion
+	.global	g_GlobalSysVersion
+	.global	ftl_gc_temp_power_lost_recovery_flag
+	.global	c_ftl_nand_max_data_blks
+	.global	c_ftl_nand_data_op_blks_per_plane
+	.global	c_ftl_nand_data_blks_per_plane
+	.global	c_ftl_nand_max_sys_blks
+	.global	c_ftl_nand_init_sys_blks_per_plane
+	.global	c_ftl_nand_sys_blks_per_plane
+	.global	c_ftl_vendor_part_size
+	.global	c_ftl_nand_max_vendor_blks
+	.global	c_ftl_nand_max_map_blks
+	.global	c_ftl_nand_map_blks_per_plane
+	.global	c_ftl_nand_vendor_region_num
+	.global	c_ftl_nand_l2pmap_ram_region_num
+	.global	c_ftl_nand_map_region_num
+	.global	c_ftl_nand_totle_phy_blks
+	.global	c_ftl_nand_reserved_blks
+	.global	c_ftl_nand_byte_pre_oob
+	.global	c_ftl_nand_byte_pre_page
+	.global	c_ftl_nand_sec_pre_page_shift
+	.global	c_ftl_nand_sec_pre_page
+	.global	c_ftl_nand_page_pre_super_blk
+	.global	c_ftl_nand_page_pre_slc_blk
+	.global	c_ftl_nand_page_pre_blk
+	.global	c_ftl_nand_bbm_buf_size
+	.global	c_ftl_nand_ext_blk_pre_plane
+	.global	c_ftl_nand_blk_pre_plane
+	.global	c_ftl_nand_planes_num
+	.global	c_ftl_nand_blks_per_die_shift
+	.global	c_ftl_nand_blks_per_die
+	.global	c_ftl_nand_planes_per_die
+	.global	c_ftl_nand_die_num
+	.global	c_ftl_nand_type
+	.section	.rodata
+	.set	.LANCHOR1,. + 0
+	.type	__func__.6704, %object
+	.size	__func__.6704, 17
+__func__.6704:
+	.ascii	"INSERT_DATA_LIST\000"
+	.type	__func__.6699, %object
+	.size	__func__.6699, 17
+__func__.6699:
+	.ascii	"INSERT_FREE_LIST\000"
+	.type	__func__.6734, %object
+	.size	__func__.6734, 17
+__func__.6734:
+	.ascii	"List_remove_node\000"
+	.type	__func__.6766, %object
+	.size	__func__.6766, 22
+__func__.6766:
+	.ascii	"List_update_data_list\000"
+	.type	__func__.6807, %object
+	.size	__func__.6807, 26
+__func__.6807:
+	.ascii	"ftl_map_blk_alloc_new_blk\000"
+	.type	__func__.6871, %object
+	.size	__func__.6871, 22
+__func__.6871:
+	.ascii	"select_l2p_ram_region\000"
+	.type	__func__.7194, %object
+	.size	__func__.7194, 16
+__func__.7194:
+	.ascii	"make_superblock\000"
+	.type	__func__.7368, %object
+	.size	__func__.7368, 19
+__func__.7368:
+	.ascii	"get_new_active_ppa\000"
+	.type	__func__.7608, %object
+	.size	__func__.7608, 15
+__func__.7608:
+	.ascii	"FlashReadPages\000"
+	.type	__func__.7625, %object
+	.size	__func__.7625, 15
+__func__.7625:
+	.ascii	"FlashProgPages\000"
+	.type	__func__.6317, %object
+	.size	__func__.6317, 11
+__func__.6317:
+	.ascii	"FtlMemInit\000"
+	.type	__func__.6533, %object
+	.size	__func__.6533, 14
+__func__.6533:
+	.ascii	"FtlBbt2Bitmap\000"
+	.type	__func__.6775, %object
+	.size	__func__.6775, 16
+__func__.6775:
+	.ascii	"load_l2p_region\000"
+	.type	__func__.6832, %object
+	.size	__func__.6832, 31
+__func__.6832:
+	.ascii	"Ftl_write_map_blk_to_last_page\000"
+	.type	__func__.6846, %object
+	.size	__func__.6846, 16
+__func__.6846:
+	.ascii	"FtlMapWritePage\000"
+	.type	__func__.6818, %object
+	.size	__func__.6818, 15
+__func__.6818:
+	.ascii	"ftl_map_blk_gc\000"
+	.type	__func__.6888, %object
+	.size	__func__.6888, 9
+__func__.6888:
+	.ascii	"log2phys\000"
+	.type	__func__.7103, %object
+	.size	__func__.7103, 16
+__func__.7103:
+	.ascii	"FtlReUsePrevPpa\000"
+	.type	__func__.7256, %object
+	.size	__func__.7256, 14
+__func__.7256:
+	.ascii	"ftl_check_vpc\000"
+	.type	__func__.6983, %object
+	.size	__func__.6983, 14
+__func__.6983:
+	.ascii	"FtlScanSysBlk\000"
+	.type	__func__.7215, %object
+	.size	__func__.7215, 18
+__func__.7215:
+	.ascii	"SupperBlkListInit\000"
+	.type	__func__.7340, %object
+	.size	__func__.7340, 25
+__func__.7340:
+	.ascii	"allocate_data_superblock\000"
+	.type	__func__.7381, %object
+	.size	__func__.7381, 16
+__func__.7381:
+	.ascii	"update_vpc_list\000"
+	.type	__func__.7388, %object
+	.size	__func__.7388, 20
+__func__.7388:
+	.ascii	"decrement_vpc_count\000"
+	.type	__func__.7137, %object
+	.size	__func__.7137, 22
+__func__.7137:
+	.ascii	"FtlRecoverySuperblock\000"
+	.type	__func__.6576, %object
+	.size	__func__.6576, 11
+__func__.6576:
+	.ascii	"FtlLoadBbt\000"
+	.type	__func__.6961, %object
+	.size	__func__.6961, 15
+__func__.6961:
+	.ascii	"FtlVpcTblFlush\000"
+	.type	__func__.7240, %object
+	.size	__func__.7240, 21
+__func__.7240:
+	.ascii	"FtlVpcCheckAndModify\000"
+	.type	__func__.7361, %object
+	.size	__func__.7361, 29
+__func__.7361:
+	.ascii	"allocate_new_data_superblock\000"
+	.type	__func__.6441, %object
+	.size	__func__.6441, 13
+__func__.6441:
+	.ascii	"FtlProgPages\000"
+	.type	__func__.7458, %object
+	.size	__func__.7458, 19
+__func__.7458:
+	.ascii	"FtlGcFreeTempBlock\000"
+	.type	__func__.7564, %object
+	.size	__func__.7564, 23
+__func__.7564:
+	.ascii	"rk_ftl_garbage_collect\000"
+	.type	__func__.6469, %object
+	.size	__func__.6469, 9
+__func__.6469:
+	.ascii	"FtlWrite\000"
+	.type	__func__.7040, %object
+	.size	__func__.7040, 15
+__func__.7040:
+	.ascii	"FtlLoadSysInfo\000"
+	.data
+	.align	2
+	.set	.LANCHOR2,. + 0
+	.type	gFtlInitStatus, %object
+	.size	gFtlInitStatus, 4
+gFtlInitStatus:
+	.word	-1
+	.type	ftl_gc_temp_block_bops_scan_page_addr, %object
+	.size	ftl_gc_temp_block_bops_scan_page_addr, 2
+ftl_gc_temp_block_bops_scan_page_addr:
+	.short	-1
+	.space	2
+	.type	power_up_flag, %object
+	.size	power_up_flag, 4
+power_up_flag:
+	.word	1
+	.bss
+	.align	2
+	.set	.LANCHOR0,. + 0
+	.set	.LANCHOR3,. + 8184
+	.type	p_blk_mode_table, %object
+	.size	p_blk_mode_table, 4
+p_blk_mode_table:
+	.space	4
+	.type	c_ftl_nand_sys_blks_per_plane, %object
+	.size	c_ftl_nand_sys_blks_per_plane, 4
+c_ftl_nand_sys_blks_per_plane:
+	.space	4
+	.type	c_ftl_nand_planes_num, %object
+	.size	c_ftl_nand_planes_num, 2
+c_ftl_nand_planes_num:
+	.space	2
+	.space	2
+	.type	c_ftl_nand_max_sys_blks, %object
+	.size	c_ftl_nand_max_sys_blks, 4
+c_ftl_nand_max_sys_blks:
+	.space	4
+	.type	c_ftl_nand_data_blks_per_plane, %object
+	.size	c_ftl_nand_data_blks_per_plane, 2
+c_ftl_nand_data_blks_per_plane:
+	.space	2
+	.type	c_ftl_nand_blk_pre_plane, %object
+	.size	c_ftl_nand_blk_pre_plane, 2
+c_ftl_nand_blk_pre_plane:
+	.space	2
+	.type	c_ftl_nand_max_data_blks, %object
+	.size	c_ftl_nand_max_data_blks, 4
+c_ftl_nand_max_data_blks:
+	.space	4
+	.type	c_ftl_nand_totle_phy_blks, %object
+	.size	c_ftl_nand_totle_phy_blks, 4
+c_ftl_nand_totle_phy_blks:
+	.space	4
+	.type	c_ftl_nand_type, %object
+	.size	c_ftl_nand_type, 2
+c_ftl_nand_type:
+	.space	2
+	.type	c_ftl_nand_die_num, %object
+	.size	c_ftl_nand_die_num, 2
+c_ftl_nand_die_num:
+	.space	2
+	.type	c_ftl_nand_planes_per_die, %object
+	.size	c_ftl_nand_planes_per_die, 2
+c_ftl_nand_planes_per_die:
+	.space	2
+	.type	c_ftl_nand_sec_pre_page, %object
+	.size	c_ftl_nand_sec_pre_page, 2
+c_ftl_nand_sec_pre_page:
+	.space	2
+	.type	p_plane_order_table, %object
+	.size	p_plane_order_table, 32
+p_plane_order_table:
+	.space	32
+	.type	c_mlc_erase_count_value, %object
+	.size	c_mlc_erase_count_value, 2
+c_mlc_erase_count_value:
+	.space	2
+	.type	c_ftl_nand_ext_blk_pre_plane, %object
+	.size	c_ftl_nand_ext_blk_pre_plane, 2
+c_ftl_nand_ext_blk_pre_plane:
+	.space	2
+	.type	c_ftl_vendor_part_size, %object
+	.size	c_ftl_vendor_part_size, 2
+c_ftl_vendor_part_size:
+	.space	2
+	.type	c_ftl_nand_blks_per_die, %object
+	.size	c_ftl_nand_blks_per_die, 2
+c_ftl_nand_blks_per_die:
+	.space	2
+	.type	c_ftl_nand_blks_per_die_shift, %object
+	.size	c_ftl_nand_blks_per_die_shift, 2
+c_ftl_nand_blks_per_die_shift:
+	.space	2
+	.type	c_ftl_nand_page_pre_blk, %object
+	.size	c_ftl_nand_page_pre_blk, 2
+c_ftl_nand_page_pre_blk:
+	.space	2
+	.type	c_ftl_nand_page_pre_slc_blk, %object
+	.size	c_ftl_nand_page_pre_slc_blk, 2
+c_ftl_nand_page_pre_slc_blk:
+	.space	2
+	.type	c_ftl_nand_page_pre_super_blk, %object
+	.size	c_ftl_nand_page_pre_super_blk, 2
+c_ftl_nand_page_pre_super_blk:
+	.space	2
+	.type	c_ftl_nand_sec_pre_page_shift, %object
+	.size	c_ftl_nand_sec_pre_page_shift, 2
+c_ftl_nand_sec_pre_page_shift:
+	.space	2
+	.type	c_ftl_nand_byte_pre_page, %object
+	.size	c_ftl_nand_byte_pre_page, 2
+c_ftl_nand_byte_pre_page:
+	.space	2
+	.type	c_ftl_nand_byte_pre_oob, %object
+	.size	c_ftl_nand_byte_pre_oob, 2
+c_ftl_nand_byte_pre_oob:
+	.space	2
+	.type	c_ftl_nand_reserved_blks, %object
+	.size	c_ftl_nand_reserved_blks, 2
+c_ftl_nand_reserved_blks:
+	.space	2
+	.type	DeviceCapacity, %object
+	.size	DeviceCapacity, 4
+DeviceCapacity:
+	.space	4
+	.type	c_ftl_nand_max_vendor_blks, %object
+	.size	c_ftl_nand_max_vendor_blks, 2
+c_ftl_nand_max_vendor_blks:
+	.space	2
+	.type	c_ftl_nand_vendor_region_num, %object
+	.size	c_ftl_nand_vendor_region_num, 2
+c_ftl_nand_vendor_region_num:
+	.space	2
+	.type	c_ftl_nand_map_blks_per_plane, %object
+	.size	c_ftl_nand_map_blks_per_plane, 2
+c_ftl_nand_map_blks_per_plane:
+	.space	2
+	.space	2
+	.type	c_ftl_nand_max_map_blks, %object
+	.size	c_ftl_nand_max_map_blks, 4
+c_ftl_nand_max_map_blks:
+	.space	4
+	.type	c_ftl_nand_init_sys_blks_per_plane, %object
+	.size	c_ftl_nand_init_sys_blks_per_plane, 4
+c_ftl_nand_init_sys_blks_per_plane:
+	.space	4
+	.type	c_ftl_nand_map_region_num, %object
+	.size	c_ftl_nand_map_region_num, 2
+c_ftl_nand_map_region_num:
+	.space	2
+	.type	c_ftl_nand_l2pmap_ram_region_num, %object
+	.size	c_ftl_nand_l2pmap_ram_region_num, 2
+c_ftl_nand_l2pmap_ram_region_num:
+	.space	2
+	.type	g_MaxLbaSector, %object
+	.size	g_MaxLbaSector, 4
+g_MaxLbaSector:
+	.space	4
+	.type	g_totle_vendor_block, %object
+	.size	g_totle_vendor_block, 2
+g_totle_vendor_block:
+	.space	2
+	.space	2
+	.type	p_vendor_block_table, %object
+	.size	p_vendor_block_table, 4
+p_vendor_block_table:
+	.space	4
+	.type	gBbtInfo, %object
+	.size	gBbtInfo, 60
+gBbtInfo:
+	.space	60
+	.type	gSysFreeQueue, %object
+	.size	gSysFreeQueue, 2056
+gSysFreeQueue:
+	.space	2056
+	.type	p_sys_data_buf, %object
+	.size	p_sys_data_buf, 4
+p_sys_data_buf:
+	.space	4
+	.type	p_erase_count_table, %object
+	.size	p_erase_count_table, 4
+p_erase_count_table:
+	.space	4
+	.type	p_data_block_list_table, %object
+	.size	p_data_block_list_table, 4
+p_data_block_list_table:
+	.space	4
+	.type	p_data_block_list_head, %object
+	.size	p_data_block_list_head, 4
+p_data_block_list_head:
+	.space	4
+	.type	p_valid_page_count_table, %object
+	.size	p_valid_page_count_table, 4
+p_valid_page_count_table:
+	.space	4
+	.type	p_data_block_list_tail, %object
+	.size	p_data_block_list_tail, 4
+p_data_block_list_tail:
+	.space	4
+	.type	g_num_data_superblocks, %object
+	.size	g_num_data_superblocks, 2
+g_num_data_superblocks:
+	.space	2
+	.space	2
+	.type	p_free_data_block_list_head, %object
+	.size	p_free_data_block_list_head, 4
+p_free_data_block_list_head:
+	.space	4
+	.type	g_num_free_superblocks, %object
+	.size	g_num_free_superblocks, 2
+g_num_free_superblocks:
+	.space	2
+	.space	2
+	.type	g_active_superblock, %object
+	.size	g_active_superblock, 48
+g_active_superblock:
+	.space	48
+	.type	g_buffer_superblock, %object
+	.size	g_buffer_superblock, 48
+g_buffer_superblock:
+	.space	48
+	.type	g_gc_temp_superblock, %object
+	.size	g_gc_temp_superblock, 48
+g_gc_temp_superblock:
+	.space	48
+	.type	p_l2p_ram_map, %object
+	.size	p_l2p_ram_map, 4
+p_l2p_ram_map:
+	.space	4
+	.type	g_l2p_last_update_region_id, %object
+	.size	g_l2p_last_update_region_id, 2
+g_l2p_last_update_region_id:
+	.space	2
+	.type	FtlUpdateVaildLpnCount, %object
+	.size	FtlUpdateVaildLpnCount, 2
+FtlUpdateVaildLpnCount:
+	.space	2
+	.type	g_VaildLpn, %object
+	.size	g_VaildLpn, 4
+g_VaildLpn:
+	.space	4
+	.type	g_MaxLpn, %object
+	.size	g_MaxLpn, 4
+g_MaxLpn:
+	.space	4
+	.type	g_totle_read_page_count, %object
+	.size	g_totle_read_page_count, 4
+g_totle_read_page_count:
+	.space	4
+	.type	g_totle_discard_page_count, %object
+	.size	g_totle_discard_page_count, 4
+g_totle_discard_page_count:
+	.space	4
+	.type	g_totle_write_page_count, %object
+	.size	g_totle_write_page_count, 4
+g_totle_write_page_count:
+	.space	4
+	.type	g_totle_cache_write_count, %object
+	.size	g_totle_cache_write_count, 4
+g_totle_cache_write_count:
+	.space	4
+	.type	g_totle_l2p_write_count, %object
+	.size	g_totle_l2p_write_count, 4
+g_totle_l2p_write_count:
+	.space	4
+	.type	g_totle_gc_page_count, %object
+	.size	g_totle_gc_page_count, 4
+g_totle_gc_page_count:
+	.space	4
+	.type	g_totle_write_sector, %object
+	.size	g_totle_write_sector, 4
+g_totle_write_sector:
+	.space	4
+	.type	g_totle_read_sector, %object
+	.size	g_totle_read_sector, 4
+g_totle_read_sector:
+	.space	4
+	.type	g_GlobalSysVersion, %object
+	.size	g_GlobalSysVersion, 4
+g_GlobalSysVersion:
+	.space	4
+	.type	g_GlobalDataVersion, %object
+	.size	g_GlobalDataVersion, 4
+g_GlobalDataVersion:
+	.space	4
+	.type	g_totle_mlc_erase_count, %object
+	.size	g_totle_mlc_erase_count, 4
+g_totle_mlc_erase_count:
+	.space	4
+	.type	g_totle_slc_erase_count, %object
+	.size	g_totle_slc_erase_count, 4
+g_totle_slc_erase_count:
+	.space	4
+	.type	g_totle_avg_erase_count, %object
+	.size	g_totle_avg_erase_count, 4
+g_totle_avg_erase_count:
+	.space	4
+	.type	g_totle_sys_slc_erase_count, %object
+	.size	g_totle_sys_slc_erase_count, 4
+g_totle_sys_slc_erase_count:
+	.space	4
+	.type	g_max_erase_count, %object
+	.size	g_max_erase_count, 4
+g_max_erase_count:
+	.space	4
+	.type	g_min_erase_count, %object
+	.size	g_min_erase_count, 4
+g_min_erase_count:
+	.space	4
+	.type	g_sys_save_data, %object
+	.size	g_sys_save_data, 48
+g_sys_save_data:
+	.space	48
+	.type	c_ftl_nand_data_op_blks_per_plane, %object
+	.size	c_ftl_nand_data_op_blks_per_plane, 2
+c_ftl_nand_data_op_blks_per_plane:
+	.space	2
+	.space	2
+	.type	gSysInfo, %object
+	.size	gSysInfo, 12
+gSysInfo:
+	.space	12
+	.type	g_gc_superblock, %object
+	.size	g_gc_superblock, 48
+g_gc_superblock:
+	.space	48
+	.type	g_sys_ext_data, %object
+	.size	g_sys_ext_data, 512
+g_sys_ext_data:
+	.space	512
+	.type	g_gc_free_blk_threshold, %object
+	.size	g_gc_free_blk_threshold, 2
+g_gc_free_blk_threshold:
+	.space	2
+	.type	g_gc_merge_free_blk_threshold, %object
+	.size	g_gc_merge_free_blk_threshold, 2
+g_gc_merge_free_blk_threshold:
+	.space	2
+	.type	g_gc_skip_write_count, %object
+	.size	g_gc_skip_write_count, 4
+g_gc_skip_write_count:
+	.space	4
+	.type	g_gc_blk_index, %object
+	.size	g_gc_blk_index, 2
+g_gc_blk_index:
+	.space	2
+	.space	2
+	.type	g_in_swl_replace, %object
+	.size	g_in_swl_replace, 4
+g_in_swl_replace:
+	.space	4
+	.type	g_gc_num_req, %object
+	.size	g_gc_num_req, 4
+g_gc_num_req:
+	.space	4
+	.type	gp_gc_page_buf_info, %object
+	.size	gp_gc_page_buf_info, 4
+gp_gc_page_buf_info:
+	.space	4
+	.type	p_gc_data_buf, %object
+	.size	p_gc_data_buf, 4
+p_gc_data_buf:
+	.space	4
+	.type	p_gc_spare_buf, %object
+	.size	p_gc_spare_buf, 4
+p_gc_spare_buf:
+	.space	4
+	.type	req_gc, %object
+	.size	req_gc, 4
+req_gc:
+	.space	4
+	.type	c_gc_page_buf_num, %object
+	.size	c_gc_page_buf_num, 4
+c_gc_page_buf_num:
+	.space	4
+	.type	p_gc_blk_tbl, %object
+	.size	p_gc_blk_tbl, 4
+p_gc_blk_tbl:
+	.space	4
+	.type	g_gc_blk_num, %object
+	.size	g_gc_blk_num, 2
+g_gc_blk_num:
+	.space	2
+	.space	2
+	.type	p_gc_page_info, %object
+	.size	p_gc_page_info, 4
+p_gc_page_info:
+	.space	4
+	.type	g_gc_page_offset, %object
+	.size	g_gc_page_offset, 2
+g_gc_page_offset:
+	.space	2
+	.type	g_gc_next_blk, %object
+	.size	g_gc_next_blk, 2
+g_gc_next_blk:
+	.space	2
+	.type	g_gc_next_blk_1, %object
+	.size	g_gc_next_blk_1, 2
+g_gc_next_blk_1:
+	.space	2
+	.type	g_gc_bad_block_temp_num, %object
+	.size	g_gc_bad_block_temp_num, 2
+g_gc_bad_block_temp_num:
+	.space	2
+	.type	g_gc_bad_block_temp_tbl, %object
+	.size	g_gc_bad_block_temp_tbl, 34
+g_gc_bad_block_temp_tbl:
+	.space	34
+	.type	g_gc_bad_block_gc_index, %object
+	.size	g_gc_bad_block_gc_index, 2
+g_gc_bad_block_gc_index:
+	.space	2
+	.type	req_sys, %object
+	.size	req_sys, 20
+req_sys:
+	.space	20
+	.type	p_sys_spare_buf, %object
+	.size	p_sys_spare_buf, 4
+p_sys_spare_buf:
+	.space	4
+	.type	check_spare_buf, %object
+	.size	check_spare_buf, 512
+check_spare_buf:
+	.space	512
+	.type	req_erase, %object
+	.size	req_erase, 4
+req_erase:
+	.space	4
+	.type	g_cur_erase_blk, %object
+	.size	g_cur_erase_blk, 4
+g_cur_erase_blk:
+	.space	4
+	.type	p_io_data_buf_1, %object
+	.size	p_io_data_buf_1, 4
+p_io_data_buf_1:
+	.space	4
+	.type	p_io_spare_buf, %object
+	.size	p_io_spare_buf, 4
+p_io_spare_buf:
+	.space	4
+	.type	p_io_data_buf_0, %object
+	.size	p_io_data_buf_0, 4
+p_io_data_buf_0:
+	.space	4
+	.type	g_in_gc_progress, %object
+	.size	g_in_gc_progress, 4
+g_in_gc_progress:
+	.space	4
+	.type	g_gc_head_data_block, %object
+	.size	g_gc_head_data_block, 4
+g_gc_head_data_block:
+	.space	4
+	.type	g_gc_head_data_block_count, %object
+	.size	g_gc_head_data_block_count, 4
+g_gc_head_data_block_count:
+	.space	4
+	.type	req_read, %object
+	.size	req_read, 4
+req_read:
+	.space	4
+	.type	req_gc_dst, %object
+	.size	req_gc_dst, 4
+req_gc_dst:
+	.space	4
+	.type	req_prgm, %object
+	.size	req_prgm, 4
+req_prgm:
+	.space	4
+	.type	p_sys_data_buf_1, %object
+	.size	p_sys_data_buf_1, 4
+p_sys_data_buf_1:
+	.space	4
+	.type	p_vendor_data_buf, %object
+	.size	p_vendor_data_buf, 4
+p_vendor_data_buf:
+	.space	4
+	.type	g_ect_tbl_info_size, %object
+	.size	g_ect_tbl_info_size, 2
+g_ect_tbl_info_size:
+	.space	2
+	.space	2
+	.type	p_swl_mul_table, %object
+	.size	p_swl_mul_table, 4
+p_swl_mul_table:
+	.space	4
+	.type	gp_ect_tbl_info, %object
+	.size	gp_ect_tbl_info, 4
+gp_ect_tbl_info:
+	.space	4
+	.type	p_valid_page_count_check_table, %object
+	.size	p_valid_page_count_check_table, 4
+p_valid_page_count_check_table:
+	.space	4
+	.type	p_map_block_table, %object
+	.size	p_map_block_table, 4
+p_map_block_table:
+	.space	4
+	.type	p_map_block_valid_page_count, %object
+	.size	p_map_block_valid_page_count, 4
+p_map_block_valid_page_count:
+	.space	4
+	.type	p_vendor_block_valid_page_count, %object
+	.size	p_vendor_block_valid_page_count, 4
+p_vendor_block_valid_page_count:
+	.space	4
+	.type	p_vendor_block_ver_table, %object
+	.size	p_vendor_block_ver_table, 4
+p_vendor_block_ver_table:
+	.space	4
+	.type	p_vendor_region_ppn_table, %object
+	.size	p_vendor_region_ppn_table, 4
+p_vendor_region_ppn_table:
+	.space	4
+	.type	p_map_region_ppn_table, %object
+	.size	p_map_region_ppn_table, 4
+p_map_region_ppn_table:
+	.space	4
+	.type	p_map_block_ver_table, %object
+	.size	p_map_block_ver_table, 4
+p_map_block_ver_table:
+	.space	4
+	.type	p_l2p_map_buf, %object
+	.size	p_l2p_map_buf, 4
+p_l2p_map_buf:
+	.space	4
+	.type	c_ftl_nand_bbm_buf_size, %object
+	.size	c_ftl_nand_bbm_buf_size, 2
+c_ftl_nand_bbm_buf_size:
+	.space	2
+	.space	2
+	.type	gL2pMapInfo, %object
+	.size	gL2pMapInfo, 40
+gL2pMapInfo:
+	.space	40
+	.type	g_totle_map_block, %object
+	.size	g_totle_map_block, 2
+g_totle_map_block:
+	.space	2
+	.space	2
+	.type	gVendorBlkInfo, %object
+	.size	gVendorBlkInfo, 40
+gVendorBlkInfo:
+	.space	40
+	.type	g_req_cache, %object
+	.size	g_req_cache, 4
+g_req_cache:
+	.space	4
+	.type	g_tmp_data_superblock_id, %object
+	.size	g_tmp_data_superblock_id, 2
+g_tmp_data_superblock_id:
+	.space	2
+	.space	2
+	.type	g_totle_swl_count, %object
+	.size	g_totle_swl_count, 4
+g_totle_swl_count:
+	.space	4
+	.type	ftl_gc_temp_power_lost_recovery_flag, %object
+	.size	ftl_gc_temp_power_lost_recovery_flag, 4
+ftl_gc_temp_power_lost_recovery_flag:
+	.space	4
+	.type	g_recovery_page_min_ver, %object
+	.size	g_recovery_page_min_ver, 4
+g_recovery_page_min_ver:
+	.space	4
+	.type	g_power_lost_recovery_flag, %object
+	.size	g_power_lost_recovery_flag, 2
+g_power_lost_recovery_flag:
+	.space	2
+	.space	2
+	.type	g_recovery_page_num, %object
+	.size	g_recovery_page_num, 4
+g_recovery_page_num:
+	.space	4
+	.type	g_recovery_ppa_tbl, %object
+	.size	g_recovery_ppa_tbl, 128
+g_recovery_ppa_tbl:
+	.space	128
+	.type	g_ect_tbl_power_up_flush, %object
+	.size	g_ect_tbl_power_up_flush, 2
+g_ect_tbl_power_up_flush:
+	.space	2
+	.space	2
+	.type	gp_last_act_superblock, %object
+	.size	gp_last_act_superblock, 4
+gp_last_act_superblock:
+	.space	4
+	.type	gc_discard_updated, %object
+	.size	gc_discard_updated, 4
+gc_discard_updated:
+	.space	4
+	.type	gc_ink_free_return_value, %object
+	.size	gc_ink_free_return_value, 2
+gc_ink_free_return_value:
+	.space	2
+	.type	g_gc_cur_blk_valid_pages, %object
+	.size	g_gc_cur_blk_valid_pages, 2
+g_gc_cur_blk_valid_pages:
+	.space	2
+	.type	g_gc_cur_blk_max_valid_pages, %object
+	.size	g_gc_cur_blk_max_valid_pages, 2
+g_gc_cur_blk_max_valid_pages:
+	.space	2
+	.space	2
+	.type	g_ftl_nand_free_count, %object
+	.size	g_ftl_nand_free_count, 4
+g_ftl_nand_free_count:
+	.space	4
+	.type	g_MaxLbn, %object
+	.size	g_MaxLbn, 4
+g_MaxLbn:
+	.space	4
+	.type	ftl_temp_buf, %object
+	.size	ftl_temp_buf, 4096
+ftl_temp_buf:
+	.space	4096
+	.type	check_buf, %object
+	.size	check_buf, 4096
+check_buf:
+	.space	4096
+	.type	check_vpc_table, %object
+	.size	check_vpc_table, 16384
+check_vpc_table:
+	.space	16384
+	.section	.rodata.str1.1,"aMS",%progbits,1
+.LC0:
+	.ascii	"phyBlk = 0x%x die = %d block_in_die = 0x%x 0x%8x\012"
+	.ascii	"\000"
+.LC1:
+	.ascii	"\012!!!!! error @ func:%s - line:%d\012\000"
+.LC2:
+	.ascii	"FLASH INFO:\012\000"
+.LC3:
+	.ascii	"Device Capacity: %d MB\012\000"
+.LC4:
+	.ascii	"FTL INFO:\012\000"
+.LC5:
+	.ascii	"g_MaxLpn = 0x%x\012\000"
+.LC6:
+	.ascii	"g_VaildLpn = 0x%x\012\000"
+.LC7:
+	.ascii	"read_page_count = 0x%x\012\000"
+.LC8:
+	.ascii	"discard_page_count = 0x%x\012\000"
+.LC9:
+	.ascii	"write_page_count = 0x%x\012\000"
+.LC10:
+	.ascii	"cache_write_count = 0x%x\012\000"
+.LC11:
+	.ascii	"l2p_write_count = 0x%x\012\000"
+.LC12:
+	.ascii	"gc_page_count = 0x%x\012\000"
+.LC13:
+	.ascii	"totle_write = %d MB\012\000"
+.LC14:
+	.ascii	"totle_read = %d MB\012\000"
+.LC15:
+	.ascii	"GSV = 0x%x\012\000"
+.LC16:
+	.ascii	"GDV = 0x%x\012\000"
+.LC17:
+	.ascii	"bad blk num = %d\012\000"
+.LC18:
+	.ascii	"free_superblocks = 0x%x\012\000"
+.LC19:
+	.ascii	"mlc_EC = 0x%x\012\000"
+.LC20:
+	.ascii	"slc_EC = 0x%x\012\000"
+.LC21:
+	.ascii	"avg_EC = 0x%x\012\000"
+.LC22:
+	.ascii	"sys_EC = 0x%x\012\000"
+.LC23:
+	.ascii	"max_EC = 0x%x\012\000"
+.LC24:
+	.ascii	"min_EC = 0x%x\012\000"
+.LC25:
+	.ascii	"PLT = 0x%x\012\000"
+.LC26:
+	.ascii	"POT = 0x%x\012\000"
+.LC27:
+	.ascii	"MaxSector = 0x%x\012\000"
+.LC28:
+	.ascii	"init_sys_blks_pp = 0x%x\012\000"
+.LC29:
+	.ascii	"sys_blks_pp = 0x%x\012\000"
+.LC30:
+	.ascii	"free sysblock = 0x%x\012\000"
+.LC31:
+	.ascii	"data_blks_pp = 0x%x\012\000"
+.LC32:
+	.ascii	"data_op_blks_pp = 0x%x\012\000"
+.LC33:
+	.ascii	"max_data_blks = 0x%x\012\000"
+.LC34:
+	.ascii	"Sys.id = 0x%x\012\000"
+.LC35:
+	.ascii	"Bbt.id = 0x%x\012\000"
+.LC36:
+	.ascii	"ACT.page = 0x%x\012\000"
+.LC37:
+	.ascii	"ACT.plane = 0x%x\012\000"
+.LC38:
+	.ascii	"ACT.id = 0x%x\012\000"
+.LC39:
+	.ascii	"ACT.mode = 0x%x\012\000"
+.LC40:
+	.ascii	"ACT.a_pages = 0x%x\012\000"
+.LC41:
+	.ascii	"ACT VPC = 0x%x\012\000"
+.LC42:
+	.ascii	"BUF.page = 0x%x\012\000"
+.LC43:
+	.ascii	"BUF.plane = 0x%x\012\000"
+.LC44:
+	.ascii	"BUF.id = 0x%x\012\000"
+.LC45:
+	.ascii	"BUF.mode = 0x%x\012\000"
+.LC46:
+	.ascii	"BUF.a_pages = 0x%x\012\000"
+.LC47:
+	.ascii	"BUF VPC = 0x%x\012\000"
+.LC48:
+	.ascii	"TMP.page = 0x%x\012\000"
+.LC49:
+	.ascii	"TMP.plane = 0x%x\012\000"
+.LC50:
+	.ascii	"TMP.id = 0x%x\012\000"
+.LC51:
+	.ascii	"TMP.mode = 0x%x\012\000"
+.LC52:
+	.ascii	"TMP.a_pages = 0x%x\012\000"
+.LC53:
+	.ascii	"GC.page = 0x%x\012\000"
+.LC54:
+	.ascii	"GC.plane = 0x%x\012\000"
+.LC55:
+	.ascii	"GC.id = 0x%x\012\000"
+.LC56:
+	.ascii	"GC.mode = 0x%x\012\000"
+.LC57:
+	.ascii	"GC.a_pages = 0x%x\012\000"
+.LC58:
+	.ascii	"WR_CHK = %x %x %x\012\000"
+.LC59:
+	.ascii	"Read Err Cnt = 0x%x\012\000"
+.LC60:
+	.ascii	"Prog Err Cnt = 0x%x\012\000"
+.LC61:
+	.ascii	"gc_free_blk_th= 0x%x\012\000"
+.LC62:
+	.ascii	"gc_merge_free_blk_th= 0x%x\012\000"
+.LC63:
+	.ascii	"gc_skip_write_count= 0x%x\012\000"
+.LC64:
+	.ascii	"gc_blk_index= 0x%x\012\000"
+.LC65:
+	.ascii	"free min EC= 0x%x\012\000"
+.LC66:
+	.ascii	"free max EC= 0x%x\012\000"
+.LC67:
+	.ascii	"GC__SB VPC = 0x%x\012\000"
+.LC68:
+	.ascii	"%d. [0x%x]=0x%x 0x%x  0x%x\012\000"
+.LC69:
+	.ascii	"free %d. [0x%x] 0x%x  0x%x\012\000"
+.LC70:
+	.ascii	"SFTL version: 5.0.43 20180116\000"
+.LC71:
+	.ascii	"%s\012\000"
+.LC72:
+	.ascii	"swblk %x ,avg = %x max= %x vpc= %x,ec=%x ,max ec=%x"
+	.ascii	"\012\000"
+.LC73:
+	.ascii	"FtlGcRefreshBlock  0x%x\012\000"
+.LC74:
+	.ascii	"FtlGcMarkBadPhyBlk %d 0x%x\012\000"
+.LC75:
+	.ascii	"prog read error: = %x\012\000"
+.LC76:
+	.ascii	"prog read s error: = %x %x %x\012\000"
+.LC77:
+	.ascii	"prog read d error: = %x %x %x\012\000"
+.LC78:
+	.ascii	"%s error allocating memory. return -1\012\000"
+.LC79:
+	.ascii	"region_id = %x phyAddr = %x\012\000"
+.LC80:
+	.ascii	"spare:\000"
+.LC81:
+	.ascii	"map_ppn:\000"
+.LC82:
+	.ascii	"FtlMapWritePage error = %x \012\000"
+.LC83:
+	.ascii	"FtlMapWritePage error = %x error count = %d\012\000"
+.LC84:
+	.ascii	"ftl_scan_all_data = %x\012\000"
+.LC85:
+	.ascii	"scan lpa = %x ppa= %x\012\000"
+.LC86:
+	.ascii	"lba = %x,addr= %x,spare= %x %x %x %x data=%x %x\012"
+	.ascii	"\000"
+.LC87:
+	.ascii	"...%s enter...\012\000"
+.LC88:
+	.ascii	"FtlCheckVpc2 %x = %x  %x\012\000"
+.LC89:
+	.ascii	"free blk vpc error %x = %x  %x\012\000"
+.LC90:
+	.ascii	"FtlBbmTblFlush id=%x,page=%x,previd=%x cnt=%d\012\000"
+.LC91:
+	.ascii	"FtlBbmTblFlush error:%x\012\000"
+.LC92:
+	.ascii	"FtlBbmTblFlush error = %x error count = %d\012\000"
+.LC93:
+	.ascii	"FtlGcFreeBadSuperBlk 0x%x\012\000"
+.LC94:
+	.ascii	"decrement_vpc_count %x = %d\012\000"
+.LC95:
+	.ascii	"spuer block %x vpn is 0\012 \000"
+.LC96:
+	.ascii	"no ect\000"
+.LC97:
+	.ascii	"FtlVpcTblFlush error = %x error count = %d\012\000"
+.LC98:
+	.ascii	"FtlCheckVpc %x = %x  %x\012\000"
+.LC99:
+	.ascii	"Ftlwrite decrement_vpc_count %x = %d\012\000"
+.LC100:
+	.ascii	"SWL %x, FSB = %x vpc= %x,ec=%x th=%x\012\000"
+.LC101:
+	.ascii	"FtlWrite: lpa error:%x %x\012\000"
+	.section	.debug_frame,"",%progbits
+.Lframe0:
+	.4byte	.LECIE0-.LSCIE0
+.LSCIE0:
+	.4byte	0xffffffff
+	.byte	0x3
+	.ascii	"\000"
+	.uleb128 0x1
+	.sleb128 -4
+	.uleb128 0xe
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0
+	.align	2
+.LECIE0:
+.LSFDE0:
+	.4byte	.LEFDE0-.LASFDE0
+.LASFDE0:
+	.4byte	.Lframe0
+	.4byte	.LFB261
+	.4byte	.LFE261-.LFB261
+	.byte	0x4
+	.4byte	.LCFI0-.LFB261
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI1-.LCFI0
+	.byte	0x84
+	.uleb128 0xa
+	.byte	0x85
+	.uleb128 0x9
+	.byte	0x86
+	.uleb128 0x8
+	.byte	0x87
+	.uleb128 0x7
+	.byte	0x88
+	.uleb128 0x6
+	.byte	0x89
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI2-.LCFI1
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE0:
+.LSFDE2:
+	.4byte	.LEFDE2-.LASFDE2
+.LASFDE2:
+	.4byte	.Lframe0
+	.4byte	.LFB276
+	.4byte	.LFE276-.LFB276
+	.byte	0x4
+	.4byte	.LCFI3-.LFB276
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI4-.LCFI3
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI5-.LCFI4
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE2:
+.LSFDE4:
+	.4byte	.LEFDE4-.LASFDE4
+.LASFDE4:
+	.4byte	.Lframe0
+	.4byte	.LFB142
+	.4byte	.LFE142-.LFB142
+	.byte	0x4
+	.4byte	.LCFI6-.LFB142
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI7-.LCFI6
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI8-.LCFI7
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE4:
+.LSFDE6:
+	.4byte	.LEFDE6-.LASFDE6
+.LASFDE6:
+	.4byte	.Lframe0
+	.4byte	.LFB143
+	.4byte	.LFE143-.LFB143
+	.byte	0x4
+	.4byte	.LCFI9-.LFB143
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI10-.LCFI9
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI11-.LCFI10
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE6:
+.LSFDE8:
+	.4byte	.LEFDE8-.LASFDE8
+.LASFDE8:
+	.4byte	.Lframe0
+	.4byte	.LFB144
+	.4byte	.LFE144-.LFB144
+	.byte	0x4
+	.4byte	.LCFI12-.LFB144
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI13-.LCFI12
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI14-.LCFI13
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE8:
+.LSFDE10:
+	.4byte	.LEFDE10-.LASFDE10
+.LASFDE10:
+	.4byte	.Lframe0
+	.4byte	.LFB145
+	.4byte	.LFE145-.LFB145
+	.byte	0x4
+	.4byte	.LCFI15-.LFB145
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI16-.LCFI15
+	.byte	0x83
+	.uleb128 0xc
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI17-.LCFI16
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE10:
+.LSFDE12:
+	.4byte	.LEFDE12-.LASFDE12
+.LASFDE12:
+	.4byte	.Lframe0
+	.4byte	.LFB148
+	.4byte	.LFE148-.LFB148
+	.byte	0x4
+	.4byte	.LCFI18-.LFB148
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI19-.LCFI18
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI20-.LCFI19
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE12:
+.LSFDE14:
+	.4byte	.LEFDE14-.LASFDE14
+.LASFDE14:
+	.4byte	.Lframe0
+	.4byte	.LFB161
+	.4byte	.LFE161-.LFB161
+	.byte	0x4
+	.4byte	.LCFI21-.LFB161
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI22-.LCFI21
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI23-.LCFI22
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE14:
+.LSFDE16:
+	.4byte	.LEFDE16-.LASFDE16
+.LASFDE16:
+	.4byte	.Lframe0
+	.4byte	.LFB162
+	.4byte	.LFE162-.LFB162
+	.byte	0x4
+	.4byte	.LCFI24-.LFB162
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI25-.LCFI24
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI26-.LCFI25
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI27-.LCFI26
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x20
+	.align	2
+.LEFDE16:
+.LSFDE18:
+	.4byte	.LEFDE18-.LASFDE18
+.LASFDE18:
+	.4byte	.Lframe0
+	.4byte	.LFB163
+	.4byte	.LFE163-.LFB163
+	.byte	0x4
+	.4byte	.LCFI28-.LFB163
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI29-.LCFI28
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI30-.LCFI29
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE18:
+.LSFDE20:
+	.4byte	.LEFDE20-.LASFDE20
+.LASFDE20:
+	.4byte	.Lframe0
+	.4byte	.LFB164
+	.4byte	.LFE164-.LFB164
+	.byte	0x4
+	.4byte	.LCFI31-.LFB164
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI32-.LCFI31
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI33-.LCFI32
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE20:
+.LSFDE22:
+	.4byte	.LEFDE22-.LASFDE22
+.LASFDE22:
+	.4byte	.Lframe0
+	.4byte	.LFB167
+	.4byte	.LFE167-.LFB167
+	.byte	0x4
+	.4byte	.LCFI34-.LFB167
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI35-.LCFI34
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI36-.LCFI35
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE22:
+.LSFDE24:
+	.4byte	.LEFDE24-.LASFDE24
+.LASFDE24:
+	.4byte	.Lframe0
+	.4byte	.LFB168
+	.4byte	.LFE168-.LFB168
+	.byte	0x4
+	.4byte	.LCFI37-.LFB168
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI38-.LCFI37
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI39-.LCFI38
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE24:
+.LSFDE26:
+	.4byte	.LEFDE26-.LASFDE26
+.LASFDE26:
+	.4byte	.Lframe0
+	.4byte	.LFB172
+	.4byte	.LFE172-.LFB172
+	.byte	0x4
+	.4byte	.LCFI40-.LFB172
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI41-.LCFI40
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI42-.LCFI41
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE26:
+.LSFDE28:
+	.4byte	.LEFDE28-.LASFDE28
+.LASFDE28:
+	.4byte	.Lframe0
+	.4byte	.LFB173
+	.4byte	.LFE173-.LFB173
+	.byte	0x4
+	.4byte	.LCFI43-.LFB173
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI44-.LCFI43
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI45-.LCFI44
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE28:
+.LSFDE30:
+	.4byte	.LEFDE30-.LASFDE30
+.LASFDE30:
+	.4byte	.Lframe0
+	.4byte	.LFB174
+	.4byte	.LFE174-.LFB174
+	.byte	0x4
+	.4byte	.LCFI46-.LFB174
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI47-.LCFI46
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI48-.LCFI47
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE30:
+.LSFDE32:
+	.4byte	.LEFDE32-.LASFDE32
+.LASFDE32:
+	.4byte	.Lframe0
+	.4byte	.LFB175
+	.4byte	.LFE175-.LFB175
+	.byte	0x4
+	.4byte	.LCFI49-.LFB175
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI50-.LCFI49
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI51-.LCFI50
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE32:
+.LSFDE34:
+	.4byte	.LEFDE34-.LASFDE34
+.LASFDE34:
+	.4byte	.Lframe0
+	.4byte	.LFB177
+	.4byte	.LFE177-.LFB177
+	.byte	0x4
+	.4byte	.LCFI52-.LFB177
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI53-.LCFI52
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI54-.LCFI53
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE34:
+.LSFDE36:
+	.4byte	.LEFDE36-.LASFDE36
+.LASFDE36:
+	.4byte	.Lframe0
+	.4byte	.LFB178
+	.4byte	.LFE178-.LFB178
+	.byte	0x4
+	.4byte	.LCFI55-.LFB178
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI56-.LCFI55
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI57-.LCFI56
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE36:
+.LSFDE38:
+	.4byte	.LEFDE38-.LASFDE38
+.LASFDE38:
+	.4byte	.Lframe0
+	.4byte	.LFB179
+	.4byte	.LFE179-.LFB179
+	.byte	0x4
+	.4byte	.LCFI58-.LFB179
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI59-.LCFI58
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI60-.LCFI59
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE38:
+.LSFDE40:
+	.4byte	.LEFDE40-.LASFDE40
+.LASFDE40:
+	.4byte	.Lframe0
+	.4byte	.LFB181
+	.4byte	.LFE181-.LFB181
+	.byte	0x4
+	.4byte	.LCFI61-.LFB181
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI62-.LCFI61
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI63-.LCFI62
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE40:
+.LSFDE42:
+	.4byte	.LEFDE42-.LASFDE42
+.LASFDE42:
+	.4byte	.Lframe0
+	.4byte	.LFB182
+	.4byte	.LFE182-.LFB182
+	.byte	0x4
+	.4byte	.LCFI64-.LFB182
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI65-.LCFI64
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI66-.LCFI65
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE42:
+.LSFDE44:
+	.4byte	.LEFDE44-.LASFDE44
+.LASFDE44:
+	.4byte	.Lframe0
+	.4byte	.LFB183
+	.4byte	.LFE183-.LFB183
+	.byte	0x4
+	.4byte	.LCFI67-.LFB183
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI68-.LCFI67
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI69-.LCFI68
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE44:
+.LSFDE46:
+	.4byte	.LEFDE46-.LASFDE46
+.LASFDE46:
+	.4byte	.Lframe0
+	.4byte	.LFB186
+	.4byte	.LFE186-.LFB186
+	.byte	0x4
+	.4byte	.LCFI70-.LFB186
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI71-.LCFI70
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI72-.LCFI71
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI73-.LCFI72
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI74-.LCFI73
+	.byte	0xb
+	.align	2
+.LEFDE46:
+.LSFDE48:
+	.4byte	.LEFDE48-.LASFDE48
+.LASFDE48:
+	.4byte	.Lframe0
+	.4byte	.LFB185
+	.4byte	.LFE185-.LFB185
+	.byte	0x4
+	.4byte	.LCFI75-.LFB185
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI76-.LCFI75
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI77-.LCFI76
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE48:
+.LSFDE50:
+	.4byte	.LEFDE50-.LASFDE50
+.LASFDE50:
+	.4byte	.Lframe0
+	.4byte	.LFB187
+	.4byte	.LFE187-.LFB187
+	.byte	0x4
+	.4byte	.LCFI78-.LFB187
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI79-.LCFI78
+	.byte	0x83
+	.uleb128 0xc
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI80-.LCFI79
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE50:
+.LSFDE52:
+	.4byte	.LEFDE52-.LASFDE52
+.LASFDE52:
+	.4byte	.Lframe0
+	.4byte	.LFB184
+	.4byte	.LFE184-.LFB184
+	.byte	0x4
+	.4byte	.LCFI81-.LFB184
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI82-.LCFI81
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI83-.LCFI82
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE52:
+.LSFDE54:
+	.4byte	.LEFDE54-.LASFDE54
+.LASFDE54:
+	.4byte	.Lframe0
+	.4byte	.LFB188
+	.4byte	.LFE188-.LFB188
+	.byte	0x4
+	.4byte	.LCFI84-.LFB188
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI85-.LCFI84
+	.byte	0x84
+	.uleb128 0xa
+	.byte	0x85
+	.uleb128 0x9
+	.byte	0x86
+	.uleb128 0x8
+	.byte	0x87
+	.uleb128 0x7
+	.byte	0x88
+	.uleb128 0x6
+	.byte	0x89
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI86-.LCFI85
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE54:
+.LSFDE56:
+	.4byte	.LEFDE56-.LASFDE56
+.LASFDE56:
+	.4byte	.Lframe0
+	.4byte	.LFB189
+	.4byte	.LFE189-.LFB189
+	.byte	0x4
+	.4byte	.LCFI87-.LFB189
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI88-.LCFI87
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI89-.LCFI88
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE56:
+.LSFDE58:
+	.4byte	.LEFDE58-.LASFDE58
+.LASFDE58:
+	.4byte	.Lframe0
+	.4byte	.LFB190
+	.4byte	.LFE190-.LFB190
+	.byte	0x4
+	.4byte	.LCFI90-.LFB190
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI91-.LCFI90
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI92-.LCFI91
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE58:
+.LSFDE60:
+	.4byte	.LEFDE60-.LASFDE60
+.LASFDE60:
+	.4byte	.Lframe0
+	.4byte	.LFB191
+	.4byte	.LFE191-.LFB191
+	.byte	0x4
+	.4byte	.LCFI93-.LFB191
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI94-.LCFI93
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI95-.LCFI94
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE60:
+.LSFDE62:
+	.4byte	.LEFDE62-.LASFDE62
+.LASFDE62:
+	.4byte	.Lframe0
+	.4byte	.LFB192
+	.4byte	.LFE192-.LFB192
+	.byte	0x4
+	.4byte	.LCFI96-.LFB192
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI97-.LCFI96
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI98-.LCFI97
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE62:
+.LSFDE64:
+	.4byte	.LEFDE64-.LASFDE64
+.LASFDE64:
+	.4byte	.Lframe0
+	.4byte	.LFB195
+	.4byte	.LFE195-.LFB195
+	.byte	0x4
+	.4byte	.LCFI99-.LFB195
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI100-.LCFI99
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI101-.LCFI100
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE64:
+.LSFDE66:
+	.4byte	.LEFDE66-.LASFDE66
+.LASFDE66:
+	.4byte	.Lframe0
+	.4byte	.LFB200
+	.4byte	.LFE200-.LFB200
+	.byte	0x4
+	.4byte	.LCFI102-.LFB200
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI103-.LCFI102
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI104-.LCFI103
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE66:
+.LSFDE68:
+	.4byte	.LEFDE68-.LASFDE68
+.LASFDE68:
+	.4byte	.Lframe0
+	.4byte	.LFB206
+	.4byte	.LFE206-.LFB206
+	.byte	0x4
+	.4byte	.LCFI105-.LFB206
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI106-.LCFI105
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI107-.LCFI106
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE68:
+.LSFDE70:
+	.4byte	.LEFDE70-.LASFDE70
+.LASFDE70:
+	.4byte	.Lframe0
+	.4byte	.LFB212
+	.4byte	.LFE212-.LFB212
+	.byte	0x4
+	.4byte	.LCFI108-.LFB212
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI109-.LCFI108
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI110-.LCFI109
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE70:
+.LSFDE72:
+	.4byte	.LEFDE72-.LASFDE72
+.LASFDE72:
+	.4byte	.Lframe0
+	.4byte	.LFB213
+	.4byte	.LFE213-.LFB213
+	.byte	0x4
+	.4byte	.LCFI111-.LFB213
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI112-.LCFI111
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI113-.LCFI112
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE72:
+.LSFDE74:
+	.4byte	.LEFDE74-.LASFDE74
+.LASFDE74:
+	.4byte	.Lframe0
+	.4byte	.LFB219
+	.4byte	.LFE219-.LFB219
+	.byte	0x4
+	.4byte	.LCFI114-.LFB219
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI115-.LCFI114
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI116-.LCFI115
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE74:
+.LSFDE76:
+	.4byte	.LEFDE76-.LASFDE76
+.LASFDE76:
+	.4byte	.Lframe0
+	.4byte	.LFB222
+	.4byte	.LFE222-.LFB222
+	.byte	0x4
+	.4byte	.LCFI117-.LFB222
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI118-.LCFI117
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI119-.LCFI118
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE76:
+.LSFDE78:
+	.4byte	.LEFDE78-.LASFDE78
+.LASFDE78:
+	.4byte	.Lframe0
+	.4byte	.LFB224
+	.4byte	.LFE224-.LFB224
+	.byte	0x4
+	.4byte	.LCFI120-.LFB224
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI121-.LCFI120
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI122-.LCFI121
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI123-.LCFI122
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI124-.LCFI123
+	.byte	0xb
+	.align	2
+.LEFDE78:
+.LSFDE80:
+	.4byte	.LEFDE80-.LASFDE80
+.LASFDE80:
+	.4byte	.Lframe0
+	.4byte	.LFB233
+	.4byte	.LFE233-.LFB233
+	.byte	0x4
+	.4byte	.LCFI125-.LFB233
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI126-.LCFI125
+	.byte	0x83
+	.uleb128 0xc
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI127-.LCFI126
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE80:
+.LSFDE82:
+	.4byte	.LEFDE82-.LASFDE82
+.LASFDE82:
+	.4byte	.Lframe0
+	.4byte	.LFB234
+	.4byte	.LFE234-.LFB234
+	.byte	0x4
+	.4byte	.LCFI128-.LFB234
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI129-.LCFI128
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI130-.LCFI129
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE82:
+.LSFDE84:
+	.4byte	.LEFDE84-.LASFDE84
+.LASFDE84:
+	.4byte	.Lframe0
+	.4byte	.LFB235
+	.4byte	.LFE235-.LFB235
+	.byte	0x4
+	.4byte	.LCFI131-.LFB235
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI132-.LCFI131
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI133-.LCFI132
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE84:
+.LSFDE86:
+	.4byte	.LEFDE86-.LASFDE86
+.LASFDE86:
+	.4byte	.Lframe0
+	.4byte	.LFB140
+	.4byte	.LFE140-.LFB140
+	.byte	0x4
+	.4byte	.LCFI134-.LFB140
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI135-.LCFI134
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI136-.LCFI135
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI137-.LCFI136
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI138-.LCFI137
+	.byte	0xb
+	.align	2
+.LEFDE86:
+.LSFDE88:
+	.4byte	.LEFDE88-.LASFDE88
+.LASFDE88:
+	.4byte	.Lframe0
+	.4byte	.LFB141
+	.4byte	.LFE141-.LFB141
+	.byte	0x4
+	.4byte	.LCFI139-.LFB141
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI140-.LCFI139
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI141-.LCFI140
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE88:
+.LSFDE90:
+	.4byte	.LEFDE90-.LASFDE90
+.LASFDE90:
+	.4byte	.Lframe0
+	.4byte	.LFB236
+	.4byte	.LFE236-.LFB236
+	.byte	0x4
+	.4byte	.LCFI142-.LFB236
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI143-.LCFI142
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI144-.LCFI143
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI145-.LCFI144
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI146-.LCFI145
+	.byte	0xb
+	.align	2
+.LEFDE90:
+.LSFDE92:
+	.4byte	.LEFDE92-.LASFDE92
+.LASFDE92:
+	.4byte	.Lframe0
+	.4byte	.LFB237
+	.4byte	.LFE237-.LFB237
+	.byte	0x4
+	.4byte	.LCFI147-.LFB237
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI148-.LCFI147
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI149-.LCFI148
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE92:
+.LSFDE94:
+	.4byte	.LEFDE94-.LASFDE94
+.LASFDE94:
+	.4byte	.Lframe0
+	.4byte	.LFB240
+	.4byte	.LFE240-.LFB240
+	.byte	0x4
+	.4byte	.LCFI150-.LFB240
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI151-.LCFI150
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI152-.LCFI151
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE94:
+.LSFDE96:
+	.4byte	.LEFDE96-.LASFDE96
+.LASFDE96:
+	.4byte	.Lframe0
+	.4byte	.LFB243
+	.4byte	.LFE243-.LFB243
+	.byte	0x4
+	.4byte	.LCFI153-.LFB243
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI154-.LCFI153
+	.byte	0x84
+	.uleb128 0xa
+	.byte	0x85
+	.uleb128 0x9
+	.byte	0x86
+	.uleb128 0x8
+	.byte	0x87
+	.uleb128 0x7
+	.byte	0x88
+	.uleb128 0x6
+	.byte	0x89
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI155-.LCFI154
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE96:
+.LSFDE98:
+	.4byte	.LEFDE98-.LASFDE98
+.LASFDE98:
+	.4byte	.Lframe0
+	.4byte	.LFB244
+	.4byte	.LFE244-.LFB244
+	.byte	0x4
+	.4byte	.LCFI156-.LFB244
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI157-.LCFI156
+	.byte	0x83
+	.uleb128 0xc
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI158-.LCFI157
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE98:
+.LSFDE100:
+	.4byte	.LEFDE100-.LASFDE100
+.LASFDE100:
+	.4byte	.Lframe0
+	.4byte	.LFB245
+	.4byte	.LFE245-.LFB245
+	.byte	0x4
+	.4byte	.LCFI159-.LFB245
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI160-.LCFI159
+	.byte	0x84
+	.uleb128 0xa
+	.byte	0x85
+	.uleb128 0x9
+	.byte	0x86
+	.uleb128 0x8
+	.byte	0x87
+	.uleb128 0x7
+	.byte	0x88
+	.uleb128 0x6
+	.byte	0x89
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI161-.LCFI160
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE100:
+.LSFDE102:
+	.4byte	.LEFDE102-.LASFDE102
+.LASFDE102:
+	.4byte	.Lframe0
+	.4byte	.LFB246
+	.4byte	.LFE246-.LFB246
+	.byte	0x4
+	.4byte	.LCFI162-.LFB246
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI163-.LCFI162
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI164-.LCFI163
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE102:
+.LSFDE104:
+	.4byte	.LEFDE104-.LASFDE104
+.LASFDE104:
+	.4byte	.Lframe0
+	.4byte	.LFB247
+	.4byte	.LFE247-.LFB247
+	.byte	0x4
+	.4byte	.LCFI165-.LFB247
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI166-.LCFI165
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI167-.LCFI166
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE104:
+.LSFDE106:
+	.4byte	.LEFDE106-.LASFDE106
+.LASFDE106:
+	.4byte	.Lframe0
+	.4byte	.LFB254
+	.4byte	.LFE254-.LFB254
+	.byte	0x4
+	.4byte	.LCFI168-.LFB254
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI169-.LCFI168
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI170-.LCFI169
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE106:
+.LSFDE108:
+	.4byte	.LEFDE108-.LASFDE108
+.LASFDE108:
+	.4byte	.Lframe0
+	.4byte	.LFB255
+	.4byte	.LFE255-.LFB255
+	.byte	0x4
+	.4byte	.LCFI171-.LFB255
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI172-.LCFI171
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI173-.LCFI172
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE108:
+.LSFDE110:
+	.4byte	.LEFDE110-.LASFDE110
+.LASFDE110:
+	.4byte	.Lframe0
+	.4byte	.LFB256
+	.4byte	.LFE256-.LFB256
+	.byte	0x4
+	.4byte	.LCFI174-.LFB256
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI175-.LCFI174
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI176-.LCFI175
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE110:
+.LSFDE112:
+	.4byte	.LEFDE112-.LASFDE112
+.LASFDE112:
+	.4byte	.Lframe0
+	.4byte	.LFB262
+	.4byte	.LFE262-.LFB262
+	.byte	0x4
+	.4byte	.LCFI177-.LFB262
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI178-.LCFI177
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI179-.LCFI178
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI180-.LCFI179
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI181-.LCFI180
+	.byte	0xb
+	.align	2
+.LEFDE112:
+.LSFDE114:
+	.4byte	.LEFDE114-.LASFDE114
+.LASFDE114:
+	.4byte	.Lframe0
+	.4byte	.LFB170
+	.4byte	.LFE170-.LFB170
+	.byte	0x4
+	.4byte	.LCFI182-.LFB170
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI183-.LCFI182
+	.byte	0x83
+	.uleb128 0xc
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI184-.LCFI183
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE114:
+.LSFDE116:
+	.4byte	.LEFDE116-.LASFDE116
+.LASFDE116:
+	.4byte	.Lframe0
+	.4byte	.LFB176
+	.4byte	.LFE176-.LFB176
+	.byte	0x4
+	.4byte	.LCFI185-.LFB176
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI186-.LCFI185
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI187-.LCFI186
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI188-.LCFI187
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI189-.LCFI188
+	.byte	0xb
+	.align	2
+.LEFDE116:
+.LSFDE118:
+	.4byte	.LEFDE118-.LASFDE118
+.LASFDE118:
+	.4byte	.Lframe0
+	.4byte	.LFB263
+	.4byte	.LFE263-.LFB263
+	.byte	0x4
+	.4byte	.LCFI190-.LFB263
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI191-.LCFI190
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI192-.LCFI191
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI193-.LCFI192
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI194-.LCFI193
+	.byte	0xb
+	.align	2
+.LEFDE118:
+.LSFDE120:
+	.4byte	.LEFDE120-.LASFDE120
+.LASFDE120:
+	.4byte	.Lframe0
+	.4byte	.LFB264
+	.4byte	.LFE264-.LFB264
+	.byte	0x4
+	.4byte	.LCFI195-.LFB264
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI196-.LCFI195
+	.byte	0x84
+	.uleb128 0xa
+	.byte	0x85
+	.uleb128 0x9
+	.byte	0x86
+	.uleb128 0x8
+	.byte	0x87
+	.uleb128 0x7
+	.byte	0x88
+	.uleb128 0x6
+	.byte	0x89
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI197-.LCFI196
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI198-.LCFI197
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x28
+	.byte	0x4
+	.4byte	.LCFI199-.LCFI198
+	.byte	0xb
+	.align	2
+.LEFDE120:
+.LSFDE122:
+	.4byte	.LEFDE122-.LASFDE122
+.LASFDE122:
+	.4byte	.Lframe0
+	.4byte	.LFB180
+	.4byte	.LFE180-.LFB180
+	.byte	0x4
+	.4byte	.LCFI200-.LFB180
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI201-.LCFI200
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI202-.LCFI201
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE122:
+.LSFDE124:
+	.4byte	.LEFDE124-.LASFDE124
+.LASFDE124:
+	.4byte	.Lframe0
+	.4byte	.LFB149
+	.4byte	.LFE149-.LFB149
+	.byte	0x4
+	.4byte	.LCFI203-.LFB149
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI204-.LCFI203
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI205-.LCFI204
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI206-.LCFI205
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI207-.LCFI206
+	.byte	0xb
+	.align	2
+.LEFDE124:
+.LSFDE126:
+	.4byte	.LEFDE126-.LASFDE126
+.LASFDE126:
+	.4byte	.Lframe0
+	.4byte	.LFB265
+	.4byte	.LFE265-.LFB265
+	.byte	0x4
+	.4byte	.LCFI208-.LFB265
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI209-.LCFI208
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI210-.LCFI209
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI211-.LCFI210
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x18
+	.align	2
+.LEFDE126:
+.LSFDE128:
+	.4byte	.LEFDE128-.LASFDE128
+.LASFDE128:
+	.4byte	.Lframe0
+	.4byte	.LFB266
+	.4byte	.LFE266-.LFB266
+	.byte	0x4
+	.4byte	.LCFI212-.LFB266
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI213-.LCFI212
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI214-.LCFI213
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE128:
+.LSFDE130:
+	.4byte	.LEFDE130-.LASFDE130
+.LASFDE130:
+	.4byte	.Lframe0
+	.4byte	.LFB267
+	.4byte	.LFE267-.LFB267
+	.byte	0x4
+	.4byte	.LCFI215-.LFB267
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI216-.LCFI215
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI217-.LCFI216
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE130:
+.LSFDE132:
+	.4byte	.LEFDE132-.LASFDE132
+.LASFDE132:
+	.4byte	.Lframe0
+	.4byte	.LFB146
+	.4byte	.LFE146-.LFB146
+	.byte	0x4
+	.4byte	.LCFI218-.LFB146
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI219-.LCFI218
+	.byte	0x84
+	.uleb128 0xa
+	.byte	0x85
+	.uleb128 0x9
+	.byte	0x86
+	.uleb128 0x8
+	.byte	0x87
+	.uleb128 0x7
+	.byte	0x88
+	.uleb128 0x6
+	.byte	0x89
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI220-.LCFI219
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE132:
+.LSFDE134:
+	.4byte	.LEFDE134-.LASFDE134
+.LASFDE134:
+	.4byte	.Lframe0
+	.4byte	.LFB165
+	.4byte	.LFE165-.LFB165
+	.byte	0x4
+	.4byte	.LCFI221-.LFB165
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI222-.LCFI221
+	.byte	0x84
+	.uleb128 0xa
+	.byte	0x85
+	.uleb128 0x9
+	.byte	0x86
+	.uleb128 0x8
+	.byte	0x87
+	.uleb128 0x7
+	.byte	0x88
+	.uleb128 0x6
+	.byte	0x89
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI223-.LCFI222
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE134:
+.LSFDE136:
+	.4byte	.LEFDE136-.LASFDE136
+.LASFDE136:
+	.4byte	.Lframe0
+	.4byte	.LFB193
+	.4byte	.LFE193-.LFB193
+	.byte	0x4
+	.4byte	.LCFI224-.LFB193
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI225-.LCFI224
+	.byte	0x84
+	.uleb128 0xa
+	.byte	0x85
+	.uleb128 0x9
+	.byte	0x86
+	.uleb128 0x8
+	.byte	0x87
+	.uleb128 0x7
+	.byte	0x88
+	.uleb128 0x6
+	.byte	0x89
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI226-.LCFI225
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE136:
+.LSFDE138:
+	.4byte	.LEFDE138-.LASFDE138
+.LASFDE138:
+	.4byte	.Lframe0
+	.4byte	.LFB194
+	.4byte	.LFE194-.LFB194
+	.byte	0x4
+	.4byte	.LCFI227-.LFB194
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI228-.LCFI227
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI229-.LCFI228
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI230-.LCFI229
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI231-.LCFI230
+	.byte	0xb
+	.align	2
+.LEFDE138:
+.LSFDE140:
+	.4byte	.LEFDE140-.LASFDE140
+.LASFDE140:
+	.4byte	.Lframe0
+	.4byte	.LFB197
+	.4byte	.LFE197-.LFB197
+	.byte	0x4
+	.4byte	.LCFI232-.LFB197
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI233-.LCFI232
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI234-.LCFI233
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE140:
+.LSFDE142:
+	.4byte	.LEFDE142-.LASFDE142
+.LASFDE142:
+	.4byte	.Lframe0
+	.4byte	.LFB198
+	.4byte	.LFE198-.LFB198
+	.byte	0x4
+	.4byte	.LCFI235-.LFB198
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI236-.LCFI235
+	.byte	0x83
+	.uleb128 0xc
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI237-.LCFI236
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE142:
+.LSFDE144:
+	.4byte	.LEFDE144-.LASFDE144
+.LASFDE144:
+	.4byte	.Lframe0
+	.4byte	.LFB196
+	.4byte	.LFE196-.LFB196
+	.byte	0x4
+	.4byte	.LCFI238-.LFB196
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI239-.LCFI238
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI240-.LCFI239
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI241-.LCFI240
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI242-.LCFI241
+	.byte	0xb
+	.align	2
+.LEFDE144:
+.LSFDE146:
+	.4byte	.LEFDE146-.LASFDE146
+.LASFDE146:
+	.4byte	.Lframe0
+	.4byte	.LFB199
+	.4byte	.LFE199-.LFB199
+	.byte	0x4
+	.4byte	.LCFI243-.LFB199
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI244-.LCFI243
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI245-.LCFI244
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE146:
+.LSFDE148:
+	.4byte	.LEFDE148-.LASFDE148
+.LASFDE148:
+	.4byte	.Lframe0
+	.4byte	.LFB202
+	.4byte	.LFE202-.LFB202
+	.byte	0x4
+	.4byte	.LCFI246-.LFB202
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI247-.LCFI246
+	.byte	0x83
+	.uleb128 0xc
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI248-.LCFI247
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE148:
+.LSFDE150:
+	.4byte	.LEFDE150-.LASFDE150
+.LASFDE150:
+	.4byte	.Lframe0
+	.4byte	.LFB220
+	.4byte	.LFE220-.LFB220
+	.byte	0x4
+	.4byte	.LCFI249-.LFB220
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI250-.LCFI249
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI251-.LCFI250
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI252-.LCFI251
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x24
+	.align	2
+.LEFDE150:
+.LSFDE152:
+	.4byte	.LEFDE152-.LASFDE152
+.LASFDE152:
+	.4byte	.Lframe0
+	.4byte	.LFB231
+	.4byte	.LFE231-.LFB231
+	.byte	0x4
+	.4byte	.LCFI253-.LFB231
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI254-.LCFI253
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI255-.LCFI254
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI256-.LCFI255
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x20
+	.byte	0x4
+	.4byte	.LCFI257-.LCFI256
+	.byte	0xb
+	.align	2
+.LEFDE152:
+.LSFDE154:
+	.4byte	.LEFDE154-.LASFDE154
+.LASFDE154:
+	.4byte	.Lframe0
+	.4byte	.LFB258
+	.4byte	.LFE258-.LFB258
+	.byte	0x4
+	.4byte	.LCFI258-.LFB258
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI259-.LCFI258
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI260-.LCFI259
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI261-.LCFI260
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x18
+	.byte	0x4
+	.4byte	.LCFI262-.LCFI261
+	.byte	0xb
+	.align	2
+.LEFDE154:
+.LSFDE156:
+	.4byte	.LEFDE156-.LASFDE156
+.LASFDE156:
+	.4byte	.Lframe0
+	.4byte	.LFB230
+	.4byte	.LFE230-.LFB230
+	.byte	0x4
+	.4byte	.LCFI263-.LFB230
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI264-.LCFI263
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI265-.LCFI264
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI266-.LCFI265
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI267-.LCFI266
+	.byte	0xb
+	.align	2
+.LEFDE156:
+.LSFDE158:
+	.4byte	.LEFDE158-.LASFDE158
+.LASFDE158:
+	.4byte	.Lframe0
+	.4byte	.LFB207
+	.4byte	.LFE207-.LFB207
+	.byte	0x4
+	.4byte	.LCFI268-.LFB207
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI269-.LCFI268
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI270-.LCFI269
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE158:
+.LSFDE160:
+	.4byte	.LEFDE160-.LASFDE160
+.LASFDE160:
+	.4byte	.Lframe0
+	.4byte	.LFB210
+	.4byte	.LFE210-.LFB210
+	.byte	0x4
+	.4byte	.LCFI271-.LFB210
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI272-.LCFI271
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI273-.LCFI272
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI274-.LCFI273
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI275-.LCFI274
+	.byte	0xb
+	.align	2
+.LEFDE160:
+.LSFDE162:
+	.4byte	.LEFDE162-.LASFDE162
+.LASFDE162:
+	.4byte	.Lframe0
+	.4byte	.LFB215
+	.4byte	.LFE215-.LFB215
+	.byte	0x4
+	.4byte	.LCFI276-.LFB215
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI277-.LCFI276
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI278-.LCFI277
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI279-.LCFI278
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI280-.LCFI279
+	.byte	0xb
+	.align	2
+.LEFDE162:
+.LSFDE164:
+	.4byte	.LEFDE164-.LASFDE164
+.LASFDE164:
+	.4byte	.Lframe0
+	.4byte	.LFB216
+	.4byte	.LFE216-.LFB216
+	.byte	0x4
+	.4byte	.LCFI281-.LFB216
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI282-.LCFI281
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI283-.LCFI282
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE164:
+.LSFDE166:
+	.4byte	.LEFDE166-.LASFDE166
+.LASFDE166:
+	.4byte	.Lframe0
+	.4byte	.LFB217
+	.4byte	.LFE217-.LFB217
+	.byte	0x4
+	.4byte	.LCFI284-.LFB217
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI285-.LCFI284
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI286-.LCFI285
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE166:
+.LSFDE168:
+	.4byte	.LEFDE168-.LASFDE168
+.LASFDE168:
+	.4byte	.Lframe0
+	.4byte	.LFB218
+	.4byte	.LFE218-.LFB218
+	.byte	0x4
+	.4byte	.LCFI287-.LFB218
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI288-.LCFI287
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI289-.LCFI288
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE168:
+.LSFDE170:
+	.4byte	.LEFDE170-.LASFDE170
+.LASFDE170:
+	.4byte	.Lframe0
+	.4byte	.LFB147
+	.4byte	.LFE147-.LFB147
+	.byte	0x4
+	.4byte	.LCFI290-.LFB147
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI291-.LCFI290
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI292-.LCFI291
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE170:
+.LSFDE172:
+	.4byte	.LEFDE172-.LASFDE172
+.LASFDE172:
+	.4byte	.Lframe0
+	.4byte	.LFB225
+	.4byte	.LFE225-.LFB225
+	.byte	0x4
+	.4byte	.LCFI293-.LFB225
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI294-.LCFI293
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI295-.LCFI294
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI296-.LCFI295
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.align	2
+.LEFDE172:
+.LSFDE174:
+	.4byte	.LEFDE174-.LASFDE174
+.LASFDE174:
+	.4byte	.Lframe0
+	.4byte	.LFB249
+	.4byte	.LFE249-.LFB249
+	.byte	0x4
+	.4byte	.LCFI297-.LFB249
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI298-.LCFI297
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI299-.LCFI298
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE174:
+.LSFDE176:
+	.4byte	.LEFDE176-.LASFDE176
+.LASFDE176:
+	.4byte	.Lframe0
+	.4byte	.LFB250
+	.4byte	.LFE250-.LFB250
+	.byte	0x4
+	.4byte	.LCFI300-.LFB250
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI301-.LCFI300
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI302-.LCFI301
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI303-.LCFI302
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.align	2
+.LEFDE176:
+.LSFDE178:
+	.4byte	.LEFDE178-.LASFDE178
+.LASFDE178:
+	.4byte	.Lframe0
+	.4byte	.LFB268
+	.4byte	.LFE268-.LFB268
+	.byte	0x4
+	.4byte	.LCFI304-.LFB268
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI305-.LCFI304
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI306-.LCFI305
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE178:
+.LSFDE180:
+	.4byte	.LEFDE180-.LASFDE180
+.LASFDE180:
+	.4byte	.Lframe0
+	.4byte	.LFB166
+	.4byte	.LFE166-.LFB166
+	.byte	0x4
+	.4byte	.LCFI307-.LFB166
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI308-.LCFI307
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI309-.LCFI308
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI310-.LCFI309
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.align	2
+.LEFDE180:
+.LSFDE182:
+	.4byte	.LEFDE182-.LASFDE182
+.LASFDE182:
+	.4byte	.Lframe0
+	.4byte	.LFB238
+	.4byte	.LFE238-.LFB238
+	.byte	0x4
+	.4byte	.LCFI311-.LFB238
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI312-.LCFI311
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI313-.LCFI312
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI314-.LCFI313
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.align	2
+.LEFDE182:
+.LSFDE184:
+	.4byte	.LEFDE184-.LASFDE184
+.LASFDE184:
+	.4byte	.Lframe0
+	.4byte	.LFB257
+	.4byte	.LFE257-.LFB257
+	.byte	0x4
+	.4byte	.LCFI315-.LFB257
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI316-.LCFI315
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI317-.LCFI316
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI318-.LCFI317
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI319-.LCFI318
+	.byte	0xb
+	.align	2
+.LEFDE184:
+.LSFDE186:
+	.4byte	.LEFDE186-.LASFDE186
+.LASFDE186:
+	.4byte	.Lframe0
+	.4byte	.LFB241
+	.4byte	.LFE241-.LFB241
+	.byte	0x4
+	.4byte	.LCFI320-.LFB241
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI321-.LCFI320
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI322-.LCFI321
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE186:
+.LSFDE188:
+	.4byte	.LEFDE188-.LASFDE188
+.LASFDE188:
+	.4byte	.Lframe0
+	.4byte	.LFB242
+	.4byte	.LFE242-.LFB242
+	.byte	0x4
+	.4byte	.LCFI323-.LFB242
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI324-.LCFI323
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI325-.LCFI324
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE188:
+.LSFDE190:
+	.4byte	.LEFDE190-.LASFDE190
+.LASFDE190:
+	.4byte	.Lframe0
+	.4byte	.LFB208
+	.4byte	.LFE208-.LFB208
+	.byte	0x4
+	.4byte	.LCFI326-.LFB208
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI327-.LCFI326
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI328-.LCFI327
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI329-.LCFI328
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI330-.LCFI329
+	.byte	0xb
+	.align	2
+.LEFDE190:
+.LSFDE192:
+	.4byte	.LEFDE192-.LASFDE192
+.LASFDE192:
+	.4byte	.Lframe0
+	.4byte	.LFB201
+	.4byte	.LFE201-.LFB201
+	.byte	0x4
+	.4byte	.LCFI331-.LFB201
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI332-.LCFI331
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI333-.LCFI332
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE192:
+.LSFDE194:
+	.4byte	.LEFDE194-.LASFDE194
+.LASFDE194:
+	.4byte	.Lframe0
+	.4byte	.LFB221
+	.4byte	.LFE221-.LFB221
+	.byte	0x4
+	.4byte	.LCFI334-.LFB221
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI335-.LCFI334
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI336-.LCFI335
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI337-.LCFI336
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI338-.LCFI337
+	.byte	0xb
+	.align	2
+.LEFDE194:
+.LSFDE196:
+	.4byte	.LEFDE196-.LASFDE196
+.LASFDE196:
+	.4byte	.Lframe0
+	.4byte	.LFB228
+	.4byte	.LFE228-.LFB228
+	.byte	0x4
+	.4byte	.LCFI339-.LFB228
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI340-.LCFI339
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI341-.LCFI340
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI342-.LCFI341
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x20
+	.byte	0x4
+	.4byte	.LCFI343-.LCFI342
+	.byte	0xb
+	.align	2
+.LEFDE196:
+.LSFDE198:
+	.4byte	.LEFDE198-.LASFDE198
+.LASFDE198:
+	.4byte	.Lframe0
+	.4byte	.LFB169
+	.4byte	.LFE169-.LFB169
+	.byte	0x4
+	.4byte	.LCFI344-.LFB169
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI345-.LCFI344
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI346-.LCFI345
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE198:
+.LSFDE200:
+	.4byte	.LEFDE200-.LASFDE200
+.LASFDE200:
+	.4byte	.Lframe0
+	.4byte	.LFB171
+	.4byte	.LFE171-.LFB171
+	.byte	0x4
+	.4byte	.LCFI347-.LFB171
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI348-.LCFI347
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI349-.LCFI348
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI350-.LCFI349
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.align	2
+.LEFDE200:
+.LSFDE202:
+	.4byte	.LEFDE202-.LASFDE202
+.LASFDE202:
+	.4byte	.Lframe0
+	.4byte	.LFB203
+	.4byte	.LFE203-.LFB203
+	.byte	0x4
+	.4byte	.LCFI351-.LFB203
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI352-.LCFI351
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI353-.LCFI352
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI354-.LCFI353
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI355-.LCFI354
+	.byte	0xb
+	.align	2
+.LEFDE202:
+.LSFDE204:
+	.4byte	.LEFDE204-.LASFDE204
+.LASFDE204:
+	.4byte	.Lframe0
+	.4byte	.LFB226
+	.4byte	.LFE226-.LFB226
+	.byte	0x4
+	.4byte	.LCFI356-.LFB226
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI357-.LCFI356
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI358-.LCFI357
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE204:
+.LSFDE206:
+	.4byte	.LEFDE206-.LASFDE206
+.LASFDE206:
+	.4byte	.Lframe0
+	.4byte	.LFB205
+	.4byte	.LFE205-.LFB205
+	.byte	0x4
+	.4byte	.LCFI359-.LFB205
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI360-.LCFI359
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI361-.LCFI360
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE206:
+.LSFDE208:
+	.4byte	.LEFDE208-.LASFDE208
+.LASFDE208:
+	.4byte	.Lframe0
+	.4byte	.LFB204
+	.4byte	.LFE204-.LFB204
+	.byte	0x4
+	.4byte	.LCFI362-.LFB204
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI363-.LCFI362
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI364-.LCFI363
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI365-.LCFI364
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI366-.LCFI365
+	.byte	0xb
+	.align	2
+.LEFDE208:
+.LSFDE210:
+	.4byte	.LEFDE210-.LASFDE210
+.LASFDE210:
+	.4byte	.Lframe0
+	.4byte	.LFB211
+	.4byte	.LFE211-.LFB211
+	.byte	0x4
+	.4byte	.LCFI367-.LFB211
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI368-.LCFI367
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI369-.LCFI368
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE210:
+.LSFDE212:
+	.4byte	.LEFDE212-.LASFDE212
+.LASFDE212:
+	.4byte	.Lframe0
+	.4byte	.LFB227
+	.4byte	.LFE227-.LFB227
+	.byte	0x4
+	.4byte	.LCFI370-.LFB227
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI371-.LCFI370
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI372-.LCFI371
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE212:
+.LSFDE214:
+	.4byte	.LEFDE214-.LASFDE214
+.LASFDE214:
+	.4byte	.Lframe0
+	.4byte	.LFB209
+	.4byte	.LFE209-.LFB209
+	.byte	0x4
+	.4byte	.LCFI373-.LFB209
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI374-.LCFI373
+	.byte	0x83
+	.uleb128 0xc
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI375-.LCFI374
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE214:
+.LSFDE216:
+	.4byte	.LEFDE216-.LASFDE216
+.LASFDE216:
+	.4byte	.Lframe0
+	.4byte	.LFB229
+	.4byte	.LFE229-.LFB229
+	.byte	0x4
+	.4byte	.LCFI376-.LFB229
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI377-.LCFI376
+	.byte	0x84
+	.uleb128 0xa
+	.byte	0x85
+	.uleb128 0x9
+	.byte	0x86
+	.uleb128 0x8
+	.byte	0x87
+	.uleb128 0x7
+	.byte	0x88
+	.uleb128 0x6
+	.byte	0x89
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI378-.LCFI377
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI379-.LCFI378
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x28
+	.byte	0x4
+	.4byte	.LCFI380-.LCFI379
+	.byte	0xb
+	.align	2
+.LEFDE216:
+.LSFDE218:
+	.4byte	.LEFDE218-.LASFDE218
+.LASFDE218:
+	.4byte	.Lframe0
+	.4byte	.LFB239
+	.4byte	.LFE239-.LFB239
+	.byte	0x4
+	.4byte	.LCFI381-.LFB239
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI382-.LCFI381
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI383-.LCFI382
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE218:
+.LSFDE220:
+	.4byte	.LEFDE220-.LASFDE220
+.LASFDE220:
+	.4byte	.Lframe0
+	.4byte	.LFB155
+	.4byte	.LFE155-.LFB155
+	.byte	0x4
+	.4byte	.LCFI384-.LFB155
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI385-.LCFI384
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI386-.LCFI385
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI387-.LCFI386
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.align	2
+.LEFDE220:
+.LSFDE222:
+	.4byte	.LEFDE222-.LASFDE222
+.LASFDE222:
+	.4byte	.Lframe0
+	.4byte	.LFB156
+	.4byte	.LFE156-.LFB156
+	.byte	0x4
+	.4byte	.LCFI388-.LFB156
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI389-.LCFI388
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI390-.LCFI389
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE222:
+.LSFDE224:
+	.4byte	.LEFDE224-.LASFDE224
+.LASFDE224:
+	.4byte	.Lframe0
+	.4byte	.LFB152
+	.4byte	.LFE152-.LFB152
+	.byte	0x4
+	.4byte	.LCFI391-.LFB152
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI392-.LCFI391
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI393-.LCFI392
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE224:
+.LSFDE226:
+	.4byte	.LEFDE226-.LASFDE226
+.LASFDE226:
+	.4byte	.Lframe0
+	.4byte	.LFB153
+	.4byte	.LFE153-.LFB153
+	.byte	0x4
+	.4byte	.LCFI394-.LFB153
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI395-.LCFI394
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI396-.LCFI395
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE226:
+.LSFDE228:
+	.4byte	.LEFDE228-.LASFDE228
+.LASFDE228:
+	.4byte	.Lframe0
+	.4byte	.LFB158
+	.4byte	.LFE158-.LFB158
+	.byte	0x4
+	.4byte	.LCFI397-.LFB158
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI398-.LCFI397
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI399-.LCFI398
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI400-.LCFI399
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI401-.LCFI400
+	.byte	0xb
+	.align	2
+.LEFDE228:
+.LSFDE230:
+	.4byte	.LEFDE230-.LASFDE230
+.LASFDE230:
+	.4byte	.Lframe0
+	.4byte	.LFB248
+	.4byte	.LFE248-.LFB248
+	.byte	0x4
+	.4byte	.LCFI402-.LFB248
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI403-.LCFI402
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI404-.LCFI403
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI405-.LCFI404
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI406-.LCFI405
+	.byte	0xb
+	.align	2
+.LEFDE230:
+.LSFDE232:
+	.4byte	.LEFDE232-.LASFDE232
+.LASFDE232:
+	.4byte	.Lframe0
+	.4byte	.LFB251
+	.4byte	.LFE251-.LFB251
+	.byte	0x4
+	.4byte	.LCFI407-.LFB251
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI408-.LCFI407
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI409-.LCFI408
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE232:
+.LSFDE234:
+	.4byte	.LEFDE234-.LASFDE234
+.LASFDE234:
+	.4byte	.Lframe0
+	.4byte	.LFB223
+	.4byte	.LFE223-.LFB223
+	.byte	0x4
+	.4byte	.LCFI410-.LFB223
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI411-.LCFI410
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI412-.LCFI411
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE234:
+.LSFDE236:
+	.4byte	.LEFDE236-.LASFDE236
+.LASFDE236:
+	.4byte	.Lframe0
+	.4byte	.LFB253
+	.4byte	.LFE253-.LFB253
+	.byte	0x4
+	.4byte	.LCFI413-.LFB253
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI414-.LCFI413
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI415-.LCFI414
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE236:
+.LSFDE238:
+	.4byte	.LEFDE238-.LASFDE238
+.LASFDE238:
+	.4byte	.Lframe0
+	.4byte	.LFB252
+	.4byte	.LFE252-.LFB252
+	.byte	0x4
+	.4byte	.LCFI416-.LFB252
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI417-.LCFI416
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI418-.LCFI417
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE238:
+.LSFDE240:
+	.4byte	.LEFDE240-.LASFDE240
+.LASFDE240:
+	.4byte	.Lframe0
+	.4byte	.LFB259
+	.4byte	.LFE259-.LFB259
+	.byte	0x4
+	.4byte	.LCFI419-.LFB259
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI420-.LCFI419
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI421-.LCFI420
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI422-.LCFI421
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI423-.LCFI422
+	.byte	0xb
+	.align	2
+.LEFDE240:
+.LSFDE242:
+	.4byte	.LEFDE242-.LASFDE242
+.LASFDE242:
+	.4byte	.Lframe0
+	.4byte	.LFB260
+	.4byte	.LFE260-.LFB260
+	.byte	0x4
+	.4byte	.LCFI424-.LFB260
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI425-.LCFI424
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI426-.LCFI425
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE242:
+.LSFDE244:
+	.4byte	.LEFDE244-.LASFDE244
+.LASFDE244:
+	.4byte	.Lframe0
+	.4byte	.LFB154
+	.4byte	.LFE154-.LFB154
+	.byte	0x4
+	.4byte	.LCFI427-.LFB154
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI428-.LCFI427
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI429-.LCFI428
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI430-.LCFI429
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI431-.LCFI430
+	.byte	0xb
+	.align	2
+.LEFDE244:
+.LSFDE246:
+	.4byte	.LEFDE246-.LASFDE246
+.LASFDE246:
+	.4byte	.Lframe0
+	.4byte	.LFB159
+	.4byte	.LFE159-.LFB159
+	.byte	0x4
+	.4byte	.LCFI432-.LFB159
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI433-.LCFI432
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI434-.LCFI433
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE246:
+.LSFDE248:
+	.4byte	.LEFDE248-.LASFDE248
+.LASFDE248:
+	.4byte	.Lframe0
+	.4byte	.LFB157
+	.4byte	.LFE157-.LFB157
+	.byte	0x4
+	.4byte	.LCFI435-.LFB157
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI436-.LCFI435
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI437-.LCFI436
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.byte	0x4
+	.4byte	.LCFI438-.LCFI437
+	.byte	0xa
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0x2c
+	.byte	0x4
+	.4byte	.LCFI439-.LCFI438
+	.byte	0xb
+	.align	2
+.LEFDE248:
+.LSFDE250:
+	.4byte	.LEFDE250-.LASFDE250
+.LASFDE250:
+	.4byte	.Lframe0
+	.4byte	.LFB160
+	.4byte	.LFE160-.LFB160
+	.byte	0x4
+	.4byte	.LCFI440-.LFB160
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI441-.LCFI440
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI442-.LCFI441
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE250:
+.LSFDE252:
+	.4byte	.LEFDE252-.LASFDE252
+.LASFDE252:
+	.4byte	.Lframe0
+	.4byte	.LFB214
+	.4byte	.LFE214-.LFB214
+	.byte	0x4
+	.4byte	.LCFI443-.LFB214
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI444-.LCFI443
+	.byte	0x84
+	.uleb128 0xa
+	.byte	0x85
+	.uleb128 0x9
+	.byte	0x86
+	.uleb128 0x8
+	.byte	0x87
+	.uleb128 0x7
+	.byte	0x88
+	.uleb128 0x6
+	.byte	0x89
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI445-.LCFI444
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE252:
+.LSFDE254:
+	.4byte	.LEFDE254-.LASFDE254
+.LASFDE254:
+	.4byte	.Lframe0
+	.4byte	.LFB232
+	.4byte	.LFE232-.LFB232
+	.byte	0x4
+	.4byte	.LCFI446-.LFB232
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI447-.LCFI446
+	.byte	0x84
+	.uleb128 0xa
+	.byte	0x85
+	.uleb128 0x9
+	.byte	0x86
+	.uleb128 0x8
+	.byte	0x87
+	.uleb128 0x7
+	.byte	0x88
+	.uleb128 0x6
+	.byte	0x89
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI448-.LCFI447
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE254:
+.LSFDE256:
+	.4byte	.LEFDE256-.LASFDE256
+.LASFDE256:
+	.4byte	.Lframe0
+	.4byte	.LFB150
+	.4byte	.LFE150-.LFB150
+	.byte	0x4
+	.4byte	.LCFI449-.LFB150
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI450-.LCFI449
+	.byte	0x83
+	.uleb128 0xc
+	.byte	0x84
+	.uleb128 0xb
+	.byte	0x85
+	.uleb128 0xa
+	.byte	0x86
+	.uleb128 0x9
+	.byte	0x87
+	.uleb128 0x8
+	.byte	0x88
+	.uleb128 0x7
+	.byte	0x89
+	.uleb128 0x6
+	.byte	0x8a
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI451-.LCFI450
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE256:
+.LSFDE258:
+	.4byte	.LEFDE258-.LASFDE258
+.LASFDE258:
+	.4byte	.Lframe0
+	.4byte	.LFB151
+	.4byte	.LFE151-.LFB151
+	.byte	0x4
+	.4byte	.LCFI452-.LFB151
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI453-.LCFI452
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI454-.LCFI453
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE258:
+.LSFDE260:
+	.4byte	.LEFDE260-.LASFDE260
+.LASFDE260:
+	.4byte	.Lframe0
+	.4byte	.LFB269
+	.4byte	.LFE269-.LFB269
+	.byte	0x4
+	.4byte	.LCFI455-.LFB269
+	.byte	0xd
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI456-.LCFI455
+	.byte	0x8b
+	.uleb128 0x4
+	.byte	0x8d
+	.uleb128 0x3
+	.byte	0x8e
+	.uleb128 0x2
+	.byte	0x4
+	.4byte	.LCFI457-.LCFI456
+	.byte	0xc
+	.uleb128 0xb
+	.uleb128 0x4
+	.align	2
+.LEFDE260:
+	.text
+.Letext0:
+	.file 6 "include/asm-generic/int-ll64.h"
+	.file 7 "./include/uapi/asm-generic/posix_types.h"
+	.file 8 "include/linux/types.h"
+	.file 9 "./arch/arm/include/asm/hwcap.h"
+	.file 10 "./arch/arm/include/asm/barrier.h"
+	.file 11 "include/linux/init.h"
+	.file 12 "include/linux/printk.h"
+	.file 13 "include/linux/kernel.h"
+	.file 14 "drivers/rkflash/rksftl/sftl_inc.h"
+	.file 15 "drivers/rkflash/rksftl/flash_com.h"
+	.file 16 "drivers/rkflash/rksftl/sftl_struct.h"
+	.file 17 "drivers/rkflash/rksftl/sftl_global.h"
+	.file 18 "include/linux/string.h"
+	.file 19 "./arch/arm/include/asm/string.h"
+	.file 20 "drivers/rkflash/rksftl/typedef.h"
+	.file 21 "<built-in>"
+	.section	.debug_info,"",%progbits
+.Ldebug_info0:
+	.4byte	0x676b
+	.2byte	0x4
+	.4byte	.Ldebug_abbrev0
+	.byte	0x4
+	.uleb128 0x1
+	.4byte	.LASF665
+	.byte	0x1
+	.4byte	.LASF666
+	.4byte	.LASF667
+	.4byte	.Ltext0
+	.4byte	.Letext0-.Ltext0
+	.4byte	.Ldebug_line0
+	.uleb128 0x2
+	.byte	0x4
+	.uleb128 0x3
+	.byte	0x4
+	.byte	0x7
+	.4byte	.LASF0
+	.uleb128 0x3
+	.byte	0x4
+	.byte	0x7
+	.4byte	.LASF1
+	.uleb128 0x3
+	.byte	0x1
+	.byte	0x8
+	.4byte	.LASF2
+	.uleb128 0x4
+	.4byte	0x35
+	.uleb128 0x3
+	.byte	0x4
+	.byte	0x7
+	.4byte	.LASF3
+	.uleb128 0x3
+	.byte	0x1
+	.byte	0x6
+	.4byte	.LASF4
+	.uleb128 0x3
+	.byte	0x1
+	.byte	0x8
+	.4byte	.LASF5
+	.uleb128 0x3
+	.byte	0x2
+	.byte	0x5
+	.4byte	.LASF6
+	.uleb128 0x3
+	.byte	0x2
+	.byte	0x7
+	.4byte	.LASF7
+	.uleb128 0x5
+	.byte	0x4
+	.byte	0x5
+	.ascii	"int\000"
+	.uleb128 0x3
+	.byte	0x8
+	.byte	0x5
+	.4byte	.LASF8
+	.uleb128 0x3
+	.byte	0x8
+	.byte	0x7
+	.4byte	.LASF9
+	.uleb128 0x6
+	.ascii	"u8\000"
+	.byte	0x6
+	.byte	0x10
+	.4byte	0x4f
+	.uleb128 0x6
+	.ascii	"u16\000"
+	.byte	0x6
+	.byte	0x13
+	.4byte	0x5d
+	.uleb128 0x6
+	.ascii	"s32\000"
+	.byte	0x6
+	.byte	0x15
+	.4byte	0x64
+	.uleb128 0x6
+	.ascii	"u32\000"
+	.byte	0x6
+	.byte	0x16
+	.4byte	0x41
+	.uleb128 0x3
+	.byte	0x4
+	.byte	0x5
+	.4byte	.LASF10
+	.uleb128 0x7
+	.4byte	.LASF11
+	.byte	0x7
+	.byte	0x43
+	.4byte	0x41
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x35
+	.uleb128 0x7
+	.4byte	.LASF12
+	.byte	0x8
+	.byte	0x1d
+	.4byte	0xc7
+	.uleb128 0x3
+	.byte	0x1
+	.byte	0x2
+	.4byte	.LASF13
+	.uleb128 0x7
+	.4byte	.LASF14
+	.byte	0x8
+	.byte	0x36
+	.4byte	0xab
+	.uleb128 0x9
+	.4byte	.LASF15
+	.byte	0x9
+	.byte	0xd
+	.4byte	0x41
+	.uleb128 0x9
+	.4byte	.LASF16
+	.byte	0x9
+	.byte	0xd
+	.4byte	0x41
+	.uleb128 0xa
+	.uleb128 0x9
+	.4byte	.LASF17
+	.byte	0xa
+	.byte	0x28
+	.4byte	0xfb
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0xef
+	.uleb128 0x7
+	.4byte	.LASF18
+	.byte	0xb
+	.byte	0x83
+	.4byte	0x10c
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x112
+	.uleb128 0xb
+	.4byte	0x64
+	.uleb128 0xc
+	.4byte	0x101
+	.4byte	0x122
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x9
+	.4byte	.LASF19
+	.byte	0xb
+	.byte	0x86
+	.4byte	0x117
+	.uleb128 0x9
+	.4byte	.LASF20
+	.byte	0xb
+	.byte	0x86
+	.4byte	0x117
+	.uleb128 0x9
+	.4byte	.LASF21
+	.byte	0xb
+	.byte	0x87
+	.4byte	0x117
+	.uleb128 0x9
+	.4byte	.LASF22
+	.byte	0xb
+	.byte	0x87
+	.4byte	0x117
+	.uleb128 0xc
+	.4byte	0x35
+	.4byte	0x159
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x9
+	.4byte	.LASF23
+	.byte	0xb
+	.byte	0x8e
+	.4byte	0x14e
+	.uleb128 0x9
+	.4byte	.LASF24
+	.byte	0xb
+	.byte	0x8f
+	.4byte	0xb6
+	.uleb128 0x9
+	.4byte	.LASF25
+	.byte	0xb
+	.byte	0x90
+	.4byte	0x41
+	.uleb128 0x9
+	.4byte	.LASF26
+	.byte	0xb
+	.byte	0x9c
+	.4byte	0xfb
+	.uleb128 0x9
+	.4byte	.LASF27
+	.byte	0xb
+	.byte	0x9e
+	.4byte	0xbc
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x19b
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x190
+	.uleb128 0x9
+	.4byte	.LASF28
+	.byte	0xc
+	.byte	0xa
+	.4byte	0x19b
+	.uleb128 0x9
+	.4byte	.LASF29
+	.byte	0xc
+	.byte	0xb
+	.4byte	0x19b
+	.uleb128 0xc
+	.4byte	0x64
+	.4byte	0x1c1
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x9
+	.4byte	.LASF30
+	.byte	0xc
+	.byte	0x2e
+	.4byte	0x1b6
+	.uleb128 0x9
+	.4byte	.LASF31
+	.byte	0xc
+	.byte	0x9f
+	.4byte	0x64
+	.uleb128 0x9
+	.4byte	.LASF32
+	.byte	0xc
+	.byte	0xa0
+	.4byte	0x64
+	.uleb128 0x9
+	.4byte	.LASF33
+	.byte	0xc
+	.byte	0xa1
+	.4byte	0x64
+	.uleb128 0xe
+	.4byte	.LASF35
+	.uleb128 0x4
+	.4byte	0x1ed
+	.uleb128 0xf
+	.4byte	.LASF34
+	.byte	0xc
+	.2byte	0x1a4
+	.4byte	0x1f2
+	.uleb128 0xe
+	.4byte	.LASF36
+	.uleb128 0xf
+	.4byte	.LASF37
+	.byte	0xd
+	.2byte	0x104
+	.4byte	0x203
+	.uleb128 0x10
+	.4byte	0xa4
+	.4byte	0x223
+	.uleb128 0x11
+	.4byte	0x64
+	.byte	0
+	.uleb128 0xf
+	.4byte	.LASF38
+	.byte	0xd
+	.2byte	0x105
+	.4byte	0x22f
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x214
+	.uleb128 0xf
+	.4byte	.LASF39
+	.byte	0xd
+	.2byte	0x1bf
+	.4byte	0x64
+	.uleb128 0xf
+	.4byte	.LASF40
+	.byte	0xd
+	.2byte	0x1c0
+	.4byte	0x64
+	.uleb128 0xf
+	.4byte	.LASF41
+	.byte	0xd
+	.2byte	0x1c1
+	.4byte	0x64
+	.uleb128 0xf
+	.4byte	.LASF42
+	.byte	0xd
+	.2byte	0x1c2
+	.4byte	0x64
+	.uleb128 0xf
+	.4byte	.LASF43
+	.byte	0xd
+	.2byte	0x1c3
+	.4byte	0x64
+	.uleb128 0xf
+	.4byte	.LASF44
+	.byte	0xd
+	.2byte	0x1c4
+	.4byte	0x64
+	.uleb128 0xf
+	.4byte	.LASF45
+	.byte	0xd
+	.2byte	0x1c5
+	.4byte	0x64
+	.uleb128 0xf
+	.4byte	.LASF46
+	.byte	0xd
+	.2byte	0x1c7
+	.4byte	0xbc
+	.uleb128 0xf
+	.4byte	.LASF47
+	.byte	0xd
+	.2byte	0x1da
+	.4byte	0x64
+	.uleb128 0xf
+	.4byte	.LASF48
+	.byte	0xd
+	.2byte	0x1dc
+	.4byte	0xbc
+	.uleb128 0x12
+	.4byte	.LASF668
+	.byte	0x4
+	.4byte	0x41
+	.byte	0xd
+	.2byte	0x1df
+	.4byte	0x2dd
+	.uleb128 0x13
+	.4byte	.LASF49
+	.byte	0
+	.uleb128 0x13
+	.4byte	.LASF50
+	.byte	0x1
+	.uleb128 0x13
+	.4byte	.LASF51
+	.byte	0x2
+	.uleb128 0x13
+	.4byte	.LASF52
+	.byte	0x3
+	.uleb128 0x13
+	.4byte	.LASF53
+	.byte	0x4
+	.byte	0
+	.uleb128 0xf
+	.4byte	.LASF54
+	.byte	0xd
+	.2byte	0x1e5
+	.4byte	0x2ad
+	.uleb128 0xf
+	.4byte	.LASF55
+	.byte	0xd
+	.2byte	0x1f8
+	.4byte	0x19b
+	.uleb128 0xf
+	.4byte	.LASF56
+	.byte	0xd
+	.2byte	0x203
+	.4byte	0x19b
+	.uleb128 0x7
+	.4byte	.LASF57
+	.byte	0xe
+	.byte	0x9
+	.4byte	0x4f
+	.uleb128 0x7
+	.4byte	.LASF58
+	.byte	0xe
+	.byte	0xa
+	.4byte	0x5d
+	.uleb128 0x7
+	.4byte	.LASF59
+	.byte	0xe
+	.byte	0xb
+	.4byte	0x41
+	.uleb128 0x7
+	.4byte	.LASF60
+	.byte	0xe
+	.byte	0xc
+	.4byte	0x64
+	.uleb128 0x7
+	.4byte	.LASF61
+	.byte	0xe
+	.byte	0xd
+	.4byte	0x56
+	.uleb128 0x14
+	.4byte	.LASF66
+	.byte	0x14
+	.byte	0xf
+	.byte	0x22
+	.4byte	0x381
+	.uleb128 0x15
+	.4byte	.LASF62
+	.byte	0xf
+	.byte	0x23
+	.4byte	0x99
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF63
+	.byte	0xf
+	.byte	0x24
+	.4byte	0x99
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF64
+	.byte	0xf
+	.byte	0x25
+	.4byte	0x381
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF65
+	.byte	0xf
+	.byte	0x26
+	.4byte	0x381
+	.byte	0xc
+	.uleb128 0x16
+	.ascii	"lpa\000"
+	.byte	0xf
+	.byte	0x27
+	.4byte	0x99
+	.byte	0x10
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x99
+	.uleb128 0x14
+	.4byte	.LASF67
+	.byte	0x18
+	.byte	0xf
+	.byte	0x2a
+	.4byte	0x424
+	.uleb128 0x15
+	.4byte	.LASF68
+	.byte	0xf
+	.byte	0x2b
+	.4byte	0x83
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF69
+	.byte	0xf
+	.byte	0x2c
+	.4byte	0x83
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF70
+	.byte	0xf
+	.byte	0x2d
+	.4byte	0x83
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF71
+	.byte	0xf
+	.byte	0x2e
+	.4byte	0x83
+	.byte	0x6
+	.uleb128 0x15
+	.4byte	.LASF72
+	.byte	0xf
+	.byte	0x2f
+	.4byte	0x83
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF73
+	.byte	0xf
+	.byte	0x30
+	.4byte	0x83
+	.byte	0xa
+	.uleb128 0x15
+	.4byte	.LASF74
+	.byte	0xf
+	.byte	0x31
+	.4byte	0x83
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF75
+	.byte	0xf
+	.byte	0x32
+	.4byte	0x83
+	.byte	0xe
+	.uleb128 0x15
+	.4byte	.LASF76
+	.byte	0xf
+	.byte	0x33
+	.4byte	0x83
+	.byte	0x10
+	.uleb128 0x15
+	.4byte	.LASF77
+	.byte	0xf
+	.byte	0x34
+	.4byte	0x83
+	.byte	0x12
+	.uleb128 0x15
+	.4byte	.LASF78
+	.byte	0xf
+	.byte	0x35
+	.4byte	0x83
+	.byte	0x14
+	.uleb128 0x15
+	.4byte	.LASF79
+	.byte	0xf
+	.byte	0x36
+	.4byte	0x79
+	.byte	0x16
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x387
+	.uleb128 0x14
+	.4byte	.LASF80
+	.byte	0x10
+	.byte	0xf
+	.byte	0x39
+	.4byte	0x466
+	.uleb128 0x15
+	.4byte	.LASF81
+	.byte	0xf
+	.byte	0x3a
+	.4byte	0x480
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF82
+	.byte	0xf
+	.byte	0x3b
+	.4byte	0x49a
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF83
+	.byte	0xf
+	.byte	0x3c
+	.4byte	0x4be
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF84
+	.byte	0xf
+	.byte	0x3d
+	.4byte	0x4be
+	.byte	0xc
+	.byte	0
+	.uleb128 0x10
+	.4byte	0x8e
+	.4byte	0x47a
+	.uleb128 0x11
+	.4byte	0x47a
+	.uleb128 0x11
+	.4byte	0x99
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x83
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x466
+	.uleb128 0x10
+	.4byte	0x99
+	.4byte	0x49a
+	.uleb128 0x11
+	.4byte	0x79
+	.uleb128 0x11
+	.4byte	0x99
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x486
+	.uleb128 0x10
+	.4byte	0x99
+	.4byte	0x4be
+	.uleb128 0x11
+	.4byte	0x79
+	.uleb128 0x11
+	.4byte	0x99
+	.uleb128 0x11
+	.4byte	0x381
+	.uleb128 0x11
+	.4byte	0x381
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x4a0
+	.uleb128 0x14
+	.4byte	.LASF85
+	.byte	0x3c
+	.byte	0x10
+	.byte	0x2b
+	.4byte	0x524
+	.uleb128 0x16
+	.ascii	"id\000"
+	.byte	0x10
+	.byte	0x2d
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF86
+	.byte	0x10
+	.byte	0x2e
+	.4byte	0x30c
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF87
+	.byte	0x10
+	.byte	0x2f
+	.4byte	0x30c
+	.byte	0x4
+	.uleb128 0x16
+	.ascii	"cnt\000"
+	.byte	0x10
+	.byte	0x30
+	.4byte	0x30c
+	.byte	0x6
+	.uleb128 0x15
+	.4byte	.LASF88
+	.byte	0x10
+	.byte	0x31
+	.4byte	0x317
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF89
+	.byte	0x10
+	.byte	0x32
+	.4byte	0x524
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF90
+	.byte	0x10
+	.byte	0x33
+	.4byte	0x534
+	.byte	0x1c
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x30c
+	.4byte	0x534
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x7
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x544
+	.4byte	0x544
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x7
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x317
+	.uleb128 0x14
+	.4byte	.LASF91
+	.byte	0xc
+	.byte	0x10
+	.byte	0x3f
+	.4byte	0x592
+	.uleb128 0x16
+	.ascii	"id\000"
+	.byte	0x10
+	.byte	0x41
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF86
+	.byte	0x10
+	.byte	0x42
+	.4byte	0x30c
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF87
+	.byte	0x10
+	.byte	0x43
+	.4byte	0x30c
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF92
+	.byte	0x10
+	.byte	0x44
+	.4byte	0x30c
+	.byte	0x6
+	.uleb128 0x15
+	.4byte	.LASF88
+	.byte	0x10
+	.byte	0x45
+	.4byte	0x317
+	.byte	0x8
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF93
+	.byte	0x28
+	.byte	0x10
+	.byte	0x48
+	.4byte	0x63b
+	.uleb128 0x15
+	.4byte	.LASF94
+	.byte	0x10
+	.byte	0x4a
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF86
+	.byte	0x10
+	.byte	0x4b
+	.4byte	0x30c
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF95
+	.byte	0x10
+	.byte	0x4d
+	.4byte	0x30c
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF96
+	.byte	0x10
+	.byte	0x4e
+	.4byte	0x30c
+	.byte	0x6
+	.uleb128 0x15
+	.4byte	.LASF97
+	.byte	0x10
+	.byte	0x50
+	.4byte	0x30c
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF98
+	.byte	0x10
+	.byte	0x51
+	.4byte	0x30c
+	.byte	0xa
+	.uleb128 0x15
+	.4byte	.LASF99
+	.byte	0x10
+	.byte	0x53
+	.4byte	0x63b
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF100
+	.byte	0x10
+	.byte	0x54
+	.4byte	0x544
+	.byte	0x10
+	.uleb128 0x15
+	.4byte	.LASF101
+	.byte	0x10
+	.byte	0x55
+	.4byte	0x63b
+	.byte	0x14
+	.uleb128 0x15
+	.4byte	.LASF102
+	.byte	0x10
+	.byte	0x56
+	.4byte	0x544
+	.byte	0x18
+	.uleb128 0x15
+	.4byte	.LASF88
+	.byte	0x10
+	.byte	0x58
+	.4byte	0x317
+	.byte	0x1c
+	.uleb128 0x15
+	.4byte	.LASF103
+	.byte	0x10
+	.byte	0x59
+	.4byte	0x317
+	.byte	0x20
+	.uleb128 0x15
+	.4byte	.LASF104
+	.byte	0x10
+	.byte	0x5a
+	.4byte	0x317
+	.byte	0x24
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x30c
+	.uleb128 0x14
+	.4byte	.LASF105
+	.byte	0xc
+	.byte	0x10
+	.byte	0x5d
+	.4byte	0x67e
+	.uleb128 0x15
+	.4byte	.LASF106
+	.byte	0x10
+	.byte	0x5f
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF107
+	.byte	0x10
+	.byte	0x60
+	.4byte	0x30c
+	.byte	0x2
+	.uleb128 0x16
+	.ascii	"hit\000"
+	.byte	0x10
+	.byte	0x61
+	.4byte	0x317
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF108
+	.byte	0x10
+	.byte	0x62
+	.4byte	0x544
+	.byte	0x8
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF109
+	.byte	0x24
+	.byte	0x10
+	.byte	0x65
+	.4byte	0x6eb
+	.uleb128 0x15
+	.4byte	.LASF95
+	.byte	0x10
+	.byte	0x67
+	.4byte	0x317
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF110
+	.byte	0x10
+	.byte	0x68
+	.4byte	0x317
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF88
+	.byte	0x10
+	.byte	0x69
+	.4byte	0x317
+	.byte	0x8
+	.uleb128 0x16
+	.ascii	"len\000"
+	.byte	0x10
+	.byte	0x6a
+	.4byte	0x317
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF111
+	.byte	0x10
+	.byte	0x6b
+	.4byte	0x317
+	.byte	0x10
+	.uleb128 0x15
+	.4byte	.LASF112
+	.byte	0x10
+	.byte	0x6c
+	.4byte	0x317
+	.byte	0x14
+	.uleb128 0x15
+	.4byte	.LASF113
+	.byte	0x10
+	.byte	0x6d
+	.4byte	0x6eb
+	.byte	0x18
+	.uleb128 0x16
+	.ascii	"tbl\000"
+	.byte	0x10
+	.byte	0x6e
+	.4byte	0x6fb
+	.byte	0x20
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x317
+	.4byte	0x6fb
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x1
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x30c
+	.4byte	0x70b
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x1
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF114
+	.byte	0x10
+	.byte	0x10
+	.byte	0x72
+	.4byte	0x76b
+	.uleb128 0x15
+	.4byte	.LASF95
+	.byte	0x10
+	.byte	0x74
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x16
+	.ascii	"id\000"
+	.byte	0x10
+	.byte	0x75
+	.4byte	0x30c
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF88
+	.byte	0x10
+	.byte	0x76
+	.4byte	0x317
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF87
+	.byte	0x10
+	.byte	0x77
+	.4byte	0x30c
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF115
+	.byte	0x10
+	.byte	0x78
+	.4byte	0x30c
+	.byte	0xa
+	.uleb128 0x15
+	.4byte	.LASF116
+	.byte	0x10
+	.byte	0x79
+	.4byte	0x30c
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF113
+	.byte	0x10
+	.byte	0x7a
+	.4byte	0x76b
+	.byte	0xe
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x301
+	.4byte	0x77b
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x1
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF117
+	.byte	0x10
+	.byte	0x10
+	.byte	0x7d
+	.4byte	0x7c3
+	.uleb128 0x15
+	.4byte	.LASF95
+	.byte	0x10
+	.byte	0x7f
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x16
+	.ascii	"id\000"
+	.byte	0x10
+	.byte	0x80
+	.4byte	0x30c
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF88
+	.byte	0x10
+	.byte	0x81
+	.4byte	0x317
+	.byte	0x4
+	.uleb128 0x16
+	.ascii	"lpa\000"
+	.byte	0x10
+	.byte	0x82
+	.4byte	0x317
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF118
+	.byte	0x10
+	.byte	0x83
+	.4byte	0x317
+	.byte	0xc
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF119
+	.byte	0x10
+	.byte	0x10
+	.byte	0x8f
+	.4byte	0x80b
+	.uleb128 0x15
+	.4byte	.LASF95
+	.byte	0x10
+	.byte	0x91
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x16
+	.ascii	"id\000"
+	.byte	0x10
+	.byte	0x92
+	.4byte	0x30c
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF88
+	.byte	0x10
+	.byte	0x93
+	.4byte	0x317
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF120
+	.byte	0x10
+	.byte	0x94
+	.4byte	0x30c
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF113
+	.byte	0x10
+	.byte	0x95
+	.4byte	0x80b
+	.byte	0xa
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x301
+	.4byte	0x81b
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x5
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF121
+	.byte	0x10
+	.byte	0x10
+	.byte	0x98
+	.4byte	0x863
+	.uleb128 0x15
+	.4byte	.LASF95
+	.byte	0x10
+	.byte	0x9a
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x16
+	.ascii	"id\000"
+	.byte	0x10
+	.byte	0x9b
+	.4byte	0x30c
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF88
+	.byte	0x10
+	.byte	0x9c
+	.4byte	0x317
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF122
+	.byte	0x10
+	.byte	0x9d
+	.4byte	0x317
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF123
+	.byte	0x10
+	.byte	0x9e
+	.4byte	0x317
+	.byte	0xc
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF124
+	.byte	0x30
+	.byte	0x10
+	.byte	0xa1
+	.4byte	0x960
+	.uleb128 0x16
+	.ascii	"tag\000"
+	.byte	0x10
+	.byte	0xa3
+	.4byte	0x317
+	.byte	0
+	.uleb128 0x16
+	.ascii	"ver\000"
+	.byte	0x10
+	.byte	0xa4
+	.4byte	0x317
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF92
+	.byte	0x10
+	.byte	0xa6
+	.4byte	0x30c
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF125
+	.byte	0x10
+	.byte	0xa7
+	.4byte	0x301
+	.byte	0xa
+	.uleb128 0x15
+	.4byte	.LASF126
+	.byte	0x10
+	.byte	0xa8
+	.4byte	0x301
+	.byte	0xb
+	.uleb128 0x15
+	.4byte	.LASF127
+	.byte	0x10
+	.byte	0xa9
+	.4byte	0x301
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF128
+	.byte	0x10
+	.byte	0xaa
+	.4byte	0x301
+	.byte	0xd
+	.uleb128 0x15
+	.4byte	.LASF129
+	.byte	0x10
+	.byte	0xab
+	.4byte	0x30c
+	.byte	0xe
+	.uleb128 0x15
+	.4byte	.LASF130
+	.byte	0x10
+	.byte	0xad
+	.4byte	0x30c
+	.byte	0x10
+	.uleb128 0x15
+	.4byte	.LASF131
+	.byte	0x10
+	.byte	0xae
+	.4byte	0x30c
+	.byte	0x12
+	.uleb128 0x15
+	.4byte	.LASF132
+	.byte	0x10
+	.byte	0xaf
+	.4byte	0x30c
+	.byte	0x14
+	.uleb128 0x15
+	.4byte	.LASF133
+	.byte	0x10
+	.byte	0xb0
+	.4byte	0x30c
+	.byte	0x16
+	.uleb128 0x15
+	.4byte	.LASF134
+	.byte	0x10
+	.byte	0xb2
+	.4byte	0x30c
+	.byte	0x18
+	.uleb128 0x15
+	.4byte	.LASF135
+	.byte	0x10
+	.byte	0xb3
+	.4byte	0x30c
+	.byte	0x1a
+	.uleb128 0x15
+	.4byte	.LASF136
+	.byte	0x10
+	.byte	0xb4
+	.4byte	0x30c
+	.byte	0x1c
+	.uleb128 0x15
+	.4byte	.LASF137
+	.byte	0x10
+	.byte	0xb5
+	.4byte	0x30c
+	.byte	0x1e
+	.uleb128 0x15
+	.4byte	.LASF138
+	.byte	0x10
+	.byte	0xb7
+	.4byte	0x317
+	.byte	0x20
+	.uleb128 0x15
+	.4byte	.LASF139
+	.byte	0x10
+	.byte	0xb8
+	.4byte	0x317
+	.byte	0x24
+	.uleb128 0x15
+	.4byte	.LASF140
+	.byte	0x10
+	.byte	0xb9
+	.4byte	0x317
+	.byte	0x28
+	.uleb128 0x15
+	.4byte	.LASF113
+	.byte	0x10
+	.byte	0xba
+	.4byte	0x6fb
+	.byte	0x2c
+	.byte	0
+	.uleb128 0x18
+	.4byte	.LASF141
+	.2byte	0x200
+	.byte	0x10
+	.byte	0xbe
+	.4byte	0xaa6
+	.uleb128 0x16
+	.ascii	"tag\000"
+	.byte	0x10
+	.byte	0xc0
+	.4byte	0x317
+	.byte	0
+	.uleb128 0x16
+	.ascii	"ver\000"
+	.byte	0x10
+	.byte	0xc1
+	.4byte	0x317
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF142
+	.byte	0x10
+	.byte	0xc3
+	.4byte	0x317
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF143
+	.byte	0x10
+	.byte	0xc4
+	.4byte	0x317
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF144
+	.byte	0x10
+	.byte	0xc5
+	.4byte	0x317
+	.byte	0x10
+	.uleb128 0x15
+	.4byte	.LASF145
+	.byte	0x10
+	.byte	0xc6
+	.4byte	0x317
+	.byte	0x14
+	.uleb128 0x15
+	.4byte	.LASF138
+	.byte	0x10
+	.byte	0xc8
+	.4byte	0x317
+	.byte	0x18
+	.uleb128 0x15
+	.4byte	.LASF146
+	.byte	0x10
+	.byte	0xc9
+	.4byte	0x317
+	.byte	0x1c
+	.uleb128 0x15
+	.4byte	.LASF147
+	.byte	0x10
+	.byte	0xca
+	.4byte	0x317
+	.byte	0x20
+	.uleb128 0x15
+	.4byte	.LASF148
+	.byte	0x10
+	.byte	0xcb
+	.4byte	0x317
+	.byte	0x24
+	.uleb128 0x15
+	.4byte	.LASF135
+	.byte	0x10
+	.byte	0xcd
+	.4byte	0x317
+	.byte	0x28
+	.uleb128 0x15
+	.4byte	.LASF149
+	.byte	0x10
+	.byte	0xce
+	.4byte	0x317
+	.byte	0x2c
+	.uleb128 0x15
+	.4byte	.LASF150
+	.byte	0x10
+	.byte	0xcf
+	.4byte	0x317
+	.byte	0x30
+	.uleb128 0x15
+	.4byte	.LASF151
+	.byte	0x10
+	.byte	0xd0
+	.4byte	0x317
+	.byte	0x34
+	.uleb128 0x15
+	.4byte	.LASF152
+	.byte	0x10
+	.byte	0xd2
+	.4byte	0x317
+	.byte	0x38
+	.uleb128 0x15
+	.4byte	.LASF153
+	.byte	0x10
+	.byte	0xd3
+	.4byte	0x317
+	.byte	0x3c
+	.uleb128 0x15
+	.4byte	.LASF154
+	.byte	0x10
+	.byte	0xd4
+	.4byte	0x317
+	.byte	0x40
+	.uleb128 0x15
+	.4byte	.LASF155
+	.byte	0x10
+	.byte	0xd5
+	.4byte	0x317
+	.byte	0x44
+	.uleb128 0x15
+	.4byte	.LASF156
+	.byte	0x10
+	.byte	0xd7
+	.4byte	0x317
+	.byte	0x48
+	.uleb128 0x15
+	.4byte	.LASF157
+	.byte	0x10
+	.byte	0xd8
+	.4byte	0x317
+	.byte	0x4c
+	.uleb128 0x15
+	.4byte	.LASF158
+	.byte	0x10
+	.byte	0xd9
+	.4byte	0x317
+	.byte	0x50
+	.uleb128 0x15
+	.4byte	.LASF159
+	.byte	0x10
+	.byte	0xda
+	.4byte	0x317
+	.byte	0x54
+	.uleb128 0x15
+	.4byte	.LASF160
+	.byte	0x10
+	.byte	0xdc
+	.4byte	0x317
+	.byte	0x58
+	.uleb128 0x15
+	.4byte	.LASF161
+	.byte	0x10
+	.byte	0xdd
+	.4byte	0x317
+	.byte	0x5c
+	.uleb128 0x15
+	.4byte	.LASF162
+	.byte	0x10
+	.byte	0xde
+	.4byte	0x317
+	.byte	0x60
+	.uleb128 0x15
+	.4byte	.LASF113
+	.byte	0x10
+	.byte	0xe0
+	.4byte	0xaa6
+	.byte	0x64
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x317
+	.4byte	0xab6
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x66
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF163
+	.byte	0x6
+	.byte	0x10
+	.byte	0xe4
+	.4byte	0xae7
+	.uleb128 0x15
+	.4byte	.LASF164
+	.byte	0x10
+	.byte	0xe6
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF165
+	.byte	0x10
+	.byte	0xe7
+	.4byte	0x30c
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF166
+	.byte	0x10
+	.byte	0xe8
+	.4byte	0x30c
+	.byte	0x4
+	.byte	0
+	.uleb128 0x18
+	.4byte	.LASF167
+	.2byte	0x808
+	.byte	0x10
+	.byte	0xeb
+	.4byte	0xb31
+	.uleb128 0x16
+	.ascii	"max\000"
+	.byte	0x10
+	.byte	0xed
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF168
+	.byte	0x10
+	.byte	0xee
+	.4byte	0x30c
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF169
+	.byte	0x10
+	.byte	0xef
+	.4byte	0x30c
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF115
+	.byte	0x10
+	.byte	0xf0
+	.4byte	0x30c
+	.byte	0x6
+	.uleb128 0x16
+	.ascii	"arr\000"
+	.byte	0x10
+	.byte	0xf1
+	.4byte	0xb31
+	.byte	0x8
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x30c
+	.4byte	0xb42
+	.uleb128 0x19
+	.4byte	0x2e
+	.2byte	0x3ff
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF170
+	.byte	0x30
+	.byte	0x10
+	.byte	0xf5
+	.4byte	0xbd4
+	.uleb128 0x16
+	.ascii	"id\000"
+	.byte	0x10
+	.byte	0xf7
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF171
+	.byte	0x10
+	.byte	0xf8
+	.4byte	0x30c
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF172
+	.byte	0x10
+	.byte	0xf9
+	.4byte	0x30c
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF173
+	.byte	0x10
+	.byte	0xfa
+	.4byte	0x301
+	.byte	0x6
+	.uleb128 0x15
+	.4byte	.LASF174
+	.byte	0x10
+	.byte	0xfb
+	.4byte	0x301
+	.byte	0x7
+	.uleb128 0x15
+	.4byte	.LASF175
+	.byte	0x10
+	.byte	0xfc
+	.4byte	0x301
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF176
+	.byte	0x10
+	.byte	0xfd
+	.4byte	0x301
+	.byte	0x9
+	.uleb128 0x15
+	.4byte	.LASF177
+	.byte	0x10
+	.byte	0xfe
+	.4byte	0x301
+	.byte	0xa
+	.uleb128 0x15
+	.4byte	.LASF178
+	.byte	0x10
+	.byte	0xff
+	.4byte	0x301
+	.byte	0xb
+	.uleb128 0x1a
+	.4byte	.LASF88
+	.byte	0x10
+	.2byte	0x100
+	.4byte	0x317
+	.byte	0xc
+	.uleb128 0x1a
+	.4byte	.LASF179
+	.byte	0x10
+	.2byte	0x101
+	.4byte	0xbd4
+	.byte	0x10
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x30c
+	.4byte	0xbe4
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0xf
+	.byte	0
+	.uleb128 0x1b
+	.4byte	.LASF180
+	.byte	0xc
+	.byte	0x10
+	.2byte	0x105
+	.4byte	0xc19
+	.uleb128 0x1a
+	.4byte	.LASF181
+	.byte	0x10
+	.2byte	0x107
+	.4byte	0x317
+	.byte	0
+	.uleb128 0x1a
+	.4byte	.LASF182
+	.byte	0x10
+	.2byte	0x108
+	.4byte	0x317
+	.byte	0x4
+	.uleb128 0x1c
+	.ascii	"lpa\000"
+	.byte	0x10
+	.2byte	0x109
+	.4byte	0x317
+	.byte	0x8
+	.byte	0
+	.uleb128 0x1b
+	.4byte	.LASF183
+	.byte	0xc
+	.byte	0x10
+	.2byte	0x10c
+	.4byte	0xc4e
+	.uleb128 0x1a
+	.4byte	.LASF64
+	.byte	0x10
+	.2byte	0x10e
+	.4byte	0x544
+	.byte	0
+	.uleb128 0x1a
+	.4byte	.LASF65
+	.byte	0x10
+	.2byte	0x10f
+	.4byte	0x544
+	.byte	0x4
+	.uleb128 0x1a
+	.4byte	.LASF184
+	.byte	0x10
+	.2byte	0x110
+	.4byte	0x317
+	.byte	0x8
+	.byte	0
+	.uleb128 0x1d
+	.4byte	.LASF185
+	.byte	0x11
+	.byte	0x12
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_type
+	.uleb128 0x1d
+	.4byte	.LASF186
+	.byte	0x11
+	.byte	0x13
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_die_num
+	.uleb128 0x1d
+	.4byte	.LASF187
+	.byte	0x11
+	.byte	0x14
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_planes_per_die
+	.uleb128 0x1d
+	.4byte	.LASF188
+	.byte	0x11
+	.byte	0x15
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_blks_per_die
+	.uleb128 0x1d
+	.4byte	.LASF189
+	.byte	0x11
+	.byte	0x16
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_blks_per_die_shift
+	.uleb128 0x1d
+	.4byte	.LASF190
+	.byte	0x11
+	.byte	0x17
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_planes_num
+	.uleb128 0x1d
+	.4byte	.LASF191
+	.byte	0x11
+	.byte	0x18
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_blk_pre_plane
+	.uleb128 0x1d
+	.4byte	.LASF192
+	.byte	0x11
+	.byte	0x19
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_ext_blk_pre_plane
+	.uleb128 0x1d
+	.4byte	.LASF193
+	.byte	0x11
+	.byte	0x1a
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_bbm_buf_size
+	.uleb128 0x1d
+	.4byte	.LASF194
+	.byte	0x11
+	.byte	0x1c
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_page_pre_blk
+	.uleb128 0x1d
+	.4byte	.LASF195
+	.byte	0x11
+	.byte	0x1d
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_page_pre_slc_blk
+	.uleb128 0x1d
+	.4byte	.LASF196
+	.byte	0x11
+	.byte	0x1e
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_page_pre_super_blk
+	.uleb128 0x1d
+	.4byte	.LASF197
+	.byte	0x11
+	.byte	0x1f
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_sec_pre_page
+	.uleb128 0x1d
+	.4byte	.LASF198
+	.byte	0x11
+	.byte	0x20
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_sec_pre_page_shift
+	.uleb128 0x1d
+	.4byte	.LASF199
+	.byte	0x11
+	.byte	0x24
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_byte_pre_page
+	.uleb128 0x1d
+	.4byte	.LASF200
+	.byte	0x11
+	.byte	0x25
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_byte_pre_oob
+	.uleb128 0x1d
+	.4byte	.LASF201
+	.byte	0x11
+	.byte	0x26
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_reserved_blks
+	.uleb128 0x1d
+	.4byte	.LASF202
+	.byte	0x11
+	.byte	0x27
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_totle_phy_blks
+	.uleb128 0x1d
+	.4byte	.LASF203
+	.byte	0x11
+	.byte	0x29
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_map_region_num
+	.uleb128 0x1d
+	.4byte	.LASF204
+	.byte	0x11
+	.byte	0x2a
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_l2pmap_ram_region_num
+	.uleb128 0x1d
+	.4byte	.LASF205
+	.byte	0x11
+	.byte	0x2c
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_vendor_region_num
+	.uleb128 0x1d
+	.4byte	.LASF206
+	.byte	0x11
+	.byte	0x2e
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_map_blks_per_plane
+	.uleb128 0x1d
+	.4byte	.LASF207
+	.byte	0x11
+	.byte	0x2f
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_max_map_blks
+	.uleb128 0x1d
+	.4byte	.LASF208
+	.byte	0x11
+	.byte	0x30
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_max_vendor_blks
+	.uleb128 0x1d
+	.4byte	.LASF209
+	.byte	0x11
+	.byte	0x31
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_vendor_part_size
+	.uleb128 0x1d
+	.4byte	.LASF210
+	.byte	0x11
+	.byte	0x32
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_sys_blks_per_plane
+	.uleb128 0x1d
+	.4byte	.LASF211
+	.byte	0x11
+	.byte	0x33
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_init_sys_blks_per_plane
+	.uleb128 0x1d
+	.4byte	.LASF212
+	.byte	0x11
+	.byte	0x34
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_max_sys_blks
+	.uleb128 0x1d
+	.4byte	.LASF213
+	.byte	0x11
+	.byte	0x35
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_data_blks_per_plane
+	.uleb128 0x1d
+	.4byte	.LASF214
+	.byte	0x11
+	.byte	0x36
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_data_op_blks_per_plane
+	.uleb128 0x1d
+	.4byte	.LASF215
+	.byte	0x11
+	.byte	0x37
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_max_data_blks
+	.uleb128 0x1d
+	.4byte	.LASF216
+	.byte	0x11
+	.byte	0x38
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	ftl_gc_temp_power_lost_recovery_flag
+	.uleb128 0x1d
+	.4byte	.LASF217
+	.byte	0x11
+	.byte	0x3a
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_GlobalSysVersion
+	.uleb128 0x1d
+	.4byte	.LASF218
+	.byte	0x11
+	.byte	0x3b
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_GlobalDataVersion
+	.uleb128 0x1d
+	.4byte	.LASF219
+	.byte	0x11
+	.byte	0x3c
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_MaxLbaSector
+	.uleb128 0x1d
+	.4byte	.LASF220
+	.byte	0x11
+	.byte	0x3d
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_MaxLpn
+	.uleb128 0x1d
+	.4byte	.LASF221
+	.byte	0x11
+	.byte	0x3e
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_VaildLpn
+	.uleb128 0x1d
+	.4byte	.LASF222
+	.byte	0x11
+	.byte	0x3f
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_MaxLbn
+	.uleb128 0x1d
+	.4byte	.LASF223
+	.byte	0x11
+	.byte	0x41
+	.4byte	0x4c4
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gBbtInfo
+	.uleb128 0x1d
+	.4byte	.LASF224
+	.byte	0x11
+	.byte	0x42
+	.4byte	0x54a
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gSysInfo
+	.uleb128 0x1d
+	.4byte	.LASF225
+	.byte	0x11
+	.byte	0x43
+	.4byte	0xae7
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gSysFreeQueue
+	.uleb128 0x1d
+	.4byte	.LASF226
+	.byte	0x11
+	.byte	0x44
+	.4byte	0x592
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gL2pMapInfo
+	.uleb128 0x1d
+	.4byte	.LASF227
+	.byte	0x11
+	.byte	0x45
+	.4byte	0x592
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gVendorBlkInfo
+	.uleb128 0x1d
+	.4byte	.LASF228
+	.byte	0x11
+	.byte	0x46
+	.4byte	0x338
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	req_sys
+	.uleb128 0x1d
+	.4byte	.LASF229
+	.byte	0x11
+	.byte	0x47
+	.4byte	0xf4b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	req_read
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x338
+	.uleb128 0x1d
+	.4byte	.LASF230
+	.byte	0x11
+	.byte	0x48
+	.4byte	0xf4b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	req_prgm
+	.uleb128 0x1d
+	.4byte	.LASF231
+	.byte	0x11
+	.byte	0x49
+	.4byte	0xf4b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	req_erase
+	.uleb128 0x1d
+	.4byte	.LASF232
+	.byte	0x11
+	.byte	0x4a
+	.4byte	0xf4b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	req_gc
+	.uleb128 0x1d
+	.4byte	.LASF233
+	.byte	0x11
+	.byte	0x4b
+	.4byte	0xf4b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	req_gc_dst
+	.uleb128 0x1d
+	.4byte	.LASF234
+	.byte	0x11
+	.byte	0x4d
+	.4byte	0xf4b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_req_cache
+	.uleb128 0xc
+	.4byte	0x301
+	.4byte	0xfb6
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x1f
+	.byte	0
+	.uleb128 0x1d
+	.4byte	.LASF235
+	.byte	0x11
+	.byte	0x4f
+	.4byte	0xfa6
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_plane_order_table
+	.uleb128 0x1d
+	.4byte	.LASF236
+	.byte	0x11
+	.byte	0x51
+	.4byte	0x544
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_sys_data_buf
+	.uleb128 0x1d
+	.4byte	.LASF237
+	.byte	0x11
+	.byte	0x52
+	.4byte	0x544
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_sys_data_buf_1
+	.uleb128 0x1d
+	.4byte	.LASF238
+	.byte	0x11
+	.byte	0x53
+	.4byte	0x544
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_vendor_data_buf
+	.uleb128 0x1d
+	.4byte	.LASF239
+	.byte	0x11
+	.byte	0x54
+	.4byte	0x544
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_sys_spare_buf
+	.uleb128 0x1d
+	.4byte	.LASF240
+	.byte	0x11
+	.byte	0x55
+	.4byte	0x544
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_io_data_buf_0
+	.uleb128 0x1d
+	.4byte	.LASF241
+	.byte	0x11
+	.byte	0x56
+	.4byte	0x544
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_io_data_buf_1
+	.uleb128 0x1d
+	.4byte	.LASF242
+	.byte	0x11
+	.byte	0x57
+	.4byte	0x544
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_io_spare_buf
+	.uleb128 0x1d
+	.4byte	.LASF243
+	.byte	0x11
+	.byte	0x58
+	.4byte	0x544
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_gc_spare_buf
+	.uleb128 0x1d
+	.4byte	.LASF244
+	.byte	0x11
+	.byte	0x59
+	.4byte	0x544
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_gc_data_buf
+	.uleb128 0x1d
+	.4byte	.LASF245
+	.byte	0x11
+	.byte	0x5a
+	.4byte	0x1071
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gp_gc_page_buf_info
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0xc19
+	.uleb128 0x1d
+	.4byte	.LASF246
+	.byte	0x11
+	.byte	0x5b
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_gc_page_buf_num
+	.uleb128 0x1d
+	.4byte	.LASF247
+	.byte	0x11
+	.byte	0x5c
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_num_req
+	.uleb128 0x1d
+	.4byte	.LASF248
+	.byte	0x11
+	.byte	0x5d
+	.4byte	0x10aa
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gp_ect_tbl_info
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x67e
+	.uleb128 0x1d
+	.4byte	.LASF249
+	.byte	0x11
+	.byte	0x5e
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_ect_tbl_info_size
+	.uleb128 0x1d
+	.4byte	.LASF250
+	.byte	0x11
+	.byte	0x5f
+	.4byte	0x63b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_erase_count_table
+	.uleb128 0x1d
+	.4byte	.LASF251
+	.byte	0x11
+	.byte	0x61
+	.4byte	0x63b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_swl_mul_table
+	.uleb128 0x1d
+	.4byte	.LASF252
+	.byte	0x11
+	.byte	0x62
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_swl_count
+	.uleb128 0x1d
+	.4byte	.LASF253
+	.byte	0x11
+	.byte	0x63
+	.4byte	0x63b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_valid_page_count_table
+	.uleb128 0x1d
+	.4byte	.LASF254
+	.byte	0x11
+	.byte	0x64
+	.4byte	0x63b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_valid_page_count_check_table
+	.uleb128 0x1d
+	.4byte	.LASF255
+	.byte	0x11
+	.byte	0x65
+	.4byte	0x544
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_blk_mode_table
+	.uleb128 0x1d
+	.4byte	.LASF256
+	.byte	0x11
+	.byte	0x67
+	.4byte	0x63b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_map_block_table
+	.uleb128 0x1d
+	.4byte	.LASF257
+	.byte	0x11
+	.byte	0x68
+	.4byte	0x63b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_map_block_valid_page_count
+	.uleb128 0x1d
+	.4byte	.LASF258
+	.byte	0x11
+	.byte	0x69
+	.4byte	0x544
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_map_block_ver_table
+	.uleb128 0x1d
+	.4byte	.LASF259
+	.byte	0x11
+	.byte	0x6a
+	.4byte	0x544
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_map_region_ppn_table
+	.uleb128 0x1d
+	.4byte	.LASF260
+	.byte	0x11
+	.byte	0x6b
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_map_block
+	.uleb128 0x1d
+	.4byte	.LASF261
+	.byte	0x11
+	.byte	0x6d
+	.4byte	0x63b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_vendor_block_table
+	.uleb128 0x1d
+	.4byte	.LASF262
+	.byte	0x11
+	.byte	0x6e
+	.4byte	0x63b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_vendor_block_valid_page_count
+	.uleb128 0x1d
+	.4byte	.LASF263
+	.byte	0x11
+	.byte	0x6f
+	.4byte	0x544
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_vendor_block_ver_table
+	.uleb128 0x1d
+	.4byte	.LASF264
+	.byte	0x11
+	.byte	0x70
+	.4byte	0x544
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_vendor_region_ppn_table
+	.uleb128 0x1d
+	.4byte	.LASF265
+	.byte	0x11
+	.byte	0x71
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_vendor_block
+	.uleb128 0x1d
+	.4byte	.LASF266
+	.byte	0x11
+	.byte	0x73
+	.4byte	0x11e2
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_l2p_ram_map
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x641
+	.uleb128 0x1d
+	.4byte	.LASF267
+	.byte	0x11
+	.byte	0x74
+	.4byte	0x544
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_l2p_map_buf
+	.uleb128 0x1d
+	.4byte	.LASF268
+	.byte	0x11
+	.byte	0x75
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_l2p_last_update_region_id
+	.uleb128 0x1d
+	.4byte	.LASF269
+	.byte	0x11
+	.byte	0x7c
+	.4byte	0x121b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_data_block_list_table
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0xab6
+	.uleb128 0x1d
+	.4byte	.LASF270
+	.byte	0x11
+	.byte	0x7d
+	.4byte	0x121b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_free_data_block_list_head
+	.uleb128 0x1d
+	.4byte	.LASF271
+	.byte	0x11
+	.byte	0x7f
+	.4byte	0x121b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_data_block_list_head
+	.uleb128 0x1d
+	.4byte	.LASF272
+	.byte	0x11
+	.byte	0x80
+	.4byte	0x121b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_data_block_list_tail
+	.uleb128 0x1d
+	.4byte	.LASF273
+	.byte	0x11
+	.byte	0x81
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_num_free_superblocks
+	.uleb128 0x1d
+	.4byte	.LASF274
+	.byte	0x11
+	.byte	0x82
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_num_data_superblocks
+	.uleb128 0x1d
+	.4byte	.LASF275
+	.byte	0x11
+	.byte	0x83
+	.4byte	0xb42
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_active_superblock
+	.uleb128 0x1d
+	.4byte	.LASF276
+	.byte	0x11
+	.byte	0x84
+	.4byte	0xb42
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_buffer_superblock
+	.uleb128 0x1d
+	.4byte	.LASF277
+	.byte	0x11
+	.byte	0x85
+	.4byte	0xb42
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_temp_superblock
+	.uleb128 0x1d
+	.4byte	.LASF278
+	.byte	0x11
+	.byte	0x86
+	.4byte	0xb42
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_superblock
+	.uleb128 0x1d
+	.4byte	.LASF279
+	.byte	0x11
+	.byte	0x87
+	.4byte	0x12cb
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gp_last_act_superblock
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0xb42
+	.uleb128 0x1d
+	.4byte	.LASF280
+	.byte	0x11
+	.byte	0x88
+	.4byte	0x863
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_sys_save_data
+	.uleb128 0x1d
+	.4byte	.LASF281
+	.byte	0x11
+	.byte	0x89
+	.4byte	0x960
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_sys_ext_data
+	.uleb128 0x1d
+	.4byte	.LASF282
+	.byte	0x11
+	.byte	0x8b
+	.4byte	0x1304
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_gc_page_info
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0xbe4
+	.uleb128 0x1d
+	.4byte	.LASF283
+	.byte	0x11
+	.byte	0x8c
+	.4byte	0x63b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_gc_blk_tbl
+	.uleb128 0x1d
+	.4byte	.LASF284
+	.byte	0x11
+	.byte	0x8d
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_blk_num
+	.uleb128 0x1d
+	.4byte	.LASF285
+	.byte	0x11
+	.byte	0x8e
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_page_offset
+	.uleb128 0x1d
+	.4byte	.LASF286
+	.byte	0x11
+	.byte	0x8f
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_cur_blk_valid_pages
+	.uleb128 0x1d
+	.4byte	.LASF287
+	.byte	0x11
+	.byte	0x90
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_cur_blk_max_valid_pages
+	.uleb128 0x1d
+	.4byte	.LASF288
+	.byte	0x11
+	.byte	0x91
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_next_blk
+	.uleb128 0x1d
+	.4byte	.LASF289
+	.byte	0x11
+	.byte	0x92
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_next_blk_1
+	.uleb128 0x1d
+	.4byte	.LASF290
+	.byte	0x11
+	.byte	0x93
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_bad_block_temp_num
+	.uleb128 0x1d
+	.4byte	.LASF291
+	.byte	0x11
+	.byte	0x94
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_bad_block_gc_index
+	.uleb128 0xc
+	.4byte	0x30c
+	.4byte	0x13b3
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x10
+	.byte	0
+	.uleb128 0x1d
+	.4byte	.LASF292
+	.byte	0x11
+	.byte	0x95
+	.4byte	0x13a3
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_bad_block_temp_tbl
+	.uleb128 0x1d
+	.4byte	.LASF293
+	.byte	0x11
+	.byte	0x97
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_free_blk_threshold
+	.uleb128 0x1d
+	.4byte	.LASF294
+	.byte	0x11
+	.byte	0x98
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_merge_free_blk_threshold
+	.uleb128 0x1d
+	.4byte	.LASF295
+	.byte	0x11
+	.byte	0x99
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_blk_index
+	.uleb128 0x1d
+	.4byte	.LASF296
+	.byte	0x11
+	.byte	0x9b
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_gc_page_count
+	.uleb128 0x1d
+	.4byte	.LASF297
+	.byte	0x11
+	.byte	0x9c
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_write_page_count
+	.uleb128 0x1d
+	.4byte	.LASF298
+	.byte	0x11
+	.byte	0x9d
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_write_sector
+	.uleb128 0x1d
+	.4byte	.LASF299
+	.byte	0x11
+	.byte	0x9e
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_read_sector
+	.uleb128 0x1d
+	.4byte	.LASF300
+	.byte	0x11
+	.byte	0xa0
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_discard_page_count
+	.uleb128 0x1d
+	.4byte	.LASF301
+	.byte	0x11
+	.byte	0xa1
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_read_page_count
+	.uleb128 0x1d
+	.4byte	.LASF302
+	.byte	0x11
+	.byte	0xa2
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_tmp_data_superblock_id
+	.uleb128 0x1d
+	.4byte	.LASF303
+	.byte	0x11
+	.byte	0xa3
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_cache_write_count
+	.uleb128 0x1d
+	.4byte	.LASF304
+	.byte	0x11
+	.byte	0xa4
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_l2p_write_count
+	.uleb128 0x1d
+	.4byte	.LASF305
+	.byte	0x11
+	.byte	0xa6
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_mlc_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF306
+	.byte	0x11
+	.byte	0xa7
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_avg_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF307
+	.byte	0x11
+	.byte	0xa8
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_min_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF308
+	.byte	0x11
+	.byte	0xa9
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_slc_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF309
+	.byte	0x11
+	.byte	0xaa
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_sys_slc_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF310
+	.byte	0x11
+	.byte	0xab
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_max_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF311
+	.byte	0x11
+	.byte	0xac
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_in_gc_progress
+	.uleb128 0x1d
+	.4byte	.LASF312
+	.byte	0x11
+	.byte	0xad
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_in_swl_replace
+	.uleb128 0x1d
+	.4byte	.LASF313
+	.byte	0x11
+	.byte	0xae
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_ftl_nand_free_count
+	.uleb128 0x1d
+	.4byte	.LASF314
+	.byte	0x11
+	.byte	0xaf
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_head_data_block
+	.uleb128 0x1d
+	.4byte	.LASF315
+	.byte	0x11
+	.byte	0xb0
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_head_data_block_count
+	.uleb128 0x1d
+	.4byte	.LASF316
+	.byte	0x11
+	.byte	0xb1
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_skip_write_count
+	.uleb128 0x1d
+	.4byte	.LASF317
+	.byte	0x11
+	.byte	0xb2
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_cur_erase_blk
+	.uleb128 0x1d
+	.4byte	.LASF318
+	.byte	0x11
+	.byte	0xb4
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_recovery_page_num
+	.uleb128 0x1d
+	.4byte	.LASF319
+	.byte	0x11
+	.byte	0xb5
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_recovery_page_min_ver
+	.uleb128 0xc
+	.4byte	0x317
+	.4byte	0x159f
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x1f
+	.byte	0
+	.uleb128 0x1d
+	.4byte	.LASF320
+	.byte	0x11
+	.byte	0xb6
+	.4byte	0x158f
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_recovery_ppa_tbl
+	.uleb128 0x1d
+	.4byte	.LASF321
+	.byte	0x11
+	.byte	0xb7
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_mlc_erase_count_value
+	.uleb128 0x1d
+	.4byte	.LASF322
+	.byte	0x11
+	.byte	0xb8
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_power_lost_recovery_flag
+	.uleb128 0x9
+	.4byte	.LASF323
+	.byte	0xe
+	.byte	0x14
+	.4byte	0x387
+	.uleb128 0x9
+	.4byte	.LASF324
+	.byte	0xe
+	.byte	0x15
+	.4byte	0x387
+	.uleb128 0x9
+	.4byte	.LASF325
+	.byte	0xe
+	.byte	0x16
+	.4byte	0x429
+	.uleb128 0xc
+	.4byte	0x99
+	.4byte	0x1604
+	.uleb128 0x19
+	.4byte	0x2e
+	.2byte	0x3ff
+	.byte	0
+	.uleb128 0x9
+	.4byte	.LASF326
+	.byte	0xe
+	.byte	0x17
+	.4byte	0x15f3
+	.uleb128 0x1d
+	.4byte	.LASF327
+	.byte	0x3
+	.byte	0x5
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	DeviceCapacity
+	.uleb128 0x1d
+	.4byte	.LASF328
+	.byte	0x3
+	.byte	0x6
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gFtlInitStatus
+	.uleb128 0x9
+	.4byte	.LASF329
+	.byte	0x3
+	.byte	0x6d
+	.4byte	0x317
+	.uleb128 0x9
+	.4byte	.LASF330
+	.byte	0x3
+	.byte	0x6e
+	.4byte	0x317
+	.uleb128 0x9
+	.4byte	.LASF331
+	.byte	0x3
+	.byte	0x6f
+	.4byte	0x317
+	.uleb128 0x9
+	.4byte	.LASF332
+	.byte	0x3
+	.byte	0x70
+	.4byte	0x317
+	.uleb128 0x1e
+	.4byte	.LASF333
+	.byte	0x3
+	.2byte	0x3bd
+	.4byte	0x64
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	power_up_flag
+	.uleb128 0x1f
+	.4byte	.LASF337
+	.byte	0x3
+	.2byte	0x480
+	.4byte	0x317
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gc_discard_updated
+	.uleb128 0x1e
+	.4byte	.LASF334
+	.byte	0x2
+	.2byte	0x35b
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_ect_tbl_power_up_flush
+	.uleb128 0x1e
+	.4byte	.LASF335
+	.byte	0x2
+	.2byte	0x370
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	FtlUpdateVaildLpnCount
+	.uleb128 0xc
+	.4byte	0x30c
+	.4byte	0x16b6
+	.uleb128 0x19
+	.4byte	0x2e
+	.2byte	0x1fff
+	.byte	0
+	.uleb128 0x1e
+	.4byte	.LASF336
+	.byte	0x2
+	.2byte	0x8ad
+	.4byte	0x16a5
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	check_vpc_table
+	.uleb128 0x20
+	.4byte	.LASF338
+	.byte	0x5
+	.byte	0x6d
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	ftl_gc_temp_block_bops_scan_page_addr
+	.uleb128 0x1e
+	.4byte	.LASF339
+	.byte	0x5
+	.2byte	0x1d4
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gc_ink_free_return_value
+	.uleb128 0x20
+	.4byte	.LASF340
+	.byte	0x1
+	.byte	0xe
+	.4byte	0x15f3
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	check_buf
+	.uleb128 0x21
+	.4byte	0x1604
+	.byte	0x1
+	.byte	0xf
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	ftl_temp_buf
+	.uleb128 0xc
+	.4byte	0x99
+	.4byte	0x1719
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x7f
+	.byte	0
+	.uleb128 0x20
+	.4byte	.LASF341
+	.byte	0x1
+	.byte	0x10
+	.4byte	0x1709
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	check_spare_buf
+	.uleb128 0x22
+	.4byte	.LASF344
+	.byte	0x1
+	.byte	0xd2
+	.4byte	0x64
+	.4byte	.LFB269
+	.4byte	.LFE269-.LFB269
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x177a
+	.uleb128 0x23
+	.4byte	.LASF342
+	.byte	0x1
+	.byte	0xd2
+	.4byte	0x25
+	.4byte	.LLST290
+	.uleb128 0x23
+	.4byte	.LASF343
+	.byte	0x1
+	.byte	0xd2
+	.4byte	0x25
+	.4byte	.LLST291
+	.uleb128 0x23
+	.4byte	.LASF115
+	.byte	0x1
+	.byte	0xd2
+	.4byte	0x41
+	.4byte	.LLST292
+	.uleb128 0x24
+	.4byte	.LVL1646
+	.4byte	0x6708
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF345
+	.byte	0x1
+	.byte	0xcd
+	.4byte	0x25
+	.4byte	.LFB268
+	.4byte	.LFE268-.LFB268
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x17ca
+	.uleb128 0x23
+	.4byte	.LASF346
+	.byte	0x1
+	.byte	0xcd
+	.4byte	0x25
+	.4byte	.LLST170
+	.uleb128 0x23
+	.4byte	.LASF347
+	.byte	0x1
+	.byte	0xcd
+	.4byte	0x17ca
+	.4byte	.LLST171
+	.uleb128 0x23
+	.4byte	.LASF348
+	.byte	0x1
+	.byte	0xcd
+	.4byte	0x41
+	.4byte	.LLST172
+	.uleb128 0x24
+	.4byte	.LVL835
+	.4byte	0x6713
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x17d0
+	.uleb128 0x25
+	.uleb128 0x26
+	.4byte	.LASF351
+	.byte	0x1
+	.byte	0xc8
+	.4byte	0x25
+	.byte	0x1
+	.4byte	0x1815
+	.uleb128 0x27
+	.ascii	"s\000"
+	.byte	0x1
+	.byte	0xc8
+	.4byte	0x25
+	.uleb128 0x27
+	.ascii	"c\000"
+	.byte	0x1
+	.byte	0xc8
+	.4byte	0x64
+	.uleb128 0x27
+	.ascii	"n\000"
+	.byte	0x1
+	.byte	0xc8
+	.4byte	0x41
+	.uleb128 0x28
+	.uleb128 0x29
+	.ascii	"__p\000"
+	.byte	0x1
+	.byte	0xca
+	.4byte	0x25
+	.uleb128 0x29
+	.ascii	"__n\000"
+	.byte	0x1
+	.byte	0xca
+	.4byte	0xce
+	.byte	0
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF349
+	.byte	0x1
+	.byte	0xb6
+	.4byte	0x8e
+	.4byte	.LFB266
+	.4byte	.LFE266-.LFB266
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x190b
+	.uleb128 0x23
+	.4byte	.LASF350
+	.byte	0x1
+	.byte	0xb6
+	.4byte	0x47a
+	.4byte	.LLST104
+	.uleb128 0x2b
+	.ascii	"die\000"
+	.byte	0x1
+	.byte	0xb6
+	.4byte	0x99
+	.4byte	.LLST105
+	.uleb128 0x2c
+	.4byte	.LASF115
+	.byte	0x1
+	.byte	0xb8
+	.4byte	0x83
+	.4byte	.LLST106
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x1
+	.byte	0xb8
+	.4byte	0x83
+	.uleb128 0x2d
+	.4byte	0x17d1
+	.4byte	.LBB337
+	.4byte	.Ldebug_ranges0+0xd8
+	.byte	0x1
+	.byte	0xba
+	.4byte	0x18b5
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0xd8
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0xd8
+	.uleb128 0x30
+	.4byte	0x17fd
+	.uleb128 0x30
+	.4byte	0x1808
+	.uleb128 0x24
+	.4byte	.LVL468
+	.4byte	0x671c
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.4byte	0x17d1
+	.4byte	.LBB346
+	.4byte	.LBE346-.LBB346
+	.byte	0x1
+	.byte	0xbd
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB347
+	.4byte	.LBE347-.LBB347
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB348
+	.4byte	.LBE348-.LBB348
+	.uleb128 0x30
+	.4byte	0x17fd
+	.uleb128 0x30
+	.4byte	0x1808
+	.uleb128 0x24
+	.4byte	.LVL472
+	.4byte	0x671c
+	.byte	0
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x26
+	.4byte	.LASF352
+	.byte	0x1
+	.byte	0x9b
+	.4byte	0x322
+	.byte	0x1
+	.4byte	0x194f
+	.uleb128 0x33
+	.4byte	.LASF353
+	.byte	0x1
+	.byte	0x9b
+	.4byte	0x30c
+	.uleb128 0x29
+	.ascii	"sts\000"
+	.byte	0x1
+	.byte	0x9d
+	.4byte	0x322
+	.uleb128 0x34
+	.4byte	.LASF354
+	.byte	0x1
+	.byte	0x9e
+	.4byte	0x194f
+	.uleb128 0x29
+	.ascii	"req\000"
+	.byte	0x1
+	.byte	0x9f
+	.4byte	0x338
+	.uleb128 0x35
+	.ascii	"out\000"
+	.byte	0x1
+	.byte	0xb1
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x317
+	.4byte	0x195f
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0xf
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF355
+	.byte	0x1
+	.byte	0x85
+	.4byte	0x8e
+	.4byte	.LFB264
+	.4byte	.LFE264-.LFB264
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x19f5
+	.uleb128 0x23
+	.4byte	.LASF356
+	.byte	0x1
+	.byte	0x85
+	.4byte	0x25
+	.4byte	.LLST91
+	.uleb128 0x23
+	.4byte	.LASF357
+	.byte	0x1
+	.byte	0x85
+	.4byte	0x99
+	.4byte	.LLST92
+	.uleb128 0x23
+	.4byte	.LASF358
+	.byte	0x1
+	.byte	0x85
+	.4byte	0x99
+	.4byte	.LLST93
+	.uleb128 0x36
+	.ascii	"i\000"
+	.byte	0x1
+	.byte	0x87
+	.4byte	0x99
+	.uleb128 0x1
+	.byte	0x56
+	.uleb128 0x29
+	.ascii	"cs\000"
+	.byte	0x1
+	.byte	0x87
+	.4byte	0x99
+	.uleb128 0x34
+	.4byte	.LASF62
+	.byte	0x1
+	.byte	0x87
+	.4byte	0x99
+	.uleb128 0x20
+	.4byte	.LASF359
+	.byte	0x1
+	.byte	0x87
+	.4byte	0x99
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -44
+	.uleb128 0x29
+	.ascii	"req\000"
+	.byte	0x1
+	.byte	0x88
+	.4byte	0xf4b
+	.uleb128 0x20
+	.4byte	.LASF360
+	.byte	0x1
+	.byte	0x89
+	.4byte	0x99
+	.uleb128 0x1
+	.byte	0x59
+	.uleb128 0x24
+	.4byte	.LVL403
+	.4byte	0x1bb3
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF361
+	.byte	0x1
+	.byte	0x49
+	.4byte	0x8e
+	.4byte	.LFB263
+	.4byte	.LFE263-.LFB263
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1af0
+	.uleb128 0x23
+	.4byte	.LASF356
+	.byte	0x1
+	.byte	0x49
+	.4byte	0x25
+	.4byte	.LLST86
+	.uleb128 0x23
+	.4byte	.LASF358
+	.byte	0x1
+	.byte	0x49
+	.4byte	0x99
+	.4byte	.LLST87
+	.uleb128 0x23
+	.4byte	.LASF357
+	.byte	0x1
+	.byte	0x49
+	.4byte	0x99
+	.4byte	.LLST88
+	.uleb128 0x23
+	.4byte	.LASF362
+	.byte	0x1
+	.byte	0x49
+	.4byte	0x99
+	.4byte	.LLST89
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x1
+	.byte	0x4b
+	.4byte	0x99
+	.uleb128 0x29
+	.ascii	"cs\000"
+	.byte	0x1
+	.byte	0x4b
+	.4byte	0x99
+	.uleb128 0x34
+	.4byte	.LASF62
+	.byte	0x1
+	.byte	0x4b
+	.4byte	0x99
+	.uleb128 0x20
+	.4byte	.LASF359
+	.byte	0x1
+	.byte	0x4b
+	.4byte	0x99
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -72
+	.uleb128 0x2c
+	.4byte	.LASF360
+	.byte	0x1
+	.byte	0x4c
+	.4byte	0x99
+	.4byte	.LLST90
+	.uleb128 0x29
+	.ascii	"req\000"
+	.byte	0x1
+	.byte	0x4d
+	.4byte	0xf4b
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x1b00
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7625
+	.uleb128 0x38
+	.4byte	.Ldebug_ranges0+0x88
+	.4byte	0x1add
+	.uleb128 0x20
+	.4byte	.LASF364
+	.byte	0x1
+	.byte	0x68
+	.4byte	0x338
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -68
+	.uleb128 0x24
+	.4byte	.LVL388
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL389
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL390
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL391
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL377
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL379
+	.4byte	0x1bb3
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x1b00
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0xe
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x1af0
+	.uleb128 0x2a
+	.4byte	.LASF365
+	.byte	0x1
+	.byte	0x2b
+	.4byte	0x8e
+	.4byte	.LFB262
+	.4byte	.LFE262-.LFB262
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1bb3
+	.uleb128 0x23
+	.4byte	.LASF356
+	.byte	0x1
+	.byte	0x2b
+	.4byte	0x25
+	.4byte	.LLST79
+	.uleb128 0x23
+	.4byte	.LASF358
+	.byte	0x1
+	.byte	0x2b
+	.4byte	0x99
+	.4byte	.LLST80
+	.uleb128 0x23
+	.4byte	.LASF357
+	.byte	0x1
+	.byte	0x2b
+	.4byte	0x99
+	.4byte	.LLST81
+	.uleb128 0x36
+	.ascii	"i\000"
+	.byte	0x1
+	.byte	0x2d
+	.4byte	0x99
+	.uleb128 0x1
+	.byte	0x55
+	.uleb128 0x29
+	.ascii	"cs\000"
+	.byte	0x1
+	.byte	0x2d
+	.4byte	0x99
+	.uleb128 0x34
+	.4byte	.LASF62
+	.byte	0x1
+	.byte	0x2d
+	.4byte	0x99
+	.uleb128 0x20
+	.4byte	.LASF359
+	.byte	0x1
+	.byte	0x2d
+	.4byte	0x99
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -52
+	.uleb128 0x20
+	.4byte	.LASF360
+	.byte	0x1
+	.byte	0x2e
+	.4byte	0x99
+	.uleb128 0x1
+	.byte	0x5a
+	.uleb128 0x29
+	.ascii	"req\000"
+	.byte	0x1
+	.byte	0x2f
+	.4byte	0xf4b
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x1b00
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7608
+	.uleb128 0x24
+	.4byte	.LVL348
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL351
+	.4byte	0x1bb3
+	.byte	0
+	.uleb128 0x39
+	.4byte	.LASF669
+	.byte	0x1
+	.byte	0x11
+	.4byte	0x99
+	.4byte	.LFB261
+	.4byte	.LFE261-.LFB261
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1c5b
+	.uleb128 0x2b
+	.ascii	"req\000"
+	.byte	0x1
+	.byte	0x11
+	.4byte	0xf4b
+	.4byte	.LLST0
+	.uleb128 0x23
+	.4byte	.LASF359
+	.byte	0x1
+	.byte	0x11
+	.4byte	0x381
+	.4byte	.LLST1
+	.uleb128 0x23
+	.4byte	.LASF366
+	.byte	0x1
+	.byte	0x11
+	.4byte	0x381
+	.4byte	.LLST2
+	.uleb128 0x34
+	.4byte	.LASF367
+	.byte	0x1
+	.byte	0x13
+	.4byte	0x83
+	.uleb128 0x34
+	.4byte	.LASF368
+	.byte	0x1
+	.byte	0x13
+	.4byte	0x83
+	.uleb128 0x2c
+	.4byte	.LASF72
+	.byte	0x1
+	.byte	0x14
+	.4byte	0x83
+	.4byte	.LLST3
+	.uleb128 0x2c
+	.4byte	.LASF73
+	.byte	0x1
+	.byte	0x14
+	.4byte	0x83
+	.4byte	.LLST4
+	.uleb128 0x2c
+	.4byte	.LASF369
+	.byte	0x1
+	.byte	0x15
+	.4byte	0x99
+	.4byte	.LLST5
+	.uleb128 0x2c
+	.4byte	.LASF63
+	.byte	0x1
+	.byte	0x16
+	.4byte	0x99
+	.4byte	.LLST6
+	.uleb128 0x2c
+	.4byte	.LASF370
+	.byte	0x1
+	.byte	0x17
+	.4byte	0x99
+	.4byte	.LLST7
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF371
+	.byte	0x5
+	.2byte	0x2f8
+	.4byte	0x99
+	.4byte	.LFB260
+	.4byte	.LFE260-.LFB260
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1c7f
+	.uleb128 0x24
+	.4byte	.LVL1386
+	.4byte	0x1c7f
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF372
+	.byte	0x5
+	.2byte	0x1d5
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x1d4c
+	.uleb128 0x3c
+	.4byte	.LASF373
+	.byte	0x5
+	.2byte	0x1d5
+	.4byte	0x317
+	.uleb128 0x3c
+	.4byte	.LASF374
+	.byte	0x5
+	.2byte	0x1d5
+	.4byte	0x317
+	.uleb128 0x3d
+	.4byte	.LASF375
+	.byte	0x5
+	.2byte	0x1d7
+	.4byte	0x30c
+	.uleb128 0x3e
+	.ascii	"lpa\000"
+	.byte	0x5
+	.2byte	0x1d8
+	.4byte	0x317
+	.uleb128 0x3e
+	.ascii	"ppa\000"
+	.byte	0x5
+	.2byte	0x1d8
+	.4byte	0x317
+	.uleb128 0x3d
+	.4byte	.LASF376
+	.byte	0x5
+	.2byte	0x1d9
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF86
+	.byte	0x5
+	.2byte	0x1da
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF377
+	.byte	0x5
+	.2byte	0x1da
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF378
+	.byte	0x5
+	.2byte	0x1da
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF379
+	.byte	0x5
+	.2byte	0x1da
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF380
+	.byte	0x5
+	.2byte	0x1db
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF381
+	.byte	0x5
+	.2byte	0x1dc
+	.4byte	0x1d4c
+	.uleb128 0x3f
+	.4byte	.LASF382
+	.byte	0x5
+	.2byte	0x276
+	.uleb128 0x3f
+	.4byte	.LASF383
+	.byte	0x5
+	.2byte	0x279
+	.uleb128 0x40
+	.4byte	.LASF363
+	.4byte	0x1d62
+	.4byte	.LASF372
+	.uleb128 0x28
+	.uleb128 0x3d
+	.4byte	.LASF384
+	.byte	0x5
+	.2byte	0x1f3
+	.4byte	0x30c
+	.byte	0
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x77b
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x1d62
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x16
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x1d52
+	.uleb128 0x3b
+	.4byte	.LASF385
+	.byte	0x5
+	.2byte	0x1a2
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x1dc7
+	.uleb128 0x3e
+	.ascii	"ret\000"
+	.byte	0x5
+	.2byte	0x1a4
+	.4byte	0x64
+	.uleb128 0x3e
+	.ascii	"i\000"
+	.byte	0x5
+	.2byte	0x1a5
+	.4byte	0x64
+	.uleb128 0x3e
+	.ascii	"ppa\000"
+	.byte	0x5
+	.2byte	0x1a6
+	.4byte	0x317
+	.uleb128 0x3d
+	.4byte	.LASF354
+	.byte	0x5
+	.2byte	0x1a7
+	.4byte	0x194f
+	.uleb128 0x41
+	.4byte	0x1db8
+	.uleb128 0x3d
+	.4byte	.LASF386
+	.byte	0x5
+	.2byte	0x1b1
+	.4byte	0x338
+	.byte	0
+	.uleb128 0x28
+	.uleb128 0x3d
+	.4byte	.LASF387
+	.byte	0x5
+	.2byte	0x1c6
+	.4byte	0x317
+	.byte	0
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF388
+	.byte	0x5
+	.2byte	0x185
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x1e11
+	.uleb128 0x3c
+	.4byte	.LASF389
+	.byte	0x5
+	.2byte	0x185
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF377
+	.byte	0x5
+	.2byte	0x187
+	.4byte	0x30c
+	.uleb128 0x3e
+	.ascii	"i\000"
+	.byte	0x5
+	.2byte	0x188
+	.4byte	0x30c
+	.uleb128 0x3e
+	.ascii	"j\000"
+	.byte	0x5
+	.2byte	0x188
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF179
+	.byte	0x5
+	.2byte	0x189
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x42
+	.4byte	.LASF498
+	.byte	0x5
+	.2byte	0x17a
+	.4byte	0x64
+	.byte	0x1
+	.uleb128 0x3a
+	.4byte	.LASF390
+	.byte	0x5
+	.2byte	0x166
+	.4byte	0x64
+	.4byte	.LFB255
+	.4byte	.LFE255-.LFB255
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1e7a
+	.uleb128 0x43
+	.4byte	.LASF179
+	.byte	0x5
+	.2byte	0x166
+	.4byte	0x30c
+	.4byte	.LLST78
+	.uleb128 0x3e
+	.ascii	"i\000"
+	.byte	0x5
+	.2byte	0x168
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF391
+	.byte	0x5
+	.2byte	0x169
+	.4byte	0x30c
+	.uleb128 0x24
+	.4byte	.LVL335
+	.4byte	0x455a
+	.uleb128 0x24
+	.4byte	.LVL336
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL337
+	.4byte	0x1e7a
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF392
+	.byte	0x5
+	.2byte	0x158
+	.4byte	0x64
+	.4byte	.LFB254
+	.4byte	.LFE254-.LFB254
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1eae
+	.uleb128 0x43
+	.4byte	.LASF393
+	.byte	0x5
+	.2byte	0x158
+	.4byte	0x30c
+	.4byte	.LLST77
+	.uleb128 0x24
+	.4byte	.LVL333
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF394
+	.byte	0x5
+	.2byte	0x13b
+	.4byte	0x317
+	.4byte	.LFB253
+	.4byte	.LFE253-.LFB253
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1f22
+	.uleb128 0x3e
+	.ascii	"i\000"
+	.byte	0x5
+	.2byte	0x13d
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF381
+	.byte	0x5
+	.2byte	0x13e
+	.4byte	0x1d4c
+	.4byte	.LLST244
+	.uleb128 0x24
+	.4byte	.LVL1281
+	.4byte	0x19f5
+	.uleb128 0x24
+	.4byte	.LVL1282
+	.4byte	0x22d8
+	.uleb128 0x24
+	.4byte	.LVL1283
+	.4byte	0x20d1
+	.uleb128 0x24
+	.4byte	.LVL1284
+	.4byte	0x4b52
+	.uleb128 0x24
+	.4byte	.LVL1285
+	.4byte	0x4994
+	.uleb128 0x24
+	.4byte	.LVL1286
+	.4byte	0x20a0
+	.uleb128 0x24
+	.4byte	.LVL1288
+	.4byte	0x21fa
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF395
+	.byte	0x5
+	.2byte	0x12b
+	.4byte	0x317
+	.4byte	.LFB252
+	.4byte	.LFE252-.LFB252
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1f7c
+	.uleb128 0x24
+	.4byte	.LVL1289
+	.4byte	0x4f6d
+	.uleb128 0x24
+	.4byte	.LVL1290
+	.4byte	0x20d1
+	.uleb128 0x24
+	.4byte	.LVL1291
+	.4byte	0x2512
+	.uleb128 0x24
+	.4byte	.LVL1292
+	.4byte	0x39f7
+	.uleb128 0x24
+	.4byte	.LVL1293
+	.4byte	0x3734
+	.uleb128 0x24
+	.4byte	.LVL1294
+	.4byte	0x3593
+	.uleb128 0x24
+	.4byte	.LVL1295
+	.4byte	0x23f1
+	.byte	0
+	.uleb128 0x45
+	.4byte	.LASF454
+	.byte	0x5
+	.2byte	0x120
+	.byte	0x1
+	.uleb128 0x22
+	.4byte	.LASF396
+	.byte	0x5
+	.byte	0xd2
+	.4byte	0x317
+	.4byte	.LFB250
+	.4byte	.LFE250-.LFB250
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x20a0
+	.uleb128 0x23
+	.4byte	.LASF397
+	.byte	0x5
+	.byte	0xd2
+	.4byte	0x12cb
+	.4byte	.LLST161
+	.uleb128 0x23
+	.4byte	.LASF398
+	.byte	0x5
+	.byte	0xd2
+	.4byte	0x317
+	.4byte	.LLST162
+	.uleb128 0x2c
+	.4byte	.LASF379
+	.byte	0x5
+	.byte	0xd4
+	.4byte	0x30c
+	.4byte	.LLST163
+	.uleb128 0x2c
+	.4byte	.LASF358
+	.byte	0x5
+	.byte	0xd5
+	.4byte	0x30c
+	.4byte	.LLST164
+	.uleb128 0x29
+	.ascii	"req\000"
+	.byte	0x5
+	.byte	0xd5
+	.4byte	0x30c
+	.uleb128 0x34
+	.4byte	.LASF377
+	.byte	0x5
+	.byte	0xd6
+	.4byte	0x30c
+	.uleb128 0x2c
+	.4byte	.LASF173
+	.byte	0x5
+	.byte	0xd6
+	.4byte	0x30c
+	.4byte	.LLST165
+	.uleb128 0x2c
+	.4byte	.LASF171
+	.byte	0x5
+	.byte	0xd6
+	.4byte	0x30c
+	.4byte	.LLST166
+	.uleb128 0x2c
+	.4byte	.LASF399
+	.byte	0x5
+	.byte	0xd7
+	.4byte	0x317
+	.4byte	.LLST167
+	.uleb128 0x2c
+	.4byte	.LASF400
+	.byte	0x5
+	.byte	0xd8
+	.4byte	0x317
+	.4byte	.LLST168
+	.uleb128 0x34
+	.4byte	.LASF401
+	.byte	0x5
+	.byte	0xd9
+	.4byte	0x317
+	.uleb128 0x2c
+	.4byte	.LASF381
+	.byte	0x5
+	.byte	0xda
+	.4byte	0x1d4c
+	.4byte	.LLST169
+	.uleb128 0x46
+	.4byte	.LASF402
+	.byte	0x5
+	.byte	0xe1
+	.uleb128 0x46
+	.4byte	.LASF403
+	.byte	0x5
+	.byte	0xe5
+	.uleb128 0x47
+	.4byte	.LASF472
+	.byte	0x5
+	.2byte	0x117
+	.4byte	.L960
+	.uleb128 0x24
+	.4byte	.LVL797
+	.4byte	0x20a0
+	.uleb128 0x24
+	.4byte	.LVL804
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL818
+	.4byte	0x458e
+	.uleb128 0x24
+	.4byte	.LVL825
+	.4byte	0x3147
+	.uleb128 0x24
+	.4byte	.LVL827
+	.4byte	0x21fa
+	.uleb128 0x24
+	.4byte	.LVL829
+	.4byte	0x4228
+	.uleb128 0x24
+	.4byte	.LVL830
+	.4byte	0x20a0
+	.byte	0
+	.uleb128 0x48
+	.4byte	.LASF410
+	.byte	0x5
+	.byte	0xc9
+	.4byte	.LFB249
+	.4byte	.LFE249-.LFB249
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x20d1
+	.uleb128 0x24
+	.4byte	.LVL791
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL792
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL793
+	.4byte	0x231c
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF404
+	.byte	0x5
+	.byte	0x6f
+	.4byte	0x64
+	.4byte	.LFB248
+	.4byte	.LFE248-.LFB248
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x21e5
+	.uleb128 0x23
+	.4byte	.LASF405
+	.byte	0x5
+	.byte	0x6f
+	.4byte	0x64
+	.4byte	.LLST240
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x5
+	.byte	0x71
+	.4byte	0x30c
+	.uleb128 0x34
+	.4byte	.LASF406
+	.byte	0x5
+	.byte	0x71
+	.4byte	0x30c
+	.uleb128 0x2c
+	.4byte	.LASF407
+	.byte	0x5
+	.byte	0x72
+	.4byte	0x317
+	.4byte	.LLST241
+	.uleb128 0x2c
+	.4byte	.LASF408
+	.byte	0x5
+	.byte	0x73
+	.4byte	0x317
+	.4byte	.LLST242
+	.uleb128 0x34
+	.4byte	.LASF397
+	.byte	0x5
+	.byte	0x74
+	.4byte	0x12cb
+	.uleb128 0x2c
+	.4byte	.LASF409
+	.byte	0x5
+	.byte	0x75
+	.4byte	0x1304
+	.4byte	.LLST243
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x21f5
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7458
+	.uleb128 0x24
+	.4byte	.LVL1248
+	.4byte	0x1f85
+	.uleb128 0x24
+	.4byte	.LVL1250
+	.4byte	0x3734
+	.uleb128 0x24
+	.4byte	.LVL1251
+	.4byte	0x4b52
+	.uleb128 0x24
+	.4byte	.LVL1252
+	.4byte	0x4994
+	.uleb128 0x24
+	.4byte	.LVL1256
+	.4byte	0x4f6d
+	.uleb128 0x24
+	.4byte	.LVL1257
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1259
+	.4byte	0x233b
+	.uleb128 0x24
+	.4byte	.LVL1261
+	.4byte	0x4203
+	.uleb128 0x24
+	.4byte	.LVL1262
+	.4byte	0x39f7
+	.uleb128 0x24
+	.4byte	.LVL1263
+	.4byte	0x3593
+	.uleb128 0x24
+	.4byte	.LVL1265
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1266
+	.4byte	0x392c
+	.uleb128 0x24
+	.4byte	.LVL1267
+	.4byte	0x455a
+	.uleb128 0x24
+	.4byte	.LVL1268
+	.4byte	0x392c
+	.uleb128 0x24
+	.4byte	.LVL1269
+	.4byte	0x233b
+	.uleb128 0x24
+	.4byte	.LVL1271
+	.4byte	0x4228
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x21f5
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x12
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x21e5
+	.uleb128 0x48
+	.4byte	.LASF411
+	.byte	0x5
+	.byte	0x54
+	.4byte	.LFB247
+	.4byte	.LFE247-.LFB247
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2262
+	.uleb128 0x23
+	.4byte	.LASF412
+	.byte	0x5
+	.byte	0x54
+	.4byte	0x317
+	.4byte	.LLST72
+	.uleb128 0x23
+	.4byte	.LASF182
+	.byte	0x5
+	.byte	0x54
+	.4byte	0x317
+	.4byte	.LLST73
+	.uleb128 0x2b
+	.ascii	"lpa\000"
+	.byte	0x5
+	.byte	0x54
+	.4byte	0x317
+	.4byte	.LLST74
+	.uleb128 0x2c
+	.4byte	.LASF413
+	.byte	0x5
+	.byte	0x56
+	.4byte	0x30c
+	.4byte	.LLST75
+	.uleb128 0x49
+	.ascii	"i\000"
+	.byte	0x5
+	.byte	0x57
+	.4byte	0x30c
+	.4byte	.LLST76
+	.uleb128 0x24
+	.4byte	.LVL322
+	.4byte	0x455a
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF414
+	.byte	0x5
+	.byte	0x49
+	.4byte	0x317
+	.4byte	.LFB246
+	.4byte	.LFE246-.LFB246
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2294
+	.uleb128 0x2b
+	.ascii	"blk\000"
+	.byte	0x5
+	.byte	0x49
+	.4byte	0x30c
+	.4byte	.LLST71
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x5
+	.byte	0x4b
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x48
+	.4byte	.LASF415
+	.byte	0x5
+	.byte	0x38
+	.4byte	.LFB245
+	.4byte	.LFE245-.LFB245
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x22d8
+	.uleb128 0x4a
+	.ascii	"req\000"
+	.byte	0x5
+	.byte	0x38
+	.4byte	0xf4b
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x4b
+	.4byte	.LASF416
+	.byte	0x5
+	.byte	0x38
+	.4byte	0x317
+	.uleb128 0x1
+	.byte	0x51
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x5
+	.byte	0x3a
+	.4byte	0x30c
+	.uleb128 0x34
+	.4byte	.LASF417
+	.byte	0x5
+	.byte	0x3b
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x48
+	.4byte	.LASF418
+	.byte	0x5
+	.byte	0x29
+	.4byte	.LFB244
+	.4byte	.LFE244-.LFB244
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x231c
+	.uleb128 0x4a
+	.ascii	"req\000"
+	.byte	0x5
+	.byte	0x29
+	.4byte	0xf4b
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x4b
+	.4byte	.LASF416
+	.byte	0x5
+	.byte	0x29
+	.4byte	0x317
+	.uleb128 0x1
+	.byte	0x51
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x5
+	.byte	0x2b
+	.4byte	0x30c
+	.uleb128 0x34
+	.4byte	.LASF417
+	.byte	0x5
+	.byte	0x2c
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x48
+	.4byte	.LASF419
+	.byte	0x5
+	.byte	0x15
+	.4byte	.LFB243
+	.4byte	.LFE243-.LFB243
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x233b
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x5
+	.byte	0x17
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF420
+	.byte	0x2
+	.2byte	0xa93
+	.4byte	0x64
+	.4byte	.LFB242
+	.4byte	.LFE242-.LFB242
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x239c
+	.uleb128 0x43
+	.4byte	.LASF406
+	.byte	0x2
+	.2byte	0xa93
+	.4byte	0x30c
+	.4byte	.LLST185
+	.uleb128 0x3e
+	.ascii	"ret\000"
+	.byte	0x2
+	.2byte	0xa95
+	.4byte	0x64
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x23ac
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7388
+	.uleb128 0x24
+	.4byte	.LVL911
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL912
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL914
+	.4byte	0x23b1
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x23ac
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x13
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x239c
+	.uleb128 0x3b
+	.4byte	.LASF421
+	.byte	0x2
+	.2byte	0xa7e
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x23dc
+	.uleb128 0x3c
+	.4byte	.LASF406
+	.byte	0x2
+	.2byte	0xa7e
+	.4byte	0x30c
+	.uleb128 0x40
+	.4byte	.LASF363
+	.4byte	0x23ec
+	.4byte	.LASF421
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x23ec
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0xf
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x23dc
+	.uleb128 0x3a
+	.4byte	.LASF422
+	.byte	0x2
+	.2byte	0xa5e
+	.4byte	0x317
+	.4byte	.LFB240
+	.4byte	.LFE240-.LFB240
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x246d
+	.uleb128 0x43
+	.4byte	.LASF423
+	.byte	0x2
+	.2byte	0xa5e
+	.4byte	0x12cb
+	.4byte	.LLST69
+	.uleb128 0x44
+	.4byte	.LASF379
+	.byte	0x2
+	.2byte	0xa60
+	.4byte	0x30c
+	.4byte	.LLST70
+	.uleb128 0x1f
+	.4byte	.LASF424
+	.byte	0x2
+	.2byte	0xa61
+	.4byte	0x317
+	.uleb128 0x1
+	.byte	0x56
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x21f5
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7368
+	.uleb128 0x24
+	.4byte	.LVL307
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL308
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL309
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL312
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF425
+	.byte	0x2
+	.2byte	0xa46
+	.4byte	0x64
+	.4byte	.LFB239
+	.4byte	.LFE239-.LFB239
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x24fd
+	.uleb128 0x43
+	.4byte	.LASF423
+	.byte	0x2
+	.2byte	0xa46
+	.4byte	0x12cb
+	.4byte	.LLST226
+	.uleb128 0x1f
+	.4byte	.LASF406
+	.byte	0x2
+	.2byte	0xa48
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x54
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x250d
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7361
+	.uleb128 0x24
+	.4byte	.LVL1183
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1184
+	.4byte	0x4203
+	.uleb128 0x24
+	.4byte	.LVL1185
+	.4byte	0x23b1
+	.uleb128 0x24
+	.4byte	.LVL1186
+	.4byte	0x2512
+	.uleb128 0x24
+	.4byte	.LVL1187
+	.4byte	0x39f7
+	.uleb128 0x24
+	.4byte	.LVL1188
+	.4byte	0x3734
+	.uleb128 0x24
+	.4byte	.LVL1189
+	.4byte	0x3593
+	.uleb128 0x24
+	.4byte	.LVL1190
+	.4byte	0x4228
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x250d
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x1c
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x24fd
+	.uleb128 0x4c
+	.4byte	.LASF426
+	.byte	0x2
+	.2byte	0x9e2
+	.4byte	0x64
+	.4byte	.LFB238
+	.4byte	.LFE238-.LFB238
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x266c
+	.uleb128 0x4d
+	.ascii	"p\000"
+	.byte	0x2
+	.2byte	0x9e2
+	.4byte	0x12cb
+	.4byte	.LLST177
+	.uleb128 0x44
+	.4byte	.LASF427
+	.byte	0x2
+	.2byte	0x9e4
+	.4byte	0x30c
+	.4byte	.LLST178
+	.uleb128 0x3d
+	.4byte	.LASF377
+	.byte	0x2
+	.2byte	0x9e5
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF358
+	.byte	0x2
+	.2byte	0x9e5
+	.4byte	0x30c
+	.4byte	.LLST179
+	.uleb128 0x3e
+	.ascii	"n\000"
+	.byte	0x2
+	.2byte	0x9e5
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF379
+	.byte	0x2
+	.2byte	0x9e5
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF428
+	.byte	0x2
+	.2byte	0x9e6
+	.4byte	0x64
+	.4byte	.LLST180
+	.uleb128 0x44
+	.4byte	.LASF429
+	.byte	0x2
+	.2byte	0x9e7
+	.4byte	0x30c
+	.4byte	.LLST181
+	.uleb128 0x3f
+	.4byte	.LASF430
+	.byte	0x2
+	.2byte	0x9e8
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x267c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7340
+	.uleb128 0x4e
+	.4byte	0x3414
+	.4byte	.LBB429
+	.4byte	.Ldebug_ranges0+0x178
+	.byte	0x2
+	.2byte	0xa18
+	.4byte	0x25db
+	.uleb128 0x2e
+	.4byte	0x342d
+	.uleb128 0x2e
+	.4byte	0x3421
+	.uleb128 0x24
+	.4byte	.LVL882
+	.4byte	0x5c7a
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL857
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL863
+	.4byte	0x4026
+	.uleb128 0x24
+	.4byte	.LVL864
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL865
+	.4byte	0x2c52
+	.uleb128 0x24
+	.4byte	.LVL866
+	.4byte	0x4203
+	.uleb128 0x24
+	.4byte	.LVL867
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL868
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL870
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL871
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL872
+	.4byte	0x3414
+	.uleb128 0x24
+	.4byte	.LVL874
+	.4byte	0x195f
+	.uleb128 0x24
+	.4byte	.LVL876
+	.4byte	0x27b1
+	.uleb128 0x24
+	.4byte	.LVL877
+	.4byte	0x4994
+	.uleb128 0x24
+	.4byte	.LVL879
+	.4byte	0x4203
+	.uleb128 0x24
+	.4byte	.LVL884
+	.4byte	0x4b52
+	.uleb128 0x24
+	.4byte	.LVL887
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x267c
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x18
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x266c
+	.uleb128 0x3b
+	.4byte	.LASF431
+	.byte	0x2
+	.2byte	0x9d9
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x269f
+	.uleb128 0x3c
+	.4byte	.LASF406
+	.byte	0x2
+	.2byte	0x9d9
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x4c
+	.4byte	.LASF432
+	.byte	0x2
+	.2byte	0x98e
+	.4byte	0x30c
+	.4byte	.LFB236
+	.4byte	.LFE236-.LFB236
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2739
+	.uleb128 0x1f
+	.4byte	.LASF433
+	.byte	0x2
+	.2byte	0x990
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x55
+	.uleb128 0x3d
+	.4byte	.LASF434
+	.byte	0x2
+	.2byte	0x991
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF435
+	.byte	0x2
+	.2byte	0x992
+	.4byte	0x30c
+	.4byte	.LLST64
+	.uleb128 0x44
+	.4byte	.LASF436
+	.byte	0x2
+	.2byte	0x993
+	.4byte	0x121b
+	.4byte	.LLST65
+	.uleb128 0x44
+	.4byte	.LASF437
+	.byte	0x2
+	.2byte	0x994
+	.4byte	0x30c
+	.4byte	.LLST66
+	.uleb128 0x44
+	.4byte	.LASF438
+	.byte	0x2
+	.2byte	0x995
+	.4byte	0x30c
+	.4byte	.LLST67
+	.uleb128 0x3e
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x996
+	.4byte	0x317
+	.uleb128 0x24
+	.4byte	.LVL288
+	.4byte	0x2739
+	.uleb128 0x24
+	.4byte	.LVL294
+	.4byte	0x2788
+	.uleb128 0x24
+	.4byte	.LVL299
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF439
+	.byte	0x2
+	.2byte	0x979
+	.4byte	0x30c
+	.4byte	.LFB235
+	.4byte	.LFE235-.LFB235
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2788
+	.uleb128 0x43
+	.4byte	.LASF94
+	.byte	0x2
+	.2byte	0x979
+	.4byte	0x30c
+	.4byte	.LLST59
+	.uleb128 0x1f
+	.4byte	.LASF440
+	.byte	0x2
+	.2byte	0x97b
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x3d
+	.4byte	.LASF393
+	.byte	0x2
+	.2byte	0x97c
+	.4byte	0x30c
+	.uleb128 0x3e
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x97d
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF441
+	.byte	0x2
+	.2byte	0x970
+	.4byte	0x30c
+	.4byte	.LFB234
+	.4byte	.LFE234-.LFB234
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x27b1
+	.uleb128 0x1f
+	.4byte	.LASF435
+	.byte	0x2
+	.2byte	0x972
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x50
+	.byte	0
+	.uleb128 0x4c
+	.4byte	.LASF442
+	.byte	0x2
+	.2byte	0x960
+	.4byte	0x64
+	.4byte	.LFB233
+	.4byte	.LFE233-.LFB233
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2812
+	.uleb128 0x43
+	.4byte	.LASF406
+	.byte	0x2
+	.2byte	0x960
+	.4byte	0x30c
+	.4byte	.LLST58
+	.uleb128 0x3d
+	.4byte	.LASF377
+	.byte	0x2
+	.2byte	0x962
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF379
+	.byte	0x2
+	.2byte	0x962
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF166
+	.byte	0x2
+	.2byte	0x963
+	.4byte	0x30c
+	.uleb128 0x24
+	.4byte	.LVL196
+	.4byte	0x45c2
+	.uleb128 0x24
+	.4byte	.LVL197
+	.4byte	0x4af7
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF443
+	.byte	0x2
+	.2byte	0x901
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x283c
+	.uleb128 0x3e
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x903
+	.4byte	0x64
+	.uleb128 0x28
+	.uleb128 0x3d
+	.4byte	.LASF397
+	.byte	0x2
+	.2byte	0x928
+	.4byte	0x12cb
+	.byte	0
+	.byte	0
+	.uleb128 0x4f
+	.4byte	.LASF444
+	.byte	0x2
+	.2byte	0x8e2
+	.4byte	.LFB231
+	.4byte	.LFE231-.LFB231
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x28a7
+	.uleb128 0x50
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x8e4
+	.4byte	0x64
+	.uleb128 0x1
+	.byte	0x55
+	.uleb128 0x50
+	.ascii	"ppa\000"
+	.byte	0x2
+	.2byte	0x8e5
+	.4byte	0x317
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -36
+	.uleb128 0x3d
+	.4byte	.LASF445
+	.byte	0x2
+	.2byte	0x8e6
+	.4byte	0x1d4c
+	.uleb128 0x24
+	.4byte	.LVL633
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL636
+	.4byte	0x392c
+	.uleb128 0x24
+	.4byte	.LVL637
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL638
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL639
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0x4f
+	.4byte	.LASF446
+	.byte	0x2
+	.2byte	0x8ae
+	.4byte	.LFB230
+	.4byte	.LFE230-.LFB230
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x29c0
+	.uleb128 0x3e
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x8b0
+	.4byte	0x30c
+	.uleb128 0x51
+	.ascii	"lpn\000"
+	.byte	0x2
+	.2byte	0x8b1
+	.4byte	0x317
+	.4byte	.LLST142
+	.uleb128 0x1f
+	.4byte	.LASF447
+	.byte	0x2
+	.2byte	0x8b2
+	.4byte	0x317
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -52
+	.uleb128 0x3e
+	.ascii	"blk\000"
+	.byte	0x2
+	.2byte	0x8b3
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF448
+	.byte	0x2
+	.2byte	0x8b4
+	.4byte	0x30c
+	.4byte	.LLST143
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x29d0
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7256
+	.uleb128 0x52
+	.4byte	.LBB390
+	.4byte	.LBE390-.LBB390
+	.4byte	0x2938
+	.uleb128 0x44
+	.4byte	.LASF94
+	.byte	0x2
+	.2byte	0x8d1
+	.4byte	0x30c
+	.4byte	.LLST144
+	.uleb128 0x24
+	.4byte	.LVL652
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0x53
+	.4byte	0x17d1
+	.4byte	.LBB387
+	.4byte	.LBE387-.LBB387
+	.byte	0x2
+	.2byte	0x8b7
+	.4byte	0x2992
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB388
+	.4byte	.LBE388-.LBB388
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB389
+	.4byte	.LBE389-.LBB389
+	.uleb128 0x30
+	.4byte	0x6134
+	.uleb128 0x30
+	.4byte	0x6139
+	.uleb128 0x24
+	.4byte	.LVL648
+	.4byte	0x6732
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL647
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL653
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL655
+	.4byte	0x392c
+	.uleb128 0x24
+	.4byte	.LVL656
+	.4byte	0x455a
+	.uleb128 0x24
+	.4byte	.LVL658
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x29d0
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0xd
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x29c0
+	.uleb128 0x4f
+	.4byte	.LASF449
+	.byte	0x2
+	.2byte	0x88f
+	.4byte	.LFB229
+	.4byte	.LFE229-.LFB229
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2a7c
+	.uleb128 0x51
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x891
+	.4byte	0x30c
+	.4byte	.LLST224
+	.uleb128 0x51
+	.ascii	"lpn\000"
+	.byte	0x2
+	.2byte	0x892
+	.4byte	0x317
+	.4byte	.LLST225
+	.uleb128 0x1f
+	.4byte	.LASF447
+	.byte	0x2
+	.2byte	0x893
+	.4byte	0x317
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -44
+	.uleb128 0x3e
+	.ascii	"blk\000"
+	.byte	0x2
+	.2byte	0x894
+	.4byte	0x30c
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x2a8c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7240
+	.uleb128 0x24
+	.4byte	.LVL1169
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1170
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL1174
+	.4byte	0x392c
+	.uleb128 0x24
+	.4byte	.LVL1175
+	.4byte	0x455a
+	.uleb128 0x24
+	.4byte	.LVL1177
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1178
+	.4byte	0x23b1
+	.uleb128 0x24
+	.4byte	.LVL1179
+	.4byte	0x39f7
+	.uleb128 0x24
+	.4byte	.LVL1180
+	.4byte	0x3593
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x2a8c
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x14
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x2a7c
+	.uleb128 0x4f
+	.4byte	.LASF450
+	.byte	0x2
+	.2byte	0x86b
+	.4byte	.LFB228
+	.4byte	.LFE228-.LFB228
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2b06
+	.uleb128 0x43
+	.4byte	.LASF397
+	.byte	0x2
+	.2byte	0x86b
+	.4byte	0x12cb
+	.4byte	.LLST205
+	.uleb128 0x1f
+	.4byte	.LASF451
+	.byte	0x2
+	.2byte	0x86d
+	.4byte	0x338
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -52
+	.uleb128 0x3d
+	.4byte	.LASF381
+	.byte	0x2
+	.2byte	0x86e
+	.4byte	0x1d4c
+	.uleb128 0x3d
+	.4byte	.LASF452
+	.byte	0x2
+	.2byte	0x86f
+	.4byte	0x64
+	.uleb128 0x3d
+	.4byte	.LASF175
+	.byte	0x2
+	.2byte	0x870
+	.4byte	0x317
+	.uleb128 0x24
+	.4byte	.LVL1048
+	.4byte	0x23f1
+	.uleb128 0x24
+	.4byte	.LVL1049
+	.4byte	0x19f5
+	.uleb128 0x24
+	.4byte	.LVL1050
+	.4byte	0x233b
+	.byte	0
+	.uleb128 0x54
+	.4byte	.LASF453
+	.byte	0x2
+	.2byte	0x851
+	.4byte	.LFB227
+	.4byte	.LFE227-.LFB227
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2b80
+	.uleb128 0x53
+	.4byte	0x17d1
+	.4byte	.LBB487
+	.4byte	.LBE487-.LBB487
+	.byte	0x2
+	.2byte	0x855
+	.4byte	0x2b76
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB488
+	.4byte	.LBE488-.LBB488
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB489
+	.4byte	.LBE489-.LBB489
+	.uleb128 0x30
+	.4byte	0x6134
+	.uleb128 0x30
+	.4byte	0x6139
+	.uleb128 0x24
+	.4byte	.LVL1152
+	.4byte	0x6732
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL1151
+	.4byte	0x3781
+	.byte	0
+	.uleb128 0x45
+	.4byte	.LASF455
+	.byte	0x2
+	.2byte	0x83d
+	.byte	0x1
+	.uleb128 0x4c
+	.4byte	.LASF456
+	.byte	0x2
+	.2byte	0x812
+	.4byte	0x64
+	.4byte	.LFB225
+	.4byte	.LFE225-.LFB225
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2c3d
+	.uleb128 0x44
+	.4byte	.LASF433
+	.byte	0x2
+	.2byte	0x814
+	.4byte	0x30c
+	.4byte	.LLST158
+	.uleb128 0x3d
+	.4byte	.LASF377
+	.byte	0x2
+	.2byte	0x814
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF379
+	.byte	0x2
+	.2byte	0x814
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF166
+	.byte	0x2
+	.2byte	0x814
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF457
+	.byte	0x2
+	.2byte	0x815
+	.4byte	0x30c
+	.4byte	.LLST159
+	.uleb128 0x44
+	.4byte	.LASF458
+	.byte	0x2
+	.2byte	0x815
+	.4byte	0x30c
+	.4byte	.LLST160
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x2c4d
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7215
+	.uleb128 0x24
+	.4byte	.LVL777
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL779
+	.4byte	0x45c2
+	.uleb128 0x24
+	.4byte	.LVL780
+	.4byte	0x4af7
+	.uleb128 0x24
+	.4byte	.LVL784
+	.4byte	0x4228
+	.uleb128 0x24
+	.4byte	.LVL787
+	.4byte	0x4203
+	.uleb128 0x24
+	.4byte	.LVL789
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x2c4d
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x11
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x2c3d
+	.uleb128 0x3a
+	.4byte	.LASF459
+	.byte	0x2
+	.2byte	0x7fc
+	.4byte	0x64
+	.4byte	.LFB224
+	.4byte	.LFE224-.LFB224
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2cbd
+	.uleb128 0x4d
+	.ascii	"p\000"
+	.byte	0x2
+	.2byte	0x7fc
+	.4byte	0x12cb
+	.4byte	.LLST57
+	.uleb128 0x3d
+	.4byte	.LASF377
+	.byte	0x2
+	.2byte	0x7fe
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF379
+	.byte	0x2
+	.2byte	0x7fe
+	.4byte	0x30c
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x23ec
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7194
+	.uleb128 0x24
+	.4byte	.LVL189
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL191
+	.4byte	0x45c2
+	.uleb128 0x24
+	.4byte	.LVL192
+	.4byte	0x4af7
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF460
+	.byte	0x2
+	.2byte	0x7ef
+	.4byte	0x64
+	.4byte	.LFB223
+	.4byte	.LFE223-.LFB223
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2d0e
+	.uleb128 0x24
+	.4byte	.LVL1275
+	.4byte	0x2d34
+	.uleb128 0x24
+	.4byte	.LVL1276
+	.4byte	0x2d0e
+	.uleb128 0x24
+	.4byte	.LVL1277
+	.4byte	0x2d34
+	.uleb128 0x24
+	.4byte	.LVL1278
+	.4byte	0x2d0e
+	.uleb128 0x24
+	.4byte	.LVL1279
+	.4byte	0x1f7c
+	.uleb128 0x24
+	.4byte	.LVL1280
+	.4byte	0x233b
+	.byte	0
+	.uleb128 0x55
+	.4byte	.LASF496
+	.byte	0x2
+	.2byte	0x7dc
+	.byte	0x1
+	.4byte	0x2d34
+	.uleb128 0x3c
+	.4byte	.LASF423
+	.byte	0x2
+	.2byte	0x7dc
+	.4byte	0x12cb
+	.uleb128 0x3d
+	.4byte	.LASF379
+	.byte	0x2
+	.2byte	0x7de
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF461
+	.byte	0x2
+	.2byte	0x677
+	.4byte	0x64
+	.4byte	.LFB221
+	.4byte	.LFE221-.LFB221
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x307b
+	.uleb128 0x43
+	.4byte	.LASF397
+	.byte	0x2
+	.2byte	0x677
+	.4byte	0x12cb
+	.4byte	.LLST190
+	.uleb128 0x44
+	.4byte	.LASF462
+	.byte	0x2
+	.2byte	0x679
+	.4byte	0x30c
+	.4byte	.LLST191
+	.uleb128 0x44
+	.4byte	.LASF463
+	.byte	0x2
+	.2byte	0x679
+	.4byte	0x30c
+	.4byte	.LLST192
+	.uleb128 0x3d
+	.4byte	.LASF377
+	.byte	0x2
+	.2byte	0x67a
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF173
+	.byte	0x2
+	.2byte	0x67a
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF171
+	.byte	0x2
+	.2byte	0x67a
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF464
+	.byte	0x2
+	.2byte	0x67b
+	.4byte	0x30c
+	.4byte	.LLST193
+	.uleb128 0x44
+	.4byte	.LASF465
+	.byte	0x2
+	.2byte	0x67b
+	.4byte	0x30c
+	.4byte	.LLST194
+	.uleb128 0x3d
+	.4byte	.LASF379
+	.byte	0x2
+	.2byte	0x67c
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF466
+	.byte	0x2
+	.2byte	0x67d
+	.4byte	0x64
+	.4byte	.LLST195
+	.uleb128 0x3d
+	.4byte	.LASF467
+	.byte	0x2
+	.2byte	0x67d
+	.4byte	0x64
+	.uleb128 0x3d
+	.4byte	.LASF358
+	.byte	0x2
+	.2byte	0x67e
+	.4byte	0x30c
+	.uleb128 0x51
+	.ascii	"n\000"
+	.byte	0x2
+	.2byte	0x67e
+	.4byte	0x30c
+	.4byte	.LLST196
+	.uleb128 0x3e
+	.ascii	"req\000"
+	.byte	0x2
+	.2byte	0x67e
+	.4byte	0x30c
+	.uleb128 0x51
+	.ascii	"lpa\000"
+	.byte	0x2
+	.2byte	0x67f
+	.4byte	0x317
+	.4byte	.LLST197
+	.uleb128 0x44
+	.4byte	.LASF447
+	.byte	0x2
+	.2byte	0x67f
+	.4byte	0x317
+	.4byte	.LLST198
+	.uleb128 0x44
+	.4byte	.LASF407
+	.byte	0x2
+	.2byte	0x67f
+	.4byte	0x317
+	.4byte	.LLST199
+	.uleb128 0x44
+	.4byte	.LASF399
+	.byte	0x2
+	.2byte	0x67f
+	.4byte	0x317
+	.4byte	.LLST200
+	.uleb128 0x44
+	.4byte	.LASF413
+	.byte	0x2
+	.2byte	0x680
+	.4byte	0x30c
+	.4byte	.LLST201
+	.uleb128 0x3d
+	.4byte	.LASF468
+	.byte	0x2
+	.2byte	0x680
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF469
+	.byte	0x2
+	.2byte	0x681
+	.4byte	0x317
+	.4byte	.LLST202
+	.uleb128 0x3d
+	.4byte	.LASF470
+	.byte	0x2
+	.2byte	0x682
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF381
+	.byte	0x2
+	.2byte	0x683
+	.4byte	0x1d4c
+	.uleb128 0x3d
+	.4byte	.LASF471
+	.byte	0x2
+	.2byte	0x684
+	.4byte	0x317
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x308b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7137
+	.uleb128 0x47
+	.4byte	.LASF473
+	.byte	0x2
+	.2byte	0x713
+	.4byte	.L1118
+	.uleb128 0x47
+	.4byte	.LASF403
+	.byte	0x2
+	.2byte	0x71b
+	.4byte	.L1130
+	.uleb128 0x47
+	.4byte	.LASF474
+	.byte	0x2
+	.2byte	0x7ce
+	.4byte	.L1136
+	.uleb128 0x3f
+	.4byte	.LASF475
+	.byte	0x2
+	.2byte	0x7d8
+	.uleb128 0x52
+	.4byte	.LBB450
+	.4byte	.LBE450-.LBB450
+	.4byte	0x2f0a
+	.uleb128 0x3d
+	.4byte	.LASF476
+	.byte	0x2
+	.2byte	0x6eb
+	.4byte	0x317
+	.uleb128 0x3d
+	.4byte	.LASF477
+	.byte	0x2
+	.2byte	0x6ec
+	.4byte	0x317
+	.uleb128 0x24
+	.4byte	.LVL975
+	.4byte	0x1b05
+	.byte	0
+	.uleb128 0x38
+	.4byte	.Ldebug_ranges0+0x1c0
+	.4byte	0x2f7c
+	.uleb128 0x44
+	.4byte	.LASF478
+	.byte	0x2
+	.2byte	0x746
+	.4byte	0x317
+	.4byte	.LLST203
+	.uleb128 0x44
+	.4byte	.LASF479
+	.byte	0x2
+	.2byte	0x747
+	.4byte	0x317
+	.4byte	.LLST204
+	.uleb128 0x24
+	.4byte	.LVL1013
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL1015
+	.4byte	0x233b
+	.uleb128 0x24
+	.4byte	.LVL1020
+	.4byte	0x392c
+	.uleb128 0x24
+	.4byte	.LVL1022
+	.4byte	0x4517
+	.uleb128 0x24
+	.4byte	.LVL1024
+	.4byte	0x3090
+	.uleb128 0x24
+	.4byte	.LVL1026
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL1028
+	.4byte	0x4517
+	.uleb128 0x24
+	.4byte	.LVL1029
+	.4byte	0x4517
+	.byte	0
+	.uleb128 0x52
+	.4byte	.LBB454
+	.4byte	.LBE454-.LBB454
+	.4byte	0x2fbd
+	.uleb128 0x3d
+	.4byte	.LASF480
+	.byte	0x2
+	.2byte	0x785
+	.4byte	0x317
+	.uleb128 0x3d
+	.4byte	.LASF479
+	.byte	0x2
+	.2byte	0x786
+	.4byte	0x317
+	.uleb128 0x24
+	.4byte	.LVL1033
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL1034
+	.4byte	0x4517
+	.uleb128 0x24
+	.4byte	.LVL1035
+	.4byte	0x392c
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL941
+	.4byte	0x447f
+	.uleb128 0x24
+	.4byte	.LVL943
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL949
+	.4byte	0x458e
+	.uleb128 0x24
+	.4byte	.LVL955
+	.4byte	0x3147
+	.uleb128 0x24
+	.4byte	.LVL958
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL960
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL964
+	.4byte	0x4517
+	.uleb128 0x24
+	.4byte	.LVL979
+	.4byte	0x36a4
+	.uleb128 0x24
+	.4byte	.LVL982
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL991
+	.4byte	0x458e
+	.uleb128 0x24
+	.4byte	.LVL1000
+	.4byte	0x233b
+	.uleb128 0x24
+	.4byte	.LVL1004
+	.4byte	0x4517
+	.uleb128 0x24
+	.4byte	.LVL1009
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1011
+	.4byte	0x392c
+	.uleb128 0x24
+	.4byte	.LVL1012
+	.4byte	0x4517
+	.uleb128 0x24
+	.4byte	.LVL1016
+	.4byte	0x455a
+	.uleb128 0x24
+	.4byte	.LVL1018
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1031
+	.4byte	0x392c
+	.uleb128 0x24
+	.4byte	.LVL1032
+	.4byte	0x455a
+	.uleb128 0x24
+	.4byte	.LVL1037
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1039
+	.4byte	0x233b
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x308b
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x15
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x307b
+	.uleb128 0x4f
+	.4byte	.LASF481
+	.byte	0x2
+	.2byte	0x65b
+	.4byte	.LFB220
+	.4byte	.LFE220-.LFB220
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3147
+	.uleb128 0x4d
+	.ascii	"lpa\000"
+	.byte	0x2
+	.2byte	0x65b
+	.4byte	0x317
+	.4byte	.LLST136
+	.uleb128 0x43
+	.4byte	.LASF447
+	.byte	0x2
+	.2byte	0x65b
+	.4byte	0x317
+	.4byte	.LLST137
+	.uleb128 0x44
+	.4byte	.LASF413
+	.byte	0x2
+	.2byte	0x65d
+	.4byte	0x30c
+	.4byte	.LLST138
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x23ec
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7103
+	.uleb128 0x38
+	.4byte	.Ldebug_ranges0+0x128
+	.4byte	0x3134
+	.uleb128 0x3e
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x661
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF393
+	.byte	0x2
+	.2byte	0x662
+	.4byte	0x30c
+	.4byte	.LLST139
+	.uleb128 0x44
+	.4byte	.LASF94
+	.byte	0x2
+	.2byte	0x663
+	.4byte	0x30c
+	.4byte	.LLST140
+	.uleb128 0x24
+	.4byte	.LVL621
+	.4byte	0x4086
+	.uleb128 0x24
+	.4byte	.LVL622
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL623
+	.4byte	0x4203
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL615
+	.4byte	0x455a
+	.uleb128 0x24
+	.4byte	.LVL630
+	.4byte	0x392c
+	.byte	0
+	.uleb128 0x4f
+	.4byte	.LASF482
+	.byte	0x2
+	.2byte	0x647
+	.4byte	.LFB219
+	.4byte	.LFE219-.LFB219
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3198
+	.uleb128 0x56
+	.4byte	.LASF397
+	.byte	0x2
+	.2byte	0x647
+	.4byte	0x12cb
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x43
+	.4byte	.LASF171
+	.byte	0x2
+	.2byte	0x647
+	.4byte	0x30c
+	.4byte	.LLST55
+	.uleb128 0x43
+	.4byte	.LASF173
+	.byte	0x2
+	.2byte	0x647
+	.4byte	0x30c
+	.4byte	.LLST56
+	.uleb128 0x3d
+	.4byte	.LASF377
+	.byte	0x2
+	.2byte	0x649
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF483
+	.byte	0x2
+	.2byte	0x63e
+	.4byte	0x64
+	.4byte	.LFB218
+	.4byte	.LFE218-.LFB218
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x31c5
+	.uleb128 0x24
+	.4byte	.LVL766
+	.4byte	0x31c5
+	.uleb128 0x24
+	.4byte	.LVL767
+	.4byte	0x321e
+	.byte	0
+	.uleb128 0x4f
+	.4byte	.LASF484
+	.byte	0x2
+	.2byte	0x627
+	.4byte	.LFB217
+	.4byte	.LFE217-.LFB217
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x31fa
+	.uleb128 0x3d
+	.4byte	.LASF120
+	.byte	0x2
+	.2byte	0x629
+	.4byte	0x30c
+	.uleb128 0x24
+	.4byte	.LVL764
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL765
+	.4byte	0x17d1
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF485
+	.byte	0x2
+	.2byte	0x617
+	.4byte	0x64
+	.4byte	.LFB216
+	.4byte	.LFE216-.LFB216
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x321e
+	.uleb128 0x24
+	.4byte	.LVL763
+	.4byte	0x321e
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF486
+	.byte	0x2
+	.2byte	0x5b9
+	.4byte	0x64
+	.4byte	.LFB215
+	.4byte	.LFE215-.LFB215
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x332e
+	.uleb128 0x43
+	.4byte	.LASF487
+	.byte	0x2
+	.2byte	0x5b9
+	.4byte	0x332e
+	.4byte	.LLST150
+	.uleb128 0x44
+	.4byte	.LASF488
+	.byte	0x2
+	.2byte	0x5bb
+	.4byte	0x32d
+	.4byte	.LLST151
+	.uleb128 0x3d
+	.4byte	.LASF86
+	.byte	0x2
+	.2byte	0x5bb
+	.4byte	0x32d
+	.uleb128 0x44
+	.4byte	.LASF489
+	.byte	0x2
+	.2byte	0x5bc
+	.4byte	0x32d
+	.4byte	.LLST152
+	.uleb128 0x3d
+	.4byte	.LASF120
+	.byte	0x2
+	.2byte	0x5bd
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF490
+	.byte	0x2
+	.2byte	0x5be
+	.4byte	0x544
+	.4byte	.LLST153
+	.uleb128 0x44
+	.4byte	.LASF99
+	.byte	0x2
+	.2byte	0x5bf
+	.4byte	0x63b
+	.4byte	.LLST154
+	.uleb128 0x44
+	.4byte	.LASF100
+	.byte	0x2
+	.2byte	0x5c0
+	.4byte	0x544
+	.4byte	.LLST155
+	.uleb128 0x44
+	.4byte	.LASF96
+	.byte	0x2
+	.2byte	0x5c1
+	.4byte	0x30c
+	.4byte	.LLST156
+	.uleb128 0x44
+	.4byte	.LASF491
+	.byte	0x2
+	.2byte	0x5c2
+	.4byte	0x30c
+	.4byte	.LLST157
+	.uleb128 0x3d
+	.4byte	.LASF492
+	.byte	0x2
+	.2byte	0x5c3
+	.4byte	0x3334
+	.uleb128 0x24
+	.4byte	.LVL716
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL724
+	.4byte	0x447f
+	.uleb128 0x24
+	.4byte	.LVL734
+	.4byte	0x3dce
+	.uleb128 0x24
+	.4byte	.LVL735
+	.4byte	0x3d76
+	.uleb128 0x24
+	.4byte	.LVL736
+	.4byte	0x3cab
+	.uleb128 0x24
+	.4byte	.LVL737
+	.4byte	0x3cab
+	.uleb128 0x24
+	.4byte	.LVL741
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL750
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL754
+	.4byte	0x1b05
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x592
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x7c3
+	.uleb128 0x4c
+	.4byte	.LASF493
+	.byte	0x2
+	.2byte	0x54f
+	.4byte	0x64
+	.4byte	.LFB214
+	.4byte	.LFE214-.LFB214
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x33e9
+	.uleb128 0x44
+	.4byte	.LASF489
+	.byte	0x2
+	.2byte	0x551
+	.4byte	0x32d
+	.4byte	.LLST286
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x1b00
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7040
+	.uleb128 0x24
+	.4byte	.LVL1561
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL1562
+	.4byte	0x447f
+	.uleb128 0x24
+	.4byte	.LVL1564
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1565
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1567
+	.4byte	0x177a
+	.uleb128 0x24
+	.4byte	.LVL1568
+	.4byte	0x177a
+	.uleb128 0x24
+	.4byte	.LVL1569
+	.4byte	0x177a
+	.uleb128 0x24
+	.4byte	.LVL1571
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1572
+	.4byte	0x2c52
+	.uleb128 0x24
+	.4byte	.LVL1573
+	.4byte	0x2c52
+	.uleb128 0x24
+	.4byte	.LVL1574
+	.4byte	0x2c52
+	.uleb128 0x24
+	.4byte	.LVL1575
+	.4byte	0x2c52
+	.uleb128 0x24
+	.4byte	.LVL1577
+	.4byte	0x1b05
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF494
+	.byte	0x2
+	.2byte	0x54a
+	.4byte	0x64
+	.4byte	.LFB213
+	.4byte	.LFE213-.LFB213
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3414
+	.uleb128 0x43
+	.4byte	.LASF495
+	.byte	0x2
+	.2byte	0x54a
+	.4byte	0x30c
+	.4byte	.LLST54
+	.byte	0
+	.uleb128 0x55
+	.4byte	.LASF497
+	.byte	0x2
+	.2byte	0x542
+	.byte	0x1
+	.4byte	0x343a
+	.uleb128 0x3c
+	.4byte	.LASF495
+	.byte	0x2
+	.2byte	0x542
+	.4byte	0x30c
+	.uleb128 0x3c
+	.4byte	.LASF373
+	.byte	0x2
+	.2byte	0x542
+	.4byte	0x64
+	.byte	0
+	.uleb128 0x42
+	.4byte	.LASF499
+	.byte	0x2
+	.2byte	0x535
+	.4byte	0x64
+	.byte	0x1
+	.uleb128 0x3a
+	.4byte	.LASF500
+	.byte	0x2
+	.2byte	0x446
+	.4byte	0x64
+	.4byte	.LFB210
+	.4byte	.LFE210-.LFB210
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3593
+	.uleb128 0x3d
+	.4byte	.LASF377
+	.byte	0x2
+	.2byte	0x448
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF501
+	.byte	0x2
+	.2byte	0x448
+	.4byte	0x30c
+	.4byte	.LLST147
+	.uleb128 0x3d
+	.4byte	.LASF179
+	.byte	0x2
+	.2byte	0x449
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF358
+	.byte	0x2
+	.2byte	0x449
+	.4byte	0x30c
+	.4byte	.LLST148
+	.uleb128 0x3e
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x44a
+	.4byte	0x32d
+	.uleb128 0x3e
+	.ascii	"j\000"
+	.byte	0x2
+	.2byte	0x44a
+	.4byte	0x32d
+	.uleb128 0x44
+	.4byte	.LASF502
+	.byte	0x2
+	.2byte	0x44b
+	.4byte	0x3334
+	.4byte	.LLST149
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x29d0
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6983
+	.uleb128 0x53
+	.4byte	0x17d1
+	.4byte	.LBB396
+	.4byte	.LBE396-.LBB396
+	.byte	0x2
+	.2byte	0x453
+	.4byte	0x351d
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB397
+	.4byte	.LBE397-.LBB397
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB398
+	.4byte	.LBE398-.LBB398
+	.uleb128 0x30
+	.4byte	0x6134
+	.uleb128 0x30
+	.4byte	0x6139
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL668
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL669
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL670
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL671
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL678
+	.4byte	0x45c2
+	.uleb128 0x24
+	.4byte	.LVL679
+	.4byte	0x4af7
+	.uleb128 0x24
+	.4byte	.LVL694
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL698
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL699
+	.4byte	0x4367
+	.uleb128 0x24
+	.4byte	.LVL700
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL701
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL702
+	.4byte	0x4367
+	.uleb128 0x24
+	.4byte	.LVL705
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF503
+	.byte	0x2
+	.2byte	0x3eb
+	.4byte	0x64
+	.4byte	.LFB209
+	.4byte	.LFE209-.LFB209
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3652
+	.uleb128 0x1f
+	.4byte	.LASF87
+	.byte	0x2
+	.2byte	0x3ed
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x58
+	.uleb128 0x3d
+	.4byte	.LASF504
+	.byte	0x2
+	.2byte	0x3ee
+	.4byte	0x3652
+	.uleb128 0x44
+	.4byte	.LASF505
+	.byte	0x2
+	.2byte	0x3ef
+	.4byte	0x30c
+	.4byte	.LLST223
+	.uleb128 0x3f
+	.4byte	.LASF506
+	.byte	0x2
+	.2byte	0x41c
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x1b00
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6961
+	.uleb128 0x24
+	.4byte	.LVL1154
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL1156
+	.4byte	0x177a
+	.uleb128 0x24
+	.4byte	.LVL1157
+	.4byte	0x177a
+	.uleb128 0x24
+	.4byte	.LVL1158
+	.4byte	0x177a
+	.uleb128 0x24
+	.4byte	.LVL1159
+	.4byte	0x3710
+	.uleb128 0x24
+	.4byte	.LVL1160
+	.4byte	0x19f5
+	.uleb128 0x24
+	.4byte	.LVL1161
+	.4byte	0x424d
+	.uleb128 0x24
+	.4byte	.LVL1162
+	.4byte	0x19f5
+	.uleb128 0x24
+	.4byte	.LVL1163
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1166
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1167
+	.4byte	0x4367
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x81b
+	.uleb128 0x55
+	.4byte	.LASF507
+	.byte	0x2
+	.2byte	0x3b2
+	.byte	0x1
+	.4byte	0x36a4
+	.uleb128 0x28
+	.uleb128 0x3e
+	.ascii	"lpa\000"
+	.byte	0x2
+	.2byte	0x3b7
+	.4byte	0x317
+	.uleb128 0x3e
+	.ascii	"ppa\000"
+	.byte	0x2
+	.2byte	0x3b8
+	.4byte	0x317
+	.uleb128 0x3d
+	.4byte	.LASF508
+	.byte	0x2
+	.2byte	0x3b9
+	.4byte	0x317
+	.uleb128 0x3d
+	.4byte	.LASF451
+	.byte	0x2
+	.2byte	0x3ba
+	.4byte	0x338
+	.uleb128 0x3d
+	.4byte	.LASF381
+	.byte	0x2
+	.2byte	0x3bb
+	.4byte	0x1d4c
+	.byte	0
+	.byte	0
+	.uleb128 0x4f
+	.4byte	.LASF509
+	.byte	0x2
+	.2byte	0x380
+	.4byte	.LFB207
+	.4byte	.LFE207-.LFB207
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3710
+	.uleb128 0x56
+	.4byte	.LASF487
+	.byte	0x2
+	.2byte	0x380
+	.4byte	0x332e
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x51
+	.ascii	"ppa\000"
+	.byte	0x2
+	.2byte	0x382
+	.4byte	0x317
+	.4byte	.LLST145
+	.uleb128 0x3d
+	.4byte	.LASF106
+	.byte	0x2
+	.2byte	0x383
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF490
+	.byte	0x2
+	.2byte	0x384
+	.4byte	0x544
+	.4byte	.LLST146
+	.uleb128 0x24
+	.4byte	.LVL663
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL664
+	.4byte	0x3ac7
+	.uleb128 0x24
+	.4byte	.LVL667
+	.4byte	0x17d1
+	.byte	0
+	.uleb128 0x55
+	.4byte	.LASF510
+	.byte	0x2
+	.2byte	0x371
+	.byte	0x1
+	.4byte	0x3734
+	.uleb128 0x3c
+	.4byte	.LASF184
+	.byte	0x2
+	.2byte	0x371
+	.4byte	0x317
+	.uleb128 0x3e
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x373
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF511
+	.byte	0x2
+	.2byte	0x35c
+	.4byte	0x64
+	.4byte	.LFB205
+	.4byte	.LFE205-.LFB205
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3781
+	.uleb128 0x43
+	.4byte	.LASF512
+	.byte	0x2
+	.2byte	0x35c
+	.4byte	0x317
+	.4byte	.LLST216
+	.uleb128 0x44
+	.4byte	.LASF513
+	.byte	0x2
+	.2byte	0x35e
+	.4byte	0x317
+	.4byte	.LLST217
+	.uleb128 0x24
+	.4byte	.LVL1134
+	.4byte	0x3855
+	.uleb128 0x24
+	.4byte	.LVL1135
+	.4byte	0x2b80
+	.byte	0
+	.uleb128 0x4c
+	.4byte	.LASF514
+	.byte	0x2
+	.2byte	0x336
+	.4byte	0x317
+	.4byte	.LFB204
+	.4byte	.LFE204-.LFB204
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x384f
+	.uleb128 0x43
+	.4byte	.LASF515
+	.byte	0x2
+	.2byte	0x336
+	.4byte	0x317
+	.4byte	.LLST218
+	.uleb128 0x43
+	.4byte	.LASF516
+	.byte	0x2
+	.2byte	0x336
+	.4byte	0x317
+	.4byte	.LLST219
+	.uleb128 0x43
+	.4byte	.LASF517
+	.byte	0x2
+	.2byte	0x336
+	.4byte	0x384f
+	.4byte	.LLST220
+	.uleb128 0x51
+	.ascii	"len\000"
+	.byte	0x2
+	.2byte	0x338
+	.4byte	0x30c
+	.4byte	.LLST221
+	.uleb128 0x3d
+	.4byte	.LASF518
+	.byte	0x2
+	.2byte	0x338
+	.4byte	0x30c
+	.uleb128 0x50
+	.ascii	"ppn\000"
+	.byte	0x2
+	.2byte	0x339
+	.4byte	0x317
+	.uleb128 0x1
+	.byte	0x5a
+	.uleb128 0x1f
+	.4byte	.LASF519
+	.byte	0x2
+	.2byte	0x33a
+	.4byte	0x317
+	.uleb128 0x1
+	.byte	0x58
+	.uleb128 0x50
+	.ascii	"req\000"
+	.byte	0x2
+	.2byte	0x33b
+	.4byte	0x338
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -132
+	.uleb128 0x44
+	.4byte	.LASF520
+	.byte	0x2
+	.2byte	0x33c
+	.4byte	0x317
+	.4byte	.LLST222
+	.uleb128 0x1f
+	.4byte	.LASF354
+	.byte	0x2
+	.2byte	0x33d
+	.4byte	0x194f
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -112
+	.uleb128 0x24
+	.4byte	.LVL1145
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL1146
+	.4byte	0x177a
+	.uleb128 0x24
+	.4byte	.LVL1147
+	.4byte	0x17d1
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x301
+	.uleb128 0x4c
+	.4byte	.LASF521
+	.byte	0x2
+	.2byte	0x311
+	.4byte	0x317
+	.4byte	.LFB203
+	.4byte	.LFE203-.LFB203
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x392c
+	.uleb128 0x43
+	.4byte	.LASF515
+	.byte	0x2
+	.2byte	0x311
+	.4byte	0x317
+	.4byte	.LLST211
+	.uleb128 0x43
+	.4byte	.LASF516
+	.byte	0x2
+	.2byte	0x311
+	.4byte	0x317
+	.4byte	.LLST212
+	.uleb128 0x43
+	.4byte	.LASF517
+	.byte	0x2
+	.2byte	0x311
+	.4byte	0x384f
+	.4byte	.LLST213
+	.uleb128 0x51
+	.ascii	"len\000"
+	.byte	0x2
+	.2byte	0x313
+	.4byte	0x30c
+	.4byte	.LLST214
+	.uleb128 0x3d
+	.4byte	.LASF518
+	.byte	0x2
+	.2byte	0x313
+	.4byte	0x30c
+	.uleb128 0x51
+	.ascii	"ppn\000"
+	.byte	0x2
+	.2byte	0x314
+	.4byte	0x317
+	.4byte	.LLST215
+	.uleb128 0x1f
+	.4byte	.LASF519
+	.byte	0x2
+	.2byte	0x315
+	.4byte	0x317
+	.uleb128 0x1
+	.byte	0x59
+	.uleb128 0x50
+	.ascii	"req\000"
+	.byte	0x2
+	.2byte	0x316
+	.4byte	0x338
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -132
+	.uleb128 0x1f
+	.4byte	.LASF520
+	.byte	0x2
+	.2byte	0x317
+	.4byte	0x317
+	.uleb128 0x1
+	.byte	0x57
+	.uleb128 0x1f
+	.4byte	.LASF354
+	.byte	0x2
+	.2byte	0x318
+	.4byte	0x194f
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -112
+	.uleb128 0x24
+	.4byte	.LVL1116
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL1117
+	.4byte	0x177a
+	.uleb128 0x24
+	.4byte	.LVL1118
+	.4byte	0x3ac7
+	.uleb128 0x24
+	.4byte	.LVL1123
+	.4byte	0x17d1
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF522
+	.byte	0x2
+	.2byte	0x2f0
+	.4byte	0x64
+	.4byte	.LFB202
+	.4byte	.LFE202-.LFB202
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x39e2
+	.uleb128 0x4d
+	.ascii	"lpn\000"
+	.byte	0x2
+	.2byte	0x2f0
+	.4byte	0x317
+	.4byte	.LLST132
+	.uleb128 0x4d
+	.ascii	"ppn\000"
+	.byte	0x2
+	.2byte	0x2f0
+	.4byte	0x544
+	.4byte	.LLST133
+	.uleb128 0x43
+	.4byte	.LASF523
+	.byte	0x2
+	.2byte	0x2f0
+	.4byte	0x64
+	.4byte	.LLST134
+	.uleb128 0x44
+	.4byte	.LASF524
+	.byte	0x2
+	.2byte	0x2f2
+	.4byte	0x30c
+	.4byte	.LLST135
+	.uleb128 0x1f
+	.4byte	.LASF525
+	.byte	0x2
+	.2byte	0x2f2
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x58
+	.uleb128 0x1f
+	.4byte	.LASF526
+	.byte	0x2
+	.2byte	0x2f2
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x56
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x39f2
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6888
+	.uleb128 0x47
+	.4byte	.LASF527
+	.byte	0x2
+	.2byte	0x2fb
+	.4byte	.L728
+	.uleb128 0x24
+	.4byte	.LVL604
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL606
+	.4byte	0x3a32
+	.uleb128 0x24
+	.4byte	.LVL607
+	.4byte	0x3a87
+	.uleb128 0x24
+	.4byte	.LVL608
+	.4byte	0x3e7f
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x39f2
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x8
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x39e2
+	.uleb128 0x3a
+	.4byte	.LASF528
+	.byte	0x2
+	.2byte	0x2e3
+	.4byte	0x64
+	.4byte	.LFB201
+	.4byte	.LFE201-.LFB201
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3a32
+	.uleb128 0x51
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x2e5
+	.4byte	0x30c
+	.4byte	.LLST189
+	.uleb128 0x24
+	.4byte	.LVL926
+	.4byte	0x3658
+	.uleb128 0x24
+	.4byte	.LVL929
+	.4byte	0x3a87
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF529
+	.byte	0x2
+	.2byte	0x2bb
+	.4byte	0x30c
+	.4byte	.LFB200
+	.4byte	.LFE200-.LFB200
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3a87
+	.uleb128 0x3e
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x2bd
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF530
+	.byte	0x2
+	.2byte	0x2be
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF531
+	.byte	0x2
+	.2byte	0x2bf
+	.4byte	0x317
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x308b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6871
+	.uleb128 0x24
+	.4byte	.LVL169
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF532
+	.byte	0x2
+	.2byte	0x2b1
+	.4byte	0x64
+	.4byte	.LFB199
+	.4byte	.LFE199-.LFB199
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3ac7
+	.uleb128 0x43
+	.4byte	.LASF524
+	.byte	0x2
+	.2byte	0x2b1
+	.4byte	0x30c
+	.4byte	.LLST131
+	.uleb128 0x3d
+	.4byte	.LASF106
+	.byte	0x2
+	.2byte	0x2b3
+	.4byte	0x317
+	.uleb128 0x24
+	.4byte	.LVL599
+	.4byte	0x3ac7
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF533
+	.byte	0x2
+	.2byte	0x276
+	.4byte	0x64
+	.4byte	.LFB198
+	.4byte	.LFE198-.LFB198
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3bdb
+	.uleb128 0x43
+	.4byte	.LASF487
+	.byte	0x2
+	.2byte	0x276
+	.4byte	0x332e
+	.4byte	.LLST125
+	.uleb128 0x43
+	.4byte	.LASF106
+	.byte	0x2
+	.2byte	0x276
+	.4byte	0x317
+	.4byte	.LLST126
+	.uleb128 0x56
+	.4byte	.LASF517
+	.byte	0x2
+	.2byte	0x276
+	.4byte	0x544
+	.uleb128 0x1
+	.byte	0x52
+	.uleb128 0x3d
+	.4byte	.LASF179
+	.byte	0x2
+	.2byte	0x278
+	.4byte	0x317
+	.uleb128 0x44
+	.4byte	.LASF492
+	.byte	0x2
+	.2byte	0x279
+	.4byte	0x3334
+	.4byte	.LLST127
+	.uleb128 0x44
+	.4byte	.LASF505
+	.byte	0x2
+	.2byte	0x27a
+	.4byte	0x30c
+	.4byte	.LLST128
+	.uleb128 0x3f
+	.4byte	.LASF534
+	.byte	0x2
+	.2byte	0x27c
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x23ec
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6846
+	.uleb128 0x4e
+	.4byte	0x17d1
+	.4byte	.LBB362
+	.4byte	.Ldebug_ranges0+0x110
+	.byte	0x2
+	.2byte	0x292
+	.4byte	0x3ba4
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x110
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x110
+	.uleb128 0x30
+	.4byte	0x6134
+	.uleb128 0x30
+	.4byte	0x6139
+	.uleb128 0x24
+	.4byte	.LVL575
+	.4byte	0x6732
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL572
+	.4byte	0x3bdb
+	.uleb128 0x24
+	.4byte	.LVL573
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL574
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL578
+	.4byte	0x19f5
+	.uleb128 0x24
+	.4byte	.LVL581
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL582
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF535
+	.byte	0x2
+	.2byte	0x246
+	.4byte	0x64
+	.4byte	.LFB197
+	.4byte	.LFE197-.LFB197
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3c96
+	.uleb128 0x43
+	.4byte	.LASF487
+	.byte	0x2
+	.2byte	0x246
+	.4byte	0x332e
+	.4byte	.LLST121
+	.uleb128 0x3d
+	.4byte	.LASF179
+	.byte	0x2
+	.2byte	0x248
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF120
+	.byte	0x2
+	.2byte	0x248
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF536
+	.byte	0x2
+	.2byte	0x249
+	.4byte	0x30c
+	.4byte	.LLST122
+	.uleb128 0x44
+	.4byte	.LASF537
+	.byte	0x2
+	.2byte	0x24a
+	.4byte	0x63b
+	.4byte	.LLST123
+	.uleb128 0x44
+	.4byte	.LASF490
+	.byte	0x2
+	.2byte	0x24b
+	.4byte	0x544
+	.4byte	.LLST124
+	.uleb128 0x3d
+	.4byte	.LASF492
+	.byte	0x2
+	.2byte	0x24c
+	.4byte	0x3334
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x3ca6
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6832
+	.uleb128 0x24
+	.4byte	.LVL555
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL556
+	.4byte	0x424d
+	.uleb128 0x24
+	.4byte	.LVL562
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL565
+	.4byte	0x19f5
+	.uleb128 0x24
+	.4byte	.LVL566
+	.4byte	0x3cab
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x3ca6
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x1e
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x3c96
+	.uleb128 0x3a
+	.4byte	.LASF538
+	.byte	0x2
+	.2byte	0x218
+	.4byte	0x64
+	.4byte	.LFB196
+	.4byte	.LFE196-.LFB196
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3d76
+	.uleb128 0x43
+	.4byte	.LASF487
+	.byte	0x2
+	.2byte	0x218
+	.4byte	0x332e
+	.4byte	.LLST129
+	.uleb128 0x1f
+	.4byte	.LASF539
+	.byte	0x2
+	.2byte	0x21a
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x58
+	.uleb128 0x3d
+	.4byte	.LASF540
+	.byte	0x2
+	.2byte	0x21b
+	.4byte	0x30c
+	.uleb128 0x1f
+	.4byte	.LASF120
+	.byte	0x2
+	.2byte	0x21c
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x5a
+	.uleb128 0x44
+	.4byte	.LASF537
+	.byte	0x2
+	.2byte	0x21d
+	.4byte	0x63b
+	.4byte	.LLST130
+	.uleb128 0x1f
+	.4byte	.LASF490
+	.byte	0x2
+	.2byte	0x21e
+	.4byte	0x544
+	.uleb128 0x1
+	.byte	0x59
+	.uleb128 0x3d
+	.4byte	.LASF492
+	.byte	0x2
+	.2byte	0x21f
+	.4byte	0x3334
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x1b00
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6818
+	.uleb128 0x24
+	.4byte	.LVL586
+	.4byte	0x3dce
+	.uleb128 0x24
+	.4byte	.LVL588
+	.4byte	0x3d76
+	.uleb128 0x24
+	.4byte	.LVL590
+	.4byte	0x4367
+	.uleb128 0x24
+	.4byte	.LVL592
+	.4byte	0x3d76
+	.uleb128 0x24
+	.4byte	.LVL594
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL595
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL596
+	.4byte	0x3ac7
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF541
+	.byte	0x2
+	.2byte	0x203
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x3db9
+	.uleb128 0x3c
+	.4byte	.LASF487
+	.byte	0x2
+	.2byte	0x203
+	.4byte	0x332e
+	.uleb128 0x3d
+	.4byte	.LASF542
+	.byte	0x2
+	.2byte	0x205
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF537
+	.byte	0x2
+	.2byte	0x206
+	.4byte	0x63b
+	.uleb128 0x40
+	.4byte	.LASF363
+	.4byte	0x3dc9
+	.4byte	.LASF541
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x3dc9
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x19
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x3db9
+	.uleb128 0x3a
+	.4byte	.LASF543
+	.byte	0x2
+	.2byte	0x1db
+	.4byte	0x64
+	.4byte	.LFB194
+	.4byte	.LFE194-.LFB194
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3e7f
+	.uleb128 0x43
+	.4byte	.LASF487
+	.byte	0x2
+	.2byte	0x1db
+	.4byte	0x332e
+	.4byte	.LLST116
+	.uleb128 0x1f
+	.4byte	.LASF537
+	.byte	0x2
+	.2byte	0x1dd
+	.4byte	0x63b
+	.uleb128 0x1
+	.byte	0x59
+	.uleb128 0x44
+	.4byte	.LASF490
+	.byte	0x2
+	.2byte	0x1de
+	.4byte	0x544
+	.4byte	.LLST117
+	.uleb128 0x1f
+	.4byte	.LASF544
+	.byte	0x2
+	.2byte	0x1df
+	.4byte	0x63b
+	.uleb128 0x1
+	.byte	0x55
+	.uleb128 0x44
+	.4byte	.LASF179
+	.byte	0x2
+	.2byte	0x1e0
+	.4byte	0x30c
+	.4byte	.LLST118
+	.uleb128 0x3d
+	.4byte	.LASF120
+	.byte	0x2
+	.2byte	0x1e0
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF542
+	.byte	0x2
+	.2byte	0x1e1
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF545
+	.byte	0x2
+	.2byte	0x1e2
+	.4byte	0x30c
+	.4byte	.LLST119
+	.uleb128 0x44
+	.4byte	.LASF540
+	.byte	0x2
+	.2byte	0x1e3
+	.4byte	0x30c
+	.4byte	.LLST120
+	.uleb128 0x24
+	.4byte	.LVL541
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL551
+	.4byte	0x4367
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF546
+	.byte	0x2
+	.2byte	0x1b9
+	.4byte	0x64
+	.4byte	.LFB193
+	.4byte	.LFE193-.LFB193
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3f26
+	.uleb128 0x43
+	.4byte	.LASF106
+	.byte	0x2
+	.2byte	0x1b9
+	.4byte	0x30c
+	.4byte	.LLST113
+	.uleb128 0x43
+	.4byte	.LASF524
+	.byte	0x2
+	.2byte	0x1b9
+	.4byte	0x30c
+	.4byte	.LLST114
+	.uleb128 0x44
+	.4byte	.LASF492
+	.byte	0x2
+	.2byte	0x1bb
+	.4byte	0x3334
+	.4byte	.LLST115
+	.uleb128 0x1f
+	.4byte	.LASF547
+	.byte	0x2
+	.2byte	0x1bc
+	.4byte	0x317
+	.uleb128 0x1
+	.byte	0x57
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x23ec
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6775
+	.uleb128 0x24
+	.4byte	.LVL525
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL527
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL530
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL532
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL533
+	.4byte	0x673d
+	.uleb128 0x24
+	.4byte	.LVL534
+	.4byte	0x673d
+	.uleb128 0x24
+	.4byte	.LVL535
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF548
+	.byte	0x2
+	.2byte	0x193
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x3fa5
+	.uleb128 0x3c
+	.4byte	.LASF433
+	.byte	0x2
+	.2byte	0x193
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF549
+	.byte	0x2
+	.2byte	0x195
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF550
+	.byte	0x2
+	.2byte	0x196
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF551
+	.byte	0x2
+	.2byte	0x197
+	.4byte	0x317
+	.uleb128 0x3d
+	.4byte	.LASF552
+	.byte	0x2
+	.2byte	0x199
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF553
+	.byte	0x2
+	.2byte	0x19a
+	.4byte	0x317
+	.uleb128 0x3d
+	.4byte	.LASF436
+	.byte	0x2
+	.2byte	0x19b
+	.4byte	0x121b
+	.uleb128 0x3d
+	.4byte	.LASF554
+	.byte	0x2
+	.2byte	0x19b
+	.4byte	0x121b
+	.uleb128 0x40
+	.4byte	.LASF363
+	.4byte	0x308b
+	.4byte	.LASF548
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF555
+	.byte	0x2
+	.2byte	0x17f
+	.4byte	0x64
+	.4byte	.LFB191
+	.4byte	.LFE191-.LFB191
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3fec
+	.uleb128 0x43
+	.4byte	.LASF94
+	.byte	0x2
+	.2byte	0x17f
+	.4byte	0x30c
+	.4byte	.LLST46
+	.uleb128 0x3d
+	.4byte	.LASF433
+	.byte	0x2
+	.2byte	0x181
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF436
+	.byte	0x2
+	.2byte	0x182
+	.4byte	0x121b
+	.4byte	.LLST47
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF556
+	.byte	0x2
+	.2byte	0x17a
+	.4byte	0x64
+	.4byte	.LFB190
+	.4byte	.LFE190-.LFB190
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4020
+	.uleb128 0x43
+	.4byte	.LASF557
+	.byte	0x2
+	.2byte	0x17a
+	.4byte	0x4020
+	.4byte	.LLST45
+	.uleb128 0x24
+	.4byte	.LVL145
+	.4byte	0x4026
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x121b
+	.uleb128 0x3a
+	.4byte	.LASF558
+	.byte	0x2
+	.2byte	0x167
+	.4byte	0x64
+	.4byte	.LFB189
+	.4byte	.LFE189-.LFB189
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4086
+	.uleb128 0x43
+	.4byte	.LASF557
+	.byte	0x2
+	.2byte	0x167
+	.4byte	0x4020
+	.4byte	.LLST42
+	.uleb128 0x43
+	.4byte	.LASF94
+	.byte	0x2
+	.2byte	0x167
+	.4byte	0x30c
+	.4byte	.LLST43
+	.uleb128 0x3d
+	.4byte	.LASF433
+	.byte	0x2
+	.2byte	0x169
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF436
+	.byte	0x2
+	.2byte	0x16a
+	.4byte	0x121b
+	.4byte	.LLST44
+	.uleb128 0x24
+	.4byte	.LVL139
+	.4byte	0x4086
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF559
+	.byte	0x2
+	.2byte	0x14c
+	.4byte	0x64
+	.4byte	.LFB188
+	.4byte	.LFE188-.LFB188
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x40f3
+	.uleb128 0x43
+	.4byte	.LASF557
+	.byte	0x2
+	.2byte	0x14c
+	.4byte	0x4020
+	.4byte	.LLST40
+	.uleb128 0x43
+	.4byte	.LASF433
+	.byte	0x2
+	.2byte	0x14c
+	.4byte	0x30c
+	.4byte	.LLST41
+	.uleb128 0x1f
+	.4byte	.LASF436
+	.byte	0x2
+	.2byte	0x14e
+	.4byte	0x121b
+	.uleb128 0x1
+	.byte	0x54
+	.uleb128 0x3d
+	.4byte	.LASF560
+	.byte	0x2
+	.2byte	0x14e
+	.4byte	0x121b
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x4103
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6734
+	.uleb128 0x24
+	.4byte	.LVL131
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x4103
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x10
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x40f3
+	.uleb128 0x3a
+	.4byte	.LASF561
+	.byte	0x2
+	.2byte	0x11b
+	.4byte	0x64
+	.4byte	.LFB187
+	.4byte	.LFE187-.LFB187
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4177
+	.uleb128 0x43
+	.4byte	.LASF433
+	.byte	0x2
+	.2byte	0x11b
+	.4byte	0x30c
+	.4byte	.LLST37
+	.uleb128 0x44
+	.4byte	.LASF436
+	.byte	0x2
+	.2byte	0x11d
+	.4byte	0x121b
+	.4byte	.LLST38
+	.uleb128 0x1f
+	.4byte	.LASF560
+	.byte	0x2
+	.2byte	0x11d
+	.4byte	0x121b
+	.uleb128 0x1
+	.byte	0x53
+	.uleb128 0x1f
+	.4byte	.LASF562
+	.byte	0x2
+	.2byte	0x11e
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x5a
+	.uleb128 0x3d
+	.4byte	.LASF563
+	.byte	0x2
+	.2byte	0x11f
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF564
+	.byte	0x2
+	.2byte	0x120
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF565
+	.byte	0x2
+	.byte	0xd8
+	.4byte	0x64
+	.4byte	.LFB186
+	.4byte	.LFE186-.LFB186
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4203
+	.uleb128 0x23
+	.4byte	.LASF433
+	.byte	0x2
+	.byte	0xd8
+	.4byte	0x30c
+	.4byte	.LLST30
+	.uleb128 0x2c
+	.4byte	.LASF436
+	.byte	0x2
+	.byte	0xda
+	.4byte	0x121b
+	.4byte	.LLST31
+	.uleb128 0x2c
+	.4byte	.LASF560
+	.byte	0x2
+	.byte	0xda
+	.4byte	0x121b
+	.4byte	.LLST32
+	.uleb128 0x2c
+	.4byte	.LASF566
+	.byte	0x2
+	.byte	0xdb
+	.4byte	0x30c
+	.4byte	.LLST33
+	.uleb128 0x20
+	.4byte	.LASF567
+	.byte	0x2
+	.byte	0xdc
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x5a
+	.uleb128 0x2c
+	.4byte	.LASF551
+	.byte	0x2
+	.byte	0xdd
+	.4byte	0x317
+	.4byte	.LLST34
+	.uleb128 0x2c
+	.4byte	.LASF568
+	.byte	0x2
+	.byte	0xde
+	.4byte	0x317
+	.4byte	.LLST35
+	.uleb128 0x34
+	.4byte	.LASF564
+	.byte	0x2
+	.byte	0xdf
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x57
+	.4byte	.LASF569
+	.byte	0x2
+	.byte	0xb9
+	.byte	0x1
+	.4byte	0x4228
+	.uleb128 0x33
+	.4byte	.LASF433
+	.byte	0x2
+	.byte	0xb9
+	.4byte	0x30c
+	.uleb128 0x40
+	.4byte	.LASF363
+	.4byte	0x4103
+	.4byte	.LASF569
+	.byte	0
+	.uleb128 0x57
+	.4byte	.LASF570
+	.byte	0x2
+	.byte	0xb2
+	.byte	0x1
+	.4byte	0x424d
+	.uleb128 0x33
+	.4byte	.LASF433
+	.byte	0x2
+	.byte	0xb2
+	.4byte	0x30c
+	.uleb128 0x40
+	.4byte	.LASF363
+	.4byte	0x4103
+	.4byte	.LASF570
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF571
+	.byte	0x2
+	.byte	0xa4
+	.4byte	0x30c
+	.4byte	.LFB183
+	.4byte	.LFE183-.LFB183
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4296
+	.uleb128 0x36
+	.ascii	"tmp\000"
+	.byte	0x2
+	.byte	0xa6
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x38
+	.4byte	.Ldebug_ranges0+0x58
+	.4byte	0x4286
+	.uleb128 0x29
+	.ascii	"Q\000"
+	.byte	0x2
+	.byte	0xa9
+	.4byte	0x4296
+	.byte	0
+	.uleb128 0x58
+	.4byte	0x43f4
+	.4byte	.LBB252
+	.4byte	.LBE252-.LBB252
+	.byte	0x2
+	.byte	0xa8
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0xae7
+	.uleb128 0x22
+	.4byte	.LASF572
+	.byte	0x2
+	.byte	0x92
+	.4byte	0x64
+	.4byte	.LFB182
+	.4byte	.LFE182-.LFB182
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x42f5
+	.uleb128 0x2b
+	.ascii	"blk\000"
+	.byte	0x2
+	.byte	0x92
+	.4byte	0x30c
+	.4byte	.LLST29
+	.uleb128 0x36
+	.ascii	"ret\000"
+	.byte	0x2
+	.byte	0x94
+	.4byte	0x64
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x36
+	.ascii	"i\000"
+	.byte	0x2
+	.byte	0x95
+	.4byte	0x317
+	.uleb128 0x1
+	.byte	0x51
+	.uleb128 0x29
+	.ascii	"Q\000"
+	.byte	0x2
+	.byte	0x96
+	.4byte	0x4296
+	.uleb128 0x58
+	.4byte	0x43e8
+	.4byte	.LBB250
+	.4byte	.LBE250-.LBB250
+	.byte	0x2
+	.byte	0x98
+	.byte	0
+	.uleb128 0x48
+	.4byte	.LASF573
+	.byte	0x2
+	.byte	0x73
+	.4byte	.LFB181
+	.4byte	.LFE181-.LFB181
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4367
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x2
+	.byte	0x75
+	.4byte	0x30c
+	.uleb128 0x49
+	.ascii	"tmp\000"
+	.byte	0x2
+	.byte	0x75
+	.4byte	0x30c
+	.4byte	.LLST26
+	.uleb128 0x29
+	.ascii	"j\000"
+	.byte	0x2
+	.byte	0x75
+	.4byte	0x30c
+	.uleb128 0x2c
+	.4byte	.LASF384
+	.byte	0x2
+	.byte	0x76
+	.4byte	0x30c
+	.4byte	.LLST27
+	.uleb128 0x34
+	.4byte	.LASF574
+	.byte	0x2
+	.byte	0x77
+	.4byte	0x30c
+	.uleb128 0x2c
+	.4byte	.LASF575
+	.byte	0x2
+	.byte	0x78
+	.4byte	0x317
+	.4byte	.LLST28
+	.uleb128 0x29
+	.ascii	"Q\000"
+	.byte	0x2
+	.byte	0x79
+	.4byte	0x4296
+	.uleb128 0x24
+	.4byte	.LVL76
+	.4byte	0x455a
+	.byte	0
+	.uleb128 0x48
+	.4byte	.LASF576
+	.byte	0x2
+	.byte	0x61
+	.4byte	.LFB180
+	.4byte	.LFE180-.LFB180
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x43e8
+	.uleb128 0x2b
+	.ascii	"blk\000"
+	.byte	0x2
+	.byte	0x61
+	.4byte	0x30c
+	.4byte	.LLST94
+	.uleb128 0x23
+	.4byte	.LASF577
+	.byte	0x2
+	.byte	0x61
+	.4byte	0x30c
+	.4byte	.LLST95
+	.uleb128 0x52
+	.4byte	.LBB299
+	.4byte	.LBE299-.LBB299
+	.4byte	0x43d8
+	.uleb128 0x29
+	.ascii	"Q\000"
+	.byte	0x2
+	.byte	0x64
+	.4byte	0x4296
+	.uleb128 0x32
+	.4byte	.LBB300
+	.4byte	.LBE300-.LBB300
+	.uleb128 0x34
+	.4byte	.LASF578
+	.byte	0x2
+	.byte	0x66
+	.4byte	0x30c
+	.uleb128 0x24
+	.4byte	.LVL407
+	.4byte	0x455a
+	.uleb128 0x24
+	.4byte	.LVL408
+	.4byte	0x195f
+	.byte	0
+	.byte	0
+	.uleb128 0x58
+	.4byte	0x43e8
+	.4byte	.LBB297
+	.4byte	.LBE297-.LBB297
+	.byte	0x2
+	.byte	0x63
+	.byte	0
+	.uleb128 0x59
+	.4byte	.LASF579
+	.byte	0x2
+	.byte	0x5c
+	.4byte	0x30c
+	.byte	0x1
+	.uleb128 0x59
+	.4byte	.LASF580
+	.byte	0x2
+	.byte	0x57
+	.4byte	0x30c
+	.byte	0x1
+	.uleb128 0x22
+	.4byte	.LASF581
+	.byte	0x2
+	.byte	0x4b
+	.4byte	0x30c
+	.4byte	.LFB177
+	.4byte	.LFE177-.LFB177
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x447f
+	.uleb128 0x2b
+	.ascii	"max\000"
+	.byte	0x2
+	.byte	0x4b
+	.4byte	0x30c
+	.4byte	.LLST25
+	.uleb128 0x29
+	.ascii	"Q\000"
+	.byte	0x2
+	.byte	0x4d
+	.4byte	0x4296
+	.uleb128 0x5a
+	.4byte	0x17d1
+	.4byte	.LBB241
+	.4byte	.Ldebug_ranges0+0x38
+	.byte	0x2
+	.byte	0x53
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x38
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x38
+	.uleb128 0x30
+	.4byte	0x17fd
+	.uleb128 0x30
+	.4byte	0x1808
+	.uleb128 0x24
+	.4byte	.LVL71
+	.4byte	0x6732
+	.byte	0
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF582
+	.byte	0x2
+	.byte	0x2e
+	.4byte	0x64
+	.4byte	.LFB176
+	.4byte	.LFE176-.LFB176
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4517
+	.uleb128 0x23
+	.4byte	.LASF179
+	.byte	0x2
+	.byte	0x2e
+	.4byte	0x317
+	.4byte	.LLST84
+	.uleb128 0x23
+	.4byte	.LASF357
+	.byte	0x2
+	.byte	0x2e
+	.4byte	0x64
+	.4byte	.LLST85
+	.uleb128 0x36
+	.ascii	"req\000"
+	.byte	0x2
+	.byte	0x30
+	.4byte	0x338
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -124
+	.uleb128 0x36
+	.ascii	"low\000"
+	.byte	0x2
+	.byte	0x31
+	.4byte	0x32d
+	.uleb128 0x1
+	.byte	0x58
+	.uleb128 0x20
+	.4byte	.LASF583
+	.byte	0x2
+	.byte	0x31
+	.4byte	0x32d
+	.uleb128 0x1
+	.byte	0x55
+	.uleb128 0x29
+	.ascii	"mid\000"
+	.byte	0x2
+	.byte	0x31
+	.4byte	0x32d
+	.uleb128 0x20
+	.4byte	.LASF584
+	.byte	0x2
+	.byte	0x32
+	.4byte	0x194f
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -104
+	.uleb128 0x34
+	.4byte	.LASF585
+	.byte	0x2
+	.byte	0x33
+	.4byte	0x30c
+	.uleb128 0x24
+	.4byte	.LVL366
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL369
+	.4byte	0x1b05
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF586
+	.byte	0x2
+	.byte	0x1e
+	.4byte	0x317
+	.4byte	.LFB175
+	.4byte	.LFE175-.LFB175
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x455a
+	.uleb128 0x23
+	.4byte	.LASF587
+	.byte	0x2
+	.byte	0x1e
+	.4byte	0x317
+	.4byte	.LLST24
+	.uleb128 0x4b
+	.4byte	.LASF588
+	.byte	0x2
+	.byte	0x1e
+	.4byte	0x317
+	.uleb128 0x1
+	.byte	0x51
+	.uleb128 0x36
+	.ascii	"ret\000"
+	.byte	0x2
+	.byte	0x20
+	.4byte	0x317
+	.uleb128 0x1
+	.byte	0x50
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF589
+	.byte	0x2
+	.byte	0x14
+	.4byte	0x30c
+	.4byte	.LFB174
+	.4byte	.LFE174-.LFB174
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x458e
+	.uleb128 0x23
+	.4byte	.LASF379
+	.byte	0x2
+	.byte	0x14
+	.4byte	0x30c
+	.4byte	.LLST23
+	.uleb128 0x34
+	.4byte	.LASF501
+	.byte	0x2
+	.byte	0x16
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF590
+	.byte	0x2
+	.byte	0xc
+	.4byte	0x30c
+	.4byte	.LFB173
+	.4byte	.LFE173-.LFB173
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x45c2
+	.uleb128 0x23
+	.4byte	.LASF379
+	.byte	0x2
+	.byte	0xc
+	.4byte	0x30c
+	.4byte	.LLST22
+	.uleb128 0x34
+	.4byte	.LASF377
+	.byte	0x2
+	.byte	0xe
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF591
+	.byte	0x2
+	.byte	0x4
+	.4byte	0x30c
+	.4byte	.LFB172
+	.4byte	.LFE172-.LFB172
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4605
+	.uleb128 0x23
+	.4byte	.LASF377
+	.byte	0x2
+	.byte	0x4
+	.4byte	0x30c
+	.4byte	.LLST20
+	.uleb128 0x23
+	.4byte	.LASF501
+	.byte	0x2
+	.byte	0x4
+	.4byte	0x30c
+	.4byte	.LLST21
+	.uleb128 0x34
+	.4byte	.LASF393
+	.byte	0x2
+	.byte	0x6
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF592
+	.byte	0x4
+	.2byte	0x13c
+	.4byte	0x322
+	.4byte	.LFB171
+	.4byte	.LFE171-.LFB171
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x47c9
+	.uleb128 0x51
+	.ascii	"die\000"
+	.byte	0x4
+	.2byte	0x13e
+	.4byte	0x317
+	.4byte	.LLST209
+	.uleb128 0x3e
+	.ascii	"blk\000"
+	.byte	0x4
+	.2byte	0x13f
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF353
+	.byte	0x4
+	.2byte	0x140
+	.4byte	0x317
+	.4byte	.LLST210
+	.uleb128 0x3d
+	.4byte	.LASF593
+	.byte	0x4
+	.2byte	0x142
+	.4byte	0x47c9
+	.uleb128 0x3f
+	.4byte	.LASF594
+	.byte	0x4
+	.2byte	0x158
+	.uleb128 0x4e
+	.4byte	0x17d1
+	.4byte	.LBB465
+	.4byte	.Ldebug_ranges0+0x1e0
+	.byte	0x4
+	.2byte	0x15e
+	.4byte	0x46b1
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x1e0
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x1e0
+	.uleb128 0x30
+	.4byte	0x6134
+	.uleb128 0x30
+	.4byte	0x6139
+	.uleb128 0x24
+	.4byte	.LVL1088
+	.4byte	0x6732
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x53
+	.4byte	0x17d1
+	.4byte	.LBB471
+	.4byte	.LBE471-.LBB471
+	.byte	0x4
+	.2byte	0x15f
+	.4byte	0x470b
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB472
+	.4byte	.LBE472-.LBB472
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB473
+	.4byte	.LBE473-.LBB473
+	.uleb128 0x30
+	.4byte	0x6134
+	.uleb128 0x30
+	.4byte	0x6139
+	.uleb128 0x24
+	.4byte	.LVL1089
+	.4byte	0x6732
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL1072
+	.4byte	0x4931
+	.uleb128 0x24
+	.4byte	.LVL1073
+	.4byte	0x47cf
+	.uleb128 0x24
+	.4byte	.LVL1076
+	.4byte	0x4af7
+	.uleb128 0x24
+	.4byte	.LVL1077
+	.4byte	0x190b
+	.uleb128 0x24
+	.4byte	.LVL1078
+	.4byte	0x4b52
+	.uleb128 0x24
+	.4byte	.LVL1082
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL1083
+	.4byte	0x177a
+	.uleb128 0x24
+	.4byte	.LVL1084
+	.4byte	0x4b52
+	.uleb128 0x24
+	.4byte	.LVL1085
+	.4byte	0x1815
+	.uleb128 0x24
+	.4byte	.LVL1086
+	.4byte	0x4a91
+	.uleb128 0x24
+	.4byte	.LVL1087
+	.4byte	0x4af7
+	.uleb128 0x24
+	.4byte	.LVL1092
+	.4byte	0x177a
+	.uleb128 0x24
+	.4byte	.LVL1093
+	.4byte	0x195f
+	.uleb128 0x24
+	.4byte	.LVL1094
+	.4byte	0x19f5
+	.uleb128 0x24
+	.4byte	.LVL1095
+	.4byte	0x4b52
+	.uleb128 0x24
+	.4byte	.LVL1096
+	.4byte	0x4b52
+	.uleb128 0x24
+	.4byte	.LVL1098
+	.4byte	0x195f
+	.uleb128 0x24
+	.4byte	.LVL1099
+	.4byte	0x4b52
+	.uleb128 0x24
+	.4byte	.LVL1100
+	.4byte	0x4b52
+	.uleb128 0x24
+	.4byte	.LVL1101
+	.4byte	0x4994
+	.uleb128 0x24
+	.4byte	.LVL1102
+	.4byte	0x4994
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x70b
+	.uleb128 0x3a
+	.4byte	.LASF595
+	.byte	0x4
+	.2byte	0x116
+	.4byte	0x64
+	.4byte	.LFB170
+	.4byte	.LFE170-.LFB170
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x482d
+	.uleb128 0x50
+	.ascii	"die\000"
+	.byte	0x4
+	.2byte	0x118
+	.4byte	0x317
+	.uleb128 0x1
+	.byte	0x56
+	.uleb128 0x51
+	.ascii	"blk\000"
+	.byte	0x4
+	.2byte	0x119
+	.4byte	0x30c
+	.4byte	.LLST82
+	.uleb128 0x44
+	.4byte	.LASF596
+	.byte	0x4
+	.2byte	0x11a
+	.4byte	0x317
+	.4byte	.LLST83
+	.uleb128 0x3d
+	.4byte	.LASF593
+	.byte	0x4
+	.2byte	0x11b
+	.4byte	0x47c9
+	.uleb128 0x24
+	.4byte	.LVL361
+	.4byte	0x1b05
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF597
+	.byte	0x4
+	.byte	0xac
+	.4byte	0x64
+	.4byte	.LFB169
+	.4byte	.LFE169-.LFB169
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x48dd
+	.uleb128 0x49
+	.ascii	"i\000"
+	.byte	0x4
+	.byte	0xae
+	.4byte	0x317
+	.4byte	.LLST206
+	.uleb128 0x49
+	.ascii	"blk\000"
+	.byte	0x4
+	.byte	0xaf
+	.4byte	0x30c
+	.4byte	.LLST207
+	.uleb128 0x2c
+	.4byte	.LASF489
+	.byte	0x4
+	.byte	0xb0
+	.4byte	0x32d
+	.4byte	.LLST208
+	.uleb128 0x34
+	.4byte	.LASF593
+	.byte	0x4
+	.byte	0xb1
+	.4byte	0x47c9
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x48ed
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6576
+	.uleb128 0x24
+	.4byte	.LVL1051
+	.4byte	0x4931
+	.uleb128 0x24
+	.4byte	.LVL1053
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL1054
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL1055
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL1056
+	.4byte	0x447f
+	.uleb128 0x24
+	.4byte	.LVL1058
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1059
+	.4byte	0x58be
+	.uleb128 0x24
+	.4byte	.LVL1065
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL1069
+	.4byte	0x177a
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x48ed
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0xa
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x48dd
+	.uleb128 0x22
+	.4byte	.LASF598
+	.byte	0x4
+	.byte	0x9c
+	.4byte	0x30c
+	.4byte	.LFB168
+	.4byte	.LFE168-.LFB168
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4931
+	.uleb128 0x49
+	.ascii	"blk\000"
+	.byte	0x4
+	.byte	0x9e
+	.4byte	0x30c
+	.4byte	.LLST19
+	.uleb128 0x20
+	.4byte	.LASF599
+	.byte	0x4
+	.byte	0x9f
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x54
+	.uleb128 0x24
+	.4byte	.LVL53
+	.4byte	0x4af7
+	.byte	0
+	.uleb128 0x48
+	.4byte	.LASF600
+	.byte	0x4
+	.byte	0x94
+	.4byte	.LFB167
+	.4byte	.LFE167-.LFB167
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4994
+	.uleb128 0x5a
+	.4byte	0x17d1
+	.4byte	.LBB227
+	.4byte	.Ldebug_ranges0+0x18
+	.byte	0x4
+	.byte	0x98
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x18
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x18
+	.uleb128 0x30
+	.4byte	0x17fd
+	.uleb128 0x30
+	.4byte	0x1808
+	.uleb128 0x24
+	.4byte	.LVL50
+	.4byte	0x671c
+	.byte	0
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF601
+	.byte	0x4
+	.byte	0x4f
+	.4byte	0x64
+	.4byte	.LFB166
+	.4byte	.LFE166-.LFB166
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4a91
+	.uleb128 0x49
+	.ascii	"i\000"
+	.byte	0x4
+	.byte	0x51
+	.4byte	0x64
+	.4byte	.LLST173
+	.uleb128 0x2c
+	.4byte	.LASF602
+	.byte	0x4
+	.byte	0x52
+	.4byte	0x64
+	.4byte	.LLST174
+	.uleb128 0x2c
+	.4byte	.LASF593
+	.byte	0x4
+	.byte	0x53
+	.4byte	0x47c9
+	.4byte	.LLST175
+	.uleb128 0x2c
+	.4byte	.LASF505
+	.byte	0x4
+	.byte	0x54
+	.4byte	0x30c
+	.4byte	.LLST176
+	.uleb128 0x46
+	.4byte	.LASF603
+	.byte	0x4
+	.byte	0x67
+	.uleb128 0x5b
+	.4byte	.LASF363
+	.4byte	0x1b00
+	.uleb128 0x2d
+	.4byte	0x17d1
+	.4byte	.LBB420
+	.4byte	.Ldebug_ranges0+0x158
+	.byte	0x4
+	.byte	0x5f
+	.4byte	0x4a48
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x158
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x158
+	.uleb128 0x30
+	.4byte	0x6134
+	.uleb128 0x30
+	.4byte	0x6139
+	.uleb128 0x24
+	.4byte	.LVL841
+	.4byte	0x671c
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL837
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL842
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL843
+	.4byte	0x19f5
+	.uleb128 0x24
+	.4byte	.LVL844
+	.4byte	0x195f
+	.uleb128 0x24
+	.4byte	.LVL845
+	.4byte	0x19f5
+	.uleb128 0x24
+	.4byte	.LVL848
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL849
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL851
+	.4byte	0x177a
+	.byte	0
+	.uleb128 0x48
+	.4byte	.LASF604
+	.byte	0x4
+	.byte	0x41
+	.4byte	.LFB165
+	.4byte	.LFE165-.LFB165
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4aef
+	.uleb128 0x23
+	.4byte	.LASF537
+	.byte	0x4
+	.byte	0x41
+	.4byte	0x63b
+	.4byte	.LLST111
+	.uleb128 0x23
+	.4byte	.LASF605
+	.byte	0x4
+	.byte	0x41
+	.4byte	0x544
+	.4byte	.LLST112
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x4
+	.byte	0x43
+	.4byte	0x317
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x29d0
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6533
+	.uleb128 0x24
+	.4byte	.LVL522
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL523
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0x5c
+	.4byte	.LASF606
+	.byte	0x4
+	.byte	0x26
+	.byte	0x1
+	.uleb128 0x2a
+	.4byte	.LASF607
+	.byte	0x4
+	.byte	0x17
+	.4byte	0x64
+	.4byte	.LFB163
+	.4byte	.LFE163-.LFB163
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4b52
+	.uleb128 0x23
+	.4byte	.LASF179
+	.byte	0x4
+	.byte	0x17
+	.4byte	0x30c
+	.4byte	.LLST16
+	.uleb128 0x49
+	.ascii	"die\000"
+	.byte	0x4
+	.byte	0x19
+	.4byte	0x317
+	.4byte	.LLST17
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x4
+	.byte	0x1a
+	.4byte	0x317
+	.uleb128 0x34
+	.4byte	.LASF605
+	.byte	0x4
+	.byte	0x1b
+	.4byte	0x544
+	.uleb128 0x2c
+	.4byte	.LASF370
+	.byte	0x4
+	.byte	0x1c
+	.4byte	0x30c
+	.4byte	.LLST18
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF608
+	.byte	0x4
+	.byte	0x4
+	.4byte	0x64
+	.4byte	.LFB162
+	.4byte	.LFE162-.LFB162
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4ba9
+	.uleb128 0x23
+	.4byte	.LASF179
+	.byte	0x4
+	.byte	0x4
+	.4byte	0x30c
+	.4byte	.LLST14
+	.uleb128 0x49
+	.ascii	"die\000"
+	.byte	0x4
+	.byte	0x6
+	.4byte	0x317
+	.4byte	.LLST15
+	.uleb128 0x34
+	.4byte	.LASF605
+	.byte	0x4
+	.byte	0x7
+	.4byte	0x544
+	.uleb128 0x34
+	.4byte	.LASF370
+	.byte	0x4
+	.byte	0x8
+	.4byte	0x30c
+	.uleb128 0x24
+	.4byte	.LVL41
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0x5d
+	.4byte	.LASF670
+	.byte	0x3
+	.2byte	0x4bb
+	.4byte	0x317
+	.4byte	.LFB161
+	.4byte	.LFE161-.LFB161
+	.uleb128 0x1
+	.byte	0x9c
+	.uleb128 0x3a
+	.4byte	.LASF609
+	.byte	0x3
+	.2byte	0x4b6
+	.4byte	0x64
+	.4byte	.LFB160
+	.4byte	.LFE160-.LFB160
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4c13
+	.uleb128 0x43
+	.4byte	.LASF94
+	.byte	0x3
+	.2byte	0x4b6
+	.4byte	0x99
+	.4byte	.LLST283
+	.uleb128 0x43
+	.4byte	.LASF115
+	.byte	0x3
+	.2byte	0x4b6
+	.4byte	0x99
+	.4byte	.LLST284
+	.uleb128 0x4d
+	.ascii	"buf\000"
+	.byte	0x3
+	.2byte	0x4b6
+	.4byte	0x4c13
+	.4byte	.LLST285
+	.uleb128 0x24
+	.4byte	.LVL1560
+	.4byte	0x4d3f
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x79
+	.uleb128 0x3a
+	.4byte	.LASF610
+	.byte	0x3
+	.2byte	0x4b0
+	.4byte	0x64
+	.4byte	.LFB159
+	.4byte	.LFE159-.LFB159
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4c6d
+	.uleb128 0x43
+	.4byte	.LASF94
+	.byte	0x3
+	.2byte	0x4b0
+	.4byte	0x99
+	.4byte	.LLST269
+	.uleb128 0x43
+	.4byte	.LASF115
+	.byte	0x3
+	.2byte	0x4b0
+	.4byte	0x99
+	.4byte	.LLST270
+	.uleb128 0x4d
+	.ascii	"buf\000"
+	.byte	0x3
+	.2byte	0x4b0
+	.4byte	0x4c13
+	.4byte	.LLST271
+	.uleb128 0x24
+	.4byte	.LVL1458
+	.4byte	0x50ca
+	.byte	0
+	.uleb128 0x4c
+	.4byte	.LASF611
+	.byte	0x3
+	.2byte	0x481
+	.4byte	0x64
+	.4byte	.LFB158
+	.4byte	.LFE158-.LFB158
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4d3f
+	.uleb128 0x43
+	.4byte	.LASF515
+	.byte	0x3
+	.2byte	0x481
+	.4byte	0x317
+	.4byte	.LLST234
+	.uleb128 0x43
+	.4byte	.LASF516
+	.byte	0x3
+	.2byte	0x481
+	.4byte	0x317
+	.4byte	.LLST235
+	.uleb128 0x44
+	.4byte	.LASF518
+	.byte	0x3
+	.2byte	0x483
+	.4byte	0x30c
+	.4byte	.LLST236
+	.uleb128 0x3e
+	.ascii	"tmp\000"
+	.byte	0x3
+	.2byte	0x484
+	.4byte	0x30c
+	.uleb128 0x51
+	.ascii	"lpa\000"
+	.byte	0x3
+	.2byte	0x485
+	.4byte	0x317
+	.4byte	.LLST237
+	.uleb128 0x44
+	.4byte	.LASF447
+	.byte	0x3
+	.2byte	0x486
+	.4byte	0x317
+	.4byte	.LLST238
+	.uleb128 0x44
+	.4byte	.LASF424
+	.byte	0x3
+	.2byte	0x486
+	.4byte	0x317
+	.4byte	.LLST239
+	.uleb128 0x3d
+	.4byte	.LASF413
+	.byte	0x3
+	.2byte	0x487
+	.4byte	0x30c
+	.uleb128 0x24
+	.4byte	.LVL1226
+	.4byte	0x4f6d
+	.uleb128 0x24
+	.4byte	.LVL1232
+	.4byte	0x39f7
+	.uleb128 0x24
+	.4byte	.LVL1233
+	.4byte	0x3593
+	.uleb128 0x24
+	.4byte	.LVL1234
+	.4byte	0x392c
+	.uleb128 0x24
+	.4byte	.LVL1235
+	.4byte	0x392c
+	.uleb128 0x24
+	.4byte	.LVL1238
+	.4byte	0x455a
+	.uleb128 0x24
+	.4byte	.LVL1239
+	.4byte	0x233b
+	.byte	0
+	.uleb128 0x4c
+	.4byte	.LASF612
+	.byte	0x3
+	.2byte	0x3be
+	.4byte	0x64
+	.4byte	.LFB157
+	.4byte	.LFE157-.LFB157
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4f6d
+	.uleb128 0x4d
+	.ascii	"LUN\000"
+	.byte	0x3
+	.2byte	0x3be
+	.4byte	0x301
+	.4byte	.LLST272
+	.uleb128 0x43
+	.4byte	.LASF515
+	.byte	0x3
+	.2byte	0x3be
+	.4byte	0x317
+	.4byte	.LLST273
+	.uleb128 0x43
+	.4byte	.LASF516
+	.byte	0x3
+	.2byte	0x3be
+	.4byte	0x317
+	.4byte	.LLST274
+	.uleb128 0x43
+	.4byte	.LASF517
+	.byte	0x3
+	.2byte	0x3be
+	.4byte	0x384f
+	.4byte	.LLST275
+	.uleb128 0x3d
+	.4byte	.LASF381
+	.byte	0x3
+	.2byte	0x3c0
+	.4byte	0x1d4c
+	.uleb128 0x51
+	.ascii	"lpa\000"
+	.byte	0x3
+	.2byte	0x3c1
+	.4byte	0x317
+	.4byte	.LLST276
+	.uleb128 0x44
+	.4byte	.LASF613
+	.byte	0x3
+	.2byte	0x3c1
+	.4byte	0x317
+	.4byte	.LLST277
+	.uleb128 0x44
+	.4byte	.LASF614
+	.byte	0x3
+	.2byte	0x3c1
+	.4byte	0x317
+	.4byte	.LLST278
+	.uleb128 0x44
+	.4byte	.LASF447
+	.byte	0x3
+	.2byte	0x3c2
+	.4byte	0x317
+	.4byte	.LLST279
+	.uleb128 0x3e
+	.ascii	"ppa\000"
+	.byte	0x3
+	.2byte	0x3c2
+	.4byte	0x317
+	.uleb128 0x51
+	.ascii	"i\000"
+	.byte	0x3
+	.2byte	0x3c3
+	.4byte	0x317
+	.4byte	.LLST280
+	.uleb128 0x44
+	.4byte	.LASF615
+	.byte	0x3
+	.2byte	0x3c3
+	.4byte	0x317
+	.4byte	.LLST281
+	.uleb128 0x3d
+	.4byte	.LASF378
+	.byte	0x3
+	.2byte	0x3c3
+	.4byte	0x317
+	.uleb128 0x3d
+	.4byte	.LASF616
+	.byte	0x3
+	.2byte	0x3c4
+	.4byte	0x317
+	.uleb128 0x3d
+	.4byte	.LASF617
+	.byte	0x3
+	.2byte	0x3c4
+	.4byte	0x317
+	.uleb128 0x44
+	.4byte	.LASF423
+	.byte	0x3
+	.2byte	0x3c5
+	.4byte	0x12cb
+	.4byte	.LLST282
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x39f2
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6469
+	.uleb128 0x52
+	.4byte	.LBB516
+	.4byte	.LBE516-.LBB516
+	.4byte	0x4e8b
+	.uleb128 0x1f
+	.4byte	.LASF386
+	.byte	0x3
+	.2byte	0x43a
+	.4byte	0x338
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -68
+	.uleb128 0x24
+	.4byte	.LVL1538
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL1539
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1540
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL1462
+	.4byte	0x3855
+	.uleb128 0x24
+	.4byte	.LVL1473
+	.4byte	0x4f6d
+	.uleb128 0x24
+	.4byte	.LVL1479
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1480
+	.4byte	0x4f6d
+	.uleb128 0x24
+	.4byte	.LVL1481
+	.4byte	0x246d
+	.uleb128 0x24
+	.4byte	.LVL1482
+	.4byte	0x246d
+	.uleb128 0x24
+	.4byte	.LVL1485
+	.4byte	0x246d
+	.uleb128 0x24
+	.4byte	.LVL1488
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1495
+	.4byte	0x1c7f
+	.uleb128 0x24
+	.4byte	.LVL1497
+	.4byte	0x3fa5
+	.uleb128 0x24
+	.4byte	.LVL1498
+	.4byte	0x1e7a
+	.uleb128 0x24
+	.4byte	.LVL1499
+	.4byte	0x1c7f
+	.uleb128 0x24
+	.4byte	.LVL1500
+	.4byte	0x1c7f
+	.uleb128 0x24
+	.4byte	.LVL1505
+	.4byte	0x177a
+	.uleb128 0x24
+	.4byte	.LVL1510
+	.4byte	0x4f6d
+	.uleb128 0x24
+	.4byte	.LVL1512
+	.4byte	0x246d
+	.uleb128 0x24
+	.4byte	.LVL1515
+	.4byte	0x392c
+	.uleb128 0x24
+	.4byte	.LVL1516
+	.4byte	0x23f1
+	.uleb128 0x24
+	.4byte	.LVL1520
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL1531
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1541
+	.4byte	0x177a
+	.uleb128 0x24
+	.4byte	.LVL1544
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL1547
+	.4byte	0x177a
+	.uleb128 0x24
+	.4byte	.LVL1551
+	.4byte	0x4f91
+	.uleb128 0x24
+	.4byte	.LVL1555
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF618
+	.byte	0x3
+	.2byte	0x3b5
+	.4byte	0x64
+	.4byte	.LFB156
+	.4byte	.LFE156-.LFB156
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4f91
+	.uleb128 0x24
+	.4byte	.LVL1216
+	.4byte	0x4f91
+	.byte	0
+	.uleb128 0x4f
+	.4byte	.LASF619
+	.byte	0x3
+	.2byte	0x385
+	.4byte	.LFB155
+	.4byte	.LFE155-.LFB155
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x50b5
+	.uleb128 0x4d
+	.ascii	"req\000"
+	.byte	0x3
+	.2byte	0x385
+	.4byte	0xf4b
+	.4byte	.LLST227
+	.uleb128 0x43
+	.4byte	.LASF378
+	.byte	0x3
+	.2byte	0x385
+	.4byte	0x317
+	.4byte	.LLST228
+	.uleb128 0x43
+	.4byte	.LASF620
+	.byte	0x3
+	.2byte	0x385
+	.4byte	0x317
+	.4byte	.LLST229
+	.uleb128 0x43
+	.4byte	.LASF423
+	.byte	0x3
+	.2byte	0x385
+	.4byte	0x12cb
+	.4byte	.LLST230
+	.uleb128 0x51
+	.ascii	"i\000"
+	.byte	0x3
+	.2byte	0x387
+	.4byte	0x317
+	.4byte	.LLST231
+	.uleb128 0x51
+	.ascii	"ppa\000"
+	.byte	0x3
+	.2byte	0x388
+	.4byte	0x317
+	.4byte	.LLST232
+	.uleb128 0x44
+	.4byte	.LASF447
+	.byte	0x3
+	.2byte	0x388
+	.4byte	0x317
+	.4byte	.LLST233
+	.uleb128 0x3d
+	.4byte	.LASF406
+	.byte	0x3
+	.2byte	0x389
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF381
+	.byte	0x3
+	.2byte	0x38a
+	.4byte	0x1d4c
+	.uleb128 0x3d
+	.4byte	.LASF471
+	.byte	0x3
+	.2byte	0x38b
+	.4byte	0x317
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x50c5
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6441
+	.uleb128 0x24
+	.4byte	.LVL1195
+	.4byte	0x19f5
+	.uleb128 0x24
+	.4byte	.LVL1197
+	.4byte	0x455a
+	.uleb128 0x24
+	.4byte	.LVL1198
+	.4byte	0x246d
+	.uleb128 0x24
+	.4byte	.LVL1199
+	.4byte	0x1e1e
+	.uleb128 0x24
+	.4byte	.LVL1200
+	.4byte	0x23f1
+	.uleb128 0x24
+	.4byte	.LVL1201
+	.4byte	0x19f5
+	.uleb128 0x24
+	.4byte	.LVL1203
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1205
+	.4byte	0x392c
+	.uleb128 0x24
+	.4byte	.LVL1207
+	.4byte	0x455a
+	.uleb128 0x24
+	.4byte	.LVL1210
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1211
+	.4byte	0x233b
+	.uleb128 0x24
+	.4byte	.LVL1214
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x50c5
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0xc
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x50b5
+	.uleb128 0x4c
+	.4byte	.LASF621
+	.byte	0x3
+	.2byte	0x32c
+	.4byte	0x64
+	.4byte	.LFB154
+	.4byte	.LFE154-.LFB154
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x52a7
+	.uleb128 0x4d
+	.ascii	"LUN\000"
+	.byte	0x3
+	.2byte	0x32c
+	.4byte	0x301
+	.4byte	.LLST254
+	.uleb128 0x43
+	.4byte	.LASF515
+	.byte	0x3
+	.2byte	0x32c
+	.4byte	0x317
+	.4byte	.LLST255
+	.uleb128 0x43
+	.4byte	.LASF516
+	.byte	0x3
+	.2byte	0x32c
+	.4byte	0x317
+	.4byte	.LLST256
+	.uleb128 0x43
+	.4byte	.LASF517
+	.byte	0x3
+	.2byte	0x32c
+	.4byte	0x384f
+	.4byte	.LLST257
+	.uleb128 0x3e
+	.ascii	"ret\000"
+	.byte	0x3
+	.2byte	0x32e
+	.4byte	0x64
+	.uleb128 0x44
+	.4byte	.LASF613
+	.byte	0x3
+	.2byte	0x32f
+	.4byte	0x317
+	.4byte	.LLST258
+	.uleb128 0x44
+	.4byte	.LASF614
+	.byte	0x3
+	.2byte	0x32f
+	.4byte	0x317
+	.4byte	.LLST259
+	.uleb128 0x44
+	.4byte	.LASF622
+	.byte	0x3
+	.2byte	0x32f
+	.4byte	0x317
+	.4byte	.LLST260
+	.uleb128 0x51
+	.ascii	"lpa\000"
+	.byte	0x3
+	.2byte	0x330
+	.4byte	0x317
+	.4byte	.LLST261
+	.uleb128 0x51
+	.ascii	"ppa\000"
+	.byte	0x3
+	.2byte	0x330
+	.4byte	0x317
+	.4byte	.LLST262
+	.uleb128 0x51
+	.ascii	"n\000"
+	.byte	0x3
+	.2byte	0x332
+	.4byte	0x317
+	.4byte	.LLST263
+	.uleb128 0x44
+	.4byte	.LASF378
+	.byte	0x3
+	.2byte	0x332
+	.4byte	0x317
+	.4byte	.LLST264
+	.uleb128 0x44
+	.4byte	.LASF615
+	.byte	0x3
+	.2byte	0x332
+	.4byte	0x317
+	.4byte	.LLST265
+	.uleb128 0x44
+	.4byte	.LASF623
+	.byte	0x3
+	.2byte	0x333
+	.4byte	0x317
+	.4byte	.LLST266
+	.uleb128 0x3d
+	.4byte	.LASF624
+	.byte	0x3
+	.2byte	0x333
+	.4byte	0x317
+	.uleb128 0x44
+	.4byte	.LASF625
+	.byte	0x3
+	.2byte	0x334
+	.4byte	0x317
+	.4byte	.LLST267
+	.uleb128 0x44
+	.4byte	.LASF626
+	.byte	0x3
+	.2byte	0x335
+	.4byte	0x317
+	.4byte	.LLST268
+	.uleb128 0x52
+	.4byte	.LBB515
+	.4byte	.LBE515-.LBB515
+	.4byte	0x5216
+	.uleb128 0x3d
+	.4byte	.LASF393
+	.byte	0x3
+	.2byte	0x379
+	.4byte	0x30c
+	.uleb128 0x24
+	.4byte	.LVL1443
+	.4byte	0x455a
+	.uleb128 0x24
+	.4byte	.LVL1444
+	.4byte	0x1e7a
+	.byte	0
+	.uleb128 0x53
+	.4byte	0x17d1
+	.4byte	.LBB512
+	.4byte	.LBE512-.LBB512
+	.byte	0x3
+	.2byte	0x34f
+	.4byte	0x5270
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB513
+	.4byte	.LBE513-.LBB513
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB514
+	.4byte	.LBE514-.LBB514
+	.uleb128 0x30
+	.4byte	0x6134
+	.uleb128 0x30
+	.4byte	0x6139
+	.uleb128 0x24
+	.4byte	.LVL1428
+	.4byte	0x6732
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL1390
+	.4byte	0x3781
+	.uleb128 0x24
+	.4byte	.LVL1396
+	.4byte	0x4f6d
+	.uleb128 0x24
+	.4byte	.LVL1411
+	.4byte	0x1c7f
+	.uleb128 0x24
+	.4byte	.LVL1414
+	.4byte	0x392c
+	.uleb128 0x24
+	.4byte	.LVL1434
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL1440
+	.4byte	0x177a
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF627
+	.byte	0x3
+	.2byte	0x325
+	.4byte	0x64
+	.4byte	.LFB153
+	.4byte	.LFE153-.LFB153
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x52cb
+	.uleb128 0x24
+	.4byte	.LVL1221
+	.4byte	0x52cb
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF628
+	.byte	0x3
+	.2byte	0x31c
+	.4byte	0x64
+	.4byte	.LFB152
+	.4byte	.LFE152-.LFB152
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x530a
+	.uleb128 0x24
+	.4byte	.LVL1217
+	.4byte	0x4f6d
+	.uleb128 0x24
+	.4byte	.LVL1218
+	.4byte	0x39f7
+	.uleb128 0x24
+	.4byte	.LVL1219
+	.4byte	0x3734
+	.uleb128 0x24
+	.4byte	.LVL1220
+	.4byte	0x3593
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF629
+	.byte	0x3
+	.2byte	0x2e6
+	.4byte	0x64
+	.4byte	.LFB151
+	.4byte	.LFE151-.LFB151
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5399
+	.uleb128 0x3d
+	.4byte	.LASF630
+	.byte	0x3
+	.2byte	0x2e8
+	.4byte	0x5399
+	.uleb128 0x3f
+	.4byte	.LASF631
+	.byte	0x3
+	.2byte	0x2f3
+	.uleb128 0x52
+	.4byte	.LBB524
+	.4byte	.LBE524-.LBB524
+	.4byte	0x5359
+	.uleb128 0x3e
+	.ascii	"i\000"
+	.byte	0x3
+	.2byte	0x310
+	.4byte	0x317
+	.uleb128 0x24
+	.4byte	.LVL1644
+	.4byte	0x1c7f
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL1637
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1638
+	.4byte	0x586d
+	.uleb128 0x24
+	.4byte	.LVL1639
+	.4byte	0x56e5
+	.uleb128 0x24
+	.4byte	.LVL1640
+	.4byte	0x55e9
+	.uleb128 0x24
+	.4byte	.LVL1641
+	.4byte	0x4400
+	.uleb128 0x24
+	.4byte	.LVL1642
+	.4byte	0x482d
+	.uleb128 0x24
+	.4byte	.LVL1643
+	.4byte	0x2812
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x424
+	.uleb128 0x4c
+	.4byte	.LASF632
+	.byte	0x3
+	.2byte	0x26e
+	.4byte	0x64
+	.4byte	.LFB150
+	.4byte	.LFE150-.LFB150
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5498
+	.uleb128 0x3d
+	.4byte	.LASF501
+	.byte	0x3
+	.2byte	0x270
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF633
+	.byte	0x3
+	.2byte	0x270
+	.4byte	0x30c
+	.4byte	.LLST288
+	.uleb128 0x44
+	.4byte	.LASF634
+	.byte	0x3
+	.2byte	0x271
+	.4byte	0x30c
+	.4byte	.LLST289
+	.uleb128 0x3e
+	.ascii	"i\000"
+	.byte	0x3
+	.2byte	0x272
+	.4byte	0x30c
+	.uleb128 0x47
+	.4byte	.LASF635
+	.byte	0x3
+	.2byte	0x2bc
+	.4byte	.L1750
+	.uleb128 0x47
+	.4byte	.LASF636
+	.byte	0x3
+	.2byte	0x2cc
+	.4byte	.L1752
+	.uleb128 0x24
+	.4byte	.LVL1606
+	.4byte	0x4400
+	.uleb128 0x24
+	.4byte	.LVL1607
+	.4byte	0x482d
+	.uleb128 0x24
+	.4byte	.LVL1608
+	.4byte	0x4605
+	.uleb128 0x24
+	.4byte	.LVL1615
+	.4byte	0x4994
+	.uleb128 0x24
+	.4byte	.LVL1616
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL1617
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL1618
+	.4byte	0x2c52
+	.uleb128 0x24
+	.4byte	.LVL1620
+	.4byte	0x5498
+	.uleb128 0x24
+	.4byte	.LVL1624
+	.4byte	0x58be
+	.uleb128 0x24
+	.4byte	.LVL1625
+	.4byte	0x4400
+	.uleb128 0x24
+	.4byte	.LVL1627
+	.4byte	0x5498
+	.uleb128 0x24
+	.4byte	.LVL1629
+	.4byte	0x5498
+	.uleb128 0x24
+	.4byte	.LVL1633
+	.4byte	0x2c52
+	.uleb128 0x24
+	.4byte	.LVL1634
+	.4byte	0x424d
+	.uleb128 0x24
+	.4byte	.LVL1635
+	.4byte	0x3593
+	.uleb128 0x24
+	.4byte	.LVL1636
+	.4byte	0x2812
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF637
+	.byte	0x3
+	.2byte	0x20f
+	.4byte	0x64
+	.4byte	.LFB149
+	.4byte	.LFE149-.LFB149
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x55bf
+	.uleb128 0x43
+	.4byte	.LASF501
+	.byte	0x3
+	.2byte	0x20f
+	.4byte	0x30c
+	.4byte	.LLST96
+	.uleb128 0x43
+	.4byte	.LASF638
+	.byte	0x3
+	.2byte	0x20f
+	.4byte	0x301
+	.4byte	.LLST97
+	.uleb128 0x44
+	.4byte	.LASF633
+	.byte	0x3
+	.2byte	0x211
+	.4byte	0x30c
+	.4byte	.LLST98
+	.uleb128 0x3d
+	.4byte	.LASF358
+	.byte	0x3
+	.2byte	0x211
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF377
+	.byte	0x3
+	.2byte	0x212
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF179
+	.byte	0x3
+	.2byte	0x212
+	.4byte	0x30c
+	.uleb128 0x44
+	.4byte	.LASF639
+	.byte	0x3
+	.2byte	0x213
+	.4byte	0x30c
+	.4byte	.LLST99
+	.uleb128 0x44
+	.4byte	.LASF640
+	.byte	0x3
+	.2byte	0x214
+	.4byte	0x30c
+	.4byte	.LLST100
+	.uleb128 0x44
+	.4byte	.LASF641
+	.byte	0x3
+	.2byte	0x215
+	.4byte	0x30c
+	.4byte	.LLST101
+	.uleb128 0x44
+	.4byte	.LASF642
+	.byte	0x3
+	.2byte	0x216
+	.4byte	0x30c
+	.4byte	.LLST102
+	.uleb128 0x47
+	.4byte	.LASF643
+	.byte	0x3
+	.2byte	0x240
+	.4byte	.L488
+	.uleb128 0x24
+	.4byte	.LVL413
+	.4byte	0x195f
+	.uleb128 0x24
+	.4byte	.LVL423
+	.4byte	0x19f5
+	.uleb128 0x24
+	.4byte	.LVL434
+	.4byte	0x195f
+	.uleb128 0x24
+	.4byte	.LVL436
+	.4byte	0x45c2
+	.uleb128 0x24
+	.4byte	.LVL437
+	.4byte	0x55bf
+	.uleb128 0x24
+	.4byte	.LVL438
+	.4byte	0x4af7
+	.uleb128 0x24
+	.4byte	.LVL443
+	.4byte	0x4b52
+	.uleb128 0x24
+	.4byte	.LVL446
+	.4byte	0x45c2
+	.uleb128 0x24
+	.4byte	.LVL447
+	.4byte	0x55bf
+	.uleb128 0x24
+	.4byte	.LVL448
+	.4byte	0x4af7
+	.uleb128 0x24
+	.4byte	.LVL453
+	.4byte	0x4b52
+	.uleb128 0x24
+	.4byte	.LVL456
+	.4byte	0x4367
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF644
+	.byte	0x3
+	.2byte	0x201
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x55e9
+	.uleb128 0x3c
+	.4byte	.LASF179
+	.byte	0x3
+	.2byte	0x201
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF645
+	.byte	0x3
+	.2byte	0x203
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF646
+	.byte	0x3
+	.2byte	0x1ec
+	.4byte	0x64
+	.4byte	.LFB147
+	.4byte	.LFE147-.LFB147
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x56e5
+	.uleb128 0x53
+	.4byte	0x17d1
+	.4byte	.LBB409
+	.4byte	.LBE409-.LBB409
+	.byte	0x3
+	.2byte	0x1f9
+	.4byte	0x565d
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB410
+	.4byte	.LBE410-.LBB410
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB411
+	.4byte	.LBE411-.LBB411
+	.uleb128 0x30
+	.4byte	0x6134
+	.uleb128 0x30
+	.4byte	0x6139
+	.uleb128 0x24
+	.4byte	.LVL771
+	.4byte	0x6732
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x53
+	.4byte	0x17d1
+	.4byte	.LBB412
+	.4byte	.LBE412-.LBB412
+	.byte	0x3
+	.2byte	0x1fa
+	.4byte	0x56b7
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB413
+	.4byte	.LBE413-.LBB413
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB414
+	.4byte	.LBE414-.LBB414
+	.uleb128 0x30
+	.4byte	0x6134
+	.uleb128 0x30
+	.4byte	0x6139
+	.uleb128 0x24
+	.4byte	.LVL772
+	.4byte	0x6732
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL768
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL769
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL770
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL773
+	.4byte	0x231c
+	.uleb128 0x24
+	.4byte	.LVL774
+	.4byte	0x31c5
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF647
+	.byte	0x3
+	.2byte	0x116
+	.4byte	0x64
+	.4byte	.LFB146
+	.4byte	.LFE146-.LFB146
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x586d
+	.uleb128 0x51
+	.ascii	"i\000"
+	.byte	0x3
+	.2byte	0x118
+	.4byte	0x317
+	.4byte	.LLST110
+	.uleb128 0x3d
+	.4byte	.LASF648
+	.byte	0x3
+	.2byte	0x119
+	.4byte	0x317
+	.uleb128 0x37
+	.4byte	.LASF363
+	.4byte	0x48ed
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6317
+	.uleb128 0x24
+	.4byte	.LVL479
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL480
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL481
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL482
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL483
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL484
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL485
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL486
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL487
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL488
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL489
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL490
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL491
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL492
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL493
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL494
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL495
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL496
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL497
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL498
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL499
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL500
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL501
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL502
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL503
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL504
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL505
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL506
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL507
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL508
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL509
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL510
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL511
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL512
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL513
+	.4byte	0x6748
+	.uleb128 0x24
+	.4byte	.LVL516
+	.4byte	0x6727
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF649
+	.byte	0x3
+	.byte	0xb6
+	.4byte	0x64
+	.4byte	.LFB145
+	.4byte	.LFE145-.LFB145
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x58be
+	.uleb128 0x23
+	.4byte	.LASF630
+	.byte	0x3
+	.byte	0xb6
+	.4byte	0x5399
+	.4byte	.LLST11
+	.uleb128 0x49
+	.ascii	"i\000"
+	.byte	0x3
+	.byte	0xb8
+	.4byte	0x317
+	.4byte	.LLST12
+	.uleb128 0x24
+	.4byte	.LVL27
+	.4byte	0x58ff
+	.uleb128 0x24
+	.4byte	.LVL28
+	.4byte	0x58ff
+	.uleb128 0x24
+	.4byte	.LVL32
+	.4byte	0x58be
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF650
+	.byte	0x3
+	.byte	0xa4
+	.4byte	0x64
+	.4byte	.LFB144
+	.4byte	.LFE144-.LFB144
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x58e7
+	.uleb128 0x23
+	.4byte	.LASF651
+	.byte	0x3
+	.byte	0xa4
+	.4byte	0x30c
+	.4byte	.LLST10
+	.byte	0
+	.uleb128 0x57
+	.4byte	.LASF652
+	.byte	0x3
+	.byte	0x9e
+	.byte	0x1
+	.4byte	0x58ff
+	.uleb128 0x33
+	.4byte	.LASF653
+	.byte	0x3
+	.byte	0x9e
+	.4byte	0x317
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF654
+	.byte	0x3
+	.byte	0x7f
+	.4byte	0x30c
+	.4byte	.LFB142
+	.4byte	.LFE142-.LFB142
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x593e
+	.uleb128 0x2b
+	.ascii	"num\000"
+	.byte	0x3
+	.byte	0x7f
+	.4byte	0x317
+	.4byte	.LLST9
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x3
+	.byte	0x81
+	.4byte	0x30c
+	.uleb128 0x20
+	.4byte	.LASF655
+	.byte	0x3
+	.byte	0x82
+	.4byte	0x317
+	.uleb128 0x1
+	.byte	0x52
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF656
+	.byte	0x3
+	.byte	0x71
+	.4byte	0x64
+	.4byte	.LFB141
+	.4byte	.LFE141-.LFB141
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5984
+	.uleb128 0x23
+	.4byte	.LASF86
+	.byte	0x3
+	.byte	0x71
+	.4byte	0xb6
+	.4byte	.LLST63
+	.uleb128 0x29
+	.ascii	"buf\000"
+	.byte	0x3
+	.byte	0x73
+	.4byte	0xb6
+	.uleb128 0x24
+	.4byte	.LVL282
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL283
+	.4byte	0x5984
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF657
+	.byte	0x3
+	.byte	0xa
+	.4byte	0x64
+	.4byte	.LFB140
+	.4byte	.LFE140-.LFB140
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5c7a
+	.uleb128 0x23
+	.4byte	.LASF86
+	.byte	0x3
+	.byte	0xa
+	.4byte	0xb6
+	.4byte	.LLST60
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x3
+	.byte	0xc
+	.4byte	0x64
+	.uleb128 0x29
+	.ascii	"buf\000"
+	.byte	0x3
+	.byte	0xd
+	.4byte	0xb6
+	.uleb128 0x52
+	.4byte	.LBB282
+	.4byte	.LBE282-.LBB282
+	.4byte	0x59ef
+	.uleb128 0x2c
+	.4byte	.LASF393
+	.byte	0x3
+	.byte	0x57
+	.4byte	0x30c
+	.4byte	.LLST61
+	.uleb128 0x24
+	.4byte	.LVL273
+	.4byte	0x3fa5
+	.uleb128 0x24
+	.4byte	.LVL275
+	.4byte	0x6753
+	.byte	0
+	.uleb128 0x52
+	.4byte	.LBB283
+	.4byte	.LBE283-.LBB283
+	.4byte	0x5a15
+	.uleb128 0x2c
+	.4byte	.LASF393
+	.byte	0x3
+	.byte	0x60
+	.4byte	0x30c
+	.4byte	.LLST62
+	.uleb128 0x24
+	.4byte	.LVL279
+	.4byte	0x6753
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL203
+	.4byte	0x675f
+	.uleb128 0x24
+	.4byte	.LVL204
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL205
+	.4byte	0x675f
+	.uleb128 0x24
+	.4byte	.LVL206
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL207
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL208
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL209
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL210
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL211
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL212
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL213
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL214
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL215
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL216
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL217
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL218
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL219
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL220
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL221
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL222
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL223
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL224
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL225
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL226
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL227
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL228
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL229
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL230
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL231
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL232
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL233
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL234
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL235
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL236
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL237
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL238
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL239
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL240
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL241
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL242
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL243
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL244
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL245
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL246
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL247
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL248
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL249
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL250
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL251
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL252
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL253
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL254
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL255
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL256
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL257
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL258
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL259
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL260
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL261
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL262
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL263
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL264
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL265
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL266
+	.4byte	0x2788
+	.uleb128 0x24
+	.4byte	.LVL267
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL268
+	.4byte	0x2739
+	.uleb128 0x24
+	.4byte	.LVL269
+	.4byte	0x6753
+	.uleb128 0x24
+	.4byte	.LVL272
+	.4byte	0x6753
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x3414
+	.4byte	.LFB276
+	.4byte	.LFE276-.LFB276
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5c9c
+	.uleb128 0x5f
+	.4byte	0x3421
+	.4byte	.LLST8
+	.uleb128 0x2e
+	.4byte	0x342d
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x58e7
+	.4byte	.LFB143
+	.4byte	.LFE143-.LFB143
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5cb7
+	.uleb128 0x60
+	.4byte	0x58f3
+	.uleb128 0x1
+	.byte	0x50
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x55bf
+	.4byte	.LFB148
+	.4byte	.LFE148-.LFB148
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5cef
+	.uleb128 0x5f
+	.4byte	0x55d0
+	.4byte	.LLST13
+	.uleb128 0x30
+	.4byte	0x55dc
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0
+	.uleb128 0x2e
+	.4byte	0x55d0
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0
+	.uleb128 0x30
+	.4byte	0x5cd3
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x61
+	.4byte	0x4aef
+	.4byte	.LFB164
+	.4byte	.LFE164-.LFB164
+	.uleb128 0x1
+	.byte	0x9c
+	.uleb128 0x61
+	.4byte	0x43f4
+	.4byte	.LFB178
+	.4byte	.LFE178-.LFB178
+	.uleb128 0x1
+	.byte	0x9c
+	.uleb128 0x61
+	.4byte	0x43e8
+	.4byte	.LFB179
+	.4byte	.LFE179-.LFB179
+	.uleb128 0x1
+	.byte	0x9c
+	.uleb128 0x5e
+	.4byte	0x4203
+	.4byte	.LFB185
+	.4byte	.LFE185-.LFB185
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5d72
+	.uleb128 0x5f
+	.4byte	0x420f
+	.4byte	.LLST36
+	.uleb128 0x30
+	.4byte	0x421a
+	.uleb128 0x52
+	.4byte	.LBB258
+	.4byte	.LBE258-.LBB258
+	.4byte	0x5d68
+	.uleb128 0x2e
+	.4byte	0x420f
+	.uleb128 0x32
+	.4byte	.LBB259
+	.4byte	.LBE259-.LBB259
+	.uleb128 0x30
+	.4byte	0x5d38
+	.uleb128 0x24
+	.4byte	.LVL115
+	.4byte	0x6727
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL114
+	.4byte	0x4177
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x4228
+	.4byte	.LFB184
+	.4byte	.LFE184-.LFB184
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5dc8
+	.uleb128 0x5f
+	.4byte	0x4234
+	.4byte	.LLST39
+	.uleb128 0x30
+	.4byte	0x423f
+	.uleb128 0x52
+	.4byte	.LBB262
+	.4byte	.LBE262-.LBB262
+	.4byte	0x5dbe
+	.uleb128 0x2e
+	.4byte	0x4234
+	.uleb128 0x32
+	.4byte	.LBB263
+	.4byte	.LBE263-.LBB263
+	.uleb128 0x30
+	.4byte	0x5d8e
+	.uleb128 0x24
+	.4byte	.LVL127
+	.4byte	0x6727
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL126
+	.4byte	0x4108
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x3f26
+	.4byte	.LFB192
+	.4byte	.LFE192-.LFB192
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5e7a
+	.uleb128 0x5f
+	.4byte	0x3f37
+	.4byte	.LLST48
+	.uleb128 0x30
+	.4byte	0x3f43
+	.uleb128 0x30
+	.4byte	0x3f4f
+	.uleb128 0x30
+	.4byte	0x3f5b
+	.uleb128 0x30
+	.4byte	0x3f67
+	.uleb128 0x30
+	.4byte	0x3f73
+	.uleb128 0x30
+	.4byte	0x3f7f
+	.uleb128 0x30
+	.4byte	0x3f8b
+	.uleb128 0x30
+	.4byte	0x3f97
+	.uleb128 0x32
+	.4byte	.LBB266
+	.4byte	.LBE266-.LBB266
+	.uleb128 0x2e
+	.4byte	0x3f37
+	.uleb128 0x32
+	.4byte	.LBB267
+	.4byte	.LBE267-.LBB267
+	.uleb128 0x30
+	.4byte	0x5de4
+	.uleb128 0x30
+	.4byte	0x5de9
+	.uleb128 0x62
+	.4byte	0x5dee
+	.uleb128 0x1
+	.byte	0x56
+	.uleb128 0x30
+	.4byte	0x5df3
+	.uleb128 0x63
+	.4byte	0x5df8
+	.4byte	.LLST49
+	.uleb128 0x62
+	.4byte	0x5dfd
+	.uleb128 0x1
+	.byte	0x57
+	.uleb128 0x30
+	.4byte	0x5e02
+	.uleb128 0x30
+	.4byte	0x5e07
+	.uleb128 0x24
+	.4byte	.LVL160
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL162
+	.4byte	0x4086
+	.uleb128 0x24
+	.4byte	.LVL163
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL164
+	.4byte	0x4203
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x3d76
+	.4byte	.LFB195
+	.4byte	.LFE195-.LFB195
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5ee6
+	.uleb128 0x5f
+	.4byte	0x3d87
+	.4byte	.LLST50
+	.uleb128 0x62
+	.4byte	0x3d93
+	.uleb128 0x1
+	.byte	0x55
+	.uleb128 0x30
+	.4byte	0x3d9f
+	.uleb128 0x30
+	.4byte	0x3dab
+	.uleb128 0x52
+	.4byte	.LBB270
+	.4byte	.LBE270-.LBB270
+	.4byte	0x5edc
+	.uleb128 0x2e
+	.4byte	0x3d87
+	.uleb128 0x32
+	.4byte	.LBB271
+	.4byte	.LBE271-.LBB271
+	.uleb128 0x30
+	.4byte	0x5e96
+	.uleb128 0x30
+	.4byte	0x5e9d
+	.uleb128 0x30
+	.4byte	0x5ea2
+	.uleb128 0x24
+	.4byte	.LVL167
+	.4byte	0x6727
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL168
+	.4byte	0x424d
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x3710
+	.4byte	.LFB206
+	.4byte	.LFE206-.LFB206
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5f1e
+	.uleb128 0x5f
+	.4byte	0x371d
+	.4byte	.LLST51
+	.uleb128 0x30
+	.4byte	0x3729
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x70
+	.uleb128 0x2e
+	.4byte	0x371d
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x70
+	.uleb128 0x30
+	.4byte	0x5f02
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x3414
+	.4byte	.LFB212
+	.4byte	.LFE212-.LFB212
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5f4d
+	.uleb128 0x5f
+	.4byte	0x3421
+	.4byte	.LLST52
+	.uleb128 0x5f
+	.4byte	0x342d
+	.4byte	.LLST53
+	.uleb128 0x24
+	.4byte	.LVL173
+	.4byte	0x5c7a
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x2d0e
+	.4byte	.LFB222
+	.4byte	.LFE222-.LFB222
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5f8d
+	.uleb128 0x60
+	.4byte	0x2d1b
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x30
+	.4byte	0x2d27
+	.uleb128 0x32
+	.4byte	.LBB280
+	.4byte	.LBE280-.LBB280
+	.uleb128 0x2e
+	.4byte	0x2d1b
+	.uleb128 0x32
+	.4byte	.LBB281
+	.4byte	.LBE281-.LBB281
+	.uleb128 0x62
+	.4byte	0x5f67
+	.uleb128 0x1
+	.byte	0x51
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x2681
+	.4byte	.LFB237
+	.4byte	.LFE237-.LFB237
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5fc2
+	.uleb128 0x5f
+	.4byte	0x2692
+	.4byte	.LLST68
+	.uleb128 0x32
+	.4byte	.LBB286
+	.4byte	.LBE286-.LBB286
+	.uleb128 0x2e
+	.4byte	0x2692
+	.uleb128 0x24
+	.4byte	.LVL304
+	.4byte	0x4228
+	.byte	0
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x1e11
+	.4byte	.LFB256
+	.4byte	.LFE256-.LFB256
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5fe8
+	.uleb128 0x24
+	.4byte	.LVL338
+	.4byte	0x455a
+	.uleb128 0x24
+	.4byte	.LVL339
+	.4byte	0x1e7a
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x190b
+	.4byte	.LFB265
+	.4byte	.LFE265-.LFB265
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x60fd
+	.uleb128 0x5f
+	.4byte	0x191b
+	.4byte	.LLST103
+	.uleb128 0x30
+	.4byte	0x1926
+	.uleb128 0x30
+	.4byte	0x1931
+	.uleb128 0x30
+	.4byte	0x193c
+	.uleb128 0x32
+	.4byte	.LBB313
+	.4byte	.LBE313-.LBB313
+	.uleb128 0x2e
+	.4byte	0x191b
+	.uleb128 0x32
+	.4byte	.LBB314
+	.4byte	.LBE314-.LBB314
+	.uleb128 0x30
+	.4byte	0x6004
+	.uleb128 0x62
+	.4byte	0x6009
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -88
+	.uleb128 0x62
+	.4byte	0x600e
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -108
+	.uleb128 0x64
+	.4byte	0x1947
+	.uleb128 0x2d
+	.4byte	0x17d1
+	.4byte	.LBB315
+	.4byte	.Ldebug_ranges0+0xa8
+	.byte	0x1
+	.byte	0xa7
+	.4byte	0x6097
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0xa8
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0xa8
+	.uleb128 0x30
+	.4byte	0x17fd
+	.uleb128 0x30
+	.4byte	0x1808
+	.uleb128 0x24
+	.4byte	.LVL461
+	.4byte	0x671c
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x2d
+	.4byte	0x17d1
+	.4byte	.LBB321
+	.4byte	.Ldebug_ranges0+0xc0
+	.byte	0x1
+	.byte	0xa8
+	.4byte	0x60df
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0xc0
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0xc0
+	.uleb128 0x30
+	.4byte	0x17fd
+	.uleb128 0x30
+	.4byte	0x1808
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL462
+	.4byte	0x195f
+	.uleb128 0x24
+	.4byte	.LVL463
+	.4byte	0x19f5
+	.uleb128 0x24
+	.4byte	.LVL464
+	.4byte	0x195f
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x17d1
+	.4byte	.LFB267
+	.4byte	.LFE267-.LFB267
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6176
+	.uleb128 0x5f
+	.4byte	0x17e1
+	.4byte	.LLST107
+	.uleb128 0x5f
+	.4byte	0x17ea
+	.4byte	.LLST108
+	.uleb128 0x5f
+	.4byte	0x17f3
+	.4byte	.LLST109
+	.uleb128 0x38
+	.4byte	.Ldebug_ranges0+0xf8
+	.4byte	0x613f
+	.uleb128 0x30
+	.4byte	0x17fd
+	.uleb128 0x30
+	.4byte	0x1808
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LBB355
+	.4byte	.LBE355-.LBB355
+	.uleb128 0x2e
+	.4byte	0x17f3
+	.uleb128 0x2e
+	.4byte	0x17ea
+	.uleb128 0x2e
+	.4byte	0x17e1
+	.uleb128 0x32
+	.4byte	.LBB356
+	.4byte	.LBE356-.LBB356
+	.uleb128 0x30
+	.4byte	0x6134
+	.uleb128 0x30
+	.4byte	0x6139
+	.uleb128 0x24
+	.4byte	.LVL478
+	.4byte	0x671c
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x1d67
+	.4byte	.LFB258
+	.4byte	.LFE258-.LFB258
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6210
+	.uleb128 0x62
+	.4byte	0x1d78
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x30
+	.4byte	0x1d84
+	.uleb128 0x30
+	.4byte	0x1d8e
+	.uleb128 0x30
+	.4byte	0x1d9a
+	.uleb128 0x38
+	.4byte	.Ldebug_ranges0+0x140
+	.4byte	0x6200
+	.uleb128 0x30
+	.4byte	0x6189
+	.uleb128 0x30
+	.4byte	0x6190
+	.uleb128 0x63
+	.4byte	0x6195
+	.4byte	.LLST141
+	.uleb128 0x62
+	.4byte	0x619a
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -88
+	.uleb128 0x52
+	.4byte	.LBB377
+	.4byte	.LBE377-.LBB377
+	.4byte	0x61f6
+	.uleb128 0x62
+	.4byte	0x1dab
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -108
+	.uleb128 0x24
+	.4byte	.LVL642
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL643
+	.4byte	0x455a
+	.uleb128 0x24
+	.4byte	.LVL644
+	.4byte	0x1e7a
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL641
+	.4byte	0x392c
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LBB380
+	.4byte	.LBE380-.LBB380
+	.uleb128 0x30
+	.4byte	0x1db9
+	.byte	0
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x1dc7
+	.4byte	.LFB257
+	.4byte	.LFE257-.LFB257
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x629b
+	.uleb128 0x5f
+	.4byte	0x1dd8
+	.4byte	.LLST182
+	.uleb128 0x30
+	.4byte	0x1de4
+	.uleb128 0x30
+	.4byte	0x1df0
+	.uleb128 0x30
+	.4byte	0x1dfa
+	.uleb128 0x30
+	.4byte	0x1e04
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x190
+	.uleb128 0x2e
+	.4byte	0x1dd8
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x190
+	.uleb128 0x30
+	.4byte	0x622c
+	.uleb128 0x62
+	.4byte	0x6231
+	.uleb128 0x1
+	.byte	0x54
+	.uleb128 0x63
+	.4byte	0x6236
+	.4byte	.LLST183
+	.uleb128 0x62
+	.4byte	0x623b
+	.uleb128 0x1
+	.byte	0x59
+	.uleb128 0x24
+	.4byte	.LVL894
+	.4byte	0x45c2
+	.uleb128 0x24
+	.4byte	.LVL896
+	.4byte	0x1e11
+	.uleb128 0x24
+	.4byte	.LVL897
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL898
+	.4byte	0x4b52
+	.uleb128 0x24
+	.4byte	.LVL899
+	.4byte	0x4994
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x23b1
+	.4byte	.LFB241
+	.4byte	.LFE241-.LFB241
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6315
+	.uleb128 0x5f
+	.4byte	0x23c2
+	.4byte	.LLST184
+	.uleb128 0x30
+	.4byte	0x23ce
+	.uleb128 0x52
+	.4byte	.LBB441
+	.4byte	.LBE441-.LBB441
+	.4byte	0x630b
+	.uleb128 0x2e
+	.4byte	0x23c2
+	.uleb128 0x32
+	.4byte	.LBB442
+	.4byte	.LBE442-.LBB442
+	.uleb128 0x30
+	.4byte	0x62b7
+	.uleb128 0x24
+	.4byte	.LVL903
+	.4byte	0x4086
+	.uleb128 0x24
+	.4byte	.LVL904
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL905
+	.4byte	0x2681
+	.uleb128 0x24
+	.4byte	.LVL906
+	.4byte	0x1dc7
+	.uleb128 0x24
+	.4byte	.LVL907
+	.4byte	0x6727
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL909
+	.4byte	0x3f26
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x3658
+	.4byte	.LFB208
+	.4byte	.LFE208-.LFB208
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x638e
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x1a8
+	.uleb128 0x63
+	.4byte	0x3666
+	.4byte	.LLST186
+	.uleb128 0x63
+	.4byte	0x3672
+	.4byte	.LLST187
+	.uleb128 0x63
+	.4byte	0x367e
+	.4byte	.LLST188
+	.uleb128 0x62
+	.4byte	0x368a
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -68
+	.uleb128 0x30
+	.4byte	0x3696
+	.uleb128 0x24
+	.4byte	.LVL916
+	.4byte	0x392c
+	.uleb128 0x24
+	.4byte	.LVL917
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL920
+	.4byte	0x17d1
+	.uleb128 0x24
+	.4byte	.LVL922
+	.4byte	0x23f1
+	.uleb128 0x24
+	.4byte	.LVL923
+	.4byte	0x19f5
+	.uleb128 0x24
+	.4byte	.LVL924
+	.4byte	0x233b
+	.byte	0
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x2b80
+	.4byte	.LFB226
+	.4byte	.LFE226-.LFB226
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x63ab
+	.uleb128 0x24
+	.4byte	.LVL1124
+	.4byte	0x3855
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x343a
+	.4byte	.LFB211
+	.4byte	.LFE211-.LFB211
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x63da
+	.uleb128 0x24
+	.4byte	.LVL1148
+	.4byte	0x3781
+	.uleb128 0x24
+	.4byte	.LVL1149
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1150
+	.4byte	0x17d1
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x1f7c
+	.4byte	.LFB251
+	.4byte	.LFE251-.LFB251
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6409
+	.uleb128 0x24
+	.4byte	.LVL1272
+	.4byte	0x1f85
+	.uleb128 0x24
+	.4byte	.LVL1273
+	.4byte	0x36a4
+	.uleb128 0x24
+	.4byte	.LVL1274
+	.4byte	0x20d1
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x1c7f
+	.4byte	.LFB259
+	.4byte	.LFE259-.LFB259
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x65fa
+	.uleb128 0x5f
+	.4byte	0x1c90
+	.4byte	.LLST245
+	.uleb128 0x5f
+	.4byte	0x1c9c
+	.4byte	.LLST246
+	.uleb128 0x30
+	.4byte	0x1ca8
+	.uleb128 0x30
+	.4byte	0x1cb4
+	.uleb128 0x30
+	.4byte	0x1cc0
+	.uleb128 0x30
+	.4byte	0x1ccc
+	.uleb128 0x30
+	.4byte	0x1cd8
+	.uleb128 0x30
+	.4byte	0x1ce4
+	.uleb128 0x30
+	.4byte	0x1cf0
+	.uleb128 0x30
+	.4byte	0x1cfc
+	.uleb128 0x30
+	.4byte	0x1d08
+	.uleb128 0x30
+	.4byte	0x1d14
+	.uleb128 0x30
+	.4byte	0x1d30
+	.uleb128 0x38
+	.4byte	.Ldebug_ranges0+0x1f8
+	.4byte	0x65f0
+	.uleb128 0x2e
+	.4byte	0x1c9c
+	.uleb128 0x2e
+	.4byte	0x1c90
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x1f8
+	.uleb128 0x63
+	.4byte	0x642e
+	.4byte	.LLST247
+	.uleb128 0x63
+	.4byte	0x6433
+	.4byte	.LLST248
+	.uleb128 0x63
+	.4byte	0x6438
+	.4byte	.LLST249
+	.uleb128 0x30
+	.4byte	0x643d
+	.uleb128 0x30
+	.4byte	0x6442
+	.uleb128 0x30
+	.4byte	0x6447
+	.uleb128 0x63
+	.4byte	0x644c
+	.4byte	.LLST250
+	.uleb128 0x63
+	.4byte	0x6451
+	.4byte	.LLST251
+	.uleb128 0x63
+	.4byte	0x6456
+	.4byte	.LLST252
+	.uleb128 0x63
+	.4byte	0x645b
+	.4byte	.LLST253
+	.uleb128 0x64
+	.4byte	0x1d20
+	.uleb128 0x64
+	.4byte	0x1d28
+	.uleb128 0x30
+	.4byte	0x6460
+	.uleb128 0x38
+	.4byte	.Ldebug_ranges0+0x218
+	.4byte	0x6516
+	.uleb128 0x30
+	.4byte	0x1d3e
+	.uleb128 0x24
+	.4byte	.LVL1299
+	.4byte	0x269f
+	.uleb128 0x24
+	.4byte	.LVL1300
+	.4byte	0x3fa5
+	.uleb128 0x24
+	.4byte	.LVL1301
+	.4byte	0x3fa5
+	.uleb128 0x24
+	.4byte	.LVL1302
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1304
+	.4byte	0x1e11
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL1316
+	.4byte	0x2262
+	.uleb128 0x24
+	.4byte	.LVL1317
+	.4byte	0x2c52
+	.uleb128 0x24
+	.4byte	.LVL1322
+	.4byte	0x1d67
+	.uleb128 0x24
+	.4byte	.LVL1323
+	.4byte	0x3fa5
+	.uleb128 0x24
+	.4byte	.LVL1324
+	.4byte	0x233b
+	.uleb128 0x24
+	.4byte	.LVL1326
+	.4byte	0x2262
+	.uleb128 0x24
+	.4byte	.LVL1327
+	.4byte	0x233b
+	.uleb128 0x24
+	.4byte	.LVL1328
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1329
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1330
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1331
+	.4byte	0x2c52
+	.uleb128 0x24
+	.4byte	.LVL1333
+	.4byte	0x1d67
+	.uleb128 0x24
+	.4byte	.LVL1353
+	.4byte	0x1b05
+	.uleb128 0x24
+	.4byte	.LVL1357
+	.4byte	0x6727
+	.uleb128 0x24
+	.4byte	.LVL1358
+	.4byte	0x392c
+	.uleb128 0x24
+	.4byte	.LVL1360
+	.4byte	0x1f22
+	.uleb128 0x24
+	.4byte	.LVL1363
+	.4byte	0x2294
+	.uleb128 0x24
+	.4byte	.LVL1364
+	.4byte	0x1eae
+	.uleb128 0x24
+	.4byte	.LVL1373
+	.4byte	0x1eae
+	.uleb128 0x24
+	.4byte	.LVL1376
+	.4byte	0x23b1
+	.uleb128 0x24
+	.4byte	.LVL1377
+	.4byte	0x4f6d
+	.uleb128 0x24
+	.4byte	.LVL1378
+	.4byte	0x39f7
+	.uleb128 0x24
+	.4byte	.LVL1379
+	.4byte	0x3593
+	.uleb128 0x24
+	.4byte	.LVL1383
+	.4byte	0x3fa5
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL1303
+	.4byte	0x20d1
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x2812
+	.4byte	.LFB232
+	.4byte	.LFE232-.LFB232
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6708
+	.uleb128 0x30
+	.4byte	0x2823
+	.uleb128 0x52
+	.4byte	.LBB521
+	.4byte	.LBE521-.LBB521
+	.4byte	0x66a4
+	.uleb128 0x63
+	.4byte	0x660d
+	.4byte	.LLST287
+	.uleb128 0x38
+	.4byte	.Ldebug_ranges0+0x238
+	.4byte	0x6637
+	.uleb128 0x30
+	.4byte	0x282e
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL1592
+	.4byte	0x2a91
+	.uleb128 0x24
+	.4byte	.LVL1593
+	.4byte	0x2a91
+	.uleb128 0x24
+	.4byte	.LVL1594
+	.4byte	0x36a4
+	.uleb128 0x24
+	.4byte	.LVL1595
+	.4byte	0x36a4
+	.uleb128 0x24
+	.4byte	.LVL1596
+	.4byte	0x39f7
+	.uleb128 0x24
+	.4byte	.LVL1597
+	.4byte	0x3593
+	.uleb128 0x24
+	.4byte	.LVL1598
+	.4byte	0x3593
+	.uleb128 0x24
+	.4byte	.LVL1601
+	.4byte	0x1e7a
+	.uleb128 0x24
+	.4byte	.LVL1602
+	.4byte	0x1e7a
+	.uleb128 0x24
+	.4byte	.LVL1603
+	.4byte	0x246d
+	.uleb128 0x24
+	.4byte	.LVL1604
+	.4byte	0x246d
+	.uleb128 0x24
+	.4byte	.LVL1605
+	.4byte	0x29d5
+	.byte	0
+	.uleb128 0x24
+	.4byte	.LVL1580
+	.4byte	0x4400
+	.uleb128 0x24
+	.4byte	.LVL1581
+	.4byte	0x3447
+	.uleb128 0x24
+	.4byte	.LVL1582
+	.4byte	0x333a
+	.uleb128 0x24
+	.4byte	.LVL1583
+	.4byte	0x3198
+	.uleb128 0x24
+	.4byte	.LVL1584
+	.4byte	0x31fa
+	.uleb128 0x24
+	.4byte	.LVL1585
+	.4byte	0x2b06
+	.uleb128 0x24
+	.4byte	.LVL1586
+	.4byte	0x343a
+	.uleb128 0x24
+	.4byte	.LVL1587
+	.4byte	0x42f5
+	.uleb128 0x24
+	.4byte	.LVL1588
+	.4byte	0x2b89
+	.uleb128 0x24
+	.4byte	.LVL1589
+	.4byte	0x2cbd
+	.uleb128 0x24
+	.4byte	.LVL1590
+	.4byte	0x3710
+	.byte	0
+	.uleb128 0x65
+	.4byte	.LASF658
+	.4byte	.LASF658
+	.byte	0x12
+	.byte	0x6f
+	.uleb128 0x66
+	.4byte	.LASF671
+	.4byte	.LASF671
+	.uleb128 0x65
+	.4byte	.LASF659
+	.4byte	.LASF659
+	.byte	0x13
+	.byte	0x19
+	.uleb128 0x65
+	.4byte	.LASF660
+	.4byte	.LASF660
+	.byte	0xc
+	.byte	0x8e
+	.uleb128 0x65
+	.4byte	.LASF661
+	.4byte	.LASF661
+	.byte	0x13
+	.byte	0x1b
+	.uleb128 0x65
+	.4byte	.LASF662
+	.4byte	.LASF662
+	.byte	0x14
+	.byte	0x2c
+	.uleb128 0x65
+	.4byte	.LASF663
+	.4byte	.LASF663
+	.byte	0xe
+	.byte	0x18
+	.uleb128 0x67
+	.4byte	.LASF664
+	.4byte	.LASF664
+	.byte	0xd
+	.2byte	0x19b
+	.uleb128 0x68
+	.4byte	.LASF672
+	.4byte	.LASF673
+	.byte	0x15
+	.byte	0
+	.4byte	.LASF672
+	.byte	0
+	.section	.debug_abbrev,"",%progbits
+.Ldebug_abbrev0:
+	.uleb128 0x1
+	.uleb128 0x11
+	.byte	0x1
+	.uleb128 0x25
+	.uleb128 0xe
+	.uleb128 0x13
+	.uleb128 0xb
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x1b
+	.uleb128 0xe
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x10
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x2
+	.uleb128 0xf
+	.byte	0
+	.uleb128 0xb
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x24
+	.byte	0
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x3e
+	.uleb128 0xb
+	.uleb128 0x3
+	.uleb128 0xe
+	.byte	0
+	.byte	0
+	.uleb128 0x4
+	.uleb128 0x26
+	.byte	0
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x5
+	.uleb128 0x24
+	.byte	0
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x3e
+	.uleb128 0xb
+	.uleb128 0x3
+	.uleb128 0x8
+	.byte	0
+	.byte	0
+	.uleb128 0x6
+	.uleb128 0x16
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x7
+	.uleb128 0x16
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x8
+	.uleb128 0xf
+	.byte	0
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x9
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0xa
+	.uleb128 0x15
+	.byte	0
+	.uleb128 0x27
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0xb
+	.uleb128 0x15
+	.byte	0
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0xc
+	.uleb128 0x1
+	.byte	0x1
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0xd
+	.uleb128 0x21
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0xe
+	.uleb128 0x13
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3c
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0xf
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0x10
+	.uleb128 0x15
+	.byte	0x1
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x11
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x12
+	.uleb128 0x4
+	.byte	0x1
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x13
+	.uleb128 0x28
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x1c
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x14
+	.uleb128 0x13
+	.byte	0x1
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x15
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x38
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x16
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x38
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x17
+	.uleb128 0x21
+	.byte	0
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2f
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x18
+	.uleb128 0x13
+	.byte	0x1
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0xb
+	.uleb128 0x5
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x19
+	.uleb128 0x21
+	.byte	0
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2f
+	.uleb128 0x5
+	.byte	0
+	.byte	0
+	.uleb128 0x1a
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x38
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x1b
+	.uleb128 0x13
+	.byte	0x1
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x1c
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x38
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x1d
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x1e
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x1f
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x20
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x21
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x47
+	.uleb128 0x13
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x22
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x23
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.uleb128 0x4109
+	.byte	0
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x25
+	.uleb128 0x26
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x26
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x20
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x27
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x28
+	.uleb128 0xb
+	.byte	0x1
+	.byte	0
+	.byte	0
+	.uleb128 0x29
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x2a
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2116
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x2b
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x2c
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x2d
+	.uleb128 0x1d
+	.byte	0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x52
+	.uleb128 0x1
+	.uleb128 0x55
+	.uleb128 0x17
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x2e
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x2f
+	.uleb128 0xb
+	.byte	0x1
+	.uleb128 0x55
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x30
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x1d
+	.byte	0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x32
+	.uleb128 0xb
+	.byte	0x1
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.byte	0
+	.byte	0
+	.uleb128 0x33
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x34
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x35
+	.uleb128 0xa
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x36
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x37
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x34
+	.uleb128 0x19
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x38
+	.uleb128 0xb
+	.byte	0x1
+	.uleb128 0x55
+	.uleb128 0x17
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x39
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2116
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x3a
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x3b
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x20
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x3c
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x3d
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x3e
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0xa
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.byte	0
+	.byte	0
+	.uleb128 0x40
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x34
+	.uleb128 0x19
+	.uleb128 0x1c
+	.uleb128 0xe
+	.byte	0
+	.byte	0
+	.uleb128 0x41
+	.uleb128 0xb
+	.byte	0x1
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x42
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x20
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x43
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x44
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x45
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x20
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x46
+	.uleb128 0xa
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x47
+	.uleb128 0xa
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x11
+	.uleb128 0x1
+	.byte	0
+	.byte	0
+	.uleb128 0x48
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x49
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x4a
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x4b
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x4c
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2116
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x4d
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x4e
+	.uleb128 0x1d
+	.byte	0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x52
+	.uleb128 0x1
+	.uleb128 0x55
+	.uleb128 0x17
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0x5
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x4f
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x50
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x51
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x52
+	.uleb128 0xb
+	.byte	0x1
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x53
+	.uleb128 0x1d
+	.byte	0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0x5
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x54
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2116
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x55
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x20
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x56
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x57
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x20
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x58
+	.uleb128 0x1d
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x59
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x20
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x5a
+	.uleb128 0x1d
+	.byte	0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x52
+	.uleb128 0x1
+	.uleb128 0x55
+	.uleb128 0x17
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x5b
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x34
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0x5c
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x20
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x5d
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0x5e
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x5f
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x60
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x61
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0x62
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x63
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x64
+	.uleb128 0xa
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x65
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.uleb128 0x6e
+	.uleb128 0xe
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x66
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.uleb128 0x6e
+	.uleb128 0xe
+	.uleb128 0x3
+	.uleb128 0xe
+	.byte	0
+	.byte	0
+	.uleb128 0x67
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.uleb128 0x6e
+	.uleb128 0xe
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.byte	0
+	.byte	0
+	.uleb128 0x68
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.uleb128 0x6e
+	.uleb128 0xe
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x6e
+	.uleb128 0xe
+	.byte	0
+	.byte	0
+	.byte	0
+	.section	.debug_loc,"",%progbits
+.Ldebug_loc0:
+.LLST290:
+	.4byte	.LVL1645-.Ltext0
+	.4byte	.LVL1646-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST291:
+	.4byte	.LVL1645-.Ltext0
+	.4byte	.LVL1646-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST292:
+	.4byte	.LVL1645-.Ltext0
+	.4byte	.LVL1646-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST170:
+	.4byte	.LVL834-.Ltext0
+	.4byte	.LVL835-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST171:
+	.4byte	.LVL834-.Ltext0
+	.4byte	.LVL835-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST172:
+	.4byte	.LVL834-.Ltext0
+	.4byte	.LVL835-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST104:
+	.4byte	.LVL466-.Ltext0
+	.4byte	.LVL468-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL468-1-.Ltext0
+	.4byte	.LFE266-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST105:
+	.4byte	.LVL466-.Ltext0
+	.4byte	.LVL467-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL467-.Ltext0
+	.4byte	.LFE266-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST106:
+	.4byte	.LVL470-.Ltext0
+	.4byte	.LVL471-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL473-.Ltext0
+	.4byte	.LVL474-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL475-.Ltext0
+	.4byte	.LVL476-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST91:
+	.4byte	.LVL395-.Ltext0
+	.4byte	.LVL399-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL400-.Ltext0
+	.4byte	.LVL402-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST92:
+	.4byte	.LVL395-.Ltext0
+	.4byte	.LVL401-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST93:
+	.4byte	.LVL395-.Ltext0
+	.4byte	.LVL400-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL400-.Ltext0
+	.4byte	.LFE264-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST86:
+	.4byte	.LVL370-.Ltext0
+	.4byte	.LVL372-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST87:
+	.4byte	.LVL370-.Ltext0
+	.4byte	.LVL375-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL375-.Ltext0
+	.4byte	.LVL385-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL385-.Ltext0
+	.4byte	.LVL387-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL392-.Ltext0
+	.4byte	.LFE263-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST88:
+	.4byte	.LVL370-.Ltext0
+	.4byte	.LVL373-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL373-.Ltext0
+	.4byte	.LFE263-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST89:
+	.4byte	.LVL370-.Ltext0
+	.4byte	.LVL371-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL371-.Ltext0
+	.4byte	.LVL384-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL393-.Ltext0
+	.4byte	.LVL394-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST90:
+	.4byte	.LVL373-.Ltext0
+	.4byte	.LVL376-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL377-.Ltext0
+	.4byte	.LVL378-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL381-.Ltext0
+	.4byte	.LVL382-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL384-.Ltext0
+	.4byte	.LVL386-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL392-.Ltext0
+	.4byte	.LFE263-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST79:
+	.4byte	.LVL340-.Ltext0
+	.4byte	.LVL344-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL345-.Ltext0
+	.4byte	.LVL347-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL348-.Ltext0
+	.4byte	.LVL350-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST80:
+	.4byte	.LVL340-.Ltext0
+	.4byte	.LVL345-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL345-.Ltext0
+	.4byte	.LFE262-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST81:
+	.4byte	.LVL340-.Ltext0
+	.4byte	.LVL346-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL348-.Ltext0
+	.4byte	.LVL349-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST0:
+	.4byte	.LVL0-.Ltext0
+	.4byte	.LVL5-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST1:
+	.4byte	.LVL0-.Ltext0
+	.4byte	.LVL7-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL7-.Ltext0
+	.4byte	.LFE261-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST2:
+	.4byte	.LVL0-.Ltext0
+	.4byte	.LVL9-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL9-1-.Ltext0
+	.4byte	.LFE261-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST3:
+	.4byte	.LVL2-.Ltext0
+	.4byte	.LVL11-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST4:
+	.4byte	.LVL3-.Ltext0
+	.4byte	.LVL6-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL8-.Ltext0
+	.4byte	.LFE261-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST5:
+	.4byte	.LVL10-.Ltext0
+	.4byte	.LVL13-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST6:
+	.4byte	.LVL1-.Ltext0
+	.4byte	.LVL4-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST7:
+	.4byte	.LVL11-.Ltext0
+	.4byte	.LVL12-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST78:
+	.4byte	.LVL334-.Ltext0
+	.4byte	.LVL335-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL335-1-.Ltext0
+	.4byte	.LFE255-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST77:
+	.4byte	.LVL331-.Ltext0
+	.4byte	.LVL332-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL332-.Ltext0
+	.4byte	.LFE254-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST244:
+	.4byte	.LVL1287-.Ltext0
+	.4byte	.LVL1288-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST161:
+	.4byte	.LVL794-.Ltext0
+	.4byte	.LVL798-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL798-.Ltext0
+	.4byte	.LVL833-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST162:
+	.4byte	.LVL794-.Ltext0
+	.4byte	.LVL796-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL796-.Ltext0
+	.4byte	.LVL797-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL798-.Ltext0
+	.4byte	.LVL799-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL799-.Ltext0
+	.4byte	.LVL801-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL805-.Ltext0
+	.4byte	.LVL808-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL831-.Ltext0
+	.4byte	.LVL832-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST163:
+	.4byte	.LVL802-.Ltext0
+	.4byte	.LVL803-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL811-.Ltext0
+	.4byte	.LVL812-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL815-.Ltext0
+	.4byte	.LVL816-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST164:
+	.4byte	.LVL800-.Ltext0
+	.4byte	.LVL813-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL814-.Ltext0
+	.4byte	.LVL833-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST165:
+	.4byte	.LVL809-.Ltext0
+	.4byte	.LVL810-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL822-.Ltext0
+	.4byte	.LVL824-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST166:
+	.4byte	.LVL795-.Ltext0
+	.4byte	.LVL806-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL807-.Ltext0
+	.4byte	.LVL828-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL831-.Ltext0
+	.4byte	.LVL833-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST167:
+	.4byte	.LVL817-.Ltext0
+	.4byte	.LVL818-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL819-.Ltext0
+	.4byte	.LVL823-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL826-.Ltext0
+	.4byte	.LVL827-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST168:
+	.4byte	.LVL800-.Ltext0
+	.4byte	.LVL833-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST169:
+	.4byte	.LVL820-.Ltext0
+	.4byte	.LVL821-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL826-.Ltext0
+	.4byte	.LVL827-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST240:
+	.4byte	.LVL1240-.Ltext0
+	.4byte	.LVL1243-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1244-.Ltext0
+	.4byte	.LVL1245-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1246-.Ltext0
+	.4byte	.LVL1247-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1255-.Ltext0
+	.4byte	.LVL1256-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST241:
+	.4byte	.LVL1242-.Ltext0
+	.4byte	.LVL1244-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -52
+	.4byte	.LVL1249-.Ltext0
+	.4byte	.LVL1253-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -52
+	.4byte	.LVL1254-.Ltext0
+	.4byte	.LFE248-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -52
+	.4byte	0
+	.4byte	0
+.LLST242:
+	.4byte	.LVL1241-.Ltext0
+	.4byte	.LVL1248-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1253-.Ltext0
+	.4byte	.LVL1254-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1255-.Ltext0
+	.4byte	.LVL1256-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST243:
+	.4byte	.LVL1258-.Ltext0
+	.4byte	.LVL1260-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1264-.Ltext0
+	.4byte	.LVL1270-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST72:
+	.4byte	.LVL320-.Ltext0
+	.4byte	.LVL321-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL321-.Ltext0
+	.4byte	.LFE247-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST73:
+	.4byte	.LVL320-.Ltext0
+	.4byte	.LVL322-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL322-1-.Ltext0
+	.4byte	.LVL330-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST74:
+	.4byte	.LVL320-.Ltext0
+	.4byte	.LVL322-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL322-1-.Ltext0
+	.4byte	.LVL330-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST75:
+	.4byte	.LVL323-.Ltext0
+	.4byte	.LVL329-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST76:
+	.4byte	.LVL324-.Ltext0
+	.4byte	.LVL325-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL326-.Ltext0
+	.4byte	.LVL327-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL328-.Ltext0
+	.4byte	.LFE247-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST71:
+	.4byte	.LVL316-.Ltext0
+	.4byte	.LVL317-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL318-.Ltext0
+	.4byte	.LVL319-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST185:
+	.4byte	.LVL910-.Ltext0
+	.4byte	.LVL913-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL913-.Ltext0
+	.4byte	.LFE242-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST69:
+	.4byte	.LVL306-.Ltext0
+	.4byte	.LVL307-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL307-.Ltext0
+	.4byte	.LFE240-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST70:
+	.4byte	.LVL310-.Ltext0
+	.4byte	.LVL311-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL313-.Ltext0
+	.4byte	.LFE240-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST226:
+	.4byte	.LVL1181-.Ltext0
+	.4byte	.LVL1183-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1183-.Ltext0
+	.4byte	.LFE239-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST177:
+	.4byte	.LVL854-.Ltext0
+	.4byte	.LVL857-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL857-.Ltext0
+	.4byte	.LVL888-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST178:
+	.4byte	.LVL855-.Ltext0
+	.4byte	.LVL888-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST179:
+	.4byte	.LVL855-.Ltext0
+	.4byte	.LVL856-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL869-.Ltext0
+	.4byte	.LVL880-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL881-.Ltext0
+	.4byte	.LVL888-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST180:
+	.4byte	.LVL875-.Ltext0
+	.4byte	.LVL876-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL877-.Ltext0
+	.4byte	.LVL878-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL883-.Ltext0
+	.4byte	.LVL884-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL885-.Ltext0
+	.4byte	.LVL886-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST181:
+	.4byte	.LVL858-.Ltext0
+	.4byte	.LVL859-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL860-.Ltext0
+	.4byte	.LVL861-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL862-.Ltext0
+	.4byte	.LVL863-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST64:
+	.4byte	.LVL286-.Ltext0
+	.4byte	.LVL287-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL291-.Ltext0
+	.4byte	.LFE236-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST65:
+	.4byte	.LVL286-.Ltext0
+	.4byte	.LVL287-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL290-.Ltext0
+	.4byte	.LVL292-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL300-.Ltext0
+	.4byte	.LVL301-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL302-.Ltext0
+	.4byte	.LFE236-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST66:
+	.4byte	.LVL286-.Ltext0
+	.4byte	.LVL287-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL289-.Ltext0
+	.4byte	.LFE236-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	0
+	.4byte	0
+.LLST67:
+	.4byte	.LVL286-.Ltext0
+	.4byte	.LVL287-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL293-.Ltext0
+	.4byte	.LVL294-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL295-.Ltext0
+	.4byte	.LVL296-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL297-.Ltext0
+	.4byte	.LVL298-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST59:
+	.4byte	.LVL198-.Ltext0
+	.4byte	.LVL199-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL200-.Ltext0
+	.4byte	.LVL201-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST58:
+	.4byte	.LVL193-.Ltext0
+	.4byte	.LVL195-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL195-.Ltext0
+	.4byte	.LFE233-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST142:
+	.4byte	.LVL646-.Ltext0
+	.4byte	.LVL649-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL654-.Ltext0
+	.4byte	.LVL657-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST143:
+	.4byte	.LVL650-.Ltext0
+	.4byte	.LVL654-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL657-.Ltext0
+	.4byte	.LFE230-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST144:
+	.4byte	.LVL651-.Ltext0
+	.4byte	.LVL654-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST224:
+	.4byte	.LVL1171-.Ltext0
+	.4byte	.LVL1173-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1176-.Ltext0
+	.4byte	.LFE229-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST225:
+	.4byte	.LVL1168-.Ltext0
+	.4byte	.LVL1172-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1173-.Ltext0
+	.4byte	.LVL1176-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST205:
+	.4byte	.LVL1046-.Ltext0
+	.4byte	.LVL1047-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1047-.Ltext0
+	.4byte	.LFE228-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST158:
+	.4byte	.LVL778-.Ltext0
+	.4byte	.LVL790-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST159:
+	.4byte	.LVL776-.Ltext0
+	.4byte	.LVL785-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL786-.Ltext0
+	.4byte	.LVL788-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST160:
+	.4byte	.LVL775-.Ltext0
+	.4byte	.LVL782-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL783-.Ltext0
+	.4byte	.LVL790-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST57:
+	.4byte	.LVL188-.Ltext0
+	.4byte	.LVL189-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL189-.Ltext0
+	.4byte	.LFE224-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST190:
+	.4byte	.LVL930-.Ltext0
+	.4byte	.LVL935-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL935-.Ltext0
+	.4byte	.LFE221-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST191:
+	.4byte	.LVL931-.Ltext0
+	.4byte	.LVL932-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL933-.Ltext0
+	.4byte	.LVL938-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL939-.Ltext0
+	.4byte	.LVL940-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL952-.Ltext0
+	.4byte	.LVL955-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL957-.Ltext0
+	.4byte	.LVL958-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL958-.Ltext0
+	.4byte	.LVL959-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL967-.Ltext0
+	.4byte	.LVL969-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL972-.Ltext0
+	.4byte	.LVL973-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL992-.Ltext0
+	.4byte	.LVL994-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1000-.Ltext0
+	.4byte	.LVL1001-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST192:
+	.4byte	.LVL932-.Ltext0
+	.4byte	.LVL934-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL951-.Ltext0
+	.4byte	.LVL954-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL959-.Ltext0
+	.4byte	.LVL960-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL960-.Ltext0
+	.4byte	.LVL961-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL967-.Ltext0
+	.4byte	.LVL974-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL976-.Ltext0
+	.4byte	.LVL979-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL983-.Ltext0
+	.4byte	.LVL984-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL993-.Ltext0
+	.4byte	.LVL996-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1000-.Ltext0
+	.4byte	.LVL1002-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1043-.Ltext0
+	.4byte	.LVL1045-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST193:
+	.4byte	.LVL950-.Ltext0
+	.4byte	.LVL955-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL967-.Ltext0
+	.4byte	.LVL968-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL995-.Ltext0
+	.4byte	.LVL997-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1043-.Ltext0
+	.4byte	.LVL1044-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST194:
+	.4byte	.LVL936-.Ltext0
+	.4byte	.LVL937-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL948-.Ltext0
+	.4byte	.LVL956-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL965-.Ltext0
+	.4byte	.LVL966-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL967-.Ltext0
+	.4byte	.LFE221-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST195:
+	.4byte	.LVL936-.Ltext0
+	.4byte	.LVL937-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL941-.Ltext0
+	.4byte	.LVL942-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL942-.Ltext0
+	.4byte	.LVL970-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL977-.Ltext0
+	.4byte	.LVL978-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST196:
+	.4byte	.LVL946-.Ltext0
+	.4byte	.LVL947-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL962-.Ltext0
+	.4byte	.LVL963-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST197:
+	.4byte	.LVL936-.Ltext0
+	.4byte	.LVL937-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL980-.Ltext0
+	.4byte	.LVL981-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL983-.Ltext0
+	.4byte	.LVL985-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL988-.Ltext0
+	.4byte	.LVL990-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL998-.Ltext0
+	.4byte	.LVL1002-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1010-.Ltext0
+	.4byte	.LVL1017-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1019-.Ltext0
+	.4byte	.LVL1036-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST198:
+	.4byte	.LVL936-.Ltext0
+	.4byte	.LVL937-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -60
+	.4byte	.LVL953-.Ltext0
+	.4byte	.LVL956-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -60
+	.4byte	.LVL980-.Ltext0
+	.4byte	.LFE221-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -60
+	.4byte	0
+	.4byte	0
+.LLST199:
+	.4byte	.LVL936-.Ltext0
+	.4byte	.LVL937-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -56
+	.4byte	.LVL953-.Ltext0
+	.4byte	.LVL956-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -56
+	.4byte	.LVL980-.Ltext0
+	.4byte	.LFE221-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -56
+	.4byte	0
+	.4byte	0
+.LLST200:
+	.4byte	.LVL936-.Ltext0
+	.4byte	.LVL937-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -52
+	.4byte	.LVL953-.Ltext0
+	.4byte	.LVL956-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -52
+	.4byte	.LVL980-.Ltext0
+	.4byte	.LFE221-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -52
+	.4byte	0
+	.4byte	0
+.LLST201:
+	.4byte	.LVL936-.Ltext0
+	.4byte	.LVL937-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL980-.Ltext0
+	.4byte	.LVL981-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL983-.Ltext0
+	.4byte	.LVL985-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL988-.Ltext0
+	.4byte	.LVL990-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL999-.Ltext0
+	.4byte	.LVL1002-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1017-.Ltext0
+	.4byte	.LVL1019-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1036-.Ltext0
+	.4byte	.LVL1038-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST202:
+	.4byte	.LVL944-.Ltext0
+	.4byte	.LVL945-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL971-.Ltext0
+	.4byte	.LVL972-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL983-.Ltext0
+	.4byte	.LVL984-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1000-.Ltext0
+	.4byte	.LVL1002-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1003-.Ltext0
+	.4byte	.LVL1004-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1005-.Ltext0
+	.4byte	.LVL1006-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1007-.Ltext0
+	.4byte	.LVL1008-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1040-.Ltext0
+	.4byte	.LVL1041-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1041-.Ltext0
+	.4byte	.LVL1042-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1042-.Ltext0
+	.4byte	.LVL1043-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST203:
+	.4byte	.LVL1021-.Ltext0
+	.4byte	.LVL1022-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST204:
+	.4byte	.LVL936-.Ltext0
+	.4byte	.LVL937-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL980-.Ltext0
+	.4byte	.LVL986-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL987-.Ltext0
+	.4byte	.LVL989-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL999-.Ltext0
+	.4byte	.LVL1002-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL1014-.Ltext0
+	.4byte	.LVL1019-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL1023-.Ltext0
+	.4byte	.LVL1025-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL1027-.Ltext0
+	.4byte	.LVL1030-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL1036-.Ltext0
+	.4byte	.LVL1038-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST136:
+	.4byte	.LVL613-.Ltext0
+	.4byte	.LVL614-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL614-.Ltext0
+	.4byte	.LVL631-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST137:
+	.4byte	.LVL613-.Ltext0
+	.4byte	.LVL615-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL615-1-.Ltext0
+	.4byte	.LFE220-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	0
+	.4byte	0
+.LLST138:
+	.4byte	.LVL616-.Ltext0
+	.4byte	.LVL620-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL624-.Ltext0
+	.4byte	.LVL629-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST139:
+	.4byte	.LVL618-.Ltext0
+	.4byte	.LVL626-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL627-.Ltext0
+	.4byte	.LVL631-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST140:
+	.4byte	.LVL617-.Ltext0
+	.4byte	.LVL619-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL625-.Ltext0
+	.4byte	.LVL628-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST55:
+	.4byte	.LVL179-.Ltext0
+	.4byte	.LVL180-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL182-.Ltext0
+	.4byte	.LVL185-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST56:
+	.4byte	.LVL179-.Ltext0
+	.4byte	.LVL181-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL182-.Ltext0
+	.4byte	.LVL183-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL184-.Ltext0
+	.4byte	.LVL185-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST150:
+	.4byte	.LVL708-.Ltext0
+	.4byte	.LVL714-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL714-.Ltext0
+	.4byte	.LFE215-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST151:
+	.4byte	.LVL719-.Ltext0
+	.4byte	.LVL724-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL727-.Ltext0
+	.4byte	.LVL729-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL732-.Ltext0
+	.4byte	.LVL734-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL746-.Ltext0
+	.4byte	.LVL747-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST152:
+	.4byte	.LVL726-.Ltext0
+	.4byte	.LVL731-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST153:
+	.4byte	.LVL709-.Ltext0
+	.4byte	.LVL711-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL717-.Ltext0
+	.4byte	.LVL721-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL721-.Ltext0
+	.4byte	.LVL722-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL730-.Ltext0
+	.4byte	.LVL733-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL733-.Ltext0
+	.4byte	.LVL734-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL738-.Ltext0
+	.4byte	.LVL740-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL744-.Ltext0
+	.4byte	.LVL748-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL748-.Ltext0
+	.4byte	.LVL749-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL751-.Ltext0
+	.4byte	.LVL753-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL757-.Ltext0
+	.4byte	.LVL759-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL760-.Ltext0
+	.4byte	.LVL761-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL762-.Ltext0
+	.4byte	.LFE215-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST154:
+	.4byte	.LVL710-.Ltext0
+	.4byte	.LVL728-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL732-.Ltext0
+	.4byte	.LVL738-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL746-.Ltext0
+	.4byte	.LFE215-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST155:
+	.4byte	.LVL711-.Ltext0
+	.4byte	.LVL712-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL725-.Ltext0
+	.4byte	.LVL734-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL738-.Ltext0
+	.4byte	.LVL739-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST156:
+	.4byte	.LVL712-.Ltext0
+	.4byte	.LVL713-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL715-.Ltext0
+	.4byte	.LVL716-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL717-.Ltext0
+	.4byte	.LVL723-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL730-.Ltext0
+	.4byte	.LVL734-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL734-1-.Ltext0
+	.4byte	.LVL738-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL738-.Ltext0
+	.4byte	.LVL739-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL742-.Ltext0
+	.4byte	.LVL743-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL745-.Ltext0
+	.4byte	.LVL746-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL746-.Ltext0
+	.4byte	.LVL751-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL751-.Ltext0
+	.4byte	.LVL752-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL755-.Ltext0
+	.4byte	.LVL756-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL758-.Ltext0
+	.4byte	.LVL759-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL759-.Ltext0
+	.4byte	.LFE215-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	0
+	.4byte	0
+.LLST157:
+	.4byte	.LVL713-.Ltext0
+	.4byte	.LVL715-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL718-.Ltext0
+	.4byte	.LVL720-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL732-.Ltext0
+	.4byte	.LVL734-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST286:
+	.4byte	.LVL1563-.Ltext0
+	.4byte	.LVL1566-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1576-.Ltext0
+	.4byte	.LVL1578-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1579-.Ltext0
+	.4byte	.LFE214-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST54:
+	.4byte	.LVL177-.Ltext0
+	.4byte	.LVL178-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST147:
+	.4byte	.LVL672-.Ltext0
+	.4byte	.LVL674-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL675-.Ltext0
+	.4byte	.LVL677-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL690-.Ltext0
+	.4byte	.LVL691-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL692-.Ltext0
+	.4byte	.LVL693-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL703-.Ltext0
+	.4byte	.LVL704-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL706-.Ltext0
+	.4byte	.LVL707-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST148:
+	.4byte	.LVL673-.Ltext0
+	.4byte	.LVL675-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL680-.Ltext0
+	.4byte	.LVL681-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL682-.Ltext0
+	.4byte	.LVL683-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL684-.Ltext0
+	.4byte	.LVL685-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL686-.Ltext0
+	.4byte	.LVL687-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL688-.Ltext0
+	.4byte	.LVL690-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL690-.Ltext0
+	.4byte	.LVL693-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL693-.Ltext0
+	.4byte	.LVL694-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL696-.Ltext0
+	.4byte	.LVL697-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST149:
+	.4byte	.LVL673-.Ltext0
+	.4byte	.LVL676-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL689-.Ltext0
+	.4byte	.LVL693-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL695-.Ltext0
+	.4byte	.LFE210-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST223:
+	.4byte	.LVL1159-.Ltext0
+	.4byte	.LVL1164-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1165-.Ltext0
+	.4byte	.LFE209-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST145:
+	.4byte	.LVL661-.Ltext0
+	.4byte	.LVL662-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL665-.Ltext0
+	.4byte	.LVL666-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST146:
+	.4byte	.LVL660-.Ltext0
+	.4byte	.LVL661-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST216:
+	.4byte	.LVL1125-.Ltext0
+	.4byte	.LVL1129-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1131-.Ltext0
+	.4byte	.LVL1133-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST217:
+	.4byte	.LVL1126-.Ltext0
+	.4byte	.LVL1127-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1128-.Ltext0
+	.4byte	.LVL1130-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1131-.Ltext0
+	.4byte	.LVL1132-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST218:
+	.4byte	.LVL1136-.Ltext0
+	.4byte	.LVL1141-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1141-.Ltext0
+	.4byte	.LFE204-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST219:
+	.4byte	.LVL1136-.Ltext0
+	.4byte	.LVL1141-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1141-.Ltext0
+	.4byte	.LFE204-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST220:
+	.4byte	.LVL1136-.Ltext0
+	.4byte	.LVL1137-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1137-.Ltext0
+	.4byte	.LFE204-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST221:
+	.4byte	.LVL1140-.Ltext0
+	.4byte	.LVL1142-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL1144-.Ltext0
+	.4byte	.LFE204-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST222:
+	.4byte	.LVL1138-.Ltext0
+	.4byte	.LVL1139-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST211:
+	.4byte	.LVL1104-.Ltext0
+	.4byte	.LVL1108-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1108-.Ltext0
+	.4byte	.LFE203-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST212:
+	.4byte	.LVL1104-.Ltext0
+	.4byte	.LVL1108-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1108-.Ltext0
+	.4byte	.LFE203-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST213:
+	.4byte	.LVL1104-.Ltext0
+	.4byte	.LVL1105-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1107-.Ltext0
+	.4byte	.LVL1109-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1119-.Ltext0
+	.4byte	.LVL1120-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1120-.Ltext0
+	.4byte	.LVL1121-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST214:
+	.4byte	.LVL1107-.Ltext0
+	.4byte	.LVL1113-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1114-.Ltext0
+	.4byte	.LFE203-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST215:
+	.4byte	.LVL1110-.Ltext0
+	.4byte	.LVL1111-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1112-.Ltext0
+	.4byte	.LVL1115-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1121-.Ltext0
+	.4byte	.LVL1122-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST132:
+	.4byte	.LVL600-.Ltext0
+	.4byte	.LVL603-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL604-.Ltext0
+	.4byte	.LVL606-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL609-.Ltext0
+	.4byte	.LVL610-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST133:
+	.4byte	.LVL600-.Ltext0
+	.4byte	.LVL604-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL604-.Ltext0
+	.4byte	.LFE202-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST134:
+	.4byte	.LVL600-.Ltext0
+	.4byte	.LVL604-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL604-.Ltext0
+	.4byte	.LFE202-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	0
+	.4byte	0
+.LLST135:
+	.4byte	.LVL605-.Ltext0
+	.4byte	.LVL611-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL612-.Ltext0
+	.4byte	.LFE202-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST189:
+	.4byte	.LVL926-.Ltext0
+	.4byte	.LVL927-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL928-.Ltext0
+	.4byte	.LVL929-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL929-.Ltext0
+	.4byte	.LFE201-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST131:
+	.4byte	.LVL597-.Ltext0
+	.4byte	.LVL598-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST125:
+	.4byte	.LVL570-.Ltext0
+	.4byte	.LVL572-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL572-.Ltext0
+	.4byte	.LFE198-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST126:
+	.4byte	.LVL570-.Ltext0
+	.4byte	.LVL572-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL572-.Ltext0
+	.4byte	.LFE198-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST127:
+	.4byte	.LVL576-.Ltext0
+	.4byte	.LVL577-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST128:
+	.4byte	.LVL571-.Ltext0
+	.4byte	.LVL579-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL580-.Ltext0
+	.4byte	.LFE198-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST121:
+	.4byte	.LVL553-.Ltext0
+	.4byte	.LVL555-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL555-.Ltext0
+	.4byte	.LVL558-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL558-.Ltext0
+	.4byte	.LVL561-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL561-.Ltext0
+	.4byte	.LFE197-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST122:
+	.4byte	.LVL563-.Ltext0
+	.4byte	.LVL564-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL567-.Ltext0
+	.4byte	.LVL568-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL569-.Ltext0
+	.4byte	.LFE197-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST123:
+	.4byte	.LVL554-.Ltext0
+	.4byte	.LVL560-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST124:
+	.4byte	.LVL557-.Ltext0
+	.4byte	.LVL558-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL559-.Ltext0
+	.4byte	.LFE197-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST129:
+	.4byte	.LVL583-.Ltext0
+	.4byte	.LVL586-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL586-1-.Ltext0
+	.4byte	.LFE196-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST130:
+	.4byte	.LVL584-.Ltext0
+	.4byte	.LVL589-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL591-.Ltext0
+	.4byte	.LVL593-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST116:
+	.4byte	.LVL536-.Ltext0
+	.4byte	.LVL540-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL540-.Ltext0
+	.4byte	.LFE194-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST117:
+	.4byte	.LVL539-.Ltext0
+	.4byte	.LVL550-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST118:
+	.4byte	.LVL542-.Ltext0
+	.4byte	.LVL545-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL546-.Ltext0
+	.4byte	.LVL547-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL548-.Ltext0
+	.4byte	.LVL549-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST119:
+	.4byte	.LVL543-.Ltext0
+	.4byte	.LVL546-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL549-.Ltext0
+	.4byte	.LVL551-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL552-.Ltext0
+	.4byte	.LFE194-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST120:
+	.4byte	.LVL544-.Ltext0
+	.4byte	.LVL546-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL549-.Ltext0
+	.4byte	.LFE194-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	0
+	.4byte	0
+.LLST113:
+	.4byte	.LVL524-.Ltext0
+	.4byte	.LVL525-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL525-.Ltext0
+	.4byte	.LFE193-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST114:
+	.4byte	.LVL524-.Ltext0
+	.4byte	.LVL525-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL525-.Ltext0
+	.4byte	.LVL531-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST115:
+	.4byte	.LVL528-.Ltext0
+	.4byte	.LVL529-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL531-.Ltext0
+	.4byte	.LFE193-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST46:
+	.4byte	.LVL146-.Ltext0
+	.4byte	.LVL148-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL149-.Ltext0
+	.4byte	.LVL150-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL152-.Ltext0
+	.4byte	.LVL155-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST47:
+	.4byte	.LVL147-.Ltext0
+	.4byte	.LVL149-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL151-.Ltext0
+	.4byte	.LVL153-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL154-.Ltext0
+	.4byte	.LVL156-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST45:
+	.4byte	.LVL144-.Ltext0
+	.4byte	.LVL145-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST42:
+	.4byte	.LVL135-.Ltext0
+	.4byte	.LVL139-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL140-.Ltext0
+	.4byte	.LVL143-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST43:
+	.4byte	.LVL135-.Ltext0
+	.4byte	.LVL138-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL140-.Ltext0
+	.4byte	.LVL141-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL142-.Ltext0
+	.4byte	.LFE189-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST44:
+	.4byte	.LVL136-.Ltext0
+	.4byte	.LVL137-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL140-.Ltext0
+	.4byte	.LFE189-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST40:
+	.4byte	.LVL128-.Ltext0
+	.4byte	.LVL131-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL131-.Ltext0
+	.4byte	.LFE188-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST41:
+	.4byte	.LVL128-.Ltext0
+	.4byte	.LVL130-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL131-.Ltext0
+	.4byte	.LVL132-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL133-.Ltext0
+	.4byte	.LVL134-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST37:
+	.4byte	.LVL116-.Ltext0
+	.4byte	.LVL120-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL121-.Ltext0
+	.4byte	.LFE187-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST38:
+	.4byte	.LVL117-.Ltext0
+	.4byte	.LVL122-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
+	.4byte	.LVL123-.Ltext0
+	.4byte	.LVL124-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
+	.4byte	0
+	.4byte	0
+.LLST30:
+	.4byte	.LVL90-.Ltext0
+	.4byte	.LVL109-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL110-.Ltext0
+	.4byte	.LFE186-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST31:
+	.4byte	.LVL91-.Ltext0
+	.4byte	.LVL102-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL103-.Ltext0
+	.4byte	.LVL104-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL105-.Ltext0
+	.4byte	.LFE186-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST32:
+	.4byte	.LVL92-.Ltext0
+	.4byte	.LVL107-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL108-.Ltext0
+	.4byte	.LVL111-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL112-.Ltext0
+	.4byte	.LFE186-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST33:
+	.4byte	.LVL93-.Ltext0
+	.4byte	.LVL95-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST34:
+	.4byte	.LVL94-.Ltext0
+	.4byte	.LVL101-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
+	.4byte	.LVL105-.Ltext0
+	.4byte	.LFE186-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
+	.4byte	0
+	.4byte	0
+.LLST35:
+	.4byte	.LVL97-.Ltext0
+	.4byte	.LVL99-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL100-.Ltext0
+	.4byte	.LVL106-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL108-.Ltext0
+	.4byte	.LVL110-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST29:
+	.4byte	.LVL85-.Ltext0
+	.4byte	.LVL87-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL88-.Ltext0
+	.4byte	.LVL89-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST26:
+	.4byte	.LVL72-.Ltext0
+	.4byte	.LVL74-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL79-.Ltext0
+	.4byte	.LVL81-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL83-.Ltext0
+	.4byte	.LFE181-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST27:
+	.4byte	.LVL72-.Ltext0
+	.4byte	.LVL75-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
+	.4byte	.LVL77-.Ltext0
+	.4byte	.LVL78-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
+	.4byte	.LVL82-.Ltext0
+	.4byte	.LVL84-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
+	.4byte	0
+	.4byte	0
+.LLST28:
+	.4byte	.LVL72-.Ltext0
+	.4byte	.LVL73-.Ltext0
+	.2byte	0x1
+	.byte	0x5e
+	.4byte	.LVL80-.Ltext0
+	.4byte	.LVL84-.Ltext0
+	.2byte	0x1
+	.byte	0x5e
+	.4byte	0
+	.4byte	0
+.LLST94:
+	.4byte	.LVL406-.Ltext0
+	.4byte	.LVL409-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL409-.Ltext0
+	.4byte	.LFE180-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST95:
+	.4byte	.LVL406-.Ltext0
+	.4byte	.LVL407-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL409-.Ltext0
+	.4byte	.LFE180-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST25:
+	.4byte	.LVL69-.Ltext0
+	.4byte	.LVL70-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST84:
+	.4byte	.LVL362-.Ltext0
+	.4byte	.LVL364-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST85:
+	.4byte	.LVL362-.Ltext0
+	.4byte	.LVL363-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL363-.Ltext0
+	.4byte	.LFE176-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST24:
+	.4byte	.LVL65-.Ltext0
+	.4byte	.LVL66-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL67-.Ltext0
+	.4byte	.LVL68-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST23:
+	.4byte	.LVL62-.Ltext0
+	.4byte	.LVL63-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST22:
+	.4byte	.LVL59-.Ltext0
+	.4byte	.LVL60-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL60-1-.Ltext0
+	.4byte	.LFE173-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST20:
+	.4byte	.LVL54-.Ltext0
+	.4byte	.LVL56-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL56-1-.Ltext0
+	.4byte	.LFE172-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST21:
+	.4byte	.LVL54-.Ltext0
+	.4byte	.LVL55-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL55-.Ltext0
+	.4byte	.LVL57-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST209:
+	.4byte	.LVL1071-.Ltext0
+	.4byte	.LVL1103-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST210:
+	.4byte	.LVL1074-.Ltext0
+	.4byte	.LVL1075-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1079-.Ltext0
+	.4byte	.LVL1080-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1081-.Ltext0
+	.4byte	.LVL1090-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1091-.Ltext0
+	.4byte	.LVL1097-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST82:
+	.4byte	.LVL355-.Ltext0
+	.4byte	.LVL356-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL357-.Ltext0
+	.4byte	.LVL358-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL359-.Ltext0
+	.4byte	.LFE170-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST83:
+	.4byte	.LVL360-.Ltext0
+	.4byte	.LVL361-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST206:
+	.4byte	.LVL1060-.Ltext0
+	.4byte	.LVL1061-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1068-.Ltext0
+	.4byte	.LVL1070-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST207:
+	.4byte	.LVL1052-.Ltext0
+	.4byte	.LVL1057-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1061-.Ltext0
+	.4byte	.LVL1062-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1063-.Ltext0
+	.4byte	.LVL1064-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1070-.Ltext0
+	.4byte	.LFE169-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST208:
+	.4byte	.LVL1057-.Ltext0
+	.4byte	.LVL1060-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1064-.Ltext0
+	.4byte	.LVL1066-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1067-.Ltext0
+	.4byte	.LVL1068-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST19:
+	.4byte	.LVL51-.Ltext0
+	.4byte	.LVL52-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST173:
+	.4byte	.LVL836-.Ltext0
+	.4byte	.LVL839-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL850-.Ltext0
+	.4byte	.LVL852-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST174:
+	.4byte	.LVL840-.Ltext0
+	.4byte	.LVL850-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL852-.Ltext0
+	.4byte	.LVL853-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST175:
+	.4byte	.LVL838-.Ltext0
+	.4byte	.LVL850-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL852-.Ltext0
+	.4byte	.LVL853-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST176:
+	.4byte	.LVL839-.Ltext0
+	.4byte	.LVL846-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL847-.Ltext0
+	.4byte	.LVL850-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL852-.Ltext0
+	.4byte	.LVL853-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST111:
+	.4byte	.LVL519-.Ltext0
+	.4byte	.LVL521-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST112:
+	.4byte	.LVL519-.Ltext0
+	.4byte	.LVL520-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL520-.Ltext0
+	.4byte	.LFE165-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST16:
+	.4byte	.LVL43-.Ltext0
+	.4byte	.LVL44-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL44-1-.Ltext0
+	.4byte	.LFE163-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST17:
+	.4byte	.LVL47-.Ltext0
+	.4byte	.LVL49-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST18:
+	.4byte	.LVL45-.Ltext0
+	.4byte	.LVL48-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST14:
+	.4byte	.LVL37-.Ltext0
+	.4byte	.LVL38-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL38-1-.Ltext0
+	.4byte	.LVL42-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST15:
+	.4byte	.LVL39-.Ltext0
+	.4byte	.LVL42-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST283:
+	.4byte	.LVL1556-.Ltext0
+	.4byte	.LVL1559-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST284:
+	.4byte	.LVL1556-.Ltext0
+	.4byte	.LVL1558-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST285:
+	.4byte	.LVL1556-.Ltext0
+	.4byte	.LVL1557-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST269:
+	.4byte	.LVL1454-.Ltext0
+	.4byte	.LVL1457-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST270:
+	.4byte	.LVL1454-.Ltext0
+	.4byte	.LVL1456-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST271:
+	.4byte	.LVL1454-.Ltext0
+	.4byte	.LVL1455-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST234:
+	.4byte	.LVL1222-.Ltext0
+	.4byte	.LVL1223-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1223-.Ltext0
+	.4byte	.LVL1229-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST235:
+	.4byte	.LVL1222-.Ltext0
+	.4byte	.LVL1226-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1226-1-.Ltext0
+	.4byte	.LFE158-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST236:
+	.4byte	.LVL1224-.Ltext0
+	.4byte	.LVL1225-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL1230-.Ltext0
+	.4byte	.LFE158-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST237:
+	.4byte	.LVL1224-.Ltext0
+	.4byte	.LVL1225-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL1228-.Ltext0
+	.4byte	.LFE158-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST238:
+	.4byte	.LVL1224-.Ltext0
+	.4byte	.LVL1225-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -48
+	.4byte	.LVL1231-.Ltext0
+	.4byte	.LVL1236-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -48
+	.4byte	.LVL1236-.Ltext0
+	.4byte	.LVL1237-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1237-.Ltext0
+	.4byte	.LFE158-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -48
+	.4byte	0
+	.4byte	0
+.LLST239:
+	.4byte	.LVL1224-.Ltext0
+	.4byte	.LVL1225-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	.LVL1231-.Ltext0
+	.4byte	.LFE158-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	0
+	.4byte	0
+.LLST272:
+	.4byte	.LVL1459-.Ltext0
+	.4byte	.LVL1461-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1463-.Ltext0
+	.4byte	.LVL1466-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST273:
+	.4byte	.LVL1459-.Ltext0
+	.4byte	.LVL1462-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1462-.Ltext0
+	.4byte	.LFE157-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST274:
+	.4byte	.LVL1459-.Ltext0
+	.4byte	.LVL1460-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1463-.Ltext0
+	.4byte	.LVL1464-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1464-.Ltext0
+	.4byte	.LVL1465-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1503-.Ltext0
+	.4byte	.LVL1504-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1508-.Ltext0
+	.4byte	.LVL1509-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1524-.Ltext0
+	.4byte	.LVL1525-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1536-.Ltext0
+	.4byte	.LVL1537-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST275:
+	.4byte	.LVL1459-.Ltext0
+	.4byte	.LVL1462-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1463-.Ltext0
+	.4byte	.LVL1464-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1509-.Ltext0
+	.4byte	.LVL1510-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1526-.Ltext0
+	.4byte	.LVL1527-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1528-.Ltext0
+	.4byte	.LVL1530-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1545-.Ltext0
+	.4byte	.LVL1546-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1548-.Ltext0
+	.4byte	.LVL1549-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST276:
+	.4byte	.LVL1462-.Ltext0
+	.4byte	.LVL1463-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1475-.Ltext0
+	.4byte	.LVL1501-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1506-.Ltext0
+	.4byte	.LVL1507-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1511-.Ltext0
+	.4byte	.LFE157-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST277:
+	.4byte	.LVL1462-.Ltext0
+	.4byte	.LVL1463-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL1468-.Ltext0
+	.4byte	.LFE157-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST278:
+	.4byte	.LVL1469-.Ltext0
+	.4byte	.LVL1472-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1494-.Ltext0
+	.4byte	.LVL1495-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1521-.Ltext0
+	.4byte	.LVL1522-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1529-.Ltext0
+	.4byte	.LVL1530-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1542-.Ltext0
+	.4byte	.LVL1543-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST279:
+	.4byte	.LVL1462-.Ltext0
+	.4byte	.LVL1463-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 -72
+	.4byte	.LVL1475-.Ltext0
+	.4byte	.LVL1501-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 -72
+	.4byte	.LVL1506-.Ltext0
+	.4byte	.LVL1507-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 -72
+	.4byte	.LVL1511-.Ltext0
+	.4byte	.LVL1532-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 -72
+	.4byte	.LVL1532-.Ltext0
+	.4byte	.LVL1533-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1533-.Ltext0
+	.4byte	.LFE157-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 -72
+	.4byte	0
+	.4byte	0
+.LLST280:
+	.4byte	.LVL1475-.Ltext0
+	.4byte	.LVL1477-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1489-.Ltext0
+	.4byte	.LVL1490-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1492-.Ltext0
+	.4byte	.LVL1494-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1494-.Ltext0
+	.4byte	.LVL1495-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1513-.Ltext0
+	.4byte	.LVL1514-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1517-.Ltext0
+	.4byte	.LVL1518-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1518-.Ltext0
+	.4byte	.LVL1519-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1534-.Ltext0
+	.4byte	.LVL1535-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1549-.Ltext0
+	.4byte	.LVL1550-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1553-.Ltext0
+	.4byte	.LVL1554-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1555-.Ltext0
+	.4byte	.LFE157-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST281:
+	.4byte	.LVL1470-.Ltext0
+	.4byte	.LVL1471-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1471-.Ltext0
+	.4byte	.LVL1473-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1473-.Ltext0
+	.4byte	.LVL1476-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1476-.Ltext0
+	.4byte	.LVL1478-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1486-.Ltext0
+	.4byte	.LVL1487-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1491-.Ltext0
+	.4byte	.LVL1492-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1493-.Ltext0
+	.4byte	.LVL1494-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1501-.Ltext0
+	.4byte	.LVL1502-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1552-.Ltext0
+	.4byte	.LVL1555-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1555-.Ltext0
+	.4byte	.LFE157-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST282:
+	.4byte	.LVL1462-.Ltext0
+	.4byte	.LVL1463-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1474-.Ltext0
+	.4byte	.LVL1483-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1484-.Ltext0
+	.4byte	.LVL1496-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1506-.Ltext0
+	.4byte	.LVL1507-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1511-.Ltext0
+	.4byte	.LFE157-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST227:
+	.4byte	.LVL1191-.Ltext0
+	.4byte	.LVL1195-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1195-1-.Ltext0
+	.4byte	.LVL1196-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1201-.Ltext0
+	.4byte	.LVL1202-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1212-.Ltext0
+	.4byte	.LVL1215-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST228:
+	.4byte	.LVL1191-.Ltext0
+	.4byte	.LVL1195-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1195-1-.Ltext0
+	.4byte	.LVL1215-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST229:
+	.4byte	.LVL1191-.Ltext0
+	.4byte	.LVL1193-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST230:
+	.4byte	.LVL1191-.Ltext0
+	.4byte	.LVL1194-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1194-.Ltext0
+	.4byte	.LVL1215-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST231:
+	.4byte	.LVL1192-.Ltext0
+	.4byte	.LVL1215-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST232:
+	.4byte	.LVL1195-.Ltext0
+	.4byte	.LVL1196-.Ltext0
+	.2byte	0x2
+	.byte	0x71
+	.sleb128 -4
+	.4byte	.LVL1196-.Ltext0
+	.4byte	.LVL1204-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -52
+	.4byte	.LVL1204-.Ltext0
+	.4byte	.LFE155-.Ltext0
+	.2byte	0x2
+	.byte	0x71
+	.sleb128 -4
+	.4byte	0
+	.4byte	0
+.LLST233:
+	.4byte	.LVL1195-.Ltext0
+	.4byte	.LVL1196-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1201-.Ltext0
+	.4byte	.LVL1202-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1206-.Ltext0
+	.4byte	.LVL1207-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1208-.Ltext0
+	.4byte	.LVL1209-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1211-.Ltext0
+	.4byte	.LVL1213-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST254:
+	.4byte	.LVL1387-.Ltext0
+	.4byte	.LVL1389-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1391-.Ltext0
+	.4byte	.LVL1392-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1393-.Ltext0
+	.4byte	.LVL1396-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1453-.Ltext0
+	.4byte	.LFE154-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST255:
+	.4byte	.LVL1387-.Ltext0
+	.4byte	.LVL1391-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1391-.Ltext0
+	.4byte	.LVL1453-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL1453-.Ltext0
+	.4byte	.LFE154-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST256:
+	.4byte	.LVL1387-.Ltext0
+	.4byte	.LVL1388-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1393-.Ltext0
+	.4byte	.LVL1394-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1394-.Ltext0
+	.4byte	.LVL1395-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1420-.Ltext0
+	.4byte	.LVL1422-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST257:
+	.4byte	.LVL1387-.Ltext0
+	.4byte	.LVL1390-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1390-1-.Ltext0
+	.4byte	.LFE154-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST258:
+	.4byte	.LVL1401-.Ltext0
+	.4byte	.LVL1403-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1417-.Ltext0
+	.4byte	.LVL1418-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1437-.Ltext0
+	.4byte	.LVL1438-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1441-.Ltext0
+	.4byte	.LVL1442-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1445-.Ltext0
+	.4byte	.LVL1446-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1449-.Ltext0
+	.4byte	.LVL1450-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST259:
+	.4byte	.LVL1391-.Ltext0
+	.4byte	.LVL1392-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1404-.Ltext0
+	.4byte	.LVL1410-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1412-.Ltext0
+	.4byte	.LVL1413-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1423-.Ltext0
+	.4byte	.LVL1424-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1439-.Ltext0
+	.4byte	.LVL1440-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1441-.Ltext0
+	.4byte	.LVL1442-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1446-.Ltext0
+	.4byte	.LVL1447-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1448-.Ltext0
+	.4byte	.LVL1449-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1450-.Ltext0
+	.4byte	.LVL1451-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1452-.Ltext0
+	.4byte	.LVL1453-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST260:
+	.4byte	.LVL1426-.Ltext0
+	.4byte	.LVL1427-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1428-.Ltext0
+	.4byte	.LVL1429-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST261:
+	.4byte	.LVL1391-.Ltext0
+	.4byte	.LVL1393-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1402-.Ltext0
+	.4byte	.LVL1453-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST262:
+	.4byte	.LVL1391-.Ltext0
+	.4byte	.LVL1393-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -52
+	.4byte	.LVL1407-.Ltext0
+	.4byte	.LVL1453-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -52
+	.4byte	0
+	.4byte	0
+.LLST263:
+	.4byte	.LVL1391-.Ltext0
+	.4byte	.LVL1393-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL1407-.Ltext0
+	.4byte	.LVL1415-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL1433-.Ltext0
+	.4byte	.LVL1445-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL1449-.Ltext0
+	.4byte	.LVL1453-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	0
+	.4byte	0
+.LLST264:
+	.4byte	.LVL1391-.Ltext0
+	.4byte	.LVL1393-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1398-.Ltext0
+	.4byte	.LVL1453-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST265:
+	.4byte	.LVL1405-.Ltext0
+	.4byte	.LVL1406-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1406-.Ltext0
+	.4byte	.LVL1408-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1408-.Ltext0
+	.4byte	.LVL1409-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1412-.Ltext0
+	.4byte	.LVL1414-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1430-.Ltext0
+	.4byte	.LVL1431-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1432-.Ltext0
+	.4byte	.LVL1434-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST266:
+	.4byte	.LVL1420-.Ltext0
+	.4byte	.LVL1421-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1435-.Ltext0
+	.4byte	.LVL1436-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST267:
+	.4byte	.LVL1391-.Ltext0
+	.4byte	.LVL1393-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL1397-.Ltext0
+	.4byte	.LVL1453-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST268:
+	.4byte	.LVL1391-.Ltext0
+	.4byte	.LVL1393-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL1407-.Ltext0
+	.4byte	.LVL1416-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL1425-.Ltext0
+	.4byte	.LVL1433-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	0
+	.4byte	0
+.LLST288:
+	.4byte	.LVL1611-.Ltext0
+	.4byte	.LVL1614-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1628-.Ltext0
+	.4byte	.LVL1630-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1631-.Ltext0
+	.4byte	.LVL1632-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST289:
+	.4byte	.LVL1609-.Ltext0
+	.4byte	.LVL1610-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1619-.Ltext0
+	.4byte	.LVL1621-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1622-.Ltext0
+	.4byte	.LVL1626-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST96:
+	.4byte	.LVL410-.Ltext0
+	.4byte	.LVL412-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL431-.Ltext0
+	.4byte	.LVL434-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL434-.Ltext0
+	.4byte	.LVL435-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST97:
+	.4byte	.LVL410-.Ltext0
+	.4byte	.LVL432-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL434-.Ltext0
+	.4byte	.LFE149-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST98:
+	.4byte	.LVL411-.Ltext0
+	.4byte	.LVL439-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL440-.Ltext0
+	.4byte	.LVL441-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL442-.Ltext0
+	.4byte	.LVL451-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL452-.Ltext0
+	.4byte	.LFE149-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST99:
+	.4byte	.LVL414-.Ltext0
+	.4byte	.LVL415-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL416-.Ltext0
+	.4byte	.LVL417-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL420-.Ltext0
+	.4byte	.LVL421-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL429-.Ltext0
+	.4byte	.LVL430-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST100:
+	.4byte	.LVL419-.Ltext0
+	.4byte	.LVL421-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL421-.Ltext0
+	.4byte	.LVL422-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL424-.Ltext0
+	.4byte	.LVL426-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL427-.Ltext0
+	.4byte	.LVL428-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL428-.Ltext0
+	.4byte	.LVL433-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL434-.Ltext0
+	.4byte	.LVL435-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL444-.Ltext0
+	.4byte	.LVL445-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL449-.Ltext0
+	.4byte	.LVL450-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL454-.Ltext0
+	.4byte	.LVL455-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL456-.Ltext0
+	.4byte	.LFE149-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST101:
+	.4byte	.LVL415-.Ltext0
+	.4byte	.LVL416-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL417-.Ltext0
+	.4byte	.LVL418-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL425-.Ltext0
+	.4byte	.LVL428-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST102:
+	.4byte	.LVL418-.Ltext0
+	.4byte	.LVL419-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST110:
+	.4byte	.LVL514-.Ltext0
+	.4byte	.LVL515-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL517-.Ltext0
+	.4byte	.LVL518-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST11:
+	.4byte	.LVL23-.Ltext0
+	.4byte	.LVL24-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL24-.Ltext0
+	.4byte	.LVL29-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST12:
+	.4byte	.LVL25-.Ltext0
+	.4byte	.LVL26-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST10:
+	.4byte	.LVL21-.Ltext0
+	.4byte	.LVL22-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST9:
+	.4byte	.LVL16-.Ltext0
+	.4byte	.LVL18-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL19-.Ltext0
+	.4byte	.LFE142-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST63:
+	.4byte	.LVL281-.Ltext0
+	.4byte	.LVL282-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL282-1-.Ltext0
+	.4byte	.LFE141-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST60:
+	.4byte	.LVL202-.Ltext0
+	.4byte	.LVL203-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL203-1-.Ltext0
+	.4byte	.LFE140-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST61:
+	.4byte	.LVL274-.Ltext0
+	.4byte	.LVL275-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL276-.Ltext0
+	.4byte	.LVL277-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST62:
+	.4byte	.LVL270-.Ltext0
+	.4byte	.LVL271-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL278-.Ltext0
+	.4byte	.LVL279-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL280-.Ltext0
+	.4byte	.LFE140-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST8:
+	.4byte	.LVL14-.Ltext0
+	.4byte	.LVL15-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST13:
+	.4byte	.LVL33-.Ltext0
+	.4byte	.LVL34-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL35-.Ltext0
+	.4byte	.LVL36-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST36:
+	.4byte	.LVL113-.Ltext0
+	.4byte	.LVL114-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST39:
+	.4byte	.LVL125-.Ltext0
+	.4byte	.LVL126-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST48:
+	.4byte	.LVL157-.Ltext0
+	.4byte	.LVL164-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL164-.Ltext0
+	.4byte	.LFE192-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST49:
+	.4byte	.LVL161-.Ltext0
+	.4byte	.LVL162-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL164-.Ltext0
+	.4byte	.LFE192-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST50:
+	.4byte	.LVL165-.Ltext0
+	.4byte	.LVL168-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL168-1-.Ltext0
+	.4byte	.LFE195-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST51:
+	.4byte	.LVL170-.Ltext0
+	.4byte	.LVL171-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST52:
+	.4byte	.LVL172-.Ltext0
+	.4byte	.LVL173-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL174-.Ltext0
+	.4byte	.LVL175-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST53:
+	.4byte	.LVL172-.Ltext0
+	.4byte	.LVL173-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL174-.Ltext0
+	.4byte	.LVL176-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST68:
+	.4byte	.LVL303-.Ltext0
+	.4byte	.LVL304-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL304-.Ltext0
+	.4byte	.LVL305-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST103:
+	.4byte	.LVL457-.Ltext0
+	.4byte	.LVL458-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL459-.Ltext0
+	.4byte	.LVL460-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL464-.Ltext0
+	.4byte	.LVL465-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST107:
+	.4byte	.LVL477-.Ltext0
+	.4byte	.LVL478-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL478-.Ltext0
+	.4byte	.LFE267-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST108:
+	.4byte	.LVL477-.Ltext0
+	.4byte	.LVL478-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL478-.Ltext0
+	.4byte	.LFE267-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST109:
+	.4byte	.LVL477-.Ltext0
+	.4byte	.LVL478-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL478-.Ltext0
+	.4byte	.LFE267-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST141:
+	.4byte	.LVL640-.Ltext0
+	.4byte	.LVL645-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 -112
+	.4byte	0
+	.4byte	0
+.LLST182:
+	.4byte	.LVL889-.Ltext0
+	.4byte	.LVL891-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL892-.Ltext0
+	.4byte	.LVL893-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL895-.Ltext0
+	.4byte	.LVL896-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST183:
+	.4byte	.LVL890-.Ltext0
+	.4byte	.LVL900-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL901-.Ltext0
+	.4byte	.LFE257-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST184:
+	.4byte	.LVL902-.Ltext0
+	.4byte	.LVL908-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL908-.Ltext0
+	.4byte	.LFE241-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST186:
+	.4byte	.LVL915-.Ltext0
+	.4byte	.LVL925-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST187:
+	.4byte	.LVL916-.Ltext0
+	.4byte	.LVL925-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 -72
+	.4byte	0
+	.4byte	0
+.LLST188:
+	.4byte	.LVL918-.Ltext0
+	.4byte	.LVL919-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL921-.Ltext0
+	.4byte	.LVL925-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST245:
+	.4byte	.LVL1296-.Ltext0
+	.4byte	.LVL1297-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1297-.Ltext0
+	.4byte	.LVL1305-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1311-.Ltext0
+	.4byte	.LVL1313-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST246:
+	.4byte	.LVL1296-.Ltext0
+	.4byte	.LVL1298-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1311-.Ltext0
+	.4byte	.LVL1312-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST247:
+	.4byte	.LVL1306-.Ltext0
+	.4byte	.LVL1307-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1308-.Ltext0
+	.4byte	.LVL1312-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1313-.Ltext0
+	.4byte	.LVL1314-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1315-.Ltext0
+	.4byte	.LVL1319-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1320-.Ltext0
+	.4byte	.LVL1321-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1325-.Ltext0
+	.4byte	.LVL1337-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1338-.Ltext0
+	.4byte	.LVL1367-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1380-.Ltext0
+	.4byte	.LVL1384-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST248:
+	.4byte	.LVL1338-.Ltext0
+	.4byte	.LVL1339-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL1354-.Ltext0
+	.4byte	.LVL1359-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL1365-.Ltext0
+	.4byte	.LVL1366-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST249:
+	.4byte	.LVL1311-.Ltext0
+	.4byte	.LVL1312-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -52
+	.4byte	.LVL1318-.Ltext0
+	.4byte	.LVL1319-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -52
+	.4byte	.LVL1325-.Ltext0
+	.4byte	.LVL1361-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -52
+	.4byte	.LVL1361-.Ltext0
+	.4byte	.LVL1362-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1362-.Ltext0
+	.4byte	.LFE259-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -52
+	.4byte	0
+	.4byte	0
+.LLST250:
+	.4byte	.LVL1338-.Ltext0
+	.4byte	.LVL1340-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1344-.Ltext0
+	.4byte	.LVL1346-.Ltext0
+	.2byte	0x1
+	.byte	0x5e
+	.4byte	.LVL1347-.Ltext0
+	.4byte	.LVL1348-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1349-.Ltext0
+	.4byte	.LVL1352-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1355-.Ltext0
+	.4byte	.LVL1356-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1366-.Ltext0
+	.4byte	.LVL1369-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1371-.Ltext0
+	.4byte	.LVL1373-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1374-.Ltext0
+	.4byte	.LVL1375-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1379-.Ltext0
+	.4byte	.LVL1381-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1384-.Ltext0
+	.4byte	.LVL1385-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST251:
+	.4byte	.LVL1343-.Ltext0
+	.4byte	.LVL1345-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1350-.Ltext0
+	.4byte	.LVL1352-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST252:
+	.4byte	.LVL1334-.Ltext0
+	.4byte	.LVL1335-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1336-.Ltext0
+	.4byte	.LVL1342-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1351-.Ltext0
+	.4byte	.LVL1352-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1366-.Ltext0
+	.4byte	.LVL1368-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1368-.Ltext0
+	.4byte	.LVL1370-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1371-.Ltext0
+	.4byte	.LVL1372-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST253:
+	.4byte	.LVL1311-.Ltext0
+	.4byte	.LVL1312-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL1332-.Ltext0
+	.4byte	.LVL1341-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL1354-.Ltext0
+	.4byte	.LVL1382-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL1384-.Ltext0
+	.4byte	.LFE259-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST287:
+	.4byte	.LVL1591-.Ltext0
+	.4byte	.LVL1592-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1599-.Ltext0
+	.4byte	.LVL1600-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+	.section	.debug_aranges,"",%progbits
+	.4byte	0x1c
+	.2byte	0x2
+	.4byte	.Ldebug_info0
+	.byte	0x4
+	.byte	0
+	.2byte	0
+	.2byte	0
+	.4byte	.Ltext0
+	.4byte	.Letext0-.Ltext0
+	.4byte	0
+	.4byte	0
+	.section	.debug_ranges,"",%progbits
+.Ldebug_ranges0:
+	.4byte	.LBB218-.Ltext0
+	.4byte	.LBE218-.Ltext0
+	.4byte	.LBB221-.Ltext0
+	.4byte	.LBE221-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB227-.Ltext0
+	.4byte	.LBE227-.Ltext0
+	.4byte	.LBB234-.Ltext0
+	.4byte	.LBE234-.Ltext0
+	.4byte	.LBB235-.Ltext0
+	.4byte	.LBE235-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB241-.Ltext0
+	.4byte	.LBE241-.Ltext0
+	.4byte	.LBB248-.Ltext0
+	.4byte	.LBE248-.Ltext0
+	.4byte	.LBB249-.Ltext0
+	.4byte	.LBE249-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB254-.Ltext0
+	.4byte	.LBE254-.Ltext0
+	.4byte	.LBB255-.Ltext0
+	.4byte	.LBE255-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB274-.Ltext0
+	.4byte	.LBE274-.Ltext0
+	.4byte	.LBB277-.Ltext0
+	.4byte	.LBE277-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB294-.Ltext0
+	.4byte	.LBE294-.Ltext0
+	.4byte	.LBB295-.Ltext0
+	.4byte	.LBE295-.Ltext0
+	.4byte	.LBB296-.Ltext0
+	.4byte	.LBE296-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB315-.Ltext0
+	.4byte	.LBE315-.Ltext0
+	.4byte	.LBB320-.Ltext0
+	.4byte	.LBE320-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB321-.Ltext0
+	.4byte	.LBE321-.Ltext0
+	.4byte	.LBB326-.Ltext0
+	.4byte	.LBE326-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB337-.Ltext0
+	.4byte	.LBE337-.Ltext0
+	.4byte	.LBB344-.Ltext0
+	.4byte	.LBE344-.Ltext0
+	.4byte	.LBB345-.Ltext0
+	.4byte	.LBE345-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB353-.Ltext0
+	.4byte	.LBE353-.Ltext0
+	.4byte	.LBB354-.Ltext0
+	.4byte	.LBE354-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB362-.Ltext0
+	.4byte	.LBE362-.Ltext0
+	.4byte	.LBB367-.Ltext0
+	.4byte	.LBE367-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB368-.Ltext0
+	.4byte	.LBE368-.Ltext0
+	.4byte	.LBB369-.Ltext0
+	.4byte	.LBE369-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB376-.Ltext0
+	.4byte	.LBE376-.Ltext0
+	.4byte	.LBB378-.Ltext0
+	.4byte	.LBE378-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB420-.Ltext0
+	.4byte	.LBE420-.Ltext0
+	.4byte	.LBB427-.Ltext0
+	.4byte	.LBE427-.Ltext0
+	.4byte	.LBB428-.Ltext0
+	.4byte	.LBE428-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB429-.Ltext0
+	.4byte	.LBE429-.Ltext0
+	.4byte	.LBB432-.Ltext0
+	.4byte	.LBE432-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB435-.Ltext0
+	.4byte	.LBE435-.Ltext0
+	.4byte	.LBB438-.Ltext0
+	.4byte	.LBE438-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB447-.Ltext0
+	.4byte	.LBE447-.Ltext0
+	.4byte	.LBB448-.Ltext0
+	.4byte	.LBE448-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB451-.Ltext0
+	.4byte	.LBE451-.Ltext0
+	.4byte	.LBB452-.Ltext0
+	.4byte	.LBE452-.Ltext0
+	.4byte	.LBB453-.Ltext0
+	.4byte	.LBE453-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB465-.Ltext0
+	.4byte	.LBE465-.Ltext0
+	.4byte	.LBB470-.Ltext0
+	.4byte	.LBE470-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB497-.Ltext0
+	.4byte	.LBE497-.Ltext0
+	.4byte	.LBB504-.Ltext0
+	.4byte	.LBE504-.Ltext0
+	.4byte	.LBB505-.Ltext0
+	.4byte	.LBE505-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB499-.Ltext0
+	.4byte	.LBE499-.Ltext0
+	.4byte	.LBB500-.Ltext0
+	.4byte	.LBE500-.Ltext0
+	.4byte	.LBB501-.Ltext0
+	.4byte	.LBE501-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB522-.Ltext0
+	.4byte	.LBE522-.Ltext0
+	.4byte	.LBB523-.Ltext0
+	.4byte	.LBE523-.Ltext0
+	.4byte	0
+	.4byte	0
+	.section	.debug_line,"",%progbits
+.Ldebug_line0:
+	.section	.debug_str,"MS",%progbits,1
+.LASF471:
+	.ascii	"recovery_flash_mode\000"
+.LASF47:
+	.ascii	"root_mountflags\000"
+.LASF401:
+	.ascii	"error_phy_page\000"
+.LASF339:
+	.ascii	"gc_ink_free_return_value\000"
+.LASF172:
+	.ascii	"available_pages\000"
+.LASF467:
+	.ascii	"mlc_detected_active_page\000"
+.LASF389:
+	.ascii	"spperBlk\000"
+.LASF14:
+	.ascii	"size_t\000"
+.LASF190:
+	.ascii	"c_ftl_nand_planes_num\000"
+.LASF1:
+	.ascii	"sizetype\000"
+.LASF594:
+	.ascii	"re_try_next_blk\000"
+.LASF24:
+	.ascii	"saved_command_line\000"
+.LASF589:
+	.ascii	"P2V_block_in_plane\000"
+.LASF344:
+	.ascii	"ftl_memcmp\000"
+.LASF217:
+	.ascii	"g_GlobalSysVersion\000"
+.LASF265:
+	.ascii	"g_totle_vendor_block\000"
+.LASF97:
+	.ascii	"BlkNum\000"
+.LASF599:
+	.ascii	"totle_count\000"
+.LASF489:
+	.ascii	"lastWritePage\000"
+.LASF446:
+	.ascii	"ftl_check_vpc\000"
+.LASF356:
+	.ascii	"request\000"
+.LASF327:
+	.ascii	"DeviceCapacity\000"
+.LASF559:
+	.ascii	"List_remove_node\000"
+.LASF136:
+	.ascii	"PowerOnTimes\000"
+.LASF499:
+	.ascii	"FtlLoadEctTbl\000"
+.LASF386:
+	.ascii	"req_read_temp\000"
+.LASF70:
+	.ascii	"plane_per_die\000"
+.LASF59:
+	.ascii	"uint32\000"
+.LASF450:
+	.ascii	"FtlSuperblockPowerLostFix\000"
+.LASF226:
+	.ascii	"gL2pMapInfo\000"
+.LASF502:
+	.ascii	"pMapHeader\000"
+.LASF363:
+	.ascii	"__func__\000"
+.LASF478:
+	.ascii	"prev_ppa_ver\000"
+.LASF87:
+	.ascii	"prev_id\000"
+.LASF104:
+	.ascii	"dump_write_en\000"
+.LASF149:
+	.ascii	"max_erase_count\000"
+.LASF229:
+	.ascii	"req_read\000"
+.LASF396:
+	.ascii	"FtlGcScanTempBlk\000"
+.LASF405:
+	.ascii	"BOPS_EN\000"
+.LASF422:
+	.ascii	"get_new_active_ppa\000"
+.LASF324:
+	.ascii	"g_nand_phy_info\000"
+.LASF404:
+	.ascii	"FtlGcFreeTempBlock\000"
+.LASF252:
+	.ascii	"g_totle_swl_count\000"
+.LASF564:
+	.ascii	"tmp_id\000"
+.LASF95:
+	.ascii	"sign\000"
+.LASF233:
+	.ascii	"req_gc_dst\000"
+.LASF443:
+	.ascii	"FtlSysBlkInit\000"
+.LASF468:
+	.ascii	"lookup_superblock_id\000"
+.LASF142:
+	.ascii	"gc_page_count\000"
+.LASF567:
+	.ascii	"tmp_data_count\000"
+.LASF191:
+	.ascii	"c_ftl_nand_blk_pre_plane\000"
+.LASF76:
+	.ascii	"sec_per_blk\000"
+.LASF371:
+	.ascii	"sftl_gc\000"
+.LASF383:
+	.ascii	"get_new_gc_superblock\000"
+.LASF563:
+	.ascii	"tmp_erase_count\000"
+.LASF425:
+	.ascii	"allocate_new_data_superblock\000"
+.LASF382:
+	.ascii	"gc_next_superblock\000"
+.LASF23:
+	.ascii	"boot_command_line\000"
+.LASF510:
+	.ascii	"FtlUpdateVaildLpn\000"
+.LASF534:
+	.ascii	"update_map_block\000"
+.LASF608:
+	.ascii	"FtlBbmMapBadBlock\000"
+.LASF606:
+	.ascii	"FtlBbtInfoPrint\000"
+.LASF56:
+	.ascii	"hex_asc_upper\000"
+.LASF462:
+	.ascii	"saved_active_page\000"
+.LASF506:
+	.ascii	"re_save_vpndata\000"
+.LASF536:
+	.ascii	"region_num\000"
+.LASF603:
+	.ascii	"re_save_bbmdata\000"
+.LASF623:
+	.ascii	"first_lpa_sctidx\000"
+.LASF21:
+	.ascii	"__security_initcall_start\000"
+.LASF308:
+	.ascii	"g_totle_slc_erase_count\000"
+.LASF597:
+	.ascii	"FtlLoadBbt\000"
+.LASF176:
+	.ascii	"check_en\000"
+.LASF222:
+	.ascii	"g_MaxLbn\000"
+.LASF63:
+	.ascii	"page_addr\000"
+.LASF398:
+	.ascii	"totle_num\000"
+.LASF325:
+	.ascii	"g_nand_ops\000"
+.LASF588:
+	.ascii	"ver2\000"
+.LASF215:
+	.ascii	"c_ftl_nand_max_data_blks\000"
+.LASF214:
+	.ascii	"c_ftl_nand_data_op_blks_per_plane\000"
+.LASF571:
+	.ascii	"FtlFreeSysBlkQueueOut\000"
+.LASF117:
+	.ascii	"ftl_data_blk_header\000"
+.LASF231:
+	.ascii	"req_erase\000"
+.LASF615:
+	.ascii	"num_lpa\000"
+.LASF200:
+	.ascii	"c_ftl_nand_byte_pre_oob\000"
+.LASF511:
+	.ascii	"FtlEctTblFlush\000"
+.LASF121:
+	.ascii	"ftl_sys_blk_header\000"
+.LASF345:
+	.ascii	"ftl_memcpy\000"
+.LASF301:
+	.ascii	"g_totle_read_page_count\000"
+.LASF237:
+	.ascii	"p_sys_data_buf_1\000"
+.LASF45:
+	.ascii	"sysctl_panic_on_stackoverflow\000"
+.LASF203:
+	.ascii	"c_ftl_nand_map_region_num\000"
+.LASF53:
+	.ascii	"SYSTEM_RESTART\000"
+.LASF126:
+	.ascii	"activeFlashMode\000"
+.LASF364:
+	.ascii	"read_req\000"
+.LASF261:
+	.ascii	"p_vendor_block_table\000"
+.LASF148:
+	.ascii	"discard_page_count\000"
+.LASF544:
+	.ascii	"vpcTbl\000"
+.LASF276:
+	.ascii	"g_buffer_superblock\000"
+.LASF10:
+	.ascii	"long int\000"
+.LASF636:
+	.ascii	"create_first_buffer_superblock\000"
+.LASF64:
+	.ascii	"p_data\000"
+.LASF246:
+	.ascii	"c_gc_page_buf_num\000"
+.LASF655:
+	.ascii	"limit\000"
+.LASF515:
+	.ascii	"Index\000"
+.LASF225:
+	.ascii	"gSysFreeQueue\000"
+.LASF145:
+	.ascii	"l2p_write_count\000"
+.LASF622:
+	.ascii	"absolute_sector\000"
+.LASF557:
+	.ascii	"pHead\000"
+.LASF67:
+	.ascii	"nand_phy_info\000"
+.LASF185:
+	.ascii	"c_ftl_nand_type\000"
+.LASF335:
+	.ascii	"FtlUpdateVaildLpnCount\000"
+.LASF352:
+	.ascii	"FlashTestBlk\000"
+.LASF673:
+	.ascii	"__builtin_strcpy\000"
+.LASF291:
+	.ascii	"g_gc_bad_block_gc_index\000"
+.LASF270:
+	.ascii	"p_free_data_block_list_head\000"
+.LASF101:
+	.ascii	"pBlkVpcTbl\000"
+.LASF583:
+	.ascii	"high\000"
+.LASF638:
+	.ascii	"is_sys_blk\000"
+.LASF264:
+	.ascii	"p_vendor_region_ppn_table\000"
+.LASF546:
+	.ascii	"load_l2p_region\000"
+.LASF532:
+	.ascii	"flush_l2p_region\000"
+.LASF38:
+	.ascii	"panic_blink\000"
+.LASF458:
+	.ascii	"num_free_node\000"
+.LASF360:
+	.ascii	"block_size\000"
+.LASF347:
+	.ascii	"pvForm\000"
+.LASF209:
+	.ascii	"c_ftl_vendor_part_size\000"
+.LASF560:
+	.ascii	"pTmp\000"
+.LASF390:
+	.ascii	"FtlGcMarkBadPhyBlk\000"
+.LASF114:
+	.ascii	"ftl_bbt_blk_header\000"
+.LASF444:
+	.ascii	"ftl_scan_all_data\000"
+.LASF354:
+	.ascii	"spare\000"
+.LASF570:
+	.ascii	"INSERT_FREE_LIST\000"
+.LASF55:
+	.ascii	"hex_asc\000"
+.LASF4:
+	.ascii	"signed char\000"
+.LASF299:
+	.ascii	"g_totle_read_sector\000"
+.LASF66:
+	.ascii	"nand_req\000"
+.LASF263:
+	.ascii	"p_vendor_block_ver_table\000"
+.LASF323:
+	.ascii	"gNandPhyInfo\000"
+.LASF484:
+	.ascii	"FtlL2PDataInit\000"
+.LASF523:
+	.ascii	"action\000"
+.LASF406:
+	.ascii	"superblock_id\000"
+.LASF314:
+	.ascii	"g_gc_head_data_block\000"
+.LASF54:
+	.ascii	"system_state\000"
+.LASF621:
+	.ascii	"FtlRead\000"
+.LASF273:
+	.ascii	"g_num_free_superblocks\000"
+.LASF593:
+	.ascii	"pBbtHeader\000"
+.LASF5:
+	.ascii	"unsigned char\000"
+.LASF346:
+	.ascii	"pvTo\000"
+.LASF48:
+	.ascii	"early_boot_irqs_disabled\000"
+.LASF205:
+	.ascii	"c_ftl_nand_vendor_region_num\000"
+.LASF464:
+	.ascii	"next_free_active_plane\000"
+.LASF521:
+	.ascii	"FtlVendorPartWrite\000"
+.LASF49:
+	.ascii	"SYSTEM_BOOTING\000"
+.LASF120:
+	.ascii	"regionId\000"
+.LASF613:
+	.ascii	"start_lpa\000"
+.LASF311:
+	.ascii	"g_in_gc_progress\000"
+.LASF19:
+	.ascii	"__con_initcall_start\000"
+.LASF84:
+	.ascii	"read_page\000"
+.LASF665:
+	.ascii	"GNU C89 6.3.1 20170404 -mlittle-endian -mapcs -mno-"
+	.ascii	"sched-prolog -mabi=aapcs-linux -mno-thumb-interwork"
+	.ascii	" -mfpu=vfp -marm -march=armv7-a -mfloat-abi=soft -m"
+	.ascii	"tune=cortex-a9 -mtls-dialect=gnu -g -Os -std=gnu90 "
+	.ascii	"-p -fno-strict-aliasing -fno-common -fno-PIE -fno-d"
+	.ascii	"warf2-cfi-asm -fno-ipa-sra -funwind-tables -fno-del"
+	.ascii	"ete-null-pointer-checks -fno-stack-protector -fno-o"
+	.ascii	"mit-frame-pointer -fno-optimize-sibling-calls -fno-"
+	.ascii	"var-tracking-assignments -fno-strict-overflow -fno-"
+	.ascii	"merge-all-constants -fmerge-constants -fstack-check"
+	.ascii	"=no -fconserve-stack --param allow-store-data-races"
+	.ascii	"=0\000"
+.LASF432:
+	.ascii	"GetSwlReplaceBlock\000"
+.LASF91:
+	.ascii	"ftl_sys_info\000"
+.LASF159:
+	.ascii	"refresh_start_lpa\000"
+.LASF460:
+	.ascii	"FtlPowerLostRecovery\000"
+.LASF561:
+	.ascii	"insert_free_list\000"
+.LASF13:
+	.ascii	"_Bool\000"
+.LASF461:
+	.ascii	"FtlRecoverySuperblock\000"
+.LASF29:
+	.ascii	"linux_proc_banner\000"
+.LASF430:
+	.ascii	"get_new_id\000"
+.LASF317:
+	.ascii	"g_cur_erase_blk\000"
+.LASF350:
+	.ascii	"table\000"
+.LASF166:
+	.ascii	"value\000"
+.LASF224:
+	.ascii	"gSysInfo\000"
+.LASF375:
+	.ascii	"gc_page_num\000"
+.LASF349:
+	.ascii	"FlashGetBadBlockList\000"
+.LASF90:
+	.ascii	"BbtMap\000"
+.LASF2:
+	.ascii	"char\000"
+.LASF650:
+	.ascii	"FtlSysBlkNumInit\000"
+.LASF659:
+	.ascii	"memset\000"
+.LASF329:
+	.ascii	"TotleReadBufferCount1\000"
+.LASF161:
+	.ascii	"totle_read_sector\000"
+.LASF331:
+	.ascii	"TotleReadBufferCount3\000"
+.LASF628:
+	.ascii	"FtlSysFlush\000"
+.LASF258:
+	.ascii	"p_map_block_ver_table\000"
+.LASF132:
+	.ascii	"bufferPageOffset\000"
+.LASF525:
+	.ascii	"l2p_region_id\000"
+.LASF411:
+	.ascii	"FtlGcUpdatePage\000"
+.LASF437:
+	.ascii	"maxFreeBlockEraseCount\000"
+.LASF643:
+	.ascii	"re_test_next_page\000"
+.LASF43:
+	.ascii	"panic_on_io_nmi\000"
+.LASF426:
+	.ascii	"allocate_data_superblock\000"
+.LASF576:
+	.ascii	"FtlFreeSysBlkQueueIn\000"
+.LASF492:
+	.ascii	"pMapBlkHeader\000"
+.LASF72:
+	.ascii	"blk_per_die\000"
+.LASF330:
+	.ascii	"TotleReadBufferCount2\000"
+.LASF378:
+	.ascii	"num_io\000"
+.LASF585:
+	.ascii	"pagePreBlk\000"
+.LASF130:
+	.ascii	"activePageOffset\000"
+.LASF78:
+	.ascii	"reserved_blk\000"
+.LASF483:
+	.ascii	"FtlLoadMapInfo\000"
+.LASF367:
+	.ascii	"block_index\000"
+.LASF652:
+	.ascii	"FtlPrintInfo\000"
+.LASF481:
+	.ascii	"FtlReUsePrevPpa\000"
+.LASF251:
+	.ascii	"p_swl_mul_table\000"
+.LASF565:
+	.ascii	"insert_data_list\000"
+.LASF646:
+	.ascii	"FtlVariablesInit\000"
+.LASF269:
+	.ascii	"p_data_block_list_table\000"
+.LASF513:
+	.ascii	"ec_mod_count\000"
+.LASF436:
+	.ascii	"pNode\000"
+.LASF305:
+	.ascii	"g_totle_mlc_erase_count\000"
+.LASF586:
+	.ascii	"ftl_cmp_data_ver\000"
+.LASF277:
+	.ascii	"g_gc_temp_superblock\000"
+.LASF262:
+	.ascii	"p_vendor_block_valid_page_count\000"
+.LASF500:
+	.ascii	"FtlScanSysBlk\000"
+.LASF669:
+	.ascii	"l2p_addr_tran\000"
+.LASF310:
+	.ascii	"g_max_erase_count\000"
+.LASF211:
+	.ascii	"c_ftl_nand_init_sys_blks_per_plane\000"
+.LASF183:
+	.ascii	"ftl_gc_page_buffer\000"
+.LASF234:
+	.ascii	"g_req_cache\000"
+.LASF649:
+	.ascii	"FtlConstantsInit\000"
+.LASF452:
+	.ascii	"pages\000"
+.LASF421:
+	.ascii	"update_vpc_list\000"
+.LASF662:
+	.ascii	"rknand_print_hex\000"
+.LASF409:
+	.ascii	"p_gc_page\000"
+.LASF15:
+	.ascii	"elf_hwcap\000"
+.LASF395:
+	.ascii	"Ftl_get_new_temp_ppa\000"
+.LASF137:
+	.ascii	"PowerLostTimes\000"
+.LASF578:
+	.ascii	"blk_Id\000"
+.LASF294:
+	.ascii	"g_gc_merge_free_blk_threshold\000"
+.LASF39:
+	.ascii	"oops_in_progress\000"
+.LASF433:
+	.ascii	"node_id\000"
+.LASF135:
+	.ascii	"cache_write_count\000"
+.LASF260:
+	.ascii	"g_totle_map_block\000"
+.LASF660:
+	.ascii	"printk\000"
+.LASF547:
+	.ascii	"phyAddr\000"
+.LASF187:
+	.ascii	"c_ftl_nand_planes_per_die\000"
+.LASF490:
+	.ascii	"ppnTbl\000"
+.LASF365:
+	.ascii	"FlashReadPages\000"
+.LASF376:
+	.ascii	"gc_blk\000"
+.LASF485:
+	.ascii	"FtlLoadVonderInfo\000"
+.LASF555:
+	.ascii	"List_get_gc_head_node\000"
+.LASF504:
+	.ascii	"pSysHeader\000"
+.LASF181:
+	.ascii	"scr_ppa\000"
+.LASF210:
+	.ascii	"c_ftl_nand_sys_blks_per_plane\000"
+.LASF573:
+	.ascii	"FtlFreeSysBLkSort\000"
+.LASF267:
+	.ascii	"p_l2p_map_buf\000"
+.LASF644:
+	.ascii	"IsBlkInVendorPart\000"
+.LASF600:
+	.ascii	"FtlBbtMemInit\000"
+.LASF245:
+	.ascii	"gp_gc_page_buf_info\000"
+.LASF574:
+	.ascii	"tmp_blk_id\000"
+.LASF168:
+	.ascii	"front\000"
+.LASF236:
+	.ascii	"p_sys_data_buf\000"
+.LASF94:
+	.ascii	"index\000"
+.LASF539:
+	.ascii	"lastMapBlk\000"
+.LASF625:
+	.ascii	"last_lpa_nscts\000"
+.LASF302:
+	.ascii	"g_tmp_data_superblock_id\000"
+.LASF248:
+	.ascii	"gp_ect_tbl_info\000"
+.LASF656:
+	.ascii	"rknand_proc_ftlread\000"
+.LASF543:
+	.ascii	"ftl_free_no_use_map_blk\000"
+.LASF667:
+	.ascii	"/home/ldq/rk-linux/kernel-debug\000"
+.LASF36:
+	.ascii	"atomic_notifier_head\000"
+.LASF385:
+	.ascii	"FtlReadRefresh\000"
+.LASF188:
+	.ascii	"c_ftl_nand_blks_per_die\000"
+.LASF566:
+	.ascii	"node_data_count\000"
+.LASF602:
+	.ascii	"write_count\000"
+.LASF242:
+	.ascii	"p_io_spare_buf\000"
+.LASF480:
+	.ascii	"current_ppa_ver\000"
+.LASF0:
+	.ascii	"long unsigned int\000"
+.LASF174:
+	.ascii	"num_planes\000"
+.LASF122:
+	.ascii	"res32_0\000"
+.LASF123:
+	.ascii	"res32_1\000"
+.LASF434:
+	.ascii	"min_ec_id\000"
+.LASF362:
+	.ascii	"check\000"
+.LASF30:
+	.ascii	"console_printk\000"
+.LASF672:
+	.ascii	"strcpy\000"
+.LASF62:
+	.ascii	"status\000"
+.LASF69:
+	.ascii	"die_num\000"
+.LASF629:
+	.ascii	"sftl_init\000"
+.LASF293:
+	.ascii	"g_gc_free_blk_threshold\000"
+.LASF33:
+	.ascii	"kptr_restrict\000"
+.LASF595:
+	.ascii	"FtlLoadFactoryBbt\000"
+.LASF408:
+	.ascii	"scan_page_num\000"
+.LASF150:
+	.ascii	"min_erase_count\000"
+.LASF186:
+	.ascii	"c_ftl_nand_die_num\000"
+.LASF307:
+	.ascii	"g_min_erase_count\000"
+.LASF482:
+	.ascii	"ftl_sb_update_avl_pages\000"
+.LASF106:
+	.ascii	"region_id\000"
+.LASF632:
+	.ascii	"ftl_low_format\000"
+.LASF343:
+	.ascii	"str2\000"
+.LASF96:
+	.ascii	"maxRegion\000"
+.LASF326:
+	.ascii	"ftl_temp_buf\000"
+.LASF162:
+	.ascii	"progErrorCount\000"
+.LASF524:
+	.ascii	"ram_region_id\000"
+.LASF336:
+	.ascii	"check_vpc_table\000"
+.LASF454:
+	.ascii	"FtlGcPageRecovery\000"
+.LASF31:
+	.ascii	"printk_delay_msec\000"
+.LASF494:
+	.ascii	"ftl_get_blk_mode\000"
+.LASF28:
+	.ascii	"linux_banner\000"
+.LASF664:
+	.ascii	"sprintf\000"
+.LASF109:
+	.ascii	"ftl_ect_tbl_info\000"
+.LASF541:
+	.ascii	"ftl_map_blk_alloc_new_blk\000"
+.LASF514:
+	.ascii	"FtlVendorPartRead\000"
+.LASF612:
+	.ascii	"FtlWrite\000"
+.LASF75:
+	.ascii	"sec_per_page\000"
+.LASF71:
+	.ascii	"blk_per_plane\000"
+.LASF402:
+	.ascii	"ReInit\000"
+.LASF519:
+	.ascii	"result\000"
+.LASF100:
+	.ascii	"pBlkVerTbl\000"
+.LASF451:
+	.ascii	"req_temp\000"
+.LASF118:
+	.ascii	"lastPpa\000"
+.LASF322:
+	.ascii	"g_power_lost_recovery_flag\000"
+.LASF604:
+	.ascii	"FtlBbt2Bitmap\000"
+.LASF73:
+	.ascii	"page_per_blk\000"
+.LASF473:
+	.ascii	"recovery_super_page\000"
+.LASF313:
+	.ascii	"g_ftl_nand_free_count\000"
+.LASF369:
+	.ascii	"die_index\000"
+.LASF416:
+	.ascii	"numREQ\000"
+.LASF79:
+	.ascii	"ecc_bits\000"
+.LASF634:
+	.ascii	"sys_bad_block_cnt\000"
+.LASF196:
+	.ascii	"c_ftl_nand_page_pre_super_blk\000"
+.LASF178:
+	.ascii	"reversed\000"
+.LASF403:
+	.ascii	"read_super_page\000"
+.LASF40:
+	.ascii	"panic_timeout\000"
+.LASF128:
+	.ascii	"gcTempFlashMode\000"
+.LASF296:
+	.ascii	"g_totle_gc_page_count\000"
+.LASF238:
+	.ascii	"p_vendor_data_buf\000"
+.LASF601:
+	.ascii	"FtlBbmTblFlush\000"
+.LASF568:
+	.ascii	"tmp_multiplier_value\000"
+.LASF661:
+	.ascii	"__memzero\000"
+.LASF407:
+	.ascii	"lookup_ppa\000"
+.LASF8:
+	.ascii	"long long int\000"
+.LASF306:
+	.ascii	"g_totle_avg_erase_count\000"
+.LASF216:
+	.ascii	"ftl_gc_temp_power_lost_recovery_flag\000"
+.LASF552:
+	.ascii	"prev_valid_page_count\000"
+.LASF388:
+	.ascii	"FtlGcFreeBadSuperBlk\000"
+.LASF11:
+	.ascii	"__kernel_size_t\000"
+.LASF223:
+	.ascii	"gBbtInfo\000"
+.LASF227:
+	.ascii	"gVendorBlkInfo\000"
+.LASF423:
+	.ascii	"p_superblock\000"
+.LASF271:
+	.ascii	"p_data_block_list_head\000"
+.LASF476:
+	.ascii	"last_page_version\000"
+.LASF232:
+	.ascii	"req_gc\000"
+.LASF611:
+	.ascii	"FtlDiscard\000"
+.LASF37:
+	.ascii	"panic_notifier_list\000"
+.LASF288:
+	.ascii	"g_gc_next_blk\000"
+.LASF387:
+	.ascii	"add_count\000"
+.LASF155:
+	.ascii	"inkDie_write_and_check_en\000"
+.LASF582:
+	.ascii	"FtlGetLastWrittenPage\000"
+.LASF466:
+	.ascii	"detected_active_page\000"
+.LASF284:
+	.ascii	"g_gc_blk_num\000"
+.LASF25:
+	.ascii	"reset_devices\000"
+.LASF158:
+	.ascii	"refresh_enable_mode\000"
+.LASF607:
+	.ascii	"FtlBbmIsBadBlock\000"
+.LASF177:
+	.ascii	"dump_writed\000"
+.LASF392:
+	.ascii	"FtlGcRefreshBlock\000"
+.LASF89:
+	.ascii	"fBbtBlk\000"
+.LASF537:
+	.ascii	"blkTbl\000"
+.LASF381:
+	.ascii	"p_dataHeader\000"
+.LASF463:
+	.ascii	"saved_active_plane\000"
+.LASF127:
+	.ascii	"bufferFlashMode\000"
+.LASF115:
+	.ascii	"count\000"
+.LASF134:
+	.ascii	"gcTempPageOffset\000"
+.LASF359:
+	.ascii	"addr\000"
+.LASF140:
+	.ascii	"GlobalSysVersion\000"
+.LASF412:
+	.ascii	"src_ppa\000"
+.LASF558:
+	.ascii	"List_pop_index_node\000"
+.LASF274:
+	.ascii	"g_num_data_superblocks\000"
+.LASF448:
+	.ascii	"error_flag\000"
+.LASF666:
+	.ascii	"drivers/rkflash/rksftl/rk_sftl.c\000"
+.LASF312:
+	.ascii	"g_in_swl_replace\000"
+.LASF170:
+	.ascii	"ftl_superblock_info\000"
+.LASF3:
+	.ascii	"unsigned int\000"
+.LASF99:
+	.ascii	"pBlkTbl\000"
+.LASF169:
+	.ascii	"rear\000"
+.LASF193:
+	.ascii	"c_ftl_nand_bbm_buf_size\000"
+.LASF220:
+	.ascii	"g_MaxLpn\000"
+.LASF542:
+	.ascii	"blk_index\000"
+.LASF457:
+	.ascii	"num_data_node\000"
+.LASF51:
+	.ascii	"SYSTEM_HALT\000"
+.LASF292:
+	.ascii	"g_gc_bad_block_temp_tbl\000"
+.LASF34:
+	.ascii	"kmsg_fops\000"
+.LASF569:
+	.ascii	"INSERT_DATA_LIST\000"
+.LASF616:
+	.ascii	"sctidx\000"
+.LASF391:
+	.ascii	"superBlk\000"
+.LASF184:
+	.ascii	"flag\000"
+.LASF285:
+	.ascii	"g_gc_page_offset\000"
+.LASF642:
+	.ascii	"test_mode\000"
+.LASF300:
+	.ascii	"g_totle_discard_page_count\000"
+.LASF218:
+	.ascii	"g_GlobalDataVersion\000"
+.LASF653:
+	.ascii	"debug_flag\000"
+.LASF328:
+	.ascii	"gFtlInitStatus\000"
+.LASF531:
+	.ascii	"hit_count\000"
+.LASF83:
+	.ascii	"prog_page\000"
+.LASF131:
+	.ascii	"bufferSuperblockId\000"
+.LASF493:
+	.ascii	"FtlLoadSysInfo\000"
+.LASF156:
+	.ascii	"readErrorCount\000"
+.LASF173:
+	.ascii	"current_plane\000"
+.LASF400:
+	.ascii	"page_count\000"
+.LASF278:
+	.ascii	"g_gc_superblock\000"
+.LASF275:
+	.ascii	"g_active_superblock\000"
+.LASF518:
+	.ascii	"offset\000"
+.LASF253:
+	.ascii	"p_valid_page_count_table\000"
+.LASF198:
+	.ascii	"c_ftl_nand_sec_pre_page_shift\000"
+.LASF27:
+	.ascii	"initcall_debug\000"
+.LASF393:
+	.ascii	"block\000"
+.LASF355:
+	.ascii	"FlashEraseBlocks\000"
+.LASF86:
+	.ascii	"page\000"
+.LASF414:
+	.ascii	"IsBlkInGcList\000"
+.LASF342:
+	.ascii	"str1\000"
+.LASF68:
+	.ascii	"nand_type\000"
+.LASF617:
+	.ascii	"nscts\000"
+.LASF105:
+	.ascii	"ftl_l2p_ram_map_info\000"
+.LASF298:
+	.ascii	"g_totle_write_sector\000"
+.LASF447:
+	.ascii	"prev_ppa\000"
+.LASF81:
+	.ascii	"get_bad_blk_list\000"
+.LASF297:
+	.ascii	"g_totle_write_page_count\000"
+.LASF647:
+	.ascii	"FtlMemInit\000"
+.LASF304:
+	.ascii	"g_totle_l2p_write_count\000"
+.LASF590:
+	.ascii	"P2V_plane\000"
+.LASF12:
+	.ascii	"bool\000"
+.LASF257:
+	.ascii	"p_map_block_valid_page_count\000"
+.LASF340:
+	.ascii	"check_buf\000"
+.LASF562:
+	.ascii	"node_erase_count\000"
+.LASF556:
+	.ascii	"List_pop_head_node\000"
+.LASF146:
+	.ascii	"slc_erase_count\000"
+.LASF545:
+	.ascii	"minValidPageCount\000"
+.LASF645:
+	.ascii	"ven_blk\000"
+.LASF194:
+	.ascii	"c_ftl_nand_page_pre_blk\000"
+.LASF108:
+	.ascii	"L2PMap\000"
+.LASF348:
+	.ascii	"size\000"
+.LASF548:
+	.ascii	"List_update_data_list\000"
+.LASF309:
+	.ascii	"g_totle_sys_slc_erase_count\000"
+.LASF125:
+	.ascii	"maxDieNum\000"
+.LASF247:
+	.ascii	"g_gc_num_req\000"
+.LASF92:
+	.ascii	"maxLogicBlk\000"
+.LASF151:
+	.ascii	"totle_power_on_run_times\000"
+.LASF522:
+	.ascii	"log2phys\000"
+.LASF470:
+	.ascii	"detected_error_page\000"
+.LASF584:
+	.ascii	"spareBuf\000"
+.LASF189:
+	.ascii	"c_ftl_nand_blks_per_die_shift\000"
+.LASF141:
+	.ascii	"ftl_sys_ext_info\000"
+.LASF266:
+	.ascii	"p_l2p_ram_map\000"
+.LASF98:
+	.ascii	"maxBlkNum\000"
+.LASF663:
+	.ascii	"ftl_malloc\000"
+.LASF445:
+	.ascii	"pDataHeader\000"
+.LASF171:
+	.ascii	"current_page\000"
+.LASF82:
+	.ascii	"erase_blk\000"
+.LASF456:
+	.ascii	"SupperBlkListInit\000"
+.LASF635:
+	.ascii	"create_first_active_superblock\000"
+.LASF167:
+	.ascii	"sys_blk_queue\000"
+.LASF35:
+	.ascii	"file_operations\000"
+.LASF361:
+	.ascii	"FlashProgPages\000"
+.LASF520:
+	.ascii	"ppn_index\000"
+.LASF9:
+	.ascii	"long long unsigned int\000"
+.LASF221:
+	.ascii	"g_VaildLpn\000"
+.LASF250:
+	.ascii	"p_erase_count_table\000"
+.LASF529:
+	.ascii	"select_l2p_ram_region\000"
+.LASF439:
+	.ascii	"GetFreeBlockMaxEraseCount\000"
+.LASF553:
+	.ascii	"prev_multiplier_value\000"
+.LASF22:
+	.ascii	"__security_initcall_end\000"
+.LASF41:
+	.ascii	"panic_on_oops\000"
+.LASF268:
+	.ascii	"g_l2p_last_update_region_id\000"
+.LASF202:
+	.ascii	"c_ftl_nand_totle_phy_blks\000"
+.LASF637:
+	.ascii	"FtlLowFormatEraseBlock\000"
+.LASF77:
+	.ascii	"byte_per_sec\000"
+.LASF182:
+	.ascii	"des_ppa\000"
+.LASF256:
+	.ascii	"p_map_block_table\000"
+.LASF17:
+	.ascii	"soc_mb\000"
+.LASF549:
+	.ascii	"prev_node_id\000"
+.LASF244:
+	.ascii	"p_gc_data_buf\000"
+.LASF533:
+	.ascii	"FtlMapWritePage\000"
+.LASF16:
+	.ascii	"elf_hwcap2\000"
+.LASF255:
+	.ascii	"p_blk_mode_table\000"
+.LASF286:
+	.ascii	"g_gc_cur_blk_valid_pages\000"
+.LASF580:
+	.ascii	"FtlFreeSysBlkQueueEmpty\000"
+.LASF195:
+	.ascii	"c_ftl_nand_page_pre_slc_blk\000"
+.LASF516:
+	.ascii	"nSec\000"
+.LASF598:
+	.ascii	"FtlBbtCalcTotleCnt\000"
+.LASF197:
+	.ascii	"c_ftl_nand_sec_pre_page\000"
+.LASF496:
+	.ascii	"FtlSlcSuperblockCheck\000"
+.LASF587:
+	.ascii	"ver1\000"
+.LASF154:
+	.ascii	"SlcPartLbaEndSector\000"
+.LASF207:
+	.ascii	"c_ftl_nand_max_map_blks\000"
+.LASF498:
+	.ascii	"FtlGcReFreshBadBlk\000"
+.LASF477:
+	.ascii	"last_mlc_page_version\000"
+.LASF509:
+	.ascii	"FtlMapBlkWriteDump_data\000"
+.LASF249:
+	.ascii	"g_ect_tbl_info_size\000"
+.LASF111:
+	.ascii	"totleEc\000"
+.LASF441:
+	.ascii	"GetFreeBlockMinEraseCount\000"
+.LASF438:
+	.ascii	"minDataBlockEraseCount\000"
+.LASF52:
+	.ascii	"SYSTEM_POWER_OFF\000"
+.LASF219:
+	.ascii	"g_MaxLbaSector\000"
+.LASF88:
+	.ascii	"version\000"
+.LASF32:
+	.ascii	"dmesg_restrict\000"
+.LASF465:
+	.ascii	"next_free_active_page\000"
+.LASF133:
+	.ascii	"gcTempSuperblockId\000"
+.LASF624:
+	.ascii	"first_lpa_nscts\000"
+.LASF303:
+	.ascii	"g_totle_cache_write_count\000"
+.LASF497:
+	.ascii	"ftl_set_blk_mode\000"
+.LASF453:
+	.ascii	"Ftl_load_ext_data\000"
+.LASF507:
+	.ascii	"FtlWriteDump_data\000"
+.LASF639:
+	.ascii	"max_test_page_num\000"
+.LASF394:
+	.ascii	"Ftl_gc_temp_data_write_back\000"
+.LASF370:
+	.ascii	"block_in_die\000"
+.LASF419:
+	.ascii	"FtlGcBufInit\000"
+.LASF235:
+	.ascii	"p_plane_order_table\000"
+.LASF102:
+	.ascii	"pMapPpnTbl\000"
+.LASF431:
+	.ascii	"free_data_superblock\000"
+.LASF147:
+	.ascii	"sys_slc_erase_count\000"
+.LASF208:
+	.ascii	"c_ftl_nand_max_vendor_blks\000"
+.LASF379:
+	.ascii	"physical_block\000"
+.LASF449:
+	.ascii	"FtlVpcCheckAndModify\000"
+.LASF280:
+	.ascii	"g_sys_save_data\000"
+.LASF85:
+	.ascii	"ftl_bbt_info\000"
+.LASF429:
+	.ascii	"free_blk_index\000"
+.LASF254:
+	.ascii	"p_valid_page_count_check_table\000"
+.LASF213:
+	.ascii	"c_ftl_nand_data_blks_per_plane\000"
+.LASF372:
+	.ascii	"rk_ftl_garbage_collect\000"
+.LASF658:
+	.ascii	"memcmp\000"
+.LASF374:
+	.ascii	"numPages\000"
+.LASF315:
+	.ascii	"g_gc_head_data_block_count\000"
+.LASF259:
+	.ascii	"p_map_region_ppn_table\000"
+.LASF528:
+	.ascii	"l2p_flush\000"
+.LASF459:
+	.ascii	"make_superblock\000"
+.LASF20:
+	.ascii	"__con_initcall_end\000"
+.LASF633:
+	.ascii	"bad_block_cnt\000"
+.LASF551:
+	.ascii	"node_multiplier_value\000"
+.LASF334:
+	.ascii	"g_ect_tbl_power_up_flush\000"
+.LASF320:
+	.ascii	"g_recovery_ppa_tbl\000"
+.LASF527:
+	.ascii	"found_lpa\000"
+.LASF281:
+	.ascii	"g_sys_ext_data\000"
+.LASF357:
+	.ascii	"flash_type\000"
+.LASF417:
+	.ascii	"req_num\000"
+.LASF512:
+	.ascii	"forceFlush\000"
+.LASF57:
+	.ascii	"uint8\000"
+.LASF333:
+	.ascii	"power_up_flag\000"
+.LASF283:
+	.ascii	"p_gc_blk_tbl\000"
+.LASF415:
+	.ascii	"FtlGcBufAlloc\000"
+.LASF192:
+	.ascii	"c_ftl_nand_ext_blk_pre_plane\000"
+.LASF380:
+	.ascii	"max_gc_page_num\000"
+.LASF199:
+	.ascii	"c_ftl_nand_byte_pre_page\000"
+.LASF442:
+	.ascii	"update_multiplier_value\000"
+.LASF620:
+	.ascii	"flashType\000"
+.LASF6:
+	.ascii	"short int\000"
+.LASF243:
+	.ascii	"p_gc_spare_buf\000"
+.LASF495:
+	.ascii	"sblk\000"
+.LASF373:
+	.ascii	"mode\000"
+.LASF427:
+	.ascii	"new_id\000"
+.LASF630:
+	.ascii	"pNand\000"
+.LASF50:
+	.ascii	"SYSTEM_RUNNING\000"
+.LASF517:
+	.ascii	"pBuf\000"
+.LASF143:
+	.ascii	"write_page_count\000"
+.LASF605:
+	.ascii	"bitmap\000"
+.LASF201:
+	.ascii	"c_ftl_nand_reserved_blks\000"
+.LASF670:
+	.ascii	"sftl_get_density\000"
+.LASF641:
+	.ascii	"test_page_step\000"
+.LASF596:
+	.ascii	"blkAddr\000"
+.LASF287:
+	.ascii	"g_gc_cur_blk_max_valid_pages\000"
+.LASF289:
+	.ascii	"g_gc_next_blk_1\000"
+.LASF530:
+	.ascii	"target_region\000"
+.LASF614:
+	.ascii	"end_lpa\000"
+.LASF474:
+	.ascii	"scan_completed\000"
+.LASF657:
+	.ascii	"FtlPrintInfo2buf\000"
+.LASF366:
+	.ascii	"p_die\000"
+.LASF240:
+	.ascii	"p_io_data_buf_0\000"
+.LASF241:
+	.ascii	"p_io_data_buf_1\000"
+.LASF138:
+	.ascii	"mlc_erase_count\000"
+.LASF179:
+	.ascii	"phyBlk\000"
+.LASF627:
+	.ascii	"sftl_deinit\000"
+.LASF487:
+	.ascii	"pMapBlockInfo\000"
+.LASF152:
+	.ascii	"last_refresh_data_times\000"
+.LASF668:
+	.ascii	"system_states\000"
+.LASF160:
+	.ascii	"totle_write_sector\000"
+.LASF230:
+	.ascii	"req_prgm\000"
+.LASF592:
+	.ascii	"FtlMakeBbt\000"
+.LASF103:
+	.ascii	"in_gc_mode\000"
+.LASF435:
+	.ascii	"min_ec\000"
+.LASF61:
+	.ascii	"int16\000"
+.LASF282:
+	.ascii	"p_gc_page_info\000"
+.LASF212:
+	.ascii	"c_ftl_nand_max_sys_blks\000"
+.LASF440:
+	.ascii	"max_ec\000"
+.LASF239:
+	.ascii	"p_sys_spare_buf\000"
+.LASF671:
+	.ascii	"memcpy\000"
+.LASF505:
+	.ascii	"prog_error_count\000"
+.LASF337:
+	.ascii	"gc_discard_updated\000"
+.LASF413:
+	.ascii	"prev_superblock_id\000"
+.LASF640:
+	.ascii	"test_page_num\000"
+.LASF157:
+	.ascii	"last_refresh_read_count\000"
+.LASF479:
+	.ascii	"lookup_ppa_ver\000"
+.LASF491:
+	.ascii	"totleBlkNum\000"
+.LASF610:
+	.ascii	"sftl_read\000"
+.LASF579:
+	.ascii	"FtlFreeSysBlkQueueFull\000"
+.LASF410:
+	.ascii	"FtlGcPageVarInit\000"
+.LASF113:
+	.ascii	"padding\000"
+.LASF175:
+	.ascii	"flash_mode\000"
+.LASF469:
+	.ascii	"recovery_cur_page_ver\000"
+.LASF538:
+	.ascii	"ftl_map_blk_gc\000"
+.LASF609:
+	.ascii	"sftl_write\000"
+.LASF119:
+	.ascii	"ftl_map_blk_header\000"
+.LASF581:
+	.ascii	"FtlFreeSysBlkQueueInit\000"
+.LASF26:
+	.ascii	"late_time_init\000"
+.LASF648:
+	.ascii	"mem_size\000"
+.LASF486:
+	.ascii	"FtlMapTblRecovery\000"
+.LASF424:
+	.ascii	"new_ppa\000"
+.LASF428:
+	.ascii	"num_bad_block\000"
+.LASF526:
+	.ascii	"lpn_index\000"
+.LASF204:
+	.ascii	"c_ftl_nand_l2pmap_ram_region_num\000"
+.LASF626:
+	.ascii	"sector\000"
+.LASF508:
+	.ascii	"num_page\000"
+.LASF619:
+	.ascii	"FtlProgPages\000"
+.LASF418:
+	.ascii	"FtlGcBufFree\000"
+.LASF272:
+	.ascii	"p_data_block_list_tail\000"
+.LASF399:
+	.ascii	"current_ppa\000"
+.LASF65:
+	.ascii	"p_spare\000"
+.LASF384:
+	.ascii	"tmp_blk\000"
+.LASF295:
+	.ascii	"g_gc_blk_index\000"
+.LASF501:
+	.ascii	"block_in_plane\000"
+.LASF112:
+	.ascii	"lastEc\000"
+.LASF353:
+	.ascii	"PhyBlk\000"
+.LASF107:
+	.ascii	"reserved\000"
+.LASF318:
+	.ascii	"g_recovery_page_num\000"
+.LASF550:
+	.ascii	"node_valid_page_count\000"
+.LASF180:
+	.ascii	"ftl_gc_page_item\000"
+.LASF144:
+	.ascii	"read_page_count\000"
+.LASF420:
+	.ascii	"decrement_vpc_count\000"
+.LASF7:
+	.ascii	"short unsigned int\000"
+.LASF540:
+	.ascii	"minValidPageIndex\000"
+.LASF332:
+	.ascii	"TotleReadBufferMatchCount\000"
+.LASF341:
+	.ascii	"check_spare_buf\000"
+.LASF575:
+	.ascii	"tmp_ec\000"
+.LASF316:
+	.ascii	"g_gc_skip_write_count\000"
+.LASF60:
+	.ascii	"int32\000"
+.LASF74:
+	.ascii	"page_per_slc_blk\000"
+.LASF319:
+	.ascii	"g_recovery_page_min_ver\000"
+.LASF228:
+	.ascii	"req_sys\000"
+.LASF163:
+	.ascii	"List_Node\000"
+.LASF654:
+	.ascii	"Ftl_log2\000"
+.LASF153:
+	.ascii	"all_blk_used_slc_mode\000"
+.LASF397:
+	.ascii	"pSuperblock\000"
+.LASF475:
+	.ascii	"function_exit\000"
+.LASF206:
+	.ascii	"c_ftl_nand_map_blks_per_plane\000"
+.LASF18:
+	.ascii	"initcall_t\000"
+.LASF591:
+	.ascii	"V2P_block\000"
+.LASF116:
+	.ascii	"sysBlksPerPlane\000"
+.LASF455:
+	.ascii	"Ftl_save_ext_data\000"
+.LASF618:
+	.ascii	"FtlCacheWriteBack\000"
+.LASF80:
+	.ascii	"nand_ops\000"
+.LASF631:
+	.ascii	"load_bbt\000"
+.LASF651:
+	.ascii	"blkNum\000"
+.LASF368:
+	.ascii	"page_index\000"
+.LASF503:
+	.ascii	"FtlVpcTblFlush\000"
+.LASF110:
+	.ascii	"hash\000"
+.LASF572:
+	.ascii	"IsInFreeQueue\000"
+.LASF472:
+	.ascii	"read_super_page_end\000"
+.LASF358:
+	.ascii	"num_req\000"
+.LASF321:
+	.ascii	"c_mlc_erase_count_value\000"
+.LASF554:
+	.ascii	"pPrev\000"
+.LASF139:
+	.ascii	"GlobalDataVersion\000"
+.LASF42:
+	.ascii	"panic_on_unrecovered_nmi\000"
+.LASF164:
+	.ascii	"next\000"
+.LASF129:
+	.ascii	"activeSuperblockId\000"
+.LASF377:
+	.ascii	"plane\000"
+.LASF44:
+	.ascii	"panic_on_warn\000"
+.LASF93:
+	.ascii	"ftl_l2p_map_info\000"
+.LASF165:
+	.ascii	"prev\000"
+.LASF58:
+	.ascii	"uint16\000"
+.LASF351:
+	.ascii	"ftl_memset\000"
+.LASF535:
+	.ascii	"Ftl_write_map_blk_to_last_page\000"
+.LASF46:
+	.ascii	"crash_kexec_post_notifiers\000"
+.LASF290:
+	.ascii	"g_gc_bad_block_temp_num\000"
+.LASF124:
+	.ascii	"ftl_sys_save_info\000"
+.LASF279:
+	.ascii	"gp_last_act_superblock\000"
+.LASF577:
+	.ascii	"erase_flag\000"
+.LASF488:
+	.ascii	"blk_id\000"
+.LASF338:
+	.ascii	"ftl_gc_temp_block_bops_scan_page_addr\000"
diff --git a/drivers/rkflash/rk_sftl_arm_v7_thumb.S b/drivers/rkflash/rk_sftl_arm_v7_thumb.S
new file mode 100644
index 000000000000..e5169e347019
--- /dev/null
+++ b/drivers/rkflash/rk_sftl_arm_v7_thumb.S
@@ -0,0 +1,41577 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+/*
+ * Copyright (c) 2018 Rockchip Electronics Co. Ltd.
+ * date: 2018-06-13
+ */
+	.arch armv7-a
+	.eabi_attribute 20, 1
+	.eabi_attribute 21, 1
+	.eabi_attribute 23, 3
+	.eabi_attribute 24, 1
+	.eabi_attribute 25, 1
+	.eabi_attribute 26, 2
+	.eabi_attribute 30, 4
+	.eabi_attribute 34, 1
+	.eabi_attribute 18, 4
+	.file	"rk_sftl.c"
+	.text
+.Ltext0:
+	.global	__aeabi_uidiv
+	.align	1
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	l2p_addr_tran, %function
+l2p_addr_tran:
+	.fnstart
+.LFB271:
+	.file 1 "drivers/rkflash/rksftl/sftl_flash.c"
+	.loc 1 18 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL0:
+	push	{r3, r4, r5, r6, r7, r8, r9, lr}
+	.save {r3, r4, r5, r6, r7, r8, r9, lr}
+.LCFI0:
+	.loc 1 18 0
+	mov	r8, r1
+	.loc 1 25 0
+	ldr	r3, .L3
+	.loc 1 18 0
+	mov	r9, r2
+	.loc 1 32 0
+	ldr	r6, [r0, #4]
+.LVL1:
+	.loc 1 25 0
+	ldrh	r4, [r3, #8]
+.LVL2:
+	.loc 1 26 0
+	ldrh	r5, [r3, #10]
+.LVL3:
+	.loc 1 27 0
+	ldrh	r3, [r3, #14]
+	.loc 1 33 0
+	lsrs	r7, r6, #10
+	.loc 1 37 0
+	ubfx	r6, r6, #0, #10
+.LVL4:
+	.loc 1 27 0
+	cmp	r3, #4
+	.loc 1 34 0
+	uxth	r0, r7
+.LVL5:
+	.loc 1 28 0
+	itt	eq
+	lsreq	r4, r4, #1
+	.loc 1 29 0
+	lsleq	r5, r5, #1
+.LVL6:
+	.loc 1 35 0
+	uxth	r7, r7
+	.loc 1 34 0
+	mov	r1, r4
+.LVL7:
+	.loc 1 29 0
+	it	eq
+	uxtheq	r5, r5
+.LVL8:
+	.loc 1 34 0
+	bl	__aeabi_uidiv
+.LVL9:
+	uxth	r0, r0
+.LVL10:
+	.loc 1 35 0
+	mls	r4, r0, r4, r7
+.LVL11:
+	.loc 1 37 0
+	mla	r4, r5, r4, r6
+.LVL12:
+	str	r4, [r8]
+	.loc 1 38 0
+	str	r0, [r9]
+	.loc 1 41 0
+	movs	r0, #0
+.LVL13:
+	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
+.LVL14:
+.L4:
+	.align	2
+.L3:
+	.word	g_nand_phy_info
+.LFE271:
+	.fnend
+	.size	l2p_addr_tran, .-l2p_addr_tran
+	.align	1
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	ftl_set_blk_mode.part.6, %function
+ftl_set_blk_mode.part.6:
+	.fnstart
+.LFB286:
+	.file 2 "drivers/rkflash/rksftl/sftl_sys.c"
+	.loc 2 1346 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+.LVL15:
+	.loc 2 1349 0
+	ldr	r3, .L6
+	lsrs	r1, r0, #5
+	and	r0, r0, #31
+.LVL16:
+	ldr	r2, [r3]
+	movs	r3, #1
+	lsl	r0, r3, r0
+	ldr	r3, [r2, r1, lsl #2]
+	orrs	r3, r3, r0
+	str	r3, [r2, r1, lsl #2]
+	bx	lr
+.L7:
+	.align	2
+.L6:
+	.word	.LANCHOR0
+.LFE286:
+	.fnend
+	.size	ftl_set_blk_mode.part.6, .-ftl_set_blk_mode.part.6
+	.align	1
+	.global	Ftl_log2
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	Ftl_log2, %function
+Ftl_log2:
+	.fnstart
+.LFB152:
+	.file 3 "drivers/rkflash/rksftl/sftl_plat.c"
+	.loc 3 128 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+.LVL17:
+	.loc 3 132 0
+	movs	r1, #0
+	.loc 3 130 0
+	movs	r2, #1
+.LVL18:
+.L9:
+	.loc 3 132 0 discriminator 1
+	cmp	r2, r0
+	uxth	r3, r1
+	add	r1, r1, #1
+	bls	.L10
+	.loc 3 134 0
+	subs	r0, r3, #1
+.LVL19:
+	.loc 3 136 0
+	uxth	r0, r0
+	bx	lr
+.LVL20:
+.L10:
+	.loc 3 133 0 discriminator 3
+	lsls	r2, r2, #1
+	b	.L9
+.LFE152:
+	.fnend
+	.size	Ftl_log2, .-Ftl_log2
+	.align	1
+	.global	FtlPrintInfo
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlPrintInfo, %function
+FtlPrintInfo:
+	.fnstart
+.LFB153:
+	.loc 3 159 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+.LVL21:
+	bx	lr
+.LFE153:
+	.fnend
+	.size	FtlPrintInfo, .-FtlPrintInfo
+	.align	1
+	.global	FtlSysBlkNumInit
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlSysBlkNumInit, %function
+FtlSysBlkNumInit:
+	.fnstart
+.LFB154:
+	.loc 3 165 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+.LVL22:
+	.loc 3 168 0
+	ldr	r3, .L13
+	cmp	r0, #24
+	it	cc
+	movcc	r0, #24
+	.loc 3 169 0
+	ldrh	r2, [r3, #8]
+	.loc 3 170 0
+	ldrh	r1, [r3, #18]
+	.loc 3 168 0
+	str	r0, [r3, #4]
+	.loc 3 169 0
+	muls	r2, r0, r2
+	.loc 3 170 0
+	subs	r0, r1, r0
+.LVL23:
+	.loc 3 171 0
+	ldr	r1, [r3, #24]
+	.loc 3 170 0
+	strh	r0, [r3, #16]	@ movhi
+	.loc 3 174 0
+	movs	r0, #0
+	.loc 3 169 0
+	str	r2, [r3, #12]
+	.loc 3 171 0
+	subs	r2, r1, r2
+	str	r2, [r3, #20]
+	.loc 3 174 0
+	bx	lr
+.L14:
+	.align	2
+.L13:
+	.word	.LANCHOR0
+.LFE154:
+	.fnend
+	.size	FtlSysBlkNumInit, .-FtlSysBlkNumInit
+	.global	__aeabi_idiv
+	.align	1
+	.global	FtlConstantsInit
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlConstantsInit, %function
+FtlConstantsInit:
+	.fnstart
+.LFB155:
+	.loc 3 183 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL24:
+	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI1:
+	.loc 3 183 0
+	mov	fp, r0
+	.loc 3 191 0
+	ldrh	r3, [fp, #14]
+	.loc 3 188 0
+	ldrh	r2, [r0]
+	ldr	r4, .L25
+	.loc 3 191 0
+	cmp	r3, #4
+	.loc 3 189 0
+	ldrh	r6, [r0, #2]
+	.loc 3 190 0
+	ldrh	r0, [r0, #4]
+.LVL25:
+	.loc 3 188 0
+	strh	r2, [r4, #28]	@ movhi
+	.loc 3 189 0
+	strh	r6, [r4, #30]	@ movhi
+	.loc 3 190 0
+	strh	r0, [r4, #32]	@ movhi
+	.loc 3 191 0
+	bne	.L16
+	.loc 3 192 0
+	ldrh	r3, [fp, #6]
+	lsrs	r3, r3, #1
+	strh	r3, [r4, #18]	@ movhi
+	.loc 3 193 0
+	movs	r3, #8
+	strh	r3, [r4, #34]	@ movhi
+.L16:
+	.loc 3 197 0 discriminator 3
+	ldr	r1, .L25+4
+	.loc 3 183 0 discriminator 3
+	movs	r3, #0
+.LVL26:
+.L17:
+	.loc 3 197 0 discriminator 3
+	strb	r3, [r3, r1]
+	.loc 3 196 0 discriminator 3
+	adds	r3, r3, #1
+	cmp	r3, #32
+	bne	.L17
+	.loc 3 205 0
+	ldrh	r5, [r4, #18]
+	.loc 3 204 0
+	smulbb	r6, r6, r0
+	.loc 3 198 0
+	movs	r3, #5
+.LVL27:
+	.loc 3 200 0
+	cmp	r2, #1
+	.loc 3 198 0
+	strh	r3, [r4, #68]	@ movhi
+	.loc 3 204 0
+	uxth	r6, r6
+	.loc 3 199 0
+	mov	r3, #0
+	.loc 3 205 0
+	smulbb	r0, r0, r5
+	.loc 3 202 0
+	mov	r7, #640
+	.loc 3 201 0
+	it	eq
+	strheq	r2, [r4, #68]	@ movhi
+	.loc 3 199 0
+	strh	r3, [r4, #70]	@ movhi
+	.loc 3 205 0
+	uxth	r0, r0
+	.loc 3 202 0
+	strh	r7, [r4, #72]	@ movhi
+	.loc 3 204 0
+	strh	r6, [r4, #8]	@ movhi
+	.loc 3 205 0
+	strh	r0, [r4, #74]	@ movhi
+	.loc 3 206 0
+	bl	Ftl_log2
+.LVL28:
+	.loc 3 207 0
+	ldrh	r9, [fp, #12]
+	.loc 3 210 0
+	ldrh	r10, [r4, #34]
+	.loc 3 206 0
+	strh	r0, [r4, #76]	@ movhi
+	.loc 3 207 0
+	strh	r9, [r4, #78]	@ movhi
+	.loc 3 209 0
+	smulbb	r3, r6, r9
+	.loc 3 210 0
+	mov	r0, r10
+	.loc 3 208 0
+	strh	r9, [r4, #80]	@ movhi
+	.loc 3 209 0
+	strh	r3, [r4, #82]	@ movhi
+	.loc 3 210 0
+	bl	Ftl_log2
+.LVL29:
+	.loc 3 212 0
+	lsl	r3, r10, #9
+	.loc 3 210 0
+	mov	r8, r0
+	strh	r0, [r4, #84]	@ movhi
+	.loc 3 218 0
+	mul	r1, r9, r10
+	.loc 3 212 0
+	uxth	r3, r3
+	.loc 3 218 0
+	mov	r0, #5120
+	.loc 3 221 0
+	asr	r7, r7, r8
+	.loc 3 212 0
+	strh	r3, [r4, #86]	@ movhi
+	.loc 3 213 0
+	lsrs	r3, r3, #8
+	.loc 3 223 0
+	add	r8, r8, #9
+	.loc 3 213 0
+	strh	r3, [r4, #88]	@ movhi
+	.loc 3 221 0
+	adds	r7, r7, #2
+	.loc 3 214 0
+	ldrh	r3, [fp, #20]
+	strh	r3, [r4, #90]	@ movhi
+	.loc 3 216 0
+	mul	r3, r5, r6
+	.loc 3 223 0
+	lsls	r5, r5, #6
+	asr	r5, r5, r8
+	.loc 3 216 0
+	str	r3, [r4, #24]
+	.loc 3 217 0
+	mul	r3, r10, r3
+	mul	r3, r9, r3
+	asrs	r3, r3, #11
+	str	r3, [r4, #92]
+	.loc 3 218 0
+	bl	__aeabi_idiv
+.LVL30:
+	uxth	r0, r0
+	.loc 3 223 0
+	strh	r5, [r4, #100]	@ movhi
+	uxth	r5, r5
+	.loc 3 226 0
+	mov	r1, r6
+	.loc 3 219 0
+	cmp	r0, #4
+	.loc 3 221 0
+	strh	r7, [r4, #98]	@ movhi
+	.loc 3 220 0
+	itet	ls
+	movls	r3, #4
+	.loc 3 218 0
+	strhhi	r0, [r4, #96]	@ movhi
+	.loc 3 220 0
+	strhls	r3, [r4, #96]	@ movhi
+	.loc 3 224 0
+	mul	r3, r6, r5
+	.loc 3 226 0
+	ldrh	r0, [r4, #96]
+	adds	r5, r5, #8
+	.loc 3 224 0
+	str	r3, [r4, #104]
+	.loc 3 226 0
+	bl	__aeabi_uidiv
+.LVL31:
+	uxtah	r0, r5, r0
+	.loc 3 227 0
+	cmp	r6, #1
+	.loc 3 228 0
+	it	eq
+	addeq	r0, r0, #4
+	str	r0, [r4, #4]
+	.loc 3 231 0
+	ldrh	r0, [r4, #4]
+	bl	FtlSysBlkNumInit
+.LVL32:
+	.loc 3 232 0
+	ldr	r3, [r4, #4]
+	.loc 3 236 0
+	movs	r0, #0
+	str	r0, [r4, #116]
+	.loc 3 232 0
+	str	r3, [r4, #108]
+	.loc 3 234 0
+	ldr	r3, [r4, #20]
+	lsls	r2, r3, #2
+	ldrh	r3, [r4, #78]
+	muls	r3, r2, r3
+	ldrh	r2, [r4, #84]
+	adds	r2, r2, #9
+	lsrs	r3, r3, r2
+	adds	r3, r3, #2
+	strh	r3, [r4, #112]	@ movhi
+	.loc 3 235 0
+	movs	r3, #32
+	strh	r3, [r4, #114]	@ movhi
+	.loc 3 237 0
+	ldrh	r3, [r4, #96]
+	adds	r3, r3, #3
+	strh	r3, [r4, #96]	@ movhi
+	.loc 3 238 0
+	ldr	r3, [r4, #104]
+	adds	r3, r3, #3
+	str	r3, [r4, #104]
+	.loc 3 263 0
+	pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL33:
+.L26:
+	.align	2
+.L25:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+36
+.LFE155:
+	.fnend
+	.size	FtlConstantsInit, .-FtlConstantsInit
+	.align	1
+	.global	IsBlkInVendorPart
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	IsBlkInVendorPart, %function
+IsBlkInVendorPart:
+	.fnstart
+.LFB158:
+	.loc 3 514 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+.LVL34:
+	.loc 3 517 0
+	ldr	r2, .L34
+	ldrh	r3, [r2, #120]
+	cbz	r3, .L33
+.LBB218:
+.LBB219:
+	.loc 3 519 0
+	ldr	r3, [r2, #124]
+	ldrh	r2, [r2, #96]
+	add	r2, r3, r2, lsl #1
+.L29:
+	.loc 3 518 0
+	cmp	r3, r2
+	bne	.L30
+.L33:
+.LBE219:
+.LBE218:
+	.loc 3 524 0
+	movs	r0, #0
+.LVL35:
+	bx	lr
+.LVL36:
+.L30:
+.LBB221:
+.LBB220:
+	.loc 3 519 0
+	ldrh	r1, [r3], #2
+	cmp	r0, r1
+	bne	.L29
+	.loc 3 520 0
+	movs	r0, #1
+.LVL37:
+.LBE220:
+.LBE221:
+	.loc 3 525 0
+	bx	lr
+.L35:
+	.align	2
+.L34:
+	.word	.LANCHOR0
+.LFE158:
+	.fnend
+	.size	IsBlkInVendorPart, .-IsBlkInVendorPart
+	.align	1
+	.global	sftl_get_density
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	sftl_get_density, %function
+sftl_get_density:
+	.fnstart
+.LFB171:
+	.loc 3 1212 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+	.loc 3 1214 0
+	ldr	r3, .L37
+	ldr	r0, [r3, #116]
+	bx	lr
+.L38:
+	.align	2
+.L37:
+	.word	.LANCHOR0
+.LFE171:
+	.fnend
+	.size	sftl_get_density, .-sftl_get_density
+	.global	__aeabi_uidivmod
+	.align	1
+	.global	FtlBbmMapBadBlock
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlBbmMapBadBlock, %function
+FtlBbmMapBadBlock:
+	.fnstart
+.LFB172:
+	.file 4 "drivers/rkflash/rksftl/sftl_bbm.c"
+	.loc 4 5 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL38:
+	push	{r0, r1, r2, r4, r5, r6, r7, lr}
+	.save {r4, r5, r6, r7, lr}
+	.pad #12
+.LCFI2:
+.LVL39:
+	.loc 4 5 0
+	mov	r5, r0
+	.loc 4 10 0
+	ldr	r4, .L40
+	ldrh	r7, [r4, #74]
+	mov	r1, r7
+	bl	__aeabi_uidiv
+.LVL40:
+	uxth	r6, r0
+.LVL41:
+	mov	r1, r7
+	mov	r0, r5
+	bl	__aeabi_uidivmod
+.LVL42:
+	.loc 4 13 0
+	add	r2, r4, r6, lsl #2
+	uxth	r3, r1
+	.loc 4 15 0
+	ldr	r2, [r2, #156]
+	lsrs	r1, r3, #5
+	and	r7, r3, #31
+	movs	r0, #1
+	lsls	r0, r0, r7
+	ldr	r7, [r2, r1, lsl #2]
+	orrs	r0, r0, r7
+	str	r0, [r2, r1, lsl #2]
+	.loc 4 16 0
+	mov	r2, r6
+	str	r0, [sp]
+	mov	r1, r5
+	ldr	r0, .L40+4
+	bl	printk
+.LVL43:
+	.loc 4 17 0
+	ldrh	r3, [r4, #134]
+	.loc 4 19 0
+	movs	r0, #0
+	.loc 4 17 0
+	adds	r3, r3, #1
+	strh	r3, [r4, #134]	@ movhi
+	.loc 4 19 0
+	add	sp, sp, #12
+.LCFI3:
+	@ sp needed
+	pop	{r4, r5, r6, r7, pc}
+.LVL44:
+.L41:
+	.align	2
+.L40:
+	.word	.LANCHOR0
+	.word	.LC0
+.LFE172:
+	.fnend
+	.size	FtlBbmMapBadBlock, .-FtlBbmMapBadBlock
+	.align	1
+	.global	FtlBbmIsBadBlock
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlBbmIsBadBlock, %function
+FtlBbmIsBadBlock:
+	.fnstart
+.LFB173:
+	.loc 4 24 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL45:
+	push	{r3, r4, r5, r6, r7, lr}
+	.save {r3, r4, r5, r6, r7, lr}
+.LCFI4:
+	.loc 4 24 0
+	mov	r7, r0
+	.loc 4 30 0
+	ldr	r5, .L43
+	ldrh	r6, [r5, #74]
+	.loc 4 31 0
+	mov	r1, r6
+	bl	__aeabi_uidivmod
+.LVL46:
+	.loc 4 30 0
+	mov	r0, r7
+	.loc 4 31 0
+	uxth	r4, r1
+.LVL47:
+	.loc 4 30 0
+	mov	r1, r6
+	bl	__aeabi_uidiv
+.LVL48:
+	uxth	r0, r0
+.LVL49:
+	.loc 4 34 0
+	lsrs	r2, r4, #5
+	.loc 4 33 0
+	add	r5, r5, r0, lsl #2
+	.loc 4 34 0
+	and	r4, r4, #31
+.LVL50:
+	ldr	r3, [r5, #156]
+	ldr	r0, [r3, r2, lsl #2]
+.LVL51:
+	lsrs	r0, r0, r4
+	.loc 4 36 0
+	and	r0, r0, #1
+	pop	{r3, r4, r5, r6, r7, pc}
+.LVL52:
+.L44:
+	.align	2
+.L43:
+	.word	.LANCHOR0
+.LFE173:
+	.fnend
+	.size	FtlBbmIsBadBlock, .-FtlBbmIsBadBlock
+	.align	1
+	.global	FtlBbtInfoPrint
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlBbtInfoPrint, %function
+FtlBbtInfoPrint:
+	.fnstart
+.LFB174:
+	.loc 4 39 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+	bx	lr
+.LFE174:
+	.fnend
+	.size	FtlBbtInfoPrint, .-FtlBbtInfoPrint
+	.align	1
+	.global	FtlBbtMemInit
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlBbtMemInit, %function
+FtlBbtMemInit:
+	.fnstart
+.LFB177:
+	.loc 4 149 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+	.loc 4 150 0
+	ldr	r0, .L47
+	movw	r3, #65535
+.LBB227:
+.LBB228:
+.LBB229:
+	.loc 1 202 0
+	movs	r2, #16
+	movs	r1, #255
+.LBE229:
+.LBE228:
+.LBE227:
+	.loc 4 150 0
+	strh	r3, [r0, #128]	@ movhi
+	.loc 4 151 0
+	movs	r3, #0
+	strh	r3, [r0, #134]	@ movhi
+.LBB232:
+.LBB231:
+.LBB230:
+	.loc 1 202 0
+	adds	r0, r0, #140
+	b	memset
+.LVL53:
+.L48:
+	.align	2
+.L47:
+	.word	.LANCHOR0
+.LBE230:
+.LBE231:
+.LBE232:
+.LFE177:
+	.fnend
+	.size	FtlBbtMemInit, .-FtlBbtMemInit
+	.align	1
+	.global	FtlBbtCalcTotleCnt
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlBbtCalcTotleCnt, %function
+FtlBbtCalcTotleCnt:
+	.fnstart
+.LFB178:
+	.loc 4 157 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	.loc 4 160 0
+	ldr	r3, .L56
+	.loc 4 157 0
+	push	{r4, r5, r6, lr}
+	.save {r4, r5, r6, lr}
+.LCFI5:
+	.loc 4 160 0
+	movs	r5, #0
+	.loc 4 159 0
+	mov	r4, r5
+	.loc 4 160 0
+	ldrh	r2, [r3, #74]
+	ldrh	r6, [r3, #30]
+	muls	r6, r2, r6
+.L50:
+	uxth	r0, r5
+.LVL54:
+	.loc 4 160 0 is_stmt 0 discriminator 1
+	cmp	r0, r6
+.LVL55:
+	blt	.L52
+	.loc 4 169 0 is_stmt 1
+	mov	r0, r4
+	pop	{r4, r5, r6, pc}
+.L52:
+	.loc 4 162 0
+	bl	FtlBbmIsBadBlock
+.LVL56:
+	cbz	r0, .L51
+	.loc 4 164 0
+	adds	r4, r4, #1
+	uxth	r4, r4
+.L51:
+	adds	r5, r5, #1
+	b	.L50
+.L57:
+	.align	2
+.L56:
+	.word	.LANCHOR0
+.LFE178:
+	.fnend
+	.size	FtlBbtCalcTotleCnt, .-FtlBbtCalcTotleCnt
+	.align	1
+	.global	V2P_block
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	V2P_block, %function
+V2P_block:
+	.fnstart
+.LFB182:
+	.loc 2 5 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL57:
+	push	{r3, r4, r5, r6, r7, lr}
+	.save {r3, r4, r5, r6, r7, lr}
+.LCFI6:
+	.loc 2 5 0
+	mov	r5, r1
+	.loc 2 8 0
+	ldr	r4, .L59
+	.loc 2 5 0
+	mov	r7, r0
+	.loc 2 8 0
+	ldrh	r6, [r4, #32]
+	mov	r1, r6
+.LVL58:
+	bl	__aeabi_uidiv
+.LVL59:
+	ldrh	r4, [r4, #74]
+	smulbb	r5, r6, r5
+.LVL60:
+	mov	r1, r6
+	smulbb	r4, r4, r0
+	mov	r0, r7
+	bl	__aeabi_uidivmod
+.LVL61:
+	adds	r0, r5, r1
+	add	r0, r0, r4
+	.loc 2 10 0
+	uxth	r0, r0
+	pop	{r3, r4, r5, r6, r7, pc}
+.LVL62:
+.L60:
+	.align	2
+.L59:
+	.word	.LANCHOR0
+.LFE182:
+	.fnend
+	.size	V2P_block, .-V2P_block
+	.align	1
+	.global	P2V_plane
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	P2V_plane, %function
+P2V_plane:
+	.fnstart
+.LFB183:
+	.loc 2 13 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL63:
+	.loc 2 16 0
+	ldr	r3, .L62
+	.loc 2 13 0
+	push	{r4, r5, r6, lr}
+	.save {r4, r5, r6, lr}
+.LCFI7:
+	.loc 2 13 0
+	mov	r6, r0
+	.loc 2 16 0
+	ldrh	r5, [r3, #32]
+	ldrh	r1, [r3, #74]
+	bl	__aeabi_uidiv
+.LVL64:
+	mov	r1, r5
+	smulbb	r4, r0, r5
+	mov	r0, r6
+	bl	__aeabi_uidivmod
+.LVL65:
+	add	r1, r1, r4
+	.loc 2 18 0
+	uxth	r0, r1
+	pop	{r4, r5, r6, pc}
+.LVL66:
+.L63:
+	.align	2
+.L62:
+	.word	.LANCHOR0
+.LFE183:
+	.fnend
+	.size	P2V_plane, .-P2V_plane
+	.align	1
+	.global	P2V_block_in_plane
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	P2V_block_in_plane, %function
+P2V_block_in_plane:
+	.fnstart
+.LFB184:
+	.loc 2 21 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL67:
+	push	{r4, lr}
+	.save {r4, lr}
+.LCFI8:
+	.loc 2 24 0
+	ldr	r4, .L65
+	ldrh	r1, [r4, #74]
+	bl	__aeabi_uidivmod
+.LVL68:
+	uxth	r0, r1
+	.loc 2 25 0
+	ldrh	r1, [r4, #32]
+	bl	__aeabi_uidiv
+.LVL69:
+	.loc 2 27 0
+	uxth	r0, r0
+	pop	{r4, pc}
+.L66:
+	.align	2
+.L65:
+	.word	.LANCHOR0
+.LFE184:
+	.fnend
+	.size	P2V_block_in_plane, .-P2V_block_in_plane
+	.align	1
+	.global	ftl_cmp_data_ver
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	ftl_cmp_data_ver, %function
+ftl_cmp_data_ver:
+	.fnstart
+.LFB185:
+	.loc 2 31 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+.LVL70:
+	.loc 2 34 0
+	cmp	r0, r1
+	bls	.L68
+	.loc 2 36 0
+	subs	r0, r0, r1
+.LVL71:
+	cmp	r0, #-2147483648
+	ite	hi
+	movhi	r0, #0
+	movls	r0, #1
+	bx	lr
+.LVL72:
+.L68:
+	.loc 2 40 0
+	subs	r0, r1, r0
+.LVL73:
+	cmp	r0, #-2147483648
+	ite	ls
+	movls	r0, #0
+	movhi	r0, #1
+	.loc 2 44 0
+	bx	lr
+.LFE185:
+	.fnend
+	.size	ftl_cmp_data_ver, .-ftl_cmp_data_ver
+	.align	1
+	.global	FtlFreeSysBlkQueueInit
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlFreeSysBlkQueueInit, %function
+FtlFreeSysBlkQueueInit:
+	.fnstart
+.LFB187:
+	.loc 2 76 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL74:
+	.loc 2 79 0
+	ldr	r3, .L71
+.LBB238:
+.LBB239:
+.LBB240:
+	.loc 1 202 0
+	mov	r1, #2048
+.LBE240:
+.LBE239:
+.LBE238:
+	.loc 2 76 0
+	push	{r4, lr}
+	.save {r4, lr}
+.LCFI9:
+	.loc 2 79 0
+	movs	r4, #0
+	.loc 2 82 0
+	strh	r0, [r3, #188]	@ movhi
+.LBB245:
+.LBB243:
+.LBB241:
+	.loc 1 202 0
+	add	r0, r3, #196
+.LVL75:
+.LBE241:
+.LBE243:
+.LBE245:
+	.loc 2 79 0
+	strh	r4, [r3, #190]	@ movhi
+	.loc 2 80 0
+	strh	r4, [r3, #192]	@ movhi
+	.loc 2 81 0
+	strh	r4, [r3, #194]	@ movhi
+.LBB246:
+.LBB244:
+.LBB242:
+	.loc 1 202 0
+	bl	__memzero
+.LVL76:
+.LBE242:
+.LBE244:
+.LBE246:
+	.loc 2 85 0
+	mov	r0, r4
+	pop	{r4, pc}
+.L72:
+	.align	2
+.L71:
+	.word	.LANCHOR0
+.LFE187:
+	.fnend
+	.size	FtlFreeSysBlkQueueInit, .-FtlFreeSysBlkQueueInit
+	.align	1
+	.global	FtlFreeSysBlkQueueEmpty
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlFreeSysBlkQueueEmpty, %function
+FtlFreeSysBlkQueueEmpty:
+	.fnstart
+.LFB188:
+	.loc 2 88 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+	.loc 2 89 0
+	ldr	r3, .L74
+	ldrh	r0, [r3, #194]
+	.loc 2 90 0
+	clz	r0, r0
+	lsrs	r0, r0, #5
+	bx	lr
+.L75:
+	.align	2
+.L74:
+	.word	.LANCHOR0
+.LFE188:
+	.fnend
+	.size	FtlFreeSysBlkQueueEmpty, .-FtlFreeSysBlkQueueEmpty
+	.align	1
+	.global	FtlFreeSysBlkQueueFull
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlFreeSysBlkQueueFull, %function
+FtlFreeSysBlkQueueFull:
+	.fnstart
+.LFB189:
+	.loc 2 93 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+	.loc 2 94 0
+	ldr	r3, .L77
+	ldrh	r0, [r3, #194]
+	.loc 2 95 0
+	sub	r3, r0, #1024
+	rsbs	r0, r3, #0
+	adcs	r0, r0, r3
+	bx	lr
+.L78:
+	.align	2
+.L77:
+	.word	.LANCHOR0
+.LFE189:
+	.fnend
+	.size	FtlFreeSysBlkQueueFull, .-FtlFreeSysBlkQueueFull
+	.align	1
+	.global	FtlFreeSysBLkSort
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlFreeSysBLkSort, %function
+FtlFreeSysBLkSort:
+	.fnstart
+.LFB191:
+	.loc 2 116 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r3, r4, r5, r6, r7, lr}
+	.save {r3, r4, r5, r6, r7, lr}
+.LCFI10:
+	.loc 2 123 0
+	movs	r3, #0
+	ldr	r6, .L88
+	mov	r4, r6
+.L80:
+	.loc 2 123 0 is_stmt 0 discriminator 1
+	ldrh	r1, [r6, #194]
+	uxth	r2, r3
+	adds	r7, r3, #1
+	cmp	r1, r2
+	bhi	.L81
+	movs	r1, #0
+.LVL77:
+.L82:
+	.loc 2 128 0 is_stmt 1 discriminator 1
+	ldrh	ip, [r4, #194]
+	add	r3, ip, #-1
+.LVL78:
+	cmp	r1, r3
+	blt	.L87
+	.loc 2 144 0
+	pop	{r3, r4, r5, r6, r7, pc}
+.LVL79:
+.L81:
+	.loc 2 124 0 discriminator 3
+	ldrh	r2, [r6, #190]
+	uxth	r5, r3
+	adds	r3, r2, r5
+	add	r3, r6, r3, lsl #1
+	ldrh	r0, [r3, #196]
+	bl	P2V_block_in_plane
+.LVL80:
+	.loc 2 125 0 discriminator 3
+	ldr	r2, [r6, #2248]
+	ldr	r3, [r6, #2244]
+	ldrh	r2, [r2, r0, lsl #1]
+	str	r2, [r3, r5, lsl #2]
+	mov	r3, r7
+	b	.L80
+.LVL81:
+.L87:
+	.loc 2 130 0
+	adds	r5, r1, #1
+	.loc 2 131 0
+	ldr	r0, [r4, #2244]
+.LVL82:
+	.loc 2 130 0
+	uxth	r5, r5
+	mov	r3, r1
+.LVL83:
+	mov	r2, r5
+.L83:
+	.loc 2 130 0 is_stmt 0 discriminator 1
+	cmp	r2, ip
+	bcc	.L85
+	.loc 2 134 0 is_stmt 1
+	cmp	r1, r3
+	beq	.L86
+	.loc 2 136 0
+	ldr	r2, [r0, r1, lsl #2]
+	.loc 2 135 0
+	ldr	r6, [r0, r3, lsl #2]
+	.loc 2 136 0
+	str	r2, [r0, r3, lsl #2]
+	.loc 2 137 0
+	ldr	r2, [r4, #2244]
+	str	r6, [r2, r1, lsl #2]
+	.loc 2 139 0
+	ldrh	r2, [r4, #190]
+	add	r3, r3, r2
+.LVL84:
+	.loc 2 140 0
+	add	r2, r2, r1
+	.loc 2 139 0
+	adds	r3, r3, #4
+	.loc 2 140 0
+	adds	r2, r2, #4
+	.loc 2 139 0
+	add	r3, r4, r3, lsl #1
+	.loc 2 140 0
+	add	r2, r4, r2, lsl #1
+	.loc 2 139 0
+	ldrh	r0, [r3, #188]
+.LVL85:
+	.loc 2 140 0
+	ldrh	r1, [r2, #188]
+	strh	r1, [r3, #188]	@ movhi
+	.loc 2 141 0
+	strh	r0, [r2, #188]	@ movhi
+.LVL86:
+.L86:
+	.loc 2 130 0 discriminator 1
+	mov	r1, r5
+	b	.L82
+.LVL87:
+.L85:
+	.loc 2 131 0
+	ldr	r6, [r0, r2, lsl #2]
+.LVL88:
+	ldr	r7, [r0, r3, lsl #2]
+	cmp	r7, r6
+	it	hi
+	movhi	r3, r2
+	.loc 2 130 0
+	adds	r2, r2, #1
+	uxth	r2, r2
+	b	.L83
+.L89:
+	.align	2
+.L88:
+	.word	.LANCHOR0
+.LFE191:
+	.fnend
+	.size	FtlFreeSysBLkSort, .-FtlFreeSysBLkSort
+	.align	1
+	.global	IsInFreeQueue
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	IsInFreeQueue, %function
+IsInFreeQueue:
+	.fnstart
+.LFB192:
+	.loc 2 147 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL89:
+.LBB247:
+.LBB248:
+	.loc 2 94 0
+	ldr	r3, .L96
+.LBE248:
+.LBE247:
+	.loc 2 147 0
+	push	{r4, r5, lr}
+	.save {r4, r5, lr}
+.LCFI11:
+.LBB250:
+.LBB249:
+	.loc 2 94 0
+	ldrh	r4, [r3, #194]
+.LBE249:
+.LBE250:
+	.loc 2 152 0
+	cmp	r4, #1024
+	beq	.L94
+	.loc 2 155 0
+	ldrh	r5, [r3, #190]
+	movs	r1, #0
+.LVL90:
+.L92:
+	.loc 2 154 0 discriminator 1
+	cmp	r1, r4
+	bcc	.L93
+.L94:
+	.loc 2 148 0
+	movs	r0, #0
+.LVL91:
+	pop	{r4, r5, pc}
+.LVL92:
+.L93:
+	.loc 2 155 0
+	adds	r2, r1, r5
+	ubfx	r2, r2, #0, #10
+	add	r2, r3, r2, lsl #1
+	ldrh	r2, [r2, #196]
+	cmp	r2, r0
+	beq	.L95
+	.loc 2 154 0 discriminator 2
+	adds	r1, r1, #1
+	b	.L92
+.L95:
+	.loc 2 156 0
+	movs	r0, #1
+.LVL93:
+	.loc 2 162 0
+	pop	{r4, r5, pc}
+.L97:
+	.align	2
+.L96:
+	.word	.LANCHOR0
+.LFE192:
+	.fnend
+	.size	IsInFreeQueue, .-IsInFreeQueue
+	.align	1
+	.global	FtlFreeSysBlkQueueOut
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlFreeSysBlkQueueOut, %function
+FtlFreeSysBlkQueueOut:
+	.fnstart
+.LFB193:
+	.loc 2 165 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+.LBB251:
+.LBB252:
+	.loc 2 89 0
+	ldr	r2, .L101
+	ldrh	r1, [r2, #194]
+.LBE252:
+.LBE251:
+	.loc 2 168 0
+	cbz	r1, .L100
+.LBB253:
+	.loc 2 170 0
+	ldrh	r3, [r2, #190]
+	.loc 2 171 0
+	subs	r1, r1, #1
+	strh	r1, [r2, #194]	@ movhi
+	.loc 2 170 0
+	add	r0, r2, r3, lsl #1
+	.loc 2 172 0
+	adds	r3, r3, #1
+	ubfx	r3, r3, #0, #10
+	.loc 2 170 0
+	ldrh	r0, [r0, #196]
+	.loc 2 172 0
+	strh	r3, [r2, #190]	@ movhi
+	bx	lr
+.L100:
+.LBE253:
+	.loc 2 166 0
+	movw	r0, #65535
+	.loc 2 176 0
+	bx	lr
+.L102:
+	.align	2
+.L101:
+	.word	.LANCHOR0
+.LFE193:
+	.fnend
+	.size	FtlFreeSysBlkQueueOut, .-FtlFreeSysBlkQueueOut
+	.align	1
+	.global	insert_data_list
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	insert_data_list, %function
+insert_data_list:
+	.fnstart
+.LFB196:
+	.loc 2 217 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL94:
+	.loc 2 225 0
+	movw	r3, #65535
+	.loc 2 217 0
+	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.pad #12
+.LCFI12:
+.LVL95:
+	.loc 2 225 0
+	cmp	r0, r3
+	beq	.L104
+	.loc 2 230 0
+	ldr	r2, .L116
+	movs	r5, #6
+	muls	r5, r0, r5
+	ldr	ip, [r2, #2252]
+	mov	r1, r2
+	add	r4, ip, r5
+.LVL96:
+	.loc 2 231 0
+	strh	r3, [r4, #2]	@ movhi
+	strh	r3, [ip, r5]	@ movhi
+	.loc 2 233 0
+	ldr	r3, [r2, #2256]
+.LVL97:
+	cbnz	r3, .L105
+	.loc 2 234 0
+	str	r4, [r2, #2256]
+.LVL98:
+.L104:
+	.loc 2 281 0
+	movs	r0, #0
+.LVL99:
+	add	sp, sp, #12
+.LCFI13:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL100:
+.L105:
+.LCFI14:
+	.loc 2 239 0
+	ldrh	r6, [r4, #4]
+	.loc 2 238 0
+	lsls	r7, r0, #1
+	ldr	r8, [r2, #2260]
+	ldrh	r2, [r8, r0, lsl #1]
+.LVL101:
+	.loc 2 240 0
+	cmp	r6, #0
+	beq	.L114
+	.loc 2 239 0
+	muls	r6, r2, r6
+.LVL102:
+.L106:
+	.loc 2 244 0
+	ldr	lr, [r1, #2252]
+	sub	r2, r3, lr
+.LVL103:
+	asr	r9, r2, #1
+	ldr	r2, .L116+4
+	mul	r2, r2, r9
+	.loc 2 252 0
+	ldr	r9, [r1, #2248]
+	add	r7, r9, r7
+	.loc 2 244 0
+	uxth	r2, r2
+	.loc 2 252 0
+	str	r7, [sp, #4]
+.LVL104:
+.L112:
+	.loc 2 247 0
+	ldrh	r7, [r3, #4]
+	.loc 2 246 0
+	lsl	r10, r2, #1
+	ldrh	fp, [r8, r2, lsl #1]
+	.loc 2 248 0
+	cbz	r7, .L115
+	.loc 2 247 0
+	mul	r7, r7, fp
+.LVL105:
+.L107:
+	.loc 2 251 0
+	cmp	r6, r7
+	bne	.L108
+	.loc 2 252 0
+	ldr	r7, [sp, #4]
+.LVL106:
+	ldrh	r10, [r9, r10]
+	ldrh	r7, [r7]
+	cmp	r10, r7
+	bcc	.L110
+.LVL107:
+.L109:
+	.loc 2 270 0
+	strh	r2, [ip, r5]	@ movhi
+	.loc 2 271 0
+	ldrh	r2, [r3, #2]
+	strh	r2, [r4, #2]	@ movhi
+	.loc 2 273 0
+	ldr	r2, [r1, #2256]
+	cmp	r3, r2
+	.loc 2 277 0
+	ittte	ne
+	ldrhne	r4, [r3, #2]
+.LVL108:
+	movne	r2, #6
+	ldrne	r1, [r1, #2252]
+	.loc 2 274 0
+	strheq	r0, [r3, #2]	@ movhi
+.LVL109:
+	.loc 2 275 0
+	iteee	eq
+	streq	r4, [r1, #2256]
+	.loc 2 277 0
+	mulne	r2, r2, r4
+.LVL110:
+	strhne	r0, [r1, r2]	@ movhi
+	.loc 2 278 0
+	strhne	r0, [r3, #2]	@ movhi
+	b	.L104
+.LVL111:
+.L114:
+	.loc 2 241 0
+	mov	r6, #-1
+.LVL112:
+	b	.L106
+.LVL113:
+.L115:
+	.loc 2 249 0
+	mov	r7, #-1
+.LVL114:
+	b	.L107
+.L108:
+	.loc 2 256 0
+	bcc	.L109
+.L110:
+	.loc 2 259 0
+	ldrh	r7, [r3]
+.LVL115:
+	movw	r10, #65535
+	cmp	r7, r10
+	bne	.L111
+	.loc 2 260 0
+	strh	r2, [r4, #2]	@ movhi
+	.loc 2 261 0
+	strh	r0, [r3]	@ movhi
+	.loc 2 262 0
+	str	r4, [r1, #2264]
+	.loc 2 263 0
+	b	.L104
+.L111:
+	.loc 2 267 0
+	movs	r3, #6
+.LVL116:
+	.loc 2 246 0
+	mov	r2, r7
+	.loc 2 267 0
+	mla	r3, r3, r7, lr
+.LVL117:
+	.loc 2 246 0
+	b	.L112
+.L117:
+	.align	2
+.L116:
+	.word	.LANCHOR0
+	.word	-1431655765
+.LFE196:
+	.fnend
+	.size	insert_data_list, .-insert_data_list
+	.align	1
+	.global	INSERT_DATA_LIST
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	INSERT_DATA_LIST, %function
+INSERT_DATA_LIST:
+	.fnstart
+.LFB195:
+	.loc 2 186 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL118:
+	push	{r3, lr}
+	.save {r3, lr}
+.LCFI15:
+	.loc 2 187 0
+	bl	insert_data_list
+.LVL119:
+	.loc 2 188 0
+	ldr	r2, .L120
+	ldrh	r3, [r2, #2268]
+	adds	r3, r3, #1
+	uxth	r3, r3
+	strh	r3, [r2, #2268]	@ movhi
+	.loc 2 189 0
+	ldrh	r2, [r2, #16]
+	cmp	r2, r3
+	bcs	.L118
+.LBB256:
+.LBB257:
+	movs	r2, #189
+	ldr	r1, .L120+4
+	ldr	r0, .L120+8
+.LBE257:
+.LBE256:
+	.loc 2 190 0
+	pop	{r3, lr}
+.LCFI16:
+.LBB259:
+.LBB258:
+	.loc 2 189 0
+	b	printk
+.LVL120:
+.L118:
+.LCFI17:
+	pop	{r3, pc}
+.L121:
+	.align	2
+.L120:
+	.word	.LANCHOR0
+	.word	.LANCHOR1
+	.word	.LC1
+.LBE258:
+.LBE259:
+.LFE195:
+	.fnend
+	.size	INSERT_DATA_LIST, .-INSERT_DATA_LIST
+	.align	1
+	.global	insert_free_list
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	insert_free_list, %function
+insert_free_list:
+	.fnstart
+.LFB197:
+	.loc 2 284 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL121:
+	push	{r4, r5, r6, r7, r8, r9, r10, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, lr}
+.LCFI18:
+	.loc 2 290 0
+	movw	r4, #65535
+	cmp	r0, r4
+	beq	.L123
+	.loc 2 293 0
+	ldr	r2, .L129
+	movs	r1, #6
+	mul	r7, r1, r0
+	ldr	ip, [r2, #2252]
+	mov	r5, r2
+	add	r6, ip, r7
+.LVL122:
+	.loc 2 294 0
+	strh	r4, [r6, #2]	@ movhi
+	strh	r4, [ip, r7]	@ movhi
+	.loc 2 296 0
+	ldr	r3, [r2, #2272]
+.LVL123:
+	cbnz	r3, .L124
+	.loc 2 297 0
+	str	r6, [r2, #2272]
+.LVL124:
+.L123:
+	.loc 2 330 0
+	movs	r0, #0
+.LVL125:
+	pop	{r4, r5, r6, r7, r8, r9, r10, pc}
+.LVL126:
+.L124:
+	.loc 2 303 0
+	ldr	lr, [r2, #2252]
+	.loc 2 301 0
+	ldr	r8, [r2, #2248]
+	.loc 2 303 0
+	sub	r2, r3, lr
+	asr	r10, r2, #1
+	ldr	r2, .L129+4
+	.loc 2 301 0
+	ldrh	r9, [r8, r0, lsl #1]
+.LVL127:
+	.loc 2 303 0
+	mul	r2, r2, r10
+	.loc 2 310 0
+	mov	r10, r4
+	.loc 2 303 0
+	uxth	r2, r2
+.L127:
+	.loc 2 307 0
+	ldrh	r4, [r8, r2, lsl #1]
+	cmp	r4, r9
+	bcs	.L125
+	.loc 2 310 0
+	ldrh	r4, [r3]
+	cmp	r4, r10
+	bne	.L126
+	.loc 2 311 0
+	strh	r2, [r6, #2]	@ movhi
+	.loc 2 312 0
+	strh	r0, [r3]	@ movhi
+	.loc 2 313 0
+	b	.L123
+.L126:
+	.loc 2 316 0
+	mla	r3, r1, r4, lr
+	.loc 2 306 0
+	mov	r2, r4
+	b	.L127
+.L125:
+	.loc 2 319 0
+	ldrh	r1, [r3, #2]
+	strh	r1, [r6, #2]	@ movhi
+	.loc 2 320 0
+	strh	r2, [ip, r7]	@ movhi
+	.loc 2 322 0
+	ldr	r2, [r5, #2272]
+	cmp	r3, r2
+	.loc 2 326 0
+	ittte	ne
+	ldrhne	r4, [r3, #2]
+	movne	r2, #6
+	ldrne	r1, [r5, #2252]
+	.loc 2 323 0
+	strheq	r0, [r3, #2]	@ movhi
+	.loc 2 324 0
+	iteee	eq
+	streq	r6, [r5, #2272]
+	.loc 2 326 0
+	mulne	r2, r2, r4
+	strhne	r0, [r1, r2]	@ movhi
+	.loc 2 327 0
+	strhne	r0, [r3, #2]	@ movhi
+	b	.L123
+.L130:
+	.align	2
+.L129:
+	.word	.LANCHOR0
+	.word	-1431655765
+.LFE197:
+	.fnend
+	.size	insert_free_list, .-insert_free_list
+	.align	1
+	.global	INSERT_FREE_LIST
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	INSERT_FREE_LIST, %function
+INSERT_FREE_LIST:
+	.fnstart
+.LFB194:
+	.loc 2 179 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL128:
+	push	{r3, lr}
+	.save {r3, lr}
+.LCFI19:
+	.loc 2 180 0
+	bl	insert_free_list
+.LVL129:
+	.loc 2 181 0
+	ldr	r2, .L133
+	ldrh	r3, [r2, #2276]
+	adds	r3, r3, #1
+	uxth	r3, r3
+	strh	r3, [r2, #2276]	@ movhi
+	.loc 2 182 0
+	ldrh	r2, [r2, #16]
+	cmp	r2, r3
+	bcs	.L131
+.LBB262:
+.LBB263:
+	movs	r2, #182
+	ldr	r1, .L133+4
+	ldr	r0, .L133+8
+.LBE263:
+.LBE262:
+	.loc 2 183 0
+	pop	{r3, lr}
+.LCFI20:
+.LBB265:
+.LBB264:
+	.loc 2 182 0
+	b	printk
+.LVL130:
+.L131:
+.LCFI21:
+	pop	{r3, pc}
+.L134:
+	.align	2
+.L133:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+17
+	.word	.LC1
+.LBE264:
+.LBE265:
+.LFE194:
+	.fnend
+	.size	INSERT_FREE_LIST, .-INSERT_FREE_LIST
+	.align	1
+	.global	List_remove_node
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	List_remove_node, %function
+List_remove_node:
+	.fnstart
+.LFB198:
+	.loc 2 333 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL131:
+	push	{r4, r5, r6, r7, r8, lr}
+	.save {r4, r5, r6, r7, r8, lr}
+.LCFI22:
+	.loc 2 336 0
+	movs	r5, #6
+	ldr	r7, .L141
+	muls	r5, r1, r5
+	.loc 2 337 0
+	movw	r3, #65535
+	.loc 2 333 0
+	mov	r8, r0
+	.loc 2 336 0
+	ldr	r6, [r7, #2252]
+	adds	r4, r6, r5
+.LVL132:
+	.loc 2 337 0
+	ldrh	r2, [r4, #2]
+	cmp	r2, r3
+	bne	.L136
+	.loc 2 337 0 is_stmt 0 discriminator 1
+	ldr	r3, [r0]
+	cmp	r4, r3
+	beq	.L136
+	.loc 2 337 0 discriminator 2
+	movw	r2, #337
+	ldr	r1, .L141+4
+.LVL133:
+	ldr	r0, .L141+8
+	bl	printk
+.LVL134:
+.L136:
+	.loc 2 339 0 is_stmt 1
+	ldr	r3, [r8]
+	movw	r2, #65535
+	cmp	r4, r3
+	ldrh	r3, [r6, r5]
+	bne	.L137
+	.loc 2 340 0
+	cmp	r3, r2
+	.loc 2 343 0
+	ittee	ne
+	ldrne	r1, [r7, #2252]
+.LVL135:
+	movne	r0, #6
+	.loc 2 341 0
+	moveq	r3, #0
+	streq	r3, [r8]
+	.loc 2 343 0
+	ittt	ne
+	mlane	r3, r0, r3, r1
+	strne	r3, [r8]
+	.loc 2 344 0
+	strhne	r2, [r3, #2]	@ movhi
+.L139:
+	.loc 2 355 0
+	movw	r3, #65535
+	.loc 2 357 0
+	movs	r0, #0
+	.loc 2 355 0
+	strh	r3, [r6, r5]	@ movhi
+	strh	r3, [r4, #2]	@ movhi
+	.loc 2 357 0
+	pop	{r4, r5, r6, r7, r8, pc}
+.LVL136:
+.L137:
+	.loc 2 346 0
+	cmp	r3, r2
+	ldrh	r1, [r4, #2]
+.LVL137:
+	mov	r2, #6
+	.loc 2 348 0
+	ldr	r0, [r7, #2252]
+	.loc 2 346 0
+	bne	.L140
+	.loc 2 348 0
+	muls	r2, r1, r2
+	strh	r3, [r0, r2]	@ movhi
+	b	.L139
+.L140:
+	.loc 2 351 0
+	mla	r3, r2, r3, r0
+	strh	r1, [r3, #2]	@ movhi
+	.loc 2 352 0
+	ldrh	r0, [r4, #2]
+	.loc 2 353 0
+	ldrh	r1, [r6, r5]
+	ldr	r3, [r7, #2252]
+	muls	r2, r0, r2
+	strh	r1, [r3, r2]	@ movhi
+	b	.L139
+.L142:
+	.align	2
+.L141:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+34
+	.word	.LC1
+.LFE198:
+	.fnend
+	.size	List_remove_node, .-List_remove_node
+	.align	1
+	.global	List_pop_index_node
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	List_pop_index_node, %function
+List_pop_index_node:
+	.fnstart
+.LFB199:
+	.loc 2 360 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL138:
+	push	{r4, r5, r6, lr}
+	.save {r4, r5, r6, lr}
+.LCFI23:
+	.loc 2 364 0
+	ldr	r3, [r0]
+.LVL139:
+	cbz	r3, .L149
+	.loc 2 369 0
+	ldr	r2, .L150
+	.loc 2 368 0
+	movw	r5, #65535
+	.loc 2 369 0
+	movs	r6, #6
+	ldr	r2, [r2, #2252]
+.L145:
+	.loc 2 368 0
+	cbnz	r1, .L146
+.L148:
+	.loc 2 372 0
+	ldr	r4, .L150+4
+	subs	r3, r3, r2
+.LVL140:
+	asrs	r3, r3, #1
+	muls	r4, r3, r4
+	.loc 2 373 0
+	uxth	r1, r4
+.LVL141:
+	bl	List_remove_node
+.LVL142:
+	uxth	r0, r4
+	.loc 2 375 0
+	pop	{r4, r5, r6, pc}
+.LVL143:
+.L146:
+	.loc 2 368 0 discriminator 1
+	ldrh	r4, [r3]
+	cmp	r4, r5
+	beq	.L148
+	.loc 2 370 0
+	subs	r1, r1, #1
+.LVL144:
+	.loc 2 369 0
+	mla	r3, r6, r4, r2
+	.loc 2 370 0
+	uxth	r1, r1
+.LVL145:
+	b	.L145
+.L149:
+	.loc 2 365 0
+	movw	r0, #65535
+.LVL146:
+	.loc 2 376 0
+	pop	{r4, r5, r6, pc}
+.L151:
+	.align	2
+.L150:
+	.word	.LANCHOR0
+	.word	-1431655765
+.LFE199:
+	.fnend
+	.size	List_pop_index_node, .-List_pop_index_node
+	.align	1
+	.global	List_pop_head_node
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	List_pop_head_node, %function
+List_pop_head_node:
+	.fnstart
+.LFB200:
+	.loc 2 379 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+.LVL147:
+	.loc 2 380 0
+	movs	r1, #0
+	b	List_pop_index_node
+.LVL148:
+.LFE200:
+	.fnend
+	.size	List_pop_head_node, .-List_pop_head_node
+	.align	1
+	.global	List_get_gc_head_node
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	List_get_gc_head_node, %function
+List_get_gc_head_node:
+	.fnstart
+.LFB201:
+	.loc 2 384 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL149:
+	.loc 2 388 0
+	ldr	r2, .L159
+	.loc 2 384 0
+	push	{r4, lr}
+	.save {r4, lr}
+.LCFI24:
+	.loc 2 388 0
+	ldr	r3, [r2, #2256]
+.LVL150:
+	cbz	r3, .L158
+	.loc 2 393 0
+	ldr	r1, [r2, #2252]
+	movs	r4, #6
+	.loc 2 392 0
+	movw	r2, #65535
+.L155:
+	cbz	r0, .L156
+	.loc 2 392 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r3]
+.LVL151:
+	cmp	r3, r2
+	bne	.L157
+.LVL152:
+.L158:
+	.loc 2 389 0 is_stmt 1
+	movw	r0, #65535
+.LVL153:
+	pop	{r4, pc}
+.LVL154:
+.L157:
+	.loc 2 394 0
+	subs	r0, r0, #1
+.LVL155:
+	.loc 2 393 0
+	mla	r3, r4, r3, r1
+.LVL156:
+	.loc 2 394 0
+	uxth	r0, r0
+.LVL157:
+	b	.L155
+.L156:
+	.loc 2 398 0
+	ldr	r0, .L159+4
+.LVL158:
+	subs	r3, r3, r1
+.LVL159:
+	asrs	r3, r3, #1
+	muls	r3, r0, r3
+	uxth	r0, r3
+	.loc 2 401 0
+	pop	{r4, pc}
+.L160:
+	.align	2
+.L159:
+	.word	.LANCHOR0
+	.word	-1431655765
+.LFE201:
+	.fnend
+	.size	List_get_gc_head_node, .-List_get_gc_head_node
+	.align	1
+	.global	List_update_data_list
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	List_update_data_list, %function
+List_update_data_list:
+	.fnstart
+.LFB202:
+	.loc 2 404 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL160:
+	push	{r3, r4, r5, r6, r7, lr}
+	.save {r3, r4, r5, r6, r7, lr}
+.LCFI25:
+	.loc 2 404 0
+	mov	r5, r0
+	.loc 2 413 0
+	ldr	r4, .L169
+	ldrh	r3, [r4, #2280]
+	cmp	r3, r0
+	beq	.L163
+	.loc 2 413 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #2328]
+	cmp	r3, r0
+	beq	.L163
+	.loc 2 413 0 discriminator 2
+	ldrh	r3, [r4, #2376]
+	cmp	r3, r0
+	beq	.L163
+.LBB268:
+.LBB269:
+	.loc 2 416 0 is_stmt 1
+	movs	r3, #6
+	ldr	r1, [r4, #2252]
+	muls	r3, r0, r3
+	.loc 2 418 0
+	ldr	r2, [r4, #2256]
+	.loc 2 416 0
+	adds	r7, r1, r3
+.LVL161:
+	.loc 2 418 0
+	cmp	r7, r2
+	beq	.L163
+	.loc 2 421 0
+	ldr	r2, [r4, #2260]
+	.loc 2 422 0
+	ldrh	r6, [r7, #4]
+	ldrh	r2, [r2, r0, lsl #1]
+	.loc 2 424 0
+	muls	r6, r2, r6
+.LVL162:
+	.loc 2 426 0
+	ldrh	r2, [r7, #2]
+	movw	r0, #65535
+	.loc 2 424 0
+	it	eq
+	moveq	r6, #-1
+	.loc 2 426 0
+	cmp	r2, r0
+	bne	.L166
+	ldrh	r3, [r1, r3]
+	cmp	r3, r2
+	bne	.L166
+	mov	r2, #426
+	ldr	r1, .L169+4
+	ldr	r0, .L169+8
+	bl	printk
+.LVL163:
+.L166:
+	.loc 2 427 0
+	ldrh	r3, [r7, #2]
+	movs	r2, #6
+	muls	r2, r3, r2
+	.loc 2 428 0
+	ldr	r3, .L169+12
+	asrs	r1, r2, #1
+	muls	r3, r1, r3
+	.loc 2 429 0
+	ldr	r1, [r4, #2260]
+	.loc 2 430 0
+	ldrh	r0, [r1, r3, lsl #1]
+	ldr	r1, [r4, #2252]
+	add	r2, r2, r1
+	ldrh	r3, [r2, #4]
+	.loc 2 432 0
+	muls	r3, r0, r3
+.LVL164:
+	it	eq
+	moveq	r3, #-1
+	.loc 2 434 0
+	cmp	r6, r3
+	bcs	.L163
+	.loc 2 435 0
+	mov	r1, r5
+	ldr	r0, .L169+16
+	bl	List_remove_node
+.LVL165:
+	ldrh	r3, [r4, #2268]
+	cbnz	r3, .L168
+	movw	r2, #435
+	ldr	r1, .L169+4
+	ldr	r0, .L169+8
+	bl	printk
+.LVL166:
+.L168:
+	ldrh	r3, [r4, #2268]
+	.loc 2 436 0
+	mov	r0, r5
+	.loc 2 435 0
+	subs	r3, r3, #1
+	strh	r3, [r4, #2268]	@ movhi
+	.loc 2 436 0
+	bl	INSERT_DATA_LIST
+.LVL167:
+.L163:
+.LBE269:
+.LBE268:
+	.loc 2 439 0
+	movs	r0, #0
+	pop	{r3, r4, r5, r6, r7, pc}
+.LVL168:
+.L170:
+	.align	2
+.L169:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+51
+	.word	.LC1
+	.word	-1431655765
+	.word	.LANCHOR0+2256
+.LFE202:
+	.fnend
+	.size	List_update_data_list, .-List_update_data_list
+	.align	1
+	.global	ftl_map_blk_alloc_new_blk
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	ftl_map_blk_alloc_new_blk, %function
+ftl_map_blk_alloc_new_blk:
+	.fnstart
+.LFB205:
+	.loc 2 516 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL169:
+	push	{r3, r4, r5, r6, r7, lr}
+	.save {r3, r4, r5, r6, r7, lr}
+.LCFI26:
+	.loc 2 516 0
+	mov	r4, r0
+	.loc 2 520 0
+	ldrh	r1, [r0, #10]
+	movs	r3, #0
+	ldr	r2, [r0, #12]
+.LVL170:
+.L172:
+	uxth	r5, r3
+	.loc 2 520 0 is_stmt 0 discriminator 1
+	cmp	r5, r1
+	bcc	.L174
+.L175:
+.LBB272:
+.LBB273:
+	.loc 2 532 0 is_stmt 1
+	mov	r2, #532
+	ldr	r1, .L181
+	ldr	r0, .L181+4
+	bl	printk
+.LVL171:
+	b	.L176
+.L174:
+.LBE273:
+.LBE272:
+	.loc 2 521 0
+	mov	r7, r2
+	adds	r3, r3, #1
+	ldrh	r6, [r7]
+	adds	r2, r2, #2
+	cmp	r6, #0
+	bne	.L172
+	.loc 2 522 0
+	bl	FtlFreeSysBlkQueueOut
+.LVL172:
+	strh	r0, [r7]	@ movhi
+	.loc 2 523 0
+	cbz	r0, .L173
+	.loc 2 526 0
+	ldr	r3, [r4, #28]
+	.loc 2 524 0
+	strh	r6, [r4, #2]	@ movhi
+	.loc 2 525 0
+	strh	r5, [r4]	@ movhi
+	.loc 2 526 0
+	adds	r3, r3, #1
+	str	r3, [r4, #28]
+	.loc 2 527 0
+	ldrh	r3, [r4, #8]
+	adds	r3, r3, #1
+	strh	r3, [r4, #8]	@ movhi
+.L173:
+	.loc 2 532 0
+	ldrh	r3, [r4, #10]
+	cmp	r3, r5
+	bls	.L175
+.L176:
+	.loc 2 534 0
+	movs	r0, #0
+	pop	{r3, r4, r5, r6, r7, pc}
+.LVL173:
+.L182:
+	.align	2
+.L181:
+	.word	.LANCHOR1+73
+	.word	.LC1
+.LFE205:
+	.fnend
+	.size	ftl_map_blk_alloc_new_blk, .-ftl_map_blk_alloc_new_blk
+	.align	1
+	.global	select_l2p_ram_region
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	select_l2p_ram_region, %function
+select_l2p_ram_region:
+	.fnstart
+.LFB210:
+	.loc 2 700 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r3, r4, r5, r6, r7, lr}
+	.save {r3, r4, r5, r6, r7, lr}
+.LCFI27:
+	.loc 2 705 0
+	movs	r1, #0
+	ldr	r5, .L193
+	.loc 2 706 0
+	movs	r0, #12
+	movw	r6, #65535
+	.loc 2 705 0
+	ldrh	r2, [r5, #114]
+	.loc 2 706 0
+	ldr	r3, [r5, #2424]
+.L184:
+	uxth	r4, r1
+	.loc 2 705 0 discriminator 1
+	cmp	r4, r2
+	bcc	.L186
+	mov	r4, r2
+	movs	r1, #0
+	mov	r7, #-2147483648
+	.loc 2 716 0
+	mov	ip, #12
+.L187:
+	uxth	r6, r1
+	.loc 2 715 0 discriminator 1
+	cmp	r6, r2
+	bcc	.L189
+	.loc 2 724 0
+	cmp	r4, r2
+	bcc	.L185
+	.loc 2 730 0
+	ldrh	r7, [r5, #2428]
+	mov	r4, r2
+	movs	r1, #0
+	mov	r0, #-1
+.L190:
+	uxth	r5, r1
+	.loc 2 729 0 discriminator 1
+	cmp	r5, r2
+	bcc	.L192
+	.loc 2 735 0
+	cmp	r4, r2
+	bcc	.L185
+	.loc 2 735 0 is_stmt 0 discriminator 1
+	movw	r2, #735
+	ldr	r1, .L193+4
+	ldr	r0, .L193+8
+	bl	printk
+.LVL174:
+	b	.L185
+.L186:
+	adds	r1, r1, #1
+	.loc 2 706 0 is_stmt 1
+	mla	r7, r0, r1, r3
+	ldrh	r7, [r7, #-12]
+	cmp	r7, r6
+	bne	.L184
+.L185:
+	.loc 2 737 0
+	mov	r0, r4
+	pop	{r3, r4, r5, r6, r7, pc}
+.L189:
+	.loc 2 716 0
+	mla	r0, ip, r1, r3
+	ldr	r0, [r0, #4]
+	cmp	r0, #0
+	blt	.L188
+	.loc 2 717 0
+	cmp	r7, r0
+	itt	hi
+	movhi	r7, r0
+	movhi	r4, r6
+.L188:
+	adds	r1, r1, #1
+	b	.L187
+.L192:
+	.loc 2 730 0
+	ldr	r6, [r3, #4]
+	cmp	r0, r6
+	bls	.L191
+	.loc 2 730 0 is_stmt 0 discriminator 1
+	ldrh	ip, [r3]
+	cmp	ip, r7
+	itt	ne
+	movne	r0, r6
+	movne	r4, r5
+.L191:
+	adds	r1, r1, #1
+	adds	r3, r3, #12
+	b	.L190
+.L194:
+	.align	2
+.L193:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+99
+	.word	.LC1
+.LFE210:
+	.fnend
+	.size	select_l2p_ram_region, .-select_l2p_ram_region
+	.align	1
+	.global	FtlUpdateVaildLpn
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlUpdateVaildLpn, %function
+FtlUpdateVaildLpn:
+	.fnstart
+.LFB216:
+	.loc 2 882 0 is_stmt 1
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL175:
+	.loc 2 885 0
+	ldr	r1, .L201
+	.loc 2 882 0
+	push	{r4, r5, lr}
+	.save {r4, r5, lr}
+.LCFI28:
+	mov	r3, r1
+	.loc 2 885 0
+	ldrh	r2, [r1, #2430]
+	cmp	r2, #4
+	bhi	.L196
+	.loc 2 885 0 is_stmt 0 discriminator 1
+	cbnz	r0, .L196
+	.loc 2 885 0
+	adds	r2, r2, #1
+	strh	r2, [r1, #2430]	@ movhi
+	.loc 2 894 0 is_stmt 1
+	pop	{r4, r5, pc}
+.L196:
+	.loc 2 886 0
+	movs	r2, #0
+	ldrh	r1, [r3, #16]
+	strh	r2, [r3, #2430]	@ movhi
+.LBB276:
+.LBB277:
+	.loc 2 890 0
+	movw	r5, #65535
+.LBE277:
+.LBE276:
+	.loc 2 887 0
+	str	r2, [r3, #2432]
+.LBB279:
+.LBB278:
+	.loc 2 890 0
+	ldr	r2, [r3, #2260]
+	add	r1, r2, r1, lsl #1
+.L197:
+	.loc 2 888 0
+	cmp	r2, r1
+	bne	.L199
+	pop	{r4, r5, pc}
+.L199:
+	.loc 2 890 0
+	ldrh	r4, [r2], #2
+	cmp	r4, r5
+	.loc 2 891 0
+	ittt	ne
+	ldrne	r0, [r3, #2432]
+.LVL176:
+	addne	r0, r0, r4
+	strne	r0, [r3, #2432]
+	b	.L197
+.L202:
+	.align	2
+.L201:
+	.word	.LANCHOR0
+.LBE278:
+.LBE279:
+.LFE216:
+	.fnend
+	.size	FtlUpdateVaildLpn, .-FtlUpdateVaildLpn
+	.align	1
+	.global	ftl_set_blk_mode
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	ftl_set_blk_mode, %function
+ftl_set_blk_mode:
+	.fnstart
+.LFB222:
+	.loc 2 1347 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+.LVL177:
+	.loc 2 1347 0
+	mov	r3, r0
+	.loc 2 1348 0
+	cbz	r1, .L204
+	b	ftl_set_blk_mode.part.6
+.LVL178:
+.L204:
+	.loc 2 1351 0
+	ldr	r2, .L205
+	lsrs	r0, r0, #5
+	and	r3, r3, #31
+.LVL179:
+	ldr	r1, [r2]
+.LVL180:
+	movs	r2, #1
+	lsl	r3, r2, r3
+	ldr	r2, [r1, r0, lsl #2]
+	bic	r2, r2, r3
+	str	r2, [r1, r0, lsl #2]
+	bx	lr
+.L206:
+	.align	2
+.L205:
+	.word	.LANCHOR0
+.LFE222:
+	.fnend
+	.size	ftl_set_blk_mode, .-ftl_set_blk_mode
+	.align	1
+	.global	ftl_get_blk_mode
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	ftl_get_blk_mode, %function
+ftl_get_blk_mode:
+	.fnstart
+.LFB223:
+	.loc 2 1355 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+.LVL181:
+	.loc 2 1356 0
+	ldr	r3, .L208
+	lsrs	r2, r0, #5
+	and	r0, r0, #31
+.LVL182:
+	ldr	r3, [r3]
+	ldr	r3, [r3, r2, lsl #2]
+	lsr	r0, r3, r0
+	.loc 2 1357 0
+	and	r0, r0, #1
+	bx	lr
+.L209:
+	.align	2
+.L208:
+	.word	.LANCHOR0
+.LFE223:
+	.fnend
+	.size	ftl_get_blk_mode, .-ftl_get_blk_mode
+	.align	1
+	.global	ftl_sb_update_avl_pages
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	ftl_sb_update_avl_pages, %function
+ftl_sb_update_avl_pages:
+	.fnstart
+.LFB229:
+	.loc 2 1608 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL183:
+	.loc 2 1610 0
+	movs	r3, #0
+	.loc 2 1608 0
+	push	{r4, r5, r6, r7, lr}
+	.save {r4, r5, r6, r7, lr}
+.LCFI29:
+	.loc 2 1610 0
+	strh	r3, [r0, #4]	@ movhi
+	add	r4, r0, r2, lsl #1
+	.loc 2 1613 0
+	movw	r7, #65535
+	.loc 2 1611 0
+	ldr	r3, .L217
+	adds	r4, r4, #14
+	ldrh	r5, [r3, #8]
+.L211:
+	.loc 2 1611 0 is_stmt 0 discriminator 1
+	cmp	r2, r5
+	bcc	.L213
+	ldrh	r3, [r3, #78]
+	add	r4, r0, #16
+	.loc 2 1620 0 is_stmt 1
+	movw	r6, #65535
+	subs	r3, r3, #1
+	subs	r1, r3, r1
+.LVL184:
+	.loc 2 1622 0
+	movs	r3, #0
+	uxth	r1, r1
+.L214:
+	.loc 2 1618 0 discriminator 1
+	uxth	r2, r3
+.LVL185:
+	cmp	r5, r2
+	bhi	.L216
+	.loc 2 1625 0
+	pop	{r4, r5, r6, r7, pc}
+.LVL186:
+.L213:
+	.loc 2 1613 0
+	ldrh	r6, [r4, #2]!
+	.loc 2 1611 0
+	adds	r2, r2, #1
+.LVL187:
+	uxth	r2, r2
+.LVL188:
+	.loc 2 1613 0
+	cmp	r6, r7
+	.loc 2 1615 0
+	ittt	ne
+	ldrhne	r6, [r0, #4]
+	addne	r6, r6, #1
+	strhne	r6, [r0, #4]	@ movhi
+	b	.L211
+.LVL189:
+.L216:
+	.loc 2 1620 0
+	ldrh	r2, [r4], #2
+	adds	r3, r3, #1
+	cmp	r2, r6
+	.loc 2 1622 0
+	ittt	ne
+	ldrhne	r2, [r0, #4]
+	addne	r2, r2, r1
+	strhne	r2, [r0, #4]	@ movhi
+	b	.L214
+.L218:
+	.align	2
+.L217:
+	.word	.LANCHOR0
+.LFE229:
+	.fnend
+	.size	ftl_sb_update_avl_pages, .-ftl_sb_update_avl_pages
+	.align	1
+	.global	FtlSlcSuperblockCheck
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlSlcSuperblockCheck, %function
+FtlSlcSuperblockCheck:
+	.fnstart
+.LFB232:
+	.loc 2 2013 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL190:
+	.loc 2 2016 0
+	ldrh	r3, [r0, #4]
+	.loc 2 2013 0
+	push	{r4, r5, lr}
+	.save {r4, r5, lr}
+.LCFI30:
+	.loc 2 2016 0
+	cbz	r3, .L219
+	.loc 2 2018 0
+	ldrh	r2, [r0]
+	movw	r3, #65535
+	cmp	r2, r3
+	beq	.L219
+.LBB282:
+.LBB283:
+	.loc 2 2020 0
+	ldrb	r2, [r0, #6]	@ zero_extendqisi2
+	.loc 2 2025 0
+	movs	r5, #0
+	.loc 2 2020 0
+	adds	r2, r2, #8
+	ldrh	r1, [r0, r2, lsl #1]
+.LVL191:
+	.loc 2 2023 0
+	ldr	r2, .L225
+	ldrh	r4, [r2, #8]
+	.loc 2 2021 0
+	mov	r2, r3
+.L222:
+	cmp	r1, r2
+	beq	.L224
+.L219:
+	pop	{r4, r5, pc}
+.L224:
+	.loc 2 2022 0
+	ldrb	r3, [r0, #6]	@ zero_extendqisi2
+	adds	r3, r3, #1
+	uxtb	r3, r3
+	.loc 2 2023 0
+	cmp	r3, r4
+	.loc 2 2022 0
+	strb	r3, [r0, #6]
+	.loc 2 2024 0
+	itttt	eq
+	ldrheq	r3, [r0, #2]
+	.loc 2 2025 0
+	strbeq	r5, [r0, #6]
+	.loc 2 2024 0
+	addeq	r3, r3, #1
+	strheq	r3, [r0, #2]	@ movhi
+	.loc 2 2027 0
+	ldrb	r3, [r0, #6]	@ zero_extendqisi2
+	adds	r3, r3, #8
+	ldrh	r1, [r0, r3, lsl #1]
+	b	.L222
+.L226:
+	.align	2
+.L225:
+	.word	.LANCHOR0
+.LBE283:
+.LBE282:
+.LFE232:
+	.fnend
+	.size	FtlSlcSuperblockCheck, .-FtlSlcSuperblockCheck
+	.align	1
+	.global	make_superblock
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	make_superblock, %function
+make_superblock:
+	.fnstart
+.LFB234:
+	.loc 2 2045 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL192:
+	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI31:
+	.loc 2 2045 0
+	mov	r4, r0
+	.loc 2 2048 0
+	ldr	r6, .L232
+	ldrh	r2, [r0]
+	ldrh	r3, [r6, #16]
+	cmp	r2, r3
+	bcc	.L228
+	.loc 2 2048 0 is_stmt 0 discriminator 1
+	mov	r2, #2048
+	ldr	r1, .L232+4
+	ldr	r0, .L232+8
+	bl	printk
+.LVL193:
+.L228:
+	.loc 2 2051 0 is_stmt 1
+	ldrh	r9, [r6, #8]
+	add	r7, r4, #16
+	.loc 2 2052 0
+	ldr	r10, .L232+12
+	.loc 2 2053 0
+	movw	r8, #65535
+	.loc 2 2049 0
+	movs	r5, #0
+	strh	r5, [r4, #4]	@ movhi
+	.loc 2 2050 0
+	strb	r5, [r4, #7]
+.L229:
+	.loc 2 2051 0 discriminator 1
+	uxth	r3, r5
+	cmp	r9, r3
+	bhi	.L231
+	.loc 2 2061 0
+	ldrb	r3, [r4, #7]	@ zero_extendqisi2
+	.loc 2 2064 0
+	movs	r0, #0
+	.loc 2 2061 0
+	ldrh	r2, [r6, #78]
+	smulbb	r3, r3, r2
+	strh	r3, [r4, #4]	@ movhi
+	.loc 2 2062 0
+	movs	r3, #1
+	strb	r3, [r4, #9]
+	.loc 2 2064 0
+	pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL194:
+.L231:
+	.loc 2 2052 0
+	ldrh	r1, [r4]
+	ldrb	r0, [r10, r5]	@ zero_extendqisi2
+	bl	V2P_block
+.LVL195:
+	.loc 2 2053 0
+	strh	r8, [r7]	@ movhi
+	.loc 2 2052 0
+	mov	fp, r0
+	.loc 2 2054 0
+	bl	FtlBbmIsBadBlock
+.LVL196:
+	cbnz	r0, .L230
+	.loc 2 2055 0
+	strh	fp, [r7]	@ movhi
+	.loc 2 2056 0
+	ldrb	r3, [r4, #7]	@ zero_extendqisi2
+	adds	r3, r3, #1
+	strb	r3, [r4, #7]
+.L230:
+	adds	r5, r5, #1
+	adds	r7, r7, #2
+	b	.L229
+.L233:
+	.align	2
+.L232:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+121
+	.word	.LC1
+	.word	.LANCHOR0+36
+.LFE234:
+	.fnend
+	.size	make_superblock, .-make_superblock
+	.align	1
+	.global	update_multiplier_value
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	update_multiplier_value, %function
+update_multiplier_value:
+	.fnstart
+.LFB243:
+	.loc 2 2401 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL197:
+	push	{r4, r5, r6, r7, r8, r9, r10, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, lr}
+.LCFI32:
+	.loc 2 2405 0
+	movs	r5, #0
+	ldr	r6, .L240
+	.loc 2 2401 0
+	mov	r7, r0
+	.loc 2 2403 0
+	mov	r4, r5
+	.loc 2 2405 0
+	ldrh	r8, [r6, #8]
+	.loc 2 2406 0
+	add	r10, r6, #36
+	.loc 2 2408 0
+	ldrh	r9, [r6, #78]
+.L235:
+	.loc 2 2405 0 discriminator 1
+	uxth	r3, r5
+	cmp	r8, r3
+	bhi	.L237
+	.loc 2 2410 0
+	cbz	r4, .L239
+	.loc 2 2411 0
+	mov	r1, r4
+	mov	r0, #32768
+	bl	__aeabi_idiv
+.LVL198:
+.L238:
+	.loc 2 2412 0
+	ldr	r1, [r6, #2252]
+	movs	r3, #6
+	mla	r1, r3, r7, r1
+	strh	r0, [r1, #4]	@ movhi
+	.loc 2 2414 0
+	movs	r0, #0
+	pop	{r4, r5, r6, r7, r8, r9, r10, pc}
+.LVL199:
+.L237:
+	.loc 2 2406 0
+	mov	r1, r7
+	ldrb	r0, [r10, r5]	@ zero_extendqisi2
+	bl	V2P_block
+.LVL200:
+	.loc 2 2407 0
+	bl	FtlBbmIsBadBlock
+.LVL201:
+	cbnz	r0, .L236
+	.loc 2 2408 0
+	add	r4, r4, r9
+	uxth	r4, r4
+.L236:
+	adds	r5, r5, #1
+	b	.L235
+.L239:
+	mov	r0, r4
+	b	.L238
+.L241:
+	.align	2
+.L240:
+	.word	.LANCHOR0
+.LFE243:
+	.fnend
+	.size	update_multiplier_value, .-update_multiplier_value
+	.align	1
+	.global	GetFreeBlockMinEraseCount
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	GetFreeBlockMinEraseCount, %function
+GetFreeBlockMinEraseCount:
+	.fnstart
+.LFB244:
+	.loc 2 2417 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+	.loc 2 2420 0
+	ldr	r2, .L245
+	ldr	r0, [r2, #2272]
+	cbz	r0, .L243
+	.loc 2 2421 0
+	ldr	r3, [r2, #2252]
+	subs	r0, r0, r3
+	ldr	r3, .L245+4
+	asrs	r0, r0, #1
+	muls	r0, r3, r0
+	ldr	r3, [r2, #2248]
+	uxth	r0, r0
+	ldrh	r0, [r3, r0, lsl #1]
+.L243:
+	.loc 2 2423 0
+	bx	lr
+.L246:
+	.align	2
+.L245:
+	.word	.LANCHOR0
+	.word	-1431655765
+.LFE244:
+	.fnend
+	.size	GetFreeBlockMinEraseCount, .-GetFreeBlockMinEraseCount
+	.align	1
+	.global	GetFreeBlockMaxEraseCount
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	GetFreeBlockMaxEraseCount, %function
+GetFreeBlockMaxEraseCount:
+	.fnstart
+.LFB245:
+	.loc 2 2426 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL202:
+	.loc 2 2431 0
+	ldr	r1, .L255
+	.loc 2 2426 0
+	push	{r4, r5, r6, r7, lr}
+	.save {r4, r5, r6, r7, lr}
+.LCFI33:
+	.loc 2 2431 0
+	ldr	r3, [r1, #2272]
+	cbz	r3, .L253
+	.loc 2 2432 0
+	ldrh	r2, [r1, #2276]
+	.loc 2 2436 0
+	movs	r6, #6
+	.loc 2 2434 0
+	ldr	r4, [r1, #2252]
+	.loc 2 2436 0
+	movw	r7, #65535
+	.loc 2 2432 0
+	rsb	r2, r2, r2, lsl #3
+	.loc 2 2434 0
+	subs	r3, r3, r4
+	asrs	r3, r3, #1
+	.loc 2 2432 0
+	asrs	r2, r2, #3
+	cmp	r0, r2
+	.loc 2 2433 0
+	it	gt
+	uxthgt	r0, r2
+	.loc 2 2434 0
+	ldr	r2, .L255+4
+	muls	r3, r2, r3
+	.loc 2 2435 0
+	movs	r2, #0
+	.loc 2 2434 0
+	uxth	r3, r3
+.L250:
+	.loc 2 2435 0 discriminator 1
+	uxth	r5, r2
+	cmp	r0, r5
+	bls	.L252
+	.loc 2 2436 0
+	mul	r5, r6, r3
+	adds	r2, r2, #1
+	ldrh	r5, [r4, r5]
+	cmp	r5, r7
+	bne	.L254
+.L252:
+	.loc 2 2440 0
+	ldr	r2, [r1, #2248]
+	ldrh	r0, [r2, r3, lsl #1]
+.LVL203:
+	pop	{r4, r5, r6, r7, pc}
+.LVL204:
+.L254:
+	mov	r3, r5
+	b	.L250
+.L253:
+	.loc 2 2427 0
+	mov	r0, r3
+.LVL205:
+	.loc 2 2443 0
+	pop	{r4, r5, r6, r7, pc}
+.L256:
+	.align	2
+.L255:
+	.word	.LANCHOR0
+	.word	-1431655765
+.LFE245:
+	.fnend
+	.size	GetFreeBlockMaxEraseCount, .-GetFreeBlockMaxEraseCount
+	.align	1
+	.global	FtlPrintInfo2buf
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlPrintInfo2buf, %function
+FtlPrintInfo2buf:
+	.fnstart
+.LFB150:
+	.loc 3 11 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL206:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI34:
+	mov	r7, r0
+	.loc 3 17 0
+	ldr	r6, .L269
+	.loc 3 11 0
+	.pad #20
+	sub	sp, sp, #20
+.LCFI35:
+	.loc 3 15 0
+	add	r5, r7, #12
+	ldr	r1, .L269+4
+	bl	strcpy
+.LVL207:
+	.loc 3 17 0
+	ldr	r2, [r6, #92]
+	mov	r0, r5
+	ldr	r1, .L269+8
+	bl	sprintf
+.LVL208:
+	add	r5, r5, r0
+	.loc 3 18 0
+	ldr	r1, .L269+12
+	mov	r0, r5
+	adds	r5, r5, #10
+	bl	strcpy
+.LVL209:
+	.loc 3 19 0
+	ldr	r2, [r6, #2436]
+	mov	r0, r5
+	ldr	r1, .L269+16
+	bl	sprintf
+.LVL210:
+	add	r5, r5, r0
+	.loc 3 20 0
+	ldr	r2, [r6, #2432]
+	ldr	r1, .L269+20
+	mov	r0, r5
+	bl	sprintf
+.LVL211:
+	add	r5, r5, r0
+	.loc 3 21 0
+	ldr	r2, [r6, #2440]
+	ldr	r1, .L269+24
+	mov	r0, r5
+	bl	sprintf
+.LVL212:
+	add	r5, r5, r0
+	.loc 3 22 0
+	ldr	r2, [r6, #2444]
+	ldr	r1, .L269+28
+	mov	r0, r5
+	bl	sprintf
+.LVL213:
+	add	r5, r5, r0
+	.loc 3 23 0
+	ldr	r2, [r6, #2448]
+	ldr	r1, .L269+32
+	mov	r0, r5
+	bl	sprintf
+.LVL214:
+	add	r5, r5, r0
+	.loc 3 24 0
+	ldr	r2, [r6, #2452]
+	ldr	r1, .L269+36
+	mov	r0, r5
+	bl	sprintf
+.LVL215:
+	add	r5, r5, r0
+	.loc 3 25 0
+	ldr	r2, [r6, #2456]
+	ldr	r1, .L269+40
+	mov	r0, r5
+	bl	sprintf
+.LVL216:
+	add	r5, r5, r0
+	.loc 3 26 0
+	ldr	r2, [r6, #2460]
+	ldr	r1, .L269+44
+	mov	r0, r5
+	bl	sprintf
+.LVL217:
+	.loc 3 27 0
+	ldr	r2, [r6, #2464]
+	.loc 3 26 0
+	add	r5, r5, r0
+	.loc 3 27 0
+	ldr	r1, .L269+48
+	mov	r0, r5
+	lsrs	r2, r2, #11
+	bl	sprintf
+.LVL218:
+	.loc 3 28 0
+	ldr	r2, [r6, #2468]
+	.loc 3 27 0
+	add	r5, r5, r0
+	.loc 3 28 0
+	ldr	r1, .L269+52
+	mov	r0, r5
+	lsrs	r2, r2, #11
+	bl	sprintf
+.LVL219:
+	add	r5, r5, r0
+	.loc 3 29 0
+	ldr	r2, [r6, #2472]
+	ldr	r1, .L269+56
+	mov	r0, r5
+	bl	sprintf
+.LVL220:
+	add	r5, r5, r0
+	.loc 3 30 0
+	ldr	r2, [r6, #2476]
+	ldr	r1, .L269+60
+	mov	r0, r5
+	bl	sprintf
+.LVL221:
+	add	r5, r5, r0
+	.loc 3 31 0
+	ldrh	r2, [r6, #134]
+	ldr	r1, .L269+64
+	mov	r0, r5
+	bl	sprintf
+.LVL222:
+	add	r5, r5, r0
+	.loc 3 32 0
+	ldrh	r2, [r6, #2276]
+	ldr	r1, .L269+68
+	mov	r0, r5
+	bl	sprintf
+.LVL223:
+	add	r5, r5, r0
+	.loc 3 33 0
+	ldr	r2, [r6, #2480]
+	ldr	r1, .L269+72
+	mov	r0, r5
+	bl	sprintf
+.LVL224:
+	add	r5, r5, r0
+	.loc 3 34 0
+	ldr	r2, [r6, #2484]
+	ldr	r1, .L269+76
+	mov	r0, r5
+	bl	sprintf
+.LVL225:
+	add	r5, r5, r0
+	.loc 3 35 0
+	ldr	r2, [r6, #2488]
+	ldr	r1, .L269+80
+	mov	r0, r5
+	bl	sprintf
+.LVL226:
+	add	r5, r5, r0
+	.loc 3 36 0
+	ldr	r2, [r6, #2492]
+	ldr	r1, .L269+84
+	mov	r0, r5
+	bl	sprintf
+.LVL227:
+	add	r5, r5, r0
+	.loc 3 37 0
+	ldr	r2, [r6, #2496]
+	ldr	r1, .L269+88
+	mov	r0, r5
+	bl	sprintf
+.LVL228:
+	add	r5, r5, r0
+	.loc 3 38 0
+	ldr	r2, [r6, #2500]
+	ldr	r1, .L269+92
+	mov	r0, r5
+	bl	sprintf
+.LVL229:
+	add	r5, r5, r0
+	.loc 3 39 0
+	ldrh	r2, [r6, #2534]
+	ldr	r1, .L269+96
+	mov	r0, r5
+	bl	sprintf
+.LVL230:
+	add	r5, r5, r0
+	.loc 3 40 0
+	ldrh	r2, [r6, #2532]
+	ldr	r1, .L269+100
+	mov	r0, r5
+	bl	sprintf
+.LVL231:
+	add	r5, r5, r0
+	.loc 3 41 0
+	ldr	r2, [r6, #116]
+	ldr	r1, .L269+104
+	mov	r0, r5
+	bl	sprintf
+.LVL232:
+	add	r5, r5, r0
+	.loc 3 42 0
+	ldr	r2, [r6, #108]
+	ldr	r1, .L269+108
+	mov	r0, r5
+	bl	sprintf
+.LVL233:
+	add	r5, r5, r0
+	.loc 3 43 0
+	ldr	r2, [r6, #4]
+	ldr	r1, .L269+112
+	mov	r0, r5
+	bl	sprintf
+.LVL234:
+	add	r5, r5, r0
+	.loc 3 44 0
+	ldrh	r2, [r6, #194]
+	ldr	r1, .L269+116
+	mov	r0, r5
+	bl	sprintf
+.LVL235:
+	add	r5, r5, r0
+	.loc 3 45 0
+	ldrh	r2, [r6, #16]
+	ldr	r1, .L269+120
+	mov	r0, r5
+	bl	sprintf
+.LVL236:
+	add	r5, r5, r0
+	.loc 3 46 0
+	ldrh	r2, [r6, #2552]
+	ldr	r1, .L269+124
+	mov	r0, r5
+	bl	sprintf
+.LVL237:
+	add	r5, r5, r0
+	.loc 3 47 0
+	ldr	r2, [r6, #20]
+	ldr	r1, .L269+128
+	mov	r0, r5
+	bl	sprintf
+.LVL238:
+	add	r5, r5, r0
+	.loc 3 48 0
+	ldrh	r2, [r6, #2556]
+	ldr	r1, .L269+132
+	mov	r0, r5
+	bl	sprintf
+.LVL239:
+	add	r5, r5, r0
+	.loc 3 49 0
+	ldrh	r2, [r6, #128]
+	ldr	r1, .L269+136
+	mov	r0, r5
+	bl	sprintf
+.LVL240:
+	add	r5, r5, r0
+	.loc 3 50 0
+	ldrh	r2, [r6, #2282]
+	ldr	r1, .L269+140
+	mov	r0, r5
+	bl	sprintf
+.LVL241:
+	add	r5, r5, r0
+	.loc 3 51 0
+	ldrb	r2, [r6, #2286]	@ zero_extendqisi2
+	ldr	r1, .L269+144
+	mov	r0, r5
+	bl	sprintf
+.LVL242:
+	add	r5, r5, r0
+	.loc 3 52 0
+	ldrh	r2, [r6, #2280]
+	ldr	r1, .L269+148
+	mov	r0, r5
+	bl	sprintf
+.LVL243:
+	add	r5, r5, r0
+	.loc 3 53 0
+	ldrb	r2, [r6, #2288]	@ zero_extendqisi2
+	ldr	r1, .L269+152
+	mov	r0, r5
+	bl	sprintf
+.LVL244:
+	add	r5, r5, r0
+	.loc 3 54 0
+	ldrh	r2, [r6, #2284]
+	ldr	r1, .L269+156
+	mov	r0, r5
+	bl	sprintf
+.LVL245:
+	.loc 3 55 0
+	ldr	r3, [r6, #2260]
+	.loc 3 54 0
+	add	r5, r5, r0
+	.loc 3 55 0
+	ldrh	r2, [r6, #2280]
+	mov	r0, r5
+	ldr	r1, .L269+160
+	ldrh	r2, [r3, r2, lsl #1]
+	bl	sprintf
+.LVL246:
+	add	r5, r5, r0
+	.loc 3 56 0
+	ldrh	r2, [r6, #2330]
+	ldr	r1, .L269+164
+	mov	r0, r5
+	bl	sprintf
+.LVL247:
+	add	r5, r5, r0
+	.loc 3 57 0
+	ldrb	r2, [r6, #2334]	@ zero_extendqisi2
+	ldr	r1, .L269+168
+	mov	r0, r5
+	bl	sprintf
+.LVL248:
+	add	r5, r5, r0
+	.loc 3 58 0
+	ldrh	r2, [r6, #2328]
+	ldr	r1, .L269+172
+	mov	r0, r5
+	bl	sprintf
+.LVL249:
+	add	r5, r5, r0
+	.loc 3 59 0
+	ldrb	r2, [r6, #2336]	@ zero_extendqisi2
+	ldr	r1, .L269+176
+	mov	r0, r5
+	bl	sprintf
+.LVL250:
+	add	r5, r5, r0
+	.loc 3 60 0
+	ldrh	r2, [r6, #2332]
+	ldr	r1, .L269+180
+	mov	r0, r5
+	bl	sprintf
+.LVL251:
+	.loc 3 61 0
+	ldr	r3, [r6, #2260]
+	.loc 3 60 0
+	add	r5, r5, r0
+	.loc 3 61 0
+	ldrh	r2, [r6, #2328]
+	mov	r0, r5
+	ldr	r1, .L269+184
+	ldrh	r2, [r3, r2, lsl #1]
+	bl	sprintf
+.LVL252:
+	add	r5, r5, r0
+	.loc 3 62 0
+	ldrh	r2, [r6, #2378]
+	ldr	r1, .L269+188
+	mov	r0, r5
+	bl	sprintf
+.LVL253:
+	add	r5, r5, r0
+	.loc 3 63 0
+	ldrb	r2, [r6, #2382]	@ zero_extendqisi2
+	ldr	r1, .L269+192
+	mov	r0, r5
+	bl	sprintf
+.LVL254:
+	add	r5, r5, r0
+	.loc 3 64 0
+	ldrh	r2, [r6, #2376]
+	ldr	r1, .L269+196
+	mov	r0, r5
+	bl	sprintf
+.LVL255:
+	add	r5, r5, r0
+	.loc 3 65 0
+	ldrb	r2, [r6, #2384]	@ zero_extendqisi2
+	ldr	r1, .L269+200
+	mov	r0, r5
+	bl	sprintf
+.LVL256:
+	add	r5, r5, r0
+	.loc 3 66 0
+	ldrh	r2, [r6, #2380]
+	ldr	r1, .L269+204
+	mov	r0, r5
+	bl	sprintf
+.LVL257:
+	add	r5, r5, r0
+	.loc 3 67 0
+	ldrh	r2, [r6, #2570]
+	ldr	r1, .L269+208
+	mov	r0, r5
+	bl	sprintf
+.LVL258:
+	add	r5, r5, r0
+	.loc 3 68 0
+	ldrb	r2, [r6, #2574]	@ zero_extendqisi2
+	ldr	r1, .L269+212
+	mov	r0, r5
+	bl	sprintf
+.LVL259:
+	add	r5, r5, r0
+	.loc 3 69 0
+	ldrh	r2, [r6, #2568]
+	ldr	r1, .L269+216
+	mov	r0, r5
+	bl	sprintf
+.LVL260:
+	add	r5, r5, r0
+	.loc 3 70 0
+	ldrb	r2, [r6, #2576]	@ zero_extendqisi2
+	ldr	r1, .L269+220
+	mov	r0, r5
+	bl	sprintf
+.LVL261:
+	add	r5, r5, r0
+	.loc 3 71 0
+	ldrh	r2, [r6, #2572]
+	ldr	r1, .L269+224
+	mov	r0, r5
+	bl	sprintf
+.LVL262:
+	.loc 3 72 0
+	ldr	r3, [r6, #2692]
+	.loc 3 71 0
+	add	r5, r5, r0
+	.loc 3 72 0
+	ldr	r2, [r6, #2696]
+	mov	r0, r5
+	ldr	r1, .L269+228
+	str	r3, [sp]
+	ldr	r3, [r6, #2700]
+	bl	sprintf
+.LVL263:
+	adds	r4, r5, r0
+	.loc 3 73 0
+	ldr	r2, [r6, #2688]
+	ldr	r1, .L269+232
+	mov	r0, r4
+	bl	sprintf
+.LVL264:
+	add	r4, r4, r0
+	.loc 3 74 0
+	ldr	r2, [r6, #2712]
+	ldr	r1, .L269+236
+	mov	r0, r4
+	bl	sprintf
+.LVL265:
+	add	r4, r4, r0
+	.loc 3 75 0
+	ldrh	r2, [r6, #3128]
+	ldr	r1, .L269+240
+	mov	r0, r4
+	bl	sprintf
+.LVL266:
+	add	r4, r4, r0
+	.loc 3 76 0
+	ldrh	r2, [r6, #3130]
+	ldr	r1, .L269+244
+	mov	r0, r4
+	bl	sprintf
+.LVL267:
+	add	r4, r4, r0
+	.loc 3 77 0
+	ldr	r2, [r6, #3132]
+	b	.L270
+.L271:
+	.align	2
+.L269:
+	.word	.LANCHOR0
+	.word	.LC2
+	.word	.LC3
+	.word	.LC4
+	.word	.LC5
+	.word	.LC6
+	.word	.LC7
+	.word	.LC8
+	.word	.LC9
+	.word	.LC10
+	.word	.LC11
+	.word	.LC12
+	.word	.LC13
+	.word	.LC14
+	.word	.LC15
+	.word	.LC16
+	.word	.LC17
+	.word	.LC18
+	.word	.LC19
+	.word	.LC20
+	.word	.LC21
+	.word	.LC22
+	.word	.LC23
+	.word	.LC24
+	.word	.LC25
+	.word	.LC26
+	.word	.LC27
+	.word	.LC28
+	.word	.LC29
+	.word	.LC30
+	.word	.LC31
+	.word	.LC32
+	.word	.LC33
+	.word	.LC34
+	.word	.LC35
+	.word	.LC36
+	.word	.LC37
+	.word	.LC38
+	.word	.LC39
+	.word	.LC40
+	.word	.LC41
+	.word	.LC42
+	.word	.LC43
+	.word	.LC44
+	.word	.LC45
+	.word	.LC46
+	.word	.LC47
+	.word	.LC48
+	.word	.LC49
+	.word	.LC50
+	.word	.LC51
+	.word	.LC52
+	.word	.LC53
+	.word	.LC54
+	.word	.LC55
+	.word	.LC56
+	.word	.LC57
+	.word	.LC58
+	.word	.LC59
+	.word	.LC60
+	.word	.LC61
+	.word	.LC62
+.L270:
+	ldr	r1, .L272
+	mov	r0, r4
+	bl	sprintf
+.LVL268:
+	add	r4, r4, r0
+	.loc 3 78 0
+	ldrh	r2, [r6, #3136]
+	ldr	r1, .L272+4
+	mov	r0, r4
+	bl	sprintf
+.LVL269:
+	add	r4, r4, r0
+	.loc 3 79 0
+	bl	GetFreeBlockMinEraseCount
+.LVL270:
+	ldr	r1, .L272+8
+	mov	r2, r0
+	mov	r0, r4
+	bl	sprintf
+.LVL271:
+	add	r4, r4, r0
+	.loc 3 80 0
+	ldrh	r0, [r6, #2276]
+	bl	GetFreeBlockMaxEraseCount
+.LVL272:
+	ldr	r1, .L272+12
+	mov	r2, r0
+	mov	r0, r4
+	bl	sprintf
+.LVL273:
+	.loc 3 81 0
+	ldr	r3, .L272+16
+	.loc 3 80 0
+	add	r4, r4, r0
+	.loc 3 81 0
+	ldr	r3, [r3]
+	cmp	r3, #1
+	beq	.L258
+.LVL274:
+.L263:
+	.loc 3 104 0
+	subs	r0, r4, r7
+	.loc 3 105 0
+	add	sp, sp, #20
+.LCFI36:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL275:
+.L258:
+.LCFI37:
+	.loc 3 84 0
+	ldrh	r3, [r6, #2568]
+	movw	r2, #65535
+	cmp	r3, r2
+	beq	.L260
+	.loc 3 85 0
+	ldr	r2, [r6, #2260]
+	mov	r0, r4
+	ldr	r1, .L272+20
+	ldrh	r2, [r2, r3, lsl #1]
+	bl	sprintf
+.LVL276:
+	add	r4, r4, r0
+.L260:
+.LBB284:
+	.loc 3 87 0
+	movs	r0, #0
+	.loc 3 91 0
+	ldr	r9, .L272+28
+	.loc 3 87 0
+	bl	List_get_gc_head_node
+.LVL277:
+	uxth	r3, r0
+.LVL278:
+	.loc 3 88 0
+	movs	r5, #0
+	.loc 3 89 0
+	movw	fp, #65535
+	.loc 3 91 0
+	mov	r10, #6
+.L262:
+	.loc 3 89 0
+	cmp	r3, fp
+	beq	.L261
+	.loc 3 91 0 discriminator 2
+	ldr	r2, [r6, #2248]
+	mul	r8, r10, r3
+	mov	r0, r4
+	mov	r1, r9
+	ldrh	r2, [r2, r3, lsl #1]
+	str	r2, [sp, #8]
+	ldr	r2, [r6, #2252]
+	add	r2, r2, r8
+	ldrh	r2, [r2, #4]
+	str	r2, [sp, #4]
+	ldr	r2, [r6, #2260]
+	ldrh	r2, [r2, r3, lsl #1]
+	str	r2, [sp]
+	mov	r2, r5
+	bl	sprintf
+.LVL279:
+	.loc 3 88 0 discriminator 2
+	adds	r5, r5, #1
+	.loc 3 92 0 discriminator 2
+	ldr	r3, [r6, #2252]
+	.loc 3 88 0 discriminator 2
+	cmp	r5, #16
+	.loc 3 91 0 discriminator 2
+	add	r4, r4, r0
+	.loc 3 92 0 discriminator 2
+	ldrh	r3, [r3, r8]
+.LVL280:
+	.loc 3 88 0 discriminator 2
+	bne	.L262
+.L261:
+.LBE284:
+.LBB285:
+	.loc 3 96 0
+	ldr	r2, [r6, #2252]
+	.loc 3 97 0
+	movs	r5, #0
+	.loc 3 96 0
+	ldr	r3, [r6, #2272]
+.LVL281:
+	.loc 3 98 0
+	movw	r9, #65535
+	.loc 3 100 0
+	ldr	fp, .L272+32
+	mov	r10, #6
+	.loc 3 96 0
+	subs	r3, r3, r2
+	asrs	r2, r3, #1
+	ldr	r3, .L272+24
+	muls	r3, r2, r3
+	uxth	r3, r3
+.LVL282:
+.L264:
+	.loc 3 98 0
+	cmp	r3, r9
+	beq	.L263
+	.loc 3 100 0 discriminator 2
+	ldr	r2, [r6, #2248]
+	mul	r8, r10, r3
+	mov	r0, r4
+	mov	r1, fp
+	ldrh	r2, [r2, r3, lsl #1]
+	str	r2, [sp, #4]
+	ldr	r2, [r6, #2252]
+	add	r2, r2, r8
+	ldrh	r2, [r2, #4]
+	str	r2, [sp]
+	mov	r2, r5
+	.loc 3 97 0 discriminator 2
+	adds	r5, r5, #1
+	.loc 3 100 0 discriminator 2
+	bl	sprintf
+.LVL283:
+	.loc 3 97 0 discriminator 2
+	cmp	r5, #4
+	.loc 3 100 0 discriminator 2
+	add	r4, r4, r0
+	.loc 3 97 0 discriminator 2
+	beq	.L263
+	.loc 3 101 0
+	ldr	r3, [r6, #2252]
+	ldrh	r3, [r3, r8]
+.LVL284:
+	b	.L264
+.L273:
+	.align	2
+.L272:
+	.word	.LC63
+	.word	.LC64
+	.word	.LC65
+	.word	.LC66
+	.word	.LANCHOR2
+	.word	.LC67
+	.word	-1431655765
+	.word	.LC68
+	.word	.LC69
+.LBE285:
+.LFE150:
+	.fnend
+	.size	FtlPrintInfo2buf, .-FtlPrintInfo2buf
+	.align	1
+	.global	rknand_proc_ftlread
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	rknand_proc_ftlread, %function
+rknand_proc_ftlread:
+	.fnstart
+.LFB151:
+	.loc 3 114 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL285:
+	push	{r3, r4, r5, lr}
+	.save {r3, r4, r5, lr}
+.LCFI38:
+	.loc 3 114 0
+	mov	r5, r0
+	.loc 3 120 0
+	ldr	r2, .L275
+	ldr	r1, .L275+4
+	bl	sprintf
+.LVL286:
+	adds	r4, r5, r0
+	.loc 3 122 0
+	mov	r0, r4
+	bl	FtlPrintInfo2buf
+.LVL287:
+	add	r0, r0, r4
+	.loc 3 124 0
+	subs	r0, r0, r5
+	pop	{r3, r4, r5, pc}
+.LVL288:
+.L276:
+	.align	2
+.L275:
+	.word	.LC70
+	.word	.LC71
+.LFE151:
+	.fnend
+	.size	rknand_proc_ftlread, .-rknand_proc_ftlread
+	.align	1
+	.global	GetSwlReplaceBlock
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	GetSwlReplaceBlock, %function
+GetSwlReplaceBlock:
+	.fnstart
+.LFB246:
+	.loc 2 2447 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI39:
+	.pad #20
+	sub	sp, sp, #20
+.LCFI40:
+	.loc 2 2456 0
+	ldr	r4, .L302
+	ldr	r2, [r4, #2488]
+	ldr	r3, [r4, #2500]
+	cmp	r2, r3
+	bcs	.L278
+	.loc 2 2459 0
+	ldrh	r1, [r4, #16]
+	.loc 2 2458 0
+	movs	r3, #0
+	.loc 2 2460 0
+	ldr	r0, [r4, #2248]
+	.loc 2 2458 0
+	str	r3, [r4, #2480]
+.L279:
+	.loc 2 2459 0 discriminator 1
+	cmp	r3, r1
+	bcc	.L280
+	.loc 2 2461 0
+	ldr	r5, [r4, #2480]
+	mov	r0, r5
+	bl	__aeabi_uidiv
+.LVL289:
+	str	r0, [r4, #2488]
+	.loc 2 2462 0
+	ldr	r0, [r4, #2484]
+	ldrh	r1, [r4, #68]
+	subs	r0, r5, r0
+	bl	__aeabi_uidiv
+.LVL290:
+	str	r0, [r4, #2480]
+.L281:
+	.loc 2 2468 0
+	ldr	r6, [r4, #2500]
+	ldr	r7, [r4, #2488]
+	add	r3, r6, #256
+	cmp	r3, r7
+	bls	.L286
+	.loc 2 2468 0 is_stmt 0 discriminator 1
+	ldr	r2, [r4, #2496]
+	add	r3, r6, #768
+	cmp	r3, r2
+	bls	.L286
+.LVL291:
+.L289:
+	.loc 2 2469 0 is_stmt 1
+	movw	r5, #65535
+.L287:
+	.loc 2 2518 0
+	mov	r0, r5
+	add	sp, sp, #20
+.LCFI41:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL292:
+.L280:
+.LCFI42:
+	.loc 2 2460 0 discriminator 3
+	ldrh	r2, [r0, r3, lsl #1]
+	.loc 2 2459 0 discriminator 3
+	adds	r3, r3, #1
+	.loc 2 2460 0 discriminator 3
+	ldr	r5, [r4, #2480]
+	add	r2, r2, r5
+	str	r2, [r4, #2480]
+	b	.L279
+.L278:
+	.loc 2 2463 0
+	ldr	r3, [r4, #2496]
+	cmp	r2, r3
+	bls	.L281
+	.loc 2 2464 0
+	adds	r3, r3, #1
+	str	r3, [r4, #2496]
+	.loc 2 2465 0
+	movs	r3, #0
+.L283:
+	.loc 2 2465 0 is_stmt 0 discriminator 1
+	ldrh	r2, [r4, #16]
+	cmp	r3, r2
+	bcs	.L281
+	.loc 2 2466 0 is_stmt 1 discriminator 3
+	ldr	r1, [r4, #2248]
+	ldrh	r2, [r1, r3, lsl #1]
+	adds	r2, r2, #1
+	strh	r2, [r1, r3, lsl #1]	@ movhi
+	.loc 2 2465 0 discriminator 3
+	adds	r3, r3, #1
+	b	.L283
+.L286:
+	.loc 2 2471 0
+	ldrh	r0, [r4, #2276]
+	add	r0, r0, r0, lsl #1
+	ubfx	r0, r0, #2, #16
+	bl	GetFreeBlockMaxEraseCount
+.LVL293:
+	.loc 2 2472 0
+	add	r3, r6, #64
+	.loc 2 2471 0
+	mov	r9, r0
+.LVL294:
+	.loc 2 2472 0
+	cmp	r0, r3
+	bcs	.L288
+	.loc 2 2472 0 is_stmt 0 discriminator 1
+	cmp	r6, #30
+	bhi	.L289
+.L288:
+	.loc 2 2476 0 is_stmt 1
+	ldr	r3, [r4, #2256]
+.LVL295:
+	cmp	r3, #0
+	beq	.L289
+	.loc 2 2483 0
+	ldr	ip, [r4, #2252]
+	.loc 2 2484 0
+	movw	r1, #65535
+.LVL296:
+	ldr	r8, [r4, #2248]
+	mov	r2, r1
+	.loc 2 2483 0
+	ldr	r10, .L302+8
+	.loc 2 2479 0
+	mov	lr, r1
+	.loc 2 2495 0
+	mov	fp, #6
+.L290:
+	.loc 2 2479 0
+	ldrh	r0, [r3]
+	cmp	r0, lr
+	bne	.L293
+	mov	r5, r2
+.L292:
+	.loc 2 2498 0
+	movw	r3, #65535
+.LVL297:
+	cmp	r5, r3
+	beq	.L289
+	.loc 2 2500 0
+	ldrh	r10, [r8, r5, lsl #1]
+.LVL298:
+	lsl	fp, r5, #1
+	.loc 2 2501 0
+	cmp	r6, r10
+	bcs	.L294
+	.loc 2 2503 0
+	bl	GetFreeBlockMinEraseCount
+.LVL299:
+	cmp	r6, r0
+	.loc 2 2504 0
+	it	cc
+	strcc	r1, [r4, #2500]
+.L294:
+	.loc 2 2506 0
+	cmp	r7, r10
+	bls	.L289
+	.loc 2 2506 0 is_stmt 0 discriminator 1
+	add	r3, r10, #128
+	cmp	r9, r3
+	ble	.L289
+	.loc 2 2508 0 is_stmt 1
+	add	r3, r10, #256
+	cmp	r7, r3
+	bhi	.L295
+	.loc 2 2508 0 is_stmt 0 discriminator 1
+	ldr	r3, [r4, #2496]
+	add	r10, r10, #768
+.LVL300:
+	cmp	r10, r3
+	bcs	.L289
+.LVL301:
+.L295:
+	.loc 2 2510 0 is_stmt 1
+	str	r9, [sp, #8]
+	mov	r2, r7
+	ldrh	r3, [r8, fp]
+	mov	r1, r5
+.LVL302:
+	ldr	r0, .L302+4
+	str	r3, [sp, #4]
+	ldr	r3, [r4, #2260]
+	ldrh	r3, [r3, fp]
+	str	r3, [sp]
+	ldr	r3, [r4, #2496]
+	bl	printk
+.LVL303:
+	.loc 2 2511 0
+	movs	r3, #1
+	str	r3, [r4, #3140]
+	.loc 2 2512 0
+	b	.L287
+.LVL304:
+.L293:
+	.loc 2 2481 0
+	ldrh	r5, [r3, #4]
+	cbz	r5, .L291
+	.loc 2 2483 0
+	sub	r3, r3, ip
+.LVL305:
+	asrs	r3, r3, #1
+	mul	r3, r10, r3
+	uxth	r5, r3
+	.loc 2 2484 0
+	ldrh	r3, [r8, r5, lsl #1]
+	cmp	r6, r3
+	bcs	.L292
+	.loc 2 2489 0
+	cmp	r1, r3
+	itt	hi
+	movhi	r1, r3
+	.loc 2 2483 0
+	movhi	r2, r5
+.LVL306:
+.L291:
+	.loc 2 2495 0
+	mla	r3, fp, r0, ip
+	b	.L290
+.L303:
+	.align	2
+.L302:
+	.word	.LANCHOR0
+	.word	.LC72
+	.word	-1431655765
+.LFE246:
+	.fnend
+	.size	GetSwlReplaceBlock, .-GetSwlReplaceBlock
+	.align	1
+	.global	free_data_superblock
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	free_data_superblock, %function
+free_data_superblock:
+	.fnstart
+.LFB247:
+	.loc 2 2522 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL307:
+	.loc 2 2523 0
+	movw	r2, #65535
+	.loc 2 2522 0
+	push	{r3, lr}
+	.save {r3, lr}
+.LCFI43:
+	.loc 2 2523 0
+	cmp	r0, r2
+	beq	.L305
+.LBB288:
+.LBB289:
+	.loc 2 2525 0
+	ldr	r2, .L306
+	movs	r1, #0
+	ldr	r2, [r2, #2260]
+	strh	r1, [r2, r0, lsl #1]	@ movhi
+	.loc 2 2526 0
+	bl	INSERT_FREE_LIST
+.LVL308:
+.L305:
+.LBE289:
+.LBE288:
+	.loc 2 2528 0
+	movs	r0, #0
+.LVL309:
+	pop	{r3, pc}
+.L307:
+	.align	2
+.L306:
+	.word	.LANCHOR0
+.LFE247:
+	.fnend
+	.size	free_data_superblock, .-free_data_superblock
+	.align	1
+	.global	get_new_active_ppa
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	get_new_active_ppa, %function
+get_new_active_ppa:
+	.fnstart
+.LFB250:
+	.loc 2 2655 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL310:
+	push	{r3, r4, r5, r6, r7, lr}
+	.save {r3, r4, r5, r6, r7, lr}
+.LCFI44:
+	.loc 2 2659 0
+	movw	r3, #65535
+	ldrh	r2, [r0]
+	.loc 2 2655 0
+	mov	r4, r0
+	.loc 2 2659 0
+	cmp	r2, r3
+	bne	.L309
+	.loc 2 2659 0 is_stmt 0 discriminator 1
+	movw	r2, #2659
+	ldr	r1, .L322
+	ldr	r0, .L322+4
+	bl	printk
+.LVL311:
+.L309:
+	.loc 2 2660 0 is_stmt 1
+	ldr	r5, .L322+8
+	ldrh	r2, [r4, #2]
+	ldrh	r3, [r5, #78]
+	cmp	r2, r3
+	bne	.L310
+	.loc 2 2660 0 is_stmt 0 discriminator 1
+	movw	r2, #2660
+	ldr	r1, .L322
+	ldr	r0, .L322+4
+	bl	printk
+.LVL312:
+.L310:
+	.loc 2 2661 0 is_stmt 1
+	ldrh	r3, [r4, #4]
+	cbnz	r3, .L311
+	.loc 2 2661 0 is_stmt 0 discriminator 1
+	movw	r2, #2661
+	ldr	r1, .L322
+	ldr	r0, .L322+4
+	bl	printk
+.LVL313:
+.L311:
+	.loc 2 2663 0 is_stmt 1
+	ldrb	r2, [r4, #6]	@ zero_extendqisi2
+	.loc 2 2662 0
+	movs	r3, #0
+	.loc 2 2666 0
+	ldrh	r1, [r5, #8]
+	.loc 2 2664 0
+	movw	r6, #65535
+	.loc 2 2662 0
+	strb	r3, [r4, #10]
+	.loc 2 2663 0
+	adds	r2, r2, #8
+	ldrh	r0, [r4, r2, lsl #1]
+.LVL314:
+	.loc 2 2668 0
+	mov	r2, r3
+.L312:
+	.loc 2 2664 0
+	cmp	r0, r6
+	ldrb	r3, [r4, #6]	@ zero_extendqisi2
+	beq	.L314
+	.loc 2 2673 0
+	ldrh	r2, [r4, #4]
+	.loc 2 2672 0
+	ldrh	r6, [r4, #2]
+	.loc 2 2673 0
+	subs	r2, r2, #1
+	uxth	r2, r2
+	.loc 2 2672 0
+	orr	r6, r6, r0, lsl #10
+	.loc 2 2680 0
+	movw	r0, #65535
+.LVL315:
+	.loc 2 2673 0
+	strh	r2, [r4, #4]	@ movhi
+.L316:
+	.loc 2 2675 0
+	adds	r3, r3, #1
+	uxtb	r3, r3
+	.loc 2 2676 0
+	cmp	r1, r3
+	.loc 2 2677 0
+	itttt	eq
+	ldrheq	r3, [r4, #2]
+	addeq	r3, r3, #1
+	strheq	r3, [r4, #2]	@ movhi
+	.loc 2 2678 0
+	moveq	r3, #0
+	.loc 2 2680 0
+	add	r7, r3, #8
+	ldrh	r7, [r4, r7, lsl #1]
+	cmp	r7, r0
+	beq	.L316
+	strb	r3, [r4, #6]
+	.loc 2 2682 0
+	ldrh	r1, [r4, #2]
+	ldrh	r3, [r5, #78]
+	cmp	r1, r3
+	bne	.L308
+	.loc 2 2682 0 is_stmt 0 discriminator 1
+	cbz	r2, .L308
+	.loc 2 2682 0 discriminator 2
+	movw	r2, #2682
+	ldr	r1, .L322
+	ldr	r0, .L322+4
+	bl	printk
+.LVL316:
+.L308:
+	.loc 2 2684 0 is_stmt 1
+	mov	r0, r6
+	pop	{r3, r4, r5, r6, r7, pc}
+.LVL317:
+.L314:
+	.loc 2 2665 0
+	adds	r3, r3, #1
+	uxtb	r3, r3
+	.loc 2 2666 0
+	cmp	r3, r1
+	.loc 2 2665 0
+	strb	r3, [r4, #6]
+	.loc 2 2667 0
+	itttt	eq
+	ldrheq	r3, [r4, #2]
+	.loc 2 2668 0
+	strbeq	r2, [r4, #6]
+	.loc 2 2667 0
+	addeq	r3, r3, #1
+	strheq	r3, [r4, #2]	@ movhi
+	.loc 2 2670 0
+	ldrb	r3, [r4, #6]	@ zero_extendqisi2
+	adds	r3, r3, #8
+	ldrh	r0, [r4, r3, lsl #1]
+	b	.L312
+.L323:
+	.align	2
+.L322:
+	.word	.LANCHOR1+137
+	.word	.LC1
+	.word	.LANCHOR0
+.LFE250:
+	.fnend
+	.size	get_new_active_ppa, .-get_new_active_ppa
+	.align	1
+	.global	FtlGcBufInit
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlGcBufInit, %function
+FtlGcBufInit:
+	.fnstart
+.LFB253:
+	.file 5 "drivers/rkflash/rksftl/sftl_gc.c"
+	.loc 5 22 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	.loc 5 25 0
+	ldr	r3, .L333
+	.loc 5 30 0
+	mov	ip, #20
+	.loc 5 22 0
+	push	{r4, r5, r6, r7, r8, r9, lr}
+	.save {r4, r5, r6, r7, r8, r9, lr}
+.LCFI45:
+	.loc 5 27 0
+	mov	r9, #12
+	movs	r6, #1
+	.loc 5 25 0
+	movs	r2, #0
+	.loc 5 29 0
+	mov	r7, r3
+	.loc 5 25 0
+	str	r2, [r3, #3144]
+.L325:
+	.loc 5 26 0 discriminator 1
+	ldrh	r1, [r3, #8]
+	uxth	r0, r2
+	adds	r4, r2, #1
+	cmp	r0, r1
+	bcc	.L328
+	.loc 5 37 0 discriminator 1
+	ldr	r7, .L333
+	.loc 5 35 0 discriminator 1
+	mov	ip, #12
+	movs	r6, #0
+.L329:
+	.loc 5 34 0 discriminator 1
+	ldr	r2, [r3, #3164]
+	cmp	r1, r2
+	bcc	.L332
+	.loc 5 39 0
+	pop	{r4, r5, r6, r7, r8, r9, pc}
+.L328:
+	uxth	r2, r2
+	.loc 5 27 0 discriminator 3
+	ldr	r8, [r3, #3148]
+	mul	lr, r9, r2
+	add	r1, r8, lr
+	str	r6, [r1, #8]
+	.loc 5 28 0 discriminator 3
+	ldrh	r1, [r3, #86]
+	muls	r1, r2, r1
+	it	mi
+	addmi	r1, r1, #3
+	bic	r0, r1, #3
+	ldr	r1, [r3, #3152]
+	add	r1, r1, r0
+	str	r1, [r8, lr]
+	.loc 5 29 0 discriminator 3
+	ldr	r5, [r7, #3156]
+	ldr	r0, [r3, #3148]
+	ldrh	r1, [r3, #88]
+	muls	r1, r2, r1
+	it	mi
+	addmi	r1, r1, #3
+	bic	r1, r1, #3
+	add	r8, r0, lr
+	add	r1, r1, r5
+	str	r1, [r8, #4]
+	.loc 5 30 0 discriminator 3
+	ldr	r1, [r3, #3160]
+	mla	r2, ip, r2, r1
+	ldr	r1, [r0, lr]
+	str	r1, [r2, #8]
+	.loc 5 31 0 discriminator 3
+	ldr	r1, [r8, #4]
+	str	r1, [r2, #12]
+	mov	r2, r4
+	b	.L325
+.L332:
+	.loc 5 35 0 discriminator 3
+	mul	r0, ip, r1
+	ldr	r4, [r3, #3148]
+	.loc 5 36 0 discriminator 3
+	ldr	r5, [r3, #3152]
+	.loc 5 35 0 discriminator 3
+	adds	r2, r4, r0
+	str	r6, [r2, #8]
+	.loc 5 36 0 discriminator 3
+	ldrh	r2, [r3, #86]
+	muls	r2, r1, r2
+	it	mi
+	addmi	r2, r2, #3
+	bic	r2, r2, #3
+	add	r2, r2, r5
+	str	r2, [r4, r0]
+	.loc 5 37 0 discriminator 3
+	ldr	r2, [r3, #3148]
+	ldr	r4, [r7, #3156]
+	add	r0, r0, r2
+	ldrh	r2, [r3, #88]
+	muls	r2, r1, r2
+	it	mi
+	addmi	r2, r2, #3
+	bic	r2, r2, #3
+	.loc 5 34 0 discriminator 3
+	adds	r1, r1, #1
+	.loc 5 37 0 discriminator 3
+	add	r2, r2, r4
+	.loc 5 34 0 discriminator 3
+	uxth	r1, r1
+	.loc 5 37 0 discriminator 3
+	str	r2, [r0, #4]
+	b	.L329
+.L334:
+	.align	2
+.L333:
+	.word	.LANCHOR0
+.LFE253:
+	.fnend
+	.size	FtlGcBufInit, .-FtlGcBufInit
+	.align	1
+	.global	FtlGcBufFree
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlGcBufFree, %function
+FtlGcBufFree:
+	.fnstart
+.LFB254:
+	.loc 5 42 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL318:
+	.loc 5 47 0
+	ldr	r3, .L342
+	.loc 5 42 0
+	push	{r4, r5, r6, r7, r8, r9, r10, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, lr}
+.LCFI46:
+	.loc 5 46 0
+	movs	r5, #0
+	.loc 5 48 0
+	mov	r10, #20
+	mov	lr, #12
+	.loc 5 49 0
+	mov	r8, r5
+	.loc 5 47 0
+	ldr	ip, [r3, #3164]
+	.loc 5 48 0
+	ldr	r6, [r3, #3148]
+.L336:
+	uxth	r3, r5
+	.loc 5 46 0 discriminator 1
+	cmp	r1, r3
+	bls	.L335
+	.loc 5 48 0
+	mla	r4, r10, r3, r0
+	movs	r2, #0
+.L337:
+	uxth	r3, r2
+	.loc 5 47 0 discriminator 1
+	cmp	ip, r3
+	bls	.L338
+	.loc 5 48 0
+	mul	r3, lr, r3
+	ldr	r7, [r4, #8]
+	adds	r2, r2, #1
+	add	r9, r6, r3
+	ldr	r3, [r6, r3]
+	cmp	r3, r7
+	bne	.L337
+	.loc 5 49 0
+	str	r8, [r9, #8]
+.L338:
+	adds	r5, r5, #1
+	b	.L336
+.L335:
+	pop	{r4, r5, r6, r7, r8, r9, r10, pc}
+.L343:
+	.align	2
+.L342:
+	.word	.LANCHOR0
+.LFE254:
+	.fnend
+	.size	FtlGcBufFree, .-FtlGcBufFree
+	.align	1
+	.global	FtlGcBufAlloc
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlGcBufAlloc, %function
+FtlGcBufAlloc:
+	.fnstart
+.LFB255:
+	.loc 5 57 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL319:
+	.loc 5 62 0
+	ldr	r3, .L351
+	.loc 5 63 0
+	mov	ip, #12
+	.loc 5 57 0
+	push	{r4, r5, r6, r7, r8, r9, lr}
+	.save {r4, r5, r6, r7, r8, r9, lr}
+.LCFI47:
+	.loc 5 61 0
+	movs	r4, #0
+	.loc 5 64 0
+	mov	lr, #1
+	.loc 5 65 0
+	mov	r8, #20
+	.loc 5 62 0
+	ldr	r5, [r3, #3164]
+	.loc 5 63 0
+	ldr	r6, [r3, #3148]
+.L345:
+	uxth	r2, r4
+	.loc 5 61 0 discriminator 1
+	cmp	r1, r2
+	bhi	.L349
+	.loc 5 71 0
+	pop	{r4, r5, r6, r7, r8, r9, pc}
+.L349:
+	mov	r9, #0
+.L346:
+	uxth	r3, r9
+	.loc 5 62 0 discriminator 1
+	cmp	r5, r3
+	bls	.L347
+	.loc 5 63 0
+	mla	r3, ip, r3, r6
+	add	r9, r9, #1
+	ldr	r7, [r3, #8]
+	cmp	r7, #0
+	bne	.L346
+	.loc 5 65 0
+	mla	r2, r8, r2, r0
+	ldr	r7, [r3]
+	.loc 5 64 0
+	str	lr, [r3, #8]
+	.loc 5 65 0
+	str	r7, [r2, #8]
+	.loc 5 66 0
+	ldr	r3, [r3, #4]
+	str	r3, [r2, #12]
+.L347:
+	adds	r4, r4, #1
+	b	.L345
+.L352:
+	.align	2
+.L351:
+	.word	.LANCHOR0
+.LFE255:
+	.fnend
+	.size	FtlGcBufAlloc, .-FtlGcBufAlloc
+	.align	1
+	.global	IsBlkInGcList
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	IsBlkInGcList, %function
+IsBlkInGcList:
+	.fnstart
+.LFB256:
+	.loc 5 74 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+.LVL320:
+	.loc 5 78 0
+	ldr	r2, .L358
+	ldr	r3, [r2, #3168]
+	ldrh	r2, [r2, #3172]
+	add	r2, r3, r2, lsl #1
+.L354:
+	.loc 5 77 0 discriminator 1
+	cmp	r3, r2
+	bne	.L356
+	.loc 5 81 0
+	movs	r0, #0
+.LVL321:
+	bx	lr
+.LVL322:
+.L356:
+	.loc 5 78 0
+	ldrh	r1, [r3], #2
+	cmp	r1, r0
+	bne	.L354
+	.loc 5 79 0
+	movs	r0, #1
+.LVL323:
+	.loc 5 82 0
+	bx	lr
+.L359:
+	.align	2
+.L358:
+	.word	.LANCHOR0
+.LFE256:
+	.fnend
+	.size	IsBlkInGcList, .-IsBlkInGcList
+	.align	1
+	.global	FtlGcUpdatePage
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlGcUpdatePage, %function
+FtlGcUpdatePage:
+	.fnstart
+.LFB257:
+	.loc 5 85 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL324:
+	push	{r3, r4, r5, r6, r7, lr}
+	.save {r3, r4, r5, r6, r7, lr}
+.LCFI48:
+	.loc 5 85 0
+	mov	r5, r0
+	.loc 5 88 0
+	ubfx	r0, r0, #10, #16
+.LVL325:
+	.loc 5 85 0
+	mov	r6, r1
+	mov	r7, r2
+	.loc 5 91 0
+	movs	r4, #0
+	.loc 5 88 0
+	bl	P2V_block_in_plane
+.LVL326:
+	.loc 5 91 0
+	ldr	r3, .L364
+	ldrh	r1, [r3, #3172]
+	.loc 5 92 0
+	ldr	r2, [r3, #3168]
+.LVL327:
+.L361:
+	uxth	ip, r4
+.LVL328:
+	.loc 5 91 0 discriminator 1
+	cmp	ip, r1
+	bcc	.L363
+	.loc 5 96 0
+	bne	.L362
+	.loc 5 97 0
+	strh	r0, [r2, ip, lsl #1]	@ movhi
+.LVL329:
+	.loc 5 98 0
+	ldrh	r0, [r3, #3172]
+.LVL330:
+	adds	r0, r0, #1
+	strh	r0, [r3, #3172]	@ movhi
+	b	.L362
+.LVL331:
+.L363:
+	adds	r4, r4, #1
+	.loc 5 92 0
+	add	ip, r2, r4, lsl #1
+.LVL332:
+	ldrh	ip, [ip, #-2]
+	cmp	ip, r0
+	bne	.L361
+.LVL333:
+.L362:
+	.loc 5 101 0
+	ldrh	r2, [r3, #3180]
+	movs	r0, #12
+.LVL334:
+	muls	r0, r2, r0
+	ldr	r2, [r3, #3176]
+	adds	r1, r2, r0
+	str	r6, [r1, #4]
+	.loc 5 102 0
+	str	r7, [r1, #8]
+	.loc 5 103 0
+	str	r5, [r2, r0]
+	.loc 5 107 0
+	ldrh	r2, [r3, #3180]
+	adds	r2, r2, #1
+	strh	r2, [r3, #3180]	@ movhi
+	pop	{r3, r4, r5, r6, r7, pc}
+.LVL335:
+.L365:
+	.align	2
+.L364:
+	.word	.LANCHOR0
+.LFE257:
+	.fnend
+	.size	FtlGcUpdatePage, .-FtlGcUpdatePage
+	.align	1
+	.global	FtlGcRefreshBlock
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlGcRefreshBlock, %function
+FtlGcRefreshBlock:
+	.fnstart
+.LFB264:
+	.loc 5 345 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL336:
+	push	{r4, lr}
+	.save {r4, lr}
+.LCFI49:
+	.loc 5 347 0
+	mov	r1, r0
+	.loc 5 345 0
+	mov	r4, r0
+	.loc 5 347 0
+	ldr	r0, .L369
+.LVL337:
+	bl	printk
+.LVL338:
+	.loc 5 349 0
+	ldr	r3, .L369+4
+	ldrh	r0, [r3, #3182]
+	cmp	r4, r0
+	beq	.L367
+	.loc 5 349 0 is_stmt 0 discriminator 1
+	ldrh	r1, [r3, #3184]
+	cmp	r4, r1
+	beq	.L367
+	.loc 5 351 0 is_stmt 1
+	movw	r2, #65535
+	cmp	r0, r2
+	bne	.L368
+	.loc 5 352 0
+	strh	r4, [r3, #3182]	@ movhi
+.L367:
+	.loc 5 356 0
+	movs	r0, #0
+	pop	{r4, pc}
+.LVL339:
+.L368:
+	.loc 5 353 0
+	cmp	r1, r2
+	.loc 5 354 0
+	it	eq
+	strheq	r4, [r3, #3184]	@ movhi
+	b	.L367
+.L370:
+	.align	2
+.L369:
+	.word	.LC73
+	.word	.LANCHOR0
+.LFE264:
+	.fnend
+	.size	FtlGcRefreshBlock, .-FtlGcRefreshBlock
+	.align	1
+	.global	FtlGcMarkBadPhyBlk
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlGcMarkBadPhyBlk, %function
+FtlGcMarkBadPhyBlk:
+	.fnstart
+.LFB265:
+	.loc 5 359 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL340:
+	push	{r4, r5, r6, lr}
+	.save {r4, r5, r6, lr}
+.LCFI50:
+	.loc 5 359 0
+	mov	r5, r0
+	.loc 5 364 0
+	ldr	r4, .L375
+	.loc 5 361 0
+	bl	P2V_block_in_plane
+.LVL341:
+	.loc 5 364 0
+	mov	r2, r5
+	.loc 5 361 0
+	mov	r6, r0
+	.loc 5 364 0
+	ldrh	r1, [r4, #3186]
+	ldr	r0, .L375+4
+	bl	printk
+.LVL342:
+	.loc 5 366 0
+	mov	r0, r6
+	bl	FtlGcRefreshBlock
+.LVL343:
+	.loc 5 368 0
+	ldrh	r3, [r4, #3186]
+	movs	r2, #0
+	.loc 5 369 0
+	addw	r0, r4, #3188
+.L372:
+	.loc 5 368 0 discriminator 1
+	uxth	r1, r2
+	cmp	r3, r1
+	bhi	.L374
+	.loc 5 372 0
+	cmp	r3, #15
+	.loc 5 373 0
+	itttt	ls
+	addls	r2, r3, #1
+	strhls	r2, [r4, #3186]	@ movhi
+	addls	r4, r4, r3, lsl #1
+	strhls	r5, [r4, #3188]	@ movhi
+	b	.L373
+.L374:
+	adds	r2, r2, #1
+	.loc 5 369 0
+	add	r1, r0, r2, lsl #1
+	ldrh	r1, [r1, #-2]
+	cmp	r1, r5
+	bne	.L372
+.L373:
+	.loc 5 375 0
+	movs	r0, #0
+	pop	{r4, r5, r6, pc}
+.LVL344:
+.L376:
+	.align	2
+.L375:
+	.word	.LANCHOR0
+	.word	.LC74
+.LFE265:
+	.fnend
+	.size	FtlGcMarkBadPhyBlk, .-FtlGcMarkBadPhyBlk
+	.align	1
+	.global	FtlGcReFreshBadBlk
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlGcReFreshBadBlk, %function
+FtlGcReFreshBadBlk:
+	.fnstart
+.LFB266:
+	.loc 5 379 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, lr}
+	.save {r4, lr}
+.LCFI51:
+	.loc 5 380 0
+	ldr	r4, .L383
+	ldrh	r3, [r4, #3186]
+	cbz	r3, .L378
+	.loc 5 380 0 is_stmt 0 discriminator 1
+	ldrh	r1, [r4, #3182]
+	movw	r2, #65535
+	cmp	r1, r2
+	bne	.L378
+	.loc 5 381 0 is_stmt 1
+	ldrh	r2, [r4, #3222]
+	cmp	r2, r3
+	.loc 5 382 0
+	itt	cs
+	movcs	r3, #0
+	strhcs	r3, [r4, #3222]	@ movhi
+.LBB292:
+.LBB293:
+	.loc 5 383 0
+	ldrh	r3, [r4, #3222]
+	add	r3, r4, r3, lsl #1
+	ldrh	r0, [r3, #3188]
+	bl	P2V_block_in_plane
+.LVL345:
+	bl	FtlGcRefreshBlock
+.LVL346:
+	.loc 5 384 0
+	ldrh	r3, [r4, #3222]
+	adds	r3, r3, #1
+	strh	r3, [r4, #3222]	@ movhi
+.L378:
+.LBE293:
+.LBE292:
+	.loc 5 387 0
+	movs	r0, #0
+	pop	{r4, pc}
+.L384:
+	.align	2
+.L383:
+	.word	.LANCHOR0
+.LFE266:
+	.fnend
+	.size	FtlGcReFreshBadBlk, .-FtlGcReFreshBadBlk
+	.align	1
+	.global	FlashReadPages
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FlashReadPages, %function
+FlashReadPages:
+	.fnstart
+.LFB272:
+	.loc 1 44 0
+	@ args = 0, pretend = 0, frame = 16
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL347:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI52:
+	mov	r9, r1
+	.loc 1 46 0
+	ldr	r5, .L403
+	mov	r4, r0
+	.loc 1 50 0
+	movs	r6, #0
+.LVL348:
+	.loc 1 44 0
+	.pad #20
+	sub	sp, sp, #20
+.LCFI53:
+	.loc 1 51 0
+	ldr	r10, .L403+4
+	.loc 1 46 0
+	ldrh	r7, [r5, #12]
+.LVL349:
+	.loc 1 51 0
+	ldr	fp, .L403+8
+	.loc 1 53 0
+	ldr	r8, .L403+12
+	str	r5, [sp, #4]
+.LVL350:
+.L386:
+	.loc 1 50 0 discriminator 1
+	cmp	r6, r9
+	bne	.L393
+	.loc 1 71 0
+	movs	r0, #0
+.LVL351:
+	add	sp, sp, #20
+.LCFI54:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL352:
+.L393:
+.LCFI55:
+	.loc 1 51 0
+	ldr	r3, [r4, #8]
+	cbz	r3, .L387
+	.loc 1 51 0 is_stmt 0 discriminator 2
+	ldr	r3, [r4, #12]
+	cbnz	r3, .L388
+.L387:
+	.loc 1 51 0 discriminator 3
+	movs	r2, #51
+.LVL353:
+	mov	r1, r10
+	mov	r0, fp
+.LVL354:
+	bl	printk
+.LVL355:
+.L388:
+	.loc 1 52 0 is_stmt 1
+	add	r2, sp, #8
+.LVL356:
+	add	r1, sp, #12
+	mov	r0, r4
+.LVL357:
+	bl	l2p_addr_tran
+.LVL358:
+	.loc 1 53 0
+	ldr	r3, [r4, #12]
+	ldr	r2, [r4, #8]
+	ldr	r1, [sp, #12]
+	ldrb	r0, [sp, #8]	@ zero_extendqisi2
+	ldr	r5, [r8, #12]
+	blx	r5
+.LVL359:
+	.loc 1 58 0
+	ldr	r3, [sp, #4]
+	.loc 1 57 0
+	str	r0, [r4]
+	.loc 1 58 0
+	ldrh	r3, [r3, #14]
+	cmp	r3, #4
+	bne	.L390
+	.loc 1 59 0
+	ldr	r3, [r4, #12]
+	ldr	r2, [r4, #8]
+	ldr	r1, [sp, #12]
+	adds	r3, r3, #8
+	ldrb	r0, [sp, #8]	@ zero_extendqisi2
+	add	r2, r2, #2048
+	ldr	r5, [r8, #12]
+	add	r1, r1, r7
+	blx	r5
+.LVL360:
+	.loc 1 63 0
+	adds	r0, r0, #1
+	beq	.L391
+	.loc 1 64 0 discriminator 1
+	ldr	r3, [r4, #12]
+	.loc 1 63 0 discriminator 1
+	ldr	r2, [r3, #12]
+	adds	r2, r2, #1
+	bne	.L390
+	.loc 1 64 0
+	ldr	r2, [r3, #8]
+	adds	r2, r2, #1
+	bne	.L390
+	.loc 1 65 0
+	ldr	r3, [r3]
+	adds	r3, r3, #1
+	beq	.L390
+.L391:
+	.loc 1 67 0
+	mov	r3, #-1
+	str	r3, [r4]
+.L390:
+	.loc 1 50 0 discriminator 2
+	adds	r6, r6, #1
+	adds	r4, r4, #20
+	b	.L386
+.L404:
+	.align	2
+.L403:
+	.word	g_nand_phy_info
+	.word	.LANCHOR1+156
+	.word	.LC1
+	.word	g_nand_ops
+.LFE272:
+	.fnend
+	.size	FlashReadPages, .-FlashReadPages
+	.align	1
+	.global	FtlLoadFactoryBbt
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlLoadFactoryBbt, %function
+FtlLoadFactoryBbt:
+	.fnstart
+.LFB180:
+	.loc 4 279 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, r5, r6, r7, r8, r9, r10, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, lr}
+.LCFI56:
+	.loc 4 289 0
+	movs	r6, #0
+.LVL361:
+	.loc 4 286 0
+	ldr	r4, .L415
+	.loc 4 301 0
+	movw	r10, #61664
+	.loc 4 286 0
+	ldr	r3, [r4, #2244]
+	add	r7, r4, #138
+	.loc 4 287 0
+	ldr	r8, [r4, #3244]
+	.loc 4 294 0
+	addw	r9, r4, #3224
+	.loc 4 286 0
+	str	r3, [r4, #3232]
+	.loc 4 287 0
+	str	r8, [r4, #3236]
+.LVL362:
+.L406:
+	.loc 4 289 0 discriminator 1
+	ldrh	r3, [r4, #30]
+	cmp	r6, r3
+	bcc	.L411
+	.loc 4 314 0
+	movs	r0, #0
+	pop	{r4, r5, r6, r7, r8, r9, r10, pc}
+.LVL363:
+.L411:
+	.loc 4 291 0
+	ldrh	r5, [r4, #74]
+.LVL364:
+	.loc 4 290 0
+	movw	r3, #65535
+	strh	r3, [r7, #2]!	@ movhi
+.LVL365:
+.L408:
+	.loc 4 291 0 discriminator 2
+	ldrh	r3, [r4, #74]
+	subs	r5, r5, #1
+.LVL366:
+	uxth	r5, r5
+.LVL367:
+	sub	r2, r3, #16
+	cmp	r5, r2
+	ble	.L409
+	.loc 4 292 0
+	mla	r3, r6, r3, r5
+	.loc 4 294 0
+	movs	r2, #1
+	mov	r1, r2
+	mov	r0, r9
+	.loc 4 292 0
+	lsls	r3, r3, #10
+.LVL368:
+	.loc 4 293 0
+	str	r3, [r4, #3228]
+	.loc 4 294 0
+	bl	FlashReadPages
+.LVL369:
+	.loc 4 295 0
+	ldr	r3, [r4, #3224]
+	adds	r3, r3, #1
+	beq	.L408
+	.loc 4 301 0
+	ldrh	r3, [r8]
+	cmp	r3, r10
+	bne	.L408
+	.loc 4 303 0
+	strh	r5, [r7]	@ movhi
+.L409:
+	.loc 4 289 0 discriminator 2
+	adds	r6, r6, #1
+	b	.L406
+.L416:
+	.align	2
+.L415:
+	.word	.LANCHOR0
+.LFE180:
+	.fnend
+	.size	FtlLoadFactoryBbt, .-FtlLoadFactoryBbt
+	.align	1
+	.global	FtlGetLastWrittenPage
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlGetLastWrittenPage, %function
+FtlGetLastWrittenPage:
+	.fnstart
+.LFB186:
+	.loc 2 47 0
+	@ args = 0, pretend = 0, frame = 88
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL370:
+	ldr	r3, .L425
+	.loc 2 51 0
+	cmp	r1, #1
+	.loc 2 47 0
+	push	{r4, r5, r6, r7, r8, lr}
+	.save {r4, r5, r6, r7, r8, lr}
+.LCFI57:
+	.loc 2 57 0
+	lsl	r7, r0, #10
+	.loc 2 47 0
+	.pad #88
+	sub	sp, sp, #88
+.LCFI58:
+	.loc 2 58 0
+	mov	r2, r1
+	.loc 2 47 0
+	mov	r6, r1
+	.loc 2 51 0
+	it	eq
+	ldrheq	r4, [r3, #80]
+	.loc 2 58 0
+	mov	r1, #1
+.LVL371:
+	.loc 2 51 0
+	it	ne
+	ldrhne	r4, [r3, #78]
+	.loc 2 58 0
+	add	r0, sp, #4
+.LVL372:
+	.loc 2 53 0
+	ldr	r3, .L425+4
+	.loc 2 56 0
+	subs	r4, r4, #1
+	sxth	r5, r4
+.LVL373:
+	.loc 2 53 0
+	str	r3, [sp, #12]
+	.loc 2 54 0
+	add	r3, sp, #24
+	str	r3, [sp, #16]
+	.loc 2 57 0
+	orr	r3, r5, r7
+	str	r3, [sp, #8]
+	.loc 2 58 0
+	bl	FlashReadPages
+.LVL374:
+	.loc 2 59 0
+	ldr	r3, [sp, #24]
+	adds	r3, r3, #1
+	bne	.L420
+	mov	r8, #0
+.LVL375:
+.L421:
+	.loc 2 60 0
+	cmp	r8, r5
+	ble	.L424
+.L420:
+	.loc 2 73 0
+	mov	r0, r5
+	add	sp, sp, #88
+.LCFI59:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, pc}
+.LVL376:
+.L424:
+.LCFI60:
+	.loc 2 61 0
+	add	r4, r8, r5
+	.loc 2 63 0
+	mov	r2, r6
+	.loc 2 61 0
+	add	r4, r4, r4, lsr #31
+	.loc 2 63 0
+	movs	r1, #1
+	add	r0, sp, #4
+	.loc 2 61 0
+	asrs	r4, r4, #1
+	.loc 2 62 0
+	sxth	r3, r4
+	orrs	r3, r3, r7
+	str	r3, [sp, #8]
+	.loc 2 63 0
+	bl	FlashReadPages
+.LVL377:
+	.loc 2 65 0
+	ldr	r3, [sp, #24]
+	adds	r3, r3, #1
+	bne	.L422
+	.loc 2 65 0 is_stmt 0 discriminator 1
+	ldr	r3, [sp, #28]
+	adds	r3, r3, #1
+	bne	.L422
+	.loc 2 66 0 is_stmt 1
+	subs	r4, r4, #1
+	sxth	r5, r4
+	b	.L421
+.L422:
+	.loc 2 68 0
+	adds	r4, r4, #1
+	sxth	r8, r4
+	b	.L421
+.L426:
+	.align	2
+.L425:
+	.word	.LANCHOR0
+	.word	ftl_temp_buf
+.LFE186:
+	.fnend
+	.size	FtlGetLastWrittenPage, .-FtlGetLastWrittenPage
+	.align	1
+	.global	FlashProgPages
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FlashProgPages, %function
+FlashProgPages:
+	.fnstart
+.LFB273:
+	.loc 1 74 0
+	@ args = 0, pretend = 0, frame = 40
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL378:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI61:
+	.pad #44
+	sub	sp, sp, #44
+.LCFI62:
+	.loc 1 74 0
+	str	r3, [sp]
+	mov	fp, r1
+	mov	r9, r2
+	mov	r4, r0
+	.loc 1 76 0
+	ldr	r3, .L457
+.LVL379:
+	.loc 1 80 0
+	mov	r5, r0
+.LVL380:
+	.loc 1 83 0
+	ldr	r8, .L457+28
+	.loc 1 80 0
+	movs	r6, #0
+	.loc 1 76 0
+	ldrh	r10, [r3, #12]
+.LVL381:
+	str	r3, [sp, #4]
+.LVL382:
+.L428:
+	.loc 1 80 0 discriminator 1
+	cmp	r6, fp
+	bne	.L436
+	.loc 1 101 0
+	ldr	r3, [sp]
+.LVL383:
+	cmp	r3, #0
+	bne	.L443
+.L456:
+	.loc 1 131 0
+	movs	r0, #0
+	add	sp, sp, #44
+.LCFI63:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL384:
+.L436:
+.LCFI64:
+	.loc 1 81 0
+	ldr	r3, [r5, #8]
+	cbz	r3, .L429
+	.loc 1 81 0 is_stmt 0 discriminator 2
+	ldr	r3, [r5, #12]
+	cbnz	r3, .L430
+.L429:
+	.loc 1 81 0 discriminator 3
+	movs	r2, #81
+	ldr	r1, .L457+4
+	ldr	r0, .L457+8
+	bl	printk
+.LVL385:
+.L430:
+	.loc 1 82 0 is_stmt 1
+	add	r2, sp, #12
+	add	r1, sp, #16
+	mov	r0, r5
+	bl	l2p_addr_tran
+.LVL386:
+	.loc 1 83 0
+	ldr	r3, [r5, #12]
+	ldr	r2, [r5, #8]
+	ldr	r1, [sp, #16]
+	ldrb	r0, [sp, #12]	@ zero_extendqisi2
+	ldr	r7, [r8, #8]
+	blx	r7
+.LVL387:
+	.loc 1 88 0
+	cbnz	r0, .L431
+	.loc 1 87 0
+	str	r0, [r5]
+.L432:
+	.loc 1 91 0
+	ldr	r3, [sp, #4]
+	ldrh	r3, [r3, #14]
+	cmp	r3, #4
+	bne	.L434
+	.loc 1 92 0
+	ldr	r3, [r5, #12]
+	ldr	r2, [r5, #8]
+	ldr	r1, [sp, #16]
+	adds	r3, r3, #8
+	ldrb	r0, [sp, #12]	@ zero_extendqisi2
+	add	r2, r2, #2048
+	ldr	r7, [r8, #8]
+	add	r1, r1, r10
+	blx	r7
+.LVL388:
+	.loc 1 96 0
+	cbz	r0, .L434
+	.loc 1 97 0
+	mov	r3, #-1
+	str	r3, [r5]
+.L434:
+	.loc 1 80 0 discriminator 2
+	adds	r6, r6, #1
+	adds	r5, r5, #20
+	b	.L428
+.L431:
+	.loc 1 89 0
+	mov	r3, #-1
+	str	r3, [r5]
+	b	.L432
+.LVL389:
+.L441:
+.LBB294:
+	.loc 1 106 0
+	movs	r3, #0
+.LVL390:
+	.loc 1 112 0
+	mov	r2, r9
+	.loc 1 106 0
+	str	r3, [r7]
+	.loc 1 112 0
+	movs	r1, #1
+	.loc 1 107 0
+	str	r3, [r8, #3248]
+	.loc 1 112 0
+	add	r0, sp, #20
+	.loc 1 108 0
+	ldr	r3, [r4, #4]
+	.loc 1 109 0
+	str	r7, [sp, #28]
+	.loc 1 110 0
+	str	r10, [sp, #32]
+	.loc 1 108 0
+	str	r3, [sp, #24]
+	.loc 1 112 0
+	bl	FlashReadPages
+.LVL391:
+	.loc 1 113 0
+	ldr	fp, [sp, #20]
+.LVL392:
+	cmp	fp, #-1
+	bne	.L438
+	.loc 1 114 0
+	ldr	r1, [r4, #4]
+	ldr	r0, .L457+12
+	bl	printk
+.LVL393:
+	.loc 1 115 0
+	str	fp, [r4]
+.L438:
+	.loc 1 117 0
+	ldr	r3, [r4, #12]
+	cbz	r3, .L439
+	.loc 1 118 0
+	ldr	r2, [r3]
+	ldr	r3, [r8, #3248]
+	cmp	r2, r3
+	beq	.L439
+	.loc 1 119 0
+	ldr	r1, [r4, #4]
+	ldr	r0, .L457+16
+	bl	printk
+.LVL394:
+	.loc 1 120 0
+	mov	r3, #-1
+	str	r3, [r4]
+.L439:
+	.loc 1 123 0
+	ldr	r3, [r4, #8]
+	cbz	r3, .L440
+	.loc 1 124 0
+	ldr	r2, [r3]
+	ldr	r3, [r7]
+	cmp	r2, r3
+	beq	.L440
+	.loc 1 125 0
+	ldr	r1, [r4, #4]
+	ldr	r0, .L457+20
+	bl	printk
+.LVL395:
+	.loc 1 126 0
+	mov	r3, #-1
+	str	r3, [r4]
+.L440:
+.LBE294:
+	.loc 1 103 0 discriminator 2
+	adds	r5, r5, #1
+	adds	r4, r4, #20
+.LVL396:
+.L437:
+	.loc 1 103 0 is_stmt 0 discriminator 1
+	cmp	r6, r5
+	bne	.L441
+	b	.L456
+.LVL397:
+.L443:
+.LBB295:
+	.loc 1 107 0 is_stmt 1
+	ldr	r8, .L457+32
+.LBE295:
+	movs	r5, #0
+.LBB296:
+	.loc 1 106 0
+	ldr	r7, .L457+24
+	.loc 1 110 0
+	add	r10, r8, #3248
+.LVL398:
+	b	.L437
+.L458:
+	.align	2
+.L457:
+	.word	g_nand_phy_info
+	.word	.LANCHOR1+171
+	.word	.LC1
+	.word	.LC75
+	.word	.LC76
+	.word	.LC77
+	.word	check_buf
+	.word	g_nand_ops
+	.word	.LANCHOR0
+.LBE296:
+.LFE273:
+	.fnend
+	.size	FlashProgPages, .-FlashProgPages
+	.align	1
+	.global	FlashEraseBlocks
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FlashEraseBlocks, %function
+FlashEraseBlocks:
+	.fnstart
+.LFB274:
+	.loc 1 134 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL399:
+	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
+	.save {r4, r5, r6, r7, r8, r9, lr}
+	.pad #12
+.LCFI65:
+.LVL400:
+	.loc 1 134 0
+	mov	r8, r2
+	.loc 1 137 0
+	ldr	r5, .L470
+.LVL401:
+	mov	r4, r0
+	.loc 1 140 0
+	movs	r6, #0
+.LVL402:
+	.loc 1 142 0
+	ldr	r7, .L470+4
+	.loc 1 137 0
+	ldrh	r9, [r5, #12]
+.LVL403:
+.L460:
+	.loc 1 140 0 discriminator 1
+	cmp	r6, r8
+	bne	.L466
+	.loc 1 153 0
+	movs	r0, #0
+.LVL404:
+	add	sp, sp, #12
+.LCFI66:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, pc}
+.LVL405:
+.L466:
+.LCFI67:
+	.loc 1 141 0
+	add	r1, sp, #4
+	mov	r2, sp
+	mov	r0, r4
+.LVL406:
+	bl	l2p_addr_tran
+.LVL407:
+	.loc 1 142 0
+	ldr	r3, [r7, #4]
+	ldr	r1, [sp, #4]
+	ldrb	r0, [sp]	@ zero_extendqisi2
+	blx	r3
+.LVL408:
+	.loc 1 144 0
+	cbnz	r0, .L461
+	.loc 1 143 0
+	str	r0, [r4]
+.L462:
+	.loc 1 146 0
+	ldrh	r3, [r5, #14]
+	cmp	r3, #4
+	bne	.L464
+	.loc 1 147 0
+	ldr	r1, [sp, #4]
+	ldr	r3, [r7, #4]
+	ldrb	r0, [sp]	@ zero_extendqisi2
+	add	r1, r1, r9
+	blx	r3
+.LVL409:
+	.loc 1 148 0
+	cbz	r0, .L464
+	.loc 1 149 0
+	mov	r3, #-1
+	str	r3, [r4]
+.L464:
+	.loc 1 140 0 discriminator 2
+	adds	r6, r6, #1
+	adds	r4, r4, #20
+	b	.L460
+.L461:
+	.loc 1 145 0
+	mov	r3, #-1
+	str	r3, [r4]
+	b	.L462
+.L471:
+	.align	2
+.L470:
+	.word	g_nand_phy_info
+	.word	g_nand_ops
+.LFE274:
+	.fnend
+	.size	FlashEraseBlocks, .-FlashEraseBlocks
+	.align	1
+	.global	FtlFreeSysBlkQueueIn
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlFreeSysBlkQueueIn, %function
+FtlFreeSysBlkQueueIn:
+	.fnstart
+.LFB190:
+	.loc 2 98 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL410:
+	push	{r4, r5, r6, lr}
+	.save {r4, r5, r6, lr}
+.LCFI68:
+	.loc 2 98 0
+	mov	r5, r0
+.LBB297:
+.LBB298:
+	.loc 2 94 0
+	ldr	r4, .L481
+.LBE298:
+.LBE297:
+	.loc 2 99 0
+	ldrh	r3, [r4, #194]
+	cmp	r3, #1024
+	beq	.L472
+.LBB299:
+	.loc 2 101 0
+	cbz	r1, .L474
+.LBB300:
+	.loc 2 102 0
+	bl	P2V_block_in_plane
+.LVL411:
+	mov	r6, r0
+	.loc 2 103 0
+	ldr	r0, [r4, #3760]
+	lsls	r3, r5, #10
+	.loc 2 104 0
+	movs	r2, #1
+	mov	r1, r2
+	.loc 2 103 0
+	str	r3, [r0, #4]
+	.loc 2 104 0
+	bl	FlashEraseBlocks
+.LVL412:
+	.loc 2 105 0
+	ldr	r2, [r4, #2248]
+	ldrh	r3, [r2, r6, lsl #1]
+	adds	r3, r3, #1
+	strh	r3, [r2, r6, lsl #1]	@ movhi
+	.loc 2 106 0
+	ldr	r3, [r4, #2492]
+	adds	r3, r3, #1
+	str	r3, [r4, #2492]
+.LVL413:
+.L474:
+.LBE300:
+	.loc 2 108 0
+	ldrh	r3, [r4, #194]
+	adds	r3, r3, #1
+	strh	r3, [r4, #194]	@ movhi
+	.loc 2 109 0
+	ldrh	r3, [r4, #192]
+	add	r2, r4, r3, lsl #1
+	.loc 2 110 0
+	adds	r3, r3, #1
+	ubfx	r3, r3, #0, #10
+	.loc 2 109 0
+	strh	r5, [r2, #196]	@ movhi
+	.loc 2 110 0
+	strh	r3, [r4, #192]	@ movhi
+.L472:
+	pop	{r4, r5, r6, pc}
+.LVL414:
+.L482:
+	.align	2
+.L481:
+	.word	.LANCHOR0
+.LBE299:
+.LFE190:
+	.fnend
+	.size	FtlFreeSysBlkQueueIn, .-FtlFreeSysBlkQueueIn
+	.align	1
+	.global	FtlLowFormatEraseBlock
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlLowFormatEraseBlock, %function
+FtlLowFormatEraseBlock:
+	.fnstart
+.LFB159:
+	.loc 3 528 0
+	@ args = 0, pretend = 0, frame = 16
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL415:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI69:
+	.loc 3 539 0
+	mov	r10, #0
+	.loc 3 538 0
+	ldr	r4, .L528
+	.loc 3 528 0
+	mov	r7, r1
+	.loc 3 536 0
+	mov	r6, r10
+	.loc 3 537 0
+	mov	r5, r10
+.LVL416:
+	.loc 3 540 0
+	mov	r9, #20
+	.loc 3 528 0
+	.pad #20
+	sub	sp, sp, #20
+.LCFI70:
+	.loc 3 551 0
+	mov	fp, r4
+	.loc 3 528 0
+	str	r0, [sp]
+	.loc 3 538 0
+	str	r0, [r4, #3764]
+.L484:
+	.loc 3 539 0 discriminator 1
+	ldrh	r1, [r4, #8]
+	uxth	r3, r10
+	cmp	r1, r3
+	bhi	.L489
+	.loc 3 559 0
+	cmp	r6, #0
+	beq	.L483
+	.loc 3 563 0
+	mov	r8, #0
+	.loc 3 564 0
+	mov	r9, #20
+	.loc 3 562 0
+	mov	r2, r6
+	movs	r1, #0
+	ldr	r0, [r4, #3760]
+.LVL417:
+	bl	FlashEraseBlocks
+.LVL418:
+.L492:
+	.loc 3 563 0 discriminator 1
+	uxth	r3, r8
+	cmp	r6, r3
+	bhi	.L494
+	.loc 3 571 0
+	cmp	r7, #0
+	beq	.L511
+	.loc 3 573 0
+	ldrh	r3, [r4, #80]
+.LVL419:
+	.loc 3 572 0
+	mov	r10, #1
+.LVL420:
+	.loc 3 573 0
+	str	r3, [sp, #4]
+	.loc 3 574 0
+	lsrs	r3, r3, #2
+.LVL421:
+	str	r3, [sp, #8]
+.LVL422:
+.L495:
+	mov	r8, #0
+.LVL423:
+	.loc 3 579 0
+	mov	fp, #20
+.L505:
+	.loc 3 578 0
+	mov	r9, #0
+	.loc 3 577 0
+	mov	r6, r9
+.L496:
+	.loc 3 578 0 discriminator 1
+	ldrh	r1, [r4, #8]
+	uxth	r3, r9
+.LVL424:
+	cmp	r1, r3
+	bhi	.L500
+	.loc 3 593 0
+	cbz	r6, .L483
+	.loc 3 597 0
+	mov	r9, #0
+	.loc 3 596 0
+	movs	r3, #1
+	mov	r2, r10
+	mov	r1, r6
+	ldr	r0, [r4, #3760]
+	bl	FlashProgPages
+.LVL425:
+.L502:
+	.loc 3 597 0 discriminator 1
+	uxth	r3, r9
+	cmp	r6, r3
+	bhi	.L504
+	.loc 3 604 0
+	ldr	r3, [sp, #8]
+.LVL426:
+	add	r8, r8, r3
+.LVL427:
+	.loc 3 605 0
+	ldr	r3, [sp, #4]
+.LVL428:
+	.loc 3 604 0
+	uxth	r8, r8
+.LVL429:
+	.loc 3 605 0
+	cmp	r3, r8
+	bhi	.L505
+	mov	r8, #0
+.LVL430:
+	.loc 3 611 0 discriminator 1
+	mov	r9, #20
+.L506:
+	.loc 3 610 0 discriminator 1
+	uxth	r3, r8
+.LVL431:
+	cmp	r6, r3
+	bhi	.L508
+	.loc 3 615 0
+	ldr	r3, [sp]
+.LVL432:
+	cmp	r3, #63
+	bls	.L509
+	.loc 3 615 0 is_stmt 0 discriminator 1
+	cbz	r7, .L483
+.L509:
+	.loc 3 616 0 is_stmt 1
+	mov	r2, r6
+	mov	r1, r10
+	ldr	r0, [r4, #3760]
+	bl	FlashEraseBlocks
+.LVL433:
+.L483:
+	.loc 3 619 0
+	mov	r0, r5
+.LVL434:
+	add	sp, sp, #20
+.LCFI71:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL435:
+.L489:
+.LCFI72:
+	.loc 3 540 0
+	uxth	r3, r10
+	ldr	r0, [r4, #3760]
+.LVL436:
+	movs	r2, #0
+	mul	r1, r9, r3
+	.loc 3 541 0
+	add	r3, r3, r4
+	.loc 3 540 0
+	str	r2, [r0, r1]
+	.loc 3 541 0
+	ldr	r1, [sp]
+	ldrb	r0, [r3, #36]	@ zero_extendqisi2
+	bl	V2P_block
+.LVL437:
+	mov	r8, r0
+	.loc 3 543 0
+	cbz	r7, .L485
+	.loc 3 544 0
+	bl	IsBlkInVendorPart
+.LVL438:
+	cbnz	r0, .L486
+.L485:
+	.loc 3 548 0
+	mov	r0, r8
+	bl	FtlBbmIsBadBlock
+.LVL439:
+	cbnz	r0, .L487
+	.loc 3 549 0
+	ldr	r1, [r4, #3760]
+	lsl	r3, r8, #10
+	.loc 3 551 0
+	ldr	r0, [fp, #3772]
+	.loc 3 549 0
+	mla	r1, r9, r6, r1
+	str	r3, [r1, #4]
+	.loc 3 550 0
+	ldr	r3, [r4, #3768]
+	str	r3, [r1, #8]
+	.loc 3 551 0
+	ldrh	r3, [r4, #88]
+	muls	r3, r6, r3
+	.loc 3 552 0
+	add	r6, r6, #1
+	.loc 3 551 0
+	it	mi
+	addmi	r3, r3, #3
+	.loc 3 552 0
+	uxth	r6, r6
+	.loc 3 551 0
+	bic	r3, r3, #3
+	add	r3, r3, r0
+	str	r3, [r1, #12]
+.L486:
+	add	r10, r10, #1
+	b	.L484
+.L487:
+	.loc 3 554 0
+	adds	r5, r5, #1
+.LVL440:
+	uxth	r5, r5
+.LVL441:
+	b	.L486
+.L494:
+	.loc 3 564 0
+	mul	r3, r9, r8
+	ldr	r2, [r4, #3760]
+	adds	r1, r2, r3
+	ldr	r3, [r2, r3]
+	adds	r3, r3, #1
+	bne	.L493
+	.loc 3 566 0
+	ldr	r0, [r1, #4]
+	.loc 3 565 0
+	adds	r5, r5, #1
+.LVL442:
+	uxth	r5, r5
+.LVL443:
+	.loc 3 566 0
+	ubfx	r0, r0, #10, #16
+	bl	FtlBbmMapBadBlock
+.LVL444:
+.L493:
+	add	r8, r8, #1
+	b	.L492
+.L511:
+	.loc 3 533 0
+	movs	r3, #6
+.LVL445:
+	.loc 3 534 0
+	mov	r10, r7
+.LVL446:
+	.loc 3 533 0
+	str	r3, [sp, #8]
+	.loc 3 531 0
+	movs	r3, #1
+.LVL447:
+	str	r3, [sp, #4]
+	b	.L495
+.LVL448:
+.L500:
+	.loc 3 579 0
+	uxth	r3, r9
+	ldr	r0, [r4, #3760]
+	movs	r2, #0
+	mul	r1, fp, r3
+	.loc 3 580 0
+	add	r3, r3, r4
+	.loc 3 579 0
+	str	r2, [r0, r1]
+	.loc 3 580 0
+	ldr	r1, [sp]
+	ldrb	r0, [r3, #36]	@ zero_extendqisi2
+	bl	V2P_block
+.LVL449:
+	str	r0, [sp, #12]
+	.loc 3 581 0
+	cbz	r7, .L497
+	.loc 3 582 0
+	bl	IsBlkInVendorPart
+.LVL450:
+	cbnz	r0, .L498
+.L497:
+	.loc 3 585 0
+	ldr	r0, [sp, #12]
+	bl	FtlBbmIsBadBlock
+.LVL451:
+	cbnz	r0, .L498
+	.loc 3 586 0
+	ldr	r1, [r4, #3760]
+	ldr	r3, [sp, #12]
+	.loc 3 588 0
+	ldr	r2, .L528
+	.loc 3 586 0
+	mla	r1, fp, r6, r1
+	.loc 3 588 0
+	ldr	r0, [r2, #3768]
+	.loc 3 586 0
+	add	r3, r8, r3, lsl #10
+	str	r3, [r1, #4]
+	.loc 3 587 0
+	ldr	r3, [r4, #3776]
+	str	r3, [r1, #8]
+	.loc 3 588 0
+	ldrh	r3, [r4, #88]
+	muls	r3, r6, r3
+	.loc 3 589 0
+	add	r6, r6, #1
+	.loc 3 588 0
+	it	mi
+	addmi	r3, r3, #3
+	.loc 3 589 0
+	uxth	r6, r6
+	.loc 3 588 0
+	bic	r3, r3, #3
+	add	r3, r3, r0
+	str	r3, [r1, #12]
+.L498:
+	add	r9, r9, #1
+	b	.L496
+.L504:
+	.loc 3 598 0
+	mul	r3, fp, r9
+	ldr	r2, [r4, #3760]
+	adds	r1, r2, r3
+	ldr	r3, [r2, r3]
+	cbz	r3, .L503
+	.loc 3 600 0
+	ldr	r0, [r1, #4]
+	.loc 3 599 0
+	adds	r5, r5, #1
+.LVL452:
+	uxth	r5, r5
+.LVL453:
+	.loc 3 600 0
+	ubfx	r0, r0, #10, #16
+	bl	FtlBbmMapBadBlock
+.LVL454:
+.L503:
+	add	r9, r9, #1
+	b	.L502
+.LVL455:
+.L508:
+	.loc 3 611 0
+	cbz	r7, .L507
+	.loc 3 611 0 is_stmt 0 discriminator 1
+	mul	r3, r9, r8
+	ldr	r2, [r4, #3760]
+	adds	r1, r2, r3
+	ldr	r3, [r2, r3]
+	cbnz	r3, .L507
+	.loc 3 612 0 is_stmt 1
+	ldr	r0, [r1, #4]
+	movs	r1, #1
+	ubfx	r0, r0, #10, #16
+	bl	FtlFreeSysBlkQueueIn
+.LVL456:
+.L507:
+	add	r8, r8, #1
+	b	.L506
+.L529:
+	.align	2
+.L528:
+	.word	.LANCHOR0
+.LFE159:
+	.fnend
+	.size	FtlLowFormatEraseBlock, .-FtlLowFormatEraseBlock
+	.align	1
+	.global	FlashTestBlk
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FlashTestBlk, %function
+FlashTestBlk:
+	.fnstart
+.LFB275:
+	.loc 1 156 0
+	@ args = 0, pretend = 0, frame = 88
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL457:
+	.loc 1 161 0
+	cmp	r0, #11
+	.loc 1 156 0
+	push	{r4, r5, lr}
+	.save {r4, r5, lr}
+.LCFI73:
+	mov	r4, r0
+	.pad #92
+	sub	sp, sp, #92
+.LCFI74:
+	.loc 1 161 0
+	bls	.L532
+.LBB313:
+.LBB314:
+	.loc 1 165 0
+	ldr	r5, .L533
+	.loc 1 166 0
+	add	r0, sp, #24
+.LBB315:
+.LBB316:
+.LBB317:
+	.loc 1 202 0
+	movs	r2, #32
+	movs	r1, #165
+.LBE317:
+.LBE316:
+.LBE315:
+	.loc 1 169 0
+	lsls	r4, r4, #10
+.LVL458:
+	.loc 1 166 0
+	str	r0, [sp, #16]
+	.loc 1 165 0
+	str	r5, [sp, #12]
+.LBB320:
+.LBB319:
+.LBB318:
+	.loc 1 202 0
+	bl	memset
+.LVL459:
+.LBE318:
+.LBE319:
+.LBE320:
+	.loc 1 170 0
+	movs	r2, #1
+.LBB321:
+.LBB322:
+.LBB323:
+	.loc 1 202 0
+	mov	r3, #1515870810
+.LBE323:
+.LBE322:
+.LBE321:
+	.loc 1 170 0
+	mov	r1, r2
+	add	r0, sp, #4
+.LBB326:
+.LBB325:
+.LBB324:
+	.loc 1 202 0
+	str	r3, [r5]
+	str	r3, [r5, #4]
+.LBE324:
+.LBE325:
+.LBE326:
+	.loc 1 169 0
+	str	r4, [sp, #8]
+	.loc 1 170 0
+	bl	FlashEraseBlocks
+.LVL460:
+	.loc 1 171 0
+	movs	r3, #1
+	add	r0, sp, #4
+	mov	r2, r3
+	mov	r1, r3
+	bl	FlashProgPages
+.LVL461:
+	.loc 1 172 0
+	ldr	r4, [sp, #4]
+	.loc 1 178 0
+	movs	r2, #1
+	movs	r1, #0
+	add	r0, sp, #4
+	.loc 1 172 0
+	adds	r4, r4, #0
+	it	ne
+	movne	r4, #1
+	negs	r4, r4
+	.loc 1 178 0
+	bl	FlashEraseBlocks
+.LVL462:
+.L530:
+.LBE314:
+.LBE313:
+	.loc 1 180 0
+	mov	r0, r4
+.LVL463:
+	add	sp, sp, #92
+.LCFI75:
+	@ sp needed
+	pop	{r4, r5, pc}
+.LVL464:
+.L532:
+.LCFI76:
+	.loc 1 162 0
+	movs	r4, #0
+.LVL465:
+	b	.L530
+.L534:
+	.align	2
+.L533:
+	.word	ftl_temp_buf
+.LFE275:
+	.fnend
+	.size	FlashTestBlk, .-FlashTestBlk
+	.align	1
+	.global	FlashGetBadBlockList
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FlashGetBadBlockList, %function
+FlashGetBadBlockList:
+	.fnstart
+.LFB276:
+	.loc 1 183 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL466:
+	push	{r3, r4, r5, lr}
+	.save {r3, r4, r5, lr}
+.LCFI77:
+.LBB337:
+.LBB338:
+.LBB339:
+	.loc 1 202 0
+	mov	r2, #256
+.LBE339:
+.LBE338:
+.LBE337:
+	.loc 1 183 0
+	mov	r5, r1
+.LBB344:
+.LBB342:
+.LBB340:
+	.loc 1 202 0
+	movs	r1, #255
+.LVL467:
+.LBE340:
+.LBE342:
+.LBE344:
+	.loc 1 183 0
+	mov	r4, r0
+.LBB345:
+.LBB343:
+.LBB341:
+	.loc 1 202 0
+	bl	memset
+.LVL468:
+.LBE341:
+.LBE343:
+.LBE345:
+	.loc 1 187 0
+	ldr	r3, .L542
+	mov	r1, r5
+	mov	r0, r4
+	ldr	r3, [r3]
+	blx	r3
+.LVL469:
+	uxth	r0, r0
+.LVL470:
+	.loc 1 188 0
+	cmp	r0, #50
+	bls	.L536
+.LBB346:
+.LBB347:
+.LBB348:
+	.loc 1 202 0
+	mov	r2, #256
+	movs	r1, #255
+	mov	r0, r4
+.LVL471:
+	bl	memset
+.LVL472:
+.LBE348:
+.LBE347:
+.LBE346:
+	.loc 1 190 0
+	movs	r0, #0
+.LVL473:
+.L536:
+	.loc 1 192 0
+	ldr	r3, .L542+4
+	ldrh	r3, [r3, #14]
+	cmp	r3, #4
+	bne	.L541
+	add	r1, r4, r0, lsl #1
+.LVL474:
+	mov	r3, r4
+.L538:
+	.loc 1 193 0 discriminator 1
+	cmp	r3, r1
+	bne	.L539
+.L541:
+.LVL475:
+	.loc 1 198 0
+	pop	{r3, r4, r5, pc}
+.LVL476:
+.L539:
+	.loc 1 194 0 discriminator 3
+	ldrh	r2, [r3]
+	lsrs	r2, r2, #1
+	strh	r2, [r3], #2	@ movhi
+	b	.L538
+.L543:
+	.align	2
+.L542:
+	.word	g_nand_ops
+	.word	g_nand_phy_info
+.LFE276:
+	.fnend
+	.size	FlashGetBadBlockList, .-FlashGetBadBlockList
+	.align	1
+	.global	ftl_memset
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	ftl_memset, %function
+ftl_memset:
+	.fnstart
+.LFB277:
+	.loc 1 201 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL477:
+	push	{r4, lr}
+	.save {r4, lr}
+.LCFI78:
+	.loc 1 201 0
+	mov	r4, r0
+.LBB353:
+	.loc 1 202 0
+	cbz	r2, .L545
+.LBE353:
+.LBB354:
+.LBB355:
+	bl	memset
+.LVL478:
+.L545:
+.LBE355:
+.LBE354:
+	.loc 1 203 0 discriminator 8
+	mov	r0, r4
+	pop	{r4, pc}
+.LFE277:
+	.fnend
+	.size	ftl_memset, .-ftl_memset
+	.align	1
+	.global	FtlMemInit
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlMemInit, %function
+FtlMemInit:
+	.fnstart
+.LFB156:
+	.loc 3 279 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, r5, r6, r7, r8, lr}
+	.save {r4, r5, r6, r7, r8, lr}
+.LCFI79:
+	.loc 3 297 0
+	movw	r3, #65535
+	.loc 3 282 0
+	ldr	r4, .L650
+	movs	r5, #0
+	.loc 3 311 0
+	movs	r6, #12
+	.loc 3 312 0
+	movs	r7, #20
+	.loc 3 310 0
+	ldrh	r0, [r4, #82]
+	.loc 3 297 0
+	str	r3, [r4, #3784]
+	.loc 3 301 0
+	strh	r3, [r4, #3182]	@ movhi
+	.loc 3 302 0
+	strh	r3, [r4, #3184]	@ movhi
+	.loc 3 303 0
+	movs	r3, #32
+	strh	r3, [r4, #3128]	@ movhi
+	.loc 3 310 0
+	lsls	r0, r0, #1
+	.loc 3 304 0
+	movs	r3, #128
+	.loc 3 282 0
+	str	r5, [r4, #2472]
+	.loc 3 304 0
+	strh	r3, [r4, #3130]	@ movhi
+	.loc 3 283 0
+	str	r5, [r4, #2476]
+	.loc 3 284 0
+	str	r5, [r4, #2460]
+	.loc 3 285 0
+	str	r5, [r4, #2448]
+	.loc 3 286 0
+	str	r5, [r4, #2444]
+	.loc 3 287 0
+	str	r5, [r4, #2452]
+	.loc 3 288 0
+	str	r5, [r4, #2456]
+	.loc 3 289 0
+	str	r5, [r4, #2440]
+	.loc 3 290 0
+	str	r5, [r4, #2480]
+	.loc 3 291 0
+	str	r5, [r4, #2484]
+	.loc 3 292 0
+	str	r5, [r4, #2492]
+	.loc 3 293 0
+	str	r5, [r4, #2496]
+	.loc 3 294 0
+	str	r5, [r4, #2500]
+	.loc 3 295 0
+	str	r5, [r4, #3780]
+	.loc 3 296 0
+	str	r5, [r4, #3140]
+	.loc 3 298 0
+	str	r5, [r4, #3788]
+	.loc 3 299 0
+	str	r5, [r4, #3132]
+	.loc 3 300 0
+	str	r5, [r4, #3764]
+	.loc 3 305 0
+	strh	r5, [r4, #3136]	@ movhi
+	.loc 3 306 0
+	strh	r5, [r4, #3186]	@ movhi
+	.loc 3 307 0
+	strh	r5, [r4, #3222]	@ movhi
+	.loc 3 310 0
+	bl	ftl_malloc
+.LVL479:
+	str	r0, [r4, #3168]
+	.loc 3 311 0
+	ldrh	r0, [r4, #82]
+	muls	r0, r6, r0
+	bl	ftl_malloc
+.LVL480:
+	.loc 3 312 0
+	ldrh	r3, [r4, #8]
+	.loc 3 311 0
+	str	r0, [r4, #3176]
+	.loc 3 312 0
+	muls	r7, r3, r7
+	.loc 3 313 0
+	lsl	r8, r7, #2
+	mov	r0, r8
+	bl	ftl_malloc
+.LVL481:
+	str	r0, [r4, #3792]
+	.loc 3 314 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL482:
+	str	r0, [r4, #3796]
+	.loc 3 315 0
+	mov	r0, r8
+	bl	ftl_malloc
+.LVL483:
+	str	r0, [r4, #3800]
+	.loc 3 316 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL484:
+	str	r0, [r4, #3760]
+	.loc 3 317 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL485:
+	.loc 3 320 0
+	ldrh	r3, [r4, #8]
+	.loc 3 319 0
+	ldrh	r7, [r4, #86]
+	.loc 3 317 0
+	str	r0, [r4, #3160]
+	.loc 3 320 0
+	lsls	r3, r3, #1
+	.loc 3 321 0
+	mov	r0, r7
+	.loc 3 320 0
+	adds	r3, r3, #1
+	str	r3, [r4, #3164]
+	.loc 3 321 0
+	bl	ftl_malloc
+.LVL486:
+	str	r0, [r4, #2244]
+	.loc 3 322 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL487:
+	str	r0, [r4, #3804]
+	.loc 3 323 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL488:
+	str	r0, [r4, #3808]
+	.loc 3 324 0
+	ldr	r0, [r4, #3164]
+	muls	r0, r7, r0
+	bl	ftl_malloc
+.LVL489:
+	str	r0, [r4, #3152]
+	.loc 3 325 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL490:
+	str	r0, [r4, #3776]
+	.loc 3 326 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL491:
+	str	r0, [r4, #3768]
+	.loc 3 327 0
+	ldr	r0, [r4, #3164]
+	muls	r0, r6, r0
+	bl	ftl_malloc
+.LVL492:
+	.loc 3 329 0
+	ldrh	r3, [r4, #88]
+	ldrh	r7, [r4, #8]
+	.loc 3 327 0
+	str	r0, [r4, #3148]
+	.loc 3 329 0
+	muls	r7, r3, r7
+	.loc 3 330 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL493:
+	str	r0, [r4, #3244]
+	.loc 3 331 0
+	lsls	r0, r7, #2
+	bl	ftl_malloc
+.LVL494:
+	.loc 3 332 0
+	ldrh	r3, [r4, #88]
+	.loc 3 331 0
+	str	r0, [r4, #3772]
+	.loc 3 332 0
+	ldr	r0, [r4, #3164]
+	muls	r0, r3, r0
+	bl	ftl_malloc
+.LVL495:
+	str	r0, [r4, #3156]
+	.loc 3 335 0
+	ldrh	r0, [r4, #18]
+	lsls	r0, r0, #1
+	uxth	r0, r0
+	strh	r0, [r4, #3812]	@ movhi
+	.loc 3 336 0
+	bl	ftl_malloc
+.LVL496:
+	.loc 3 337 0
+	ldrh	r3, [r4, #3812]
+	.loc 3 336 0
+	str	r0, [r4, #3816]
+	.loc 3 338 0
+	ldr	r0, .L650+4
+	.loc 3 337 0
+	addw	r3, r3, #547
+	lsrs	r3, r3, #9
+	.loc 3 338 0
+	and	r0, r0, r3, lsl #9
+	.loc 3 337 0
+	strh	r3, [r4, #3812]	@ movhi
+	.loc 3 338 0
+	bl	ftl_malloc
+.LVL497:
+	.loc 3 345 0
+	ldrh	r7, [r4, #18]
+	.loc 3 338 0
+	str	r0, [r4, #3820]
+	.loc 3 339 0
+	adds	r0, r0, #32
+	str	r0, [r4, #2248]
+	.loc 3 345 0
+	lsls	r7, r7, #1
+	.loc 3 347 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL498:
+	str	r0, [r4, #3824]
+	.loc 3 349 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL499:
+	.loc 3 350 0
+	ldr	r7, [r4, #104]
+	.loc 3 349 0
+	str	r0, [r4, #2260]
+	.loc 3 350 0
+	lsls	r7, r7, #1
+	.loc 3 351 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL500:
+	str	r0, [r4, #3828]
+	.loc 3 352 0
+	mov	r0, r7
+	bl	ftl_malloc
+.LVL501:
+	str	r0, [r4, #3832]
+	.loc 3 353 0
+	ldrh	r0, [r4, #18]
+	lsrs	r0, r0, #3
+	adds	r0, r0, #4
+	bl	ftl_malloc
+.LVL502:
+	str	r0, [r4]
+	.loc 3 354 0
+	ldrh	r0, [r4, #96]
+	lsls	r0, r0, #1
+	bl	ftl_malloc
+.LVL503:
+	str	r0, [r4, #124]
+	.loc 3 355 0
+	ldrh	r0, [r4, #96]
+	lsls	r0, r0, #1
+	bl	ftl_malloc
+.LVL504:
+	str	r0, [r4, #3836]
+	.loc 3 356 0
+	ldrh	r0, [r4, #96]
+	lsls	r0, r0, #2
+	bl	ftl_malloc
+.LVL505:
+	str	r0, [r4, #3840]
+	.loc 3 357 0
+	ldrh	r0, [r4, #98]
+	lsls	r0, r0, #2
+	bl	ftl_malloc
+.LVL506:
+	.loc 3 358 0
+	ldrh	r2, [r4, #98]
+	mov	r1, r5
+	.loc 3 357 0
+	str	r0, [r4, #3844]
+	add	r5, r4, #156
+	.loc 3 358 0
+	lsls	r2, r2, #2
+	bl	ftl_memset
+.LVL507:
+	.loc 3 360 0
+	ldrh	r0, [r4, #112]
+	.loc 3 361 0
+	lsls	r0, r0, #2
+	bl	ftl_malloc
+.LVL508:
+	str	r0, [r4, #3848]
+	.loc 3 362 0
+	ldr	r0, [r4, #104]
+	.loc 3 363 0
+	lsls	r0, r0, #2
+	bl	ftl_malloc
+.LVL509:
+	str	r0, [r4, #3852]
+	.loc 3 364 0
+	ldrh	r0, [r4, #114]
+	.loc 3 365 0
+	muls	r0, r6, r0
+	bl	ftl_malloc
+.LVL510:
+	.loc 3 366 0
+	ldrh	r3, [r4, #114]
+	.loc 3 365 0
+	str	r0, [r4, #2424]
+	.loc 3 366 0
+	ldrh	r0, [r4, #86]
+	.loc 3 367 0
+	muls	r0, r3, r0
+	bl	ftl_malloc
+.LVL511:
+	.loc 3 368 0
+	ldrh	r3, [r4, #18]
+	.loc 3 367 0
+	str	r0, [r4, #3856]
+	.loc 3 369 0
+	movs	r0, #6
+	muls	r0, r3, r0
+	bl	ftl_malloc
+.LVL512:
+	str	r0, [r4, #2252]
+	.loc 3 370 0
+	ldrh	r0, [r4, #74]
+	.loc 3 371 0
+	ldrh	r3, [r4, #30]
+	.loc 3 370 0
+	adds	r0, r0, #31
+	asrs	r0, r0, #5
+	strh	r0, [r4, #3860]	@ movhi
+	.loc 3 371 0
+	muls	r0, r3, r0
+	.loc 3 372 0
+	lsls	r0, r0, #2
+	bl	ftl_malloc
+.LVL513:
+	.loc 3 374 0
+	ldrh	r2, [r4, #3860]
+	.loc 3 373 0
+	movs	r3, #1
+.LVL514:
+	ldrh	r6, [r4, #30]
+	.loc 3 372 0
+	str	r0, [r4, #156]
+	lsls	r2, r2, #2
+	.loc 3 373 0
+	mov	r1, r2
+.L550:
+	.loc 3 373 0 is_stmt 0 discriminator 1
+	cmp	r3, r6
+	bcc	.L551
+	ldr	r2, .L650+8
+	.loc 3 379 0 is_stmt 1
+	movs	r1, #0
+	add	r3, r2, r3, lsl #2
+.LVL515:
+	adds	r2, r2, #56
+	adds	r3, r3, #24
+.L552:
+	.loc 3 377 0 discriminator 1
+	cmp	r2, r3
+	bne	.L553
+	.loc 3 383 0
+	ldr	r3, [r4, #3828]
+	cbnz	r3, .L554
+.L556:
+	.loc 3 385 0
+	ldr	r1, .L650+12
+	ldr	r0, .L650+16
+	bl	printk
+.LVL516:
+	.loc 3 386 0
+	mov	r0, #-1
+	pop	{r4, r5, r6, r7, r8, pc}
+.LVL517:
+.L551:
+	.loc 3 374 0 discriminator 3
+	ldr	r0, [r4, #156]
+	.loc 3 373 0 discriminator 3
+	adds	r3, r3, #1
+	.loc 3 374 0 discriminator 3
+	add	r0, r0, r1
+	add	r1, r1, r2
+	str	r0, [r5, #4]!
+	b	.L550
+.LVL518:
+.L553:
+	.loc 3 379 0 discriminator 2
+	str	r1, [r3, #4]!
+	b	.L552
+.L651:
+	.align	2
+.L650:
+	.word	.LANCHOR0
+	.word	33553920
+	.word	.LANCHOR0+128
+	.word	.LANCHOR1+186
+	.word	.LC78
+.L554:
+	.loc 3 388 0
+	ldr	r3, [r4, #3832]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 393 0
+	ldr	r3, [r4, #3848]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 398 0
+	ldr	r3, [r4, #3852]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 404 0
+	ldr	r3, [r4, #2424]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 409 0
+	ldr	r3, [r4, #3856]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 414 0
+	ldr	r3, [r4, #2252]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 419 0
+	ldr	r3, [r4, #156]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 425 0
+	ldr	r3, [r4, #2260]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 430 0
+	ldr	r3, [r4, #3168]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 430 0 is_stmt 0 discriminator 1
+	ldr	r3, [r4, #3176]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 435 0 is_stmt 1
+	ldr	r3, [r4, #3792]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 435 0 is_stmt 0 discriminator 1
+	ldr	r3, [r4, #3800]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 435 0 discriminator 2
+	ldr	r3, [r4, #3760]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 435 0 discriminator 3
+	ldr	r3, [r4, #3160]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 435 0 discriminator 4
+	ldr	r3, [r4, #3796]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 440 0 is_stmt 1
+	ldr	r3, [r4, #2244]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 440 0 is_stmt 0 discriminator 1
+	ldr	r3, [r4, #3804]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 440 0 discriminator 2
+	ldr	r3, [r4, #3808]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 440 0 discriminator 3
+	ldr	r3, [r4, #3152]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 441 0 is_stmt 1
+	ldr	r3, [r4, #3776]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 441 0 is_stmt 0 discriminator 1
+	ldr	r3, [r4, #3768]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 441 0 discriminator 2
+	ldr	r3, [r4, #3148]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 446 0 is_stmt 1
+	ldr	r3, [r4, #3244]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 446 0 is_stmt 0 discriminator 1
+	ldr	r3, [r4, #3772]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 446 0 discriminator 2
+	ldr	r3, [r4, #3156]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 452 0 is_stmt 1
+	ldr	r3, [r4, #2248]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 452 0 is_stmt 0 discriminator 1
+	ldr	r3, [r4, #3816]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 458 0 is_stmt 1
+	ldr	r3, [r4, #124]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 464 0
+	ldr	r3, .L652
+	ldr	r2, [r3, #3836]
+	cmp	r2, #0
+	beq	.L556
+	.loc 3 470 0
+	ldr	r2, [r3, #3840]
+	cmp	r2, #0
+	beq	.L556
+	.loc 3 476 0
+	ldr	r3, [r3, #3844]
+	cmp	r3, #0
+	beq	.L556
+	.loc 3 483 0
+	movs	r0, #0
+	.loc 3 484 0
+	pop	{r4, r5, r6, r7, r8, pc}
+.L653:
+	.align	2
+.L652:
+	.word	.LANCHOR0
+.LFE156:
+	.fnend
+	.size	FtlMemInit, .-FtlMemInit
+	.align	1
+	.global	FtlBbt2Bitmap
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlBbt2Bitmap, %function
+FtlBbt2Bitmap:
+	.fnstart
+.LFB175:
+	.loc 4 66 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL519:
+	push	{r4, r5, r6, r7, r8, r9, r10, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, lr}
+.LCFI80:
+	.loc 4 66 0
+	mov	r5, r0
+	.loc 4 69 0
+	ldr	r6, .L660
+	.loc 4 66 0
+	mov	r7, r1
+	subs	r4, r5, #2
+	.loc 4 72 0
+	movw	r8, #65535
+	.loc 4 74 0
+	ldr	r9, .L660+4
+	addw	r5, r5, #1022
+	.loc 4 69 0
+	ldrh	r2, [r6, #3860]
+	movs	r1, #0
+.LVL520:
+	.loc 4 74 0
+	ldr	r10, .L660+8
+	.loc 4 69 0
+	mov	r0, r7
+.LVL521:
+	lsls	r2, r2, #2
+	bl	ftl_memset
+.LVL522:
+.L657:
+	.loc 4 72 0
+	ldrh	r3, [r4, #2]
+	cmp	r3, r8
+	beq	.L654
+	.loc 4 74 0
+	ldrh	r2, [r6, #74]
+	cmp	r2, r3
+	bhi	.L656
+	.loc 4 74 0 is_stmt 0 discriminator 1
+	movs	r2, #74
+	mov	r1, r9
+	mov	r0, r10
+	bl	printk
+.LVL523:
+.L656:
+	.loc 4 75 0 is_stmt 1 discriminator 2
+	ldrh	r3, [r4, #2]!
+	movs	r2, #1
+	.loc 4 70 0 discriminator 2
+	cmp	r5, r4
+	.loc 4 75 0 discriminator 2
+	lsr	r1, r3, #5
+	and	r3, r3, #31
+	lsl	r3, r2, r3
+	ldr	r2, [r7, r1, lsl #2]
+	orr	r2, r2, r3
+	str	r2, [r7, r1, lsl #2]
+	.loc 4 70 0 discriminator 2
+	bne	.L657
+.L654:
+	pop	{r4, r5, r6, r7, r8, r9, r10, pc}
+.LVL524:
+.L661:
+	.align	2
+.L660:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+197
+	.word	.LC1
+.LFE175:
+	.fnend
+	.size	FtlBbt2Bitmap, .-FtlBbt2Bitmap
+	.align	1
+	.global	load_l2p_region
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	load_l2p_region, %function
+load_l2p_region:
+	.fnstart
+.LFB203:
+	.loc 2 442 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL525:
+	push	{r4, r5, r6, r7, r8, lr}
+	.save {r4, r5, r6, r7, r8, lr}
+.LCFI81:
+	.loc 2 442 0
+	mov	r6, r0
+	.loc 2 446 0
+	ldr	r4, .L668
+	.loc 2 442 0
+	mov	r8, r1
+	.loc 2 446 0
+	ldrh	r3, [r4, #112]
+	cmp	r3, r0
+	bcs	.L663
+	.loc 2 446 0 is_stmt 0 discriminator 1
+	mov	r2, #446
+	ldr	r1, .L668+4
+	ldr	r0, .L668+8
+	bl	printk
+.LVL526:
+.L663:
+	.loc 2 447 0 is_stmt 1
+	ldr	r3, [r4, #3848]
+	movs	r5, #12
+	ldr	r7, [r3, r6, lsl #2]
+.LVL527:
+	.loc 2 449 0
+	cbnz	r7, .L664
+	.loc 2 450 0
+	mul	r5, r5, r8
+	ldr	r3, [r4, #2424]
+	ldrh	r2, [r4, #86]
+	movs	r1, #255
+	add	r3, r3, r5
+	ldr	r0, [r3, #8]
+	bl	ftl_memset
+.LVL528:
+	.loc 2 451 0
+	ldr	r3, [r4, #2424]
+	strh	r6, [r3, r5]	@ movhi
+	.loc 2 452 0
+	ldr	r3, [r4, #2424]
+	add	r5, r5, r3
+	str	r7, [r5, #4]
+.LVL529:
+.L665:
+	.loc 2 473 0
+	movs	r0, #0
+	pop	{r4, r5, r6, r7, r8, pc}
+.LVL530:
+.L664:
+	.loc 2 456 0
+	mul	r5, r5, r8
+	ldr	r3, [r4, #2424]
+	.loc 2 458 0
+	movs	r2, #1
+	ldr	r0, .L668+12
+	mov	r1, r2
+	.loc 2 455 0
+	str	r7, [r4, #3228]
+	.loc 2 456 0
+	add	r3, r3, r5
+	ldr	r3, [r3, #8]
+	str	r3, [r4, #3232]
+	.loc 2 457 0
+	ldr	r3, [r4, #3244]
+	str	r3, [r4, #3236]
+	.loc 2 458 0
+	bl	FlashReadPages
+.LVL531:
+	.loc 2 459 0
+	ldr	r8, [r4, #3236]
+.LVL532:
+	.loc 2 461 0
+	ldrh	r3, [r8, #8]
+	cmp	r3, r6
+	beq	.L666
+	.loc 2 462 0
+	mov	r2, r7
+	mov	r1, r6
+	ldr	r0, .L668+16
+	bl	printk
+.LVL533:
+	.loc 2 463 0
+	movs	r3, #4
+	ldr	r1, [r4, #3236]
+	mov	r2, r3
+	ldr	r0, .L668+20
+	bl	rknand_print_hex
+.LVL534:
+	.loc 2 464 0
+	ldrh	r3, [r4, #112]
+	movs	r2, #4
+	ldr	r1, [r4, #3848]
+	ldr	r0, .L668+24
+	bl	rknand_print_hex
+.LVL535:
+.L666:
+	.loc 2 467 0
+	ldrh	r3, [r8, #8]
+	cmp	r3, r6
+	beq	.L667
+	.loc 2 467 0 is_stmt 0 discriminator 1
+	movw	r2, #467
+	ldr	r1, .L668+4
+	ldr	r0, .L668+8
+	bl	printk
+.LVL536:
+.L667:
+	.loc 2 470 0 is_stmt 1
+	ldr	r3, [r4, #2424]
+	movs	r1, #0
+	adds	r2, r3, r5
+	str	r1, [r2, #4]
+	.loc 2 471 0
+	strh	r6, [r3, r5]	@ movhi
+	.loc 2 472 0
+	b	.L665
+.L669:
+	.align	2
+.L668:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+211
+	.word	.LC1
+	.word	.LANCHOR0+3224
+	.word	.LC79
+	.word	.LC80
+	.word	.LC81
+.LFE203:
+	.fnend
+	.size	load_l2p_region, .-load_l2p_region
+	.align	1
+	.global	ftl_free_no_use_map_blk
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	ftl_free_no_use_map_blk, %function
+ftl_free_no_use_map_blk:
+	.fnstart
+.LFB204:
+	.loc 2 476 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL537:
+	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.pad #12
+.LCFI82:
+.LVL538:
+	.loc 2 476 0
+	mov	r4, r0
+	.loc 2 485 0
+	ldrh	r2, [r0, #10]
+	movs	r1, #0
+	.loc 2 479 0
+	ldr	r5, [r0, #20]
+.LVL539:
+	.loc 2 477 0
+	ldr	r9, [r0, #12]
+.LVL540:
+	.loc 2 478 0
+	ldr	r6, [r0, #24]
+.LVL541:
+	.loc 2 485 0
+	lsls	r2, r2, #1
+	mov	r0, r5
+.LVL542:
+	bl	ftl_memset
+.LVL543:
+	.loc 2 486 0
+	movs	r3, #0
+.LVL544:
+.L671:
+	.loc 2 486 0 is_stmt 0 discriminator 1
+	ldrh	r1, [r4, #6]
+.LVL545:
+	uxth	r2, r3
+	cmp	r1, r2
+	bhi	.L675
+	.loc 2 494 0 is_stmt 1
+	ldrh	fp, [r5]
+.LVL546:
+	.loc 2 497 0
+	movs	r6, #0
+.LVL547:
+	.loc 2 498 0
+	ldr	r2, .L684
+	.loc 2 495 0
+	mov	r10, r6
+.LVL548:
+.L676:
+	.loc 2 497 0 discriminator 1
+	ldrh	r1, [r4, #10]
+	uxth	r3, r6
+	cmp	r1, r3
+	bhi	.L680
+	.loc 2 513 0
+	mov	r0, r10
+	add	sp, sp, #12
+.LCFI83:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL549:
+.L675:
+.LCFI84:
+	.loc 2 487 0
+	uxth	r2, r3
+	ldr	r1, [r6, r2, lsl #2]
+	.loc 2 488 0
+	movs	r2, #0
+	.loc 2 487 0
+	ubfx	r1, r1, #10, #16
+.LVL550:
+.L672:
+	.loc 2 488 0 discriminator 1
+	ldrh	r7, [r4, #10]
+	uxth	r0, r2
+	cmp	r7, r0
+	bhi	.L674
+	adds	r3, r3, #1
+	b	.L671
+.L674:
+	.loc 2 489 0
+	uxth	r0, r2
+	adds	r2, r2, #1
+	ldrh	r7, [r9, r0, lsl #1]
+	cmp	r7, r1
+	.loc 2 490 0
+	ittt	eq
+	ldrheq	r7, [r5, r0, lsl #1]
+	addeq	r7, r7, #1
+	strheq	r7, [r5, r0, lsl #1]	@ movhi
+	b	.L672
+.LVL551:
+.L680:
+	.loc 2 498 0
+	ldrh	r1, [r4]
+	uxth	r7, r6
+	cmp	r1, r3
+	bne	.L677
+	.loc 2 498 0 is_stmt 0 discriminator 1
+	ldrh	r1, [r2, #80]
+	ldrh	r0, [r4, #2]
+	cmp	r0, r1
+	.loc 2 499 0 is_stmt 1 discriminator 1
+	it	cc
+	strhcc	r1, [r5, r7, lsl #1]	@ movhi
+.L677:
+	.loc 2 500 0
+	ldrh	r8, [r5, r7, lsl #1]
+	cmp	fp, r8
+	itt	hi
+	movhi	r10, r3
+	movhi	fp, r8
+	.loc 2 504 0
+	cmp	r8, #0
+	bne	.L679
+	.loc 2 504 0 is_stmt 0 discriminator 1
+	ldrh	r0, [r9, r7, lsl #1]
+	cbz	r0, .L679
+	.loc 2 506 0 is_stmt 1
+	movs	r1, #1
+	str	r2, [sp, #4]
+	bl	FtlFreeSysBlkQueueIn
+.LVL552:
+	.loc 2 507 0
+	strh	r8, [r9, r7, lsl #1]	@ movhi
+	.loc 2 508 0
+	ldr	r2, [sp, #4]
+	ldrh	r3, [r4, #8]
+	subs	r3, r3, #1
+	strh	r3, [r4, #8]	@ movhi
+.L679:
+	adds	r6, r6, #1
+	b	.L676
+.L685:
+	.align	2
+.L684:
+	.word	.LANCHOR0
+.LFE204:
+	.fnend
+	.size	ftl_free_no_use_map_blk, .-ftl_free_no_use_map_blk
+	.align	1
+	.global	Ftl_write_map_blk_to_last_page
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	Ftl_write_map_blk_to_last_page, %function
+Ftl_write_map_blk_to_last_page:
+	.fnstart
+.LFB207:
+	.loc 2 583 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL553:
+	push	{r3, r4, r5, r6, r7, lr}
+	.save {r3, r4, r5, r6, r7, lr}
+.LCFI85:
+	.loc 2 591 0
+	movw	r2, #65535
+	ldrh	r3, [r0]
+	.loc 2 583 0
+	mov	r4, r0
+	.loc 2 586 0
+	ldr	r5, [r0, #12]
+.LVL554:
+	.loc 2 591 0
+	cmp	r3, r2
+	bne	.L687
+	.loc 2 592 0
+	ldrh	r3, [r0, #8]
+	cbz	r3, .L688
+	.loc 2 592 0 is_stmt 0 discriminator 1
+	mov	r2, #592
+	ldr	r1, .L696
+	ldr	r0, .L696+4
+	bl	printk
+.LVL555:
+.L688:
+	.loc 2 593 0 is_stmt 1
+	ldrh	r3, [r4, #8]
+	adds	r3, r3, #1
+	strh	r3, [r4, #8]	@ movhi
+	.loc 2 594 0
+	bl	FtlFreeSysBlkQueueOut
+.LVL556:
+	.loc 2 595 0
+	movs	r3, #0
+	.loc 2 594 0
+	strh	r0, [r5]	@ movhi
+	.loc 2 595 0
+	strh	r3, [r4, #2]	@ movhi
+	.loc 2 596 0
+	strh	r3, [r4]	@ movhi
+	.loc 2 597 0
+	ldr	r3, [r4, #28]
+	adds	r3, r3, #1
+	str	r3, [r4, #28]
+.LVL557:
+.L689:
+	.loc 2 628 0
+	movs	r0, #0
+	pop	{r3, r4, r5, r6, r7, pc}
+.LVL558:
+.L687:
+	.loc 2 601 0
+	ldrh	r6, [r5, r3, lsl #1]
+	.loc 2 612 0
+	movs	r1, #255
+	.loc 2 602 0
+	ldrh	r3, [r0, #2]
+	ldr	r5, .L696+8
+.LVL559:
+	.loc 2 607 0
+	ldr	r2, [r0, #28]
+	.loc 2 587 0
+	ldr	r7, [r0, #24]
+.LVL560:
+	.loc 2 602 0
+	orr	r3, r3, r6, lsl #10
+	str	r3, [r5, #3228]
+	.loc 2 603 0
+	ldr	r3, [r5, #2244]
+	str	r3, [r5, #3232]
+	.loc 2 604 0
+	ldr	r3, [r5, #3244]
+	str	r3, [r5, #3236]
+	.loc 2 607 0
+	str	r2, [r3, #4]
+	.loc 2 608 0
+	movw	r2, #64245
+	strh	r2, [r3, #8]	@ movhi
+	.loc 2 609 0
+	ldrh	r2, [r0, #4]
+	.loc 2 610 0
+	strh	r6, [r3, #2]	@ movhi
+	.loc 2 609 0
+	strh	r2, [r3]	@ movhi
+	.loc 2 612 0
+	ldrh	r2, [r5, #80]
+	ldr	r0, [r5, #2244]
+.LVL561:
+	lsls	r2, r2, #3
+	bl	ftl_memset
+.LVL562:
+	.loc 2 614 0
+	movs	r2, #0
+	.loc 2 613 0
+	mov	r3, r2
+.LVL563:
+.L690:
+	.loc 2 614 0 discriminator 1
+	ldrh	r0, [r4, #6]
+	uxth	r1, r2
+	cmp	r0, r1
+	bhi	.L692
+	.loc 2 621 0
+	movs	r2, #1
+	movs	r3, #0
+.LVL564:
+	mov	r1, r2
+	ldr	r0, .L696+12
+	bl	FlashProgPages
+.LVL565:
+	.loc 2 622 0
+	ldrh	r3, [r4, #2]
+	.loc 2 626 0
+	mov	r0, r4
+	.loc 2 622 0
+	adds	r3, r3, #1
+	strh	r3, [r4, #2]	@ movhi
+	.loc 2 626 0
+	bl	ftl_map_blk_gc
+.LVL566:
+	.loc 2 627 0
+	b	.L689
+.LVL567:
+.L692:
+	uxth	r1, r2
+	.loc 2 615 0
+	ldr	r0, [r7, r1, lsl #2]
+	cmp	r6, r0, lsr #10
+	bne	.L691
+	.loc 2 617 0
+	ldr	r0, [r5, #2244]
+	.loc 2 616 0
+	adds	r3, r3, #1
+.LVL568:
+	uxth	r3, r3
+.LVL569:
+	.loc 2 617 0
+	str	r1, [r0, r3, lsl #3]
+	.loc 2 618 0
+	ldr	r0, [r7, r1, lsl #2]
+	ldr	r1, [r5, #2244]
+	add	r1, r1, r3, lsl #3
+	str	r0, [r1, #4]
+.L691:
+	adds	r2, r2, #1
+	b	.L690
+.L697:
+	.align	2
+.L696:
+	.word	.LANCHOR1+227
+	.word	.LC1
+	.word	.LANCHOR0
+	.word	.LANCHOR0+3224
+.LFE207:
+	.fnend
+	.size	Ftl_write_map_blk_to_last_page, .-Ftl_write_map_blk_to_last_page
+	.align	1
+	.global	FtlMapWritePage
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlMapWritePage, %function
+FtlMapWritePage:
+	.fnstart
+.LFB208:
+	.loc 2 631 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL570:
+	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI86:
+	.loc 2 631 0
+	mov	r4, r0
+	.loc 2 637 0
+	ldr	r7, .L717
+	.loc 2 631 0
+	mov	r8, r1
+	mov	r10, r2
+	.loc 2 634 0
+	movs	r6, #0
+.LVL571:
+	.loc 2 650 0
+	ldr	r9, .L717+20
+	mov	r5, r7
+.L699:
+	.loc 2 637 0
+	ldr	r3, [r7, #2456]
+	adds	r3, r3, #1
+	str	r3, [r7, #2456]
+	.loc 2 638 0
+	ldrh	r3, [r7, #80]
+	ldrh	r2, [r4, #2]
+	subs	r3, r3, #1
+	cmp	r2, r3
+	bge	.L700
+	.loc 2 638 0 is_stmt 0 discriminator 1
+	ldrh	r2, [r4]
+	movw	r3, #65535
+	cmp	r2, r3
+	bne	.L701
+.L700:
+	.loc 2 639 0 is_stmt 1
+	mov	r0, r4
+	bl	Ftl_write_map_blk_to_last_page
+.LVL572:
+.L701:
+	.loc 2 650 0
+	ldrh	r2, [r4]
+	ldr	r3, [r4, #12]
+	ldrh	r3, [r3, r2, lsl #1]
+	cbnz	r3, .L702
+	.loc 2 650 0 is_stmt 0 discriminator 1
+	movw	r2, #650
+	mov	r1, r9
+	ldr	r0, .L717+4
+	bl	printk
+.LVL573:
+.L702:
+	.loc 2 651 0 is_stmt 1
+	ldrh	r2, [r4]
+	ldrh	r3, [r4, #10]
+	cmp	r2, r3
+	bcc	.L703
+	.loc 2 651 0 is_stmt 0 discriminator 1
+	movw	r2, #651
+	mov	r1, r9
+	ldr	r0, .L717+4
+	bl	printk
+.LVL574:
+.L703:
+	.loc 2 652 0 is_stmt 1
+	ldrh	r2, [r4]
+.LBB361:
+.LBB362:
+.LBB363:
+	.loc 1 202 0
+	movs	r1, #16
+.LBE363:
+.LBE362:
+.LBE361:
+	.loc 2 652 0
+	ldr	r3, [r4, #12]
+	.loc 2 656 0
+	ldr	r0, [r5, #3244]
+	.loc 2 652 0
+	ldrh	fp, [r3, r2, lsl #1]
+	.loc 2 654 0
+	ldrh	r3, [r4, #2]
+	.loc 2 656 0
+	str	r0, [r5, #3236]
+	.loc 2 655 0
+	str	r10, [r5, #3232]
+	.loc 2 654 0
+	orr	r3, r3, fp, lsl #10
+	str	r3, [r5, #3228]
+.LBB366:
+.LBB365:
+.LBB364:
+	.loc 1 202 0
+	bl	__memzero
+.LVL575:
+.LBE364:
+.LBE365:
+.LBE366:
+	.loc 2 659 0
+	ldr	r3, [r5, #3236]
+.LVL576:
+	.loc 2 660 0
+	ldr	r2, [r4, #28]
+	.loc 2 664 0
+	ldr	r0, .L717+8
+	.loc 2 661 0
+	strh	r8, [r3, #8]	@ movhi
+	.loc 2 660 0
+	str	r2, [r3, #4]
+	.loc 2 662 0
+	ldrh	r2, [r4, #4]
+	.loc 2 663 0
+	strh	fp, [r3, #2]	@ movhi
+	.loc 2 662 0
+	strh	r2, [r3]	@ movhi
+	.loc 2 664 0
+	movs	r3, #1
+.LVL577:
+	mov	r2, r3
+	mov	r1, r3
+	bl	FlashProgPages
+.LVL578:
+	.loc 2 665 0
+	ldrh	r3, [r4, #2]
+	adds	r3, r3, #1
+	uxth	r3, r3
+	strh	r3, [r4, #2]	@ movhi
+	.loc 2 667 0
+	ldr	r2, [r5, #3224]
+	adds	r2, r2, #1
+	bne	.L704
+	.loc 2 668 0
+	ldr	r1, [r5, #3228]
+	.loc 2 669 0
+	adds	r6, r6, #1
+.LVL579:
+	.loc 2 668 0
+	ldr	r0, .L717+12
+	.loc 2 669 0
+	uxth	r6, r6
+.LVL580:
+	.loc 2 668 0
+	bl	printk
+.LVL581:
+	.loc 2 670 0
+	ldrh	r3, [r4, #2]
+	cmp	r3, #2
+	.loc 2 671 0
+	ittt	ls
+	ldrhls	r3, [r5, #80]
+	addls	r3, r3, #-1
+	strhls	r3, [r4, #2]	@ movhi
+	.loc 2 673 0
+	cmp	r6, #3
+	bls	.L706
+	.loc 2 674 0
+	mov	r2, r6
+	ldr	r1, [r5, #3228]
+	ldr	r0, .L717+16
+	bl	printk
+.LVL582:
+.L707:
+	b	.L707
+.L706:
+	.loc 2 678 0
+	ldr	r3, [r4, #32]
+	cmp	r3, #0
+	beq	.L699
+.L716:
+	b	.L716
+.L704:
+	.loc 2 682 0
+	cmp	r3, #1
+	beq	.L699
+	.loc 2 685 0
+	ldr	r2, [r5, #3228]
+	.loc 2 687 0
+	movs	r0, #0
+	.loc 2 685 0
+	ldr	r3, [r4, #24]
+	str	r2, [r3, r8, lsl #2]
+	.loc 2 687 0
+	pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL583:
+.L718:
+	.align	2
+.L717:
+	.word	.LANCHOR0
+	.word	.LC1
+	.word	.LANCHOR0+3224
+	.word	.LC82
+	.word	.LC83
+	.word	.LANCHOR1+258
+.LFE208:
+	.fnend
+	.size	FtlMapWritePage, .-FtlMapWritePage
+	.align	1
+	.global	ftl_map_blk_gc
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	ftl_map_blk_gc, %function
+ftl_map_blk_gc:
+	.fnstart
+.LFB206:
+	.loc 2 537 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL584:
+	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.pad #12
+.LCFI87:
+.LVL585:
+	.loc 2 537 0
+	mov	r4, r0
+	.loc 2 541 0
+	ldr	r6, [r0, #12]
+.LVL586:
+	.loc 2 542 0
+	ldr	r9, [r0, #24]
+.LVL587:
+	.loc 2 545 0
+	bl	ftl_free_no_use_map_blk
+.LVL588:
+	.loc 2 547 0
+	ldrh	r3, [r4, #10]
+	ldrh	r2, [r4, #8]
+	ldr	r5, .L731
+	subs	r3, r3, #4
+	cmp	r2, r3
+	blt	.L720
+	.loc 2 548 0
+	uxth	r0, r0
+	ldrh	r8, [r6, r0, lsl #1]
+.LVL589:
+	.loc 2 549 0
+	cmp	r8, #0
+	beq	.L720
+	.loc 2 549 0 is_stmt 0 discriminator 1
+	ldr	r3, [r4, #32]
+	cbnz	r3, .L720
+	.loc 2 550 0 is_stmt 1
+	movs	r2, #1
+	str	r2, [r4, #32]
+	.loc 2 551 0
+	strh	r3, [r6, r0, lsl #1]	@ movhi
+	.loc 2 552 0
+	ldrh	r3, [r4, #8]
+	.loc 2 553 0
+	ldrh	r2, [r4, #2]
+	.loc 2 552 0
+	subs	r3, r3, #1
+	strh	r3, [r4, #8]	@ movhi
+	.loc 2 553 0
+	ldrh	r3, [r5, #80]
+	cmp	r2, r3
+	bcc	.L721
+	.loc 2 554 0
+	mov	r0, r4
+	bl	ftl_map_blk_alloc_new_blk
+.LVL590:
+.L721:
+	.loc 2 564 0 discriminator 1
+	ldr	fp, .L731+12
+	.loc 2 537 0 discriminator 1
+	movs	r6, #0
+.LVL591:
+.L722:
+	.loc 2 556 0 discriminator 1
+	ldrh	r3, [r4, #6]
+	uxth	r10, r6
+	cmp	r3, r10
+	bhi	.L726
+	.loc 2 572 0
+	movs	r1, #1
+	mov	r0, r8
+	bl	FtlFreeSysBlkQueueIn
+.LVL592:
+	.loc 2 573 0
+	movs	r3, #0
+	str	r3, [r4, #32]
+.LVL593:
+.L720:
+	.loc 2 577 0
+	ldrh	r2, [r4, #2]
+	ldrh	r3, [r5, #80]
+	cmp	r2, r3
+	bcc	.L727
+	.loc 2 578 0
+	mov	r0, r4
+	bl	ftl_map_blk_alloc_new_blk
+.LVL594:
+.L727:
+	.loc 2 580 0
+	movs	r0, #0
+	add	sp, sp, #12
+.LCFI88:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL595:
+.L726:
+.LCFI89:
+	uxth	r7, r6
+	.loc 2 557 0
+	ldr	r3, [r9, r7, lsl #2]
+	cmp	r8, r3, lsr #10
+	bne	.L723
+	.loc 2 558 0
+	ldr	r3, [r5, #3804]
+	.loc 2 562 0
+	ldr	r0, .L731+4
+	.loc 2 558 0
+	str	r3, [r5, #3232]
+	.loc 2 559 0
+	ldr	r3, [r5, #3244]
+	str	r3, [r5, #3236]
+	.loc 2 560 0
+	ldr	r2, [r9, r7, lsl #2]
+	.loc 2 559 0
+	str	r3, [sp, #4]
+	.loc 2 560 0
+	str	r2, [r5, #3228]
+	.loc 2 562 0
+	movs	r2, #1
+	mov	r1, r2
+	bl	FlashReadPages
+.LVL596:
+	.loc 2 564 0
+	ldr	r3, [sp, #4]
+	ldrh	r3, [r3, #8]
+	cmp	r3, r10
+	beq	.L724
+	.loc 2 564 0 is_stmt 0 discriminator 1
+	mov	r2, #564
+	ldr	r1, .L731+8
+	mov	r0, fp
+	bl	printk
+.LVL597:
+.L724:
+	.loc 2 565 0 is_stmt 1
+	ldr	r3, [r5, #3224]
+	adds	r3, r3, #1
+	bne	.L725
+	.loc 2 566 0
+	movs	r3, #0
+	str	r3, [r9, r7, lsl #2]
+.L723:
+	adds	r6, r6, #1
+	b	.L722
+.L725:
+	.loc 2 568 0
+	ldr	r2, [r5, #3232]
+	mov	r1, r7
+	mov	r0, r4
+	bl	FtlMapWritePage
+.LVL598:
+	b	.L723
+.L732:
+	.align	2
+.L731:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+3224
+	.word	.LANCHOR1+274
+	.word	.LC1
+.LFE206:
+	.fnend
+	.size	ftl_map_blk_gc, .-ftl_map_blk_gc
+	.align	1
+	.global	flush_l2p_region
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	flush_l2p_region, %function
+flush_l2p_region:
+	.fnstart
+.LFB209:
+	.loc 2 690 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL599:
+	push	{r3, r4, r5, lr}
+	.save {r3, r4, r5, lr}
+.LCFI90:
+	.loc 2 693 0
+	movs	r4, #12
+	ldr	r5, .L734
+	muls	r4, r0, r4
+	ldr	r3, [r5, #2424]
+	.loc 2 694 0
+	addw	r0, r5, #3864
+.LVL600:
+	.loc 2 693 0
+	adds	r2, r3, r4
+	.loc 2 694 0
+	ldrh	r1, [r3, r4]
+	ldr	r2, [r2, #8]
+	bl	FtlMapWritePage
+.LVL601:
+	.loc 2 695 0
+	ldr	r3, [r5, #2424]
+	.loc 2 697 0
+	movs	r0, #0
+	.loc 2 695 0
+	add	r4, r4, r3
+	ldr	r3, [r4, #4]
+	bic	r3, r3, #-2147483648
+	str	r3, [r4, #4]
+	.loc 2 697 0
+	pop	{r3, r4, r5, pc}
+.L735:
+	.align	2
+.L734:
+	.word	.LANCHOR0
+.LFE209:
+	.fnend
+	.size	flush_l2p_region, .-flush_l2p_region
+	.align	1
+	.global	log2phys
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	log2phys, %function
+log2phys:
+	.fnstart
+.LFB212:
+	.loc 2 753 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL602:
+	push	{r4, r5, r6, r7, r8, r9, r10, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, lr}
+.LCFI91:
+	.loc 2 753 0
+	mov	r7, r1
+	.loc 2 756 0
+	ldr	r4, .L750
+	.loc 2 753 0
+	mov	r9, r2
+	.loc 2 756 0
+	ldrh	r5, [r4, #84]
+	adds	r3, r5, #7
+	.loc 2 757 0
+	movs	r5, #1
+	.loc 2 756 0
+	lsr	r8, r0, r3
+	.loc 2 757 0
+	lsls	r5, r5, r3
+	.loc 2 759 0
+	ldr	r3, [r4, #2436]
+	.loc 2 757 0
+	subs	r5, r5, #1
+	.loc 2 756 0
+	uxth	r8, r8
+.LVL603:
+	.loc 2 757 0
+	ands	r5, r5, r0
+	.loc 2 759 0
+	cmp	r0, r3
+	.loc 2 757 0
+	uxth	r5, r5
+.LVL604:
+	.loc 2 759 0
+	bcc	.L737
+	.loc 2 759 0 is_stmt 0 discriminator 1
+	movw	r2, #759
+	ldr	r1, .L750+4
+	ldr	r0, .L750+8
+.LVL605:
+	bl	printk
+.LVL606:
+.L737:
+	.loc 2 761 0 is_stmt 1
+	ldrh	r2, [r4, #114]
+	movs	r3, #0
+	.loc 2 762 0
+	ldr	r1, [r4, #2424]
+	mov	r10, #12
+.LVL607:
+.L738:
+	uxth	r6, r3
+	.loc 2 761 0 discriminator 1
+	cmp	r6, r2
+	bcc	.L743
+	.loc 2 776 0
+	bl	select_l2p_ram_region
+.LVL608:
+	.loc 2 777 0
+	mul	r10, r10, r0
+	ldr	r3, [r4, #2424]
+	.loc 2 776 0
+	mov	r6, r0
+	.loc 2 777 0
+	ldrh	r1, [r3, r10]
+	add	r2, r3, r10
+	movw	r3, #65535
+	cmp	r1, r3
+	beq	.L744
+	.loc 2 777 0 is_stmt 0 discriminator 1
+	ldr	r3, [r2, #4]
+	cmp	r3, #0
+	bge	.L744
+	.loc 2 778 0 is_stmt 1
+	bl	flush_l2p_region
+.LVL609:
+.L744:
+	.loc 2 781 0
+	mov	r1, r6
+	mov	r0, r8
+	bl	load_l2p_region
+.LVL610:
+	.loc 2 782 0
+	b	.L739
+.LVL611:
+.L743:
+	adds	r3, r3, #1
+	.loc 2 762 0
+	mla	r0, r10, r3, r1
+.LVL612:
+	ldrh	r0, [r0, #-12]
+	cmp	r0, r8
+	bne	.L738
+.L739:
+	movs	r3, #12
+	.loc 2 764 0
+	cmp	r9, #0
+	bne	.L740
+	.loc 2 765 0
+	ldr	r2, [r4, #2424]
+	mla	r3, r3, r6, r2
+	ldr	r3, [r3, #8]
+	ldr	r3, [r3, r5, lsl #2]
+	str	r3, [r7]
+.L741:
+	.loc 2 771 0
+	ldr	r2, [r4, #2424]
+	movs	r3, #12
+	mla	r6, r3, r6, r2
+.LVL613:
+	ldr	r3, [r6, #4]
+	adds	r2, r3, #1
+	beq	.L747
+	.loc 2 772 0
+	adds	r3, r3, #1
+	str	r3, [r6, #4]
+.L747:
+	.loc 2 783 0
+	movs	r0, #0
+	pop	{r4, r5, r6, r7, r8, r9, r10, pc}
+.LVL614:
+.L740:
+	.loc 2 767 0
+	muls	r3, r6, r3
+	ldr	r2, [r4, #2424]
+	ldr	r1, [r7]
+	add	r2, r2, r3
+	ldr	r2, [r2, #8]
+	str	r1, [r2, r5, lsl #2]
+	.loc 2 768 0
+	ldr	r2, [r4, #2424]
+	.loc 2 769 0
+	strh	r8, [r4, #2428]	@ movhi
+	.loc 2 768 0
+	add	r3, r3, r2
+	ldr	r2, [r3, #4]
+	orr	r2, r2, #-2147483648
+	str	r2, [r3, #4]
+	b	.L741
+.L751:
+	.align	2
+.L750:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+289
+	.word	.LC1
+.LFE212:
+	.fnend
+	.size	log2phys, .-log2phys
+	.align	1
+	.global	FtlReUsePrevPpa
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlReUsePrevPpa, %function
+FtlReUsePrevPpa:
+	.fnstart
+.LFB230:
+	.loc 2 1628 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL615:
+	push	{r0, r1, r2, r4, r5, r6, r7, lr}
+	.save {r4, r5, r6, r7, lr}
+	.pad #12
+.LCFI92:
+.LVL616:
+	.loc 2 1628 0
+	mov	r6, r0
+	.loc 2 1631 0
+	ldr	r5, .L762
+.LVL617:
+	.loc 2 1629 0
+	ubfx	r0, r1, #10, #16
+.LVL618:
+	.loc 2 1628 0
+	str	r1, [sp, #4]
+	.loc 2 1629 0
+	bl	P2V_block_in_plane
+.LVL619:
+	.loc 2 1631 0
+	ldr	r2, [r5, #2260]
+	.loc 2 1629 0
+	mov	r7, r0
+.LVL620:
+	.loc 2 1631 0
+	ldrh	r3, [r2, r0, lsl #1]
+	cbnz	r3, .L753
+	.loc 2 1632 0
+	ldr	r4, [r5, #2272]
+	cbz	r4, .L754
+.LBB367:
+	.loc 2 1636 0
+	ldr	r1, [r5, #2252]
+	.loc 2 1644 0
+	mov	ip, #6
+	.loc 2 1636 0
+	ldr	r2, .L762+4
+	.loc 2 1644 0
+	movw	lr, #65535
+	.loc 2 1635 0
+	ldrh	r0, [r5, #2276]
+.LVL621:
+	.loc 2 1636 0
+	subs	r4, r4, r1
+	asrs	r4, r4, #1
+	muls	r4, r2, r4
+	uxth	r4, r4
+.LVL622:
+.L755:
+	.loc 2 1637 0 discriminator 1
+	uxth	r2, r3
+	cmp	r0, r2
+	bls	.L754
+	.loc 2 1638 0
+	cmp	r4, r7
+	bne	.L756
+	.loc 2 1639 0
+	mov	r1, r4
+	ldr	r0, .L762+8
+.LVL623:
+	bl	List_remove_node
+.LVL624:
+	ldrh	r3, [r5, #2276]
+	cbnz	r3, .L757
+	.loc 2 1639 0 is_stmt 0 discriminator 1
+	movw	r2, #1639
+	ldr	r1, .L762+12
+	ldr	r0, .L762+16
+	bl	printk
+.LVL625:
+.L757:
+	.loc 2 1639 0 discriminator 3
+	ldrh	r3, [r5, #2276]
+	.loc 2 1640 0 is_stmt 1 discriminator 3
+	mov	r0, r4
+	.loc 2 1639 0 discriminator 3
+	subs	r3, r3, #1
+	strh	r3, [r5, #2276]	@ movhi
+	.loc 2 1640 0 discriminator 3
+	bl	INSERT_DATA_LIST
+.LVL626:
+	.loc 2 1641 0 discriminator 3
+	ldr	r2, [r5, #2260]
+	ldrh	r3, [r2, r7, lsl #1]
+.L753:
+.LBE367:
+	.loc 2 1650 0
+	adds	r3, r3, #1
+	strh	r3, [r2, r7, lsl #1]	@ movhi
+	b	.L754
+.LVL627:
+.L756:
+.LBB368:
+	.loc 2 1644 0
+	mul	r4, ip, r4
+.LVL628:
+	adds	r3, r3, #1
+	ldrh	r4, [r1, r4]
+.LVL629:
+	cmp	r4, lr
+	bne	.L755
+.L754:
+.LBE368:
+	.loc 2 1652 0
+	movs	r2, #1
+	add	r1, sp, #4
+	mov	r0, r6
+.LVL630:
+	bl	log2phys
+.LVL631:
+	.loc 2 1653 0
+	add	sp, sp, #12
+.LCFI93:
+	@ sp needed
+	pop	{r4, r5, r6, r7, pc}
+.LVL632:
+.L763:
+	.align	2
+.L762:
+	.word	.LANCHOR0
+	.word	-1431655765
+	.word	.LANCHOR0+2272
+	.word	.LANCHOR1+298
+	.word	.LC1
+.LFE230:
+	.fnend
+	.size	FtlReUsePrevPpa, .-FtlReUsePrevPpa
+	.align	1
+	.global	ftl_scan_all_data
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	ftl_scan_all_data, %function
+ftl_scan_all_data:
+	.fnstart
+.LFB241:
+	.loc 2 2275 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, r5, r6, r7, r8, lr}
+	.save {r4, r5, r6, r7, r8, lr}
+.LCFI94:
+	.loc 2 2281 0
+	movs	r5, #0
+.LVL633:
+	ldr	r6, .L778
+	.loc 2 2275 0
+	.pad #32
+	sub	sp, sp, #32
+.LCFI95:
+	.loc 2 2280 0
+	movs	r1, #0
+	.loc 2 2284 0
+	ldr	r8, .L778+16
+	mov	r4, r6
+	.loc 2 2280 0
+	ldr	r0, .L778+4
+	bl	printk
+.LVL634:
+.L765:
+	.loc 2 2281 0 discriminator 1
+	ldr	r3, [r6, #2436]
+	cmp	r5, r3
+	bcc	.L771
+	.loc 2 2303 0
+	add	sp, sp, #32
+.LCFI96:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, pc}
+.LVL635:
+.L771:
+.LCFI97:
+	.loc 2 2282 0
+	movs	r2, #0
+	add	r1, sp, #28
+	mov	r0, r5
+	bl	log2phys
+.LVL636:
+	.loc 2 2283 0
+	ubfx	r3, r5, #0, #11
+	cbnz	r3, .L766
+	.loc 2 2284 0
+	ldr	r2, [sp, #28]
+	mov	r1, r5
+	mov	r0, r8
+	bl	printk
+.LVL637:
+.L766:
+	.loc 2 2285 0
+	ldr	r3, [sp, #28]
+	adds	r2, r3, #1
+	beq	.L768
+	.loc 2 2286 0
+	str	r3, [r4, #3228]
+	.loc 2 2290 0
+	movs	r2, #0
+	.loc 2 2288 0
+	ldr	r3, [r4, #2244]
+	.loc 2 2292 0
+	movs	r1, #1
+	.loc 2 2289 0
+	ldr	r7, [r4, #3244]
+	.loc 2 2292 0
+	ldr	r0, .L778+8
+	.loc 2 2288 0
+	str	r3, [r4, #3232]
+	.loc 2 2287 0
+	str	r5, [r4, #3240]
+	.loc 2 2289 0
+	str	r7, [r4, #3236]
+	.loc 2 2290 0
+	str	r2, [r4, #3224]
+	.loc 2 2292 0
+	bl	FlashReadPages
+.LVL638:
+	.loc 2 2293 0
+	ldr	r3, [r4, #3224]
+	cmp	r3, #256
+	beq	.L769
+	.loc 2 2293 0 is_stmt 0 discriminator 1
+	adds	r3, r3, #1
+	beq	.L769
+	.loc 2 2294 0 is_stmt 1
+	ldr	r3, [r7, #8]
+	cmp	r5, r3
+	beq	.L768
+.L769:
+	.loc 2 2297 0
+	ldr	r2, [r4, #3232]
+	ldr	r3, [r4, #3236]
+	ldr	r0, .L778+12
+	ldr	r1, [r2, #4]
+	str	r1, [sp, #16]
+	mov	r1, r5
+	ldr	r2, [r2]
+	str	r2, [sp, #12]
+	ldr	r2, [r3, #12]
+	str	r2, [sp, #8]
+	ldr	r2, [r3, #8]
+	str	r2, [sp, #4]
+	ldr	r2, [r3, #4]
+	str	r2, [sp]
+	ldr	r3, [r3]
+	ldr	r2, [r4, #3228]
+	bl	printk
+.LVL639:
+.L768:
+	.loc 2 2281 0 discriminator 2
+	adds	r5, r5, #1
+	b	.L765
+.L779:
+	.align	2
+.L778:
+	.word	.LANCHOR0
+	.word	.LC84
+	.word	.LANCHOR0+3224
+	.word	.LC86
+	.word	.LC85
+.LFE241:
+	.fnend
+	.size	ftl_scan_all_data, .-ftl_scan_all_data
+	.align	1
+	.global	FtlReadRefresh
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlReadRefresh, %function
+FtlReadRefresh:
+	.fnstart
+.LFB268:
+	.loc 5 419 0
+	@ args = 0, pretend = 0, frame = 88
+	@ frame_needed = 0, uses_anonymous_args = 0
+	.loc 5 425 0
+	ldr	r3, .L793
+	.loc 5 419 0
+	push	{r4, r5, r6, lr}
+	.save {r4, r5, r6, lr}
+.LCFI98:
+	.pad #88
+	sub	sp, sp, #88
+.LCFI99:
+	mov	r4, r3
+	.loc 5 425 0
+	ldr	r0, [r3, #2696]
+	cmp	r0, #0
+	beq	.L781
+	.loc 5 426 0
+	ldr	r1, [r3, #2700]
+	ldr	r2, [r3, #2436]
+	cmp	r1, r2
+	bcs	.L782
+	mov	r5, #2048
+.LVL640:
+.L787:
+.LBB374:
+.LBB375:
+	.loc 5 428 0
+	ldr	r0, [r4, #2700]
+	ldr	r3, [r4, #2436]
+	cmp	r0, r3
+	bcs	.L784
+	.loc 5 430 0
+	movs	r2, #0
+	mov	r1, sp
+	bl	log2phys
+.LVL641:
+	.loc 5 432 0
+	ldr	r2, [sp]
+	.loc 5 431 0
+	ldr	r3, [r4, #2700]
+	.loc 5 432 0
+	adds	r1, r2, #1
+	.loc 5 431 0
+	add	r3, r3, #1
+	str	r3, [r4, #2700]
+	.loc 5 432 0
+	beq	.L785
+.LBB376:
+	.loc 5 435 0
+	str	r3, [sp, #20]
+	.loc 5 438 0
+	add	r0, sp, #88
+	.loc 5 436 0
+	ldr	r3, .L793+4
+	.loc 5 439 0
+	movs	r1, #1
+	.loc 5 434 0
+	str	r2, [sp, #8]
+	.loc 5 438 0
+	movs	r2, #0
+	str	r2, [r0, #-84]!
+	.loc 5 436 0
+	str	r3, [sp, #12]
+	.loc 5 437 0
+	add	r3, sp, #24
+	str	r3, [sp, #16]
+	.loc 5 439 0
+	bl	FlashReadPages
+.LVL642:
+	.loc 5 440 0
+	ldr	r3, [sp, #4]
+	cmp	r3, #256
+	bne	.L784
+	.loc 5 442 0
+	ldr	r0, [sp]
+	ubfx	r0, r0, #10, #16
+	bl	P2V_block_in_plane
+.LVL643:
+	bl	FtlGcRefreshBlock
+.LVL644:
+.L784:
+.LBE376:
+	mov	r0, #-1
+.L780:
+.LBE375:
+.LBE374:
+	.loc 5 466 0
+	add	sp, sp, #88
+.LCFI100:
+	@ sp needed
+	pop	{r4, r5, r6, pc}
+.L785:
+.LCFI101:
+.LBB378:
+.LBB377:
+	.loc 5 427 0
+	subs	r5, r5, #1
+	bne	.L787
+	b	.L784
+.LVL645:
+.L782:
+.LBE377:
+.LBE378:
+	.loc 5 451 0
+	ldr	r2, [r3, #2440]
+	.loc 5 449 0
+	movs	r0, #0
+	str	r0, [r3, #2696]
+	.loc 5 450 0
+	str	r0, [r3, #2700]
+	.loc 5 451 0
+	str	r2, [r3, #2692]
+	b	.L780
+.L781:
+.LBB379:
+	.loc 5 456 0
+	ldr	r1, [r3, #2440]
+	ldr	r6, [r3, #2692]
+	add	r2, r1, #1048576
+	cmp	r6, r2
+	bhi	.L790
+	.loc 5 454 0
+	ldr	r2, [r3, #2496]
+	lsrs	r5, r2, #10
+	mov	r2, #33554432
+	asrs	r2, r2, r5
+.LVL646:
+	.loc 5 457 0
+	add	r2, r2, r6
+.LVL647:
+	cmp	r1, r2
+	bhi	.L790
+	.loc 5 458 0
+	ldrb	r3, [r3, #2532]	@ zero_extendqisi2
+	cmp	r3, #0
+	bne	.L780
+.L790:
+	.loc 5 460 0
+	movs	r3, #1
+	.loc 5 461 0
+	movs	r0, #0
+	.loc 5 460 0
+	str	r3, [r4, #2696]
+	.loc 5 461 0
+	str	r0, [r4, #2700]
+	.loc 5 462 0
+	str	r1, [r4, #2692]
+	b	.L780
+.L794:
+	.align	2
+.L793:
+	.word	.LANCHOR0
+	.word	ftl_temp_buf
+.LBE379:
+.LFE268:
+	.fnend
+	.size	FtlReadRefresh, .-FtlReadRefresh
+	.align	1
+	.global	ftl_check_vpc
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	ftl_check_vpc, %function
+ftl_check_vpc:
+	.fnstart
+.LFB240:
+	.loc 2 2223 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.pad #12
+.LCFI102:
+	.loc 2 2232 0
+	movs	r4, #0
+.LVL648:
+	ldr	r6, .L819
+	.loc 2 2238 0
+	ldr	r7, .L819+4
+	.loc 2 2229 0
+	ldr	r1, .L819+8
+	mov	r5, r6
+	ldr	r0, .L819+12
+	bl	printk
+.LVL649:
+.LBB386:
+.LBB387:
+.LBB388:
+	.loc 1 202 0
+	mov	r1, #8192
+	ldr	r0, .L819+4
+	bl	__memzero
+.LVL650:
+.L796:
+.LBE388:
+.LBE387:
+.LBE386:
+	.loc 2 2232 0 discriminator 1
+	ldr	r3, [r6, #2436]
+	cmp	r4, r3
+	bcc	.L798
+	.loc 2 2245 0 discriminator 1
+	ldr	r8, .L819+4
+	movs	r4, #0
+.LVL651:
+	.loc 2 2247 0 discriminator 1
+	ldr	r10, .L819+24
+	mov	r7, r4
+.LVL652:
+	.loc 2 2245 0 discriminator 1
+	movw	r9, #65535
+.L799:
+	.loc 2 2243 0 discriminator 1
+	ldrh	r2, [r5, #16]
+	uxth	r3, r4
+	cmp	r2, r3
+	bhi	.L801
+	.loc 2 2255 0
+	ldr	r4, [r5, #2272]
+	cbz	r4, .L802
+.LBB389:
+	.loc 2 2258 0
+	ldr	r3, [r5, #2252]
+	.loc 2 2259 0
+	movs	r6, #0
+	.loc 2 2257 0
+	ldrh	r8, [r5, #2276]
+.LVL653:
+	.loc 2 2266 0
+	mov	fp, #6
+	.loc 2 2263 0
+	ldr	r9, .L819+4
+	.loc 2 2258 0
+	subs	r4, r4, r3
+	ldr	r3, .L819+16
+	asrs	r4, r4, #1
+	.loc 2 2263 0
+	ldr	r10, .L819+28
+	.loc 2 2258 0
+	muls	r4, r3, r4
+	uxth	r4, r4
+.L803:
+	.loc 2 2259 0 discriminator 1
+	uxth	r3, r6
+	cmp	r8, r3
+	bls	.L802
+	.loc 2 2261 0
+	ldr	r3, [r5, #2260]
+	ldrh	r2, [r3, r4, lsl #1]
+	cbz	r2, .L804
+	.loc 2 2264 0
+	movs	r7, #1
+	.loc 2 2263 0
+	ldrh	r3, [r9, r4, lsl #1]
+	mov	r1, r4
+	mov	r0, r10
+	bl	printk
+.LVL654:
+.L804:
+	.loc 2 2266 0
+	mul	r4, fp, r4
+	ldr	r3, [r5, #2252]
+	adds	r6, r6, #1
+	ldrh	r4, [r3, r4]
+	movw	r3, #65535
+	cmp	r4, r3
+	bne	.L803
+.L802:
+.LBE389:
+	.loc 2 2271 0
+	cbz	r7, .L795
+	.loc 2 2271 0 is_stmt 0 discriminator 1
+	movw	r2, #2271
+	ldr	r1, .L819+8
+	ldr	r0, .L819+20
+	bl	printk
+.LVL655:
+.L795:
+	.loc 2 2272 0 is_stmt 1
+	add	sp, sp, #12
+.LCFI103:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL656:
+.L798:
+.LCFI104:
+	.loc 2 2234 0
+	movs	r2, #0
+	add	r1, sp, #4
+	mov	r0, r4
+	bl	log2phys
+.LVL657:
+	.loc 2 2235 0
+	ldr	r0, [sp, #4]
+	adds	r3, r0, #1
+	beq	.L797
+	.loc 2 2237 0
+	ubfx	r0, r0, #10, #16
+	bl	P2V_block_in_plane
+.LVL658:
+	.loc 2 2238 0
+	ldrh	r3, [r7, r0, lsl #1]
+	adds	r3, r3, #1
+	strh	r3, [r7, r0, lsl #1]	@ movhi
+.L797:
+	.loc 2 2232 0 discriminator 2
+	adds	r4, r4, #1
+	b	.L796
+.LVL659:
+.L801:
+	.loc 2 2245 0
+	ldr	r3, [r5, #2260]
+	uxth	r6, r4
+	ldrh	r2, [r3, r6, lsl #1]
+	ldrh	r3, [r8, r6, lsl #1]
+	cmp	r2, r3
+	beq	.L800
+	.loc 2 2247 0
+	mov	r1, r6
+	mov	r0, r10
+	bl	printk
+.LVL660:
+	.loc 2 2248 0
+	ldr	r3, [r5, #2260]
+	ldrh	r3, [r3, r6, lsl #1]
+	cmp	r3, r9
+	beq	.L800
+	.loc 2 2248 0 is_stmt 0 discriminator 1
+	ldrh	r2, [r8, r6, lsl #1]
+	.loc 2 2250 0 is_stmt 1 discriminator 1
+	cmp	r2, r3
+	it	hi
+	movhi	r7, #1
+.L800:
+	adds	r4, r4, #1
+	b	.L799
+.L820:
+	.align	2
+.L819:
+	.word	.LANCHOR0
+	.word	check_vpc_table
+	.word	.LANCHOR1+314
+	.word	.LC87
+	.word	-1431655765
+	.word	.LC1
+	.word	.LC88
+	.word	.LC89
+.LFE240:
+	.fnend
+	.size	ftl_check_vpc, .-ftl_check_vpc
+	.align	1
+	.global	FtlMapBlkWriteDump_data
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlMapBlkWriteDump_data, %function
+FtlMapBlkWriteDump_data:
+	.fnstart
+.LFB217:
+	.loc 2 897 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL661:
+	push	{r4, r5, r6, lr}
+	.save {r4, r5, r6, lr}
+.LCFI105:
+	.loc 2 897 0
+	mov	r6, r0
+	.loc 2 903 0
+	ldr	r3, [r0, #36]
+	cbz	r3, .L821
+	.loc 2 899 0
+	ldrh	r5, [r0, #6]
+	.loc 2 905 0
+	movs	r3, #0
+	.loc 2 907 0
+	ldr	r4, .L825
+	.loc 2 900 0
+	ldr	r2, [r0, #24]
+.LVL662:
+	.loc 2 905 0
+	str	r3, [r0, #36]
+	.loc 2 899 0
+	subs	r5, r5, #1
+	.loc 2 907 0
+	ldr	r0, [r4, #3804]
+	.loc 2 930 0
+	uxth	r5, r5
+	.loc 2 908 0
+	ldr	r1, [r4, #3244]
+	.loc 2 907 0
+	str	r0, [r4, #3232]
+	.loc 2 908 0
+	str	r1, [r4, #3236]
+	.loc 2 930 0
+	ldr	r2, [r2, r5, lsl #2]
+.LVL663:
+	.loc 2 931 0
+	str	r2, [r4, #3228]
+	.loc 2 932 0
+	cbz	r2, .L823
+	.loc 2 934 0
+	movs	r2, #1
+.LVL664:
+	addw	r0, r4, #3224
+	mov	r1, r2
+	bl	FlashReadPages
+.LVL665:
+.L824:
+	.loc 2 941 0
+	ldr	r2, [r4, #3232]
+	mov	r1, r5
+	mov	r0, r6
+	.loc 2 943 0
+	pop	{r4, r5, r6, lr}
+.LCFI106:
+.LVL666:
+	.loc 2 941 0
+	b	FtlMapWritePage
+.LVL667:
+.L823:
+.LCFI107:
+	.loc 2 938 0
+	ldrh	r2, [r4, #86]
+.LVL668:
+	movs	r1, #255
+	bl	ftl_memset
+.LVL669:
+	b	.L824
+.LVL670:
+.L821:
+	pop	{r4, r5, r6, pc}
+.L826:
+	.align	2
+.L825:
+	.word	.LANCHOR0
+.LFE217:
+	.fnend
+	.size	FtlMapBlkWriteDump_data, .-FtlMapBlkWriteDump_data
+	.align	1
+	.global	FtlScanSysBlk
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlScanSysBlk, %function
+FtlScanSysBlk:
+	.fnstart
+.LFB220:
+	.loc 2 1095 0
+	@ args = 0, pretend = 0, frame = 16
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI108:
+	.loc 2 1101 0
+	movs	r5, #0
+	ldr	r4, .L909
+	.loc 2 1095 0
+	.pad #20
+	sub	sp, sp, #20
+.LCFI109:
+	.loc 2 1103 0
+	mov	r1, r5
+	ldr	r2, [r4, #104]
+	ldr	r0, [r4, #3852]
+	.loc 2 1101 0
+	strh	r5, [r4, #3904]	@ movhi
+	.loc 2 1102 0
+	strh	r5, [r4, #120]	@ movhi
+	.loc 2 1103 0
+	lsls	r2, r2, #2
+	bl	ftl_memset
+.LVL671:
+	.loc 2 1104 0
+	ldr	r2, [r4, #104]
+	mov	r1, r5
+	ldr	r0, [r4, #3828]
+	lsls	r2, r2, #1
+	bl	ftl_memset
+.LVL672:
+	.loc 2 1105 0
+	ldrh	r2, [r4, #96]
+	mov	r1, r5
+	ldr	r0, [r4, #3840]
+	lsls	r2, r2, #2
+	bl	ftl_memset
+.LVL673:
+	.loc 2 1106 0
+	ldrh	r2, [r4, #96]
+	mov	r1, r5
+	ldr	r0, [r4, #124]
+	lsls	r2, r2, #1
+	bl	ftl_memset
+.LVL674:
+	.loc 2 1109 0
+	ldrh	r8, [r4, #16]
+.LVL675:
+.LBB395:
+.LBB396:
+.LBB397:
+	.loc 1 202 0
+	mov	r3, #-1
+	str	r3, [r4, #2556]
+	str	r3, [r4, #2560]
+	str	r3, [r4, #2564]
+.LVL676:
+.L828:
+.LBE397:
+.LBE396:
+.LBE395:
+	.loc 2 1109 0 discriminator 1
+	ldrh	r3, [r4, #18]
+	cmp	r3, r8
+	bls	.L870
+	.loc 2 1120 0 discriminator 1
+	movs	r5, #0
+	.loc 2 1113 0 discriminator 1
+	ldrh	fp, [r4, #8]
+	.loc 2 1118 0 discriminator 1
+	ldr	r9, [r4, #3792]
+	.loc 2 1120 0 discriminator 1
+	mov	r7, r5
+	.loc 2 1119 0 discriminator 1
+	ldr	r3, [r4, #3152]
+	.loc 2 1118 0 discriminator 1
+	mov	r10, #20
+	.loc 2 1120 0 discriminator 1
+	ldr	r2, [r4, #3156]
+	ldrh	r6, [r4, #88]
+.LVL677:
+	b	.L871
+.L831:
+	str	r3, [sp, #8]
+	.loc 2 1115 0
+	mov	r1, r8
+	ldr	r3, .L909+4
+	str	r2, [sp, #12]
+	ldrb	r0, [r3, r5]	@ zero_extendqisi2
+	bl	V2P_block
+.LVL678:
+	str	r0, [sp, #4]
+	.loc 2 1116 0
+	bl	FtlBbmIsBadBlock
+.LVL679:
+	ldr	r3, [sp, #8]
+	ldr	r2, [sp, #12]
+	cbnz	r0, .L829
+	.loc 2 1118 0
+	ldr	r1, [sp, #4]
+	mla	r0, r10, r7, r9
+	lsls	r1, r1, #10
+	.loc 2 1119 0
+	str	r3, [r0, #8]
+	.loc 2 1118 0
+	str	r1, [r0, #4]
+	.loc 2 1120 0
+	mov	r1, r6
+	muls	r1, r7, r1
+	.loc 2 1121 0
+	add	r7, r7, #1
+.LVL680:
+	.loc 2 1120 0
+	it	mi
+	addmi	r1, r1, #3
+	.loc 2 1121 0
+	uxth	r7, r7
+.LVL681:
+	.loc 2 1120 0
+	bic	r1, r1, #3
+	add	r1, r1, r2
+	str	r1, [r0, #12]
+.L829:
+	adds	r5, r5, #1
+.L871:
+	.loc 2 1113 0 discriminator 1
+	uxth	r1, r5
+	cmp	fp, r1
+	bhi	.L831
+	.loc 2 1124 0
+	cbnz	r7, .L832
+.LVL682:
+.L869:
+	.loc 2 1109 0
+	add	r8, r8, #1
+.LVL683:
+	uxth	r8, r8
+.LVL684:
+	b	.L828
+.LVL685:
+.L832:
+	.loc 2 1127 0
+	mov	r0, r9
+	.loc 2 1128 0
+	mov	r9, #0
+	.loc 2 1127 0
+	movs	r2, #1
+	mov	r1, r7
+	bl	FlashReadPages
+.LVL686:
+.L833:
+	.loc 2 1128 0 discriminator 1
+	uxth	r3, r9
+	cmp	r7, r3
+	bls	.L869
+	movs	r3, #20
+	mul	r10, r3, r9
+	.loc 2 1129 0
+	ldr	r3, [r4, #3792]
+	add	r2, r3, r10
+	.loc 2 1132 0
+	ldr	r3, [r3, r10]
+	.loc 2 1129 0
+	ldr	r5, [r2, #4]
+	.loc 2 1130 0
+	ldr	r6, [r2, #12]
+	.loc 2 1132 0
+	adds	r3, r3, #1
+	.loc 2 1129 0
+	ubfx	r5, r5, #10, #16
+	.loc 2 1132 0
+	bne	.L836
+	mov	fp, #16
+	.loc 2 1136 0
+	movw	r3, #65535
+.L838:
+	.loc 2 1134 0
+	ldr	r0, [r4, #3792]
+	str	r3, [sp, #4]
+	add	r0, r0, r10
+	ldr	r2, [r0, #4]
+	adds	r2, r2, #1
+	str	r2, [r0, #4]
+	.loc 2 1135 0
+	movs	r2, #1
+	mov	r1, r2
+	bl	FlashReadPages
+.LVL687:
+	.loc 2 1136 0
+	ldrh	r2, [r6]
+	ldr	r3, [sp, #4]
+	cmp	r2, r3
+	bne	.L835
+	.loc 2 1137 0
+	ldr	r3, [r4, #3792]
+	mov	r2, #-1
+	str	r2, [r3, r10]
+	.loc 2 1145 0
+	ldr	r3, [r4, #3792]
+	ldr	r3, [r3, r10]
+	cmp	r3, r2
+	bne	.L836
+.L837:
+	.loc 2 1287 0
+	movs	r1, #1
+	b	.L908
+.L835:
+	.loc 2 1139 0
+	ldr	r2, [r4, #3792]
+	ldr	r2, [r2, r10]
+	adds	r2, r2, #1
+	bne	.L836
+	add	fp, fp, #-1
+	uxth	fp, fp
+	.loc 2 1133 0 discriminator 2
+	cmp	fp, #0
+	bne	.L838
+	b	.L837
+.L836:
+	.loc 2 1147 0
+	ldr	r2, [r4, #2472]
+	ldr	r3, [r6, #4]
+	adds	r1, r2, #1
+	beq	.L839
+	.loc 2 1147 0 is_stmt 0 discriminator 1
+	cmp	r2, r3
+	bhi	.L840
+.L839:
+	.loc 2 1149 0 is_stmt 1
+	adds	r2, r3, #1
+	.loc 2 1152 0
+	itt	ne
+	addne	r2, r3, #1
+	strne	r2, [r4, #2472]
+.L840:
+	.loc 2 1157 0
+	ldrh	r2, [r6]
+	movw	r1, #61604
+	cmp	r2, r1
+	beq	.L842
+	bhi	.L843
+	movw	r3, #61574
+	cmp	r2, r3
+	beq	.L844
+.L841:
+	add	r9, r9, #1
+	b	.L833
+.L843:
+	movw	r3, #61634
+	cmp	r2, r3
+	beq	.L845
+	movw	r3, #65535
+	cmp	r2, r3
+	bne	.L841
+	.loc 2 1280 0
+	movs	r1, #0
+.L908:
+	.loc 2 1287 0
+	mov	r0, r5
+	bl	FtlFreeSysBlkQueueIn
+.LVL688:
+	b	.L841
+.L845:
+	.loc 2 1162 0
+	ldrh	r2, [r4, #3904]
+	ldr	r3, [r4, #104]
+	cmp	r2, r3
+	bls	.L847
+	.loc 2 1162 0 is_stmt 0 discriminator 1
+	movw	r2, #1162
+	ldr	r1, .L909+8
+	ldr	r0, .L909+12
+	bl	printk
+.LVL689:
+.L847:
+	.loc 2 1163 0 is_stmt 1
+	ldr	r1, [r4, #104]
+	ldrh	r0, [r4, #3904]
+	.loc 2 1165 0
+	ldr	r10, [r4, #3852]
+	.loc 2 1163 0
+	uxth	ip, r1
+	add	r3, ip, #-1
+	sub	ip, ip, r0
+	add	ip, ip, #-1
+	sxth	r3, r3
+	sxth	ip, ip
+.L848:
+	.loc 2 1163 0 is_stmt 0 discriminator 1
+	cmp	r3, ip
+	bgt	.L854
+	.loc 2 1186 0 is_stmt 1
+	cmp	r3, #0
+	bge	.L886
+	b	.L841
+.L854:
+	.loc 2 1165 0
+	ldr	r2, [r6, #4]
+	lsl	fp, r3, #2
+	mov	lr, r2
+	ldr	r2, [r10, r3, lsl #2]
+	cmp	lr, r2
+	bls	.L849
+	.loc 2 1167 0
+	ldr	r2, [r10]
+	cbnz	r2, .L850
+	.loc 2 1167 0 is_stmt 0 discriminator 1
+	cmp	r1, r0
+	.loc 2 1172 0 is_stmt 1 discriminator 1
+	itt	ne
+	addne	r0, r0, #1
+	strhne	r0, [r4, #3904]	@ movhi
+.L850:
+	.loc 2 1175 0 discriminator 1
+	uxth	ip, r3
+	movs	r2, #0
+.L851:
+	uxth	r0, r2
+	sxth	r1, r2
+	cmp	ip, r0
+	bhi	.L852
+	.loc 2 1180 0
+	ldr	r2, [r4, #3852]
+	.loc 2 1186 0
+	cmp	r3, #0
+	.loc 2 1180 0
+	ldr	r1, [r6, #4]
+	str	r1, [r2, fp]
+	.loc 2 1181 0
+	ldr	r2, [r4, #3828]
+	strh	r5, [r2, r3, lsl #1]	@ movhi
+	.loc 2 1186 0
+	blt	.L841
+	.loc 2 1193 0
+	ldrh	r0, [r4, #3904]
+	ldr	r2, [r4, #104]
+	subs	r2, r2, r0
+	subs	r2, r2, #1
+	sxth	r2, r2
+	cmp	r3, r2
+	bgt	.L841
+.L886:
+	.loc 2 1196 0
+	ldr	r2, [r4, #3852]
+	.loc 2 1195 0
+	adds	r0, r0, #1
+	.loc 2 1196 0
+	ldr	r1, [r6, #4]
+	.loc 2 1195 0
+	strh	r0, [r4, #3904]	@ movhi
+	.loc 2 1196 0
+	str	r1, [r2, r3, lsl #2]
+	.loc 2 1197 0
+	ldr	r2, [r4, #3828]
+.L906:
+	.loc 2 1241 0
+	strh	r5, [r2, r3, lsl #1]	@ movhi
+	b	.L841
+.L852:
+	.loc 2 1177 0 discriminator 3
+	ldr	r0, [r4, #3852]
+	adds	r2, r2, #1
+	add	lr, r0, r1, lsl #2
+	ldr	lr, [lr, #4]
+	str	lr, [r0, r1, lsl #2]
+	.loc 2 1178 0 discriminator 3
+	ldr	r0, [r4, #3828]
+	add	lr, r0, r1, lsl #1
+	ldrh	lr, [lr, #2]
+	strh	lr, [r0, r1, lsl #1]	@ movhi
+	b	.L851
+.L849:
+	subs	r3, r3, #1
+	sxth	r3, r3
+	b	.L848
+.L910:
+	.align	2
+.L909:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+36
+	.word	.LANCHOR1+328
+	.word	.LC1
+.L844:
+	.loc 2 1203 0
+	ldrh	r2, [r4, #120]
+	ldrh	r3, [r4, #96]
+	cmp	r2, r3
+	bls	.L857
+	.loc 2 1203 0 is_stmt 0 discriminator 1
+	movw	r2, #1203
+	ldr	r1, .L911
+	ldr	r0, .L911+4
+	bl	printk
+.LVL690:
+.L857:
+	.loc 2 1204 0 is_stmt 1
+	ldrh	lr, [r4, #96]
+	ldrh	r0, [r4, #120]
+	.loc 2 1206 0
+	ldr	r10, [r4, #3840]
+	.loc 2 1204 0
+	add	ip, lr, #-1
+	sxth	r3, ip
+	sub	ip, ip, r0
+.L858:
+	.loc 2 1204 0 is_stmt 0 discriminator 1
+	cmp	r3, ip
+	ble	.L863
+	.loc 2 1206 0 is_stmt 1
+	ldr	r2, [r6, #4]
+	lsl	fp, r3, #2
+	ldr	r1, [r10, r3, lsl #2]
+	cmp	r2, r1
+	bls	.L859
+	.loc 2 1208 0
+	ldr	r2, [r10]
+	cbnz	r2, .L860
+	.loc 2 1208 0 is_stmt 0 discriminator 1
+	cmp	lr, r0
+	.loc 2 1216 0 is_stmt 1 discriminator 1
+	itt	ne
+	addne	r0, r0, #1
+	strhne	r0, [r4, #120]	@ movhi
+.L860:
+	.loc 2 1218 0 discriminator 1
+	uxth	ip, r3
+	movs	r2, #0
+.L861:
+	uxth	r0, r2
+	sxth	r1, r2
+	cmp	ip, r0
+	bhi	.L862
+	.loc 2 1223 0
+	ldr	r2, [r4, #3840]
+	ldr	r1, [r6, #4]
+	str	r1, [r2, fp]
+	.loc 2 1224 0
+	ldr	r2, [r4, #124]
+	strh	r5, [r2, r3, lsl #1]	@ movhi
+.L863:
+	.loc 2 1229 0
+	cmp	r3, #0
+	blt	.L841
+	.loc 2 1237 0
+	ldrh	r2, [r4, #96]
+	ldrh	r1, [r4, #120]
+	subs	r2, r2, #1
+	subs	r2, r2, r1
+	sxth	r2, r2
+	cmp	r3, r2
+	bgt	.L841
+	.loc 2 1239 0
+	adds	r1, r1, #1
+	.loc 2 1240 0
+	ldr	r2, [r4, #3840]
+	.loc 2 1239 0
+	strh	r1, [r4, #120]	@ movhi
+	.loc 2 1240 0
+	ldr	r1, [r6, #4]
+	str	r1, [r2, r3, lsl #2]
+	.loc 2 1241 0
+	ldr	r2, [r4, #124]
+	b	.L906
+.L862:
+	.loc 2 1220 0 discriminator 3
+	ldr	r0, [r4, #3840]
+	adds	r2, r2, #1
+	add	lr, r0, r1, lsl #2
+	ldr	lr, [lr, #4]
+	str	lr, [r0, r1, lsl #2]
+	.loc 2 1221 0 discriminator 3
+	ldr	r0, [r4, #124]
+	add	lr, r0, r1, lsl #1
+	ldrh	lr, [lr, #2]
+	strh	lr, [r0, r1, lsl #1]	@ movhi
+	b	.L861
+.L859:
+	subs	r3, r3, #1
+	sxth	r3, r3
+	b	.L858
+.L842:
+	.loc 2 1248 0
+	ldrh	r1, [r4, #2556]
+	movw	r2, #65535
+	cmp	r1, r2
+	bne	.L865
+	.loc 2 1250 0
+	strh	r5, [r4, #2556]	@ movhi
+.L907:
+	.loc 2 1261 0
+	str	r3, [r4, #2564]
+	b	.L841
+.L865:
+	.loc 2 1255 0
+	ldrh	r0, [r4, #2560]
+	cmp	r0, r2
+	beq	.L866
+	.loc 2 1256 0
+	movs	r1, #1
+	bl	FtlFreeSysBlkQueueIn
+.LVL691:
+.L866:
+	.loc 2 1257 0
+	ldr	r2, [r4, #2564]
+	ldr	r3, [r6, #4]
+	cmp	r2, r3
+	bcs	.L867
+	.loc 2 1259 0
+	ldrh	r3, [r4, #2556]
+	.loc 2 1260 0
+	strh	r5, [r4, #2556]	@ movhi
+	.loc 2 1259 0
+	strh	r3, [r4, #2560]	@ movhi
+	.loc 2 1261 0
+	ldr	r3, [r6, #4]
+	b	.L907
+.L867:
+	.loc 2 1265 0
+	strh	r5, [r4, #2560]	@ movhi
+	b	.L841
+.L870:
+	.loc 2 1292 0
+	ldr	r1, [r4, #3828]
+	ldrh	r3, [r1]
+	cbz	r3, .L872
+.L875:
+	.loc 2 1310 0
+	ldr	r1, [r4, #124]
+	ldrh	r2, [r1]
+	cmp	r2, #0
+	beq	.L873
+.L874:
+	.loc 2 1328 0
+	ldrh	r2, [r4, #3904]
+	ldr	r3, [r4, #104]
+	cmp	r2, r3
+	bls	.L905
+	.loc 2 1328 0 is_stmt 0 discriminator 1
+	mov	r2, #1328
+	ldr	r1, .L911
+	ldr	r0, .L911+4
+	bl	printk
+.LVL692:
+.L905:
+	.loc 2 1330 0 is_stmt 1
+	movs	r0, #0
+	add	sp, sp, #20
+.LCFI110:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL693:
+.L872:
+.LCFI111:
+	.loc 2 1292 0 discriminator 1
+	ldrh	r2, [r4, #3904]
+	cmp	r2, #0
+	beq	.L875
+	.loc 2 1294 0 discriminator 1
+	ldr	r0, [r4, #104]
+.L876:
+	sxth	r2, r3
+	cmp	r2, r0
+	bcs	.L875
+	.loc 2 1296 0
+	ldrh	r5, [r1, r2, lsl #1]
+	adds	r3, r3, #1
+	cmp	r5, #0
+	beq	.L876
+	mov	r3, r2
+	.loc 2 1302 0 discriminator 1
+	movs	r5, #0
+.L877:
+	.loc 2 1298 0 discriminator 1
+	ldr	r1, [r4, #104]
+	cmp	r3, r1
+	bcs	.L875
+	.loc 2 1300 0 discriminator 3
+	ldr	r1, [r4, #3828]
+	subs	r0, r3, r2
+	ldrh	r6, [r1, r3, lsl #1]
+.LVL694:
+	strh	r6, [r1, r0, lsl #1]	@ movhi
+	.loc 2 1301 0 discriminator 3
+	ldr	r1, [r4, #3852]
+	ldr	r6, [r1, r3, lsl #2]
+	str	r6, [r1, r0, lsl #2]
+	.loc 2 1302 0 discriminator 3
+	ldr	r1, [r4, #3828]
+	strh	r5, [r1, r3, lsl #1]	@ movhi
+	adds	r3, r3, #1
+	sxth	r3, r3
+	b	.L877
+.LVL695:
+.L873:
+	.loc 2 1310 0 discriminator 1
+	ldrh	r3, [r4, #120]
+	cmp	r3, #0
+	beq	.L874
+	.loc 2 1312 0 discriminator 1
+	ldrh	r0, [r4, #96]
+.L882:
+	sxth	r3, r2
+	cmp	r3, r0
+	mov	r5, r3
+	bge	.L874
+	.loc 2 1314 0
+	ldrh	r6, [r1, r3, lsl #1]
+.LVL696:
+	adds	r2, r2, #1
+	cmp	r6, #0
+	beq	.L882
+	.loc 2 1320 0 discriminator 1
+	movs	r0, #0
+.L883:
+	.loc 2 1316 0 discriminator 1
+	ldrh	r2, [r4, #96]
+	cmp	r3, r2
+	bge	.L874
+	.loc 2 1318 0 discriminator 3
+	ldr	r2, [r4, #124]
+	subs	r1, r3, r5
+	ldrh	r6, [r2, r3, lsl #1]
+	strh	r6, [r2, r1, lsl #1]	@ movhi
+	.loc 2 1319 0 discriminator 3
+	ldr	r2, [r4, #3840]
+	ldr	r6, [r2, r3, lsl #2]
+	str	r6, [r2, r1, lsl #2]
+	.loc 2 1320 0 discriminator 3
+	ldr	r2, [r4, #124]
+	strh	r0, [r2, r3, lsl #1]	@ movhi
+	adds	r3, r3, #1
+	sxth	r3, r3
+	b	.L883
+.L912:
+	.align	2
+.L911:
+	.word	.LANCHOR1+328
+	.word	.LC1
+.LFE220:
+	.fnend
+	.size	FtlScanSysBlk, .-FtlScanSysBlk
+	.align	1
+	.global	FtlMapTblRecovery
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlMapTblRecovery, %function
+FtlMapTblRecovery:
+	.fnstart
+.LFB225:
+	.loc 2 1466 0
+	@ args = 0, pretend = 0, frame = 24
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL697:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI112:
+	.pad #28
+	sub	sp, sp, #28
+.LCFI113:
+	.loc 2 1470 0
+	ldr	r3, [r0, #24]
+.LVL698:
+	.loc 2 1466 0
+	mov	r4, r0
+	.loc 2 1477 0
+	movs	r1, #0
+	.loc 2 1473 0
+	ldrh	r10, [r0, #6]
+.LVL699:
+	.loc 2 1470 0
+	str	r3, [sp, #4]
+	.loc 2 1472 0
+	ldr	r3, [r0, #16]
+.LVL700:
+	.loc 2 1478 0
+	ldr	r5, .L940
+	.loc 2 1471 0
+	ldr	r9, [r0, #12]
+.LVL701:
+	.loc 2 1477 0
+	lsl	r2, r10, #2
+	.loc 2 1472 0
+	str	r3, [sp, #12]
+	.loc 2 1474 0
+	ldrh	r3, [r0, #8]
+.LVL702:
+	.loc 2 1477 0
+	ldr	r0, [sp, #4]
+.LVL703:
+	.loc 2 1474 0
+	str	r3, [sp, #8]
+	.loc 2 1477 0
+	bl	ftl_memset
+.LVL704:
+	.loc 2 1478 0
+	ldr	r3, [r5, #2244]
+	.loc 2 1485 0
+	movs	r2, #1
+	.loc 2 1479 0
+	ldr	r6, [r5, #3244]
+	.loc 2 1485 0
+	str	r2, [r4, #36]
+	.loc 2 1478 0
+	str	r3, [r5, #3232]
+	.loc 2 1481 0
+	movw	r3, #65535
+	.loc 2 1479 0
+	str	r6, [r5, #3236]
+	.loc 2 1481 0
+	strh	r3, [r4]	@ movhi
+	.loc 2 1482 0
+	strh	r3, [r4, #2]	@ movhi
+	.loc 2 1483 0
+	movs	r3, #0
+	str	r3, [r4, #32]
+	.loc 2 1486 0
+	mov	r8, r3
+	.loc 2 1484 0
+	str	r3, [r4, #28]
+	.loc 2 1488 0
+	ldr	r3, [sp, #8]
+.LVL705:
+	add	fp, r3, #-1
+	.loc 2 1530 0
+	mov	r3, r5
+.LVL706:
+.L914:
+	.loc 2 1486 0 discriminator 1
+	ldr	r1, [sp, #8]
+.LVL707:
+	sxth	r2, r8
+.LVL708:
+	cmp	r2, r1
+	bge	.L931
+	.loc 2 1488 0
+	cmp	r2, fp
+	lsl	r7, r2, #1
+.LVL709:
+	bne	.L915
+	.loc 2 1490 0
+	ldrh	r0, [r9, fp, lsl #1]
+.LVL710:
+	movs	r1, #1
+.LVL711:
+	bl	FtlGetLastWrittenPage
+.LVL712:
+	.loc 2 1493 0
+	ldr	r3, [sp, #12]
+.LVL713:
+	.loc 2 1490 0
+	add	r7, r7, r9
+	.loc 2 1492 0
+	strh	r8, [r4]	@ movhi
+	.loc 2 1490 0
+	sxth	r9, r0
+.LVL714:
+	.loc 2 1497 0
+	ldr	r8, .L940+4
+	.loc 2 1491 0
+	adds	r0, r0, #1
+	strh	r0, [r4, #2]	@ movhi
+	.loc 2 1494 0
+	add	r9, r9, #1
+.LVL715:
+	.loc 2 1493 0
+	ldr	r3, [r3, fp, lsl #2]
+.LVL716:
+	.loc 2 1494 0
+	mov	fp, #0
+	.loc 2 1493 0
+	str	r3, [r4, #28]
+.LVL717:
+.L916:
+	.loc 2 1494 0 discriminator 1
+	sxth	r2, fp
+	cmp	r2, r9
+	blt	.L918
+.LVL718:
+.L931:
+	.loc 2 1547 0
+	mov	r0, r4
+	bl	ftl_free_no_use_map_blk
+.LVL719:
+	.loc 2 1548 0
+	ldrh	r2, [r4, #2]
+	ldrh	r3, [r5, #80]
+	cmp	r2, r3
+	bne	.L920
+	.loc 2 1550 0
+	mov	r0, r4
+	bl	ftl_map_blk_alloc_new_blk
+.LVL720:
+.L920:
+	.loc 2 1553 0
+	mov	r0, r4
+	bl	ftl_map_blk_gc
+.LVL721:
+	.loc 2 1555 0
+	mov	r0, r4
+	bl	ftl_map_blk_gc
+.LVL722:
+	.loc 2 1557 0
+	movs	r0, #0
+	add	sp, sp, #28
+.LCFI114:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL723:
+.L918:
+.LCFI115:
+	.loc 2 1496 0
+	ldrh	r1, [r7]
+	.loc 2 1497 0
+	mov	r0, r8
+	.loc 2 1496 0
+	orr	r2, r2, r1, lsl #10
+	str	r2, [r5, #3228]
+	.loc 2 1497 0
+	movs	r2, #1
+	mov	r1, r2
+	bl	FlashReadPages
+.LVL724:
+	.loc 2 1500 0
+	ldr	r2, [r5, #3224]
+	adds	r2, r2, #1
+	beq	.L917
+	.loc 2 1502 0
+	ldrh	r2, [r6, #8]
+	cmp	r10, r2
+	bls	.L917
+	.loc 2 1502 0 is_stmt 0 discriminator 1
+	ldrh	r1, [r4, #4]
+	ldrh	r0, [r6]
+	cmp	r0, r1
+	.loc 2 1504 0 is_stmt 1 discriminator 1
+	ittt	eq
+	ldreq	r1, [r5, #3228]
+	ldreq	r3, [sp, #4]
+.LVL725:
+	streq	r1, [r3, r2, lsl #2]
+.L917:
+	add	fp, fp, #1
+	b	.L916
+.LVL726:
+.L915:
+	.loc 2 1510 0
+	ldr	r1, [r5, #2244]
+.LVL727:
+	str	r3, [sp, #20]
+	.loc 2 1511 0
+	add	r3, r9, r7
+	.loc 2 1512 0
+	ldr	r0, .L940+4
+.LVL728:
+	.loc 2 1510 0
+	str	r1, [r5, #3232]
+	.loc 2 1511 0
+	ldrh	r1, [r9, r2, lsl #1]
+	ldrh	r2, [r5, #80]
+.LVL729:
+	str	r3, [sp, #16]
+	subs	r2, r2, #1
+	orr	r2, r2, r1, lsl #10
+	str	r2, [r5, #3228]
+	.loc 2 1512 0
+	movs	r2, #1
+	mov	r1, r2
+	bl	FlashReadPages
+.LVL730:
+	.loc 2 1515 0
+	ldr	r2, [r5, #3224]
+	ldr	r3, [sp, #20]
+	adds	r2, r2, #1
+	beq	.L933
+	.loc 2 1515 0 is_stmt 0 discriminator 1
+	ldrh	r1, [r6]
+	ldrh	r2, [r4, #4]
+	cmp	r1, r2
+	bne	.L933
+	.loc 2 1515 0 discriminator 2
+	ldrh	r1, [r6, #8]
+	movw	r2, #64245
+	cmp	r1, r2
+	beq	.L922
+.L933:
+	movs	r7, #0
+.LVL731:
+.L923:
+	.loc 2 1530 0 is_stmt 1 discriminator 1
+	ldrh	r1, [r3, #80]
+	sxth	r2, r7
+	cmp	r2, r1
+	bge	.L929
+	.loc 2 1532 0
+	ldr	r1, [sp, #16]
+	.loc 2 1533 0
+	ldr	r0, .L940+4
+.LVL732:
+	.loc 2 1532 0
+	str	r3, [sp, #20]
+	ldrh	r1, [r1]
+	orr	r2, r2, r1, lsl #10
+	str	r2, [r3, #3228]
+	.loc 2 1533 0
+	movs	r2, #1
+	mov	r1, r2
+	bl	FlashReadPages
+.LVL733:
+	.loc 2 1536 0
+	ldr	r3, [sp, #20]
+	ldr	r2, [r3, #3224]
+	adds	r2, r2, #1
+	beq	.L927
+	.loc 2 1538 0
+	ldrh	r2, [r6, #8]
+	cmp	r10, r2
+	bls	.L927
+	.loc 2 1538 0 is_stmt 0 discriminator 1
+	ldrh	r0, [r6]
+	ldrh	r1, [r4, #4]
+	cmp	r0, r1
+	.loc 2 1540 0 is_stmt 1 discriminator 1
+	ittt	eq
+	ldreq	r1, [r3, #3228]
+	ldreq	r0, [sp, #4]
+.LVL734:
+	streq	r1, [r0, r2, lsl #2]
+.L927:
+	adds	r7, r7, #1
+	b	.L923
+.LVL735:
+.L922:
+	movs	r0, #0
+	.loc 2 1523 0 discriminator 1
+	mov	ip, #4
+.LVL736:
+.L924:
+	.loc 2 1518 0 discriminator 1
+	ldrh	r1, [r5, #80]
+	sxth	r2, r0
+	subs	r1, r1, #1
+	cmp	r2, r1
+	blt	.L926
+.L929:
+	add	r8, r8, #1
+	b	.L914
+.L926:
+	.loc 2 1520 0
+	ldr	r7, [r5, #2244]
+.LVL737:
+	ldr	r1, [r7, r2, lsl #3]
+	.loc 2 1521 0
+	uxth	lr, r1
+	cmp	r10, lr
+	bls	.L925
+	.loc 2 1523 0
+	add	r2, ip, r2, lsl #3
+	ldr	r2, [r7, r2]
+	ldr	r7, [sp, #4]
+.LVL738:
+	str	r2, [r7, lr, lsl #2]
+.L925:
+	adds	r0, r0, #1
+	b	.L924
+.L941:
+	.align	2
+.L940:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+3224
+.LFE225:
+	.fnend
+	.size	FtlMapTblRecovery, .-FtlMapTblRecovery
+	.align	1
+	.global	FtlLoadVonderInfo
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlLoadVonderInfo, %function
+FtlLoadVonderInfo:
+	.fnstart
+.LFB226:
+	.loc 2 1560 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	.loc 2 1561 0
+	ldr	r0, .L943
+	.loc 2 1560 0
+	push	{r3, lr}
+	.save {r3, lr}
+.LCFI116:
+	.loc 2 1561 0
+	ldrh	r3, [r0, #96]
+	strh	r3, [r0, #3918]	@ movhi
+	.loc 2 1562 0
+	movw	r3, #61574
+	strh	r3, [r0, #3912]	@ movhi
+	.loc 2 1563 0
+	ldrh	r3, [r0, #120]
+	strh	r3, [r0, #3916]	@ movhi
+	.loc 2 1564 0
+	ldrh	r3, [r0, #98]
+	strh	r3, [r0, #3914]	@ movhi
+	.loc 2 1565 0
+	ldr	r3, [r0, #124]
+	.loc 2 1570 0
+	addw	r0, r0, #3908
+	.loc 2 1565 0
+	str	r3, [r0, #12]
+	.loc 2 1566 0
+	ldr	r3, [r0, #-68]
+	str	r3, [r0, #16]
+	.loc 2 1567 0
+	ldr	r3, [r0, #-72]
+	str	r3, [r0, #20]
+	.loc 2 1568 0
+	ldr	r3, [r0, #-64]
+	str	r3, [r0, #24]
+	.loc 2 1570 0
+	bl	FtlMapTblRecovery
+.LVL739:
+	.loc 2 1573 0
+	movs	r0, #0
+	pop	{r3, pc}
+.L944:
+	.align	2
+.L943:
+	.word	.LANCHOR0
+.LFE226:
+	.fnend
+	.size	FtlLoadVonderInfo, .-FtlLoadVonderInfo
+	.align	1
+	.global	FtlL2PDataInit
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlL2PDataInit, %function
+FtlL2PDataInit:
+	.fnstart
+.LFB227:
+	.loc 2 1576 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r3, r4, r5, r6, r7, lr}
+	.save {r3, r4, r5, r6, r7, lr}
+.LCFI117:
+	.loc 2 1578 0
+	movs	r1, #0
+	ldr	r4, .L948
+	.loc 2 1582 0
+	movs	r6, #12
+	.loc 2 1578 0
+	ldr	r2, [r4, #104]
+	ldr	r0, [r4, #3832]
+	lsls	r2, r2, #1
+	bl	ftl_memset
+.LVL740:
+	.loc 2 1579 0
+	ldrh	r3, [r4, #86]
+	movs	r1, #255
+	ldrh	r2, [r4, #114]
+	ldr	r0, [r4, #3856]
+	muls	r2, r3, r2
+	bl	ftl_memset
+.LVL741:
+	.loc 2 1580 0
+	movs	r2, #0
+	mov	r3, r4
+	movw	r1, #65535
+	.loc 2 1582 0
+	mov	r7, r2
+.L946:
+	.loc 2 1580 0 discriminator 1
+	ldrh	r4, [r3, #114]
+	uxth	r0, r2
+	adds	r5, r2, #1
+	cmp	r4, r0
+	bhi	.L947
+	.loc 2 1588 0
+	ldr	r2, [r3, #104]
+	.loc 2 1586 0
+	strh	r1, [r3, #3866]	@ movhi
+	.loc 2 1587 0
+	strh	r1, [r3, #3864]	@ movhi
+	.loc 2 1588 0
+	strh	r2, [r3, #3874]	@ movhi
+	.loc 2 1589 0
+	movw	r2, #61634
+	strh	r2, [r3, #3868]	@ movhi
+	.loc 2 1590 0
+	ldrh	r2, [r3, #3904]
+	strh	r2, [r3, #3872]	@ movhi
+	.loc 2 1591 0
+	ldrh	r2, [r3, #112]
+	strh	r2, [r3, #3870]	@ movhi
+	.loc 2 1592 0
+	ldr	r2, [r3, #3828]
+	str	r2, [r3, #3876]
+	.loc 2 1593 0
+	ldr	r2, [r3, #3852]
+	str	r2, [r3, #3880]
+	.loc 2 1594 0
+	ldr	r2, [r3, #3832]
+	str	r2, [r3, #3884]
+	.loc 2 1595 0
+	ldr	r2, [r3, #3848]
+	str	r2, [r3, #3888]
+	pop	{r3, r4, r5, r6, r7, pc}
+.L947:
+	.loc 2 1582 0 discriminator 3
+	uxth	r2, r2
+	ldr	r0, [r3, #2424]
+	mul	r4, r6, r2
+	add	ip, r0, r4
+	str	r7, [ip, #4]
+	.loc 2 1583 0 discriminator 3
+	strh	r1, [r0, r4]	@ movhi
+	.loc 2 1584 0 discriminator 3
+	ldr	r0, [r3, #2424]
+	add	r0, r0, r4
+	ldrh	r4, [r3, #86]
+	muls	r2, r4, r2
+	ldr	r4, [r3, #3856]
+	bic	r2, r2, #3
+	add	r2, r2, r4
+	str	r2, [r0, #8]
+	mov	r2, r5
+	b	.L946
+.L949:
+	.align	2
+.L948:
+	.word	.LANCHOR0
+.LFE227:
+	.fnend
+	.size	FtlL2PDataInit, .-FtlL2PDataInit
+	.align	1
+	.global	FtlLoadMapInfo
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlLoadMapInfo, %function
+FtlLoadMapInfo:
+	.fnstart
+.LFB228:
+	.loc 2 1599 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r3, lr}
+	.save {r3, lr}
+.LCFI118:
+	.loc 2 1600 0
+	bl	FtlL2PDataInit
+.LVL742:
+	.loc 2 1602 0
+	ldr	r0, .L951
+	bl	FtlMapTblRecovery
+.LVL743:
+	.loc 2 1605 0
+	movs	r0, #0
+	pop	{r3, pc}
+.L952:
+	.align	2
+.L951:
+	.word	.LANCHOR0+3864
+.LFE228:
+	.fnend
+	.size	FtlLoadMapInfo, .-FtlLoadMapInfo
+	.align	1
+	.global	FtlVariablesInit
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlVariablesInit, %function
+FtlVariablesInit:
+	.fnstart
+.LFB157:
+	.loc 3 493 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r3, r4, r5, lr}
+	.save {r3, r4, r5, lr}
+.LCFI119:
+	.loc 3 496 0
+	movs	r5, #0
+	ldr	r4, .L954
+	.loc 3 497 0
+	movw	r3, #65535
+	.loc 3 502 0
+	mov	r1, r5
+	ldrh	r2, [r4, #96]
+	.loc 3 497 0
+	strh	r3, [r4, #3952]	@ movhi
+	.loc 3 500 0
+	mov	r3, #-1
+	.loc 3 502 0
+	ldr	r0, [r4, #124]
+	.loc 3 500 0
+	str	r3, [r4, #3964]
+	.loc 3 502 0
+	lsls	r2, r2, #1
+	.loc 3 496 0
+	str	r5, [r4, #3948]
+	.loc 3 498 0
+	str	r5, [r4, #3956]
+	.loc 3 499 0
+	str	r5, [r4, #3960]
+	.loc 3 501 0
+	strh	r5, [r4, #120]	@ movhi
+	.loc 3 502 0
+	bl	ftl_memset
+.LVL744:
+	.loc 3 503 0
+	ldrh	r2, [r4, #18]
+	mov	r1, r5
+	ldr	r0, [r4, #2248]
+	lsls	r2, r2, #1
+	bl	ftl_memset
+.LVL745:
+	.loc 3 504 0
+	ldrh	r2, [r4, #18]
+	mov	r1, r5
+	ldr	r0, [r4, #3816]
+	lsls	r2, r2, #1
+	bl	ftl_memset
+.LVL746:
+.LBB408:
+.LBB409:
+.LBB410:
+	.loc 1 202 0
+	addw	r0, r4, #2504
+	movs	r1, #48
+	bl	__memzero
+.LVL747:
+.LBE410:
+.LBE409:
+.LBE408:
+.LBB411:
+.LBB412:
+.LBB413:
+	addw	r0, r4, #2616
+	mov	r1, #512
+	bl	__memzero
+.LVL748:
+.LBE413:
+.LBE412:
+.LBE411:
+	.loc 3 507 0
+	bl	FtlGcBufInit
+.LVL749:
+	.loc 3 508 0
+	bl	FtlL2PDataInit
+.LVL750:
+	.loc 3 510 0
+	mov	r0, r5
+	pop	{r3, r4, r5, pc}
+.L955:
+	.align	2
+.L954:
+	.word	.LANCHOR0
+.LFE157:
+	.fnend
+	.size	FtlVariablesInit, .-FtlVariablesInit
+	.align	1
+	.global	SupperBlkListInit
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	SupperBlkListInit, %function
+SupperBlkListInit:
+	.fnstart
+.LFB235:
+	.loc 2 2067 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.pad #12
+.LCFI120:
+	.loc 2 2072 0
+	movs	r6, #0
+	.loc 2 2071 0
+	ldr	r4, .L967
+	movs	r2, #6
+	.loc 2 2077 0
+	mov	r9, r6
+.LVL751:
+	mov	r7, r6
+.LVL752:
+	.loc 2 2071 0
+	movs	r1, #0
+	ldrh	r3, [r4, #18]
+	.loc 2 2082 0
+	add	fp, r4, #36
+	.loc 2 2071 0
+	ldr	r0, [r4, #2252]
+	muls	r2, r3, r2
+	bl	ftl_memset
+.LVL753:
+	.loc 2 2072 0
+	str	r6, [r4, #2272]
+	.loc 2 2073 0
+	str	r6, [r4, #2256]
+	.loc 2 2074 0
+	str	r6, [r4, #2264]
+	.loc 2 2075 0
+	strh	r6, [r4, #2268]	@ movhi
+	.loc 2 2076 0
+	strh	r6, [r4, #2276]	@ movhi
+.LVL754:
+.L957:
+	.loc 2 2079 0 discriminator 1
+	ldrh	r3, [r4, #16]
+	uxth	r8, r6
+	cmp	r8, r3
+	bcs	.L963
+	.loc 2 2084 0
+	mov	r10, #0
+	.loc 2 2081 0
+	ldrh	r2, [r4, #8]
+	.loc 2 2084 0
+	ldrh	r3, [r4, #78]
+	mov	r5, r10
+	b	.L964
+.L959:
+	.loc 2 2082 0
+	mov	r1, r8
+	ldrb	r0, [fp, r10]	@ zero_extendqisi2
+	stm	sp, {r2, r3}
+	bl	V2P_block
+.LVL755:
+	.loc 2 2083 0
+	bl	FtlBbmIsBadBlock
+.LVL756:
+	ldm	sp, {r2, r3}
+	cbnz	r0, .L958
+	.loc 2 2084 0
+	add	r5, r5, r3
+	uxth	r5, r5
+.L958:
+	add	r10, r10, #1
+.L964:
+	.loc 2 2081 0 discriminator 1
+	uxth	r1, r10
+	cmp	r2, r1
+	bhi	.L959
+	.loc 2 2086 0
+	cbz	r5, .L966
+	.loc 2 2087 0
+	mov	r1, r5
+	mov	r0, #32768
+	bl	__aeabi_idiv
+.LVL757:
+.L960:
+	.loc 2 2088 0
+	ldr	r2, [r4, #2252]
+	uxth	r1, r6
+	movs	r3, #6
+	mla	r3, r3, r1, r2
+	strh	r0, [r3, #4]	@ movhi
+	.loc 2 2090 0
+	ldrh	r3, [r4, #2280]
+	cmp	r3, r8
+	beq	.L961
+	.loc 2 2090 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #2328]
+	cmp	r3, r8
+	beq	.L961
+	.loc 2 2091 0 is_stmt 1
+	ldrh	r3, [r4, #2376]
+	cmp	r3, r8
+	beq	.L961
+	.loc 2 2094 0
+	ldr	r3, [r4, #2260]
+	ldrh	r3, [r3, r1, lsl #1]
+	cbnz	r3, .L962
+	.loc 2 2095 0
+	add	r9, r9, #1
+.LVL758:
+	.loc 2 2096 0
+	mov	r0, r8
+	.loc 2 2095 0
+	uxth	r9, r9
+.LVL759:
+	.loc 2 2096 0
+	bl	INSERT_FREE_LIST
+.LVL760:
+.L961:
+	adds	r6, r6, #1
+	b	.L957
+.L966:
+	mov	r0, r5
+	b	.L960
+.L962:
+	.loc 2 2098 0
+	adds	r7, r7, #1
+.LVL761:
+	.loc 2 2099 0
+	mov	r0, r8
+	.loc 2 2098 0
+	uxth	r7, r7
+.LVL762:
+	.loc 2 2099 0
+	bl	INSERT_DATA_LIST
+.LVL763:
+	b	.L961
+.L963:
+	.loc 2 2103 0
+	strh	r7, [r4, #2268]	@ movhi
+	.loc 2 2105 0
+	add	r7, r7, r9
+.LVL764:
+	cmp	r7, r3
+	.loc 2 2104 0
+	strh	r9, [r4, #2276]	@ movhi
+	.loc 2 2105 0
+	ble	.L965
+	.loc 2 2105 0 is_stmt 0 discriminator 1
+	movw	r2, #2105
+	ldr	r1, .L967+4
+	ldr	r0, .L967+8
+	bl	printk
+.LVL765:
+.L965:
+	.loc 2 2107 0 is_stmt 1
+	movs	r0, #0
+	add	sp, sp, #12
+.LCFI121:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL766:
+.L968:
+	.align	2
+.L967:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+342
+	.word	.LC1
+.LFE235:
+	.fnend
+	.size	SupperBlkListInit, .-SupperBlkListInit
+	.align	1
+	.global	FtlGcPageVarInit
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlGcPageVarInit, %function
+FtlGcPageVarInit:
+	.fnstart
+.LFB259:
+	.loc 5 202 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, lr}
+	.save {r4, lr}
+.LCFI122:
+	.loc 5 203 0
+	movs	r3, #0
+	ldr	r4, .L970
+	.loc 5 205 0
+	movs	r1, #255
+	ldrh	r2, [r4, #82]
+	ldr	r0, [r4, #3168]
+	.loc 5 203 0
+	strh	r3, [r4, #3172]	@ movhi
+	.loc 5 204 0
+	strh	r3, [r4, #3180]	@ movhi
+	.loc 5 205 0
+	lsls	r2, r2, #1
+	bl	ftl_memset
+.LVL767:
+	.loc 5 206 0
+	ldrh	r3, [r4, #82]
+	movs	r2, #12
+	ldr	r0, [r4, #3176]
+	movs	r1, #255
+	muls	r2, r3, r2
+	bl	ftl_memset
+.LVL768:
+	.loc 5 208 0
+	pop	{r4, lr}
+.LCFI123:
+	.loc 5 207 0
+	b	FtlGcBufInit
+.LVL769:
+.L971:
+	.align	2
+.L970:
+	.word	.LANCHOR0
+.LFE259:
+	.fnend
+	.size	FtlGcPageVarInit, .-FtlGcPageVarInit
+	.align	1
+	.global	FtlGcScanTempBlk
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlGcScanTempBlk, %function
+FtlGcScanTempBlk:
+	.fnstart
+.LFB260:
+	.loc 5 211 0
+	@ args = 0, pretend = 0, frame = 24
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL770:
+	.loc 5 220 0
+	ldr	r3, .L997
+	.loc 5 211 0
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI124:
+	.pad #28
+	sub	sp, sp, #28
+.LCFI125:
+	.loc 5 211 0
+	mov	r7, r0
+	str	r1, [sp, #8]
+	.loc 5 220 0
+	ldrh	r4, [r3, #4]
+.LVL771:
+	.loc 5 221 0
+	movw	r3, #65535
+	cmp	r4, r3
+	beq	.L991
+	.loc 5 223 0
+	cbnz	r4, .L973
+.LVL772:
+.L974:
+	.loc 5 224 0
+	bl	FtlGcPageVarInit
+.LVL773:
+	b	.L975
+.LVL774:
+.L991:
+	.loc 5 222 0
+	movs	r4, #0
+.L973:
+	.loc 5 223 0 discriminator 1
+	ldr	r3, .L997+4
+	ldr	r2, [sp, #8]
+.LVL775:
+	ldrh	r3, [r3, #78]
+	cmp	r3, r2
+	beq	.L974
+.L975:
+	.loc 5 222 0
+	mov	fp, #0
+.LVL776:
+	.loc 5 228 0
+	movw	r8, #65535
+.LVL777:
+.L985:
+	ldrh	r3, [r7]
+	.loc 5 226 0
+	movs	r0, #0
+	strb	r0, [r7, #8]
+	.loc 5 228 0
+	cmp	r3, r8
+	beq	.L976
+	.loc 5 231 0
+	ldr	r5, .L997+4
+.L988:
+	.loc 5 234 0
+	ldr	r3, [r5, #3792]
+	.loc 5 231 0
+	movs	r2, #0
+.LVL778:
+	ldrh	ip, [r5, #8]
+	add	lr, r7, #16
+	.loc 5 236 0
+	ldr	r10, [r5, #3156]
+	.loc 5 230 0
+	mov	r6, r2
+	.loc 5 234 0
+	str	r3, [sp, #4]
+	mov	r9, #20
+	.loc 5 235 0
+	ldr	r3, [r5, #3152]
+	str	r3, [sp, #12]
+	ldrh	r3, [r5, #86]
+	str	r3, [sp, #16]
+	.loc 5 236 0
+	ldrh	r3, [r5, #88]
+	str	r3, [sp, #20]
+.LVL779:
+.L977:
+	.loc 5 231 0 discriminator 1
+	uxth	r3, r2
+.LVL780:
+	cmp	ip, r3
+	bhi	.L981
+	.loc 5 241 0
+	mov	r9, #0
+	.loc 5 240 0
+	movs	r2, #0
+	mov	r1, r6
+	ldr	r0, [sp, #4]
+	bl	FlashReadPages
+.LVL781:
+.L982:
+	.loc 5 241 0 discriminator 1
+	uxth	r3, r9
+	cmp	r6, r3
+	bhi	.L986
+	.loc 5 268 0
+	ldr	r3, [sp, #8]
+.LVL782:
+	.loc 5 266 0
+	add	fp, fp, #1
+	.loc 5 264 0
+	adds	r4, r4, #1
+.LVL783:
+	uxth	r4, r4
+.LVL784:
+	.loc 5 268 0
+	cmp	r3, fp
+	bls	.L987
+.L989:
+	.loc 5 274 0
+	ldrh	r3, [r5, #78]
+.LVL785:
+	cmp	r3, r4
+	bhi	.L988
+	.loc 5 265 0
+	movs	r0, #0
+.LVL786:
+	b	.L976
+.LVL787:
+.L981:
+	.loc 5 232 0
+	ldrh	r3, [lr], #2
+.LVL788:
+	.loc 5 233 0
+	cmp	r3, r8
+	beq	.L978
+	.loc 5 234 0
+	ldr	r1, [sp, #4]
+	orr	r3, r4, r3, lsl #10
+.LVL789:
+	mla	r1, r9, r6, r1
+	str	r3, [r1, #4]
+	.loc 5 235 0
+	ldr	r3, [sp, #16]
+	muls	r3, r6, r3
+	it	mi
+	addmi	r3, r3, #3
+	bic	r3, r3, #3
+	mov	r0, r3
+	ldr	r3, [sp, #12]
+	add	r0, r0, r3
+	.loc 5 236 0
+	ldr	r3, [sp, #20]
+	muls	r3, r6, r3
+	.loc 5 237 0
+	add	r6, r6, #1
+.LVL790:
+	.loc 5 236 0
+	it	mi
+	addmi	r3, r3, #3
+	.loc 5 237 0
+	uxth	r6, r6
+.LVL791:
+	.loc 5 236 0
+	bic	r3, r3, #3
+	.loc 5 235 0
+	str	r0, [r1, #8]
+	.loc 5 236 0
+	add	r3, r3, r10
+	str	r3, [r1, #12]
+.LVL792:
+.L978:
+	adds	r2, r2, #1
+	b	.L977
+.LVL793:
+.L986:
+	.loc 5 242 0
+	movs	r3, #20
+	ldr	r2, [r5, #3792]
+	mul	r10, r3, r9
+	str	r2, [sp, #16]
+	add	r3, r2, r10
+	ldr	r1, [r3, #4]
+.LVL794:
+	str	r3, [sp, #12]
+	.loc 5 243 0
+	ubfx	r0, r1, #10, #16
+	str	r1, [sp, #4]
+	bl	P2V_plane
+.LVL795:
+	.loc 5 245 0
+	ldr	r2, [sp, #16]
+	ldr	r2, [r2, r10]
+	cbnz	r2, .L983
+	.loc 5 247 0
+	ldr	r3, [sp, #12]
+	add	r9, r9, #1
+	.loc 5 248 0
+	ldr	r1, [sp, #4]
+.LVL796:
+	.loc 5 247 0
+	ldr	r3, [r3, #12]
+.LVL797:
+	.loc 5 248 0
+	ldrh	r2, [r3]
+	cmp	r2, r8
+	bne	.L984
+	.loc 5 249 0
+	movs	r3, #1
+.LVL798:
+	str	r3, [r5, #3960]
+.LVL799:
+.L976:
+	.loc 5 281 0
+	ldr	r3, .L997
+	movw	r2, #65535
+.LVL800:
+	.loc 5 283 0
+	strb	r0, [r7, #6]
+	.loc 5 284 0
+	mov	r1, r4
+.LVL801:
+	.loc 5 282 0
+	strh	r4, [r7, #2]	@ movhi
+	.loc 5 281 0
+	strh	r2, [r3, #4]	@ movhi
+	.loc 5 284 0
+	mov	r2, r0
+	mov	r0, r7
+.LVL802:
+	bl	ftl_sb_update_avl_pages
+.LVL803:
+	.loc 5 285 0
+	b	.L990
+.LVL804:
+.L984:
+	.loc 5 252 0
+	ldr	r2, [r3, #8]
+	ldr	r0, [r3, #12]
+	bl	FtlGcUpdatePage
+.LVL805:
+	b	.L982
+.L983:
+	.loc 5 256 0
+	ldrh	r2, [r7]
+	movs	r4, #0
+.LVL806:
+	ldr	r3, [r5, #2260]
+	strh	r4, [r3, r2, lsl #1]	@ movhi
+	.loc 5 257 0
+	ldrh	r0, [r7]
+	bl	INSERT_FREE_LIST
+.LVL807:
+	.loc 5 258 0
+	strh	r8, [r7]	@ movhi
+	.loc 5 260 0
+	bl	FtlGcPageVarInit
+.LVL808:
+	.loc 5 261 0
+	b	.L985
+.LVL809:
+.L987:
+	.loc 5 268 0 discriminator 1
+	ldr	r2, .L997
+	ldrh	r3, [r2, #4]
+.LVL810:
+	cmp	r3, r8
+	beq	.L989
+	.loc 5 269 0
+	add	r3, r3, fp
+	strh	r3, [r2, #4]	@ movhi
+	.loc 5 270 0
+	ldrh	r3, [r5, #78]
+	cmp	r3, r4
+	bls	.L989
+.L990:
+	.loc 5 286 0
+	mov	r0, #-1
+	add	sp, sp, #28
+.LCFI126:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL811:
+.L998:
+	.align	2
+.L997:
+	.word	.LANCHOR2
+	.word	.LANCHOR0
+.LFE260:
+	.fnend
+	.size	FtlGcScanTempBlk, .-FtlGcScanTempBlk
+	.align	1
+	.global	ftl_memcpy
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	ftl_memcpy, %function
+ftl_memcpy:
+	.fnstart
+.LFB278:
+	.loc 1 206 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+.LVL812:
+	.loc 1 207 0
+	b	memcpy
+.LVL813:
+.LFE278:
+	.fnend
+	.size	ftl_memcpy, .-ftl_memcpy
+	.align	1
+	.global	FtlBbmTblFlush
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlBbmTblFlush, %function
+FtlBbmTblFlush:
+	.fnstart
+.LFB176:
+	.loc 4 80 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.pad #12
+.LCFI127:
+	.loc 4 91 0
+	movs	r5, #0
+.LVL814:
+	.loc 4 87 0
+	ldr	r4, .L1009
+	.loc 4 89 0
+	movs	r1, #0
+	.loc 4 87 0
+	ldr	r0, [r4, #2244]
+	add	r6, r4, #152
+	.loc 4 88 0
+	ldr	r3, [r4, #3244]
+	.loc 4 89 0
+	ldrh	r2, [r4, #86]
+	.loc 4 87 0
+	str	r0, [r4, #3232]
+	.loc 4 88 0
+	str	r3, [r4, #3236]
+	.loc 4 89 0
+	bl	ftl_memset
+.LVL815:
+.L1001:
+	.loc 4 91 0 discriminator 1
+	ldrh	r3, [r4, #30]
+	cmp	r5, r3
+	blt	.L1002
+	.loc 4 94 0
+	ldr	r6, [r4, #3236]
+.LVL816:
+.LBB419:
+.LBB420:
+.LBB421:
+	.loc 1 202 0
+	movs	r2, #16
+	movs	r1, #255
+.LBE421:
+.LBE420:
+.LBE419:
+	.loc 4 108 0
+	ldr	r9, .L1009+12
+	.loc 4 109 0
+	ldr	r8, .L1009+4
+	.loc 4 84 0
+	movs	r5, #0
+.LVL817:
+.LBB426:
+.LBB424:
+.LBB422:
+	.loc 1 202 0
+	mov	r0, r6
+.LBE422:
+.LBE424:
+.LBE426:
+	.loc 4 129 0
+	ldr	r10, .L1009+16
+.LBB427:
+.LBB425:
+.LBB423:
+	.loc 1 202 0
+	bl	memset
+.LVL818:
+.LBE423:
+.LBE425:
+.LBE427:
+	.loc 4 97 0
+	movw	r3, #61649
+	.loc 4 82 0
+	mov	r7, r5
+.LVL819:
+	.loc 4 97 0
+	strh	r3, [r6]	@ movhi
+	.loc 4 98 0
+	ldr	r3, [r4, #136]
+	str	r3, [r6, #4]
+	.loc 4 99 0
+	ldrh	r3, [r4, #128]
+	strh	r3, [r6, #2]	@ movhi
+	.loc 4 100 0
+	ldrh	r3, [r4, #132]
+	strh	r3, [r6, #8]	@ movhi
+	.loc 4 101 0
+	ldrh	r3, [r4, #134]
+	strh	r3, [r6, #10]	@ movhi
+	.loc 4 102 0
+	ldr	r3, [r4, #4]
+	strh	r3, [r6, #12]	@ movhi
+.L1003:
+	.loc 4 104 0
+	ldr	r3, [r4, #2244]
+	.loc 4 106 0
+	mov	fp, #0
+	.loc 4 107 0
+	ldrh	r1, [r4, #128]
+	ldrh	r2, [r4, #130]
+	.loc 4 104 0
+	str	r3, [r4, #3232]
+	.loc 4 105 0
+	ldr	r3, [r4, #3244]
+	.loc 4 106 0
+	str	fp, [r4, #3224]
+	.loc 4 105 0
+	str	r3, [r4, #3236]
+	.loc 4 107 0
+	orr	r3, r2, r1, lsl #10
+	.loc 4 108 0
+	ldrh	r0, [r6, #10]
+	.loc 4 107 0
+	str	r3, [r4, #3228]
+	.loc 4 108 0
+	ldrh	r3, [r4, #132]
+	str	r0, [sp]
+	mov	r0, r9
+	bl	printk
+.LVL820:
+	.loc 4 109 0
+	movs	r3, #1
+	ldr	r0, .L1009+4
+	mov	r2, r3
+	mov	r1, r3
+	bl	FlashProgPages
+.LVL821:
+	.loc 4 110 0
+	ldrh	r3, [r4, #80]
+	ldrh	r2, [r4, #130]
+	subs	r3, r3, #1
+	cmp	r2, r3
+	blt	.L1004
+	.loc 4 113 0
+	ldr	r3, [r4, #136]
+	.loc 4 115 0
+	ldrh	r2, [r4, #128]
+	.loc 4 121 0
+	ldr	r0, [r4, #3760]
+	.loc 4 113 0
+	adds	r3, r3, #1
+	.loc 4 117 0
+	strh	fp, [r4, #130]	@ movhi
+	.loc 4 113 0
+	str	r3, [r4, #136]
+	.loc 4 114 0
+	str	r3, [r6, #4]
+	.loc 4 116 0
+	ldrh	r3, [r4, #132]
+	.loc 4 115 0
+	strh	r2, [r6, #8]	@ movhi
+	.loc 4 118 0
+	strh	r2, [r4, #132]	@ movhi
+	.loc 4 122 0
+	movs	r2, #1
+	.loc 4 116 0
+	strh	r3, [r4, #128]	@ movhi
+	.loc 4 122 0
+	mov	r1, r2
+	.loc 4 119 0
+	lsls	r3, r3, #10
+	str	r3, [r4, #3228]
+	.loc 4 121 0
+	str	r3, [r0, #4]
+	.loc 4 122 0
+	bl	FlashEraseBlocks
+.LVL822:
+	.loc 4 123 0
+	movs	r3, #1
+	mov	r0, r8
+	mov	r2, r3
+	mov	r1, r3
+	bl	FlashProgPages
+.LVL823:
+.L1004:
+	.loc 4 126 0
+	ldrh	r3, [r4, #130]
+	adds	r3, r3, #1
+	strh	r3, [r4, #130]	@ movhi
+	.loc 4 127 0
+	ldr	r3, [r4, #3224]
+	adds	r3, r3, #1
+	bne	.L1005
+	.loc 4 130 0
+	adds	r5, r5, #1
+.LVL824:
+	.loc 4 129 0
+	ldr	r1, [r4, #3228]
+	.loc 4 130 0
+	uxth	r5, r5
+.LVL825:
+	.loc 4 129 0
+	mov	r0, r10
+	bl	printk
+.LVL826:
+	.loc 4 131 0
+	cmp	r5, #3
+	bls	.L1003
+	.loc 4 132 0
+	mov	r2, r5
+	ldr	r1, [r4, #3228]
+	ldr	r0, .L1009+8
+	bl	printk
+.LVL827:
+.L1007:
+	b	.L1007
+.LVL828:
+.L1002:
+	.loc 4 92 0 discriminator 3
+	ldrh	r2, [r4, #3860]
+	ldr	r3, [r4, #3232]
+	ldr	r1, [r6, #4]!
+	mul	r0, r2, r5
+	lsls	r2, r2, #2
+	.loc 4 91 0 discriminator 3
+	adds	r5, r5, #1
+	.loc 4 92 0 discriminator 3
+	add	r0, r3, r0, lsl #2
+	bl	ftl_memcpy
+.LVL829:
+	b	.L1001
+.LVL830:
+.L1008:
+	movs	r7, #1
+	b	.L1003
+.L1005:
+	.loc 4 139 0
+	cmp	r7, #0
+	beq	.L1008
+	.loc 4 146 0
+	movs	r0, #0
+	add	sp, sp, #12
+.LCFI128:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL831:
+.L1010:
+	.align	2
+.L1009:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+3224
+	.word	.LC92
+	.word	.LC90
+	.word	.LC91
+.LFE176:
+	.fnend
+	.size	FtlBbmTblFlush, .-FtlBbmTblFlush
+	.align	1
+	.global	allocate_data_superblock
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	allocate_data_superblock, %function
+allocate_data_superblock:
+	.fnstart
+.LFB248:
+	.loc 2 2531 0
+	@ args = 0, pretend = 0, frame = 16
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL832:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI129:
+	mov	r5, r0
+	ldr	r4, .L1046
+	.pad #20
+	sub	sp, sp, #20
+.LCFI130:
+	.loc 2 2537 0
+	ldr	r9, .L1046+20
+.LVL833:
+.L1012:
+	ldr	r3, .L1046
+	ldr	r2, .L1046
+	ldrh	r3, [r3, #2276]
+	ldrh	r2, [r2, #2268]
+	add	r3, r3, r2
+	ldr	r2, .L1046
+	ldrh	r2, [r2, #16]
+	cmp	r3, r2
+	ble	.L1013
+	.loc 2 2537 0 is_stmt 0 discriminator 1
+	movw	r2, #2537
+	mov	r1, r9
+	ldr	r0, .L1046+4
+	bl	printk
+.LVL834:
+.L1013:
+	.loc 2 2539 0 is_stmt 1
+	ldr	r3, .L1046+8
+	cmp	r5, r3
+	bne	.L1038
+	.loc 2 2540 0
+	ldrh	r3, [r4, #2276]
+	ldr	r1, [r4, #3140]
+	mul	r2, r1, r3
+	lsrs	r1, r3, #1
+	adds	r1, r1, #1
+	add	r1, r1, r2, lsr #2
+	uxth	r1, r1
+.LVL835:
+	.loc 2 2544 0
+	cbz	r1, .L1014
+	.loc 2 2545 0
+	subs	r1, r1, #1
+.LVL836:
+	uxth	r1, r1
+.LVL837:
+.L1014:
+	.loc 2 2546 0
+	ldr	r0, .L1046+12
+	bl	List_pop_index_node
+.LVL838:
+	ldrh	r3, [r4, #2276]
+	mov	r6, r0
+	uxth	r8, r0
+	cbnz	r3, .L1015
+	.loc 2 2546 0 is_stmt 0 discriminator 1
+	movw	r2, #2546
+	mov	r1, r9
+	ldr	r0, .L1046+4
+	bl	printk
+.LVL839:
+.L1015:
+	.loc 2 2546 0 discriminator 3
+	ldrh	r3, [r4, #2276]
+	.loc 2 2550 0 is_stmt 1 discriminator 3
+	mov	r0, r5
+	.loc 2 2546 0 discriminator 3
+	subs	r3, r3, #1
+	strh	r3, [r4, #2276]	@ movhi
+	.loc 2 2549 0 discriminator 3
+	strh	r8, [r5]	@ movhi
+	.loc 2 2550 0 discriminator 3
+	bl	make_superblock
+.LVL840:
+	.loc 2 2551 0 discriminator 3
+	ldrb	r3, [r5, #7]	@ zero_extendqisi2
+	cbnz	r3, .L1016
+	.loc 2 2555 0
+	ldr	r3, [r4, #2260]
+	uxth	r6, r6
+	movw	r2, #65535
+	.loc 2 2556 0
+	mov	r0, r8
+	.loc 2 2555 0
+	strh	r2, [r3, r6, lsl #1]	@ movhi
+	.loc 2 2556 0
+	bl	INSERT_DATA_LIST
+.LVL841:
+	.loc 2 2557 0
+	ldrh	r2, [r4, #2268]
+	ldrh	r3, [r4, #2276]
+	add	r3, r3, r2
+	ldrh	r2, [r4, #16]
+	cmp	r3, r2
+	ble	.L1012
+	.loc 2 2557 0 is_stmt 0 discriminator 1
+	movw	r2, #2557
+	mov	r1, r9
+	ldr	r0, .L1046+4
+	bl	printk
+.LVL842:
+	b	.L1012
+.L1038:
+	movs	r1, #0
+.LVL843:
+	b	.L1014
+.LVL844:
+.L1016:
+	.loc 2 2560 0 is_stmt 1
+	ldrh	r2, [r4, #2268]
+	ldrh	r3, [r4, #2276]
+	add	r3, r3, r2
+	ldrh	r2, [r4, #16]
+	cmp	r3, r2
+	ble	.L1018
+	.loc 2 2560 0 is_stmt 0 discriminator 1
+	mov	r2, #2560
+	mov	r1, r9
+	ldr	r0, .L1046+4
+	bl	printk
+.LVL845:
+.L1018:
+	.loc 2 2564 0 is_stmt 1 discriminator 1
+	ldr	r1, [r4, #3760]
+	mov	r10, #20
+	ldrh	r2, [r4, #8]
+	add	fp, r5, #16
+	movs	r7, #0
+	mov	r0, fp
+	mov	r3, r1
+	mov	ip, r7
+	mla	r2, r10, r2, r1
+	str	r2, [sp, #4]
+.L1019:
+	.loc 2 2563 0 discriminator 1
+	ldr	r2, [sp, #4]
+	cmp	r2, r3
+	bne	.L1021
+	.loc 2 2571 0
+	cbnz	r7, .L1022
+	.loc 2 2571 0 is_stmt 0 discriminator 1
+	movw	r2, #2571
+	mov	r1, r9
+	ldr	r0, .L1046+4
+	bl	printk
+.LVL846:
+.L1022:
+	.loc 2 2573 0 is_stmt 1
+	ldrh	r3, [r4, #2568]
+	cmp	r3, r8
+	bne	.L1023
+	.loc 2 2573 0 is_stmt 0 discriminator 1
+	movw	r2, #2573
+	mov	r1, r9
+	ldr	r0, .L1046+4
+	bl	printk
+.LVL847:
+.L1023:
+	.loc 2 2574 0 is_stmt 1
+	ldrb	r3, [r5, #8]	@ zero_extendqisi2
+	uxth	r6, r6
+	.loc 2 2575 0
+	ldr	r2, [r4, #2248]
+	.loc 2 2574 0
+	cmp	r3, #0
+	bne	.L1024
+	.loc 2 2575 0
+	ldrh	r3, [r2, r6, lsl #1]
+	cmp	r3, #0
+	beq	.L1025
+	.loc 2 2576 0
+	ldrh	r1, [r4, #68]
+	add	r3, r3, r1
+.L1045:
+	.loc 2 2578 0
+	strh	r3, [r2, r6, lsl #1]	@ movhi
+	.loc 2 2580 0
+	movs	r1, #0
+	.loc 2 2579 0
+	ldr	r3, [r4, #2480]
+	.loc 2 2580 0
+	mov	r0, r8
+	.loc 2 2579 0
+	adds	r3, r3, #1
+	str	r3, [r4, #2480]
+	.loc 2 2580 0
+	bl	ftl_set_blk_mode
+.LVL848:
+.L1027:
+	.loc 2 2587 0
+	ldr	r3, [r4, #2248]
+	ldr	r2, [r4, #2496]
+	.loc 2 2590 0
+	ldrh	r0, [r4, #68]
+	.loc 2 2587 0
+	ldrh	r3, [r3, r6, lsl #1]
+	.loc 2 2590 0
+	ldrh	r1, [r4, #16]
+	.loc 2 2587 0
+	cmp	r3, r2
+	.loc 2 2590 0
+	ldr	r2, [r4, #2480]
+	.loc 2 2588 0
+	it	hi
+	strhi	r3, [r4, #2496]
+	.loc 2 2590 0
+	ldr	r3, [r4, #2484]
+	mla	r0, r2, r0, r3
+	bl	__aeabi_uidiv
+.LVL849:
+	.loc 2 2591 0
+	ldr	r2, [r4, #3820]
+	.loc 2 2594 0
+	ldr	r1, [r4, #3760]
+	.loc 2 2590 0
+	str	r0, [r4, #2488]
+	.loc 2 2591 0
+	ldr	r3, [r2, #16]
+	.loc 2 2594 0
+	ldr	r0, .L1046+16
+	.loc 2 2591 0
+	adds	r3, r3, #1
+	str	r3, [r2, #16]
+	movs	r2, #20
+	mla	r2, r2, r7, r1
+	adds	r3, r1, #4
+	adds	r2, r2, #24
+.L1029:
+	adds	r3, r3, #20
+	.loc 2 2593 0 discriminator 1
+	cmp	r2, r3
+	bne	.L1030
+	.loc 2 2595 0
+	ldrb	r1, [r5, #8]	@ zero_extendqisi2
+	mov	r2, r7
+	ldr	r0, [r4, #3760]
+	.loc 2 2597 0
+	mov	r10, #0
+	.loc 2 2595 0
+	bl	FlashEraseBlocks
+.LVL850:
+	.loc 2 2596 0
+	mov	r3, r10
+.LVL851:
+	.loc 2 2598 0
+	movs	r1, #20
+.L1031:
+	.loc 2 2597 0 discriminator 1
+	uxth	r2, r10
+	cmp	r7, r2
+	bhi	.L1033
+	.loc 2 2608 0
+	cmp	r3, #0
+	ble	.L1034
+	.loc 2 2609 0
+	mov	r0, r8
+	bl	update_multiplier_value
+.LVL852:
+	.loc 2 2610 0
+	bl	FtlBbmTblFlush
+.LVL853:
+.L1034:
+	.loc 2 2613 0
+	ldrb	r2, [r5, #7]	@ zero_extendqisi2
+	cmp	r2, #0
+	bne	.L1035
+	.loc 2 2615 0
+	ldr	r3, [r4, #2260]
+.LVL854:
+	movw	r2, #65535
+	.loc 2 2616 0
+	mov	r0, r8
+	.loc 2 2615 0
+	strh	r2, [r3, r6, lsl #1]	@ movhi
+	.loc 2 2616 0
+	bl	INSERT_DATA_LIST
+.LVL855:
+	.loc 2 2617 0
+	b	.L1012
+.L1021:
+	.loc 2 2564 0
+	str	ip, [r3, #8]
+	.loc 2 2566 0
+	movw	lr, #65535
+	.loc 2 2565 0
+	str	ip, [r3, #12]
+	.loc 2 2566 0
+	ldrh	r2, [r0], #2
+	cmp	r2, lr
+	beq	.L1020
+	.loc 2 2567 0
+	mla	lr, r10, r7, r1
+	.loc 2 2568 0
+	adds	r7, r7, #1
+.LVL856:
+	.loc 2 2567 0
+	lsls	r2, r2, #10
+	.loc 2 2568 0
+	uxth	r7, r7
+.LVL857:
+	.loc 2 2567 0
+	str	r2, [lr, #4]
+.L1020:
+	adds	r3, r3, #20
+	b	.L1019
+.L1025:
+	.loc 2 2578 0
+	movs	r3, #2
+	b	.L1045
+.L1024:
+	.loc 2 2582 0
+	ldrh	r3, [r2, r6, lsl #1]
+.LBB428:
+.LBB429:
+	mov	r0, r8
+.LBE429:
+.LBE428:
+	adds	r3, r3, #1
+	strh	r3, [r2, r6, lsl #1]	@ movhi
+	.loc 2 2583 0
+	ldr	r3, [r4, #2484]
+	adds	r3, r3, #1
+	str	r3, [r4, #2484]
+.LBB431:
+.LBB430:
+	bl	ftl_set_blk_mode.part.6
+.LVL858:
+	b	.L1027
+.L1030:
+.LBE430:
+.LBE431:
+	.loc 2 2594 0 discriminator 3
+	ldr	r1, [r3, #-20]
+	ands	r1, r1, r0
+	str	r1, [r3, #-20]
+	b	.L1029
+.LVL859:
+.L1033:
+	.loc 2 2598 0
+	mul	r2, r1, r10
+	ldr	r0, [r4, #3760]
+	add	ip, r0, r2
+	ldr	r2, [r0, r2]
+	adds	r0, r2, #1
+	bne	.L1032
+	.loc 2 2600 0
+	ldr	r0, [ip, #4]
+	.loc 2 2599 0
+	adds	r3, r3, #1
+	str	r1, [sp, #12]
+	str	r2, [sp, #8]
+	.loc 2 2601 0
+	ubfx	r0, r0, #10, #16
+	.loc 2 2599 0
+	str	r3, [sp, #4]
+	.loc 2 2601 0
+	bl	FtlBbmMapBadBlock
+.LVL860:
+	.loc 2 2602 0
+	ldr	r2, [sp, #8]
+	.loc 2 2603 0
+	ldr	r1, [sp, #12]
+	ldr	r3, [sp, #4]
+.LVL861:
+	.loc 2 2602 0
+	strh	r2, [fp]	@ movhi
+	.loc 2 2603 0
+	ldrb	r2, [r5, #7]	@ zero_extendqisi2
+	subs	r2, r2, #1
+	strb	r2, [r5, #7]
+.L1032:
+	add	r10, r10, #1
+	add	fp, fp, #2
+	b	.L1031
+.L1035:
+	.loc 2 2620 0
+	ldrh	r3, [r4, #78]
+.LVL862:
+	.loc 2 2621 0
+	strh	r8, [r5]	@ movhi
+	.loc 2 2620 0
+	smulbb	r3, r3, r2
+	.loc 2 2622 0
+	movs	r2, #0
+	strh	r2, [r5, #2]	@ movhi
+	.loc 2 2623 0
+	strb	r2, [r5, #6]
+	.loc 2 2624 0
+	ldr	r2, [r4, #2472]
+	.loc 2 2620 0
+	uxth	r3, r3
+	strh	r3, [r5, #4]	@ movhi
+	.loc 2 2624 0
+	str	r2, [r5, #12]
+	adds	r2, r2, #1
+	str	r2, [r4, #2472]
+	.loc 2 2625 0
+	ldr	r2, [r4, #2260]
+	ldrh	r1, [r5]
+	strh	r3, [r2, r1, lsl #1]	@ movhi
+	.loc 2 2626 0
+	ldrh	r3, [r5, #4]
+	cbz	r3, .L1036
+	.loc 2 2626 0 is_stmt 0 discriminator 2
+	ldrb	r3, [r5, #7]	@ zero_extendqisi2
+	cbnz	r3, .L1037
+.L1036:
+	.loc 2 2626 0 discriminator 3
+	movw	r2, #2626
+	ldr	r1, .L1046+20
+	ldr	r0, .L1046+4
+	bl	printk
+.LVL863:
+.L1037:
+	.loc 2 2628 0 is_stmt 1
+	movs	r0, #0
+	add	sp, sp, #20
+.LCFI131:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL864:
+.L1047:
+	.align	2
+.L1046:
+	.word	.LANCHOR0
+	.word	.LC1
+	.word	.LANCHOR0+2376
+	.word	.LANCHOR0+2272
+	.word	-1024
+	.word	.LANCHOR1+360
+.LFE248:
+	.fnend
+	.size	allocate_data_superblock, .-allocate_data_superblock
+	.align	1
+	.global	FtlGcFreeBadSuperBlk
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlGcFreeBadSuperBlk, %function
+FtlGcFreeBadSuperBlk:
+	.fnstart
+.LFB267:
+	.loc 5 390 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL865:
+	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI132:
+	.loc 5 390 0
+	mov	r8, r0
+	.loc 5 395 0
+	ldr	r4, .L1060
+	ldrh	r3, [r4, #3186]
+	cbz	r3, .L1049
+	movs	r7, #0
+	addw	r10, r4, #3188
+.LVL866:
+.L1050:
+.LBB434:
+.LBB435:
+	.loc 5 396 0
+	ldrh	r2, [r4, #8]
+	uxth	r3, r7
+	cmp	r2, r3
+	bhi	.L1056
+	.loc 5 412 0
+	bl	FtlGcReFreshBadBlk
+.LVL867:
+.L1049:
+.LBE435:
+.LBE434:
+	.loc 5 415 0
+	movs	r0, #0
+	pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL868:
+.L1056:
+.LBB437:
+.LBB436:
+	.loc 5 397 0
+	uxtah	r3, r4, r7
+	mov	r1, r8
+	mov	fp, #0
+	ldrb	r0, [r3, #36]	@ zero_extendqisi2
+	bl	V2P_block
+.LVL869:
+	mov	r9, r0
+.L1051:
+	.loc 5 398 0
+	ldrh	r3, [r4, #3186]
+	uxth	r5, fp
+	cmp	r3, r5
+	bhi	.L1055
+	adds	r7, r7, #1
+	b	.L1050
+.L1055:
+	.loc 5 399 0
+	uxth	r6, fp
+	add	r3, r4, r6, lsl #1
+	ldrh	r3, [r3, #3188]
+	cmp	r3, r9
+	bne	.L1052
+	.loc 5 401 0
+	mov	r1, r9
+	ldr	r0, .L1060+4
+	bl	printk
+.LVL870:
+	.loc 5 403 0
+	mov	r0, r9
+	bl	FtlBbmMapBadBlock
+.LVL871:
+	.loc 5 404 0
+	bl	FtlBbmTblFlush
+.LVL872:
+	.loc 5 405 0
+	ldrh	r1, [r4, #3186]
+	add	r3, r10, r6, lsl #1
+.L1053:
+	cmp	r5, r1
+	bcc	.L1054
+	.loc 5 407 0
+	subs	r1, r1, #1
+	strh	r1, [r4, #3186]	@ movhi
+.L1052:
+	add	fp, fp, #1
+	b	.L1051
+.L1054:
+	.loc 5 406 0
+	ldrh	r0, [r3, #2]!
+	.loc 5 405 0
+	adds	r5, r5, #1
+.LVL873:
+	uxth	r5, r5
+.LVL874:
+	.loc 5 406 0
+	strh	r0, [r3, #-2]	@ movhi
+	b	.L1053
+.L1061:
+	.align	2
+.L1060:
+	.word	.LANCHOR0
+	.word	.LC93
+.LBE436:
+.LBE437:
+.LFE267:
+	.fnend
+	.size	FtlGcFreeBadSuperBlk, .-FtlGcFreeBadSuperBlk
+	.align	1
+	.global	update_vpc_list
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	update_vpc_list, %function
+update_vpc_list:
+	.fnstart
+.LFB251:
+	.loc 2 2687 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL875:
+	.loc 2 2688 0
+	ldr	r2, .L1072
+	.loc 2 2687 0
+	push	{r3, r4, r5, lr}
+	.save {r3, r4, r5, lr}
+.LCFI133:
+	.loc 2 2687 0
+	mov	r5, r0
+	mov	r4, r2
+	.loc 2 2688 0
+	ldr	r3, [r2, #2260]
+	ldrh	r3, [r3, r0, lsl #1]
+	cmp	r3, #0
+	bne	.L1063
+	.loc 2 2689 0
+	ldrh	r1, [r2, #2568]
+	cmp	r1, r0
+	bne	.L1064
+	.loc 2 2691 0
+	movw	r3, #65535
+	strh	r3, [r2, #2568]	@ movhi
+.L1065:
+.LVL876:
+.LBB440:
+.LBB441:
+	.loc 2 2696 0
+	mov	r1, r5
+	ldr	r0, .L1072+4
+	bl	List_remove_node
+.LVL877:
+	ldrh	r3, [r4, #2268]
+	cbnz	r3, .L1067
+	movw	r2, #2696
+	ldr	r1, .L1072+8
+	ldr	r0, .L1072+12
+	bl	printk
+.LVL878:
+.L1067:
+	ldrh	r3, [r4, #2268]
+	.loc 2 2697 0
+	mov	r0, r5
+	.loc 2 2696 0
+	subs	r3, r3, #1
+	strh	r3, [r4, #2268]	@ movhi
+	.loc 2 2697 0
+	bl	free_data_superblock
+.LVL879:
+	.loc 2 2698 0
+	mov	r0, r5
+	bl	FtlGcFreeBadSuperBlk
+.LVL880:
+	.loc 2 2699 0
+	ldrh	r2, [r4, #2268]
+	ldrh	r3, [r4, #2276]
+	add	r3, r3, r2
+	ldrh	r2, [r4, #16]
+	cmp	r3, r2
+	ble	.L1071
+	movw	r2, #2699
+	ldr	r1, .L1072+8
+	ldr	r0, .L1072+12
+	bl	printk
+.LVL881:
+.L1071:
+	movs	r3, #1
+	b	.L1062
+.LVL882:
+.L1064:
+.LBE441:
+.LBE440:
+	.loc 2 2692 0
+	ldrh	r1, [r2, #2280]
+	cmp	r1, r0
+	beq	.L1062
+	.loc 2 2692 0 is_stmt 0 discriminator 1
+	ldrh	r1, [r2, #2328]
+	cmp	r1, r0
+	beq	.L1062
+	.loc 2 2692 0 discriminator 2
+	ldrh	r2, [r2, #2376]
+	cmp	r2, r0
+	bne	.L1065
+.L1062:
+	.loc 2 2705 0 is_stmt 1
+	mov	r0, r3
+	pop	{r3, r4, r5, pc}
+.LVL883:
+.L1063:
+	.loc 2 2702 0
+	bl	List_update_data_list
+.LVL884:
+	.loc 2 2704 0
+	movs	r3, #0
+	b	.L1062
+.L1073:
+	.align	2
+.L1072:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+2256
+	.word	.LANCHOR1+385
+	.word	.LC1
+.LFE251:
+	.fnend
+	.size	update_vpc_list, .-update_vpc_list
+	.align	1
+	.global	decrement_vpc_count
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	decrement_vpc_count, %function
+decrement_vpc_count:
+	.fnstart
+.LFB252:
+	.loc 2 2708 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL885:
+	.loc 2 2711 0
+	movw	r3, #65535
+	.loc 2 2708 0
+	push	{r4, r5, r6, lr}
+	.save {r4, r5, r6, lr}
+.LCFI134:
+	.loc 2 2711 0
+	cmp	r0, r3
+	.loc 2 2708 0
+	mov	r4, r0
+	ldr	r5, .L1083
+	.loc 2 2711 0
+	beq	.L1075
+	.loc 2 2712 0
+	ldr	r3, [r5, #2260]
+	ldrh	r2, [r3, r0, lsl #1]
+	cbnz	r2, .L1076
+	.loc 2 2713 0
+	mov	r1, r0
+	ldr	r0, .L1083+4
+	bl	printk
+.LVL886:
+	.loc 2 2714 0
+	ldr	r3, [r5, #2260]
+	ldrh	r6, [r3, r4, lsl #1]
+	cbz	r6, .L1077
+.L1081:
+	.loc 2 2723 0
+	movs	r6, #0
+.L1074:
+	.loc 2 2733 0
+	mov	r0, r6
+	pop	{r4, r5, r6, pc}
+.LVL887:
+.L1077:
+	.loc 2 2714 0 discriminator 1
+	movw	r2, #2714
+.L1082:
+	.loc 2 2730 0 discriminator 2
+	ldr	r1, .L1083+8
+	ldr	r0, .L1083+12
+	bl	printk
+.LVL888:
+	b	.L1074
+.LVL889:
+.L1076:
+	.loc 2 2717 0
+	subs	r2, r2, #1
+	strh	r2, [r3, r0, lsl #1]	@ movhi
+.L1075:
+	.loc 2 2721 0
+	ldrh	r0, [r5, #3952]
+	movw	r3, #65535
+	cmp	r0, r3
+	bne	.L1079
+	.loc 2 2722 0
+	strh	r4, [r5, #3952]	@ movhi
+	b	.L1081
+.L1079:
+	.loc 2 2724 0
+	cmp	r4, r0
+	beq	.L1081
+	.loc 2 2727 0
+	bl	update_vpc_list
+.LVL890:
+	.loc 2 2730 0
+	ldr	r2, [r5, #2252]
+	.loc 2 2727 0
+	adds	r6, r0, #0
+	.loc 2 2730 0
+	ldr	r3, [r5, #2256]
+	.loc 2 2727 0
+	it	ne
+	movne	r6, #1
+	.loc 2 2729 0
+	strh	r4, [r5, #3952]	@ movhi
+	.loc 2 2730 0
+	subs	r3, r3, r2
+	asrs	r2, r3, #1
+	ldr	r3, .L1083+16
+	muls	r3, r2, r3
+	ldr	r2, [r5, #2260]
+	uxth	r1, r3
+	ldrh	r2, [r2, r1, lsl #1]
+	cmp	r2, #0
+	bne	.L1074
+	.loc 2 2730 0 is_stmt 0 discriminator 1
+	cmp	r4, r1
+	beq	.L1074
+	.loc 2 2730 0 discriminator 2
+	movw	r2, #2730
+	b	.L1082
+.L1084:
+	.align	2
+.L1083:
+	.word	.LANCHOR0
+	.word	.LC94
+	.word	.LANCHOR1+401
+	.word	.LC1
+	.word	-1431655765
+.LFE252:
+	.fnend
+	.size	decrement_vpc_count, .-decrement_vpc_count
+	.align	1
+	.global	FtlWriteDump_data
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlWriteDump_data, %function
+FtlWriteDump_data:
+	.fnstart
+.LFB218:
+	.loc 2 947 0 is_stmt 1
+	@ args = 0, pretend = 0, frame = 24
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, r5, r6, r7, r8, r9, r10, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, lr}
+.LCFI135:
+	.pad #24
+	sub	sp, sp, #24
+.LCFI136:
+	.loc 2 948 0
+	ldr	r4, .L1103
+	ldrh	r2, [r4, #2284]
+	cmp	r2, #0
+	beq	.L1086
+	.loc 2 948 0 is_stmt 0 discriminator 1
+	ldrb	r3, [r4, #2288]	@ zero_extendqisi2
+	cmp	r3, #0
+	bne	.L1086
+	.loc 2 949 0 is_stmt 1
+	ldrb	r1, [r4, #2287]	@ zero_extendqisi2
+	ldrh	r3, [r4, #78]
+	muls	r3, r1, r3
+	cmp	r2, r3
+	beq	.L1086
+.LBB445:
+.LBB446:
+	.loc 2 956 0
+	ldrb	r7, [r4, #2290]	@ zero_extendqisi2
+	cbnz	r7, .L1085
+	.loc 2 951 0
+	ldr	r6, [r4, #2436]
+	.loc 2 958 0
+	mov	r2, r7
+	mov	r1, sp
+	.loc 2 953 0
+	ldrh	r8, [r4, #8]
+	.loc 2 951 0
+	subs	r6, r6, #1
+.LVL891:
+	.loc 2 958 0
+	mov	r0, r6
+	bl	log2phys
+.LVL892:
+	.loc 2 961 0
+	ldr	r3, [sp]
+	.loc 2 964 0
+	ldr	r5, [r4, #3244]
+	.loc 2 963 0
+	ldr	r0, [r4, #2244]
+	.loc 2 961 0
+	str	r3, [sp, #8]
+	.loc 2 967 0
+	adds	r3, r3, #1
+	.loc 2 962 0
+	str	r6, [sp, #20]
+	.loc 2 963 0
+	str	r0, [sp, #12]
+	.loc 2 964 0
+	str	r5, [sp, #16]
+	.loc 2 966 0
+	str	r7, [r5, #4]
+	.loc 2 967 0
+	beq	.L1088
+	.loc 2 969 0
+	mov	r2, r7
+	movs	r1, #1
+	add	r0, sp, #4
+	bl	FlashReadPages
+.LVL893:
+.L1089:
+	.loc 2 986 0
+	ldr	r9, .L1103+4
+	.loc 2 975 0
+	movs	r7, #0
+	.loc 2 953 0
+	lsl	r8, r8, #2
+.LVL894:
+	.loc 2 987 0
+	mov	r10, r7
+	.loc 2 975 0
+	movw	r3, #61589
+	strh	r3, [r5]	@ movhi
+.L1090:
+	.loc 2 976 0
+	cmp	r8, r7
+	bne	.L1094
+.L1091:
+	.loc 2 992 0
+	movs	r3, #1
+.L1102:
+.LBE446:
+.LBE445:
+	.loc 2 998 0
+	strb	r3, [r4, #2290]
+.L1085:
+	.loc 2 1000 0
+	add	sp, sp, #24
+.LCFI137:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, pc}
+.LVL895:
+.L1088:
+.LCFI138:
+.LBB448:
+.LBB447:
+	.loc 2 973 0
+	ldrh	r2, [r4, #86]
+	movs	r1, #255
+	bl	ftl_memset
+.LVL896:
+	b	.L1089
+.LVL897:
+.L1094:
+	.loc 2 978 0
+	ldrh	r3, [r4, #2284]
+	cmp	r3, #0
+	beq	.L1091
+	.loc 2 983 0
+	ldr	r3, [sp, #8]
+	.loc 2 986 0
+	mov	r0, r9
+	.loc 2 982 0
+	str	r6, [r5, #8]
+	adds	r7, r7, #1
+	.loc 2 983 0
+	str	r3, [r5, #12]
+	.loc 2 984 0
+	ldrh	r3, [r4, #2280]
+	strh	r3, [r5, #2]	@ movhi
+	.loc 2 986 0
+	bl	get_new_active_ppa
+.LVL898:
+	.loc 2 987 0
+	ldr	r3, [r4, #2476]
+	.loc 2 988 0
+	movs	r1, #1
+	.loc 2 986 0
+	str	r0, [sp, #8]
+	.loc 2 988 0
+	add	r0, sp, #4
+	.loc 2 987 0
+	str	r3, [r5, #4]
+	adds	r3, r3, #1
+	adds	r2, r3, #1
+	it	eq
+	moveq	r3, r10
+	str	r3, [r4, #2476]
+	.loc 2 988 0
+	movs	r3, #0
+	mov	r2, r3
+	bl	FlashProgPages
+.LVL899:
+	.loc 2 990 0
+	ldrh	r0, [r4, #2280]
+	bl	decrement_vpc_count
+.LVL900:
+	b	.L1090
+.LVL901:
+.L1086:
+.LBE447:
+.LBE448:
+	.loc 2 998 0
+	movs	r3, #0
+	b	.L1102
+.L1104:
+	.align	2
+.L1103:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+2280
+.LFE218:
+	.fnend
+	.size	FtlWriteDump_data, .-FtlWriteDump_data
+	.align	1
+	.global	l2p_flush
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	l2p_flush, %function
+l2p_flush:
+	.fnstart
+.LFB211:
+	.loc 2 740 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, r5, r6, lr}
+	.save {r4, r5, r6, lr}
+.LCFI139:
+	.loc 2 746 0
+	movs	r4, #0
+	ldr	r5, .L1109
+	.loc 2 747 0
+	movs	r6, #12
+	.loc 2 744 0
+	bl	FtlWriteDump_data
+.LVL902:
+.L1106:
+	.loc 2 746 0 discriminator 1
+	ldrh	r3, [r5, #114]
+	uxth	r0, r4
+	cmp	r3, r0
+	bhi	.L1108
+	.loc 2 750 0
+	movs	r0, #0
+.LVL903:
+	pop	{r4, r5, r6, pc}
+.LVL904:
+.L1108:
+	.loc 2 747 0
+	ldr	r2, [r5, #2424]
+	uxth	r3, r4
+	mla	r3, r6, r3, r2
+	ldr	r3, [r3, #4]
+	cmp	r3, #0
+	bge	.L1107
+	.loc 2 748 0
+	bl	flush_l2p_region
+.LVL905:
+.L1107:
+	adds	r4, r4, #1
+	b	.L1106
+.L1110:
+	.align	2
+.L1109:
+	.word	.LANCHOR0
+.LFE211:
+	.fnend
+	.size	l2p_flush, .-l2p_flush
+	.align	1
+	.global	FtlRecoverySuperblock
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlRecoverySuperblock, %function
+FtlRecoverySuperblock:
+	.fnstart
+.LFB231:
+	.loc 2 1656 0
+	@ args = 0, pretend = 0, frame = 48
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL906:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI140:
+	.loc 2 1670 0
+	movw	r2, #65535
+	ldrh	r3, [r0]
+	.loc 2 1656 0
+	.pad #52
+	sub	sp, sp, #52
+.LCFI141:
+	.loc 2 1656 0
+	mov	fp, r0
+	.loc 2 1670 0
+	cmp	r3, r2
+	beq	.L1236
+	.loc 2 1675 0
+	ldrh	r3, [r0, #2]
+.LVL907:
+	.loc 2 1681 0
+	ldr	r4, .L1243
+	.loc 2 1675 0
+	str	r3, [sp, #8]
+	.loc 2 1676 0
+	ldrb	r3, [r0, #6]	@ zero_extendqisi2
+.LVL908:
+	.loc 2 1681 0
+	ldr	r1, [sp, #8]
+.LVL909:
+	.loc 2 1676 0
+	str	r3, [sp, #24]
+	.loc 2 1681 0
+	ldrh	r3, [r4, #78]
+.LVL910:
+	cmp	r3, r1
+	mov	r3, #0
+	bne	.L1114
+	.loc 2 1682 0
+	strh	r3, [r0, #4]	@ movhi
+.LVL911:
+.L1241:
+	.loc 2 1989 0
+	strb	r3, [fp, #6]
+.L1236:
+	.loc 2 2010 0
+	movs	r0, #0
+	add	sp, sp, #52
+.LCFI142:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL912:
+.L1114:
+.LCFI143:
+	.loc 2 1689 0
+	ldrh	r0, [r0, #16]
+.LVL913:
+.L1115:
+	.loc 2 1690 0
+	cmp	r0, r2
+	uxth	r5, r3
+	add	r3, r3, #1
+	beq	.L1116
+	.loc 2 1697 0
+	movs	r1, #1
+.LVL914:
+	bl	FtlGetLastWrittenPage
+.LVL915:
+	.loc 2 1705 0
+	adds	r7, r0, #1
+	.loc 2 1697 0
+	mov	r6, r0
+.LVL916:
+	.loc 2 1705 0
+	beq	.L1117
+	.loc 2 1721 0
+	ldr	r3, [r4, #3152]
+	.loc 2 1722 0
+	movs	r2, #0
+	.loc 2 1717 0
+	ldrh	lr, [r4, #8]
+	.loc 2 1719 0
+	movw	r9, #65535
+	.loc 2 1720 0
+	ldr	r0, [r4, #3792]
+	mov	r10, #20
+	.loc 2 1721 0
+	str	r3, [sp, #4]
+	ldrh	r3, [r4, #86]
+	.loc 2 1722 0
+	ldr	r8, [r4, #3156]
+	ldrh	r7, [r4, #88]
+	mov	r4, r2
+	.loc 2 1721 0
+	str	r3, [sp, #12]
+	add	r3, fp, #16
+	.loc 2 1722 0
+	mov	ip, r3
+	str	r3, [sp, #20]
+.L1118:
+	.loc 2 1717 0 discriminator 1
+	uxth	r3, r2
+	cmp	lr, r3
+	bhi	.L1124
+	.loc 2 1728 0
+	ldr	r5, .L1243
+	.loc 2 1727 0
+	movs	r2, #0
+	mov	r1, r4
+	.loc 2 1666 0
+	movw	r9, #65535
+	.loc 2 1727 0
+	bl	FlashReadPages
+.LVL917:
+	.loc 2 1728 0
+	ldr	r3, [r5, #2476]
+	.loc 2 1742 0
+	uxth	r2, r6
+	.loc 2 1730 0
+	ldr	r8, [r5, #3792]
+	.loc 2 1742 0
+	str	r2, [sp, #12]
+	.loc 2 1728 0
+	subs	r3, r3, #1
+.LVL918:
+	str	r3, [sp, #4]
+	mov	r7, r8
+	.loc 2 1729 0
+	movs	r3, #0
+.LVL919:
+.L1125:
+	uxth	r2, r3
+.LVL920:
+	.loc 2 1729 0 is_stmt 0 discriminator 1
+	cmp	r4, r2
+	bhi	.L1130
+	.loc 2 1745 0 is_stmt 1
+	bne	.L1128
+	.loc 2 1747 0
+	adds	r3, r6, #1
+	uxth	r3, r3
+.LVL921:
+	str	r3, [sp, #16]
+.L1237:
+	.loc 2 1753 0
+	ldr	r0, [r8, #4]
+	ubfx	r0, r0, #10, #16
+	bl	P2V_plane
+.LVL922:
+	.loc 2 1758 0
+	ldrh	r3, [r5, #78]
+	ldr	r2, [sp, #16]
+.LVL923:
+	.loc 2 1753 0
+	str	r0, [sp, #12]
+	.loc 2 1758 0
+	cmp	r3, r2
+	bne	.L1132
+	.loc 2 1759 0
+	ldrh	r3, [sp, #16]
+	strh	r3, [fp, #2]	@ movhi
+	.loc 2 1760 0
+	movs	r3, #0
+	strb	r3, [fp, #6]
+	.loc 2 1761 0
+	strh	r3, [fp, #4]	@ movhi
+.L1132:
+	.loc 2 1764 0
+	ldr	r3, [sp, #16]
+.LVL924:
+	ldr	r2, [sp, #8]
+.LVL925:
+	cmp	r3, r2
+	bne	.L1133
+	.loc 2 1764 0 is_stmt 0 discriminator 1
+	ldr	r3, [sp, #12]
+.LVL926:
+	ldr	r2, [sp, #24]
+.LVL927:
+	cmp	r3, r2
+	bne	.L1133
+	.loc 2 1765 0 is_stmt 1
+	ldr	r1, [sp, #16]
+	mov	r2, r3
+.LVL928:
+.L1242:
+	.loc 2 2004 0
+	mov	r0, fp
+.LVL929:
+	bl	ftl_sb_update_avl_pages
+.LVL930:
+	b	.L1236
+.LVL931:
+.L1116:
+	.loc 2 1692 0
+	uxth	r1, r3
+.LVL932:
+	adds	r1, r1, #8
+	ldrh	r0, [fp, r1, lsl #1]
+	b	.L1115
+.LVL933:
+.L1117:
+	.loc 2 1706 0
+	ldr	r3, [sp, #8]
+.LVL934:
+	cbz	r3, .L1119
+	.loc 2 1706 0 is_stmt 0 discriminator 1
+	movw	r2, #1706
+	ldr	r1, .L1243+4
+	ldr	r0, .L1243+8
+	bl	printk
+.LVL935:
+.L1119:
+	.loc 2 1707 0 is_stmt 1
+	ldr	r3, [sp, #24]
+.LVL936:
+	cbz	r3, .L1120
+	.loc 2 1707 0 is_stmt 0 discriminator 1
+	cmp	r5, r3
+	beq	.L1120
+	.loc 2 1707 0 discriminator 2
+	movw	r2, #1707
+	ldr	r1, .L1243+4
+	ldr	r0, .L1243+8
+	bl	printk
+.LVL937:
+.L1120:
+	.loc 2 1708 0 is_stmt 1
+	movs	r3, #0
+.LVL938:
+	strh	r3, [fp, #2]	@ movhi
+	b	.L1241
+.L1124:
+	.loc 2 1718 0
+	ldrh	r3, [ip], #2
+	.loc 2 1719 0
+	cmp	r3, r9
+	beq	.L1121
+	.loc 2 1720 0
+	mla	r1, r10, r4, r0
+	orr	r3, r6, r3, lsl #10
+	str	r3, [r1, #4]
+	.loc 2 1721 0
+	ldr	r3, [sp, #12]
+	muls	r3, r4, r3
+	it	mi
+	addmi	r3, r3, #3
+	bic	r3, r3, #3
+	mov	r5, r3
+	ldr	r3, [sp, #4]
+	add	r5, r5, r3
+	.loc 2 1722 0
+	mov	r3, r7
+	muls	r3, r4, r3
+	.loc 2 1723 0
+	add	r4, r4, #1
+	.loc 2 1722 0
+	it	mi
+	addmi	r3, r3, #3
+	.loc 2 1723 0
+	uxth	r4, r4
+	.loc 2 1722 0
+	bic	r3, r3, #3
+	.loc 2 1721 0
+	str	r5, [r1, #8]
+	.loc 2 1722 0
+	add	r3, r3, r8
+	str	r3, [r1, #12]
+.L1121:
+	adds	r2, r2, #1
+	b	.L1118
+.LVL939:
+.L1130:
+	.loc 2 1730 0
+	ldr	r2, [r7]
+.LVL940:
+	cbnz	r2, .L1126
+	.loc 2 1731 0
+	ldr	r10, [r7, #12]
+	.loc 2 1732 0
+	ldr	r2, [r10, #4]
+	adds	r0, r2, #1
+	beq	.L1127
+	.loc 2 1733 0
+	ldr	r1, [r5, #2476]
+	mov	r0, r2
+	bl	ftl_cmp_data_ver
+.LVL941:
+	cbz	r0, .L1127
+	.loc 2 1735 0
+	adds	r2, r2, #1
+	str	r2, [r5, #2476]
+.L1127:
+	.loc 2 1738 0
+	ldr	r2, [r10]
+	adds	r2, r2, #1
+	bne	.L1129
+.LVL942:
+.L1128:
+	.loc 2 1752 0
+	uxth	r2, r6
+.LVL943:
+	.loc 2 1753 0
+	uxth	r3, r3
+	.loc 2 1752 0
+	str	r2, [sp, #16]
+	.loc 2 1753 0
+	movs	r2, #20
+.LVL944:
+	mla	r8, r2, r3, r8
+	b	.L1237
+.L1126:
+	.loc 2 1742 0
+	ldr	r9, [sp, #12]
+.L1129:
+	adds	r3, r3, #1
+	adds	r7, r7, #20
+	b	.L1125
+.LVL945:
+.L1133:
+	.loc 2 1770 0
+	movw	r3, #65535
+.LVL946:
+	cmp	r9, r3
+	bne	.L1134
+	.loc 2 1770 0 is_stmt 0 discriminator 1
+	ldrb	r3, [fp, #8]	@ zero_extendqisi2
+	cmp	r3, #0
+	bne	.L1135
+.L1134:
+.LBB449:
+	.loc 2 1775 0 is_stmt 1
+	ldr	r3, [r5, #3964]
+	.loc 2 1774 0
+	uxth	r8, r6
+	.loc 2 1778 0
+	uxth	r6, r6
+.LVL947:
+	ldr	r7, .L1243
+	.loc 2 1784 0
+	movw	r9, #65535
+	.loc 2 1775 0
+	adds	r3, r3, #1
+	.loc 2 1776 0
+	itt	eq
+	ldreq	r3, [sp, #4]
+.LVL948:
+	streq	r3, [r5, #3964]
+	.loc 2 1778 0
+	ldr	r3, [sp, #8]
+.LVL949:
+	adds	r3, r3, #7
+.LVL950:
+	cmp	r6, r3
+	.loc 2 1779 0
+	itet	gt
+	subgt	r4, r8, #7
+	ldrle	r4, [sp, #8]
+	uxthgt	r4, r4
+.L1138:
+	.loc 2 1780 0 discriminator 1
+	cmp	r4, r8
+	bhi	.L1145
+	.loc 2 1785 0
+	movs	r3, #0
+	.loc 2 1782 0
+	ldrh	lr, [r7, #8]
+	.loc 2 1785 0
+	ldr	r0, [r7, #3792]
+	mov	r6, r3
+	ldr	r1, [sp, #20]
+	mov	ip, #20
+	b	.L1146
+.LVL951:
+.L1140:
+	.loc 2 1783 0
+	ldrh	r2, [r1], #2
+	.loc 2 1784 0
+	cmp	r2, r9
+	beq	.L1139
+	.loc 2 1785 0
+	mla	r10, ip, r6, r0
+	.loc 2 1786 0
+	adds	r6, r6, #1
+	.loc 2 1785 0
+	orr	r2, r4, r2, lsl #10
+	.loc 2 1786 0
+	uxth	r6, r6
+	.loc 2 1785 0
+	str	r2, [r10, #4]
+.L1139:
+	adds	r3, r3, #1
+.LVL952:
+.L1146:
+	.loc 2 1782 0 discriminator 1
+	uxth	r2, r3
+.LVL953:
+	cmp	r2, lr
+	bcc	.L1140
+	.loc 2 1789 0
+	movs	r2, #0
+	mov	r1, r6
+	bl	FlashReadPages
+.LVL954:
+	.loc 2 1791 0
+	ldr	r3, [r7, #3792]
+	movs	r2, #20
+	mla	r6, r2, r6, r3
+.L1141:
+	.loc 2 1790 0 discriminator 1
+	cmp	r6, r3
+	bne	.L1144
+	.loc 2 1780 0
+	adds	r4, r4, #1
+	uxth	r4, r4
+	b	.L1138
+.L1144:
+	.loc 2 1791 0
+	ldr	r2, [r3]
+	cbnz	r2, .L1135
+	.loc 2 1792 0
+	ldr	r2, [r3, #12]
+	.loc 2 1793 0
+	ldrh	r1, [r2]
+	cmp	r1, r9
+	beq	.L1143
+	.loc 2 1795 0
+	ldr	r2, [r2, #4]
+	adds	r1, r2, #1
+	.loc 2 1797 0
+	it	ne
+	strne	r2, [r7, #3964]
+.L1143:
+	adds	r3, r3, #20
+	b	.L1141
+.LVL955:
+.L1145:
+	.loc 2 1809 0
+	mov	r3, #-1
+	str	r3, [r7, #3964]
+.LVL956:
+.L1135:
+.LBE449:
+	.loc 2 1814 0
+	movs	r3, #1
+	.loc 2 1815 0
+	ldr	r0, .L1243+12
+	.loc 2 1814 0
+	strh	r3, [r5, #3968]	@ movhi
+	.loc 2 1821 0
+	ldr	r4, .L1243
+	.loc 2 1815 0
+	bl	FtlMapBlkWriteDump_data
+.LVL957:
+	ldr	r5, [sp, #8]
+.LVL958:
+.L1147:
+	.loc 2 1821 0
+	ldrh	r6, [r4, #8]
+.LVL959:
+	movs	r3, #0
+	.loc 2 1824 0
+	ldr	r0, [r4, #3792]
+.LVL960:
+	.loc 2 1820 0
+	mov	r10, r3
+	.loc 2 1821 0
+	ldr	r1, [sp, #20]
+	.loc 2 1823 0
+	movw	r7, #65535
+	.loc 2 1824 0
+	mov	ip, #20
+.L1148:
+	.loc 2 1821 0 discriminator 1
+	uxth	r2, r3
+.LVL961:
+	cmp	r6, r2
+	bhi	.L1150
+	.loc 2 1828 0
+	movs	r2, #0
+	mov	r1, r10
+	bl	FlashReadPages
+.LVL962:
+	.loc 2 1829 0
+	movs	r3, #0
+.LVL963:
+.L1240:
+	str	r3, [sp, #28]
+	.loc 2 1829 0 is_stmt 0 discriminator 2
+	ldrh	r3, [sp, #28]
+	cmp	r10, r3
+	bhi	.L1180
+	.loc 2 1982 0 is_stmt 1
+	adds	r5, r5, #1
+	.loc 2 1983 0
+	ldrh	r3, [r4, #78]
+	.loc 2 1982 0
+	uxth	r5, r5
+	.loc 2 1983 0
+	cmp	r3, r5
+	bne	.L1147
+	.loc 2 1986 0
+	ldrh	r2, [r4, #8]
+.LVL964:
+	.loc 2 1988 0
+	movw	r0, #65535
+.LVL965:
+	.loc 2 1985 0
+	movs	r3, #0
+	.loc 2 1984 0
+	strh	r5, [fp, #2]	@ movhi
+	.loc 2 1985 0
+	strh	r3, [fp, #4]	@ movhi
+.L1181:
+	.loc 2 1986 0 discriminator 1
+	uxth	r1, r3
+	cmp	r1, r2
+	bcs	.L1236
+	.loc 2 1987 0
+	ldr	r1, [sp, #20]
+	ldrh	r4, [r1], #2
+	.loc 2 1988 0
+	cmp	r4, r0
+	.loc 2 1987 0
+	str	r1, [sp, #20]
+	add	r1, r3, #1
+	.loc 2 1988 0
+	bne	.L1241
+	mov	r3, r1
+	b	.L1181
+.LVL966:
+.L1150:
+	.loc 2 1822 0
+	ldrh	r2, [r1], #2
+	.loc 2 1823 0
+	cmp	r2, r7
+	beq	.L1149
+	.loc 2 1824 0
+	mla	lr, ip, r10, r0
+	.loc 2 1825 0
+	add	r10, r10, #1
+	.loc 2 1824 0
+	orr	r2, r5, r2, lsl #10
+	.loc 2 1825 0
+	uxth	r10, r10
+	.loc 2 1824 0
+	str	r2, [lr, #4]
+.L1149:
+	adds	r3, r3, #1
+	b	.L1148
+.L1244:
+	.align	2
+.L1243:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+421
+	.word	.LC1
+	.word	.LANCHOR0+3864
+.LVL967:
+.L1180:
+	ldr	r3, [sp, #28]
+	movs	r7, #20
+	.loc 2 1830 0
+	ldr	r9, [r4, #3792]
+.LVL968:
+	muls	r7, r3, r7
+	add	r8, r9, r7
+	ldr	r6, [r8, #4]
+.LVL969:
+	.loc 2 1831 0
+	ubfx	r0, r6, #10, #16
+.LVL970:
+	.loc 2 1830 0
+	str	r6, [sp, #44]
+	.loc 2 1831 0
+	bl	P2V_plane
+.LVL971:
+	.loc 2 1833 0
+	ldr	r3, [sp, #8]
+.LVL972:
+	cmp	r5, r3
+	bcc	.L1152
+	.loc 2 1833 0 is_stmt 0 discriminator 1
+	bne	.L1153
+	.loc 2 1834 0 is_stmt 1
+	ldr	r3, [sp, #24]
+.LVL973:
+	cmp	r3, r0
+	bhi	.L1152
+.LVL974:
+.L1153:
+	.loc 2 1837 0
+	ldr	r3, [sp, #16]
+.LVL975:
+	cmp	r5, r3
+	bne	.L1154
+	.loc 2 1837 0 is_stmt 0 discriminator 1
+	ldr	r3, [sp, #12]
+.LVL976:
+	cmp	r3, r0
+	beq	.L1155
+.LVL977:
+.L1154:
+	.loc 2 1841 0 is_stmt 1
+	ldr	r3, [r9, r7]
+.LVL978:
+	adds	r3, r3, #1
+	beq	.L1156
+	.loc 2 1842 0
+	ldr	r8, [r8, #12]
+	.loc 2 1843 0
+	movw	r3, #61589
+	ldrh	r2, [r8]
+	cmp	r2, r3
+	beq	.L1157
+.LVL979:
+.L1164:
+.LBB450:
+	.loc 2 1876 0
+	ldrh	r0, [fp]
+.LVL980:
+.L1239:
+.LBE450:
+	.loc 2 1960 0
+	bl	decrement_vpc_count
+.LVL981:
+.L1152:
+	ldr	r3, [sp, #28]
+.LVL982:
+	adds	r3, r3, #1
+	b	.L1240
+.LVL983:
+.L1157:
+	.loc 2 1849 0
+	ldr	r3, [r8, #4]
+.LVL984:
+	.loc 2 1850 0
+	adds	r6, r3, #1
+	.loc 2 1849 0
+	str	r3, [sp, #4]
+	.loc 2 1850 0
+	beq	.L1158
+	.loc 2 1851 0 discriminator 1
+	ldr	r1, [r4, #2476]
+	mov	r0, r3
+.LVL985:
+	bl	ftl_cmp_data_ver
+.LVL986:
+	.loc 2 1850 0 discriminator 1
+	cbz	r0, .L1158
+	.loc 2 1853 0
+	ldr	r3, [sp, #4]
+	adds	r3, r3, #1
+.LVL987:
+	str	r3, [r4, #2476]
+.LVL988:
+.L1158:
+	.loc 2 1856 0
+	ldrh	r2, [r8]
+	movw	r3, #61589
+.LVL989:
+	cmp	r2, r3
+	beq	.L1159
+	.loc 2 1856 0 is_stmt 0 discriminator 1
+	mov	r2, #1856
+	ldr	r1, .L1245
+	ldr	r0, .L1245+4
+.LVL990:
+	bl	printk
+.LVL991:
+.L1159:
+	.loc 2 1857 0 is_stmt 1
+	ldr	r6, [r8, #8]
+.LVL992:
+	.loc 2 1859 0
+	add	r1, sp, #40
+	.loc 2 1858 0
+	ldr	r3, [r8, #12]
+	.loc 2 1859 0
+	movs	r2, #0
+	mov	r0, r6
+.LVL993:
+	.loc 2 1858 0
+	str	r3, [sp, #36]
+	.loc 2 1859 0
+	bl	log2phys
+.LVL994:
+	.loc 2 1860 0
+	ldr	r1, [r4, #3964]
+	adds	r0, r1, #1
+	beq	.L1160
+	.loc 2 1861 0 discriminator 1
+	ldr	r0, [sp, #4]
+	bl	ftl_cmp_data_ver
+.LVL995:
+	.loc 2 1860 0 discriminator 1
+	cmp	r0, #0
+	beq	.L1160
+.LBB451:
+	.loc 2 1865 0
+	ldr	r3, [sp, #36]
+	adds	r2, r3, #1
+	beq	.L1161
+	.loc 2 1866 0
+	ldr	r0, [r4, #3792]
+	.loc 2 1868 0
+	movs	r2, #0
+	movs	r1, #1
+	.loc 2 1866 0
+	add	r0, r0, r7
+	.loc 2 1867 0
+	str	r3, [r0, #4]
+	.loc 2 1866 0
+	ldr	r8, [r0, #12]
+	.loc 2 1868 0
+	bl	FlashReadPages
+.LVL996:
+	.loc 2 1881 0
+	ldr	r2, [r4, #3792]
+	ldr	r1, [r2, r7]
+	adds	r3, r2, r7
+	adds	r1, r1, #1
+	bne	.L1162
+.LVL997:
+.L1163:
+	.loc 2 1913 0
+	mov	r3, #-1
+.LVL998:
+	.loc 2 1914 0
+	ldrh	r0, [fp]
+	.loc 2 1913 0
+	str	r3, [sp, #36]
+	.loc 2 1914 0
+	bl	decrement_vpc_count
+.LVL999:
+.L1171:
+.LBE451:
+	.loc 2 1954 0
+	ldr	r0, [sp, #36]
+	adds	r1, r0, #1
+	beq	.L1152
+.L1184:
+	.loc 2 1956 0
+	ubfx	r0, r0, #10, #16
+	bl	P2V_block_in_plane
+.LVL1000:
+	.loc 2 1957 0
+	ldrh	r3, [r4, #16]
+	.loc 2 1956 0
+	mov	r6, r0
+.LVL1001:
+	.loc 2 1957 0
+	cmp	r3, r0
+	bhi	.L1176
+	.loc 2 1957 0 is_stmt 0 discriminator 1
+	movw	r2, #1957
+	ldr	r1, .L1245
+	ldr	r0, .L1245+4
+	bl	printk
+.LVL1002:
+.L1176:
+	.loc 2 1958 0 is_stmt 1
+	ldr	r3, [r4, #2260]
+	ldrh	r3, [r3, r6, lsl #1]
+	cmp	r3, #0
+	beq	.L1177
+	.loc 2 1960 0
+	mov	r0, r6
+	b	.L1239
+.LVL1003:
+.L1161:
+.LBB452:
+	.loc 2 1872 0
+	ldr	r3, [sp, #44]
+	ldr	r2, [sp, #40]
+	cmp	r2, r3
+	bne	.L1164
+	.loc 2 1873 0
+	movs	r2, #1
+	add	r1, sp, #36
+	mov	r0, r6
+	bl	log2phys
+.LVL1004:
+	b	.L1164
+.L1162:
+	.loc 2 1881 0 discriminator 1
+	ldr	r1, [r8, #8]
+	cmp	r6, r1
+	bne	.L1163
+	.loc 2 1869 0 discriminator 2
+	ldr	r9, [r8, #4]
+.LVL1005:
+	.loc 2 1882 0 discriminator 2
+	ldr	r0, [r4, #3964]
+	mov	r1, r9
+	bl	ftl_cmp_data_ver
+.LVL1006:
+	.loc 2 1881 0 discriminator 2
+	cmp	r0, #0
+	beq	.L1163
+	.loc 2 1883 0
+	ldr	r1, [sp, #40]
+	ldr	r0, [sp, #44]
+	cmp	r1, r0
+	bne	.L1166
+.LVL1007:
+.L1169:
+	.loc 2 1909 0
+	ldr	r1, [sp, #36]
+	mov	r0, r6
+	bl	FtlReUsePrevPpa
+.LVL1008:
+	b	.L1163
+.LVL1009:
+.L1166:
+	.loc 2 1886 0
+	ldr	r0, [sp, #36]
+.LVL1010:
+	cmp	r1, r0
+	beq	.L1163
+	.loc 2 1887 0
+	adds	r0, r1, #1
+	beq	.L1167
+	.loc 2 1889 0
+	str	r1, [r3, #4]
+	.loc 2 1890 0
+	movs	r2, #0
+	movs	r1, #1
+	mov	r0, r3
+	.loc 2 1888 0
+	ldr	r8, [r3, #12]
+	.loc 2 1890 0
+	bl	FlashReadPages
+.LVL1011:
+.L1168:
+	.loc 2 1895 0
+	ldr	r3, [r4, #3792]
+	ldr	r3, [r3, r7]
+	adds	r3, r3, #1
+	beq	.L1169
+	.loc 2 1896 0
+	ldr	r3, [r8, #4]
+.LVL1012:
+	.loc 2 1897 0
+	ldr	r0, [r4, #3964]
+	mov	r1, r3
+	bl	ftl_cmp_data_ver
+.LVL1013:
+	cmp	r0, #0
+	beq	.L1169
+	.loc 2 1898 0
+	mov	r1, r3
+	mov	r0, r9
+	bl	ftl_cmp_data_ver
+.LVL1014:
+	cmp	r0, #0
+	beq	.L1163
+	b	.L1169
+.LVL1015:
+.L1167:
+	.loc 2 1892 0
+	str	r1, [r2, r7]
+	b	.L1168
+.LVL1016:
+.L1160:
+.LBE452:
+	.loc 2 1915 0
+	ldr	r3, [sp, #44]
+	ldr	r2, [sp, #40]
+	cmp	r2, r3
+	beq	.L1171
+	.loc 2 1917 0
+	movs	r2, #1
+	add	r1, sp, #44
+	mov	r0, r6
+	bl	log2phys
+.LVL1017:
+	.loc 2 1918 0
+	ldr	r8, [sp, #40]
+	cmp	r8, #-1
+	beq	.L1171
+	.loc 2 1918 0 is_stmt 0 discriminator 1
+	ldr	r3, [sp, #36]
+	cmp	r8, r3
+	beq	.L1174
+	.loc 2 1919 0 is_stmt 1
+	ubfx	r0, r8, #10, #16
+	bl	P2V_block_in_plane
+.LVL1018:
+	.loc 2 1921 0
+	ldrh	r3, [r4, #2280]
+	cmp	r3, r0
+	beq	.L1175
+	.loc 2 1921 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #2328]
+	cmp	r3, r0
+	beq	.L1175
+	.loc 2 1922 0 is_stmt 1
+	ldrh	r3, [r4, #2376]
+	cmp	r3, r0
+	bne	.L1171
+.L1175:
+.LBB453:
+	.loc 2 1927 0
+	ldr	r0, [r4, #3792]
+	.loc 2 1930 0
+	movs	r2, #0
+	movs	r1, #1
+	.loc 2 1929 0
+	str	r8, [r0, #4]
+	.loc 2 1927 0
+	ldr	r7, [r0, #12]
+	.loc 2 1930 0
+	bl	FlashReadPages
+.LVL1019:
+	.loc 2 1933 0
+	ldr	r3, [r4, #3792]
+	ldr	r3, [r3]
+	adds	r3, r3, #1
+	beq	.L1171
+	.loc 2 1934 0
+	ldr	r1, [r7, #4]
+	ldr	r0, [sp, #4]
+	bl	ftl_cmp_data_ver
+.LVL1020:
+	cmp	r0, #0
+	bne	.L1171
+	.loc 2 1941 0
+	movs	r2, #1
+	add	r1, sp, #40
+	mov	r0, r6
+	bl	log2phys
+.LVL1021:
+	b	.L1171
+.LVL1022:
+.L1177:
+.LBE453:
+	.loc 2 1962 0
+	mov	r1, r6
+	ldr	r0, .L1245+8
+	bl	printk
+.LVL1023:
+	b	.L1152
+.LVL1024:
+.L1156:
+	.loc 2 1969 0
+	ldr	r3, [r4, #3972]
+	cmp	r3, #31
+	.loc 2 1970 0
+	itttt	ls
+	addls	r2, r4, r3, lsl #2
+	.loc 2 1971 0
+	addls	r3, r3, #1
+	strls	r3, [r4, #3972]
+	.loc 2 1970 0
+	strls	r6, [r2, #3976]
+	.loc 2 1973 0
+	ldrh	r0, [fp]
+.LVL1025:
+	bl	decrement_vpc_count
+.LVL1026:
+	.loc 2 1975 0
+	ldr	r3, [r4, #3964]
+	adds	r2, r3, #1
+	bne	.L1179
+	.loc 2 1976 0
+	ldr	r3, [sp, #4]
+.LVL1027:
+.L1238:
+	.loc 2 1978 0
+	str	r3, [r4, #3964]
+	b	.L1152
+.LVL1028:
+.L1179:
+	.loc 2 1977 0
+	ldr	r2, [sp, #4]
+.LVL1029:
+	cmp	r2, r3
+	bcs	.L1152
+	.loc 2 1978 0
+	mov	r3, r2
+.LVL1030:
+	b	.L1238
+.LVL1031:
+.L1155:
+	.loc 2 2002 0
+	ldrb	r3, [sp, #12]	@ zero_extendqisi2
+.LVL1032:
+	.loc 2 2004 0
+	mov	r1, r5
+	.loc 2 2003 0
+	strh	r5, [fp, #2]	@ movhi
+	.loc 2 2004 0
+	ldr	r2, [sp, #12]
+	.loc 2 2002 0
+	strb	r3, [fp, #6]
+	b	.L1242
+.LVL1033:
+.L1174:
+	.loc 2 1954 0
+	mov	r0, r8
+	b	.L1184
+.L1246:
+	.align	2
+.L1245:
+	.word	.LANCHOR1+421
+	.word	.LC1
+	.word	.LC95
+.LFE231:
+	.fnend
+	.size	FtlRecoverySuperblock, .-FtlRecoverySuperblock
+	.align	1
+	.global	FtlSuperblockPowerLostFix
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlSuperblockPowerLostFix, %function
+FtlSuperblockPowerLostFix:
+	.fnstart
+.LFB238:
+	.loc 2 2156 0
+	@ args = 0, pretend = 0, frame = 24
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL1034:
+	push	{r4, r5, r6, r7, r8, lr}
+	.save {r4, r5, r6, r7, r8, lr}
+.LCFI144:
+	mov	r4, r0
+	ldr	r5, .L1258
+	.pad #24
+	sub	sp, sp, #24
+.LCFI145:
+	.loc 2 2162 0
+	movs	r6, #7
+	.loc 2 2168 0
+	mov	r7, #-1
+	.loc 2 2176 0
+	mov	r8, #0
+.L1248:
+	.loc 2 2162 0
+	subs	r6, r6, #1
+	beq	.L1250
+	.loc 2 2163 0
+	ldrh	r3, [r4, #4]
+	cbnz	r3, .L1249
+.L1250:
+	.loc 2 2183 0
+	ldr	r2, [r5, #2260]
+	ldrh	r1, [r4]
+	ldrh	r0, [r4, #4]
+	ldrh	r3, [r2, r1, lsl #1]
+	subs	r3, r3, r0
+	strh	r3, [r2, r1, lsl #1]	@ movhi
+	.loc 2 2184 0
+	ldrh	r3, [r5, #78]
+	strh	r3, [r4, #2]	@ movhi
+	.loc 2 2185 0
+	movs	r3, #0
+	strb	r3, [r4, #6]
+	.loc 2 2186 0
+	strh	r3, [r4, #4]	@ movhi
+	.loc 2 2188 0
+	add	sp, sp, #24
+.LCFI146:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, pc}
+.LVL1035:
+.L1249:
+.LCFI147:
+	.loc 2 2165 0
+	mov	r0, r4
+	bl	get_new_active_ppa
+.LVL1036:
+	str	r0, [sp, #8]
+	.loc 2 2166 0
+	adds	r0, r0, #1
+	beq	.L1250
+	.loc 2 2170 0
+	ldr	r2, [r5, #3244]
+	.loc 2 2179 0
+	movs	r1, #1
+	.loc 2 2169 0
+	ldr	r3, [r5, #2244]
+	.loc 2 2179 0
+	add	r0, sp, #4
+	.loc 2 2168 0
+	str	r7, [sp, #20]
+	.loc 2 2170 0
+	str	r2, [sp, #16]
+	.loc 2 2169 0
+	str	r3, [sp, #12]
+	.loc 2 2174 0
+	str	r7, [r2, #12]
+	.loc 2 2173 0
+	str	r7, [r2, #8]
+	.loc 2 2175 0
+	ldrh	r3, [r4]
+	.loc 2 2176 0
+	strh	r8, [r2]	@ movhi
+	.loc 2 2175 0
+	strh	r3, [r2, #2]	@ movhi
+	.loc 2 2178 0
+	ldr	r3, [r5, #2476]
+	str	r3, [r2, #4]
+	adds	r3, r3, #1
+	adds	r2, r3, #1
+	it	eq
+	moveq	r3, r8
+	str	r3, [r5, #2476]
+	.loc 2 2179 0
+	movs	r3, #0
+	mov	r2, r3
+	bl	FlashProgPages
+.LVL1037:
+	.loc 2 2180 0
+	ldrh	r0, [r4]
+	bl	decrement_vpc_count
+.LVL1038:
+	b	.L1248
+.L1259:
+	.align	2
+.L1258:
+	.word	.LANCHOR0
+.LFE238:
+	.fnend
+	.size	FtlSuperblockPowerLostFix, .-FtlSuperblockPowerLostFix
+	.align	1
+	.global	FtlLoadBbt
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlLoadBbt, %function
+FtlLoadBbt:
+	.fnstart
+.LFB179:
+	.loc 4 173 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, r5, r6, r7, r8, lr}
+	.save {r4, r5, r6, r7, r8, lr}
+.LCFI148:
+	.loc 4 196 0
+	movw	r8, #61649
+	.loc 4 180 0
+	ldr	r4, .L1289
+	ldr	r3, [r4, #2244]
+	.loc 4 186 0
+	addw	r7, r4, #3224
+	.loc 4 181 0
+	ldr	r6, [r4, #3244]
+	.loc 4 180 0
+	str	r3, [r4, #3232]
+	.loc 4 181 0
+	str	r6, [r4, #3236]
+	.loc 4 183 0
+	bl	FtlBbtMemInit
+.LVL1039:
+	.loc 4 184 0
+	ldrh	r5, [r4, #74]
+	subs	r5, r5, #1
+	uxth	r5, r5
+.LVL1040:
+.L1261:
+	.loc 4 184 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #74]
+	subs	r3, r3, #16
+	cmp	r5, r3
+	ble	.L1264
+	.loc 4 185 0 is_stmt 1
+	lsls	r3, r5, #10
+	.loc 4 186 0
+	movs	r2, #1
+	mov	r1, r2
+	mov	r0, r7
+	.loc 4 185 0
+	str	r3, [r4, #3228]
+	.loc 4 186 0
+	bl	FlashReadPages
+.LVL1041:
+	.loc 4 187 0
+	ldr	r3, [r4, #3224]
+	adds	r3, r3, #1
+	bne	.L1262
+	.loc 4 188 0
+	ldr	r3, [r4, #3228]
+	.loc 4 189 0
+	movs	r2, #1
+	mov	r1, r2
+	mov	r0, r7
+	.loc 4 188 0
+	adds	r3, r3, #1
+	str	r3, [r4, #3228]
+	.loc 4 189 0
+	bl	FlashReadPages
+.LVL1042:
+.L1262:
+	.loc 4 191 0
+	ldr	r3, [r4, #3224]
+	adds	r3, r3, #1
+	beq	.L1263
+	.loc 4 196 0
+	ldrh	r3, [r6]
+	cmp	r3, r8
+	bne	.L1263
+	.loc 4 199 0
+	ldr	r3, [r6, #4]
+	.loc 4 198 0
+	strh	r5, [r4, #128]	@ movhi
+	.loc 4 199 0
+	str	r3, [r4, #136]
+	.loc 4 200 0
+	ldrh	r3, [r6, #8]
+	strh	r3, [r4, #132]	@ movhi
+.L1264:
+	.loc 4 216 0
+	ldrh	r3, [r4, #128]
+	movw	r2, #65535
+	cmp	r3, r2
+	beq	.L1278
+	.loc 4 222 0
+	ldrh	r3, [r4, #132]
+	cmp	r3, r2
+	beq	.L1268
+	.loc 4 224 0
+	lsls	r3, r3, #10
+	.loc 4 225 0
+	movs	r2, #1
+	mov	r1, r2
+	ldr	r0, .L1289+4
+	.loc 4 224 0
+	str	r3, [r4, #3228]
+	.loc 4 225 0
+	bl	FlashReadPages
+.LVL1043:
+	.loc 4 226 0
+	ldr	r3, [r4, #3224]
+	adds	r3, r3, #1
+	beq	.L1268
+	.loc 4 229 0
+	ldrh	r2, [r6]
+	movw	r3, #61649
+	cmp	r2, r3
+	bne	.L1268
+	.loc 4 229 0 is_stmt 0 discriminator 1
+	ldr	r3, [r6, #4]
+	ldr	r2, [r4, #136]
+	cmp	r3, r2
+	bls	.L1268
+	.loc 4 231 0 is_stmt 1
+	ldrh	r2, [r4, #132]
+	.loc 4 232 0
+	str	r3, [r4, #136]
+	.loc 4 233 0
+	ldrh	r3, [r6, #8]
+	.loc 4 231 0
+	strh	r2, [r4, #128]	@ movhi
+	.loc 4 233 0
+	strh	r3, [r4, #132]	@ movhi
+.L1268:
+	.loc 4 245 0
+	ldr	r7, .L1289+4
+	.loc 4 238 0
+	movs	r1, #1
+	ldrh	r0, [r4, #128]
+	.loc 4 247 0
+	movw	r8, #61649
+	.loc 4 238 0
+	bl	FtlGetLastWrittenPage
+.LVL1044:
+	sxth	r5, r0
+.LVL1045:
+	.loc 4 239 0
+	adds	r0, r0, #1
+	strh	r0, [r4, #130]	@ movhi
+.L1270:
+	.loc 4 241 0
+	cmp	r5, #0
+	bge	.L1273
+	.loc 4 254 0
+	movs	r2, #254
+	ldr	r1, .L1289+8
+	ldr	r0, .L1289+12
+	bl	printk
+.LVL1046:
+.L1272:
+	.loc 4 255 0
+	ldrh	r3, [r6, #10]
+	.loc 4 257 0
+	ldrh	r0, [r6, #12]
+	.loc 4 255 0
+	strh	r3, [r4, #134]	@ movhi
+	.loc 4 257 0
+	movw	r3, #65535
+	cmp	r0, r3
+	beq	.L1275
+	.loc 4 259 0
+	ldr	r2, [r4, #4]
+	cmp	r0, r2
+	beq	.L1275
+	.loc 4 259 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #18]
+	lsrs	r3, r3, #2
+	cmp	r2, r3
+	bcs	.L1275
+	.loc 4 261 0 is_stmt 1
+	cmp	r0, r3
+	bcs	.L1275
+	.loc 4 263 0
+	bl	FtlSysBlkNumInit
+.LVL1047:
+.L1275:
+	ldr	r6, .L1289+16
+	.loc 4 173 0 discriminator 1
+	movs	r5, #0
+.LVL1048:
+.L1276:
+	.loc 4 268 0 discriminator 1
+	ldrh	r3, [r4, #30]
+	cmp	r5, r3
+	bcc	.L1277
+	.loc 4 275 0
+	movs	r0, #0
+	pop	{r4, r5, r6, r7, r8, pc}
+.LVL1049:
+.L1263:
+	.loc 4 184 0 discriminator 2
+	subs	r5, r5, #1
+.LVL1050:
+	uxth	r5, r5
+.LVL1051:
+	b	.L1261
+.LVL1052:
+.L1273:
+	.loc 4 243 0
+	ldrh	r3, [r4, #128]
+	.loc 4 245 0
+	movs	r2, #1
+	mov	r1, r2
+	mov	r0, r7
+	.loc 4 243 0
+	orr	r3, r5, r3, lsl #10
+	str	r3, [r4, #3228]
+	.loc 4 244 0
+	ldr	r3, [r4, #2244]
+	str	r3, [r4, #3232]
+	.loc 4 245 0
+	bl	FlashReadPages
+.LVL1053:
+	.loc 4 247 0
+	ldr	r3, [r4, #3224]
+	adds	r3, r3, #1
+	beq	.L1271
+	.loc 4 247 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r6]
+	cmp	r3, r8
+	beq	.L1272
+.L1271:
+	subs	r5, r5, #1
+.LVL1054:
+	sxth	r5, r5
+.LVL1055:
+	b	.L1270
+.LVL1056:
+.L1277:
+	.loc 4 269 0 is_stmt 1 discriminator 3
+	ldrh	r2, [r4, #3860]
+	ldr	r1, [r4, #3232]
+	ldr	r0, [r6, #4]!
+	lsls	r2, r2, #2
+	mla	r1, r5, r2, r1
+	.loc 4 268 0 discriminator 3
+	adds	r5, r5, #1
+	.loc 4 269 0 discriminator 3
+	bl	ftl_memcpy
+.LVL1057:
+	b	.L1276
+.LVL1058:
+.L1278:
+	.loc 4 218 0
+	mov	r0, #-1
+	pop	{r4, r5, r6, r7, r8, pc}
+.LVL1059:
+.L1290:
+	.align	2
+.L1289:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+3224
+	.word	.LANCHOR1+443
+	.word	.LC1
+	.word	.LANCHOR0+152
+.LFE179:
+	.fnend
+	.size	FtlLoadBbt, .-FtlLoadBbt
+	.align	1
+	.global	FtlMakeBbt
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlMakeBbt, %function
+FtlMakeBbt:
+	.fnstart
+.LFB181:
+	.loc 4 317 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI149:
+	.loc 4 327 0
+	mov	r8, #0
+.LVL1060:
+	ldr	r9, .L1310+4
+	.loc 4 325 0
+	bl	FtlBbtMemInit
+.LVL1061:
+	.loc 4 327 0
+	sub	r5, r9, #156
+	sub	r10, r9, #18
+	mov	r4, r5
+	.loc 4 326 0
+	bl	FtlLoadFactoryBbt
+.LVL1062:
+.L1292:
+	.loc 4 327 0 discriminator 1
+	ldrh	r3, [r5, #30]
+	cmp	r8, r3
+	bcc	.L1298
+	movs	r5, #0
+.L1299:
+	.loc 4 381 0 discriminator 1
+	ldrh	r3, [r4, #90]
+	uxth	r0, r5
+	adds	r5, r5, #1
+	cmp	r3, r0
+	bhi	.L1300
+	.loc 4 387 0
+	ldrh	r5, [r4, #140]
+	.loc 4 396 0
+	movw	r6, #65535
+	.loc 4 387 0
+	subs	r5, r5, #1
+	uxth	r5, r5
+.L1301:
+	.loc 4 387 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #140]
+	subs	r3, r3, #48
+	cmp	r5, r3
+	ble	.L1305
+	.loc 4 389 0 is_stmt 1
+	mov	r0, r5
+	bl	FtlBbmIsBadBlock
+.LVL1063:
+	cmp	r0, #1
+	beq	.L1302
+	.loc 4 391 0
+	mov	r0, r5
+	bl	FlashTestBlk
+.LVL1064:
+	cmp	r0, #0
+	beq	.L1303
+	.loc 4 393 0
+	mov	r0, r5
+	bl	FtlBbmMapBadBlock
+.LVL1065:
+.L1302:
+	.loc 4 387 0 discriminator 2
+	subs	r5, r5, #1
+	uxth	r5, r5
+	b	.L1301
+.L1298:
+	.loc 4 331 0
+	ldrh	r3, [r10, #2]!
+	movw	r2, #65535
+	.loc 4 328 0
+	ldr	r0, [r5, #2244]
+	.loc 4 329 0
+	ldr	fp, [r5, #3244]
+	.loc 4 331 0
+	cmp	r3, r2
+	.loc 4 328 0
+	str	r0, [r5, #3232]
+	.loc 4 329 0
+	str	fp, [r5, #3236]
+	.loc 4 331 0
+	beq	.L1293
+	.loc 4 333 0
+	ldrh	r7, [r5, #74]
+.LVL1066:
+	.loc 4 335 0
+	movs	r2, #1
+	mov	r1, r2
+	ldr	r0, .L1310
+	.loc 4 333 0
+	mla	r7, r8, r7, r3
+.LVL1067:
+	.loc 4 334 0
+	lsls	r3, r7, #10
+	str	r3, [r5, #3228]
+	.loc 4 335 0
+	bl	FlashReadPages
+.LVL1068:
+	.loc 4 336 0
+	ldrh	r2, [r5, #74]
+	ldr	r1, [r5, #3232]
+	ldr	r0, [r9]
+	adds	r2, r2, #7
+	asrs	r2, r2, #3
+	bl	ftl_memcpy
+.LVL1069:
+.L1294:
+	.loc 4 376 0 discriminator 2
+	uxth	r0, r7
+	.loc 4 327 0 discriminator 2
+	add	r8, r8, #1
+	add	r9, r9, #4
+	.loc 4 376 0 discriminator 2
+	bl	FtlBbmMapBadBlock
+.LVL1070:
+	b	.L1292
+.L1293:
+	.loc 4 340 0
+	mov	r1, r8
+	bl	FlashGetBadBlockList
+.LVL1071:
+	.loc 4 341 0
+	ldr	r1, [r9]
+	ldr	r0, [r5, #3232]
+	bl	FtlBbt2Bitmap
+.LVL1072:
+	.loc 4 343 0
+	ldrh	r6, [r5, #74]
+.L1296:
+	.loc 4 347 0
+	subs	r6, r6, #1
+	uxth	r6, r6
+.L1295:
+	.loc 4 345 0
+	ldrh	r0, [r4, #74]
+	smlabb	r0, r0, r8, r6
+	uxth	r0, r0
+	bl	FtlBbmIsBadBlock
+.LVL1073:
+	cmp	r0, #1
+	beq	.L1296
+.LBB464:
+.LBB465:
+.LBB466:
+	.loc 1 202 0
+	movs	r1, #16
+	ldr	r0, [r4, #3244]
+.LBE466:
+.LBE465:
+.LBE464:
+	.loc 4 349 0
+	strh	r6, [r10]	@ movhi
+.LBB469:
+.LBB468:
+.LBB467:
+	.loc 1 202 0
+	bl	__memzero
+.LVL1074:
+.LBE467:
+.LBE468:
+.LBE469:
+.LBB470:
+.LBB471:
+.LBB472:
+	mov	r1, #4096
+	ldr	r0, [r4, #2244]
+	bl	__memzero
+.LVL1075:
+.LBE472:
+.LBE471:
+.LBE470:
+	.loc 4 352 0
+	movw	r3, #61664
+	strh	r3, [fp]	@ movhi
+	.loc 4 353 0
+	movs	r3, #0
+	str	r3, [fp, #4]
+	.loc 4 354 0
+	ldrh	r3, [r10]
+	.loc 4 355 0
+	ldrh	r7, [r4, #74]
+.LVL1076:
+	.loc 4 357 0
+	ldrh	r2, [r4, #3860]
+	.loc 4 354 0
+	strh	r3, [fp, #2]	@ movhi
+	.loc 4 355 0
+	ldrh	r3, [r10]
+	.loc 4 357 0
+	ldr	r1, [r9]
+	lsls	r2, r2, #2
+	ldr	r0, [r4, #3232]
+	.loc 4 355 0
+	mla	r7, r8, r7, r3
+.LVL1077:
+	.loc 4 356 0
+	lsls	r3, r7, #10
+	str	r3, [r4, #3228]
+	.loc 4 357 0
+	bl	ftl_memcpy
+.LVL1078:
+	.loc 4 358 0
+	movs	r2, #1
+	ldr	r0, .L1310
+	mov	r1, r2
+	bl	FlashEraseBlocks
+.LVL1079:
+	.loc 4 359 0
+	movs	r3, #1
+	ldr	r0, .L1310
+	mov	r2, r3
+	mov	r1, r3
+	bl	FlashProgPages
+.LVL1080:
+	.loc 4 360 0
+	ldr	r3, [r4, #3224]
+	adds	r3, r3, #1
+	bne	.L1294
+	.loc 4 362 0
+	uxth	r0, r7
+	bl	FtlBbmMapBadBlock
+.LVL1081:
+	.loc 4 363 0
+	b	.L1295
+.L1300:
+	.loc 4 383 0 discriminator 3
+	bl	FtlBbmMapBadBlock
+.LVL1082:
+	b	.L1299
+.L1303:
+	.loc 4 396 0
+	ldrh	r3, [r4, #128]
+	cmp	r3, r6
+	bne	.L1304
+	.loc 4 398 0
+	strh	r5, [r4, #128]	@ movhi
+	b	.L1302
+.L1304:
+	.loc 4 402 0
+	strh	r5, [r4, #132]	@ movhi
+.L1305:
+	.loc 4 414 0
+	ldrh	r3, [r4, #128]
+	.loc 4 411 0
+	movs	r5, #0
+	.loc 4 414 0
+	ldr	r0, [r4, #3760]
+	.loc 4 416 0
+	movs	r1, #1
+	.loc 4 413 0
+	str	r5, [r4, #136]
+	.loc 4 416 0
+	movs	r2, #2
+	.loc 4 411 0
+	strh	r5, [r4, #130]	@ movhi
+	.loc 4 414 0
+	lsls	r3, r3, #10
+	str	r3, [r0, #4]
+	.loc 4 415 0
+	ldrh	r3, [r4, #132]
+	lsls	r3, r3, #10
+	str	r3, [r0, #24]
+	.loc 4 416 0
+	bl	FlashEraseBlocks
+.LVL1083:
+	.loc 4 418 0
+	ldrh	r0, [r4, #128]
+	bl	FtlBbmMapBadBlock
+.LVL1084:
+	.loc 4 419 0
+	ldrh	r0, [r4, #132]
+	bl	FtlBbmMapBadBlock
+.LVL1085:
+	.loc 4 421 0
+	bl	FtlBbmTblFlush
+.LVL1086:
+	.loc 4 422 0
+	ldr	r3, [r4, #136]
+	.loc 4 425 0
+	ldrh	r2, [r4, #132]
+	.loc 4 426 0
+	strh	r5, [r4, #130]	@ movhi
+	.loc 4 422 0
+	adds	r3, r3, #1
+	str	r3, [r4, #136]
+	.loc 4 424 0
+	ldrh	r3, [r4, #128]
+	.loc 4 425 0
+	strh	r2, [r4, #128]	@ movhi
+	.loc 4 427 0
+	strh	r3, [r4, #132]	@ movhi
+	.loc 4 429 0
+	bl	FtlBbmTblFlush
+.LVL1087:
+	.loc 4 432 0
+	mov	r0, r5
+	pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL1088:
+.L1311:
+	.align	2
+.L1310:
+	.word	.LANCHOR0+3224
+	.word	.LANCHOR0+156
+.LFE181:
+	.fnend
+	.size	FtlMakeBbt, .-FtlMakeBbt
+	.align	1
+	.global	FtlVendorPartWrite
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlVendorPartWrite, %function
+FtlVendorPartWrite:
+	.fnstart
+.LFB213:
+	.loc 2 786 0
+	@ args = 0, pretend = 0, frame = 104
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL1089:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI150:
+	mov	r10, r2
+	.loc 2 794 0
+	ldr	r4, .L1324
+	adds	r2, r0, r1
+.LVL1090:
+	.loc 2 786 0
+	.pad #108
+	sub	sp, sp, #108
+.LCFI151:
+	.loc 2 786 0
+	mov	r8, r0
+	mov	r6, r1
+	.loc 2 794 0
+	ldrh	r3, [r4, #72]
+	cmp	r2, r3
+	bhi	.L1320
+	.loc 2 791 0
+	ldrh	r7, [r4, #84]
+	mov	r9, #0
+	lsr	r7, r0, r7
+.LVL1091:
+	lsl	fp, r7, #2
+.LVL1092:
+.L1314:
+	.loc 2 797 0
+	cbnz	r6, .L1319
+.L1312:
+	.loc 2 820 0
+	mov	r0, r9
+	add	sp, sp, #108
+.LCFI152:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL1093:
+.L1319:
+.LCFI153:
+	.loc 2 798 0
+	ldr	r3, [r4, #3844]
+	.loc 2 799 0
+	mov	r0, r8
+	.loc 2 798 0
+	ldr	r2, [r3, fp]
+.LVL1094:
+	.loc 2 799 0
+	ldrh	r3, [r4, #34]
+	.loc 2 798 0
+	str	r2, [sp, #12]
+	.loc 2 799 0
+	mov	r1, r3
+	str	r3, [sp, #8]
+	bl	__aeabi_uidivmod
+.LVL1095:
+	.loc 2 800 0
+	ldr	r3, [sp, #8]
+	.loc 2 801 0
+	ldr	r2, [sp, #12]
+.LVL1096:
+	.loc 2 799 0
+	str	r1, [sp, #4]
+	.loc 2 800 0
+	subs	r5, r3, r1
+.LVL1097:
+	uxth	r5, r5
+.LVL1098:
+	.loc 2 801 0
+	cmp	r6, r5
+	.loc 2 802 0
+	it	cc
+	uxthcc	r5, r6
+	.loc 2 803 0
+	cbz	r2, .L1316
+	.loc 2 803 0 is_stmt 0 discriminator 1
+	cmp	r5, r3
+	beq	.L1316
+	.loc 2 805 0 is_stmt 1
+	ldr	r3, [r4, #3808]
+	.loc 2 807 0
+	add	r0, sp, #20
+	.loc 2 804 0
+	str	r2, [sp, #24]
+	.loc 2 807 0
+	movs	r2, #1
+.LVL1099:
+	mov	r1, r2
+	.loc 2 805 0
+	str	r3, [sp, #28]
+	.loc 2 806 0
+	add	r3, sp, #40
+	str	r3, [sp, #32]
+	.loc 2 807 0
+	bl	FlashReadPages
+.LVL1100:
+.L1317:
+	.loc 2 811 0
+	lsls	r3, r5, #9
+	ldr	r0, [r4, #3808]
+	mov	r1, r10
+	mov	r2, r3
+	str	r3, [sp, #8]
+	ldr	r3, [sp, #4]
+	.loc 2 815 0
+	subs	r6, r6, r5
+	.loc 2 816 0
+	add	r8, r8, r5
+	add	fp, fp, #4
+	.loc 2 811 0
+	add	r0, r0, r3, lsl #9
+	bl	ftl_memcpy
+.LVL1101:
+	.loc 2 812 0
+	mov	r1, r7
+	ldr	r2, [r4, #3808]
+	ldr	r0, .L1324+4
+	.loc 2 814 0
+	adds	r7, r7, #1
+	.loc 2 812 0
+	bl	FtlMapWritePage
+.LVL1102:
+	.loc 2 817 0
+	ldr	r3, [sp, #8]
+	.loc 2 813 0
+	adds	r0, r0, #1
+	it	eq
+	moveq	r9, #-1
+	.loc 2 817 0
+	add	r10, r10, r3
+	b	.L1314
+.LVL1103:
+.L1316:
+	.loc 2 809 0
+	ldrh	r2, [r4, #86]
+.LVL1104:
+	movs	r1, #0
+	ldr	r0, [r4, #3808]
+	bl	ftl_memset
+.LVL1105:
+	b	.L1317
+.LVL1106:
+.L1320:
+	.loc 2 795 0
+	mov	r9, #-1
+	b	.L1312
+.L1325:
+	.align	2
+.L1324:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+3908
+.LFE213:
+	.fnend
+	.size	FtlVendorPartWrite, .-FtlVendorPartWrite
+	.align	1
+	.global	Ftl_save_ext_data
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	Ftl_save_ext_data, %function
+Ftl_save_ext_data:
+	.fnstart
+.LFB236:
+	.loc 2 2110 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+	.loc 2 2111 0
+	ldr	r2, .L1328
+	ldr	r3, .L1328+4
+	ldr	r1, [r2, #2616]
+	cmp	r1, r3
+	bne	.L1326
+.LBB475:
+.LBB476:
+	.loc 2 2112 0
+	ldr	r3, .L1328+8
+	.loc 2 2125 0
+	addw	r2, r2, #2616
+	movs	r1, #1
+	movs	r0, #0
+	.loc 2 2112 0
+	str	r3, [r2, #4]
+	.loc 2 2113 0
+	ldr	r3, [r2, #-152]
+	str	r3, [r2, #88]
+	.loc 2 2114 0
+	ldr	r3, [r2, #-148]
+	str	r3, [r2, #92]
+	.loc 2 2115 0
+	ldr	r3, [r2, #-156]
+	str	r3, [r2, #8]
+	.loc 2 2116 0
+	ldr	r3, [r2, #-168]
+	str	r3, [r2, #12]
+	.loc 2 2117 0
+	ldr	r3, [r2, #-176]
+	str	r3, [r2, #16]
+	.loc 2 2118 0
+	ldr	r3, [r2, #-160]
+	str	r3, [r2, #20]
+	.loc 2 2119 0
+	ldr	r3, [r2, #-132]
+	str	r3, [r2, #28]
+	.loc 2 2120 0
+	ldr	r3, [r2, #-124]
+	str	r3, [r2, #32]
+	.loc 2 2121 0
+	ldr	r3, [r2, #-172]
+	str	r3, [r2, #36]
+	.loc 2 2122 0
+	ldr	r3, [r2, #-164]
+	str	r3, [r2, #40]
+	.loc 2 2123 0
+	ldr	r3, [r2, #-120]
+	str	r3, [r2, #44]
+	.loc 2 2124 0
+	ldr	r3, [r2, #-116]
+	str	r3, [r2, #48]
+	.loc 2 2125 0
+	b	FtlVendorPartWrite
+.LVL1107:
+.L1326:
+	bx	lr
+.L1329:
+	.align	2
+.L1328:
+	.word	.LANCHOR0
+	.word	1179929683
+	.word	1342177344
+.LBE476:
+.LBE475:
+.LFE236:
+	.fnend
+	.size	Ftl_save_ext_data, .-Ftl_save_ext_data
+	.align	1
+	.global	FtlEctTblFlush
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlEctTblFlush, %function
+FtlEctTblFlush:
+	.fnstart
+.LFB215:
+	.loc 2 861 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL1108:
+	.loc 2 864 0
+	ldr	r2, .L1335
+	.loc 2 861 0
+	push	{r3, lr}
+	.save {r3, lr}
+.LCFI154:
+	.loc 2 864 0
+	ldrh	r3, [r2, #-240]
+	cmp	r3, #31
+	.loc 2 865 0
+	itett	ls
+	addls	r3, r3, #1
+	.loc 2 862 0
+	movhi	r2, #32
+.LVL1109:
+	.loc 2 865 0
+	strhls	r3, [r2, #-240]	@ movhi
+.LVL1110:
+	.loc 2 866 0
+	movls	r2, #1
+.LVL1111:
+	ldr	r3, .L1335+4
+	.loc 2 868 0
+	cbnz	r0, .L1332
+	.loc 2 868 0 is_stmt 0 discriminator 1
+	ldr	r1, [r3, #3820]
+	ldr	r0, [r1, #20]
+.LVL1112:
+	ldr	r1, [r1, #16]
+	add	r2, r2, r0
+.LVL1113:
+	cmp	r1, r2
+	bcc	.L1333
+.LVL1114:
+.L1332:
+	.loc 2 870 0 is_stmt 1
+	ldr	r2, [r3, #3820]
+.LVL1115:
+	.loc 2 875 0
+	movs	r0, #64
+.LVL1116:
+	.loc 2 870 0
+	ldr	r1, [r2, #16]
+	str	r1, [r2, #20]
+	.loc 2 871 0
+	ldr	r1, .L1335+8
+	str	r1, [r2]
+	.loc 2 872 0
+	ldrh	r1, [r3, #3812]
+	ldr	r2, [r3, #3820]
+	lsls	r3, r1, #9
+	str	r3, [r2, #12]
+	.loc 2 873 0
+	ldr	r3, [r2, #8]
+	adds	r3, r3, #1
+	str	r3, [r2, #8]
+	.loc 2 874 0
+	movs	r3, #0
+	str	r3, [r2, #4]
+	.loc 2 875 0
+	bl	FtlVendorPartWrite
+.LVL1117:
+	.loc 2 876 0
+	bl	Ftl_save_ext_data
+.LVL1118:
+.L1333:
+	.loc 2 878 0
+	movs	r0, #0
+	pop	{r3, pc}
+.L1336:
+	.align	2
+.L1335:
+	.word	.LANCHOR3
+	.word	.LANCHOR0
+	.word	1112818501
+.LFE215:
+	.fnend
+	.size	FtlEctTblFlush, .-FtlEctTblFlush
+	.align	1
+	.global	FtlVendorPartRead
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlVendorPartRead, %function
+FtlVendorPartRead:
+	.fnstart
+.LFB214:
+	.loc 2 823 0
+	@ args = 0, pretend = 0, frame = 96
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL1119:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI155:
+	mov	r10, r2
+	.loc 2 832 0
+	ldr	r5, .L1346
+	adds	r2, r0, r1
+.LVL1120:
+	.loc 2 823 0
+	.pad #100
+	sub	sp, sp, #100
+.LCFI156:
+	.loc 2 823 0
+	mov	r8, r0
+	mov	r7, r1
+	.loc 2 832 0
+	ldrh	r3, [r5, #72]
+	cmp	r2, r3
+	bhi	.L1345
+	.loc 2 828 0
+	ldrh	r6, [r5, #84]
+	mov	r9, #0
+	lsr	r6, r0, r6
+.LVL1121:
+	lsls	r6, r6, #2
+.LVL1122:
+.L1339:
+	.loc 2 834 0
+	cbnz	r7, .L1344
+.L1337:
+	.loc 2 857 0
+	mov	r0, r9
+	add	sp, sp, #100
+.LCFI157:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL1123:
+.L1344:
+.LCFI158:
+	.loc 2 835 0
+	ldr	r3, [r5, #3844]
+	.loc 2 836 0
+	mov	r0, r8
+	ldrh	r4, [r5, #34]
+.LVL1124:
+	.loc 2 835 0
+	ldr	r3, [r3, r6]
+.LVL1125:
+	.loc 2 836 0
+	mov	r1, r4
+	.loc 2 835 0
+	str	r3, [sp, #4]
+	.loc 2 836 0
+	bl	__aeabi_uidivmod
+.LVL1126:
+	.loc 2 837 0
+	subs	r4, r4, r1
+	.loc 2 838 0
+	ldr	r3, [sp, #4]
+.LVL1127:
+	.loc 2 837 0
+	uxth	r4, r4
+.LVL1128:
+	.loc 2 836 0
+	str	r1, [sp]
+	.loc 2 838 0
+	cmp	r7, r4
+	.loc 2 839 0
+	it	cc
+	uxthcc	r4, r7
+	lsl	fp, r4, #9
+	.loc 2 840 0
+	cbz	r3, .L1341
+	.loc 2 841 0
+	str	r3, [sp, #16]
+	.loc 2 844 0
+	movs	r2, #1
+	.loc 2 842 0
+	ldr	r3, [r5, #3808]
+.LVL1129:
+	.loc 2 844 0
+	mov	r1, r2
+	add	r0, sp, #12
+	.loc 2 842 0
+	str	r3, [sp, #20]
+	.loc 2 843 0
+	add	r3, sp, #32
+	str	r3, [sp, #24]
+	.loc 2 844 0
+	bl	FlashReadPages
+.LVL1130:
+	.loc 2 845 0
+	ldr	r3, [sp, #12]
+	.loc 2 847 0
+	mov	r2, fp
+	ldr	r1, [r5, #3808]
+	mov	r0, r10
+	.loc 2 846 0
+	adds	r3, r3, #1
+	.loc 2 847 0
+	ldr	r3, [sp]
+	.loc 2 846 0
+	it	eq
+	moveq	r9, #-1
+	.loc 2 847 0
+	add	r1, r1, r3, lsl #9
+	bl	ftl_memcpy
+.LVL1131:
+.L1343:
+	.loc 2 852 0
+	subs	r7, r7, r4
+	.loc 2 853 0
+	add	r8, r8, r4
+	.loc 2 854 0
+	add	r10, r10, fp
+	adds	r6, r6, #4
+	b	.L1339
+.LVL1132:
+.L1341:
+	.loc 2 849 0
+	mov	r2, fp
+	mov	r1, r3
+	mov	r0, r10
+	bl	ftl_memset
+.LVL1133:
+	b	.L1343
+.LVL1134:
+.L1345:
+	.loc 2 833 0
+	mov	r9, #-1
+	b	.L1337
+.L1347:
+	.align	2
+.L1346:
+	.word	.LANCHOR0
+.LFE214:
+	.fnend
+	.size	FtlVendorPartRead, .-FtlVendorPartRead
+	.align	1
+	.global	FtlLoadEctTbl
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlLoadEctTbl, %function
+FtlLoadEctTbl:
+	.fnstart
+.LFB221:
+	.loc 2 1334 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, lr}
+	.save {r4, lr}
+.LCFI159:
+	.loc 2 1335 0
+	movs	r0, #64
+	ldr	r4, .L1350
+	ldr	r2, [r4, #3820]
+	ldrh	r1, [r4, #3812]
+	bl	FtlVendorPartRead
+.LVL1135:
+	.loc 2 1336 0
+	ldr	r3, [r4, #3820]
+	ldr	r2, [r3]
+	ldr	r3, .L1350+4
+	cmp	r2, r3
+	beq	.L1349
+.LBB479:
+.LBB480:
+	.loc 2 1338 0
+	ldr	r1, .L1350+8
+	ldr	r0, .L1350+12
+	bl	printk
+.LVL1136:
+	.loc 2 1339 0
+	ldrh	r2, [r4, #3812]
+	movs	r1, #0
+	ldr	r0, [r4, #3820]
+	lsls	r2, r2, #9
+	bl	ftl_memset
+.LVL1137:
+.L1349:
+.LBE480:
+.LBE479:
+	.loc 2 1344 0
+	movs	r0, #0
+	pop	{r4, pc}
+.L1351:
+	.align	2
+.L1350:
+	.word	.LANCHOR0
+	.word	1112818501
+	.word	.LC96
+	.word	.LC71
+.LFE221:
+	.fnend
+	.size	FtlLoadEctTbl, .-FtlLoadEctTbl
+	.align	1
+	.global	Ftl_load_ext_data
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	Ftl_load_ext_data, %function
+Ftl_load_ext_data:
+	.fnstart
+.LFB237:
+	.loc 2 2130 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r3, r4, r5, lr}
+	.save {r3, r4, r5, lr}
+.LCFI160:
+	.loc 2 2131 0
+	movs	r1, #1
+	ldr	r4, .L1355
+	movs	r0, #0
+	.loc 2 2132 0
+	ldr	r5, .L1355+4
+	.loc 2 2131 0
+	addw	r2, r4, #2616
+	bl	FtlVendorPartRead
+.LVL1138:
+	.loc 2 2132 0
+	ldr	r3, [r4, #2616]
+	cmp	r3, r5
+	beq	.L1353
+.LBB486:
+.LBB487:
+.LBB488:
+	.loc 1 202 0
+	mov	r1, #512
+	addw	r0, r4, #2616
+	bl	__memzero
+.LVL1139:
+.LBE488:
+.LBE487:
+.LBE486:
+	.loc 2 2134 0
+	str	r5, [r4, #2616]
+.L1353:
+	.loc 2 2137 0
+	ldr	r3, [r4, #2616]
+	cmp	r3, r5
+	bne	.L1354
+	.loc 2 2138 0
+	ldr	r3, [r4, #2704]
+	str	r3, [r4, #2464]
+	.loc 2 2139 0
+	ldr	r3, [r4, #2708]
+	str	r3, [r4, #2468]
+	.loc 2 2140 0
+	ldr	r3, [r4, #2624]
+	str	r3, [r4, #2460]
+	.loc 2 2141 0
+	ldr	r3, [r4, #2628]
+	str	r3, [r4, #2448]
+	.loc 2 2142 0
+	ldr	r3, [r4, #2632]
+	str	r3, [r4, #2440]
+	.loc 2 2143 0
+	ldr	r3, [r4, #2636]
+	str	r3, [r4, #2456]
+	.loc 2 2144 0
+	ldr	r3, [r4, #2644]
+	str	r3, [r4, #2484]
+	.loc 2 2145 0
+	ldr	r3, [r4, #2648]
+	str	r3, [r4, #2492]
+	.loc 2 2146 0
+	ldr	r3, [r4, #2652]
+	str	r3, [r4, #2444]
+	.loc 2 2147 0
+	ldr	r3, [r4, #2656]
+	str	r3, [r4, #2452]
+	.loc 2 2148 0
+	ldr	r3, [r4, #2660]
+	str	r3, [r4, #2496]
+	.loc 2 2149 0
+	ldr	r3, [r4, #2664]
+	str	r3, [r4, #2500]
+.L1354:
+	.loc 2 2152 0
+	ldrh	r2, [r4, #68]
+	ldr	r3, [r4, #2484]
+	ldr	r0, [r4, #2480]
+	ldrh	r1, [r4, #16]
+	mla	r0, r0, r2, r3
+	bl	__aeabi_uidiv
+.LVL1140:
+	str	r0, [r4, #2488]
+	pop	{r3, r4, r5, pc}
+.L1356:
+	.align	2
+.L1355:
+	.word	.LANCHOR0
+	.word	1179929683
+.LFE237:
+	.fnend
+	.size	Ftl_load_ext_data, .-Ftl_load_ext_data
+	.align	1
+	.global	FtlVpcTblFlush
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlVpcTblFlush, %function
+FtlVpcTblFlush:
+	.fnstart
+.LFB219:
+	.loc 2 1004 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, r5, r6, r7, r8, r9, r10, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, lr}
+.LCFI161:
+	.loc 2 1016 0
+	movs	r5, #0
+	.loc 2 1010 0
+	ldr	r4, .L1369
+	.loc 2 1047 0
+	movs	r1, #255
+	.loc 2 1005 0
+	movw	r7, #65535
+.LVL1141:
+	.loc 2 1075 0
+	ldr	r9, .L1369+16
+	.loc 2 1010 0
+	ldr	r3, [r4, #2244]
+	.loc 2 1056 0
+	addw	r8, r4, #3224
+	.loc 2 1011 0
+	ldr	r6, [r4, #3244]
+	.loc 2 1075 0
+	ldr	r10, .L1369+20
+	.loc 2 1010 0
+	str	r3, [r4, #3232]
+	.loc 2 1013 0
+	ldrh	r3, [r4, #2556]
+	.loc 2 1011 0
+	str	r6, [r4, #3236]
+	.loc 2 1017 0
+	str	r5, [r6, #12]
+	.loc 2 1013 0
+	strh	r3, [r6, #2]	@ movhi
+	.loc 2 1014 0
+	movw	r3, #61604
+	strh	r3, [r6]	@ movhi
+	.loc 2 1015 0
+	ldr	r3, [r4, #2564]
+	.loc 2 1016 0
+	str	r5, [r6, #8]
+	.loc 2 1025 0
+	ldrh	r2, [r4, #2282]
+	.loc 2 1015 0
+	str	r3, [r6, #4]
+	.loc 2 1019 0
+	ldr	r3, .L1369+4
+	str	r3, [r4, #2504]
+	.loc 2 1020 0
+	ldr	r3, .L1369+8
+	str	r3, [r4, #2508]
+	.loc 2 1021 0
+	ldrh	r3, [r4, #2562]
+	strh	r3, [r4, #2512]	@ movhi
+	.loc 2 1022 0
+	ldrh	r3, [r4, #30]
+	strb	r3, [r4, #2514]
+	.loc 2 1024 0
+	ldrh	r3, [r4, #2280]
+	strh	r3, [r4, #2518]	@ movhi
+	.loc 2 1025 0
+	ldrb	r3, [r4, #2286]	@ zero_extendqisi2
+	orr	r3, r3, r2, lsl #6
+	.loc 2 1029 0
+	ldrh	r2, [r4, #2330]
+	.loc 2 1025 0
+	strh	r3, [r4, #2520]	@ movhi
+	.loc 2 1026 0
+	ldrb	r3, [r4, #2288]	@ zero_extendqisi2
+	strb	r3, [r4, #2515]
+	.loc 2 1028 0
+	ldrh	r3, [r4, #2328]
+	strh	r3, [r4, #2522]	@ movhi
+	.loc 2 1029 0
+	ldrb	r3, [r4, #2334]	@ zero_extendqisi2
+	orr	r3, r3, r2, lsl #6
+	strh	r3, [r4, #2524]	@ movhi
+	.loc 2 1030 0
+	ldrb	r3, [r4, #2336]	@ zero_extendqisi2
+	strb	r3, [r4, #2516]
+	.loc 2 1032 0
+	ldrh	r3, [r4, #2376]
+	.loc 2 1033 0
+	ldrh	r2, [r4, #2378]
+	.loc 2 1047 0
+	ldr	r0, [r4, #3232]
+	.loc 2 1032 0
+	strh	r3, [r4, #2526]	@ movhi
+	.loc 2 1033 0
+	ldrb	r3, [r4, #2382]	@ zero_extendqisi2
+	orr	r3, r3, r2, lsl #6
+	.loc 2 1047 0
+	ldrh	r2, [r4, #86]
+	.loc 2 1033 0
+	strh	r3, [r4, #2528]	@ movhi
+	.loc 2 1034 0
+	ldrb	r3, [r4, #2384]	@ zero_extendqisi2
+	strb	r3, [r4, #2517]
+	.loc 2 1036 0
+	ldr	r3, [r4, #2480]
+	str	r3, [r4, #2536]
+	.loc 2 1041 0
+	ldr	r3, [r4, #2472]
+	str	r3, [r4, #2544]
+	.loc 2 1042 0
+	ldr	r3, [r4, #2476]
+	str	r3, [r4, #2540]
+	.loc 2 1047 0
+	bl	ftl_memset
+.LVL1142:
+	.loc 2 1048 0
+	movs	r2, #48
+	addw	r1, r4, #2504
+	ldr	r0, [r4, #3232]
+	bl	ftl_memcpy
+.LVL1143:
+	.loc 2 1049 0
+	ldrh	r2, [r4, #16]
+	ldr	r0, [r4, #3232]
+	ldr	r1, [r4, #2260]
+	lsls	r2, r2, #1
+	adds	r0, r0, #48
+	bl	ftl_memcpy
+.LVL1144:
+	.loc 2 1050 0
+	ldrh	r0, [r4, #16]
+	ldr	r3, [r4, #3232]
+	ldr	r1, [r4]
+	lsrs	r2, r0, #3
+	adds	r0, r0, #24
+	lsls	r0, r0, #1
+	adds	r2, r2, #4
+	bic	r0, r0, #3
+	add	r0, r0, r3
+	bl	ftl_memcpy
+.LVL1145:
+	.loc 2 1051 0
+	mov	r0, r5
+	bl	FtlUpdateVaildLpn
+.LVL1146:
+.L1358:
+	.loc 2 1053 0
+	ldr	r3, [r4, #2244]
+	.loc 2 1056 0
+	mov	r0, r8
+	.loc 2 1055 0
+	ldrh	r2, [r4, #2556]
+	.loc 2 1053 0
+	str	r3, [r4, #3232]
+	.loc 2 1054 0
+	ldr	r3, [r4, #3244]
+	str	r3, [r4, #3236]
+	.loc 2 1055 0
+	ldrh	r3, [r4, #2558]
+	orr	r3, r3, r2, lsl #10
+	str	r3, [r4, #3228]
+	.loc 2 1056 0
+	movs	r3, #1
+	mov	r2, r3
+	mov	r1, r3
+	bl	FlashProgPages
+.LVL1147:
+	.loc 2 1057 0
+	ldrh	r3, [r4, #80]
+	ldrh	r2, [r4, #2558]
+	subs	r3, r3, #1
+	cmp	r2, r3
+	blt	.L1359
+	.loc 2 1059 0
+	ldrh	r3, [r4, #2556]
+	.loc 2 1058 0
+	ldrh	r7, [r4, #2560]
+	.loc 2 1059 0
+	strh	r3, [r4, #2560]	@ movhi
+	.loc 2 1060 0
+	movs	r3, #0
+	strh	r3, [r4, #2558]	@ movhi
+	.loc 2 1061 0
+	bl	FtlFreeSysBlkQueueOut
+.LVL1148:
+	.loc 2 1066 0
+	ldr	r3, [r4, #2472]
+	.loc 2 1061 0
+	strh	r0, [r4, #2556]	@ movhi
+	.loc 2 1066 0
+	adds	r2, r3, #1
+	str	r3, [r4, #2564]
+	str	r2, [r4, #2472]
+	.loc 2 1067 0
+	lsls	r2, r0, #10
+	str	r2, [r4, #3228]
+	.loc 2 1068 0
+	str	r3, [r6, #4]
+	.loc 2 1070 0
+	movs	r3, #1
+	.loc 2 1069 0
+	strh	r0, [r6, #2]	@ movhi
+	.loc 2 1070 0
+	mov	r2, r3
+	mov	r1, r3
+	mov	r0, r8
+	bl	FlashProgPages
+.LVL1149:
+.L1359:
+	.loc 2 1072 0
+	ldrh	r3, [r4, #2558]
+	.loc 2 1073 0
+	ldr	r2, [r4, #3224]
+	.loc 2 1072 0
+	adds	r3, r3, #1
+	uxth	r3, r3
+	.loc 2 1073 0
+	adds	r2, r2, #1
+	.loc 2 1072 0
+	strh	r3, [r4, #2558]	@ movhi
+	.loc 2 1073 0
+	bne	.L1360
+	.loc 2 1075 0
+	cmp	r3, #1
+	bne	.L1361
+	.loc 2 1075 0 is_stmt 0 discriminator 1
+	movw	r2, #1075
+	mov	r1, r9
+	mov	r0, r10
+	bl	printk
+.LVL1150:
+.L1361:
+	.loc 2 1076 0 is_stmt 1
+	ldrh	r3, [r4, #2558]
+	.loc 2 1078 0
+	adds	r5, r5, #1
+.LVL1151:
+	uxth	r5, r5
+.LVL1152:
+	.loc 2 1076 0
+	cmp	r3, #1
+	.loc 2 1077 0
+	ittt	eq
+	ldrheq	r3, [r4, #80]
+	addeq	r3, r3, #-1
+	strheq	r3, [r4, #2558]	@ movhi
+	.loc 2 1079 0
+	cmp	r5, #3
+	bls	.L1358
+	.loc 2 1080 0
+	mov	r2, r5
+	ldr	r1, [r4, #3228]
+	ldr	r0, .L1369+12
+	bl	printk
+.LVL1153:
+.L1364:
+	b	.L1364
+.L1360:
+	.loc 2 1086 0
+	cmp	r3, #1
+	beq	.L1358
+	.loc 2 1089 0
+	movw	r3, #65535
+	cmp	r7, r3
+	beq	.L1365
+	.loc 2 1090 0
+	movs	r1, #1
+	mov	r0, r7
+	bl	FtlFreeSysBlkQueueIn
+.LVL1154:
+.L1365:
+	.loc 2 1092 0
+	movs	r0, #0
+	pop	{r4, r5, r6, r7, r8, r9, r10, pc}
+.LVL1155:
+.L1370:
+	.align	2
+.L1369:
+	.word	.LANCHOR0
+	.word	1179929683
+	.word	1342177344
+	.word	.LC97
+	.word	.LANCHOR1+454
+	.word	.LC1
+.LFE219:
+	.fnend
+	.size	FtlVpcTblFlush, .-FtlVpcTblFlush
+	.align	1
+	.global	FtlVpcCheckAndModify
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlVpcCheckAndModify, %function
+FtlVpcCheckAndModify:
+	.fnstart
+.LFB239:
+	.loc 2 2192 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
+	.save {r4, r5, r6, r7, r8, r9, lr}
+	.pad #12
+.LCFI162:
+	.loc 2 2199 0
+	movs	r5, #0
+.LVL1156:
+	.loc 2 2198 0
+	ldr	r4, .L1383
+	.loc 2 2197 0
+	ldr	r1, .L1383+4
+	ldr	r0, .L1383+8
+	bl	printk
+.LVL1157:
+	.loc 2 2198 0
+	ldrh	r2, [r4, #18]
+	movs	r1, #0
+	ldr	r0, [r4, #3824]
+	lsls	r2, r2, #1
+	bl	ftl_memset
+.LVL1158:
+.L1372:
+	.loc 2 2199 0 discriminator 1
+	ldr	r3, [r4, #2436]
+	cmp	r5, r3
+	bcc	.L1374
+	.loc 2 2209 0 discriminator 1
+	ldr	r9, .L1383+12
+	movs	r7, #0
+	.loc 2 2207 0 discriminator 1
+	movw	r8, #65535
+.LVL1159:
+.L1375:
+	.loc 2 2206 0 discriminator 1
+	ldrh	r3, [r4, #16]
+	uxth	r5, r7
+.LVL1160:
+	cmp	r3, r5
+	bhi	.L1379
+	.loc 2 2218 0
+	add	sp, sp, #12
+.LCFI163:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, pc}
+.LVL1161:
+.L1374:
+.LCFI164:
+	.loc 2 2200 0
+	movs	r2, #0
+	add	r1, sp, #4
+	mov	r0, r5
+	bl	log2phys
+.LVL1162:
+	.loc 2 2201 0
+	ldr	r0, [sp, #4]
+	adds	r3, r0, #1
+	beq	.L1373
+	.loc 2 2202 0
+	ubfx	r0, r0, #10, #16
+	bl	P2V_block_in_plane
+.LVL1163:
+	.loc 2 2203 0
+	ldr	r2, [r4, #3824]
+	ldrh	r3, [r2, r0, lsl #1]
+	adds	r3, r3, #1
+	strh	r3, [r2, r0, lsl #1]	@ movhi
+.L1373:
+	.loc 2 2199 0 discriminator 2
+	adds	r5, r5, #1
+	b	.L1372
+.LVL1164:
+.L1379:
+	.loc 2 2207 0
+	ldr	r3, [r4, #2260]
+	uxth	r6, r7
+	ldrh	r2, [r3, r6, lsl #1]
+	ldr	r3, [r4, #3824]
+	ldrh	r3, [r3, r6, lsl #1]
+	cmp	r2, r3
+	beq	.L1377
+	.loc 2 2207 0 is_stmt 0 discriminator 1
+	cmp	r2, r8
+	beq	.L1377
+	.loc 2 2209 0 is_stmt 1
+	mov	r1, r6
+	mov	r0, r9
+	bl	printk
+.LVL1165:
+	.loc 2 2210 0
+	ldrh	r3, [r4, #2280]
+	cmp	r3, r5
+	beq	.L1377
+	.loc 2 2210 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #2376]
+	cmp	r3, r5
+	beq	.L1377
+	.loc 2 2210 0 discriminator 2
+	ldrh	r3, [r4, #2328]
+	cmp	r3, r5
+	beq	.L1377
+	.loc 2 2211 0 is_stmt 1
+	ldr	r3, [r4, #3824]
+	.loc 2 2212 0
+	mov	r0, r5
+	.loc 2 2211 0
+	ldrh	r2, [r3, r6, lsl #1]
+	ldr	r3, [r4, #2260]
+	strh	r2, [r3, r6, lsl #1]	@ movhi
+	.loc 2 2212 0
+	bl	update_vpc_list
+.LVL1166:
+	.loc 2 2213 0
+	bl	l2p_flush
+.LVL1167:
+	.loc 2 2214 0
+	bl	FtlVpcTblFlush
+.LVL1168:
+.L1377:
+	adds	r7, r7, #1
+	b	.L1375
+.L1384:
+	.align	2
+.L1383:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+469
+	.word	.LC87
+	.word	.LC98
+.LFE239:
+	.fnend
+	.size	FtlVpcCheckAndModify, .-FtlVpcCheckAndModify
+	.align	1
+	.global	allocate_new_data_superblock
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	allocate_new_data_superblock, %function
+allocate_new_data_superblock:
+	.fnstart
+.LFB249:
+	.loc 2 2631 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL1169:
+	push	{r4, r5, r6, lr}
+	.save {r4, r5, r6, lr}
+.LCFI165:
+	.loc 2 2631 0
+	mov	r6, r0
+	.loc 2 2633 0
+	ldr	r4, .L1395
+	.loc 2 2632 0
+	ldrh	r5, [r0]
+.LVL1170:
+	.loc 2 2633 0
+	ldrh	r3, [r4, #16]
+	cmp	r3, r5
+	bcs	.L1386
+	.loc 2 2633 0 is_stmt 0 discriminator 1
+	movw	r2, #2633
+	ldr	r1, .L1395+4
+	ldr	r0, .L1395+8
+	bl	printk
+.LVL1171:
+.L1386:
+	.loc 2 2635 0 is_stmt 1
+	movw	r3, #65535
+	cmp	r5, r3
+	beq	.L1387
+	.loc 2 2636 0
+	ldr	r3, [r4, #2260]
+	.loc 2 2637 0
+	mov	r0, r5
+	.loc 2 2636 0
+	ldrh	r3, [r3, r5, lsl #1]
+	cbz	r3, .L1388
+	.loc 2 2637 0
+	bl	INSERT_DATA_LIST
+.LVL1172:
+.L1387:
+	.loc 2 2642 0
+	ldrh	r0, [r4, #3952]
+	.loc 2 2641 0
+	movs	r3, #1
+	strb	r3, [r6, #8]
+	.loc 2 2642 0
+	movw	r3, #65535
+	cmp	r0, r3
+	beq	.L1389
+	.loc 2 2643 0
+	cmp	r5, r0
+	bne	.L1390
+	.loc 2 2643 0 is_stmt 0 discriminator 1
+	ldr	r3, [r4, #2260]
+	ldrh	r3, [r3, r0, lsl #1]
+	cbz	r3, .L1391
+.L1390:
+	.loc 2 2644 0 is_stmt 1
+	bl	update_vpc_list
+.LVL1173:
+.L1391:
+	.loc 2 2645 0
+	movw	r3, #65535
+	strh	r3, [r4, #3952]	@ movhi
+.L1389:
+	.loc 2 2647 0
+	mov	r0, r6
+	bl	allocate_data_superblock
+.LVL1174:
+	.loc 2 2648 0
+	bl	l2p_flush
+.LVL1175:
+	.loc 2 2649 0
+	movs	r0, #0
+	bl	FtlEctTblFlush
+.LVL1176:
+	.loc 2 2650 0
+	bl	FtlVpcTblFlush
+.LVL1177:
+	.loc 2 2652 0
+	movs	r0, #0
+	pop	{r4, r5, r6, pc}
+.LVL1178:
+.L1388:
+	.loc 2 2639 0
+	bl	INSERT_FREE_LIST
+.LVL1179:
+	b	.L1387
+.L1396:
+	.align	2
+.L1395:
+	.word	.LANCHOR0
+	.word	.LANCHOR1+490
+	.word	.LC1
+.LFE249:
+	.fnend
+	.size	allocate_new_data_superblock, .-allocate_new_data_superblock
+	.align	1
+	.global	FtlProgPages
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlProgPages, %function
+FtlProgPages:
+	.fnstart
+.LFB165:
+	.loc 3 902 0
+	@ args = 0, pretend = 0, frame = 16
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL1180:
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI166:
+	.loc 3 911 0
+	movs	r7, #0
+.LVL1181:
+	ldr	r6, .L1411
+	.loc 3 902 0
+	.pad #20
+	sub	sp, sp, #20
+.LCFI167:
+	.loc 3 902 0
+	mov	r4, r3
+	.loc 3 909 0
+	movs	r2, #0
+.LVL1182:
+	.loc 3 931 0
+	ldr	r10, .L1411+8
+	.loc 3 902 0
+	mov	r5, r0
+	.loc 3 931 0
+	ldr	fp, .L1411+12
+	.loc 3 902 0
+	mov	r9, r1
+	.loc 3 909 0
+	ldrb	r3, [r3, #9]	@ zero_extendqisi2
+.LVL1183:
+	bl	FlashProgPages
+.LVL1184:
+.L1398:
+	.loc 3 911 0 discriminator 1
+	cmp	r7, r9
+	beq	.L1405
+	.loc 3 917 0
+	mov	r8, #0
+	b	.L1406
+.LVL1185:
+.L1401:
+	.loc 3 913 0
+	ldr	r0, [r5, #4]
+	ubfx	r0, r0, #10, #16
+	bl	P2V_block_in_plane
+.LVL1186:
+	.loc 3 914 0
+	ldrh	r3, [r4]
+	cmp	r3, r0
+	bne	.L1399
+	.loc 3 915 0
+	ldr	r1, [r6, #2260]
+	ldrh	r0, [r4, #4]
+	ldrh	r2, [r1, r3, lsl #1]
+	subs	r2, r2, r0
+	strh	r2, [r1, r3, lsl #1]	@ movhi
+	.loc 3 916 0
+	ldrh	r3, [r6, #78]
+	.loc 3 917 0
+	strb	r8, [r4, #6]
+	.loc 3 918 0
+	strh	r8, [r4, #4]	@ movhi
+	.loc 3 916 0
+	strh	r3, [r4, #2]	@ movhi
+.L1399:
+	.loc 3 920 0
+	ldrh	r3, [r4, #4]
+	cbnz	r3, .L1400
+	.loc 3 921 0
+	mov	r0, r4
+	bl	allocate_new_data_superblock
+.LVL1187:
+.L1400:
+	.loc 3 924 0
+	ldr	r3, [r6, #2712]
+	adds	r3, r3, #1
+	str	r3, [r6, #2712]
+	.loc 3 925 0
+	ldr	r0, [r5, #4]
+	ubfx	r0, r0, #10, #16
+	bl	FtlGcMarkBadPhyBlk
+.LVL1188:
+	.loc 3 926 0
+	mov	r0, r4
+	bl	get_new_active_ppa
+.LVL1189:
+	.loc 3 928 0
+	movs	r2, #0
+	.loc 3 927 0
+	str	r0, [r5, #4]
+	.loc 3 926 0
+	str	r0, [sp, #12]
+	.loc 3 928 0
+	movs	r1, #1
+	ldrb	r3, [r4, #9]	@ zero_extendqisi2
+	mov	r0, r5
+	bl	FlashProgPages
+.LVL1190:
+.L1406:
+	.loc 3 912 0
+	ldr	r3, [r5]
+.LVL1191:
+	adds	r3, r3, #1
+	beq	.L1401
+	.loc 3 931 0
+	ldrb	r2, [r4, #6]	@ zero_extendqisi2
+	ldrh	r3, [r6, #8]
+	cmp	r2, r3
+	bcc	.L1402
+	.loc 3 931 0 is_stmt 0 discriminator 1
+	movw	r2, #931
+	mov	r1, r10
+	mov	r0, fp
+	bl	printk
+.LVL1192:
+.L1402:
+	.loc 3 932 0 is_stmt 1
+	ldr	r3, [r5, #4]
+	add	r1, sp, #16
+	.loc 3 933 0
+	movs	r2, #1
+	ldr	r0, [r5, #16]
+	.loc 3 932 0
+	str	r3, [r1, #-4]!
+.LVL1193:
+	.loc 3 933 0
+	bl	log2phys
+.LVL1194:
+	.loc 3 935 0
+	ldr	r3, [r5, #12]
+	ldr	r3, [r3, #12]
+.LVL1195:
+	.loc 3 937 0
+	ubfx	r0, r3, #10, #16
+	str	r3, [sp, #4]
+	bl	P2V_block_in_plane
+.LVL1196:
+	.loc 3 938 0
+	ldr	r3, [sp, #4]
+.LVL1197:
+	.loc 3 937 0
+	mov	r8, r0
+	.loc 3 938 0
+	adds	r3, r3, #1
+	beq	.L1403
+	.loc 3 940 0
+	ldr	r3, [r6, #2260]
+.LVL1198:
+	ldrh	r2, [r3, r0, lsl #1]
+	cbnz	r2, .L1404
+	.loc 3 941 0
+	mov	r1, r0
+	ldr	r0, .L1411+4
+	bl	printk
+.LVL1199:
+.L1404:
+	.loc 3 942 0
+	mov	r0, r8
+	bl	decrement_vpc_count
+.LVL1200:
+.L1403:
+	.loc 3 911 0 discriminator 2
+	adds	r7, r7, #1
+	adds	r5, r5, #20
+	b	.L1398
+.LVL1201:
+.L1405:
+	.loc 3 946 0
+	ldrb	r2, [r4, #6]	@ zero_extendqisi2
+	ldrh	r3, [r6, #8]
+.LVL1202:
+	cmp	r2, r3
+	bcc	.L1397
+	.loc 3 946 0 is_stmt 0 discriminator 1
+	movw	r2, #946
+	ldr	r1, .L1411+8
+	ldr	r0, .L1411+12
+	bl	printk
+.LVL1203:
+.L1397:
+	.loc 3 947 0 is_stmt 1
+	add	sp, sp, #20
+.LCFI168:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL1204:
+.L1412:
+	.align	2
+.L1411:
+	.word	.LANCHOR0
+	.word	.LC99
+	.word	.LANCHOR1+519
+	.word	.LC1
+.LFE165:
+	.fnend
+	.size	FtlProgPages, .-FtlProgPages
+	.align	1
+	.global	FtlCacheWriteBack
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlCacheWriteBack, %function
+FtlCacheWriteBack:
+	.fnstart
+.LFB166:
+	.loc 3 950 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, lr}
+	.save {r4, lr}
+.LCFI169:
+	.loc 3 951 0
+	ldr	r4, .L1418
+	ldr	r0, [r4, #3948]
+	cbz	r0, .L1414
+	.loc 3 952 0
+	ldr	r3, .L1418+4
+	movs	r2, #0
+	movs	r1, #1
+	ldr	r3, [r3, #-236]
+	bl	FtlProgPages
+.LVL1205:
+	.loc 3 953 0
+	movs	r3, #0
+	str	r3, [r4, #3948]
+.L1414:
+	.loc 3 956 0
+	movs	r0, #0
+	pop	{r4, pc}
+.L1419:
+	.align	2
+.L1418:
+	.word	.LANCHOR0
+	.word	.LANCHOR3
+.LFE166:
+	.fnend
+	.size	FtlCacheWriteBack, .-FtlCacheWriteBack
+	.align	1
+	.global	FtlSysFlush
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlSysFlush, %function
+FtlSysFlush:
+	.fnstart
+.LFB162:
+	.loc 3 797 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r3, lr}
+	.save {r3, lr}
+.LCFI170:
+	.loc 3 798 0
+	bl	FtlCacheWriteBack
+.LVL1206:
+	.loc 3 799 0
+	bl	l2p_flush
+.LVL1207:
+	.loc 3 800 0
+	movs	r0, #1
+	bl	FtlEctTblFlush
+.LVL1208:
+	.loc 3 801 0
+	bl	FtlVpcTblFlush
+.LVL1209:
+	.loc 3 803 0
+	movs	r0, #0
+	pop	{r3, pc}
+.LFE162:
+	.fnend
+	.size	FtlSysFlush, .-FtlSysFlush
+	.align	1
+	.global	sftl_deinit
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	sftl_deinit, %function
+sftl_deinit:
+	.fnstart
+.LFB163:
+	.loc 3 806 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r3, lr}
+	.save {r3, lr}
+.LCFI171:
+	.loc 3 807 0
+	ldr	r3, .L1423
+	ldr	r3, [r3]
+	cmp	r3, #1
+	bne	.L1422
+	.loc 3 808 0
+	bl	FtlSysFlush
+.LVL1210:
+.L1422:
+	.loc 3 810 0
+	movs	r0, #0
+	pop	{r3, pc}
+.L1424:
+	.align	2
+.L1423:
+	.word	.LANCHOR2
+.LFE163:
+	.fnend
+	.size	sftl_deinit, .-sftl_deinit
+	.align	1
+	.global	FtlDiscard
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlDiscard, %function
+FtlDiscard:
+	.fnstart
+.LFB168:
+	.loc 3 1154 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL1211:
+	push	{r0, r1, r4, r5, r6, r7, r8, lr}
+	.save {r4, r5, r6, r7, r8, lr}
+	.pad #8
+.LCFI172:
+.LVL1212:
+	.loc 3 1161 0
+	adds	r2, r0, r1
+	ldr	r6, .L1440
+	.loc 3 1154 0
+	mov	r7, r0
+	mov	r5, r1
+	.loc 3 1161 0
+	ldr	r3, [r6, #116]
+	cmp	r2, r3
+	bhi	.L1433
+	.loc 3 1164 0
+	cmp	r1, #31
+	bhi	.L1427
+.LVL1213:
+.L1432:
+	.loc 3 1165 0
+	movs	r0, #0
+.L1425:
+	.loc 3 1198 0
+	add	sp, sp, #8
+.LCFI173:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, pc}
+.LVL1214:
+.L1427:
+.LCFI174:
+	.loc 3 1167 0
+	bl	FtlCacheWriteBack
+.LVL1215:
+	.loc 3 1169 0
+	ldrh	r4, [r6, #34]
+	mov	r0, r7
+	mov	r1, r4
+	bl	__aeabi_uidiv
+.LVL1216:
+	.loc 3 1170 0
+	smulbb	r3, r0, r4
+	.loc 3 1169 0
+	mov	r8, r0
+.LVL1217:
+	.loc 3 1170 0
+	subs	r7, r7, r3
+.LVL1218:
+	uxth	r7, r7
+.LVL1219:
+	.loc 3 1171 0
+	cbz	r7, .L1428
+	.loc 3 1172 0
+	subs	r4, r4, r7
+	.loc 3 1173 0
+	add	r8, r0, #1
+	.loc 3 1172 0
+	cmp	r4, r5
+	it	cs
+	movcs	r4, r5
+	uxth	r4, r4
+	.loc 3 1174 0
+	subs	r5, r5, r4
+.L1428:
+	.loc 3 1181 0
+	ldr	r4, .L1440+4
+	.loc 3 1177 0
+	mov	r3, #-1
+	str	r3, [sp, #4]
+.LVL1220:
+.L1429:
+	.loc 3 1178 0
+	ldrh	r3, [r6, #34]
+	cmp	r5, r3
+	bcs	.L1431
+	.loc 3 1191 0
+	ldr	r3, .L1440+4
+	ldr	r2, [r3, #-232]
+	cmp	r2, #32
+	bls	.L1432
+	.loc 3 1193 0
+	movs	r4, #0
+	str	r4, [r3, #-232]
+	.loc 3 1194 0
+	bl	l2p_flush
+.LVL1221:
+	.loc 3 1195 0
+	bl	FtlVpcTblFlush
+.LVL1222:
+	b	.L1432
+.L1431:
+	.loc 3 1179 0
+	movs	r2, #0
+	mov	r1, sp
+	mov	r0, r8
+	bl	log2phys
+.LVL1223:
+	.loc 3 1180 0
+	ldr	r3, [sp]
+	adds	r3, r3, #1
+.LVL1224:
+	beq	.L1430
+	.loc 3 1181 0
+	ldr	r3, [r4, #-232]
+.LVL1225:
+	.loc 3 1183 0
+	movs	r2, #1
+	add	r1, sp, #4
+	mov	r0, r8
+	.loc 3 1181 0
+	adds	r3, r3, #1
+	str	r3, [r4, #-232]
+	.loc 3 1182 0
+	ldr	r3, [r6, #2444]
+	adds	r3, r3, #1
+	str	r3, [r6, #2444]
+	.loc 3 1183 0
+	bl	log2phys
+.LVL1226:
+	.loc 3 1184 0
+	ldr	r0, [sp]
+	ubfx	r0, r0, #10, #16
+	bl	P2V_block_in_plane
+.LVL1227:
+	.loc 3 1185 0
+	bl	decrement_vpc_count
+.LVL1228:
+.L1430:
+	.loc 3 1188 0
+	ldrh	r3, [r6, #34]
+.LVL1229:
+	.loc 3 1187 0
+	add	r8, r8, #1
+	.loc 3 1188 0
+	subs	r5, r5, r3
+	b	.L1429
+.LVL1230:
+.L1433:
+	.loc 3 1162 0
+	mov	r0, #-1
+	b	.L1425
+.L1441:
+	.align	2
+.L1440:
+	.word	.LANCHOR0
+	.word	.LANCHOR3
+.LFE168:
+	.fnend
+	.size	FtlDiscard, .-FtlDiscard
+	.align	1
+	.global	FtlGcFreeTempBlock
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlGcFreeTempBlock, %function
+FtlGcFreeTempBlock:
+	.fnstart
+.LFB258:
+	.loc 5 112 0
+	@ args = 0, pretend = 0, frame = 8
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL1231:
+	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.pad #12
+.LCFI175:
+.LVL1232:
+	.loc 5 119 0
+	movw	r2, #65535
+	.loc 5 115 0
+	ldr	r4, .L1468
+	.loc 5 119 0
+	ldrh	r5, [r4, #2376]
+	.loc 5 115 0
+	ldrh	r1, [r4, #78]
+.LVL1233:
+	.loc 5 119 0
+	cmp	r5, r2
+	bne	.L1443
+.LVL1234:
+.L1453:
+	.loc 5 153 0
+	ldrh	r2, [r4, #2376]
+	.loc 5 152 0
+	movs	r3, #0
+	str	r3, [r4, #3960]
+	.loc 5 153 0
+	movw	r3, #65535
+	cmp	r2, r3
+	bne	.L1466
+.L1444:
+	.loc 5 154 0
+	movs	r0, #0
+.L1442:
+	.loc 5 199 0
+	add	sp, sp, #12
+.LCFI176:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL1235:
+.L1443:
+.LCFI177:
+	.loc 5 121 0
+	cbz	r0, .L1446
+	.loc 5 123 0
+	ldr	r3, .L1468+4
+	ldrh	r0, [r3, #4]
+.LVL1236:
+	cmp	r0, r2
+	beq	.L1447
+.L1448:
+	.loc 5 122 0
+	movs	r1, #2
+.LVL1237:
+.L1446:
+	.loc 5 131 0
+	ldr	r0, .L1468+8
+.LVL1238:
+	bl	FtlGcScanTempBlk
+.LVL1239:
+	str	r0, [sp, #4]
+.LVL1240:
+	.loc 5 132 0
+	adds	r0, r0, #1
+	beq	.L1449
+	.loc 5 135 0
+	ldr	r2, [r4, #2248]
+	ldrh	r3, [r2, r5, lsl #1]
+	cmp	r3, #4
+	bls	.L1450
+	.loc 5 136 0
+	subs	r3, r3, #5
+	.loc 5 137 0
+	movs	r0, #1
+	.loc 5 136 0
+	strh	r3, [r2, r5, lsl #1]	@ movhi
+	.loc 5 137 0
+	bl	FtlEctTblFlush
+.LVL1241:
+.L1450:
+	.loc 5 139 0
+	ldr	r3, [r4, #3960]
+	cbnz	r3, .L1451
+	.loc 5 140 0
+	ldr	r3, [r4, #2712]
+	.loc 5 141 0
+	ldr	r0, [sp, #4]
+	.loc 5 140 0
+	adds	r3, r3, #1
+	.loc 5 141 0
+	ubfx	r0, r0, #10, #16
+	.loc 5 140 0
+	str	r3, [r4, #2712]
+	.loc 5 141 0
+	bl	FtlBbmMapBadBlock
+.LVL1242:
+	.loc 5 142 0
+	bl	FtlBbmTblFlush
+.LVL1243:
+.L1451:
+	.loc 5 144 0
+	movs	r3, #0
+	str	r3, [r4, #3960]
+.L1462:
+	.loc 5 149 0
+	movs	r0, #1
+	b	.L1442
+.LVL1244:
+.L1447:
+	.loc 5 124 0
+	movs	r2, #0
+	strh	r2, [r3, #4]	@ movhi
+	.loc 5 125 0
+	ldrh	r3, [r4, #2276]
+	cmp	r3, #17
+	bhi	.L1448
+	b	.L1446
+.LVL1245:
+.L1449:
+	.loc 5 148 0
+	ldr	r3, .L1468+4
+	ldrh	r2, [r3, #4]
+	movw	r3, #65535
+	cmp	r2, r3
+	bne	.L1462
+	b	.L1453
+.LVL1246:
+.L1466:
+	.loc 5 160 0
+	bl	FtlCacheWriteBack
+.LVL1247:
+	.loc 5 162 0
+	ldrb	r1, [r4, #2383]	@ zero_extendqisi2
+	ldrh	r3, [r4, #78]
+	ldrh	r2, [r4, #3180]
+	muls	r3, r1, r3
+	cmp	r2, r3
+	beq	.L1454
+	.loc 5 162 0 is_stmt 0 discriminator 1
+	movs	r2, #162
+	ldr	r1, .L1468+12
+	ldr	r0, .L1468+16
+	bl	printk
+.LVL1248:
+.L1454:
+	.loc 5 163 0 is_stmt 1
+	ldrb	r3, [r4, #2383]	@ zero_extendqisi2
+	.loc 5 165 0
+	movs	r6, #0
+	.loc 5 163 0
+	ldrh	r0, [r4, #78]
+	.loc 5 166 0
+	mov	r9, #12
+	.loc 5 163 0
+	ldr	r2, [r4, #2260]
+	ldrh	r1, [r4, #2376]
+	.loc 5 168 0
+	ldr	r10, .L1468+12
+	.loc 5 163 0
+	smulbb	r3, r3, r0
+	.loc 5 168 0
+	ldr	fp, .L1468+16
+	.loc 5 163 0
+	strh	r3, [r2, r1, lsl #1]	@ movhi
+	.loc 5 164 0
+	ldr	r2, [r4, #2460]
+	ldrh	r3, [r4, #3180]
+	add	r3, r3, r2
+	str	r3, [r4, #2460]
+.LVL1249:
+.L1455:
+	.loc 5 165 0 discriminator 1
+	ldrh	r2, [r4, #3180]
+	uxth	r3, r6
+	cmp	r2, r3
+	bhi	.L1459
+	.loc 5 181 0
+	movw	r0, #65535
+	bl	decrement_vpc_count
+.LVL1250:
+	.loc 5 182 0
+	ldrh	r0, [r4, #2376]
+	ldr	r3, [r4, #2260]
+	ldrh	r3, [r3, r0, lsl #1]
+	cmp	r3, #0
+	beq	.L1460
+	.loc 5 183 0
+	bl	INSERT_DATA_LIST
+.LVL1251:
+.L1461:
+	.loc 5 187 0
+	movs	r5, #0
+.LVL1252:
+	.loc 5 186 0
+	movw	r6, #65535
+	strh	r6, [r4, #2376]	@ movhi
+	.loc 5 187 0
+	strh	r5, [r4, #3180]	@ movhi
+	.loc 5 188 0
+	strh	r5, [r4, #3172]	@ movhi
+	.loc 5 189 0
+	bl	l2p_flush
+.LVL1253:
+	.loc 5 190 0
+	bl	FtlVpcTblFlush
+.LVL1254:
+	.loc 5 191 0
+	ldrh	r3, [r4, #2552]
+	ldrh	r2, [r4, #2276]
+	add	r3, r3, r3, lsl #1
+	cmp	r2, r3, asr #2
+	ble	.L1444
+	.loc 5 193 0
+	movs	r3, #20
+	.loc 5 192 0
+	strh	r6, [r4, #2568]	@ movhi
+	.loc 5 193 0
+	strh	r3, [r4, #3128]	@ movhi
+	b	.L1444
+.LVL1255:
+.L1459:
+	.loc 5 166 0
+	uxth	r7, r6
+	ldr	r8, [r4, #3176]
+	.loc 5 168 0
+	ldr	r3, [r4, #2436]
+	.loc 5 166 0
+	mul	r7, r9, r7
+	add	r5, r8, r7
+	.loc 5 168 0
+	ldr	r2, [r5, #8]
+	cmp	r2, r3
+	bcc	.L1456
+	.loc 5 168 0 is_stmt 0 discriminator 1
+	movs	r2, #168
+	mov	r1, r10
+	mov	r0, fp
+	bl	printk
+.LVL1256:
+.L1456:
+	.loc 5 169 0 is_stmt 1
+	movs	r2, #0
+	add	r1, sp, #4
+	ldr	r0, [r5, #8]
+	bl	log2phys
+.LVL1257:
+	.loc 5 170 0
+	ldr	r3, [sp, #4]
+	ldr	r0, [r8, r7]
+	cmp	r0, r3
+	bne	.L1457
+	.loc 5 171 0
+	ubfx	r0, r0, #10, #16
+	bl	P2V_block_in_plane
+.LVL1258:
+	.loc 5 172 0
+	movs	r2, #1
+	.loc 5 171 0
+	mov	r7, r0
+	.loc 5 172 0
+	adds	r1, r5, #4
+	ldr	r0, [r5, #8]
+	bl	log2phys
+.LVL1259:
+	.loc 5 173 0
+	mov	r0, r7
+.L1467:
+	.loc 5 177 0
+	bl	decrement_vpc_count
+.LVL1260:
+.L1458:
+	adds	r6, r6, #1
+	b	.L1455
+.L1457:
+	.loc 5 175 0
+	ldr	r2, [r5, #4]
+	cmp	r3, r2
+	beq	.L1458
+	.loc 5 177 0
+	ldrh	r0, [r4, #2376]
+	b	.L1467
+.L1460:
+	.loc 5 185 0
+	bl	INSERT_FREE_LIST
+.LVL1261:
+	b	.L1461
+.L1469:
+	.align	2
+.L1468:
+	.word	.LANCHOR0
+	.word	.LANCHOR2
+	.word	.LANCHOR0+2376
+	.word	.LANCHOR1+532
+	.word	.LC1
+.LFE258:
+	.fnend
+	.size	FtlGcFreeTempBlock, .-FtlGcFreeTempBlock
+	.align	1
+	.global	FtlGcPageRecovery
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlGcPageRecovery, %function
+FtlGcPageRecovery:
+	.fnstart
+.LFB261:
+	.loc 5 289 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, lr}
+	.save {r4, lr}
+.LCFI178:
+	.loc 5 290 0
+	ldr	r4, .L1472
+	ldrh	r1, [r4, #78]
+	addw	r0, r4, #2376
+	bl	FtlGcScanTempBlk
+.LVL1262:
+	.loc 5 291 0
+	ldrh	r2, [r4, #2378]
+	ldrh	r3, [r4, #78]
+	cmp	r2, r3
+	bcc	.L1470
+.LBB491:
+.LBB492:
+	.loc 5 293 0
+	addw	r0, r4, #3864
+	bl	FtlMapBlkWriteDump_data
+.LVL1263:
+	.loc 5 294 0
+	movs	r0, #0
+	bl	FtlGcFreeTempBlock
+.LVL1264:
+	.loc 5 295 0
+	movs	r3, #0
+	str	r3, [r4, #3960]
+.L1470:
+	pop	{r4, pc}
+.L1473:
+	.align	2
+.L1472:
+	.word	.LANCHOR0
+.LBE492:
+.LBE491:
+.LFE261:
+	.fnend
+	.size	FtlGcPageRecovery, .-FtlGcPageRecovery
+	.align	1
+	.global	FtlPowerLostRecovery
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlPowerLostRecovery, %function
+FtlPowerLostRecovery:
+	.fnstart
+.LFB233:
+	.loc 2 2032 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, r5, r6, lr}
+	.save {r4, r5, r6, lr}
+.LCFI179:
+	.loc 2 2033 0
+	movs	r5, #0
+	ldr	r4, .L1475
+	.loc 2 2035 0
+	addw	r6, r4, #2280
+	.loc 2 2033 0
+	str	r5, [r4, #3972]
+	.loc 2 2035 0
+	mov	r0, r6
+	.loc 2 2037 0
+	addw	r4, r4, #2328
+	.loc 2 2035 0
+	bl	FtlRecoverySuperblock
+.LVL1265:
+	.loc 2 2036 0
+	mov	r0, r6
+	bl	FtlSlcSuperblockCheck
+.LVL1266:
+	.loc 2 2037 0
+	mov	r0, r4
+	bl	FtlRecoverySuperblock
+.LVL1267:
+	.loc 2 2038 0
+	mov	r0, r4
+	bl	FtlSlcSuperblockCheck
+.LVL1268:
+	.loc 2 2039 0
+	bl	FtlGcPageRecovery
+.LVL1269:
+	.loc 2 2040 0
+	movw	r0, #65535
+	bl	decrement_vpc_count
+.LVL1270:
+	.loc 2 2042 0
+	mov	r0, r5
+	pop	{r4, r5, r6, pc}
+.L1476:
+	.align	2
+.L1475:
+	.word	.LANCHOR0
+.LFE233:
+	.fnend
+	.size	FtlPowerLostRecovery, .-FtlPowerLostRecovery
+	.align	1
+	.global	Ftl_gc_temp_data_write_back
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	Ftl_gc_temp_data_write_back, %function
+Ftl_gc_temp_data_write_back:
+	.fnstart
+.LFB263:
+	.loc 5 316 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, r5, r6, lr}
+	.save {r4, r5, r6, lr}
+.LCFI180:
+	.loc 5 320 0
+	movs	r3, #0
+	ldr	r4, .L1484
+	.loc 5 321 0
+	movs	r5, #0
+	.loc 5 322 0
+	movs	r6, #20
+	.loc 5 320 0
+	mov	r2, r3
+	ldr	r1, [r4, #3144]
+	ldr	r0, [r4, #3796]
+	bl	FlashProgPages
+.LVL1271:
+.L1478:
+	.loc 5 321 0 discriminator 1
+	ldr	r1, [r4, #3144]
+	uxth	r3, r5
+	cmp	r1, r3
+	bhi	.L1481
+	.loc 5 335 0
+	ldr	r0, [r4, #3796]
+	bl	FtlGcBufFree
+.LVL1272:
+	.loc 5 337 0
+	ldrh	r3, [r4, #2380]
+	.loc 5 336 0
+	movs	r0, #0
+	str	r0, [r4, #3144]
+	.loc 5 337 0
+	cbnz	r3, .L1477
+	.loc 5 338 0
+	movs	r0, #1
+	bl	FtlGcFreeTempBlock
+.LVL1273:
+	b	.L1483
+.L1481:
+	.loc 5 322 0
+	muls	r3, r6, r3
+	ldr	r2, [r4, #3796]
+	adds	r5, r5, #1
+	adds	r1, r2, r3
+	ldr	r2, [r2, r3]
+	adds	r0, r2, #1
+	bne	.L1479
+	.loc 5 323 0
+	ldrh	r0, [r4, #2376]
+	movs	r5, #0
+	ldr	r1, [r4, #2260]
+	strh	r5, [r1, r0, lsl #1]	@ movhi
+	.loc 5 324 0
+	strh	r2, [r4, #2376]	@ movhi
+	.loc 5 325 0
+	ldr	r2, [r4, #2712]
+	adds	r2, r2, #1
+	str	r2, [r4, #2712]
+	.loc 5 326 0
+	ldr	r2, [r4, #3796]
+	add	r3, r3, r2
+	ldr	r0, [r3, #4]
+	ubfx	r0, r0, #10, #16
+	bl	FtlBbmMapBadBlock
+.LVL1274:
+	.loc 5 327 0
+	bl	FtlBbmTblFlush
+.LVL1275:
+	.loc 5 328 0
+	bl	FtlGcPageVarInit
+.LVL1276:
+.L1483:
+	.loc 5 339 0
+	movs	r0, #1
+.L1477:
+	.loc 5 342 0
+	pop	{r4, r5, r6, pc}
+.L1479:
+	.loc 5 331 0 discriminator 2
+	ldr	r3, [r1, #12]
+.LVL1277:
+	.loc 5 332 0 discriminator 2
+	ldr	r1, [r1, #4]
+	ldr	r2, [r3, #8]
+	ldr	r0, [r3, #12]
+	bl	FtlGcUpdatePage
+.LVL1278:
+	b	.L1478
+.L1485:
+	.align	2
+.L1484:
+	.word	.LANCHOR0
+.LFE263:
+	.fnend
+	.size	Ftl_gc_temp_data_write_back, .-Ftl_gc_temp_data_write_back
+	.align	1
+	.global	Ftl_get_new_temp_ppa
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	Ftl_get_new_temp_ppa, %function
+Ftl_get_new_temp_ppa:
+	.fnstart
+.LFB262:
+	.loc 5 300 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r3, r4, r5, lr}
+	.save {r3, r4, r5, lr}
+.LCFI181:
+	.loc 5 301 0
+	movw	r3, #65535
+	ldr	r4, .L1489
+	ldrh	r2, [r4, #2376]
+	cmp	r2, r3
+	beq	.L1487
+	.loc 5 301 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #2380]
+	cbnz	r3, .L1488
+.L1487:
+	.loc 5 302 0 is_stmt 1
+	bl	FtlCacheWriteBack
+.LVL1279:
+	.loc 5 303 0
+	movs	r0, #0
+	.loc 5 304 0
+	movs	r5, #0
+	.loc 5 303 0
+	bl	FtlGcFreeTempBlock
+.LVL1280:
+	.loc 5 305 0
+	ldr	r0, .L1489+4
+	.loc 5 304 0
+	strb	r5, [r4, #2384]
+	.loc 5 305 0
+	bl	allocate_data_superblock
+.LVL1281:
+	.loc 5 306 0
+	strh	r5, [r4, #3172]	@ movhi
+	.loc 5 307 0
+	strh	r5, [r4, #3180]	@ movhi
+	.loc 5 308 0
+	bl	l2p_flush
+.LVL1282:
+	.loc 5 309 0
+	mov	r0, r5
+	bl	FtlEctTblFlush
+.LVL1283:
+	.loc 5 310 0
+	bl	FtlVpcTblFlush
+.LVL1284:
+.L1488:
+	.loc 5 312 0
+	ldr	r0, .L1489+4
+	.loc 5 313 0
+	pop	{r3, r4, r5, lr}
+.LCFI182:
+	.loc 5 312 0
+	b	get_new_active_ppa
+.LVL1285:
+.L1490:
+	.align	2
+.L1489:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+2376
+.LFE262:
+	.fnend
+	.size	Ftl_get_new_temp_ppa, .-Ftl_get_new_temp_ppa
+	.align	1
+	.global	rk_ftl_garbage_collect
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	rk_ftl_garbage_collect, %function
+rk_ftl_garbage_collect:
+	.fnstart
+.LFB269:
+	.loc 5 470 0
+	@ args = 0, pretend = 0, frame = 24
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL1286:
+	.loc 5 478 0
+	ldr	r3, .L1610
+	.loc 5 470 0
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI183:
+	mov	r7, r0
+	.pad #36
+	sub	sp, sp, #36
+.LCFI184:
+	mov	r4, r3
+	.loc 5 478 0
+	ldr	r0, [r3, #3780]
+.LVL1287:
+	cmp	r0, #0
+	bne	.L1566
+	.loc 5 481 0
+	ldrh	r2, [r3, #2268]
+	cmp	r2, #47
+	bls	.L1491
+	.loc 5 485 0
+	ldr	r2, .L1610+4
+	ldrh	r1, [r2, #4]
+.LVL1288:
+	movw	r2, #65535
+	cmp	r1, r2
+	bne	.L1493
+.L1496:
+.LBB496:
+.LBB497:
+	.loc 5 489 0
+	ldrh	r2, [r4, #3184]
+	movw	r1, #65535
+	cmp	r2, r1
+	bne	.L1494
+.L1495:
+	.loc 5 496 0
+	ldr	r3, [r4, #3132]
+	.loc 5 497 0
+	movw	r5, #65535
+	ldrh	r1, [r4, #2568]
+	.loc 5 496 0
+	adds	r3, r3, #1
+	add	r3, r3, r7, lsl #7
+	.loc 5 497 0
+	cmp	r1, r5
+	.loc 5 496 0
+	str	r3, [r4, #3132]
+	.loc 5 497 0
+	bne	.L1497
+	ldrh	r2, [r4, #2376]
+	cmp	r2, r1
+	bne	.L1498
+	ldrh	r8, [r4, #3182]
+	cmp	r8, r2
+	bne	.L1499
+	.loc 5 498 0
+	ldrh	r2, [r4, #2276]
+	cmp	r2, #24
+	ite	cc
+	movcc	r2, #5120
+	movcs	r2, #1024
+	cmp	r3, r2
+	bls	.L1499
+.LBB498:
+	.loc 5 502 0
+	ldr	r3, .L1610+8
+	.loc 5 501 0
+	movs	r6, #0
+	str	r6, [r4, #3132]
+	.loc 5 502 0
+	strh	r6, [r3, #-228]	@ movhi
+	.loc 5 503 0
+	bl	GetSwlReplaceBlock
+.LVL1289:
+	.loc 5 504 0
+	cmp	r0, r8
+	.loc 5 503 0
+	mov	r5, r0
+	.loc 5 504 0
+	bne	.L1570
+	.loc 5 505 0
+	ldrh	r2, [r4, #2276]
+	ldrh	r3, [r4, #3130]
+	cmp	r2, r3
+	bcs	.L1502
+	.loc 5 506 0
+	movs	r0, #64
+	bl	List_get_gc_head_node
+.LVL1290:
+	.loc 5 507 0
+	uxth	r3, r0
+	cmp	r3, r5
+	beq	.L1504
+	.loc 5 508 0
+	mov	r0, r3
+	ldr	r3, [r4, #2260]
+	ldrh	r3, [r3, r0, lsl #1]
+	cmp	r3, #7
+	bhi	.L1505
+	.loc 5 509 0
+	mov	r0, r6
+	bl	List_get_gc_head_node
+.LVL1291:
+	uxth	r6, r0
+	.loc 5 510 0
+	movs	r3, #128
+	strh	r3, [r4, #3130]	@ movhi
+	.loc 5 520 0
+	cmp	r6, r5
+	beq	.L1504
+.L1501:
+	.loc 5 521 0
+	ldr	r3, [r4, #2260]
+	mov	r5, r6
+	ldrh	r1, [r4, #3128]
+	ldrh	r2, [r4, #2276]
+	ldrh	r3, [r3, r6, lsl #1]
+	str	r1, [sp, #4]
+	ldr	r1, [r4, #2248]
+	ldr	r0, .L1610+12
+	ldrh	r1, [r1, r6, lsl #1]
+	str	r1, [sp]
+	mov	r1, r6
+	bl	printk
+.LVL1292:
+	b	.L1504
+.L1493:
+.LBE498:
+.LBE497:
+.LBE496:
+	.loc 5 485 0 discriminator 1
+	ldrh	r3, [r3, #2376]
+	cmp	r3, r2
+	beq	.L1496
+	.loc 5 486 0
+	movs	r0, #1
+	bl	FtlGcFreeTempBlock
+.LVL1293:
+	cmp	r0, #0
+	beq	.L1496
+	.loc 5 487 0
+	movs	r0, #1
+	b	.L1491
+.L1494:
+.LBB504:
+.LBB501:
+	.loc 5 489 0
+	ldrh	r3, [r4, #3182]
+	cmp	r3, r1
+	.loc 5 490 0
+	itt	eq
+	strheq	r2, [r4, #3182]	@ movhi
+	.loc 5 491 0
+	strheq	r3, [r4, #3184]	@ movhi
+	b	.L1495
+.L1505:
+.LBB499:
+	.loc 5 512 0
+	movs	r3, #64
+.L1603:
+	.loc 5 516 0
+	strh	r3, [r4, #3130]	@ movhi
+.L1504:
+	.loc 5 523 0
+	bl	FtlGcReFreshBadBlk
+.LVL1294:
+.LBE499:
+	.loc 5 527 0
+	cmp	r7, #0
+	bne	.L1507
+	movw	r3, #65535
+	cmp	r5, r3
+	bne	.L1507
+.L1564:
+	.loc 5 528 0
+	ldrh	r3, [r4, #2276]
+	cmp	r3, #24
+	bhi	.L1571
+	.loc 5 530 0
+	cmp	r3, #16
+	ldrh	r6, [r4, #78]
+	bls	.L1509
+	.loc 5 531 0
+	lsrs	r6, r6, #5
+.LVL1295:
+.L1508:
+	.loc 5 539 0
+	ldrh	r2, [r4, #3128]
+	cmp	r2, r3
+	bcs	.L1512
+	.loc 5 540 0
+	ldrh	r3, [r4, #2376]
+	movw	r2, #65535
+	cmp	r3, r2
+	bne	.L1513
+	ldrh	r2, [r4, #3182]
+	cmp	r2, r3
+	bne	.L1513
+	.loc 5 542 0
+	ldr	r3, .L1610+8
+	ldrh	r0, [r3, #-228]
+	cbnz	r0, .L1514
+	ldr	r3, [r4, #2436]
+	ldr	r2, [r4, #2432]
+	add	r3, r3, r3, lsl #1
+	cmp	r2, r3, lsr #2
+	bcs	.L1515
+.L1514:
+	.loc 5 543 0
+	ldrh	r3, [r4, #2552]
+	add	r3, r3, r3, lsl #1
+	asrs	r3, r3, #2
+.L1604:
+	.loc 5 545 0
+	strh	r3, [r4, #3128]	@ movhi
+	.loc 5 546 0
+	movs	r3, #0
+	str	r3, [r4, #3140]
+.LVL1296:
+.L1491:
+.LBE501:
+.LBE504:
+	.loc 5 758 0
+	add	sp, sp, #36
+.LCFI185:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL1297:
+.L1502:
+.LCFI186:
+.LBB505:
+.LBB502:
+.LBB500:
+	.loc 5 516 0
+	movs	r3, #80
+	b	.L1603
+.L1570:
+	.loc 5 504 0
+	mov	r6, r0
+	b	.L1501
+.L1509:
+.LBE500:
+	.loc 5 532 0
+	cmp	r3, #12
+	bls	.L1510
+	.loc 5 533 0
+	lsrs	r6, r6, #4
+.LVL1298:
+	b	.L1508
+.LVL1299:
+.L1510:
+	.loc 5 534 0
+	cmp	r3, #8
+	bls	.L1508
+	.loc 5 535 0
+	lsrs	r6, r6, #2
+.LVL1300:
+	b	.L1508
+.LVL1301:
+.L1571:
+	.loc 5 529 0
+	movs	r6, #1
+.LVL1302:
+	b	.L1508
+.L1515:
+	.loc 5 545 0
+	movs	r3, #18
+	b	.L1604
+.L1513:
+	.loc 5 549 0
+	ldrh	r3, [r4, #2552]
+	add	r3, r3, r3, lsl #1
+	asrs	r3, r3, #2
+	strh	r3, [r4, #3128]	@ movhi
+.L1512:
+	.loc 5 551 0
+	ldrh	r3, [r4, #3186]
+	cbz	r3, .L1572
+	.loc 5 552 0
+	adds	r6, r6, #32
+.LVL1303:
+	uxth	r6, r6
+.LVL1304:
+.L1572:
+	.loc 5 551 0
+	movw	r5, #65535
+.L1518:
+	.loc 5 597 0
+	ldrh	r3, [r4, #2568]
+	movw	r2, #65535
+	cmp	r3, r2
+	bne	.L1527
+	.loc 5 598 0
+	cmp	r5, r3
+	beq	.L1528
+	.loc 5 599 0
+	strh	r5, [r4, #2568]	@ movhi
+.L1529:
+	.loc 5 611 0
+	ldrh	r0, [r4, #2568]
+	movw	r7, #65535
+.LVL1305:
+	.loc 5 610 0
+	movs	r3, #0
+	strb	r3, [r4, #2576]
+	.loc 5 611 0
+	cmp	r0, r7
+	beq	.L1527
+	.loc 5 612 0
+	bl	IsBlkInGcList
+.LVL1306:
+	cbz	r0, .L1532
+	.loc 5 613 0
+	strh	r7, [r4, #2568]	@ movhi
+.L1532:
+	.loc 5 615 0
+	ldrh	r2, [r4, #2568]
+	movw	r3, #65535
+	cmp	r2, r3
+	beq	.L1527
+	.loc 5 616 0
+	ldr	r0, .L1610+16
+	bl	make_superblock
+.LVL1307:
+	.loc 5 619 0
+	ldr	r2, .L1610+8
+	.loc 5 617 0
+	movs	r3, #0
+	strh	r3, [r4, #2570]	@ movhi
+	.loc 5 618 0
+	strb	r3, [r4, #2574]
+	.loc 5 619 0
+	strh	r3, [r2, #-226]	@ movhi
+	.loc 5 620 0
+	ldrh	r1, [r4, #2568]
+	ldr	r3, [r4, #2260]
+	ldrh	r3, [r3, r1, lsl #1]
+	strh	r3, [r2, #-224]	@ movhi
+.LVL1308:
+.L1527:
+	.loc 5 625 0
+	ldrh	r3, [r4, #2568]
+	ldrh	r2, [r4, #2280]
+	cmp	r2, r3
+	beq	.L1533
+	ldrh	r2, [r4, #2328]
+	cmp	r2, r3
+	beq	.L1533
+	.loc 5 666 0
+	ldr	r7, .L1610+8
+.LVL1309:
+.L1534:
+	.loc 5 631 0
+	ldrh	r9, [r4, #2568]
+	movw	r3, #65535
+	cmp	r9, r3
+	bne	.L1535
+	.loc 5 632 0
+	movs	r3, #0
+	.loc 5 647 0
+	mov	r10, r3
+.LVL1310:
+	.loc 5 632 0
+	str	r3, [r4, #3140]
+.L1536:
+	.loc 5 635 0
+	ldrh	r8, [r4, #3136]
+.LVL1311:
+	mov	r0, r8
+	bl	List_get_gc_head_node
+.LVL1312:
+	uxth	fp, r0
+	.loc 5 636 0
+	cmp	fp, r9
+	.loc 5 635 0
+	strh	fp, [r4, #2568]	@ movhi
+	.loc 5 636 0
+	bne	.L1537
+	.loc 5 637 0
+	movs	r3, #0
+	.loc 5 638 0
+	movs	r0, #8
+	.loc 5 637 0
+	strh	r3, [r4, #3136]	@ movhi
+	b	.L1491
+.LVL1313:
+.L1519:
+	.loc 5 558 0
+	movs	r3, #0
+	.loc 5 560 0
+	ldrh	r7, [r4, #2276]
+.LVL1314:
+	.loc 5 558 0
+	str	r3, [r4, #3140]
+	.loc 5 560 0
+	ldrh	r3, [r4, #3128]
+	ldr	r5, .L1610+8
+	cmp	r3, r7
+	bcs	.L1520
+	.loc 5 561 0
+	ldrh	r3, [r5, #-228]
+	cbnz	r3, .L1521
+	ldr	r3, [r4, #2436]
+	ldr	r2, [r4, #2432]
+	add	r3, r3, r3, lsl #1
+	cmp	r2, r3, lsr #2
+	bcs	.L1522
+.L1521:
+	.loc 5 562 0
+	ldrh	r3, [r4, #2552]
+	add	r3, r3, r3, lsl #1
+	asrs	r3, r3, #2
+.L1605:
+	.loc 5 564 0
+	strh	r3, [r4, #3128]	@ movhi
+.L1607:
+	.loc 5 578 0
+	bl	FtlReadRefresh
+.LVL1315:
+	.loc 5 579 0
+	ldrh	r0, [r5, #-228]
+	b	.L1491
+.L1522:
+	.loc 5 564 0
+	movs	r3, #18
+	b	.L1605
+.L1520:
+	.loc 5 572 0
+	ldrh	r0, [r5, #-228]
+	cmp	r0, #0
+	bne	.L1524
+	.loc 5 573 0
+	ldrh	r6, [r4, #2552]
+	add	r3, r6, r6, lsl #1
+	asrs	r3, r3, #2
+	strh	r3, [r4, #3128]	@ movhi
+	.loc 5 574 0
+	bl	List_get_gc_head_node
+.LVL1316:
+	.loc 5 575 0
+	ldr	r3, [r4, #2260]
+	uxth	r0, r0
+	ldrh	r1, [r4, #80]
+	ldrh	r2, [r3, r0, lsl #1]
+	ldrh	r3, [r4, #8]
+	muls	r3, r1, r3
+	add	r3, r3, r3, lsr #31
+	cmp	r2, r3, asr #1
+	ble	.L1525
+	.loc 5 576 0
+	subs	r6, r6, #1
+	.loc 5 575 0
+	cmp	r7, r6
+	bge	.L1607
+.L1525:
+	.loc 5 584 0
+	cmp	r2, #0
+	bne	.L1524
+	.loc 5 585 0
+	movw	r0, #65535
+	bl	decrement_vpc_count
+.LVL1317:
+	.loc 5 586 0
+	ldrh	r0, [r4, #2276]
+	adds	r0, r0, #1
+	b	.L1491
+.LVL1318:
+.L1528:
+	.loc 5 600 0
+	ldrh	r3, [r4, #3182]
+	cmp	r3, r5
+	beq	.L1529
+	.loc 5 604 0
+	ldr	r2, [r4, #2260]
+	ldrh	r3, [r2, r3, lsl #1]
+	cbnz	r3, .L1530
+	.loc 5 605 0
+	strh	r5, [r4, #3182]	@ movhi
+.L1530:
+	.loc 5 606 0
+	ldrh	r3, [r4, #3182]
+	strh	r3, [r4, #2568]	@ movhi
+	.loc 5 607 0
+	movw	r3, #65535
+	strh	r3, [r4, #3182]	@ movhi
+	b	.L1529
+.L1611:
+	.align	2
+.L1610:
+	.word	.LANCHOR0
+	.word	.LANCHOR2
+	.word	.LANCHOR3
+	.word	.LC100
+	.word	.LANCHOR0+2568
+.L1533:
+	.loc 5 626 0
+	movw	r3, #65535
+	strh	r3, [r4, #2568]	@ movhi
+.LVL1319:
+.L1608:
+	.loc 5 652 0
+	ldr	r3, .L1612
+	ldrh	r0, [r3, #-228]
+	b	.L1491
+.LVL1320:
+.L1537:
+	str	r0, [sp, #8]
+	.loc 5 640 0
+	mov	r0, fp
+	bl	IsBlkInGcList
+.LVL1321:
+	add	r8, r8, #1
+	ldr	r3, [sp, #8]
+	cbz	r0, .L1538
+	.loc 5 641 0
+	strh	r8, [r4, #3136]	@ movhi
+	b	.L1536
+.L1538:
+	.loc 5 645 0
+	uxth	r0, r3
+	ldrh	ip, [r4, #8]
+	ldrh	r3, [r4, #78]
+	.loc 5 644 0
+	uxth	r8, r8
+	.loc 5 645 0
+	ldr	r2, [r4, #2260]
+	.loc 5 644 0
+	strh	r8, [r4, #3136]	@ movhi
+	.loc 5 645 0
+	mul	r3, ip, r3
+	ldrh	r1, [r2, r0, lsl #1]
+	add	ip, r3, r3, lsr #31
+	cmp	r1, ip, asr #1
+	bgt	.L1540
+	.loc 5 646 0
+	cmp	r8, #48
+	bls	.L1541
+	cmp	r1, #8
+	bls	.L1541
+	ldrh	r1, [r4, #3172]
+	cmp	r1, #35
+	bhi	.L1541
+.L1540:
+	.loc 5 647 0
+	strh	r10, [r4, #3136]	@ movhi
+.L1541:
+	.loc 5 649 0
+	ldrh	r2, [r2, r0, lsl #1]
+	cmp	r3, r2
+	bgt	.L1542
+	cmp	r5, r9
+	bne	.L1542
+	.loc 5 651 0
+	movs	r3, #0
+	.loc 5 650 0
+	strh	r5, [r4, #2568]	@ movhi
+	.loc 5 651 0
+	strh	r3, [r4, #3136]	@ movhi
+	b	.L1608
+.L1542:
+	.loc 5 655 0
+	cbnz	r2, .L1543
+	.loc 5 656 0
+	movw	r0, #65535
+	bl	decrement_vpc_count
+.LVL1322:
+	.loc 5 657 0
+	ldrh	r3, [r4, #3136]
+	adds	r3, r3, #1
+	strh	r3, [r4, #3136]	@ movhi
+	b	.L1536
+.L1543:
+	.loc 5 660 0
+	movs	r3, #0
+	strb	r3, [r4, #2576]
+	.loc 5 662 0
+	ldrh	r3, [r4, #2280]
+	cmp	r3, fp
+	bne	.L1544
+	movw	r2, #662
+	ldr	r1, .L1612+4
+	ldr	r0, .L1612+8
+	bl	printk
+.LVL1323:
+.L1544:
+	.loc 5 663 0
+	ldrh	r2, [r4, #2568]
+	ldrh	r3, [r4, #2328]
+	cmp	r2, r3
+	bne	.L1545
+	movw	r2, #663
+	ldr	r1, .L1612+4
+	ldr	r0, .L1612+8
+	bl	printk
+.LVL1324:
+.L1545:
+	.loc 5 664 0
+	ldrh	r2, [r4, #2568]
+	ldrh	r3, [r4, #2376]
+	cmp	r2, r3
+	bne	.L1546
+	mov	r2, #664
+	ldr	r1, .L1612+4
+	ldr	r0, .L1612+8
+	bl	printk
+.LVL1325:
+.L1546:
+	.loc 5 665 0
+	ldr	r0, .L1612+12
+	bl	make_superblock
+.LVL1326:
+	.loc 5 667 0
+	ldrh	r1, [r4, #2568]
+	.loc 5 666 0
+	movs	r3, #0
+	.loc 5 667 0
+	ldr	r2, [r4, #2260]
+	.loc 5 666 0
+	strh	r3, [r7, #-226]	@ movhi
+	.loc 5 667 0
+	ldrh	r2, [r2, r1, lsl #1]
+	.loc 5 668 0
+	strh	r3, [r4, #2570]	@ movhi
+	.loc 5 669 0
+	strb	r3, [r4, #2574]
+	.loc 5 667 0
+	strh	r2, [r7, #-224]	@ movhi
+.LVL1327:
+.L1535:
+	.loc 5 675 0
+	bl	FtlReadRefresh
+.LVL1328:
+	.loc 5 678 0
+	movs	r3, #1
+	str	r3, [r4, #3780]
+	.loc 5 679 0
+	ldrh	r3, [r4, #78]
+.LVL1329:
+	str	r3, [sp, #12]
+	.loc 5 680 0
+	ldrh	r3, [r4, #2570]
+.LVL1330:
+	ldr	r1, [sp, #12]
+.LVL1331:
+	adds	r2, r3, r6
+	cmp	r2, r1
+	.loc 5 681 0
+	itt	gt
+	movgt	r2, r1
+	subgt	r6, r2, r3
+.LVL1332:
+	.loc 5 693 0
+	mov	r3, #0
+	.loc 5 681 0
+	it	gt
+	uxthgt	r6, r6
+.LVL1333:
+.L1606:
+	str	r3, [sp, #8]
+	.loc 5 683 0
+	ldrh	r3, [sp, #8]
+	cmp	r6, r3
+	bls	.L1556
+	.loc 5 688 0
+	ldr	r3, [sp, #8]
+	.loc 5 687 0
+	movw	r10, #65535
+.LVL1334:
+	.loc 5 688 0
+	ldrh	r1, [r4, #2570]
+	mov	fp, #20
+	.loc 5 685 0
+	ldrh	lr, [r4, #8]
+	.loc 5 688 0
+	ldr	r0, [r4, #3160]
+	add	r1, r1, r3
+	movs	r3, #0
+	ldr	ip, .L1612+16
+	mov	r8, r3
+	b	.L1557
+.LVL1335:
+.L1550:
+	.loc 5 686 0
+	ldrh	r2, [ip, #2]!
+.LVL1336:
+	.loc 5 687 0
+	cmp	r2, r10
+	beq	.L1549
+	.loc 5 688 0
+	mla	r9, fp, r8, r0
+	.loc 5 689 0
+	add	r8, r8, #1
+.LVL1337:
+	.loc 5 688 0
+	orr	r2, r1, r2, lsl #10
+.LVL1338:
+	.loc 5 689 0
+	uxth	r8, r8
+.LVL1339:
+	.loc 5 688 0
+	str	r2, [r9, #4]
+.LVL1340:
+.L1549:
+	adds	r3, r3, #1
+.LVL1341:
+.L1557:
+	.loc 5 685 0
+	uxth	r2, r3
+.LVL1342:
+	cmp	lr, r2
+	bhi	.L1550
+	.loc 5 693 0
+	mov	fp, #0
+	ldrb	r2, [r4, #2576]	@ zero_extendqisi2
+	mov	r1, r8
+	bl	FlashReadPages
+.LVL1343:
+.L1551:
+	.loc 5 695 0
+	uxth	r3, fp
+	cmp	r8, r3
+	bhi	.L1555
+	ldr	r3, [sp, #8]
+	adds	r3, r3, #1
+	b	.L1606
+.L1555:
+	mov	r9, #20
+	.loc 5 696 0
+	ldr	r3, [r4, #3160]
+	mul	r9, r9, fp
+	add	r2, r3, r9
+	.loc 5 697 0
+	ldr	r3, [r3, r9]
+	adds	r3, r3, #1
+	beq	.L1552
+	.loc 5 696 0
+	ldr	r10, [r2, #12]
+	.loc 5 697 0
+	movw	r3, #61589
+	ldrh	r2, [r10]
+	cmp	r2, r3
+	bne	.L1552
+	.loc 5 699 0
+	ldr	r3, [r10, #8]
+.LVL1344:
+	.loc 5 700 0
+	adds	r2, r3, #1
+	bne	.L1553
+	mov	r2, #700
+	ldr	r1, .L1612+4
+	ldr	r0, .L1612+8
+	str	r3, [sp, #16]
+	bl	printk
+.LVL1345:
+	ldr	r3, [sp, #16]
+.LVL1346:
+.L1553:
+	.loc 5 701 0
+	movs	r2, #0
+	mov	r0, r3
+	add	r1, sp, #28
+	bl	log2phys
+.LVL1347:
+	.loc 5 702 0
+	ldr	r0, [r4, #3160]
+	ldr	r3, [sp, #28]
+	add	r0, r0, r9
+	ldr	r2, [r0, #4]
+	cmp	r2, r3
+	bne	.L1552
+	.loc 5 704 0
+	ldrh	r3, [r7, #-226]
+	.loc 5 705 0
+	movs	r2, #20
+	ldr	r1, [r4, #3144]
+	str	r2, [sp, #20]
+	.loc 5 704 0
+	adds	r3, r3, #1
+	strh	r3, [r7, #-226]	@ movhi
+	.loc 5 705 0
+	ldr	r3, [r4, #3796]
+	mla	r3, r2, r1, r3
+	ldr	r1, [r0, #16]
+	str	r1, [r3, #16]
+	str	r3, [sp, #16]
+	.loc 5 706 0
+	bl	Ftl_get_new_temp_ppa
+.LVL1348:
+	ldr	r3, [sp, #16]
+	.loc 5 707 0
+	ldr	r1, [r4, #3796]
+	ldr	r2, [sp, #20]
+	.loc 5 706 0
+	str	r0, [r3, #4]
+	.loc 5 707 0
+	ldr	r3, [r4, #3144]
+	mla	r3, r2, r3, r1
+	ldr	r2, [r4, #3160]
+	add	r2, r2, r9
+	ldr	r1, [r2, #8]
+	str	r1, [r3, #8]
+	.loc 5 716 0
+	movs	r1, #1
+	.loc 5 708 0
+	ldr	r2, [r2, #12]
+	str	r2, [r3, #12]
+	.loc 5 709 0
+	ldr	r3, [sp, #28]
+.LVL1349:
+	str	r3, [r10, #12]
+	.loc 5 710 0
+	ldrh	r3, [r4, #2376]
+.LVL1350:
+	strh	r3, [r10, #2]	@ movhi
+	.loc 5 713 0
+	ldr	r3, [r4, #2476]
+	.loc 5 716 0
+	ldr	r0, [r4, #3160]
+	.loc 5 713 0
+	str	r3, [r10, #4]
+	.loc 5 715 0
+	ldr	r3, [r4, #3144]
+	.loc 5 716 0
+	add	r0, r0, r9
+	.loc 5 715 0
+	adds	r3, r3, #1
+	str	r3, [r4, #3144]
+	.loc 5 716 0
+	bl	FtlGcBufAlloc
+.LVL1351:
+	.loc 5 717 0
+	ldrb	r2, [r4, #2383]	@ zero_extendqisi2
+	ldr	r3, [r4, #3144]
+	cmp	r2, r3
+	beq	.L1554
+	ldrh	r3, [r4, #2380]
+	cbnz	r3, .L1552
+.L1554:
+	.loc 5 718 0
+	bl	Ftl_gc_temp_data_write_back
+.LVL1352:
+	cbz	r0, .L1552
+.L1609:
+	.loc 5 733 0
+	movs	r3, #0
+	.loc 5 734 0
+	ldrh	r0, [r7, #-228]
+	.loc 5 733 0
+	str	r3, [r4, #3780]
+	b	.L1491
+.L1552:
+	add	fp, fp, #1
+	b	.L1551
+.LVL1353:
+.L1556:
+	.loc 5 727 0
+	ldrh	r3, [r4, #2570]
+	add	r6, r6, r3
+.LVL1354:
+	.loc 5 729 0
+	ldr	r3, [sp, #12]
+.LVL1355:
+	.loc 5 727 0
+	uxth	r6, r6
+	.loc 5 729 0
+	cmp	r3, r6
+	.loc 5 727 0
+	strh	r6, [r4, #2570]	@ movhi
+	.loc 5 729 0
+	bls	.L1558
+	ldrh	r2, [r7, #-226]
+	ldrh	r3, [r7, #-224]
+.LVL1356:
+	cmp	r2, r3
+	bne	.L1559
+.LVL1357:
+.L1558:
+	.loc 5 731 0
+	ldr	r3, [r4, #3144]
+.LVL1358:
+	cbz	r3, .L1560
+	.loc 5 732 0
+	bl	Ftl_gc_temp_data_write_back
+.LVL1359:
+	cmp	r0, #0
+	bne	.L1609
+.L1560:
+	.loc 5 737 0
+	ldrh	r1, [r7, #-226]
+	cbnz	r1, .L1561
+	ldrh	r2, [r4, #2568]
+	ldr	r3, [r4, #2260]
+	ldrh	r0, [r3, r2, lsl #1]
+	cbz	r0, .L1561
+	.loc 5 739 0
+	strh	r1, [r3, r2, lsl #1]	@ movhi
+	.loc 5 740 0
+	ldrh	r0, [r4, #2568]
+	bl	update_vpc_list
+.LVL1360:
+	.loc 5 741 0
+	bl	FtlCacheWriteBack
+.LVL1361:
+	.loc 5 742 0
+	bl	l2p_flush
+.LVL1362:
+	.loc 5 743 0
+	bl	FtlVpcTblFlush
+.LVL1363:
+.L1561:
+	.loc 5 745 0
+	movw	r3, #65535
+	strh	r3, [r4, #2568]	@ movhi
+.L1559:
+	.loc 5 747 0
+	ldrh	r3, [r4, #2276]
+	cmp	r3, #2
+	bhi	.L1562
+	.loc 5 749 0
+	ldrh	r6, [r4, #78]
+.LVL1364:
+	b	.L1534
+.LVL1365:
+.L1562:
+	.loc 5 754 0
+	ldrh	r0, [r7, #-228]
+	.loc 5 752 0
+	movs	r2, #0
+	str	r2, [r4, #3780]
+	.loc 5 754 0
+	cmp	r0, #0
+	bne	.L1491
+	.loc 5 757 0
+	adds	r0, r3, #1
+	b	.L1491
+.LVL1366:
+.L1566:
+.LBE502:
+.LBE505:
+	.loc 5 479 0
+	movs	r0, #0
+	b	.L1491
+.L1613:
+	.align	2
+.L1612:
+	.word	.LANCHOR3
+	.word	.LANCHOR1+551
+	.word	.LC1
+	.word	.LANCHOR0+2568
+	.word	.LANCHOR0+2582
+.LVL1367:
+.L1497:
+.LBB506:
+.LBB503:
+	.loc 5 527 0
+	cmp	r7, #0
+	beq	.L1564
+.L1507:
+	.loc 5 557 0
+	ldrh	r2, [r4, #2376]
+	movw	r3, #65535
+	cmp	r2, r3
+	bne	.L1575
+.L1565:
+	ldrh	r3, [r4, #3182]
+	movw	r2, #65535
+	cmp	r3, r2
+	bne	.L1575
+	cmp	r5, r3
+	bne	.L1575
+	ldrh	r3, [r4, #2568]
+	cmp	r3, r5
+	beq	.L1519
+.L1524:
+	.loc 5 556 0
+	movw	r5, #65535
+.L1575:
+	movs	r6, #1
+.LVL1368:
+	b	.L1518
+.LVL1369:
+.L1499:
+	.loc 5 527 0
+	cmp	r7, #0
+	beq	.L1564
+	movw	r5, #65535
+	b	.L1565
+.L1498:
+	cmp	r7, #0
+	bne	.L1524
+	b	.L1564
+.LBE503:
+.LBE506:
+.LFE269:
+	.fnend
+	.size	rk_ftl_garbage_collect, .-rk_ftl_garbage_collect
+	.align	1
+	.global	sftl_gc
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	sftl_gc, %function
+sftl_gc:
+	.fnstart
+.LFB270:
+	.loc 5 761 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+	.loc 5 762 0
+	movs	r1, #1
+	mov	r0, r1
+	b	rk_ftl_garbage_collect
+.LVL1370:
+.LFE270:
+	.fnend
+	.size	sftl_gc, .-sftl_gc
+	.align	1
+	.global	FtlRead
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlRead, %function
+FtlRead:
+	.fnstart
+.LFB164:
+	.loc 3 813 0
+	@ args = 0, pretend = 0, frame = 56
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL1371:
+	.loc 3 823 0
+	cmp	r0, #16
+	.loc 3 813 0
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI187:
+	.pad #60
+	sub	sp, sp, #60
+.LCFI188:
+	.loc 3 813 0
+	mov	r7, r1
+	mov	r10, r3
+	str	r2, [sp, #28]
+	.loc 3 823 0
+	bne	.L1616
+	.loc 3 824 0
+	mov	r2, r3
+.LVL1372:
+	ldr	r1, [sp, #28]
+	add	r0, r7, #256
+.LVL1373:
+	bl	FtlVendorPartRead
+.LVL1374:
+	mov	r8, r0
+.LVL1375:
+.L1615:
+	.loc 3 900 0
+	mov	r0, r8
+.LVL1376:
+	add	sp, sp, #60
+.LCFI189:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL1377:
+.L1616:
+.LCFI190:
+	.loc 3 829 0
+	ldr	r3, [sp, #28]
+.LVL1378:
+	ldr	r4, .L1647
+	adds	r3, r1, r3
+.LVL1379:
+	str	r3, [sp, #8]
+	ldr	r2, [sp, #8]
+	ldr	r3, [r4, #116]
+	cmp	r2, r3
+	bhi	.L1636
+	.loc 3 829 0 is_stmt 0 discriminator 1
+	ldr	r3, .L1647+4
+	ldr	r3, [r3]
+	adds	r5, r3, #1
+	beq	.L1637
+	.loc 3 832 0 is_stmt 1
+	bl	FtlCacheWriteBack
+.LVL1380:
+	.loc 3 834 0
+	ldrh	r5, [r4, #34]
+	mov	r0, r7
+	.loc 3 827 0
+	mov	r9, #0
+.LVL1381:
+	.loc 3 839 0
+	mov	r6, r9
+.LVL1382:
+	.loc 3 814 0
+	mov	r8, r9
+	.loc 3 834 0
+	mov	r1, r5
+	bl	__aeabi_uidiv
+.LVL1383:
+	.loc 3 835 0
+	ldr	r3, [sp, #8]
+	mov	r1, r5
+	.loc 3 834 0
+	str	r0, [sp, #12]
+	.loc 3 835 0
+	subs	r0, r3, #1
+	bl	__aeabi_uidiv
+.LVL1384:
+	.loc 3 836 0
+	ldr	r3, [sp, #12]
+.LVL1385:
+	.loc 3 834 0
+	ldr	r5, [sp, #12]
+.LVL1386:
+	.loc 3 835 0
+	str	r0, [sp, #16]
+	.loc 3 836 0
+	rsb	r3, r3, #1
+.LVL1387:
+	.loc 3 827 0
+	str	r9, [sp, #24]
+.LVL1388:
+	.loc 3 836 0
+	add	r3, r3, r0
+.LVL1389:
+	.loc 3 819 0
+	str	r9, [sp, #20]
+	.loc 3 836 0
+	str	r3, [sp, #4]
+	.loc 3 840 0
+	ldr	r2, [sp, #4]
+.LVL1390:
+	ldr	r3, [r4, #2440]
+	add	r3, r3, r2
+	str	r3, [r4, #2440]
+.LVL1391:
+.L1618:
+	.loc 3 841 0
+	ldr	r3, [sp, #4]
+.LVL1392:
+	cbnz	r3, .L1634
+	.loc 3 897 0
+	ldr	r3, .L1647
+.LVL1393:
+	ldrh	r2, [r3, #3186]
+	cbnz	r2, .L1635
+	.loc 3 897 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r3, #2276]
+	cmp	r3, #31
+	bhi	.L1615
+.L1635:
+	.loc 3 898 0 is_stmt 1
+	movs	r1, #1
+	movs	r0, #0
+.LVL1394:
+	bl	rk_ftl_garbage_collect
+.LVL1395:
+	b	.L1615
+.LVL1396:
+.L1634:
+	.loc 3 842 0
+	movs	r2, #0
+	add	r1, sp, #52
+	mov	r0, r5
+.LVL1397:
+	bl	log2phys
+.LVL1398:
+	.loc 3 843 0
+	ldr	r2, [sp, #52]
+	adds	r0, r2, #1
+	bne	.L1619
+	mov	fp, #0
+.LVL1399:
+.L1620:
+	.loc 3 844 0 discriminator 1
+	ldrh	r0, [r4, #34]
+.LVL1400:
+	cmp	fp, r0
+	bcc	.L1622
+.L1623:
+	.loc 3 873 0
+	ldr	r3, [sp, #4]
+.LVL1401:
+	.loc 3 871 0
+	adds	r5, r5, #1
+	.loc 3 873 0
+	subs	r3, r3, #1
+	str	r3, [sp, #4]
+	beq	.L1627
+	.loc 3 873 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #8]
+.LVL1402:
+	cmp	r6, r3, lsl #2
+	bne	.L1618
+.LVL1403:
+.L1627:
+	.loc 3 874 0 is_stmt 1
+	cmp	r6, #0
+	beq	.L1618
+	.loc 3 875 0
+	movs	r2, #0
+	mov	r1, r6
+	ldr	r0, [r4, #3792]
+	.loc 3 876 0
+	mov	fp, #0
+.LVL1404:
+	.loc 3 875 0
+	bl	FlashReadPages
+.LVL1405:
+	.loc 3 882 0
+	lsl	r3, r9, #9
+	str	r3, [sp, #40]
+	.loc 3 879 0
+	ldr	r3, [sp, #20]
+.LVL1406:
+	lsls	r3, r3, #9
+.LVL1407:
+	str	r3, [sp, #32]
+	ldr	r3, [sp, #24]
+	lsls	r3, r3, #9
+	str	r3, [sp, #36]
+.L1633:
+	movs	r3, #20
+	.loc 3 877 0
+	ldr	r2, [r4, #3792]
+	mul	r3, r3, fp
+	ldr	r0, [sp, #12]
+.LVL1408:
+	add	r2, r2, r3
+	ldr	r1, [r2, #16]
+	cmp	r0, r1
+	bne	.L1629
+	.loc 3 878 0
+	ldr	r1, [r2, #8]
+	ldr	r2, [r4, #3776]
+	cmp	r1, r2
+	bne	.L1630
+	str	r3, [sp, #44]
+	.loc 3 879 0
+	mov	r0, r10
+.LVL1409:
+	ldr	r3, [sp, #32]
+	ldr	r2, [sp, #36]
+	add	r1, r1, r3
+.LVL1410:
+.L1646:
+	.loc 3 882 0
+	bl	ftl_memcpy
+.LVL1411:
+	ldr	r3, [sp, #44]
+.LVL1412:
+.L1630:
+	.loc 3 884 0
+	ldr	r2, [r4, #3792]
+	ldr	r0, [r2, r3]
+.LVL1413:
+	add	ip, r2, r3
+	adds	r1, r0, #1
+	.loc 3 885 0
+	itttt	eq
+	ldreq	r1, [r4, #2688]
+	.loc 3 886 0
+	moveq	r8, r0
+	.loc 3 885 0
+	addeq	r1, r1, #1
+	streq	r1, [r4, #2688]
+	.loc 3 888 0
+	ldr	r3, [r2, r3]
+	cmp	r3, #256
+	bne	.L1632
+.LBB513:
+	.loc 3 889 0
+	ldr	r0, [ip, #4]
+	ubfx	r0, r0, #10, #16
+	bl	P2V_block_in_plane
+.LVL1414:
+	.loc 3 890 0
+	bl	FtlGcRefreshBlock
+.LVL1415:
+.L1632:
+.LBE513:
+	.loc 3 876 0 discriminator 2
+	add	fp, fp, #1
+	cmp	r6, fp
+	bne	.L1633
+	.loc 3 893 0
+	movs	r6, #0
+	b	.L1618
+.LVL1416:
+.L1622:
+	.loc 3 845 0
+	mla	r0, r0, r5, fp
+.LVL1417:
+	.loc 3 846 0
+	cmp	r7, r0
+	bhi	.L1621
+	.loc 3 846 0 is_stmt 0 discriminator 1
+	ldr	r3, [sp, #8]
+	cmp	r3, r0
+	bls	.L1621
+	.loc 3 847 0 is_stmt 1
+	subs	r0, r0, r7
+.LVL1418:
+.LBB514:
+.LBB515:
+.LBB516:
+	.loc 1 202 0
+	mov	r1, #512
+	add	r0, r10, r0, lsl #9
+	bl	__memzero
+.LVL1419:
+.L1621:
+.LBE516:
+.LBE515:
+.LBE514:
+	.loc 3 844 0 discriminator 2
+	add	fp, fp, #1
+	b	.L1620
+.LVL1420:
+.L1619:
+	.loc 3 850 0
+	ldr	r3, [r4, #3792]
+	movs	r1, #20
+	ldrh	fp, [r4, #34]
+.LVL1421:
+	mla	r3, r1, r6, r3
+	str	r2, [r3, #4]
+	.loc 3 851 0
+	ldr	r2, [sp, #12]
+.LVL1422:
+	cmp	r5, r2
+	bne	.L1624
+	.loc 3 852 0
+	ldr	r2, [r4, #3776]
+.LVL1423:
+	.loc 3 853 0
+	mov	r1, fp
+	mov	r0, r7
+	.loc 3 852 0
+	str	r3, [sp, #32]
+	str	r2, [r3, #8]
+	.loc 3 853 0
+	bl	__aeabi_uidivmod
+.LVL1424:
+	.loc 3 854 0
+	sub	r2, fp, r1
+	.loc 3 853 0
+	str	r1, [sp, #20]
+.LVL1425:
+	ldr	r1, [sp, #28]
+.LVL1426:
+	mov	r3, r2
+	cmp	r2, r1
+	it	cs
+	movcs	r3, r1
+	.loc 3 856 0
+	cmp	r3, fp
+	str	r3, [sp, #24]
+	ldr	r3, [sp, #32]
+	bne	.L1625
+	.loc 3 857 0
+	str	r10, [r3, #8]
+.L1625:
+	.loc 3 866 0
+	ldrh	r2, [r4, #88]
+	ldr	r1, [r4, #3772]
+.LVL1427:
+	.loc 3 867 0
+	str	r5, [r3, #16]
+	.loc 3 866 0
+	muls	r2, r6, r2
+	.loc 3 868 0
+	adds	r6, r6, #1
+	.loc 3 866 0
+	bic	r2, r2, #3
+	add	r2, r2, r1
+	str	r2, [r3, #12]
+	b	.L1623
+.LVL1428:
+.L1624:
+	.loc 3 858 0
+	ldr	r2, [sp, #16]
+.LVL1429:
+	cmp	r5, r2
+	bne	.L1626
+	.loc 3 859 0
+	ldr	r2, [r4, #3768]
+.LVL1430:
+	.loc 3 860 0
+	ldr	r1, [sp, #8]
+	.loc 3 859 0
+	str	r2, [r3, #8]
+	.loc 3 860 0
+	mul	r2, fp, r5
+	sub	r9, r1, r2
+	.loc 3 861 0
+	cmp	fp, r9
+	bne	.L1625
+.L1645:
+	.loc 3 864 0
+	subs	r2, r2, r7
+	add	r2, r10, r2, lsl #9
+	str	r2, [r3, #8]
+	b	.L1625
+.LVL1431:
+.L1626:
+	mul	r2, r5, fp
+.LVL1432:
+	b	.L1645
+.LVL1433:
+.L1629:
+	.loc 3 880 0
+	ldr	r0, [sp, #16]
+.LVL1434:
+	cmp	r0, r1
+	bne	.L1630
+	.loc 3 881 0
+	ldr	r1, [r2, #8]
+	ldr	r2, [r4, #3768]
+	cmp	r1, r2
+	bne	.L1630
+	str	r3, [sp, #44]
+	.loc 3 882 0
+	ldrh	r0, [r4, #34]
+.LVL1435:
+	ldr	r3, [sp, #16]
+.LVL1436:
+	ldr	r2, [sp, #40]
+	muls	r0, r3, r0
+	subs	r0, r0, r7
+	add	r0, r10, r0, lsl #9
+	b	.L1646
+.LVL1437:
+.L1636:
+	.loc 3 830 0
+	mov	r8, #-1
+	b	.L1615
+.L1637:
+	mov	r8, r3
+	b	.L1615
+.L1648:
+	.align	2
+.L1647:
+	.word	.LANCHOR0
+	.word	.LANCHOR2
+.LFE164:
+	.fnend
+	.size	FtlRead, .-FtlRead
+	.align	1
+	.global	sftl_read
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	sftl_read, %function
+sftl_read:
+	.fnstart
+.LFB169:
+	.loc 3 1201 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+.LVL1438:
+	.loc 3 1202 0
+	mov	r3, r2
+	mov	r2, r1
+.LVL1439:
+	mov	r1, r0
+.LVL1440:
+	movs	r0, #0
+.LVL1441:
+	b	FtlRead
+.LVL1442:
+.LFE169:
+	.fnend
+	.size	sftl_read, .-sftl_read
+	.align	1
+	.global	FtlWrite
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlWrite, %function
+FtlWrite:
+	.fnstart
+.LFB167:
+	.loc 3 959 0
+	@ args = 0, pretend = 0, frame = 64
+	@ frame_needed = 0, uses_anonymous_args = 0
+.LVL1443:
+	.loc 3 967 0
+	cmp	r0, #16
+	.loc 3 959 0
+	push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
+	.save {r4, r5, r6, r7, r8, r9, r10, fp, lr}
+.LCFI191:
+	.pad #68
+	sub	sp, sp, #68
+.LCFI192:
+	.loc 3 959 0
+	mov	r8, r1
+	str	r2, [sp, #12]
+	str	r3, [sp, #4]
+	.loc 3 967 0
+	bne	.L1651
+	.loc 3 968 0
+	mov	r2, r3
+.LVL1444:
+	ldr	r1, [sp, #12]
+	add	r0, r8, #256
+.LVL1445:
+	bl	FtlVendorPartWrite
+.LVL1446:
+.L1650:
+	.loc 3 1150 0
+	add	sp, sp, #68
+.LCFI193:
+	@ sp needed
+	pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
+.LVL1447:
+.L1651:
+.LCFI194:
+	.loc 3 971 0
+	ldr	r3, [sp, #12]
+.LVL1448:
+	ldr	r4, .L1717
+	adds	r7, r1, r3
+	ldr	r3, [r4, #116]
+.LVL1449:
+	cmp	r7, r3
+	bhi	.L1693
+	.loc 3 971 0 is_stmt 0 discriminator 1
+	ldr	r6, .L1717+4
+	ldr	r0, [r6]
+.LVL1450:
+	adds	r5, r0, #1
+	beq	.L1650
+	.loc 3 974 0 is_stmt 1
+	ldr	r3, .L1717+8
+	mov	r2, #2048
+	.loc 3 975 0
+	ldrh	r5, [r4, #34]
+	mov	r0, r8
+	.loc 3 974 0
+	str	r2, [r3, #-220]
+	.loc 3 975 0
+	mov	r1, r5
+	bl	__aeabi_uidiv
+.LVL1451:
+	.loc 3 976 0
+	mov	r1, r5
+	.loc 3 975 0
+	mov	r10, r0
+.LVL1452:
+	.loc 3 976 0
+	subs	r0, r7, #1
+	bl	__aeabi_uidiv
+.LVL1453:
+	.loc 3 977 0
+	sub	r7, r0, r10
+	.loc 3 980 0
+	ldr	fp, [r4, #3948]
+	.loc 3 977 0
+	adds	r3, r7, #1
+.LVL1454:
+	.loc 3 979 0
+	adds	r2, r7, #1
+.LVL1455:
+	.loc 3 977 0
+	str	r3, [sp, #8]
+	.loc 3 979 0
+	ldr	r3, [r4, #2448]
+	.loc 3 976 0
+	str	r0, [sp, #20]
+.LVL1456:
+	.loc 3 979 0
+	add	r3, r3, r2
+	str	r3, [r4, #2448]
+	.loc 3 980 0
+	cmp	fp, #0
+	beq	.L1653
+	.loc 3 981 0
+	ldr	r3, [fp, #16]
+	cmp	r10, r3
+	beq	.L1654
+	.loc 3 982 0
+	bl	FtlCacheWriteBack
+.LVL1457:
+.L1653:
+	.loc 3 1005 0
+	ldr	r3, [r6, #8]
+	cmp	r3, #0
+	beq	.L1695
+	.loc 3 1006 0 discriminator 1
+	ldr	r5, .L1717+12
+	.loc 3 1005 0 discriminator 1
+	ldrh	r2, [r4, #2284]
+.LVL1458:
+	.loc 3 1006 0 discriminator 1
+	add	r3, r5, #48
+	cmp	r2, #0
+	it	eq
+	moveq	r5, r3
+.LVL1459:
+.L1656:
+	.loc 3 1009 0
+	ldr	r4, .L1717
+	.loc 3 1065 0
+	mov	r6, r10
+.LVL1460:
+.L1657:
+	.loc 3 1008 0
+	ldr	r3, [sp, #8]
+.LVL1461:
+	cmp	r3, #0
+	beq	.L1691
+	.loc 3 1009 0
+	ldrb	r2, [r5, #6]	@ zero_extendqisi2
+	ldrh	r3, [r4, #8]
+.LVL1462:
+	cmp	r2, r3
+	bcc	.L1658
+	.loc 3 1009 0 is_stmt 0 discriminator 1
+	movw	r2, #1009
+	ldr	r1, .L1717+16
+	ldr	r0, .L1717+20
+	bl	printk
+.LVL1463:
+.L1658:
+	.loc 3 1010 0 is_stmt 1
+	ldrh	r9, [r5, #4]
+.LVL1464:
+	cmp	r9, #0
+	bne	.L1659
+	.loc 3 1011 0
+	bl	FtlCacheWriteBack
+.LVL1465:
+	.loc 3 1013 0
+	ldr	r3, .L1717+12
+	ldr	r7, .L1717+4
+	cmp	r5, r3
+	bne	.L1660
+	.loc 3 1014 0
+	ldrh	r9, [r4, #2332]
+	cmp	r9, #0
+	bne	.L1661
+	.loc 3 1015 0
+	add	r0, r5, #48
+	bl	allocate_new_data_superblock
+.LVL1466:
+	.loc 3 1016 0
+	str	r9, [r7, #8]
+.L1661:
+	.loc 3 1020 0
+	ldr	r5, .L1717+12
+.LVL1467:
+	.loc 3 1018 0
+	ldr	r0, .L1717+12
+	bl	allocate_new_data_superblock
+.LVL1468:
+	.loc 3 1019 0
+	ldr	r2, [r7, #8]
+	.loc 3 1020 0
+	add	r3, r5, #48
+	cmp	r2, #0
+	it	ne
+	movne	r5, r3
+.LVL1469:
+.L1662:
+	.loc 3 1030 0
+	ldrh	r3, [r5, #4]
+	cbnz	r3, .L1659
+	.loc 3 1031 0
+	mov	r0, r5
+	bl	allocate_new_data_superblock
+.LVL1470:
+.L1659:
+	.loc 3 1038 0
+	ldrb	r2, [r5, #7]	@ zero_extendqisi2
+	.loc 3 1040 0
+	ldrh	r3, [r5, #4]
+	ldr	r1, [sp, #8]
+.LVL1471:
+	.loc 3 1038 0
+	lsls	r2, r2, #2
+	cmp	r3, r1
+	it	cs
+	movcs	r3, r1
+	cmp	r2, r3
+	it	cs
+	movcs	r2, r3
+	.loc 3 1042 0
+	ldrh	r3, [r4, #8]
+	str	r2, [sp, #36]
+	ldrb	r2, [r5, #6]	@ zero_extendqisi2
+	cmp	r2, r3
+	bcc	.L1663
+	.loc 3 1042 0 is_stmt 0 discriminator 1
+	movw	r2, #1042
+	ldr	r1, .L1717+16
+.LVL1472:
+	ldr	r0, .L1717+20
+	bl	printk
+.LVL1473:
+.L1663:
+	.loc 3 1065 0 is_stmt 1 discriminator 1
+	mov	r9, #0
+.LVL1474:
+.L1664:
+	.loc 3 1043 0 discriminator 1
+	ldr	r3, [sp, #36]
+	cmp	r9, r3
+	bne	.L1685
+.L1665:
+	.loc 3 1124 0
+	ldr	r3, [r4, #3948]
+	cmp	r3, #0
+	beq	.L1686
+	.loc 3 1126 0
+	ldr	r3, [sp, #8]
+.LVL1475:
+	.loc 3 1127 0
+	subs	r9, r9, #1
+	.loc 3 1126 0
+	add	r3, r3, #-1
+	str	r3, [sp, #8]
+	.loc 3 1127 0
+	bne	.L1686
+.L1691:
+	.loc 3 1134 0
+	ldr	r3, [sp, #20]
+.LVL1476:
+	movs	r0, #0
+	.loc 3 1136 0
+	ldr	r4, .L1717
+	.loc 3 1134 0
+	sub	r1, r3, r10
+	bl	rk_ftl_garbage_collect
+.LVL1477:
+	.loc 3 1136 0
+	ldrh	r3, [r4, #2276]
+	cmp	r3, #15
+	bhi	.L1688
+	.loc 3 1138 0
+	movw	r5, #65535
+.LVL1478:
+.L1712:
+	ldrh	r3, [r4, #2568]
+	cmp	r3, r5
+	bne	.L1692
+	.loc 3 1138 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #3182]
+	cmp	r3, r5
+	bne	.L1692
+	.loc 3 1139 0 is_stmt 1
+	movs	r0, #0
+	bl	List_get_gc_head_node
+.LVL1479:
+	uxth	r0, r0
+	bl	FtlGcRefreshBlock
+.LVL1480:
+.L1692:
+	.loc 3 1142 0
+	movs	r1, #1
+	.loc 3 1140 0
+	movs	r3, #128
+	.loc 3 1142 0
+	mov	r0, r1
+	.loc 3 1140 0
+	strh	r3, [r4, #3130]	@ movhi
+	.loc 3 1141 0
+	strh	r3, [r4, #3128]	@ movhi
+	.loc 3 1142 0
+	bl	rk_ftl_garbage_collect
+.LVL1481:
+	.loc 3 1143 0
+	movs	r1, #1
+	movs	r0, #0
+	bl	rk_ftl_garbage_collect
+.LVL1482:
+	.loc 3 1144 0
+	ldrh	r3, [r4, #2276]
+	cmp	r3, #8
+	bls	.L1712
+	b	.L1688
+.LVL1483:
+.L1654:
+	.loc 3 984 0
+	ldr	r3, [r4, #2452]
+	.loc 3 985 0
+	mov	r1, r5
+	mov	r0, r8
+	.loc 3 984 0
+	adds	r3, r3, #1
+	str	r3, [r4, #2452]
+	.loc 3 985 0
+	bl	__aeabi_uidivmod
+.LVL1484:
+	ldr	r2, [sp, #12]
+.LVL1485:
+	.loc 3 986 0
+	subs	r5, r5, r1
+	.loc 3 989 0
+	ldr	r0, [fp, #8]
+	.loc 3 985 0
+	mov	r3, r1
+	.loc 3 989 0
+	ldr	r1, [sp, #4]
+	cmp	r5, r2
+	it	cs
+	movcs	r5, r2
+	lsl	r9, r5, #9
+	add	r0, r0, r3, lsl #9
+	mov	r2, r9
+.LVL1486:
+	bl	ftl_memcpy
+.LVL1487:
+	.loc 3 991 0
+	cbnz	r7, .L1655
+.LVL1488:
+.L1688:
+	.loc 3 992 0
+	movs	r0, #0
+	b	.L1650
+.LVL1489:
+.L1655:
+	.loc 3 993 0
+	ldr	r3, [sp, #12]
+.LVL1490:
+	.loc 3 994 0
+	add	r8, r8, r5
+	.loc 3 996 0
+	add	r10, r10, #1
+	.loc 3 993 0
+	subs	r3, r3, r5
+	str	r3, [sp, #12]
+	.loc 3 995 0
+	ldr	r3, [sp, #4]
+.LVL1491:
+	add	r3, r3, r9
+	str	r3, [sp, #4]
+	.loc 3 997 0
+	bl	FtlCacheWriteBack
+.LVL1492:
+	str	r7, [sp, #8]
+	b	.L1653
+.LVL1493:
+.L1695:
+	.loc 3 1003 0
+	ldr	r5, .L1717+12
+.LVL1494:
+	b	.L1656
+.LVL1495:
+.L1660:
+	.loc 3 1025 0
+	ldrh	r2, [r4, #2284]
+	.loc 3 1024 0
+	str	r9, [r7, #8]
+	.loc 3 1025 0
+	cbnz	r2, .L1698
+	.loc 3 1026 0
+	mov	r0, r5
+	bl	allocate_new_data_superblock
+.LVL1496:
+	b	.L1662
+.L1698:
+	mov	r5, r3
+	b	.L1659
+.LVL1497:
+.L1685:
+	.loc 3 1044 0
+	ldrh	r3, [r5, #4]
+	cmp	r3, #0
+	beq	.L1665
+	.loc 3 1048 0
+	movs	r2, #0
+	add	r1, sp, #40
+.LVL1498:
+	mov	r0, r6
+	movs	r7, #20
+	bl	log2phys
+.LVL1499:
+	.loc 3 1049 0
+	mov	r0, r5
+	mul	r7, r7, r9
+	bl	get_new_active_ppa
+.LVL1500:
+	.loc 3 1052 0
+	ldrh	r2, [r4, #88]
+	.loc 3 1051 0
+	ldr	r3, [r4, #3800]
+	.loc 3 1052 0
+	mul	r1, r2, r9
+	.loc 3 1051 0
+	add	r3, r3, r7
+	str	r0, [r3, #4]
+	.loc 3 1053 0
+	str	r6, [r3, #16]
+	.loc 3 1052 0
+	bic	r1, r1, #3
+	str	r1, [sp, #28]
+	ldr	r0, [sp, #28]
+	ldr	r1, [r4, #3772]
+	add	fp, r1, r0
+	str	r1, [sp, #32]
+	str	fp, [r3, #12]
+	.loc 3 1056 0
+	movs	r1, #0
+	mov	r0, fp
+	bl	ftl_memset
+.LVL1501:
+	.loc 3 1058 0
+	cmp	r6, r10
+	beq	.L1666
+	.loc 3 1058 0 is_stmt 0 discriminator 1
+	ldr	r3, [sp, #20]
+.LVL1502:
+	cmp	r6, r3
+	bne	.L1711
+	.loc 3 1066 0 is_stmt 1
+	ldr	r3, [sp, #12]
+.LVL1503:
+	add	r2, r8, r3
+	ldrh	r3, [r4, #34]
+.LVL1504:
+	smulbb	r3, r3, r6
+	subs	r2, r2, r3
+	uxth	r3, r2
+	str	r3, [sp, #16]
+	.loc 3 1065 0
+	movs	r3, #0
+	str	r3, [sp, #24]
+	b	.L1669
+.L1666:
+	.loc 3 1060 0
+	ldrh	r2, [r4, #34]
+	mov	r0, r8
+	mov	r1, r2
+	str	r2, [sp, #16]
+	bl	__aeabi_uidivmod
+.LVL1505:
+	.loc 3 1061 0
+	ldr	r2, [sp, #16]
+	.loc 3 1060 0
+	str	r1, [sp, #24]
+	.loc 3 1061 0
+	subs	r2, r2, r1
+	ldr	r1, [sp, #12]
+.LVL1506:
+	mov	r3, r2
+	cmp	r2, r1
+	it	cs
+	movcs	r3, r1
+	str	r3, [sp, #16]
+.L1669:
+	.loc 3 1069 0
+	ldrh	r3, [r4, #34]
+	ldr	r2, [sp, #16]
+	cmp	r2, r3
+	.loc 3 1071 0
+	ldr	r3, [r4, #3800]
+	.loc 3 1069 0
+	bne	.L1670
+	.loc 3 1070 0
+	cmp	r6, r10
+	.loc 3 1071 0
+	add	r7, r7, r3
+	.loc 3 1070 0
+	bne	.L1671
+	.loc 3 1071 0
+	ldr	r3, [sp, #4]
+.LVL1507:
+.L1715:
+	.loc 3 1114 0
+	str	r3, [r7, #8]
+.LVL1508:
+	b	.L1672
+.LVL1509:
+.L1671:
+	.loc 3 1073 0
+	ldr	r2, [sp, #16]
+	ldr	r3, [sp, #4]
+.LVL1510:
+	muls	r2, r6, r2
+	sub	r2, r2, r8
+	add	r2, r3, r2, lsl #9
+	str	r2, [r7, #8]
+.LVL1511:
+.L1672:
+	.loc 3 1116 0
+	ldrb	r2, [r5, #6]	@ zero_extendqisi2
+	ldrh	r3, [r4, #8]
+.LVL1512:
+	cmp	r2, r3
+	bcc	.L1682
+	.loc 3 1116 0 is_stmt 0 discriminator 1
+	movw	r2, #1116
+	ldr	r1, .L1717+16
+.LVL1513:
+	ldr	r0, .L1717+20
+	bl	printk
+.LVL1514:
+.L1682:
+	.loc 3 1117 0 is_stmt 1
+	ldr	r2, [sp, #32]
+	movw	r3, #61589
+	ldr	r1, [sp, #28]
+.LVL1515:
+	.loc 3 1043 0
+	add	r9, r9, #1
+	.loc 3 1117 0
+	strh	r3, [r2, r1]	@ movhi
+	.loc 3 1118 0
+	ldr	r3, [r4, #2476]
+	.loc 3 1119 0
+	str	r6, [fp, #8]
+	.loc 3 1122 0
+	adds	r6, r6, #1
+	.loc 3 1118 0
+	str	r3, [fp, #4]
+	adds	r3, r3, #1
+	adds	r2, r3, #1
+	it	eq
+	moveq	r3, #0
+	str	r3, [r4, #2476]
+	.loc 3 1120 0
+	ldr	r3, [sp, #40]
+.LVL1516:
+	str	r3, [fp, #12]
+	.loc 3 1121 0
+	ldrh	r3, [r5]
+.LVL1517:
+	strh	r3, [fp, #2]	@ movhi
+	b	.L1664
+.L1718:
+	.align	2
+.L1717:
+	.word	.LANCHOR0
+	.word	.LANCHOR2
+	.word	.LANCHOR3
+	.word	.LANCHOR0+2280
+	.word	.LANCHOR1+574
+	.word	.LC1
+.LVL1518:
+.L1670:
+	.loc 3 1076 0
+	cmp	r6, r10
+	.loc 3 1077 0
+	add	r3, r3, r7
+	ite	eq
+	ldreq	r2, [r4, #3776]
+	.loc 3 1079 0
+	ldrne	r2, [r4, #3768]
+	str	r2, [r3, #8]
+	.loc 3 1081 0
+	ldr	r3, [sp, #40]
+	adds	r1, r3, #1
+.LVL1519:
+	beq	.L1675
+.LBB517:
+	.loc 3 1083 0
+	str	r3, [sp, #48]
+	.loc 3 1087 0
+	movs	r1, #1
+	.loc 3 1085 0
+	ldr	r3, [r4, #3800]
+	.loc 3 1087 0
+	add	r0, sp, #44
+	.loc 3 1084 0
+	str	r6, [sp, #60]
+	.loc 3 1085 0
+	add	r3, r3, r7
+	ldr	r2, [r3, #8]
+	.loc 3 1086 0
+	ldr	r3, [r3, #12]
+	.loc 3 1085 0
+	str	r2, [sp, #52]
+	.loc 3 1087 0
+	movs	r2, #0
+	.loc 3 1086 0
+	str	r3, [sp, #56]
+	.loc 3 1087 0
+	bl	FlashReadPages
+.LVL1520:
+	.loc 3 1088 0
+	ldr	r3, [sp, #44]
+	adds	r3, r3, #1
+	bne	.L1676
+	.loc 3 1089 0
+	ldr	r3, [r4, #2688]
+	adds	r3, r3, #1
+	str	r3, [r4, #2688]
+.L1679:
+	ldr	r3, [sp, #16]
+.LBE517:
+	.loc 3 1101 0
+	cmp	r6, r10
+	lsl	r2, r3, #9
+	bne	.L1680
+	.loc 3 1102 0
+	ldr	r3, [r4, #3800]
+	ldr	r1, [sp, #4]
+	add	r3, r3, r7
+	ldr	r0, [r3, #8]
+	ldr	r3, [sp, #24]
+	add	r0, r0, r3, lsl #9
+.L1714:
+	.loc 3 1104 0
+	bl	ftl_memcpy
+.LVL1521:
+	.loc 3 1106 0
+	ldr	r3, [sp, #20]
+.LVL1522:
+	cmp	r6, r3
+	bne	.L1672
+	.loc 3 1107 0
+	ldrh	r3, [r5, #4]
+.LVL1523:
+	cmp	r3, #0
+	beq	.L1672
+	.loc 3 1108 0
+	ldr	r3, [r4, #3800]
+	add	r7, r7, r3
+	.loc 3 1109 0
+	ldr	r3, .L1719
+	.loc 3 1108 0
+	str	r7, [r4, #3948]
+	.loc 3 1109 0
+	str	r5, [r3, #-236]
+	b	.L1672
+.L1676:
+.LBB518:
+	.loc 3 1091 0
+	ldr	r3, [fp, #8]
+	cmp	r6, r3
+	beq	.L1678
+	.loc 3 1092 0
+	ldr	r3, [r4, #2688]
+	.loc 3 1093 0
+	mov	r2, r6
+	ldr	r0, .L1719+4
+	.loc 3 1092 0
+	adds	r3, r3, #1
+	str	r3, [r4, #2688]
+	.loc 3 1093 0
+	ldr	r1, [fp, #8]
+	bl	printk
+.LVL1524:
+.L1678:
+	.loc 3 1095 0
+	ldr	r3, [fp, #8]
+	cmp	r6, r3
+	beq	.L1679
+	.loc 3 1095 0 is_stmt 0 discriminator 1
+	movw	r2, #1095
+	ldr	r1, .L1719+8
+	ldr	r0, .L1719+12
+	bl	printk
+.LVL1525:
+	b	.L1679
+.L1675:
+.LBE518:
+	.loc 3 1098 0 is_stmt 1
+	ldr	r3, [r4, #3800]
+	movs	r1, #0
+	ldrh	r2, [r4, #86]
+	add	r3, r3, r7
+	ldr	r0, [r3, #8]
+	bl	ftl_memset
+.LVL1526:
+	b	.L1679
+.L1680:
+	.loc 3 1104 0
+	ldrh	r1, [r4, #34]
+	ldr	r0, [sp, #4]
+.LVL1527:
+	ldr	r3, [r4, #3800]
+	muls	r1, r6, r1
+	add	r3, r3, r7
+	sub	r1, r1, r8
+	add	r1, r0, r1, lsl #9
+	ldr	r0, [r3, #8]
+.LVL1528:
+	b	.L1714
+.LVL1529:
+.L1711:
+	.loc 3 1114 0
+	ldr	r3, [r4, #3800]
+.LVL1530:
+	ldr	r2, [sp, #4]
+.LVL1531:
+	add	r7, r7, r3
+	ldrh	r3, [r4, #34]
+	muls	r3, r6, r3
+	sub	r3, r3, r8
+	add	r3, r2, r3, lsl #9
+	b	.L1715
+.LVL1532:
+.L1686:
+	.loc 3 1130 0
+	mov	r3, r5
+	movs	r2, #0
+	mov	r1, r9
+.LVL1533:
+	ldr	r0, [r4, #3800]
+	bl	FtlProgPages
+.LVL1534:
+	.loc 3 1131 0
+	ldr	r3, [sp, #8]
+.LVL1535:
+	cmp	r3, r9
+	bcs	.L1689
+	.loc 3 1131 0 is_stmt 0 discriminator 1
+	movw	r2, #1131
+	ldr	r1, .L1719+8
+	ldr	r0, .L1719+12
+	bl	printk
+.LVL1536:
+.L1689:
+	.loc 3 1132 0 is_stmt 1
+	ldr	r3, [sp, #8]
+	sub	r3, r3, r9
+	str	r3, [sp, #8]
+	b	.L1657
+.LVL1537:
+.L1693:
+	.loc 3 972 0
+	mov	r0, #-1
+.LVL1538:
+	b	.L1650
+.L1720:
+	.align	2
+.L1719:
+	.word	.LANCHOR3
+	.word	.LC101
+	.word	.LANCHOR1+574
+	.word	.LC1
+.LFE167:
+	.fnend
+	.size	FtlWrite, .-FtlWrite
+	.align	1
+	.global	sftl_write
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	sftl_write, %function
+sftl_write:
+	.fnstart
+.LFB170:
+	.loc 3 1207 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+.LVL1539:
+	.loc 3 1208 0
+	mov	r3, r2
+	mov	r2, r1
+.LVL1540:
+	mov	r1, r0
+.LVL1541:
+	movs	r0, #0
+.LVL1542:
+	b	FtlWrite
+.LVL1543:
+.LFE170:
+	.fnend
+	.size	sftl_write, .-sftl_write
+	.align	1
+	.global	FtlLoadSysInfo
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlLoadSysInfo, %function
+FtlLoadSysInfo:
+	.fnstart
+.LFB224:
+	.loc 2 1360 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r3, r4, r5, r6, r7, lr}
+	.save {r3, r4, r5, r6, r7, lr}
+.LCFI195:
+	.loc 2 1368 0
+	movs	r1, #0
+	.loc 2 1365 0
+	ldr	r4, .L1743
+	ldr	r3, [r4, #2244]
+	.loc 2 1368 0
+	ldrh	r2, [r4, #16]
+	ldr	r0, [r4, #2260]
+	.loc 2 1365 0
+	str	r3, [r4, #3232]
+	.loc 2 1366 0
+	ldr	r3, [r4, #3244]
+	.loc 2 1368 0
+	lsls	r2, r2, #1
+	.loc 2 1366 0
+	str	r3, [r4, #3236]
+	.loc 2 1368 0
+	bl	ftl_memset
+.LVL1544:
+	.loc 2 1369 0
+	ldrh	r0, [r4, #2556]
+	movw	r3, #65535
+	cmp	r0, r3
+	bne	.L1723
+.LVL1545:
+.L1731:
+	.loc 2 1370 0
+	mov	r0, #-1
+	pop	{r3, r4, r5, r6, r7, pc}
+.LVL1546:
+.L1723:
+	.loc 2 1381 0
+	ldr	r7, .L1743+4
+	.loc 2 1372 0
+	movs	r1, #1
+	.loc 2 1378 0
+	addw	r6, r4, #3224
+	.loc 2 1372 0
+	bl	FtlGetLastWrittenPage
+.LVL1547:
+	sxth	r5, r0
+.LVL1548:
+	.loc 2 1373 0
+	adds	r0, r0, #1
+	strh	r0, [r4, #2558]	@ movhi
+.L1725:
+	.loc 2 1375 0
+	cmp	r5, #0
+	bge	.L1728
+	.loc 2 1388 0
+	movw	r2, #1388
+	ldr	r1, .L1743+8
+	ldr	r0, .L1743+12
+	bl	printk
+.LVL1549:
+.L1727:
+	.loc 2 1390 0
+	ldrh	r3, [r4, #16]
+	ldrh	r2, [r4, #86]
+	adds	r3, r3, #24
+	cmp	r2, r3, lsl #1
+	bcs	.L1730
+	.loc 2 1390 0 is_stmt 0 discriminator 1
+	movw	r2, #1390
+	ldr	r1, .L1743+8
+	ldr	r0, .L1743+12
+	bl	printk
+.LVL1550:
+.L1730:
+	.loc 2 1392 0 is_stmt 1
+	movs	r2, #48
+	ldr	r1, [r4, #3232]
+	ldr	r0, .L1743+16
+	bl	ftl_memcpy
+.LVL1551:
+	.loc 2 1393 0
+	ldrh	r2, [r4, #16]
+	ldr	r1, [r4, #3232]
+	ldr	r0, [r4, #2260]
+	lsls	r2, r2, #1
+	adds	r1, r1, #48
+	bl	ftl_memcpy
+.LVL1552:
+	.loc 2 1394 0
+	ldrh	r1, [r4, #16]
+	ldr	r3, [r4, #3232]
+	ldr	r0, [r4]
+	lsrs	r2, r1, #3
+	adds	r1, r1, #24
+	lsls	r1, r1, #1
+	adds	r2, r2, #4
+	bic	r1, r1, #3
+	add	r1, r1, r3
+	bl	ftl_memcpy
+.LVL1553:
+	.loc 2 1396 0
+	ldr	r2, [r4, #2504]
+	ldr	r3, .L1743+4
+	cmp	r2, r3
+	bne	.L1731
+	.loc 2 1400 0
+	ldrb	r2, [r4, #2514]	@ zero_extendqisi2
+	ldrh	r3, [r4, #30]
+	.loc 2 1399 0
+	ldrh	r5, [r4, #2512]
+.LVL1554:
+	.loc 2 1400 0
+	cmp	r2, r3
+	.loc 2 1399 0
+	strh	r5, [r4, #2562]	@ movhi
+	.loc 2 1400 0
+	bne	.L1731
+	.loc 2 1403 0
+	ldr	r3, .L1743+20
+	.loc 2 1405 0
+	ldrh	r2, [r4, #34]
+	.loc 2 1406 0
+	ldr	r6, [r4, #20]
+	.loc 2 1403 0
+	str	r5, [r3, #-216]
+	.loc 2 1404 0
+	ldrh	r3, [r4, #78]
+	.loc 2 1406 0
+	ldrh	r0, [r4, #134]
+	ldrh	r1, [r4, #8]
+	.loc 2 1404 0
+	muls	r3, r5, r3
+	.loc 2 1406 0
+	subs	r0, r6, r0
+	subs	r0, r0, r5
+	.loc 2 1404 0
+	str	r3, [r4, #2436]
+	.loc 2 1405 0
+	muls	r3, r2, r3
+	str	r3, [r4, #116]
+	.loc 2 1406 0
+	bl	__aeabi_uidiv
+.LVL1555:
+	.loc 2 1412 0
+	cmp	r5, r6
+	.loc 2 1406 0
+	strh	r0, [r4, #2552]	@ movhi
+	.loc 2 1412 0
+	bls	.L1732
+	.loc 2 1412 0 is_stmt 0 discriminator 1
+	movw	r2, #1412
+	ldr	r1, .L1743+8
+	ldr	r0, .L1743+12
+	bl	printk
+.LVL1556:
+.L1732:
+	.loc 2 1415 0 is_stmt 1
+	ldrh	r3, [r4, #2520]
+	.loc 2 1414 0
+	ldrh	r1, [r4, #2518]
+	.loc 2 1415 0
+	lsrs	r2, r3, #6
+	.loc 2 1416 0
+	and	r3, r3, #63
+	strb	r3, [r4, #2286]
+	.loc 2 1415 0
+	strh	r2, [r4, #2282]	@ movhi
+	.loc 2 1424 0
+	ldrh	r2, [r4, #2522]
+	.loc 2 1417 0
+	ldrb	r3, [r4, #2515]	@ zero_extendqisi2
+	.loc 2 1414 0
+	strh	r1, [r4, #2280]	@ movhi
+	.loc 2 1424 0
+	strh	r2, [r4, #2328]	@ movhi
+	.loc 2 1425 0
+	ldrh	r2, [r4, #2524]
+	.loc 2 1417 0
+	strb	r3, [r4, #2288]
+	.loc 2 1419 0
+	movw	r3, #65535
+	strh	r3, [r4, #2568]	@ movhi
+	.loc 2 1420 0
+	movs	r3, #0
+	strh	r3, [r4, #2570]	@ movhi
+	.loc 2 1425 0
+	lsrs	r0, r2, #6
+	.loc 2 1426 0
+	and	r2, r2, #63
+	strb	r2, [r4, #2334]
+	.loc 2 1427 0
+	ldrb	r2, [r4, #2516]	@ zero_extendqisi2
+	.loc 2 1425 0
+	strh	r0, [r4, #2330]	@ movhi
+	.loc 2 1421 0
+	strb	r3, [r4, #2574]
+	.loc 2 1427 0
+	strb	r2, [r4, #2336]
+	.loc 2 1429 0
+	ldrh	r2, [r4, #2526]
+	.loc 2 1422 0
+	strb	r3, [r4, #2576]
+	.loc 2 1434 0
+	str	r3, [r4, #2460]
+	.loc 2 1429 0
+	strh	r2, [r4, #2376]	@ movhi
+	.loc 2 1430 0
+	ldrh	r2, [r4, #2528]
+	.loc 2 1435 0
+	str	r3, [r4, #2448]
+	.loc 2 1436 0
+	str	r3, [r4, #2440]
+	.loc 2 1437 0
+	str	r3, [r4, #2456]
+	.loc 2 1430 0
+	lsrs	r0, r2, #6
+	.loc 2 1431 0
+	and	r2, r2, #63
+	strb	r2, [r4, #2382]
+	.loc 2 1432 0
+	ldrb	r2, [r4, #2517]	@ zero_extendqisi2
+	.loc 2 1440 0
+	str	r3, [r4, #2484]
+	.loc 2 1430 0
+	strh	r0, [r4, #2378]	@ movhi
+	.loc 2 1432 0
+	strb	r2, [r4, #2384]
+	.loc 2 1439 0
+	ldr	r2, [r4, #2536]
+	str	r2, [r4, #2480]
+	.loc 2 1441 0
+	str	r3, [r4, #2496]
+	.loc 2 1444 0
+	ldr	r2, [r4, #2472]
+	.loc 2 1442 0
+	str	r3, [r4, #2452]
+	.loc 2 1444 0
+	ldr	r3, [r4, #2544]
+	cmp	r3, r2
+	.loc 2 1447 0
+	ldr	r2, [r4, #2476]
+	.loc 2 1445 0
+	it	hi
+	strhi	r3, [r4, #2472]
+	.loc 2 1447 0
+	ldr	r3, [r4, #2540]
+	cmp	r3, r2
+	.loc 2 1448 0
+	it	hi
+	strhi	r3, [r4, #2476]
+	.loc 2 1450 0
+	movw	r3, #65535
+	cmp	r1, r3
+	beq	.L1735
+	.loc 2 1451 0
+	ldr	r0, .L1743+24
+	bl	make_superblock
+.LVL1557:
+.L1735:
+	.loc 2 1453 0
+	ldrh	r2, [r4, #2328]
+	movw	r3, #65535
+	cmp	r2, r3
+	beq	.L1736
+	.loc 2 1454 0
+	ldr	r0, .L1743+28
+	bl	make_superblock
+.LVL1558:
+.L1736:
+	.loc 2 1456 0
+	ldrh	r2, [r4, #2376]
+	movw	r3, #65535
+	cmp	r2, r3
+	beq	.L1737
+	.loc 2 1457 0
+	ldr	r0, .L1743+32
+	bl	make_superblock
+.LVL1559:
+.L1737:
+	.loc 2 1459 0
+	ldrh	r2, [r4, #2568]
+	movw	r3, #65535
+	cmp	r2, r3
+	beq	.L1738
+	.loc 2 1460 0
+	ldr	r0, .L1743+36
+	bl	make_superblock
+.LVL1560:
+.L1738:
+	.loc 2 1462 0
+	movs	r0, #0
+	pop	{r3, r4, r5, r6, r7, pc}
+.LVL1561:
+.L1728:
+	.loc 2 1376 0
+	ldrh	r3, [r4, #2556]
+	.loc 2 1378 0
+	movs	r2, #1
+	mov	r1, r2
+	mov	r0, r6
+	.loc 2 1376 0
+	orr	r3, r5, r3, lsl #10
+	str	r3, [r4, #3228]
+	.loc 2 1377 0
+	ldr	r3, [r4, #2244]
+	str	r3, [r4, #3232]
+	.loc 2 1378 0
+	bl	FlashReadPages
+.LVL1562:
+	.loc 2 1381 0
+	ldr	r3, [r4, #3224]
+	adds	r3, r3, #1
+	beq	.L1726
+	.loc 2 1382 0 discriminator 1
+	ldr	r3, [r4, #2244]
+	.loc 2 1381 0 discriminator 1
+	ldr	r3, [r3]
+	cmp	r3, r7
+	bne	.L1726
+	.loc 2 1383 0
+	ldr	r3, [r4, #3244]
+	ldrh	r2, [r3]
+	.loc 2 1382 0
+	movw	r3, #61604
+	cmp	r2, r3
+	beq	.L1727
+.L1726:
+	subs	r5, r5, #1
+.LVL1563:
+	sxth	r5, r5
+.LVL1564:
+	b	.L1725
+.L1744:
+	.align	2
+.L1743:
+	.word	.LANCHOR0
+	.word	1179929683
+	.word	.LANCHOR1+583
+	.word	.LC1
+	.word	.LANCHOR0+2504
+	.word	.LANCHOR3
+	.word	.LANCHOR0+2280
+	.word	.LANCHOR0+2328
+	.word	.LANCHOR0+2376
+	.word	.LANCHOR0+2568
+.LFE224:
+	.fnend
+	.size	FtlLoadSysInfo, .-FtlLoadSysInfo
+	.align	1
+	.global	FtlSysBlkInit
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	FtlSysBlkInit, %function
+FtlSysBlkInit:
+	.fnstart
+.LFB242:
+	.loc 2 2306 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r4, r5, r6, lr}
+	.save {r4, r5, r6, lr}
+.LCFI196:
+	.loc 2 2310 0
+	movs	r3, #0
+	ldr	r4, .L1761
+	.loc 2 2312 0
+	ldrh	r0, [r4, #12]
+	.loc 2 2310 0
+	strh	r3, [r4, #3968]	@ movhi
+	.loc 2 2312 0
+	bl	FtlFreeSysBlkQueueInit
+.LVL1565:
+	.loc 2 2313 0
+	bl	FtlScanSysBlk
+.LVL1566:
+	.loc 2 2314 0
+	ldrh	r2, [r4, #2556]
+	movw	r3, #65535
+	cmp	r2, r3
+	bne	.L1746
+.L1748:
+	.loc 2 2315 0
+	mov	r5, #-1
+.L1745:
+	.loc 2 2398 0
+	mov	r0, r5
+	pop	{r4, r5, r6, pc}
+.L1746:
+	.loc 2 2317 0
+	bl	FtlLoadSysInfo
+.LVL1567:
+	mov	r5, r0
+	cmp	r0, #0
+	bne	.L1748
+	.loc 2 2320 0
+	bl	FtlLoadMapInfo
+.LVL1568:
+	.loc 2 2321 0
+	bl	FtlLoadVonderInfo
+.LVL1569:
+	.loc 2 2322 0
+	bl	Ftl_load_ext_data
+.LVL1570:
+	.loc 2 2324 0
+	bl	FtlLoadEctTbl
+.LVL1571:
+	.loc 2 2325 0
+	bl	FtlFreeSysBLkSort
+.LVL1572:
+	.loc 2 2327 0
+	bl	SupperBlkListInit
+.LVL1573:
+	.loc 2 2328 0
+	bl	FtlPowerLostRecovery
+.LVL1574:
+	.loc 2 2330 0
+	movs	r0, #1
+	bl	FtlUpdateVaildLpn
+.LVL1575:
+.LBB522:
+.LBB523:
+	.loc 2 2332 0
+	ldrh	r1, [r4, #114]
+	mov	r3, r5
+.LVL1576:
+	.loc 2 2333 0
+	ldr	r2, [r4, #2424]
+	movs	r0, #12
+.L1749:
+	.loc 2 2332 0
+	cmp	r3, r1
+	bge	.L1754
+	.loc 2 2333 0
+	mla	r6, r0, r3, r2
+	ldr	r6, [r6, #4]
+	cmp	r6, #0
+	bge	.L1750
+.L1754:
+	.loc 2 2336 0
+	ldrh	r2, [r4, #2532]
+	.loc 2 2338 0
+	cmp	r3, r1
+	.loc 2 2336 0
+	add	r2, r2, #1
+	strh	r2, [r4, #2532]	@ movhi
+	.loc 2 2338 0
+	bge	.L1760
+.L1751:
+	.loc 2 2339 0
+	ldr	r0, .L1761+4
+	bl	FtlSuperblockPowerLostFix
+.LVL1577:
+	.loc 2 2340 0
+	ldr	r0, .L1761+8
+	bl	FtlSuperblockPowerLostFix
+.LVL1578:
+.LBB524:
+	.loc 2 2346 0
+	ldrh	r1, [r4, #2280]
+	ldr	r2, [r4, #2260]
+	ldrh	r0, [r4, #2284]
+	ldrh	r3, [r2, r1, lsl #1]
+	subs	r3, r3, r0
+	strh	r3, [r2, r1, lsl #1]	@ movhi
+	.loc 2 2347 0
+	ldrh	r3, [r4, #78]
+	.loc 2 2352 0
+	ldr	r1, [r4, #2260]
+	ldrh	r0, [r4, #2328]
+	.loc 2 2347 0
+	strh	r3, [r4, #2282]	@ movhi
+	.loc 2 2348 0
+	movs	r3, #0
+	strb	r3, [r4, #2286]
+	.loc 2 2349 0
+	strh	r3, [r4, #2284]	@ movhi
+	.loc 2 2352 0
+	ldrh	r6, [r4, #2332]
+	ldrh	r2, [r1, r0, lsl #1]
+	subs	r2, r2, r6
+	strh	r2, [r1, r0, lsl #1]	@ movhi
+	.loc 2 2353 0
+	ldrh	r2, [r4, #78]
+.LBE524:
+	.loc 2 2359 0
+	ldr	r0, .L1761+12
+.LBB525:
+	.loc 2 2354 0
+	strb	r3, [r4, #2334]
+	.loc 2 2353 0
+	strh	r2, [r4, #2330]	@ movhi
+	.loc 2 2355 0
+	strh	r3, [r4, #2332]	@ movhi
+.LBE525:
+	.loc 2 2359 0
+	bl	FtlMapBlkWriteDump_data
+.LVL1579:
+	.loc 2 2360 0
+	ldr	r0, .L1761+16
+	bl	FtlMapBlkWriteDump_data
+.LVL1580:
+	.loc 2 2372 0
+	ldrh	r3, [r4, #2534]
+	adds	r3, r3, #1
+	strh	r3, [r4, #2534]	@ movhi
+	.loc 2 2373 0
+	bl	l2p_flush
+.LVL1581:
+	.loc 2 2374 0
+	bl	FtlVpcTblFlush
+.LVL1582:
+	.loc 2 2375 0
+	bl	FtlVpcTblFlush
+.LVL1583:
+	b	.L1755
+.LVL1584:
+.L1750:
+	.loc 2 2332 0
+	adds	r3, r3, #1
+	b	.L1749
+.L1760:
+	.loc 2 2338 0
+	ldrh	r3, [r4, #3968]
+.LVL1585:
+	cmp	r3, #0
+	bne	.L1751
+.L1755:
+	.loc 2 2379 0
+	ldrh	r0, [r4, #2280]
+	movw	r3, #65535
+	cmp	r0, r3
+	beq	.L1756
+	ldrh	r3, [r4, #2284]
+	cbnz	r3, .L1756
+	.loc 2 2380 0
+	ldrh	r3, [r4, #2332]
+	cbnz	r3, .L1756
+	.loc 2 2382 0
+	bl	FtlGcRefreshBlock
+.LVL1586:
+	.loc 2 2383 0
+	ldrh	r0, [r4, #2328]
+	bl	FtlGcRefreshBlock
+.LVL1587:
+	.loc 2 2384 0
+	ldr	r0, .L1761+4
+	bl	allocate_new_data_superblock
+.LVL1588:
+	.loc 2 2385 0
+	ldr	r0, .L1761+8
+	bl	allocate_new_data_superblock
+.LVL1589:
+.L1756:
+	.loc 2 2390 0
+	ldrh	r3, [r4, #2532]
+	lsls	r3, r3, #27
+	bne	.L1745
+	.loc 2 2391 0
+	bl	FtlVpcCheckAndModify
+.LVL1590:
+	b	.L1745
+.L1762:
+	.align	2
+.L1761:
+	.word	.LANCHOR0
+	.word	.LANCHOR0+2280
+	.word	.LANCHOR0+2328
+	.word	.LANCHOR0+3864
+	.word	.LANCHOR0+3908
+.LBE523:
+.LBE522:
+.LFE242:
+	.fnend
+	.size	FtlSysBlkInit, .-FtlSysBlkInit
+	.align	1
+	.global	ftl_low_format
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	ftl_low_format, %function
+ftl_low_format:
+	.fnstart
+.LFB160:
+	.loc 3 623 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r3, r4, r5, r6, r7, r8, r9, lr}
+	.save {r3, r4, r5, r6, r7, r8, r9, lr}
+.LCFI197:
+	.loc 3 629 0
+	movs	r3, #0
+	ldr	r4, .L1787
+	.loc 3 631 0
+	ldrh	r0, [r4, #12]
+	.loc 3 629 0
+	str	r3, [r4, #2472]
+	.loc 3 630 0
+	str	r3, [r4, #2476]
+	.loc 3 631 0
+	bl	FtlFreeSysBlkQueueInit
+.LVL1591:
+	.loc 3 632 0
+	bl	FtlLoadBbt
+.LVL1592:
+	cbz	r0, .L1764
+	.loc 3 633 0
+	bl	FtlMakeBbt
+.LVL1593:
+.L1764:
+	.loc 3 637 0 discriminator 1
+	ldr	r0, .L1787+4
+	.loc 3 623 0 discriminator 1
+	movs	r2, #0
+.L1765:
+	.loc 3 635 0 discriminator 1
+	ldrh	r1, [r4, #34]
+	uxth	r3, r2
+	adds	r2, r2, #1
+	cmp	r3, r1, lsl #7
+	blt	.L1766
+	.loc 3 642 0
+	ldrh	r6, [r4, #16]
+	.loc 3 641 0
+	movs	r5, #0
+.LVL1594:
+.L1767:
+	.loc 3 642 0 discriminator 1
+	ldrh	r3, [r4, #18]
+	cmp	r3, r6
+	bhi	.L1768
+	.loc 3 645 0
+	ldrh	r1, [r4, #8]
+	subs	r3, r5, #3
+	cmp	r3, r1, lsl #1
+	bge	.L1769
+.L1773:
+	.loc 3 641 0
+	movs	r5, #0
+.LVL1595:
+	mov	r6, r5
+.LVL1596:
+.L1770:
+	.loc 3 656 0 discriminator 1
+	ldrh	r3, [r4, #16]
+	uxth	r0, r5
+	adds	r5, r5, #1
+	cmp	r3, r0
+	bhi	.L1774
+	.loc 3 658 0
+	ldrh	r3, [r4, #18]
+	.loc 3 661 0
+	ldrh	r5, [r4, #8]
+	ldr	r9, [r4, #20]
+	.loc 3 658 0
+	str	r3, [r4, #3764]
+	.loc 3 661 0
+	mov	r1, r5
+	mov	r0, r9
+	bl	__aeabi_uidiv
+.LVL1597:
+	.loc 3 662 0
+	ubfx	r7, r0, #5, #16
+	.loc 3 661 0
+	mov	r8, r0
+	.loc 3 662 0
+	add	r3, r7, #36
+	.loc 3 661 0
+	str	r0, [r4, #2436]
+	.loc 3 662 0
+	strh	r3, [r4, #2552]	@ movhi
+	.loc 3 663 0
+	movs	r3, #24
+	muls	r3, r5, r3
+	cmp	r6, r3
+	ble	.L1775
+	.loc 3 664 0
+	mov	r1, r5
+	sub	r0, r9, r6
+	bl	__aeabi_uidiv
+.LVL1598:
+	str	r0, [r4, #2436]
+	.loc 3 665 0
+	lsrs	r0, r0, #5
+	adds	r0, r0, #24
+	strh	r0, [r4, #2552]	@ movhi
+.L1775:
+	.loc 3 668 0
+	ldrh	r3, [r4, #70]
+	cbz	r3, .L1777
+	.loc 3 669 0
+	ldrh	r2, [r4, #2552]
+	add	r2, r2, r3, lsr #1
+	strh	r2, [r4, #2552]	@ movhi
+	.loc 3 670 0
+	mul	r2, r5, r3
+	cmp	r6, r2
+	.loc 3 672 0
+	itttt	lt
+	addlt	r3, r3, #32
+	.loc 3 671 0
+	strlt	r8, [r4, #2436]
+	.loc 3 672 0
+	addlt	r3, r3, r7
+	strhlt	r3, [r4, #2552]	@ movhi
+.L1777:
+	.loc 3 677 0
+	ldrh	r2, [r4, #2552]
+	.loc 3 689 0
+	movw	r6, #65535
+.LVL1599:
+	.loc 3 677 0
+	ldr	r3, [r4, #2436]
+	ldr	r7, .L1787+8
+	subs	r3, r3, r2
+	muls	r5, r3, r5
+	.loc 3 678 0
+	ldrh	r3, [r4, #78]
+	.loc 3 677 0
+	str	r5, [r7, #-216]
+	.loc 3 678 0
+	muls	r5, r3, r5
+	.loc 3 679 0
+	ldrh	r3, [r4, #34]
+	.loc 3 678 0
+	str	r5, [r4, #2436]
+	.loc 3 679 0
+	muls	r5, r3, r5
+	str	r5, [r4, #116]
+	mov	r5, r7
+	.loc 3 684 0
+	bl	FtlBbmTblFlush
+.LVL1600:
+	.loc 3 687 0
+	ldrh	r2, [r4, #18]
+	movs	r1, #0
+	ldr	r0, [r4, #2260]
+	.loc 3 701 0
+	ldr	r7, .L1787+12
+	.loc 3 687 0
+	lsls	r2, r2, #1
+	bl	ftl_memset
+.LVL1601:
+	.loc 3 698 0
+	ldrh	r2, [r4, #16]
+	.loc 3 688 0
+	movs	r3, #0
+	str	r3, [r4, #2432]
+	.loc 3 698 0
+	movs	r1, #255
+	.loc 3 690 0
+	strh	r3, [r4, #2570]	@ movhi
+	.loc 3 691 0
+	strb	r3, [r4, #2574]
+	.loc 3 692 0
+	strb	r3, [r4, #2576]
+	.loc 3 698 0
+	lsrs	r2, r2, #3
+	.loc 3 694 0
+	strh	r3, [r4, #2282]	@ movhi
+	.loc 3 695 0
+	strb	r3, [r4, #2286]
+	.loc 3 696 0
+	strh	r3, [r4, #2280]	@ movhi
+	.loc 3 697 0
+	movs	r3, #1
+	.loc 3 698 0
+	ldr	r0, [r4]
+	.loc 3 689 0
+	strh	r6, [r4, #2568]	@ movhi
+	.loc 3 697 0
+	strb	r3, [r4, #2288]
+	.loc 3 698 0
+	bl	ftl_memset
+.LVL1602:
+.L1779:
+	.loc 3 701 0
+	mov	r0, r7
+	bl	make_superblock
+.LVL1603:
+	.loc 3 702 0
+	ldrb	r3, [r4, #2287]	@ zero_extendqisi2
+	ldrh	r2, [r4, #2280]
+	cmp	r3, #0
+	bne	.L1780
+	.loc 3 705 0
+	ldr	r3, [r4, #2260]
+	strh	r6, [r3, r2, lsl #1]	@ movhi
+	.loc 3 706 0
+	ldrh	r3, [r4, #2280]
+	adds	r3, r3, #1
+	strh	r3, [r4, #2280]	@ movhi
+	.loc 3 707 0
+	b	.L1779
+.L1766:
+	.loc 3 636 0 discriminator 3
+	ldr	r5, [r4, #3776]
+	mvns	r1, r3
+	orr	r1, r3, r1, lsl #16
+	str	r1, [r5, r3, lsl #2]
+	.loc 3 637 0 discriminator 3
+	ldr	r1, [r4, #3768]
+	str	r0, [r1, r3, lsl #2]
+	b	.L1765
+.LVL1604:
+.L1768:
+	.loc 3 643 0 discriminator 3
+	mov	r0, r6
+	movs	r1, #1
+	bl	FtlLowFormatEraseBlock
+.LVL1605:
+	.loc 3 642 0 discriminator 3
+	adds	r6, r6, #1
+	.loc 3 643 0 discriminator 3
+	add	r5, r5, r0
+.LVL1606:
+	uxth	r5, r5
+.LVL1607:
+	.loc 3 642 0 discriminator 3
+	uxth	r6, r6
+	b	.L1767
+.L1769:
+	.loc 3 647 0
+	mov	r0, r5
+	bl	__aeabi_uidiv
+.LVL1608:
+	ldr	r3, [r4, #108]
+	add	r0, r0, r3
+	uxth	r0, r0
+	bl	FtlSysBlkNumInit
+.LVL1609:
+	.loc 3 648 0
+	ldrh	r0, [r4, #12]
+	bl	FtlFreeSysBlkQueueInit
+.LVL1610:
+	.loc 3 650 0
+	ldrh	r5, [r4, #16]
+.LVL1611:
+.L1771:
+	.loc 3 650 0 is_stmt 0 discriminator 1
+	ldrh	r3, [r4, #18]
+	cmp	r3, r5
+	bls	.L1773
+	.loc 3 651 0 is_stmt 1 discriminator 3
+	mov	r0, r5
+	movs	r1, #1
+	.loc 3 650 0 discriminator 3
+	adds	r5, r5, #1
+	.loc 3 651 0 discriminator 3
+	bl	FtlLowFormatEraseBlock
+.LVL1612:
+	.loc 3 650 0 discriminator 3
+	uxth	r5, r5
+	b	.L1771
+.LVL1613:
+.L1774:
+	.loc 3 657 0 discriminator 3
+	movs	r1, #0
+	bl	FtlLowFormatEraseBlock
+.LVL1614:
+	add	r6, r6, r0
+.LVL1615:
+	uxth	r6, r6
+.LVL1616:
+	b	.L1770
+.LVL1617:
+.L1780:
+	.loc 3 709 0
+	ldr	r3, [r4, #2472]
+	.loc 3 721 0
+	movw	r6, #65535
+	.loc 3 710 0
+	ldrh	r1, [r4, #2284]
+	.loc 3 717 0
+	ldr	r7, .L1787+16
+	.loc 3 709 0
+	str	r3, [r4, #2292]
+	adds	r3, r3, #1
+	str	r3, [r4, #2472]
+	.loc 3 710 0
+	ldr	r3, [r4, #2260]
+	strh	r1, [r3, r2, lsl #1]	@ movhi
+	.loc 3 712 0
+	movs	r3, #0
+	strh	r3, [r4, #2330]	@ movhi
+	.loc 3 713 0
+	strb	r3, [r4, #2334]
+	.loc 3 714 0
+	ldrh	r3, [r4, #2280]
+	adds	r3, r3, #1
+	strh	r3, [r4, #2328]	@ movhi
+	.loc 3 715 0
+	movs	r3, #1
+	strb	r3, [r4, #2336]
+.L1781:
+	.loc 3 717 0
+	mov	r0, r7
+	bl	make_superblock
+.LVL1618:
+	.loc 3 718 0
+	ldrb	r3, [r4, #2335]	@ zero_extendqisi2
+	ldrh	r2, [r4, #2328]
+	cbnz	r3, .L1782
+	.loc 3 721 0
+	ldr	r3, [r4, #2260]
+	strh	r6, [r3, r2, lsl #1]	@ movhi
+	.loc 3 722 0
+	ldrh	r3, [r4, #2328]
+	adds	r3, r3, #1
+	strh	r3, [r4, #2328]	@ movhi
+	.loc 3 723 0
+	b	.L1781
+.L1782:
+	.loc 3 725 0
+	ldr	r3, [r4, #2472]
+	.loc 3 727 0
+	movw	r6, #65535
+	.loc 3 726 0
+	ldrh	r1, [r4, #2332]
+	.loc 3 725 0
+	str	r3, [r4, #2340]
+	adds	r3, r3, #1
+	str	r3, [r4, #2472]
+	.loc 3 726 0
+	ldr	r3, [r4, #2260]
+	strh	r1, [r3, r2, lsl #1]	@ movhi
+	.loc 3 727 0
+	strh	r6, [r4, #2376]	@ movhi
+	.loc 3 730 0
+	bl	FtlFreeSysBlkQueueOut
+.LVL1619:
+	.loc 3 731 0
+	movs	r3, #0
+	.loc 3 730 0
+	strh	r0, [r4, #2556]	@ movhi
+	.loc 3 731 0
+	strh	r3, [r4, #2558]	@ movhi
+	.loc 3 733 0
+	ldr	r3, [r5, #-216]
+	.loc 3 732 0
+	strh	r6, [r4, #2560]	@ movhi
+	.loc 3 733 0
+	strh	r3, [r4, #2562]	@ movhi
+	.loc 3 734 0
+	ldr	r3, [r4, #2472]
+	str	r3, [r4, #2564]
+	adds	r3, r3, #1
+	str	r3, [r4, #2472]
+	.loc 3 735 0
+	bl	FtlVpcTblFlush
+.LVL1620:
+	.loc 3 736 0
+	bl	FtlSysBlkInit
+.LVL1621:
+	cbnz	r0, .L1783
+	.loc 3 737 0
+	ldr	r3, .L1787+20
+	movs	r2, #1
+	str	r2, [r3]
+.L1783:
+	.loc 3 739 0
+	movs	r0, #0
+	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
+.L1788:
+	.align	2
+.L1787:
+	.word	.LANCHOR0
+	.word	168778952
+	.word	.LANCHOR3
+	.word	.LANCHOR0+2280
+	.word	.LANCHOR0+2328
+	.word	.LANCHOR2
+.LFE160:
+	.fnend
+	.size	ftl_low_format, .-ftl_low_format
+	.align	1
+	.global	sftl_init
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	sftl_init, %function
+sftl_init:
+	.fnstart
+.LFB161:
+	.loc 3 743 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	push	{r3, r4, r5, lr}
+	.save {r3, r4, r5, lr}
+.LCFI198:
+	.loc 3 746 0
+	mov	r3, #-1
+	ldr	r5, .L1795
+	.loc 3 753 0
+	ldr	r4, .L1795+4
+	.loc 3 749 0
+	ldr	r1, .L1795+8
+	ldr	r0, .L1795+12
+	.loc 3 746 0
+	str	r3, [r5]
+	.loc 3 749 0
+	bl	printk
+.LVL1622:
+	.loc 3 750 0
+	ldr	r0, .L1795+16
+	bl	FtlConstantsInit
+.LVL1623:
+	.loc 3 751 0
+	bl	FtlMemInit
+.LVL1624:
+	.loc 3 752 0
+	bl	FtlVariablesInit
+.LVL1625:
+	.loc 3 753 0
+	ldrh	r0, [r4, #12]
+	bl	FtlFreeSysBlkQueueInit
+.LVL1626:
+	.loc 3 756 0
+	bl	FtlLoadBbt
+.LVL1627:
+	cbnz	r0, .L1793
+	.loc 3 767 0
+	bl	FtlSysBlkInit
+.LVL1628:
+	cbnz	r0, .L1793
+	.loc 3 779 0
+	movs	r3, #1
+	str	r3, [r5]
+	.loc 3 783 0
+	ldrh	r3, [r4, #2276]
+	cmp	r3, #15
+	bhi	.L1793
+	movw	r4, #8129
+.L1792:
+.LBB526:
+	.loc 3 786 0 discriminator 3
+	movs	r1, #1
+	movs	r0, #0
+	bl	rk_ftl_garbage_collect
+.LVL1629:
+	.loc 3 785 0 discriminator 3
+	subs	r4, r4, #1
+	bne	.L1792
+.L1793:
+.LBE526:
+	.loc 3 794 0
+	movs	r0, #0
+	pop	{r3, r4, r5, pc}
+.L1796:
+	.align	2
+.L1795:
+	.word	.LANCHOR2
+	.word	.LANCHOR0
+	.word	.LC70
+	.word	.LC71
+	.word	g_nand_phy_info
+.LFE161:
+	.fnend
+	.size	sftl_init, .-sftl_init
+	.align	1
+	.global	ftl_memcmp
+	.syntax unified
+	.thumb
+	.thumb_func
+	.fpu softvfp
+	.type	ftl_memcmp, %function
+ftl_memcmp:
+	.fnstart
+.LFB279:
+	.loc 1 211 0
+	@ args = 0, pretend = 0, frame = 0
+	@ frame_needed = 0, uses_anonymous_args = 0
+	@ link register save eliminated.
+.LVL1630:
+	.loc 1 212 0
+	b	memcmp
+.LVL1631:
+.LFE279:
+	.fnend
+	.size	ftl_memcmp, .-ftl_memcmp
+	.global	ftl_temp_buf
+	.global	gc_ink_free_return_value
+	.global	check_vpc_table
+	.global	FtlUpdateVaildLpnCount
+	.global	g_ect_tbl_power_up_flush
+	.global	power_up_flag
+	.global	gFtlInitStatus
+	.global	DeviceCapacity
+	.global	g_power_lost_recovery_flag
+	.global	c_mlc_erase_count_value
+	.global	g_recovery_ppa_tbl
+	.global	g_recovery_page_min_ver
+	.global	g_recovery_page_num
+	.global	g_cur_erase_blk
+	.global	g_gc_skip_write_count
+	.global	g_gc_head_data_block_count
+	.global	g_gc_head_data_block
+	.global	g_ftl_nand_free_count
+	.global	g_in_swl_replace
+	.global	g_in_gc_progress
+	.global	g_max_erase_count
+	.global	g_totle_sys_slc_erase_count
+	.global	g_totle_slc_erase_count
+	.global	g_min_erase_count
+	.global	g_totle_avg_erase_count
+	.global	g_totle_mlc_erase_count
+	.global	g_totle_l2p_write_count
+	.global	g_totle_cache_write_count
+	.global	g_tmp_data_superblock_id
+	.global	g_totle_read_page_count
+	.global	g_totle_discard_page_count
+	.global	g_totle_read_sector
+	.global	g_totle_write_sector
+	.global	g_totle_write_page_count
+	.global	g_totle_gc_page_count
+	.global	g_gc_blk_index
+	.global	g_gc_merge_free_blk_threshold
+	.global	g_gc_free_blk_threshold
+	.global	g_gc_bad_block_temp_tbl
+	.global	g_gc_bad_block_gc_index
+	.global	g_gc_bad_block_temp_num
+	.global	g_gc_next_blk_1
+	.global	g_gc_next_blk
+	.global	g_gc_cur_blk_max_valid_pages
+	.global	g_gc_cur_blk_valid_pages
+	.global	g_gc_page_offset
+	.global	g_gc_blk_num
+	.global	p_gc_blk_tbl
+	.global	p_gc_page_info
+	.global	g_sys_ext_data
+	.global	g_sys_save_data
+	.global	gp_last_act_superblock
+	.global	g_gc_superblock
+	.global	g_gc_temp_superblock
+	.global	g_buffer_superblock
+	.global	g_active_superblock
+	.global	g_num_data_superblocks
+	.global	g_num_free_superblocks
+	.global	p_data_block_list_tail
+	.global	p_data_block_list_head
+	.global	p_free_data_block_list_head
+	.global	p_data_block_list_table
+	.global	g_l2p_last_update_region_id
+	.global	p_l2p_map_buf
+	.global	p_l2p_ram_map
+	.global	g_totle_vendor_block
+	.global	p_vendor_region_ppn_table
+	.global	p_vendor_block_ver_table
+	.global	p_vendor_block_valid_page_count
+	.global	p_vendor_block_table
+	.global	g_totle_map_block
+	.global	p_map_region_ppn_table
+	.global	p_map_block_ver_table
+	.global	p_map_block_valid_page_count
+	.global	p_map_block_table
+	.global	p_blk_mode_table
+	.global	p_valid_page_count_check_table
+	.global	p_valid_page_count_table
+	.global	g_totle_swl_count
+	.global	p_swl_mul_table
+	.global	p_erase_count_table
+	.global	g_ect_tbl_info_size
+	.global	gp_ect_tbl_info
+	.global	g_gc_num_req
+	.global	c_gc_page_buf_num
+	.global	gp_gc_page_buf_info
+	.global	p_gc_data_buf
+	.global	p_gc_spare_buf
+	.global	p_io_spare_buf
+	.global	p_io_data_buf_1
+	.global	p_io_data_buf_0
+	.global	p_sys_spare_buf
+	.global	p_vendor_data_buf
+	.global	p_sys_data_buf_1
+	.global	p_sys_data_buf
+	.global	p_plane_order_table
+	.global	g_req_cache
+	.global	req_gc_dst
+	.global	req_gc
+	.global	req_erase
+	.global	req_prgm
+	.global	req_read
+	.global	req_sys
+	.global	gVendorBlkInfo
+	.global	gL2pMapInfo
+	.global	gSysFreeQueue
+	.global	gSysInfo
+	.global	gBbtInfo
+	.global	g_MaxLbn
+	.global	g_VaildLpn
+	.global	g_MaxLpn
+	.global	g_MaxLbaSector
+	.global	g_GlobalDataVersion
+	.global	g_GlobalSysVersion
+	.global	ftl_gc_temp_power_lost_recovery_flag
+	.global	c_ftl_nand_max_data_blks
+	.global	c_ftl_nand_data_op_blks_per_plane
+	.global	c_ftl_nand_data_blks_per_plane
+	.global	c_ftl_nand_max_sys_blks
+	.global	c_ftl_nand_init_sys_blks_per_plane
+	.global	c_ftl_nand_sys_blks_per_plane
+	.global	c_ftl_vendor_part_size
+	.global	c_ftl_nand_max_vendor_blks
+	.global	c_ftl_nand_max_map_blks
+	.global	c_ftl_nand_map_blks_per_plane
+	.global	c_ftl_nand_vendor_region_num
+	.global	c_ftl_nand_l2pmap_ram_region_num
+	.global	c_ftl_nand_map_region_num
+	.global	c_ftl_nand_totle_phy_blks
+	.global	c_ftl_nand_reserved_blks
+	.global	c_ftl_nand_byte_pre_oob
+	.global	c_ftl_nand_byte_pre_page
+	.global	c_ftl_nand_sec_pre_page_shift
+	.global	c_ftl_nand_sec_pre_page
+	.global	c_ftl_nand_page_pre_super_blk
+	.global	c_ftl_nand_page_pre_slc_blk
+	.global	c_ftl_nand_page_pre_blk
+	.global	c_ftl_nand_bbm_buf_size
+	.global	c_ftl_nand_ext_blk_pre_plane
+	.global	c_ftl_nand_blk_pre_plane
+	.global	c_ftl_nand_planes_num
+	.global	c_ftl_nand_blks_per_die_shift
+	.global	c_ftl_nand_blks_per_die
+	.global	c_ftl_nand_planes_per_die
+	.global	c_ftl_nand_die_num
+	.global	c_ftl_nand_type
+	.section	.rodata
+	.set	.LANCHOR1,. + 0
+	.type	__func__.6674, %object
+	.size	__func__.6674, 17
+__func__.6674:
+	.ascii	"INSERT_DATA_LIST\000"
+	.type	__func__.6669, %object
+	.size	__func__.6669, 17
+__func__.6669:
+	.ascii	"INSERT_FREE_LIST\000"
+	.type	__func__.6704, %object
+	.size	__func__.6704, 17
+__func__.6704:
+	.ascii	"List_remove_node\000"
+	.type	__func__.6736, %object
+	.size	__func__.6736, 22
+__func__.6736:
+	.ascii	"List_update_data_list\000"
+	.type	__func__.6777, %object
+	.size	__func__.6777, 26
+__func__.6777:
+	.ascii	"ftl_map_blk_alloc_new_blk\000"
+	.type	__func__.6841, %object
+	.size	__func__.6841, 22
+__func__.6841:
+	.ascii	"select_l2p_ram_region\000"
+	.type	__func__.7164, %object
+	.size	__func__.7164, 16
+__func__.7164:
+	.ascii	"make_superblock\000"
+	.type	__func__.7338, %object
+	.size	__func__.7338, 19
+__func__.7338:
+	.ascii	"get_new_active_ppa\000"
+	.type	__func__.7578, %object
+	.size	__func__.7578, 15
+__func__.7578:
+	.ascii	"FlashReadPages\000"
+	.type	__func__.7595, %object
+	.size	__func__.7595, 15
+__func__.7595:
+	.ascii	"FlashProgPages\000"
+	.type	__func__.6287, %object
+	.size	__func__.6287, 11
+__func__.6287:
+	.ascii	"FtlMemInit\000"
+	.type	__func__.6503, %object
+	.size	__func__.6503, 14
+__func__.6503:
+	.ascii	"FtlBbt2Bitmap\000"
+	.type	__func__.6745, %object
+	.size	__func__.6745, 16
+__func__.6745:
+	.ascii	"load_l2p_region\000"
+	.type	__func__.6802, %object
+	.size	__func__.6802, 31
+__func__.6802:
+	.ascii	"Ftl_write_map_blk_to_last_page\000"
+	.type	__func__.6816, %object
+	.size	__func__.6816, 16
+__func__.6816:
+	.ascii	"FtlMapWritePage\000"
+	.type	__func__.6788, %object
+	.size	__func__.6788, 15
+__func__.6788:
+	.ascii	"ftl_map_blk_gc\000"
+	.type	__func__.6858, %object
+	.size	__func__.6858, 9
+__func__.6858:
+	.ascii	"log2phys\000"
+	.type	__func__.7073, %object
+	.size	__func__.7073, 16
+__func__.7073:
+	.ascii	"FtlReUsePrevPpa\000"
+	.type	__func__.7226, %object
+	.size	__func__.7226, 14
+__func__.7226:
+	.ascii	"ftl_check_vpc\000"
+	.type	__func__.6953, %object
+	.size	__func__.6953, 14
+__func__.6953:
+	.ascii	"FtlScanSysBlk\000"
+	.type	__func__.7185, %object
+	.size	__func__.7185, 18
+__func__.7185:
+	.ascii	"SupperBlkListInit\000"
+	.type	__func__.7310, %object
+	.size	__func__.7310, 25
+__func__.7310:
+	.ascii	"allocate_data_superblock\000"
+	.type	__func__.7351, %object
+	.size	__func__.7351, 16
+__func__.7351:
+	.ascii	"update_vpc_list\000"
+	.type	__func__.7358, %object
+	.size	__func__.7358, 20
+__func__.7358:
+	.ascii	"decrement_vpc_count\000"
+	.type	__func__.7107, %object
+	.size	__func__.7107, 22
+__func__.7107:
+	.ascii	"FtlRecoverySuperblock\000"
+	.type	__func__.6546, %object
+	.size	__func__.6546, 11
+__func__.6546:
+	.ascii	"FtlLoadBbt\000"
+	.type	__func__.6931, %object
+	.size	__func__.6931, 15
+__func__.6931:
+	.ascii	"FtlVpcTblFlush\000"
+	.type	__func__.7210, %object
+	.size	__func__.7210, 21
+__func__.7210:
+	.ascii	"FtlVpcCheckAndModify\000"
+	.type	__func__.7331, %object
+	.size	__func__.7331, 29
+__func__.7331:
+	.ascii	"allocate_new_data_superblock\000"
+	.type	__func__.6411, %object
+	.size	__func__.6411, 13
+__func__.6411:
+	.ascii	"FtlProgPages\000"
+	.type	__func__.7428, %object
+	.size	__func__.7428, 19
+__func__.7428:
+	.ascii	"FtlGcFreeTempBlock\000"
+	.type	__func__.7534, %object
+	.size	__func__.7534, 23
+__func__.7534:
+	.ascii	"rk_ftl_garbage_collect\000"
+	.type	__func__.6439, %object
+	.size	__func__.6439, 9
+__func__.6439:
+	.ascii	"FtlWrite\000"
+	.type	__func__.7010, %object
+	.size	__func__.7010, 15
+__func__.7010:
+	.ascii	"FtlLoadSysInfo\000"
+	.data
+	.align	2
+	.set	.LANCHOR2,. + 0
+	.type	gFtlInitStatus, %object
+	.size	gFtlInitStatus, 4
+gFtlInitStatus:
+	.word	-1
+	.type	ftl_gc_temp_block_bops_scan_page_addr, %object
+	.size	ftl_gc_temp_block_bops_scan_page_addr, 2
+ftl_gc_temp_block_bops_scan_page_addr:
+	.short	-1
+	.space	2
+	.type	power_up_flag, %object
+	.size	power_up_flag, 4
+power_up_flag:
+	.word	1
+	.bss
+	.align	2
+	.set	.LANCHOR0,. + 0
+	.set	.LANCHOR3,. + 4344
+	.type	p_blk_mode_table, %object
+	.size	p_blk_mode_table, 4
+p_blk_mode_table:
+	.space	4
+	.type	c_ftl_nand_sys_blks_per_plane, %object
+	.size	c_ftl_nand_sys_blks_per_plane, 4
+c_ftl_nand_sys_blks_per_plane:
+	.space	4
+	.type	c_ftl_nand_planes_num, %object
+	.size	c_ftl_nand_planes_num, 2
+c_ftl_nand_planes_num:
+	.space	2
+	.space	2
+	.type	c_ftl_nand_max_sys_blks, %object
+	.size	c_ftl_nand_max_sys_blks, 4
+c_ftl_nand_max_sys_blks:
+	.space	4
+	.type	c_ftl_nand_data_blks_per_plane, %object
+	.size	c_ftl_nand_data_blks_per_plane, 2
+c_ftl_nand_data_blks_per_plane:
+	.space	2
+	.type	c_ftl_nand_blk_pre_plane, %object
+	.size	c_ftl_nand_blk_pre_plane, 2
+c_ftl_nand_blk_pre_plane:
+	.space	2
+	.type	c_ftl_nand_max_data_blks, %object
+	.size	c_ftl_nand_max_data_blks, 4
+c_ftl_nand_max_data_blks:
+	.space	4
+	.type	c_ftl_nand_totle_phy_blks, %object
+	.size	c_ftl_nand_totle_phy_blks, 4
+c_ftl_nand_totle_phy_blks:
+	.space	4
+	.type	c_ftl_nand_type, %object
+	.size	c_ftl_nand_type, 2
+c_ftl_nand_type:
+	.space	2
+	.type	c_ftl_nand_die_num, %object
+	.size	c_ftl_nand_die_num, 2
+c_ftl_nand_die_num:
+	.space	2
+	.type	c_ftl_nand_planes_per_die, %object
+	.size	c_ftl_nand_planes_per_die, 2
+c_ftl_nand_planes_per_die:
+	.space	2
+	.type	c_ftl_nand_sec_pre_page, %object
+	.size	c_ftl_nand_sec_pre_page, 2
+c_ftl_nand_sec_pre_page:
+	.space	2
+	.type	p_plane_order_table, %object
+	.size	p_plane_order_table, 32
+p_plane_order_table:
+	.space	32
+	.type	c_mlc_erase_count_value, %object
+	.size	c_mlc_erase_count_value, 2
+c_mlc_erase_count_value:
+	.space	2
+	.type	c_ftl_nand_ext_blk_pre_plane, %object
+	.size	c_ftl_nand_ext_blk_pre_plane, 2
+c_ftl_nand_ext_blk_pre_plane:
+	.space	2
+	.type	c_ftl_vendor_part_size, %object
+	.size	c_ftl_vendor_part_size, 2
+c_ftl_vendor_part_size:
+	.space	2
+	.type	c_ftl_nand_blks_per_die, %object
+	.size	c_ftl_nand_blks_per_die, 2
+c_ftl_nand_blks_per_die:
+	.space	2
+	.type	c_ftl_nand_blks_per_die_shift, %object
+	.size	c_ftl_nand_blks_per_die_shift, 2
+c_ftl_nand_blks_per_die_shift:
+	.space	2
+	.type	c_ftl_nand_page_pre_blk, %object
+	.size	c_ftl_nand_page_pre_blk, 2
+c_ftl_nand_page_pre_blk:
+	.space	2
+	.type	c_ftl_nand_page_pre_slc_blk, %object
+	.size	c_ftl_nand_page_pre_slc_blk, 2
+c_ftl_nand_page_pre_slc_blk:
+	.space	2
+	.type	c_ftl_nand_page_pre_super_blk, %object
+	.size	c_ftl_nand_page_pre_super_blk, 2
+c_ftl_nand_page_pre_super_blk:
+	.space	2
+	.type	c_ftl_nand_sec_pre_page_shift, %object
+	.size	c_ftl_nand_sec_pre_page_shift, 2
+c_ftl_nand_sec_pre_page_shift:
+	.space	2
+	.type	c_ftl_nand_byte_pre_page, %object
+	.size	c_ftl_nand_byte_pre_page, 2
+c_ftl_nand_byte_pre_page:
+	.space	2
+	.type	c_ftl_nand_byte_pre_oob, %object
+	.size	c_ftl_nand_byte_pre_oob, 2
+c_ftl_nand_byte_pre_oob:
+	.space	2
+	.type	c_ftl_nand_reserved_blks, %object
+	.size	c_ftl_nand_reserved_blks, 2
+c_ftl_nand_reserved_blks:
+	.space	2
+	.type	DeviceCapacity, %object
+	.size	DeviceCapacity, 4
+DeviceCapacity:
+	.space	4
+	.type	c_ftl_nand_max_vendor_blks, %object
+	.size	c_ftl_nand_max_vendor_blks, 2
+c_ftl_nand_max_vendor_blks:
+	.space	2
+	.type	c_ftl_nand_vendor_region_num, %object
+	.size	c_ftl_nand_vendor_region_num, 2
+c_ftl_nand_vendor_region_num:
+	.space	2
+	.type	c_ftl_nand_map_blks_per_plane, %object
+	.size	c_ftl_nand_map_blks_per_plane, 2
+c_ftl_nand_map_blks_per_plane:
+	.space	2
+	.space	2
+	.type	c_ftl_nand_max_map_blks, %object
+	.size	c_ftl_nand_max_map_blks, 4
+c_ftl_nand_max_map_blks:
+	.space	4
+	.type	c_ftl_nand_init_sys_blks_per_plane, %object
+	.size	c_ftl_nand_init_sys_blks_per_plane, 4
+c_ftl_nand_init_sys_blks_per_plane:
+	.space	4
+	.type	c_ftl_nand_map_region_num, %object
+	.size	c_ftl_nand_map_region_num, 2
+c_ftl_nand_map_region_num:
+	.space	2
+	.type	c_ftl_nand_l2pmap_ram_region_num, %object
+	.size	c_ftl_nand_l2pmap_ram_region_num, 2
+c_ftl_nand_l2pmap_ram_region_num:
+	.space	2
+	.type	g_MaxLbaSector, %object
+	.size	g_MaxLbaSector, 4
+g_MaxLbaSector:
+	.space	4
+	.type	g_totle_vendor_block, %object
+	.size	g_totle_vendor_block, 2
+g_totle_vendor_block:
+	.space	2
+	.space	2
+	.type	p_vendor_block_table, %object
+	.size	p_vendor_block_table, 4
+p_vendor_block_table:
+	.space	4
+	.type	gBbtInfo, %object
+	.size	gBbtInfo, 60
+gBbtInfo:
+	.space	60
+	.type	gSysFreeQueue, %object
+	.size	gSysFreeQueue, 2056
+gSysFreeQueue:
+	.space	2056
+	.type	p_sys_data_buf, %object
+	.size	p_sys_data_buf, 4
+p_sys_data_buf:
+	.space	4
+	.type	p_erase_count_table, %object
+	.size	p_erase_count_table, 4
+p_erase_count_table:
+	.space	4
+	.type	p_data_block_list_table, %object
+	.size	p_data_block_list_table, 4
+p_data_block_list_table:
+	.space	4
+	.type	p_data_block_list_head, %object
+	.size	p_data_block_list_head, 4
+p_data_block_list_head:
+	.space	4
+	.type	p_valid_page_count_table, %object
+	.size	p_valid_page_count_table, 4
+p_valid_page_count_table:
+	.space	4
+	.type	p_data_block_list_tail, %object
+	.size	p_data_block_list_tail, 4
+p_data_block_list_tail:
+	.space	4
+	.type	g_num_data_superblocks, %object
+	.size	g_num_data_superblocks, 2
+g_num_data_superblocks:
+	.space	2
+	.space	2
+	.type	p_free_data_block_list_head, %object
+	.size	p_free_data_block_list_head, 4
+p_free_data_block_list_head:
+	.space	4
+	.type	g_num_free_superblocks, %object
+	.size	g_num_free_superblocks, 2
+g_num_free_superblocks:
+	.space	2
+	.space	2
+	.type	g_active_superblock, %object
+	.size	g_active_superblock, 48
+g_active_superblock:
+	.space	48
+	.type	g_buffer_superblock, %object
+	.size	g_buffer_superblock, 48
+g_buffer_superblock:
+	.space	48
+	.type	g_gc_temp_superblock, %object
+	.size	g_gc_temp_superblock, 48
+g_gc_temp_superblock:
+	.space	48
+	.type	p_l2p_ram_map, %object
+	.size	p_l2p_ram_map, 4
+p_l2p_ram_map:
+	.space	4
+	.type	g_l2p_last_update_region_id, %object
+	.size	g_l2p_last_update_region_id, 2
+g_l2p_last_update_region_id:
+	.space	2
+	.type	FtlUpdateVaildLpnCount, %object
+	.size	FtlUpdateVaildLpnCount, 2
+FtlUpdateVaildLpnCount:
+	.space	2
+	.type	g_VaildLpn, %object
+	.size	g_VaildLpn, 4
+g_VaildLpn:
+	.space	4
+	.type	g_MaxLpn, %object
+	.size	g_MaxLpn, 4
+g_MaxLpn:
+	.space	4
+	.type	g_totle_read_page_count, %object
+	.size	g_totle_read_page_count, 4
+g_totle_read_page_count:
+	.space	4
+	.type	g_totle_discard_page_count, %object
+	.size	g_totle_discard_page_count, 4
+g_totle_discard_page_count:
+	.space	4
+	.type	g_totle_write_page_count, %object
+	.size	g_totle_write_page_count, 4
+g_totle_write_page_count:
+	.space	4
+	.type	g_totle_cache_write_count, %object
+	.size	g_totle_cache_write_count, 4
+g_totle_cache_write_count:
+	.space	4
+	.type	g_totle_l2p_write_count, %object
+	.size	g_totle_l2p_write_count, 4
+g_totle_l2p_write_count:
+	.space	4
+	.type	g_totle_gc_page_count, %object
+	.size	g_totle_gc_page_count, 4
+g_totle_gc_page_count:
+	.space	4
+	.type	g_totle_write_sector, %object
+	.size	g_totle_write_sector, 4
+g_totle_write_sector:
+	.space	4
+	.type	g_totle_read_sector, %object
+	.size	g_totle_read_sector, 4
+g_totle_read_sector:
+	.space	4
+	.type	g_GlobalSysVersion, %object
+	.size	g_GlobalSysVersion, 4
+g_GlobalSysVersion:
+	.space	4
+	.type	g_GlobalDataVersion, %object
+	.size	g_GlobalDataVersion, 4
+g_GlobalDataVersion:
+	.space	4
+	.type	g_totle_mlc_erase_count, %object
+	.size	g_totle_mlc_erase_count, 4
+g_totle_mlc_erase_count:
+	.space	4
+	.type	g_totle_slc_erase_count, %object
+	.size	g_totle_slc_erase_count, 4
+g_totle_slc_erase_count:
+	.space	4
+	.type	g_totle_avg_erase_count, %object
+	.size	g_totle_avg_erase_count, 4
+g_totle_avg_erase_count:
+	.space	4
+	.type	g_totle_sys_slc_erase_count, %object
+	.size	g_totle_sys_slc_erase_count, 4
+g_totle_sys_slc_erase_count:
+	.space	4
+	.type	g_max_erase_count, %object
+	.size	g_max_erase_count, 4
+g_max_erase_count:
+	.space	4
+	.type	g_min_erase_count, %object
+	.size	g_min_erase_count, 4
+g_min_erase_count:
+	.space	4
+	.type	g_sys_save_data, %object
+	.size	g_sys_save_data, 48
+g_sys_save_data:
+	.space	48
+	.type	c_ftl_nand_data_op_blks_per_plane, %object
+	.size	c_ftl_nand_data_op_blks_per_plane, 2
+c_ftl_nand_data_op_blks_per_plane:
+	.space	2
+	.space	2
+	.type	gSysInfo, %object
+	.size	gSysInfo, 12
+gSysInfo:
+	.space	12
+	.type	g_gc_superblock, %object
+	.size	g_gc_superblock, 48
+g_gc_superblock:
+	.space	48
+	.type	g_sys_ext_data, %object
+	.size	g_sys_ext_data, 512
+g_sys_ext_data:
+	.space	512
+	.type	g_gc_free_blk_threshold, %object
+	.size	g_gc_free_blk_threshold, 2
+g_gc_free_blk_threshold:
+	.space	2
+	.type	g_gc_merge_free_blk_threshold, %object
+	.size	g_gc_merge_free_blk_threshold, 2
+g_gc_merge_free_blk_threshold:
+	.space	2
+	.type	g_gc_skip_write_count, %object
+	.size	g_gc_skip_write_count, 4
+g_gc_skip_write_count:
+	.space	4
+	.type	g_gc_blk_index, %object
+	.size	g_gc_blk_index, 2
+g_gc_blk_index:
+	.space	2
+	.space	2
+	.type	g_in_swl_replace, %object
+	.size	g_in_swl_replace, 4
+g_in_swl_replace:
+	.space	4
+	.type	g_gc_num_req, %object
+	.size	g_gc_num_req, 4
+g_gc_num_req:
+	.space	4
+	.type	gp_gc_page_buf_info, %object
+	.size	gp_gc_page_buf_info, 4
+gp_gc_page_buf_info:
+	.space	4
+	.type	p_gc_data_buf, %object
+	.size	p_gc_data_buf, 4
+p_gc_data_buf:
+	.space	4
+	.type	p_gc_spare_buf, %object
+	.size	p_gc_spare_buf, 4
+p_gc_spare_buf:
+	.space	4
+	.type	req_gc, %object
+	.size	req_gc, 4
+req_gc:
+	.space	4
+	.type	c_gc_page_buf_num, %object
+	.size	c_gc_page_buf_num, 4
+c_gc_page_buf_num:
+	.space	4
+	.type	p_gc_blk_tbl, %object
+	.size	p_gc_blk_tbl, 4
+p_gc_blk_tbl:
+	.space	4
+	.type	g_gc_blk_num, %object
+	.size	g_gc_blk_num, 2
+g_gc_blk_num:
+	.space	2
+	.space	2
+	.type	p_gc_page_info, %object
+	.size	p_gc_page_info, 4
+p_gc_page_info:
+	.space	4
+	.type	g_gc_page_offset, %object
+	.size	g_gc_page_offset, 2
+g_gc_page_offset:
+	.space	2
+	.type	g_gc_next_blk, %object
+	.size	g_gc_next_blk, 2
+g_gc_next_blk:
+	.space	2
+	.type	g_gc_next_blk_1, %object
+	.size	g_gc_next_blk_1, 2
+g_gc_next_blk_1:
+	.space	2
+	.type	g_gc_bad_block_temp_num, %object
+	.size	g_gc_bad_block_temp_num, 2
+g_gc_bad_block_temp_num:
+	.space	2
+	.type	g_gc_bad_block_temp_tbl, %object
+	.size	g_gc_bad_block_temp_tbl, 34
+g_gc_bad_block_temp_tbl:
+	.space	34
+	.type	g_gc_bad_block_gc_index, %object
+	.size	g_gc_bad_block_gc_index, 2
+g_gc_bad_block_gc_index:
+	.space	2
+	.type	req_sys, %object
+	.size	req_sys, 20
+req_sys:
+	.space	20
+	.type	p_sys_spare_buf, %object
+	.size	p_sys_spare_buf, 4
+p_sys_spare_buf:
+	.space	4
+	.type	check_spare_buf, %object
+	.size	check_spare_buf, 512
+check_spare_buf:
+	.space	512
+	.type	req_erase, %object
+	.size	req_erase, 4
+req_erase:
+	.space	4
+	.type	g_cur_erase_blk, %object
+	.size	g_cur_erase_blk, 4
+g_cur_erase_blk:
+	.space	4
+	.type	p_io_data_buf_1, %object
+	.size	p_io_data_buf_1, 4
+p_io_data_buf_1:
+	.space	4
+	.type	p_io_spare_buf, %object
+	.size	p_io_spare_buf, 4
+p_io_spare_buf:
+	.space	4
+	.type	p_io_data_buf_0, %object
+	.size	p_io_data_buf_0, 4
+p_io_data_buf_0:
+	.space	4
+	.type	g_in_gc_progress, %object
+	.size	g_in_gc_progress, 4
+g_in_gc_progress:
+	.space	4
+	.type	g_gc_head_data_block, %object
+	.size	g_gc_head_data_block, 4
+g_gc_head_data_block:
+	.space	4
+	.type	g_gc_head_data_block_count, %object
+	.size	g_gc_head_data_block_count, 4
+g_gc_head_data_block_count:
+	.space	4
+	.type	req_read, %object
+	.size	req_read, 4
+req_read:
+	.space	4
+	.type	req_gc_dst, %object
+	.size	req_gc_dst, 4
+req_gc_dst:
+	.space	4
+	.type	req_prgm, %object
+	.size	req_prgm, 4
+req_prgm:
+	.space	4
+	.type	p_sys_data_buf_1, %object
+	.size	p_sys_data_buf_1, 4
+p_sys_data_buf_1:
+	.space	4
+	.type	p_vendor_data_buf, %object
+	.size	p_vendor_data_buf, 4
+p_vendor_data_buf:
+	.space	4
+	.type	g_ect_tbl_info_size, %object
+	.size	g_ect_tbl_info_size, 2
+g_ect_tbl_info_size:
+	.space	2
+	.space	2
+	.type	p_swl_mul_table, %object
+	.size	p_swl_mul_table, 4
+p_swl_mul_table:
+	.space	4
+	.type	gp_ect_tbl_info, %object
+	.size	gp_ect_tbl_info, 4
+gp_ect_tbl_info:
+	.space	4
+	.type	p_valid_page_count_check_table, %object
+	.size	p_valid_page_count_check_table, 4
+p_valid_page_count_check_table:
+	.space	4
+	.type	p_map_block_table, %object
+	.size	p_map_block_table, 4
+p_map_block_table:
+	.space	4
+	.type	p_map_block_valid_page_count, %object
+	.size	p_map_block_valid_page_count, 4
+p_map_block_valid_page_count:
+	.space	4
+	.type	p_vendor_block_valid_page_count, %object
+	.size	p_vendor_block_valid_page_count, 4
+p_vendor_block_valid_page_count:
+	.space	4
+	.type	p_vendor_block_ver_table, %object
+	.size	p_vendor_block_ver_table, 4
+p_vendor_block_ver_table:
+	.space	4
+	.type	p_vendor_region_ppn_table, %object
+	.size	p_vendor_region_ppn_table, 4
+p_vendor_region_ppn_table:
+	.space	4
+	.type	p_map_region_ppn_table, %object
+	.size	p_map_region_ppn_table, 4
+p_map_region_ppn_table:
+	.space	4
+	.type	p_map_block_ver_table, %object
+	.size	p_map_block_ver_table, 4
+p_map_block_ver_table:
+	.space	4
+	.type	p_l2p_map_buf, %object
+	.size	p_l2p_map_buf, 4
+p_l2p_map_buf:
+	.space	4
+	.type	c_ftl_nand_bbm_buf_size, %object
+	.size	c_ftl_nand_bbm_buf_size, 2
+c_ftl_nand_bbm_buf_size:
+	.space	2
+	.space	2
+	.type	gL2pMapInfo, %object
+	.size	gL2pMapInfo, 40
+gL2pMapInfo:
+	.space	40
+	.type	g_totle_map_block, %object
+	.size	g_totle_map_block, 2
+g_totle_map_block:
+	.space	2
+	.space	2
+	.type	gVendorBlkInfo, %object
+	.size	gVendorBlkInfo, 40
+gVendorBlkInfo:
+	.space	40
+	.type	g_req_cache, %object
+	.size	g_req_cache, 4
+g_req_cache:
+	.space	4
+	.type	g_tmp_data_superblock_id, %object
+	.size	g_tmp_data_superblock_id, 2
+g_tmp_data_superblock_id:
+	.space	2
+	.space	2
+	.type	g_totle_swl_count, %object
+	.size	g_totle_swl_count, 4
+g_totle_swl_count:
+	.space	4
+	.type	ftl_gc_temp_power_lost_recovery_flag, %object
+	.size	ftl_gc_temp_power_lost_recovery_flag, 4
+ftl_gc_temp_power_lost_recovery_flag:
+	.space	4
+	.type	g_recovery_page_min_ver, %object
+	.size	g_recovery_page_min_ver, 4
+g_recovery_page_min_ver:
+	.space	4
+	.type	g_power_lost_recovery_flag, %object
+	.size	g_power_lost_recovery_flag, 2
+g_power_lost_recovery_flag:
+	.space	2
+	.space	2
+	.type	g_recovery_page_num, %object
+	.size	g_recovery_page_num, 4
+g_recovery_page_num:
+	.space	4
+	.type	g_recovery_ppa_tbl, %object
+	.size	g_recovery_ppa_tbl, 128
+g_recovery_ppa_tbl:
+	.space	128
+	.type	g_ect_tbl_power_up_flush, %object
+	.size	g_ect_tbl_power_up_flush, 2
+g_ect_tbl_power_up_flush:
+	.space	2
+	.space	2
+	.type	gp_last_act_superblock, %object
+	.size	gp_last_act_superblock, 4
+gp_last_act_superblock:
+	.space	4
+	.type	gc_discard_updated, %object
+	.size	gc_discard_updated, 4
+gc_discard_updated:
+	.space	4
+	.type	gc_ink_free_return_value, %object
+	.size	gc_ink_free_return_value, 2
+gc_ink_free_return_value:
+	.space	2
+	.type	g_gc_cur_blk_valid_pages, %object
+	.size	g_gc_cur_blk_valid_pages, 2
+g_gc_cur_blk_valid_pages:
+	.space	2
+	.type	g_gc_cur_blk_max_valid_pages, %object
+	.size	g_gc_cur_blk_max_valid_pages, 2
+g_gc_cur_blk_max_valid_pages:
+	.space	2
+	.space	2
+	.type	g_ftl_nand_free_count, %object
+	.size	g_ftl_nand_free_count, 4
+g_ftl_nand_free_count:
+	.space	4
+	.type	g_MaxLbn, %object
+	.size	g_MaxLbn, 4
+g_MaxLbn:
+	.space	4
+	.type	ftl_temp_buf, %object
+	.size	ftl_temp_buf, 4096
+ftl_temp_buf:
+	.space	4096
+	.type	check_buf, %object
+	.size	check_buf, 4096
+check_buf:
+	.space	4096
+	.type	check_vpc_table, %object
+	.size	check_vpc_table, 16384
+check_vpc_table:
+	.space	16384
+	.section	.rodata.str1.1,"aMS",%progbits,1
+.LC0:
+	.ascii	"phyBlk = 0x%x die = %d block_in_die = 0x%x 0x%8x\012"
+	.ascii	"\000"
+.LC1:
+	.ascii	"\012!!!!! error @ func:%s - line:%d\012\000"
+.LC2:
+	.ascii	"FLASH INFO:\012\000"
+.LC3:
+	.ascii	"Device Capacity: %d MB\012\000"
+.LC4:
+	.ascii	"FTL INFO:\012\000"
+.LC5:
+	.ascii	"g_MaxLpn = 0x%x\012\000"
+.LC6:
+	.ascii	"g_VaildLpn = 0x%x\012\000"
+.LC7:
+	.ascii	"read_page_count = 0x%x\012\000"
+.LC8:
+	.ascii	"discard_page_count = 0x%x\012\000"
+.LC9:
+	.ascii	"write_page_count = 0x%x\012\000"
+.LC10:
+	.ascii	"cache_write_count = 0x%x\012\000"
+.LC11:
+	.ascii	"l2p_write_count = 0x%x\012\000"
+.LC12:
+	.ascii	"gc_page_count = 0x%x\012\000"
+.LC13:
+	.ascii	"totle_write = %d MB\012\000"
+.LC14:
+	.ascii	"totle_read = %d MB\012\000"
+.LC15:
+	.ascii	"GSV = 0x%x\012\000"
+.LC16:
+	.ascii	"GDV = 0x%x\012\000"
+.LC17:
+	.ascii	"bad blk num = %d\012\000"
+.LC18:
+	.ascii	"free_superblocks = 0x%x\012\000"
+.LC19:
+	.ascii	"mlc_EC = 0x%x\012\000"
+.LC20:
+	.ascii	"slc_EC = 0x%x\012\000"
+.LC21:
+	.ascii	"avg_EC = 0x%x\012\000"
+.LC22:
+	.ascii	"sys_EC = 0x%x\012\000"
+.LC23:
+	.ascii	"max_EC = 0x%x\012\000"
+.LC24:
+	.ascii	"min_EC = 0x%x\012\000"
+.LC25:
+	.ascii	"PLT = 0x%x\012\000"
+.LC26:
+	.ascii	"POT = 0x%x\012\000"
+.LC27:
+	.ascii	"MaxSector = 0x%x\012\000"
+.LC28:
+	.ascii	"init_sys_blks_pp = 0x%x\012\000"
+.LC29:
+	.ascii	"sys_blks_pp = 0x%x\012\000"
+.LC30:
+	.ascii	"free sysblock = 0x%x\012\000"
+.LC31:
+	.ascii	"data_blks_pp = 0x%x\012\000"
+.LC32:
+	.ascii	"data_op_blks_pp = 0x%x\012\000"
+.LC33:
+	.ascii	"max_data_blks = 0x%x\012\000"
+.LC34:
+	.ascii	"Sys.id = 0x%x\012\000"
+.LC35:
+	.ascii	"Bbt.id = 0x%x\012\000"
+.LC36:
+	.ascii	"ACT.page = 0x%x\012\000"
+.LC37:
+	.ascii	"ACT.plane = 0x%x\012\000"
+.LC38:
+	.ascii	"ACT.id = 0x%x\012\000"
+.LC39:
+	.ascii	"ACT.mode = 0x%x\012\000"
+.LC40:
+	.ascii	"ACT.a_pages = 0x%x\012\000"
+.LC41:
+	.ascii	"ACT VPC = 0x%x\012\000"
+.LC42:
+	.ascii	"BUF.page = 0x%x\012\000"
+.LC43:
+	.ascii	"BUF.plane = 0x%x\012\000"
+.LC44:
+	.ascii	"BUF.id = 0x%x\012\000"
+.LC45:
+	.ascii	"BUF.mode = 0x%x\012\000"
+.LC46:
+	.ascii	"BUF.a_pages = 0x%x\012\000"
+.LC47:
+	.ascii	"BUF VPC = 0x%x\012\000"
+.LC48:
+	.ascii	"TMP.page = 0x%x\012\000"
+.LC49:
+	.ascii	"TMP.plane = 0x%x\012\000"
+.LC50:
+	.ascii	"TMP.id = 0x%x\012\000"
+.LC51:
+	.ascii	"TMP.mode = 0x%x\012\000"
+.LC52:
+	.ascii	"TMP.a_pages = 0x%x\012\000"
+.LC53:
+	.ascii	"GC.page = 0x%x\012\000"
+.LC54:
+	.ascii	"GC.plane = 0x%x\012\000"
+.LC55:
+	.ascii	"GC.id = 0x%x\012\000"
+.LC56:
+	.ascii	"GC.mode = 0x%x\012\000"
+.LC57:
+	.ascii	"GC.a_pages = 0x%x\012\000"
+.LC58:
+	.ascii	"WR_CHK = %x %x %x\012\000"
+.LC59:
+	.ascii	"Read Err Cnt = 0x%x\012\000"
+.LC60:
+	.ascii	"Prog Err Cnt = 0x%x\012\000"
+.LC61:
+	.ascii	"gc_free_blk_th= 0x%x\012\000"
+.LC62:
+	.ascii	"gc_merge_free_blk_th= 0x%x\012\000"
+.LC63:
+	.ascii	"gc_skip_write_count= 0x%x\012\000"
+.LC64:
+	.ascii	"gc_blk_index= 0x%x\012\000"
+.LC65:
+	.ascii	"free min EC= 0x%x\012\000"
+.LC66:
+	.ascii	"free max EC= 0x%x\012\000"
+.LC67:
+	.ascii	"GC__SB VPC = 0x%x\012\000"
+.LC68:
+	.ascii	"%d. [0x%x]=0x%x 0x%x  0x%x\012\000"
+.LC69:
+	.ascii	"free %d. [0x%x] 0x%x  0x%x\012\000"
+.LC70:
+	.ascii	"SFTL version: 5.0.43 20180116\000"
+.LC71:
+	.ascii	"%s\012\000"
+.LC72:
+	.ascii	"swblk %x ,avg = %x max= %x vpc= %x,ec=%x ,max ec=%x"
+	.ascii	"\012\000"
+.LC73:
+	.ascii	"FtlGcRefreshBlock  0x%x\012\000"
+.LC74:
+	.ascii	"FtlGcMarkBadPhyBlk %d 0x%x\012\000"
+.LC75:
+	.ascii	"prog read error: = %x\012\000"
+.LC76:
+	.ascii	"prog read s error: = %x %x %x\012\000"
+.LC77:
+	.ascii	"prog read d error: = %x %x %x\012\000"
+.LC78:
+	.ascii	"%s error allocating memory. return -1\012\000"
+.LC79:
+	.ascii	"region_id = %x phyAddr = %x\012\000"
+.LC80:
+	.ascii	"spare:\000"
+.LC81:
+	.ascii	"map_ppn:\000"
+.LC82:
+	.ascii	"FtlMapWritePage error = %x \012\000"
+.LC83:
+	.ascii	"FtlMapWritePage error = %x error count = %d\012\000"
+.LC84:
+	.ascii	"ftl_scan_all_data = %x\012\000"
+.LC85:
+	.ascii	"scan lpa = %x ppa= %x\012\000"
+.LC86:
+	.ascii	"lba = %x,addr= %x,spare= %x %x %x %x data=%x %x\012"
+	.ascii	"\000"
+.LC87:
+	.ascii	"...%s enter...\012\000"
+.LC88:
+	.ascii	"FtlCheckVpc2 %x = %x  %x\012\000"
+.LC89:
+	.ascii	"free blk vpc error %x = %x  %x\012\000"
+.LC90:
+	.ascii	"FtlBbmTblFlush id=%x,page=%x,previd=%x cnt=%d\012\000"
+.LC91:
+	.ascii	"FtlBbmTblFlush error:%x\012\000"
+.LC92:
+	.ascii	"FtlBbmTblFlush error = %x error count = %d\012\000"
+.LC93:
+	.ascii	"FtlGcFreeBadSuperBlk 0x%x\012\000"
+.LC94:
+	.ascii	"decrement_vpc_count %x = %d\012\000"
+.LC95:
+	.ascii	"spuer block %x vpn is 0\012 \000"
+.LC96:
+	.ascii	"no ect\000"
+.LC97:
+	.ascii	"FtlVpcTblFlush error = %x error count = %d\012\000"
+.LC98:
+	.ascii	"FtlCheckVpc %x = %x  %x\012\000"
+.LC99:
+	.ascii	"Ftlwrite decrement_vpc_count %x = %d\012\000"
+.LC100:
+	.ascii	"SWL %x, FSB = %x vpc= %x,ec=%x th=%x\012\000"
+.LC101:
+	.ascii	"FtlWrite: lpa error:%x %x\012\000"
+	.section	.debug_frame,"",%progbits
+.Lframe0:
+	.4byte	.LECIE0-.LSCIE0
+.LSCIE0:
+	.4byte	0xffffffff
+	.byte	0x3
+	.ascii	"\000"
+	.uleb128 0x1
+	.sleb128 -4
+	.uleb128 0xe
+	.byte	0xc
+	.uleb128 0xd
+	.uleb128 0
+	.align	2
+.LECIE0:
+.LSFDE0:
+	.4byte	.LEFDE0-.LASFDE0
+.LASFDE0:
+	.4byte	.Lframe0
+	.4byte	.LFB271
+	.4byte	.LFE271-.LFB271
+	.byte	0x4
+	.4byte	.LCFI0-.LFB271
+	.byte	0xe
+	.uleb128 0x20
+	.byte	0x83
+	.uleb128 0x8
+	.byte	0x84
+	.uleb128 0x7
+	.byte	0x85
+	.uleb128 0x6
+	.byte	0x86
+	.uleb128 0x5
+	.byte	0x87
+	.uleb128 0x4
+	.byte	0x88
+	.uleb128 0x3
+	.byte	0x89
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE0:
+.LSFDE2:
+	.4byte	.LEFDE2-.LASFDE2
+.LASFDE2:
+	.4byte	.Lframe0
+	.4byte	.LFB286
+	.4byte	.LFE286-.LFB286
+	.align	2
+.LEFDE2:
+.LSFDE4:
+	.4byte	.LEFDE4-.LASFDE4
+.LASFDE4:
+	.4byte	.Lframe0
+	.4byte	.LFB152
+	.4byte	.LFE152-.LFB152
+	.align	2
+.LEFDE4:
+.LSFDE6:
+	.4byte	.LEFDE6-.LASFDE6
+.LASFDE6:
+	.4byte	.Lframe0
+	.4byte	.LFB153
+	.4byte	.LFE153-.LFB153
+	.align	2
+.LEFDE6:
+.LSFDE8:
+	.4byte	.LEFDE8-.LASFDE8
+.LASFDE8:
+	.4byte	.Lframe0
+	.4byte	.LFB154
+	.4byte	.LFE154-.LFB154
+	.align	2
+.LEFDE8:
+.LSFDE10:
+	.4byte	.LEFDE10-.LASFDE10
+.LASFDE10:
+	.4byte	.Lframe0
+	.4byte	.LFB155
+	.4byte	.LFE155-.LFB155
+	.byte	0x4
+	.4byte	.LCFI1-.LFB155
+	.byte	0xe
+	.uleb128 0x28
+	.byte	0x83
+	.uleb128 0xa
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE10:
+.LSFDE12:
+	.4byte	.LEFDE12-.LASFDE12
+.LASFDE12:
+	.4byte	.Lframe0
+	.4byte	.LFB158
+	.4byte	.LFE158-.LFB158
+	.align	2
+.LEFDE12:
+.LSFDE14:
+	.4byte	.LEFDE14-.LASFDE14
+.LASFDE14:
+	.4byte	.Lframe0
+	.4byte	.LFB171
+	.4byte	.LFE171-.LFB171
+	.align	2
+.LEFDE14:
+.LSFDE16:
+	.4byte	.LEFDE16-.LASFDE16
+.LASFDE16:
+	.4byte	.Lframe0
+	.4byte	.LFB172
+	.4byte	.LFE172-.LFB172
+	.byte	0x4
+	.4byte	.LCFI2-.LFB172
+	.byte	0xe
+	.uleb128 0x20
+	.byte	0x84
+	.uleb128 0x5
+	.byte	0x85
+	.uleb128 0x4
+	.byte	0x86
+	.uleb128 0x3
+	.byte	0x87
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI3-.LCFI2
+	.byte	0xe
+	.uleb128 0x14
+	.align	2
+.LEFDE16:
+.LSFDE18:
+	.4byte	.LEFDE18-.LASFDE18
+.LASFDE18:
+	.4byte	.Lframe0
+	.4byte	.LFB173
+	.4byte	.LFE173-.LFB173
+	.byte	0x4
+	.4byte	.LCFI4-.LFB173
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x83
+	.uleb128 0x6
+	.byte	0x84
+	.uleb128 0x5
+	.byte	0x85
+	.uleb128 0x4
+	.byte	0x86
+	.uleb128 0x3
+	.byte	0x87
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE18:
+.LSFDE20:
+	.4byte	.LEFDE20-.LASFDE20
+.LASFDE20:
+	.4byte	.Lframe0
+	.4byte	.LFB174
+	.4byte	.LFE174-.LFB174
+	.align	2
+.LEFDE20:
+.LSFDE22:
+	.4byte	.LEFDE22-.LASFDE22
+.LASFDE22:
+	.4byte	.Lframe0
+	.4byte	.LFB177
+	.4byte	.LFE177-.LFB177
+	.align	2
+.LEFDE22:
+.LSFDE24:
+	.4byte	.LEFDE24-.LASFDE24
+.LASFDE24:
+	.4byte	.Lframe0
+	.4byte	.LFB178
+	.4byte	.LFE178-.LFB178
+	.byte	0x4
+	.4byte	.LCFI5-.LFB178
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x84
+	.uleb128 0x4
+	.byte	0x85
+	.uleb128 0x3
+	.byte	0x86
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE24:
+.LSFDE26:
+	.4byte	.LEFDE26-.LASFDE26
+.LASFDE26:
+	.4byte	.Lframe0
+	.4byte	.LFB182
+	.4byte	.LFE182-.LFB182
+	.byte	0x4
+	.4byte	.LCFI6-.LFB182
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x83
+	.uleb128 0x6
+	.byte	0x84
+	.uleb128 0x5
+	.byte	0x85
+	.uleb128 0x4
+	.byte	0x86
+	.uleb128 0x3
+	.byte	0x87
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE26:
+.LSFDE28:
+	.4byte	.LEFDE28-.LASFDE28
+.LASFDE28:
+	.4byte	.Lframe0
+	.4byte	.LFB183
+	.4byte	.LFE183-.LFB183
+	.byte	0x4
+	.4byte	.LCFI7-.LFB183
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x84
+	.uleb128 0x4
+	.byte	0x85
+	.uleb128 0x3
+	.byte	0x86
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE28:
+.LSFDE30:
+	.4byte	.LEFDE30-.LASFDE30
+.LASFDE30:
+	.4byte	.Lframe0
+	.4byte	.LFB184
+	.4byte	.LFE184-.LFB184
+	.byte	0x4
+	.4byte	.LCFI8-.LFB184
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x84
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE30:
+.LSFDE32:
+	.4byte	.LEFDE32-.LASFDE32
+.LASFDE32:
+	.4byte	.Lframe0
+	.4byte	.LFB185
+	.4byte	.LFE185-.LFB185
+	.align	2
+.LEFDE32:
+.LSFDE34:
+	.4byte	.LEFDE34-.LASFDE34
+.LASFDE34:
+	.4byte	.Lframe0
+	.4byte	.LFB187
+	.4byte	.LFE187-.LFB187
+	.byte	0x4
+	.4byte	.LCFI9-.LFB187
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x84
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE34:
+.LSFDE36:
+	.4byte	.LEFDE36-.LASFDE36
+.LASFDE36:
+	.4byte	.Lframe0
+	.4byte	.LFB188
+	.4byte	.LFE188-.LFB188
+	.align	2
+.LEFDE36:
+.LSFDE38:
+	.4byte	.LEFDE38-.LASFDE38
+.LASFDE38:
+	.4byte	.Lframe0
+	.4byte	.LFB189
+	.4byte	.LFE189-.LFB189
+	.align	2
+.LEFDE38:
+.LSFDE40:
+	.4byte	.LEFDE40-.LASFDE40
+.LASFDE40:
+	.4byte	.Lframe0
+	.4byte	.LFB191
+	.4byte	.LFE191-.LFB191
+	.byte	0x4
+	.4byte	.LCFI10-.LFB191
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x83
+	.uleb128 0x6
+	.byte	0x84
+	.uleb128 0x5
+	.byte	0x85
+	.uleb128 0x4
+	.byte	0x86
+	.uleb128 0x3
+	.byte	0x87
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE40:
+.LSFDE42:
+	.4byte	.LEFDE42-.LASFDE42
+.LASFDE42:
+	.4byte	.Lframe0
+	.4byte	.LFB192
+	.4byte	.LFE192-.LFB192
+	.byte	0x4
+	.4byte	.LCFI11-.LFB192
+	.byte	0xe
+	.uleb128 0xc
+	.byte	0x84
+	.uleb128 0x3
+	.byte	0x85
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE42:
+.LSFDE44:
+	.4byte	.LEFDE44-.LASFDE44
+.LASFDE44:
+	.4byte	.Lframe0
+	.4byte	.LFB193
+	.4byte	.LFE193-.LFB193
+	.align	2
+.LEFDE44:
+.LSFDE46:
+	.4byte	.LEFDE46-.LASFDE46
+.LASFDE46:
+	.4byte	.Lframe0
+	.4byte	.LFB196
+	.4byte	.LFE196-.LFB196
+	.byte	0x4
+	.4byte	.LCFI12-.LFB196
+	.byte	0xe
+	.uleb128 0x30
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI13-.LCFI12
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI14-.LCFI13
+	.byte	0xb
+	.align	2
+.LEFDE46:
+.LSFDE48:
+	.4byte	.LEFDE48-.LASFDE48
+.LASFDE48:
+	.4byte	.Lframe0
+	.4byte	.LFB195
+	.4byte	.LFE195-.LFB195
+	.byte	0x4
+	.4byte	.LCFI15-.LFB195
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x83
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI16-.LCFI15
+	.byte	0xa
+	.byte	0xce
+	.byte	0xc3
+	.byte	0xe
+	.uleb128 0
+	.byte	0x4
+	.4byte	.LCFI17-.LCFI16
+	.byte	0xb
+	.align	2
+.LEFDE48:
+.LSFDE50:
+	.4byte	.LEFDE50-.LASFDE50
+.LASFDE50:
+	.4byte	.Lframe0
+	.4byte	.LFB197
+	.4byte	.LFE197-.LFB197
+	.byte	0x4
+	.4byte	.LCFI18-.LFB197
+	.byte	0xe
+	.uleb128 0x20
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x88
+	.uleb128 0x4
+	.byte	0x89
+	.uleb128 0x3
+	.byte	0x8a
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE50:
+.LSFDE52:
+	.4byte	.LEFDE52-.LASFDE52
+.LASFDE52:
+	.4byte	.Lframe0
+	.4byte	.LFB194
+	.4byte	.LFE194-.LFB194
+	.byte	0x4
+	.4byte	.LCFI19-.LFB194
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x83
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI20-.LCFI19
+	.byte	0xa
+	.byte	0xce
+	.byte	0xc3
+	.byte	0xe
+	.uleb128 0
+	.byte	0x4
+	.4byte	.LCFI21-.LCFI20
+	.byte	0xb
+	.align	2
+.LEFDE52:
+.LSFDE54:
+	.4byte	.LEFDE54-.LASFDE54
+.LASFDE54:
+	.4byte	.Lframe0
+	.4byte	.LFB198
+	.4byte	.LFE198-.LFB198
+	.byte	0x4
+	.4byte	.LCFI22-.LFB198
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x86
+	.uleb128 0x4
+	.byte	0x87
+	.uleb128 0x3
+	.byte	0x88
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE54:
+.LSFDE56:
+	.4byte	.LEFDE56-.LASFDE56
+.LASFDE56:
+	.4byte	.Lframe0
+	.4byte	.LFB199
+	.4byte	.LFE199-.LFB199
+	.byte	0x4
+	.4byte	.LCFI23-.LFB199
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x84
+	.uleb128 0x4
+	.byte	0x85
+	.uleb128 0x3
+	.byte	0x86
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE56:
+.LSFDE58:
+	.4byte	.LEFDE58-.LASFDE58
+.LASFDE58:
+	.4byte	.Lframe0
+	.4byte	.LFB200
+	.4byte	.LFE200-.LFB200
+	.align	2
+.LEFDE58:
+.LSFDE60:
+	.4byte	.LEFDE60-.LASFDE60
+.LASFDE60:
+	.4byte	.Lframe0
+	.4byte	.LFB201
+	.4byte	.LFE201-.LFB201
+	.byte	0x4
+	.4byte	.LCFI24-.LFB201
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x84
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE60:
+.LSFDE62:
+	.4byte	.LEFDE62-.LASFDE62
+.LASFDE62:
+	.4byte	.Lframe0
+	.4byte	.LFB202
+	.4byte	.LFE202-.LFB202
+	.byte	0x4
+	.4byte	.LCFI25-.LFB202
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x83
+	.uleb128 0x6
+	.byte	0x84
+	.uleb128 0x5
+	.byte	0x85
+	.uleb128 0x4
+	.byte	0x86
+	.uleb128 0x3
+	.byte	0x87
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE62:
+.LSFDE64:
+	.4byte	.LEFDE64-.LASFDE64
+.LASFDE64:
+	.4byte	.Lframe0
+	.4byte	.LFB205
+	.4byte	.LFE205-.LFB205
+	.byte	0x4
+	.4byte	.LCFI26-.LFB205
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x83
+	.uleb128 0x6
+	.byte	0x84
+	.uleb128 0x5
+	.byte	0x85
+	.uleb128 0x4
+	.byte	0x86
+	.uleb128 0x3
+	.byte	0x87
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE64:
+.LSFDE66:
+	.4byte	.LEFDE66-.LASFDE66
+.LASFDE66:
+	.4byte	.Lframe0
+	.4byte	.LFB210
+	.4byte	.LFE210-.LFB210
+	.byte	0x4
+	.4byte	.LCFI27-.LFB210
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x83
+	.uleb128 0x6
+	.byte	0x84
+	.uleb128 0x5
+	.byte	0x85
+	.uleb128 0x4
+	.byte	0x86
+	.uleb128 0x3
+	.byte	0x87
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE66:
+.LSFDE68:
+	.4byte	.LEFDE68-.LASFDE68
+.LASFDE68:
+	.4byte	.Lframe0
+	.4byte	.LFB216
+	.4byte	.LFE216-.LFB216
+	.byte	0x4
+	.4byte	.LCFI28-.LFB216
+	.byte	0xe
+	.uleb128 0xc
+	.byte	0x84
+	.uleb128 0x3
+	.byte	0x85
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE68:
+.LSFDE70:
+	.4byte	.LEFDE70-.LASFDE70
+.LASFDE70:
+	.4byte	.Lframe0
+	.4byte	.LFB222
+	.4byte	.LFE222-.LFB222
+	.align	2
+.LEFDE70:
+.LSFDE72:
+	.4byte	.LEFDE72-.LASFDE72
+.LASFDE72:
+	.4byte	.Lframe0
+	.4byte	.LFB223
+	.4byte	.LFE223-.LFB223
+	.align	2
+.LEFDE72:
+.LSFDE74:
+	.4byte	.LEFDE74-.LASFDE74
+.LASFDE74:
+	.4byte	.Lframe0
+	.4byte	.LFB229
+	.4byte	.LFE229-.LFB229
+	.byte	0x4
+	.4byte	.LCFI29-.LFB229
+	.byte	0xe
+	.uleb128 0x14
+	.byte	0x84
+	.uleb128 0x5
+	.byte	0x85
+	.uleb128 0x4
+	.byte	0x86
+	.uleb128 0x3
+	.byte	0x87
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE74:
+.LSFDE76:
+	.4byte	.LEFDE76-.LASFDE76
+.LASFDE76:
+	.4byte	.Lframe0
+	.4byte	.LFB232
+	.4byte	.LFE232-.LFB232
+	.byte	0x4
+	.4byte	.LCFI30-.LFB232
+	.byte	0xe
+	.uleb128 0xc
+	.byte	0x84
+	.uleb128 0x3
+	.byte	0x85
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE76:
+.LSFDE78:
+	.4byte	.LEFDE78-.LASFDE78
+.LASFDE78:
+	.4byte	.Lframe0
+	.4byte	.LFB234
+	.4byte	.LFE234-.LFB234
+	.byte	0x4
+	.4byte	.LCFI31-.LFB234
+	.byte	0xe
+	.uleb128 0x28
+	.byte	0x83
+	.uleb128 0xa
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE78:
+.LSFDE80:
+	.4byte	.LEFDE80-.LASFDE80
+.LASFDE80:
+	.4byte	.Lframe0
+	.4byte	.LFB243
+	.4byte	.LFE243-.LFB243
+	.byte	0x4
+	.4byte	.LCFI32-.LFB243
+	.byte	0xe
+	.uleb128 0x20
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x88
+	.uleb128 0x4
+	.byte	0x89
+	.uleb128 0x3
+	.byte	0x8a
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE80:
+.LSFDE82:
+	.4byte	.LEFDE82-.LASFDE82
+.LASFDE82:
+	.4byte	.Lframe0
+	.4byte	.LFB244
+	.4byte	.LFE244-.LFB244
+	.align	2
+.LEFDE82:
+.LSFDE84:
+	.4byte	.LEFDE84-.LASFDE84
+.LASFDE84:
+	.4byte	.Lframe0
+	.4byte	.LFB245
+	.4byte	.LFE245-.LFB245
+	.byte	0x4
+	.4byte	.LCFI33-.LFB245
+	.byte	0xe
+	.uleb128 0x14
+	.byte	0x84
+	.uleb128 0x5
+	.byte	0x85
+	.uleb128 0x4
+	.byte	0x86
+	.uleb128 0x3
+	.byte	0x87
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE84:
+.LSFDE86:
+	.4byte	.LEFDE86-.LASFDE86
+.LASFDE86:
+	.4byte	.Lframe0
+	.4byte	.LFB150
+	.4byte	.LFE150-.LFB150
+	.byte	0x4
+	.4byte	.LCFI34-.LFB150
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI35-.LCFI34
+	.byte	0xe
+	.uleb128 0x38
+	.byte	0x4
+	.4byte	.LCFI36-.LCFI35
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI37-.LCFI36
+	.byte	0xb
+	.align	2
+.LEFDE86:
+.LSFDE88:
+	.4byte	.LEFDE88-.LASFDE88
+.LASFDE88:
+	.4byte	.Lframe0
+	.4byte	.LFB151
+	.4byte	.LFE151-.LFB151
+	.byte	0x4
+	.4byte	.LCFI38-.LFB151
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x83
+	.uleb128 0x4
+	.byte	0x84
+	.uleb128 0x3
+	.byte	0x85
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE88:
+.LSFDE90:
+	.4byte	.LEFDE90-.LASFDE90
+.LASFDE90:
+	.4byte	.Lframe0
+	.4byte	.LFB246
+	.4byte	.LFE246-.LFB246
+	.byte	0x4
+	.4byte	.LCFI39-.LFB246
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI40-.LCFI39
+	.byte	0xe
+	.uleb128 0x38
+	.byte	0x4
+	.4byte	.LCFI41-.LCFI40
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI42-.LCFI41
+	.byte	0xb
+	.align	2
+.LEFDE90:
+.LSFDE92:
+	.4byte	.LEFDE92-.LASFDE92
+.LASFDE92:
+	.4byte	.Lframe0
+	.4byte	.LFB247
+	.4byte	.LFE247-.LFB247
+	.byte	0x4
+	.4byte	.LCFI43-.LFB247
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x83
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE92:
+.LSFDE94:
+	.4byte	.LEFDE94-.LASFDE94
+.LASFDE94:
+	.4byte	.Lframe0
+	.4byte	.LFB250
+	.4byte	.LFE250-.LFB250
+	.byte	0x4
+	.4byte	.LCFI44-.LFB250
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x83
+	.uleb128 0x6
+	.byte	0x84
+	.uleb128 0x5
+	.byte	0x85
+	.uleb128 0x4
+	.byte	0x86
+	.uleb128 0x3
+	.byte	0x87
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE94:
+.LSFDE96:
+	.4byte	.LEFDE96-.LASFDE96
+.LASFDE96:
+	.4byte	.Lframe0
+	.4byte	.LFB253
+	.4byte	.LFE253-.LFB253
+	.byte	0x4
+	.4byte	.LCFI45-.LFB253
+	.byte	0xe
+	.uleb128 0x1c
+	.byte	0x84
+	.uleb128 0x7
+	.byte	0x85
+	.uleb128 0x6
+	.byte	0x86
+	.uleb128 0x5
+	.byte	0x87
+	.uleb128 0x4
+	.byte	0x88
+	.uleb128 0x3
+	.byte	0x89
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE96:
+.LSFDE98:
+	.4byte	.LEFDE98-.LASFDE98
+.LASFDE98:
+	.4byte	.Lframe0
+	.4byte	.LFB254
+	.4byte	.LFE254-.LFB254
+	.byte	0x4
+	.4byte	.LCFI46-.LFB254
+	.byte	0xe
+	.uleb128 0x20
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x88
+	.uleb128 0x4
+	.byte	0x89
+	.uleb128 0x3
+	.byte	0x8a
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE98:
+.LSFDE100:
+	.4byte	.LEFDE100-.LASFDE100
+.LASFDE100:
+	.4byte	.Lframe0
+	.4byte	.LFB255
+	.4byte	.LFE255-.LFB255
+	.byte	0x4
+	.4byte	.LCFI47-.LFB255
+	.byte	0xe
+	.uleb128 0x1c
+	.byte	0x84
+	.uleb128 0x7
+	.byte	0x85
+	.uleb128 0x6
+	.byte	0x86
+	.uleb128 0x5
+	.byte	0x87
+	.uleb128 0x4
+	.byte	0x88
+	.uleb128 0x3
+	.byte	0x89
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE100:
+.LSFDE102:
+	.4byte	.LEFDE102-.LASFDE102
+.LASFDE102:
+	.4byte	.Lframe0
+	.4byte	.LFB256
+	.4byte	.LFE256-.LFB256
+	.align	2
+.LEFDE102:
+.LSFDE104:
+	.4byte	.LEFDE104-.LASFDE104
+.LASFDE104:
+	.4byte	.Lframe0
+	.4byte	.LFB257
+	.4byte	.LFE257-.LFB257
+	.byte	0x4
+	.4byte	.LCFI48-.LFB257
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x83
+	.uleb128 0x6
+	.byte	0x84
+	.uleb128 0x5
+	.byte	0x85
+	.uleb128 0x4
+	.byte	0x86
+	.uleb128 0x3
+	.byte	0x87
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE104:
+.LSFDE106:
+	.4byte	.LEFDE106-.LASFDE106
+.LASFDE106:
+	.4byte	.Lframe0
+	.4byte	.LFB264
+	.4byte	.LFE264-.LFB264
+	.byte	0x4
+	.4byte	.LCFI49-.LFB264
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x84
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE106:
+.LSFDE108:
+	.4byte	.LEFDE108-.LASFDE108
+.LASFDE108:
+	.4byte	.Lframe0
+	.4byte	.LFB265
+	.4byte	.LFE265-.LFB265
+	.byte	0x4
+	.4byte	.LCFI50-.LFB265
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x84
+	.uleb128 0x4
+	.byte	0x85
+	.uleb128 0x3
+	.byte	0x86
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE108:
+.LSFDE110:
+	.4byte	.LEFDE110-.LASFDE110
+.LASFDE110:
+	.4byte	.Lframe0
+	.4byte	.LFB266
+	.4byte	.LFE266-.LFB266
+	.byte	0x4
+	.4byte	.LCFI51-.LFB266
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x84
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE110:
+.LSFDE112:
+	.4byte	.LEFDE112-.LASFDE112
+.LASFDE112:
+	.4byte	.Lframe0
+	.4byte	.LFB272
+	.4byte	.LFE272-.LFB272
+	.byte	0x4
+	.4byte	.LCFI52-.LFB272
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI53-.LCFI52
+	.byte	0xe
+	.uleb128 0x38
+	.byte	0x4
+	.4byte	.LCFI54-.LCFI53
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI55-.LCFI54
+	.byte	0xb
+	.align	2
+.LEFDE112:
+.LSFDE114:
+	.4byte	.LEFDE114-.LASFDE114
+.LASFDE114:
+	.4byte	.Lframe0
+	.4byte	.LFB180
+	.4byte	.LFE180-.LFB180
+	.byte	0x4
+	.4byte	.LCFI56-.LFB180
+	.byte	0xe
+	.uleb128 0x20
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x88
+	.uleb128 0x4
+	.byte	0x89
+	.uleb128 0x3
+	.byte	0x8a
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE114:
+.LSFDE116:
+	.4byte	.LEFDE116-.LASFDE116
+.LASFDE116:
+	.4byte	.Lframe0
+	.4byte	.LFB186
+	.4byte	.LFE186-.LFB186
+	.byte	0x4
+	.4byte	.LCFI57-.LFB186
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x86
+	.uleb128 0x4
+	.byte	0x87
+	.uleb128 0x3
+	.byte	0x88
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI58-.LCFI57
+	.byte	0xe
+	.uleb128 0x70
+	.byte	0x4
+	.4byte	.LCFI59-.LCFI58
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x4
+	.4byte	.LCFI60-.LCFI59
+	.byte	0xb
+	.align	2
+.LEFDE116:
+.LSFDE118:
+	.4byte	.LEFDE118-.LASFDE118
+.LASFDE118:
+	.4byte	.Lframe0
+	.4byte	.LFB273
+	.4byte	.LFE273-.LFB273
+	.byte	0x4
+	.4byte	.LCFI61-.LFB273
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI62-.LCFI61
+	.byte	0xe
+	.uleb128 0x50
+	.byte	0x4
+	.4byte	.LCFI63-.LCFI62
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI64-.LCFI63
+	.byte	0xb
+	.align	2
+.LEFDE118:
+.LSFDE120:
+	.4byte	.LEFDE120-.LASFDE120
+.LASFDE120:
+	.4byte	.Lframe0
+	.4byte	.LFB274
+	.4byte	.LFE274-.LFB274
+	.byte	0x4
+	.4byte	.LCFI65-.LFB274
+	.byte	0xe
+	.uleb128 0x28
+	.byte	0x84
+	.uleb128 0x7
+	.byte	0x85
+	.uleb128 0x6
+	.byte	0x86
+	.uleb128 0x5
+	.byte	0x87
+	.uleb128 0x4
+	.byte	0x88
+	.uleb128 0x3
+	.byte	0x89
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI66-.LCFI65
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x1c
+	.byte	0x4
+	.4byte	.LCFI67-.LCFI66
+	.byte	0xb
+	.align	2
+.LEFDE120:
+.LSFDE122:
+	.4byte	.LEFDE122-.LASFDE122
+.LASFDE122:
+	.4byte	.Lframe0
+	.4byte	.LFB190
+	.4byte	.LFE190-.LFB190
+	.byte	0x4
+	.4byte	.LCFI68-.LFB190
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x84
+	.uleb128 0x4
+	.byte	0x85
+	.uleb128 0x3
+	.byte	0x86
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE122:
+.LSFDE124:
+	.4byte	.LEFDE124-.LASFDE124
+.LASFDE124:
+	.4byte	.Lframe0
+	.4byte	.LFB159
+	.4byte	.LFE159-.LFB159
+	.byte	0x4
+	.4byte	.LCFI69-.LFB159
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI70-.LCFI69
+	.byte	0xe
+	.uleb128 0x38
+	.byte	0x4
+	.4byte	.LCFI71-.LCFI70
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI72-.LCFI71
+	.byte	0xb
+	.align	2
+.LEFDE124:
+.LSFDE126:
+	.4byte	.LEFDE126-.LASFDE126
+.LASFDE126:
+	.4byte	.Lframe0
+	.4byte	.LFB275
+	.4byte	.LFE275-.LFB275
+	.byte	0x4
+	.4byte	.LCFI73-.LFB275
+	.byte	0xe
+	.uleb128 0xc
+	.byte	0x84
+	.uleb128 0x3
+	.byte	0x85
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI74-.LCFI73
+	.byte	0xe
+	.uleb128 0x68
+	.byte	0x4
+	.4byte	.LCFI75-.LCFI74
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0xc
+	.byte	0x4
+	.4byte	.LCFI76-.LCFI75
+	.byte	0xb
+	.align	2
+.LEFDE126:
+.LSFDE128:
+	.4byte	.LEFDE128-.LASFDE128
+.LASFDE128:
+	.4byte	.Lframe0
+	.4byte	.LFB276
+	.4byte	.LFE276-.LFB276
+	.byte	0x4
+	.4byte	.LCFI77-.LFB276
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x83
+	.uleb128 0x4
+	.byte	0x84
+	.uleb128 0x3
+	.byte	0x85
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE128:
+.LSFDE130:
+	.4byte	.LEFDE130-.LASFDE130
+.LASFDE130:
+	.4byte	.Lframe0
+	.4byte	.LFB277
+	.4byte	.LFE277-.LFB277
+	.byte	0x4
+	.4byte	.LCFI78-.LFB277
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x84
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE130:
+.LSFDE132:
+	.4byte	.LEFDE132-.LASFDE132
+.LASFDE132:
+	.4byte	.Lframe0
+	.4byte	.LFB156
+	.4byte	.LFE156-.LFB156
+	.byte	0x4
+	.4byte	.LCFI79-.LFB156
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x86
+	.uleb128 0x4
+	.byte	0x87
+	.uleb128 0x3
+	.byte	0x88
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE132:
+.LSFDE134:
+	.4byte	.LEFDE134-.LASFDE134
+.LASFDE134:
+	.4byte	.Lframe0
+	.4byte	.LFB175
+	.4byte	.LFE175-.LFB175
+	.byte	0x4
+	.4byte	.LCFI80-.LFB175
+	.byte	0xe
+	.uleb128 0x20
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x88
+	.uleb128 0x4
+	.byte	0x89
+	.uleb128 0x3
+	.byte	0x8a
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE134:
+.LSFDE136:
+	.4byte	.LEFDE136-.LASFDE136
+.LASFDE136:
+	.4byte	.Lframe0
+	.4byte	.LFB203
+	.4byte	.LFE203-.LFB203
+	.byte	0x4
+	.4byte	.LCFI81-.LFB203
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x86
+	.uleb128 0x4
+	.byte	0x87
+	.uleb128 0x3
+	.byte	0x88
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE136:
+.LSFDE138:
+	.4byte	.LEFDE138-.LASFDE138
+.LASFDE138:
+	.4byte	.Lframe0
+	.4byte	.LFB204
+	.4byte	.LFE204-.LFB204
+	.byte	0x4
+	.4byte	.LCFI82-.LFB204
+	.byte	0xe
+	.uleb128 0x30
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI83-.LCFI82
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI84-.LCFI83
+	.byte	0xb
+	.align	2
+.LEFDE138:
+.LSFDE140:
+	.4byte	.LEFDE140-.LASFDE140
+.LASFDE140:
+	.4byte	.Lframe0
+	.4byte	.LFB207
+	.4byte	.LFE207-.LFB207
+	.byte	0x4
+	.4byte	.LCFI85-.LFB207
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x83
+	.uleb128 0x6
+	.byte	0x84
+	.uleb128 0x5
+	.byte	0x85
+	.uleb128 0x4
+	.byte	0x86
+	.uleb128 0x3
+	.byte	0x87
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE140:
+.LSFDE142:
+	.4byte	.LEFDE142-.LASFDE142
+.LASFDE142:
+	.4byte	.Lframe0
+	.4byte	.LFB208
+	.4byte	.LFE208-.LFB208
+	.byte	0x4
+	.4byte	.LCFI86-.LFB208
+	.byte	0xe
+	.uleb128 0x28
+	.byte	0x83
+	.uleb128 0xa
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE142:
+.LSFDE144:
+	.4byte	.LEFDE144-.LASFDE144
+.LASFDE144:
+	.4byte	.Lframe0
+	.4byte	.LFB206
+	.4byte	.LFE206-.LFB206
+	.byte	0x4
+	.4byte	.LCFI87-.LFB206
+	.byte	0xe
+	.uleb128 0x30
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI88-.LCFI87
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI89-.LCFI88
+	.byte	0xb
+	.align	2
+.LEFDE144:
+.LSFDE146:
+	.4byte	.LEFDE146-.LASFDE146
+.LASFDE146:
+	.4byte	.Lframe0
+	.4byte	.LFB209
+	.4byte	.LFE209-.LFB209
+	.byte	0x4
+	.4byte	.LCFI90-.LFB209
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x83
+	.uleb128 0x4
+	.byte	0x84
+	.uleb128 0x3
+	.byte	0x85
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE146:
+.LSFDE148:
+	.4byte	.LEFDE148-.LASFDE148
+.LASFDE148:
+	.4byte	.Lframe0
+	.4byte	.LFB212
+	.4byte	.LFE212-.LFB212
+	.byte	0x4
+	.4byte	.LCFI91-.LFB212
+	.byte	0xe
+	.uleb128 0x20
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x88
+	.uleb128 0x4
+	.byte	0x89
+	.uleb128 0x3
+	.byte	0x8a
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE148:
+.LSFDE150:
+	.4byte	.LEFDE150-.LASFDE150
+.LASFDE150:
+	.4byte	.Lframe0
+	.4byte	.LFB230
+	.4byte	.LFE230-.LFB230
+	.byte	0x4
+	.4byte	.LCFI92-.LFB230
+	.byte	0xe
+	.uleb128 0x20
+	.byte	0x84
+	.uleb128 0x5
+	.byte	0x85
+	.uleb128 0x4
+	.byte	0x86
+	.uleb128 0x3
+	.byte	0x87
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI93-.LCFI92
+	.byte	0xe
+	.uleb128 0x14
+	.align	2
+.LEFDE150:
+.LSFDE152:
+	.4byte	.LEFDE152-.LASFDE152
+.LASFDE152:
+	.4byte	.Lframe0
+	.4byte	.LFB241
+	.4byte	.LFE241-.LFB241
+	.byte	0x4
+	.4byte	.LCFI94-.LFB241
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x86
+	.uleb128 0x4
+	.byte	0x87
+	.uleb128 0x3
+	.byte	0x88
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI95-.LCFI94
+	.byte	0xe
+	.uleb128 0x38
+	.byte	0x4
+	.4byte	.LCFI96-.LCFI95
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x4
+	.4byte	.LCFI97-.LCFI96
+	.byte	0xb
+	.align	2
+.LEFDE152:
+.LSFDE154:
+	.4byte	.LEFDE154-.LASFDE154
+.LASFDE154:
+	.4byte	.Lframe0
+	.4byte	.LFB268
+	.4byte	.LFE268-.LFB268
+	.byte	0x4
+	.4byte	.LCFI98-.LFB268
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x84
+	.uleb128 0x4
+	.byte	0x85
+	.uleb128 0x3
+	.byte	0x86
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI99-.LCFI98
+	.byte	0xe
+	.uleb128 0x68
+	.byte	0x4
+	.4byte	.LCFI100-.LCFI99
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x4
+	.4byte	.LCFI101-.LCFI100
+	.byte	0xb
+	.align	2
+.LEFDE154:
+.LSFDE156:
+	.4byte	.LEFDE156-.LASFDE156
+.LASFDE156:
+	.4byte	.Lframe0
+	.4byte	.LFB240
+	.4byte	.LFE240-.LFB240
+	.byte	0x4
+	.4byte	.LCFI102-.LFB240
+	.byte	0xe
+	.uleb128 0x30
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI103-.LCFI102
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI104-.LCFI103
+	.byte	0xb
+	.align	2
+.LEFDE156:
+.LSFDE158:
+	.4byte	.LEFDE158-.LASFDE158
+.LASFDE158:
+	.4byte	.Lframe0
+	.4byte	.LFB217
+	.4byte	.LFE217-.LFB217
+	.byte	0x4
+	.4byte	.LCFI105-.LFB217
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x84
+	.uleb128 0x4
+	.byte	0x85
+	.uleb128 0x3
+	.byte	0x86
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI106-.LCFI105
+	.byte	0xa
+	.byte	0xce
+	.byte	0xc6
+	.byte	0xc5
+	.byte	0xc4
+	.byte	0xe
+	.uleb128 0
+	.byte	0x4
+	.4byte	.LCFI107-.LCFI106
+	.byte	0xb
+	.align	2
+.LEFDE158:
+.LSFDE160:
+	.4byte	.LEFDE160-.LASFDE160
+.LASFDE160:
+	.4byte	.Lframe0
+	.4byte	.LFB220
+	.4byte	.LFE220-.LFB220
+	.byte	0x4
+	.4byte	.LCFI108-.LFB220
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI109-.LCFI108
+	.byte	0xe
+	.uleb128 0x38
+	.byte	0x4
+	.4byte	.LCFI110-.LCFI109
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI111-.LCFI110
+	.byte	0xb
+	.align	2
+.LEFDE160:
+.LSFDE162:
+	.4byte	.LEFDE162-.LASFDE162
+.LASFDE162:
+	.4byte	.Lframe0
+	.4byte	.LFB225
+	.4byte	.LFE225-.LFB225
+	.byte	0x4
+	.4byte	.LCFI112-.LFB225
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI113-.LCFI112
+	.byte	0xe
+	.uleb128 0x40
+	.byte	0x4
+	.4byte	.LCFI114-.LCFI113
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI115-.LCFI114
+	.byte	0xb
+	.align	2
+.LEFDE162:
+.LSFDE164:
+	.4byte	.LEFDE164-.LASFDE164
+.LASFDE164:
+	.4byte	.Lframe0
+	.4byte	.LFB226
+	.4byte	.LFE226-.LFB226
+	.byte	0x4
+	.4byte	.LCFI116-.LFB226
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x83
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE164:
+.LSFDE166:
+	.4byte	.LEFDE166-.LASFDE166
+.LASFDE166:
+	.4byte	.Lframe0
+	.4byte	.LFB227
+	.4byte	.LFE227-.LFB227
+	.byte	0x4
+	.4byte	.LCFI117-.LFB227
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x83
+	.uleb128 0x6
+	.byte	0x84
+	.uleb128 0x5
+	.byte	0x85
+	.uleb128 0x4
+	.byte	0x86
+	.uleb128 0x3
+	.byte	0x87
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE166:
+.LSFDE168:
+	.4byte	.LEFDE168-.LASFDE168
+.LASFDE168:
+	.4byte	.Lframe0
+	.4byte	.LFB228
+	.4byte	.LFE228-.LFB228
+	.byte	0x4
+	.4byte	.LCFI118-.LFB228
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x83
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE168:
+.LSFDE170:
+	.4byte	.LEFDE170-.LASFDE170
+.LASFDE170:
+	.4byte	.Lframe0
+	.4byte	.LFB157
+	.4byte	.LFE157-.LFB157
+	.byte	0x4
+	.4byte	.LCFI119-.LFB157
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x83
+	.uleb128 0x4
+	.byte	0x84
+	.uleb128 0x3
+	.byte	0x85
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE170:
+.LSFDE172:
+	.4byte	.LEFDE172-.LASFDE172
+.LASFDE172:
+	.4byte	.Lframe0
+	.4byte	.LFB235
+	.4byte	.LFE235-.LFB235
+	.byte	0x4
+	.4byte	.LCFI120-.LFB235
+	.byte	0xe
+	.uleb128 0x30
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI121-.LCFI120
+	.byte	0xe
+	.uleb128 0x24
+	.align	2
+.LEFDE172:
+.LSFDE174:
+	.4byte	.LEFDE174-.LASFDE174
+.LASFDE174:
+	.4byte	.Lframe0
+	.4byte	.LFB259
+	.4byte	.LFE259-.LFB259
+	.byte	0x4
+	.4byte	.LCFI122-.LFB259
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x84
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI123-.LCFI122
+	.byte	0xce
+	.byte	0xc4
+	.byte	0xe
+	.uleb128 0
+	.align	2
+.LEFDE174:
+.LSFDE176:
+	.4byte	.LEFDE176-.LASFDE176
+.LASFDE176:
+	.4byte	.Lframe0
+	.4byte	.LFB260
+	.4byte	.LFE260-.LFB260
+	.byte	0x4
+	.4byte	.LCFI124-.LFB260
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI125-.LCFI124
+	.byte	0xe
+	.uleb128 0x40
+	.byte	0x4
+	.4byte	.LCFI126-.LCFI125
+	.byte	0xe
+	.uleb128 0x24
+	.align	2
+.LEFDE176:
+.LSFDE178:
+	.4byte	.LEFDE178-.LASFDE178
+.LASFDE178:
+	.4byte	.Lframe0
+	.4byte	.LFB278
+	.4byte	.LFE278-.LFB278
+	.align	2
+.LEFDE178:
+.LSFDE180:
+	.4byte	.LEFDE180-.LASFDE180
+.LASFDE180:
+	.4byte	.Lframe0
+	.4byte	.LFB176
+	.4byte	.LFE176-.LFB176
+	.byte	0x4
+	.4byte	.LCFI127-.LFB176
+	.byte	0xe
+	.uleb128 0x30
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI128-.LCFI127
+	.byte	0xe
+	.uleb128 0x24
+	.align	2
+.LEFDE180:
+.LSFDE182:
+	.4byte	.LEFDE182-.LASFDE182
+.LASFDE182:
+	.4byte	.Lframe0
+	.4byte	.LFB248
+	.4byte	.LFE248-.LFB248
+	.byte	0x4
+	.4byte	.LCFI129-.LFB248
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI130-.LCFI129
+	.byte	0xe
+	.uleb128 0x38
+	.byte	0x4
+	.4byte	.LCFI131-.LCFI130
+	.byte	0xe
+	.uleb128 0x24
+	.align	2
+.LEFDE182:
+.LSFDE184:
+	.4byte	.LEFDE184-.LASFDE184
+.LASFDE184:
+	.4byte	.Lframe0
+	.4byte	.LFB267
+	.4byte	.LFE267-.LFB267
+	.byte	0x4
+	.4byte	.LCFI132-.LFB267
+	.byte	0xe
+	.uleb128 0x28
+	.byte	0x83
+	.uleb128 0xa
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE184:
+.LSFDE186:
+	.4byte	.LEFDE186-.LASFDE186
+.LASFDE186:
+	.4byte	.Lframe0
+	.4byte	.LFB251
+	.4byte	.LFE251-.LFB251
+	.byte	0x4
+	.4byte	.LCFI133-.LFB251
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x83
+	.uleb128 0x4
+	.byte	0x84
+	.uleb128 0x3
+	.byte	0x85
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE186:
+.LSFDE188:
+	.4byte	.LEFDE188-.LASFDE188
+.LASFDE188:
+	.4byte	.Lframe0
+	.4byte	.LFB252
+	.4byte	.LFE252-.LFB252
+	.byte	0x4
+	.4byte	.LCFI134-.LFB252
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x84
+	.uleb128 0x4
+	.byte	0x85
+	.uleb128 0x3
+	.byte	0x86
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE188:
+.LSFDE190:
+	.4byte	.LEFDE190-.LASFDE190
+.LASFDE190:
+	.4byte	.Lframe0
+	.4byte	.LFB218
+	.4byte	.LFE218-.LFB218
+	.byte	0x4
+	.4byte	.LCFI135-.LFB218
+	.byte	0xe
+	.uleb128 0x20
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x88
+	.uleb128 0x4
+	.byte	0x89
+	.uleb128 0x3
+	.byte	0x8a
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI136-.LCFI135
+	.byte	0xe
+	.uleb128 0x38
+	.byte	0x4
+	.4byte	.LCFI137-.LCFI136
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x20
+	.byte	0x4
+	.4byte	.LCFI138-.LCFI137
+	.byte	0xb
+	.align	2
+.LEFDE190:
+.LSFDE192:
+	.4byte	.LEFDE192-.LASFDE192
+.LASFDE192:
+	.4byte	.Lframe0
+	.4byte	.LFB211
+	.4byte	.LFE211-.LFB211
+	.byte	0x4
+	.4byte	.LCFI139-.LFB211
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x84
+	.uleb128 0x4
+	.byte	0x85
+	.uleb128 0x3
+	.byte	0x86
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE192:
+.LSFDE194:
+	.4byte	.LEFDE194-.LASFDE194
+.LASFDE194:
+	.4byte	.Lframe0
+	.4byte	.LFB231
+	.4byte	.LFE231-.LFB231
+	.byte	0x4
+	.4byte	.LCFI140-.LFB231
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI141-.LCFI140
+	.byte	0xe
+	.uleb128 0x58
+	.byte	0x4
+	.4byte	.LCFI142-.LCFI141
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI143-.LCFI142
+	.byte	0xb
+	.align	2
+.LEFDE194:
+.LSFDE196:
+	.4byte	.LEFDE196-.LASFDE196
+.LASFDE196:
+	.4byte	.Lframe0
+	.4byte	.LFB238
+	.4byte	.LFE238-.LFB238
+	.byte	0x4
+	.4byte	.LCFI144-.LFB238
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x86
+	.uleb128 0x4
+	.byte	0x87
+	.uleb128 0x3
+	.byte	0x88
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI145-.LCFI144
+	.byte	0xe
+	.uleb128 0x30
+	.byte	0x4
+	.4byte	.LCFI146-.LCFI145
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x4
+	.4byte	.LCFI147-.LCFI146
+	.byte	0xb
+	.align	2
+.LEFDE196:
+.LSFDE198:
+	.4byte	.LEFDE198-.LASFDE198
+.LASFDE198:
+	.4byte	.Lframe0
+	.4byte	.LFB179
+	.4byte	.LFE179-.LFB179
+	.byte	0x4
+	.4byte	.LCFI148-.LFB179
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x86
+	.uleb128 0x4
+	.byte	0x87
+	.uleb128 0x3
+	.byte	0x88
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE198:
+.LSFDE200:
+	.4byte	.LEFDE200-.LASFDE200
+.LASFDE200:
+	.4byte	.Lframe0
+	.4byte	.LFB181
+	.4byte	.LFE181-.LFB181
+	.byte	0x4
+	.4byte	.LCFI149-.LFB181
+	.byte	0xe
+	.uleb128 0x28
+	.byte	0x83
+	.uleb128 0xa
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE200:
+.LSFDE202:
+	.4byte	.LEFDE202-.LASFDE202
+.LASFDE202:
+	.4byte	.Lframe0
+	.4byte	.LFB213
+	.4byte	.LFE213-.LFB213
+	.byte	0x4
+	.4byte	.LCFI150-.LFB213
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI151-.LCFI150
+	.byte	0xe
+	.uleb128 0x90
+	.byte	0x4
+	.4byte	.LCFI152-.LCFI151
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI153-.LCFI152
+	.byte	0xb
+	.align	2
+.LEFDE202:
+.LSFDE204:
+	.4byte	.LEFDE204-.LASFDE204
+.LASFDE204:
+	.4byte	.Lframe0
+	.4byte	.LFB236
+	.4byte	.LFE236-.LFB236
+	.align	2
+.LEFDE204:
+.LSFDE206:
+	.4byte	.LEFDE206-.LASFDE206
+.LASFDE206:
+	.4byte	.Lframe0
+	.4byte	.LFB215
+	.4byte	.LFE215-.LFB215
+	.byte	0x4
+	.4byte	.LCFI154-.LFB215
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x83
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE206:
+.LSFDE208:
+	.4byte	.LEFDE208-.LASFDE208
+.LASFDE208:
+	.4byte	.Lframe0
+	.4byte	.LFB214
+	.4byte	.LFE214-.LFB214
+	.byte	0x4
+	.4byte	.LCFI155-.LFB214
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI156-.LCFI155
+	.byte	0xe
+	.uleb128 0x88
+	.byte	0x4
+	.4byte	.LCFI157-.LCFI156
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI158-.LCFI157
+	.byte	0xb
+	.align	2
+.LEFDE208:
+.LSFDE210:
+	.4byte	.LEFDE210-.LASFDE210
+.LASFDE210:
+	.4byte	.Lframe0
+	.4byte	.LFB221
+	.4byte	.LFE221-.LFB221
+	.byte	0x4
+	.4byte	.LCFI159-.LFB221
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x84
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE210:
+.LSFDE212:
+	.4byte	.LEFDE212-.LASFDE212
+.LASFDE212:
+	.4byte	.Lframe0
+	.4byte	.LFB237
+	.4byte	.LFE237-.LFB237
+	.byte	0x4
+	.4byte	.LCFI160-.LFB237
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x83
+	.uleb128 0x4
+	.byte	0x84
+	.uleb128 0x3
+	.byte	0x85
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE212:
+.LSFDE214:
+	.4byte	.LEFDE214-.LASFDE214
+.LASFDE214:
+	.4byte	.Lframe0
+	.4byte	.LFB219
+	.4byte	.LFE219-.LFB219
+	.byte	0x4
+	.4byte	.LCFI161-.LFB219
+	.byte	0xe
+	.uleb128 0x20
+	.byte	0x84
+	.uleb128 0x8
+	.byte	0x85
+	.uleb128 0x7
+	.byte	0x86
+	.uleb128 0x6
+	.byte	0x87
+	.uleb128 0x5
+	.byte	0x88
+	.uleb128 0x4
+	.byte	0x89
+	.uleb128 0x3
+	.byte	0x8a
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE214:
+.LSFDE216:
+	.4byte	.LEFDE216-.LASFDE216
+.LASFDE216:
+	.4byte	.Lframe0
+	.4byte	.LFB239
+	.4byte	.LFE239-.LFB239
+	.byte	0x4
+	.4byte	.LCFI162-.LFB239
+	.byte	0xe
+	.uleb128 0x28
+	.byte	0x84
+	.uleb128 0x7
+	.byte	0x85
+	.uleb128 0x6
+	.byte	0x86
+	.uleb128 0x5
+	.byte	0x87
+	.uleb128 0x4
+	.byte	0x88
+	.uleb128 0x3
+	.byte	0x89
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI163-.LCFI162
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x1c
+	.byte	0x4
+	.4byte	.LCFI164-.LCFI163
+	.byte	0xb
+	.align	2
+.LEFDE216:
+.LSFDE218:
+	.4byte	.LEFDE218-.LASFDE218
+.LASFDE218:
+	.4byte	.Lframe0
+	.4byte	.LFB249
+	.4byte	.LFE249-.LFB249
+	.byte	0x4
+	.4byte	.LCFI165-.LFB249
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x84
+	.uleb128 0x4
+	.byte	0x85
+	.uleb128 0x3
+	.byte	0x86
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE218:
+.LSFDE220:
+	.4byte	.LEFDE220-.LASFDE220
+.LASFDE220:
+	.4byte	.Lframe0
+	.4byte	.LFB165
+	.4byte	.LFE165-.LFB165
+	.byte	0x4
+	.4byte	.LCFI166-.LFB165
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI167-.LCFI166
+	.byte	0xe
+	.uleb128 0x38
+	.byte	0x4
+	.4byte	.LCFI168-.LCFI167
+	.byte	0xe
+	.uleb128 0x24
+	.align	2
+.LEFDE220:
+.LSFDE222:
+	.4byte	.LEFDE222-.LASFDE222
+.LASFDE222:
+	.4byte	.Lframe0
+	.4byte	.LFB166
+	.4byte	.LFE166-.LFB166
+	.byte	0x4
+	.4byte	.LCFI169-.LFB166
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x84
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE222:
+.LSFDE224:
+	.4byte	.LEFDE224-.LASFDE224
+.LASFDE224:
+	.4byte	.Lframe0
+	.4byte	.LFB162
+	.4byte	.LFE162-.LFB162
+	.byte	0x4
+	.4byte	.LCFI170-.LFB162
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x83
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE224:
+.LSFDE226:
+	.4byte	.LEFDE226-.LASFDE226
+.LASFDE226:
+	.4byte	.Lframe0
+	.4byte	.LFB163
+	.4byte	.LFE163-.LFB163
+	.byte	0x4
+	.4byte	.LCFI171-.LFB163
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x83
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE226:
+.LSFDE228:
+	.4byte	.LEFDE228-.LASFDE228
+.LASFDE228:
+	.4byte	.Lframe0
+	.4byte	.LFB168
+	.4byte	.LFE168-.LFB168
+	.byte	0x4
+	.4byte	.LCFI172-.LFB168
+	.byte	0xe
+	.uleb128 0x20
+	.byte	0x84
+	.uleb128 0x6
+	.byte	0x85
+	.uleb128 0x5
+	.byte	0x86
+	.uleb128 0x4
+	.byte	0x87
+	.uleb128 0x3
+	.byte	0x88
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI173-.LCFI172
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x4
+	.4byte	.LCFI174-.LCFI173
+	.byte	0xb
+	.align	2
+.LEFDE228:
+.LSFDE230:
+	.4byte	.LEFDE230-.LASFDE230
+.LASFDE230:
+	.4byte	.Lframe0
+	.4byte	.LFB258
+	.4byte	.LFE258-.LFB258
+	.byte	0x4
+	.4byte	.LCFI175-.LFB258
+	.byte	0xe
+	.uleb128 0x30
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI176-.LCFI175
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI177-.LCFI176
+	.byte	0xb
+	.align	2
+.LEFDE230:
+.LSFDE232:
+	.4byte	.LEFDE232-.LASFDE232
+.LASFDE232:
+	.4byte	.Lframe0
+	.4byte	.LFB261
+	.4byte	.LFE261-.LFB261
+	.byte	0x4
+	.4byte	.LCFI178-.LFB261
+	.byte	0xe
+	.uleb128 0x8
+	.byte	0x84
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE232:
+.LSFDE234:
+	.4byte	.LEFDE234-.LASFDE234
+.LASFDE234:
+	.4byte	.Lframe0
+	.4byte	.LFB233
+	.4byte	.LFE233-.LFB233
+	.byte	0x4
+	.4byte	.LCFI179-.LFB233
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x84
+	.uleb128 0x4
+	.byte	0x85
+	.uleb128 0x3
+	.byte	0x86
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE234:
+.LSFDE236:
+	.4byte	.LEFDE236-.LASFDE236
+.LASFDE236:
+	.4byte	.Lframe0
+	.4byte	.LFB263
+	.4byte	.LFE263-.LFB263
+	.byte	0x4
+	.4byte	.LCFI180-.LFB263
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x84
+	.uleb128 0x4
+	.byte	0x85
+	.uleb128 0x3
+	.byte	0x86
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE236:
+.LSFDE238:
+	.4byte	.LEFDE238-.LASFDE238
+.LASFDE238:
+	.4byte	.Lframe0
+	.4byte	.LFB262
+	.4byte	.LFE262-.LFB262
+	.byte	0x4
+	.4byte	.LCFI181-.LFB262
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x83
+	.uleb128 0x4
+	.byte	0x84
+	.uleb128 0x3
+	.byte	0x85
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI182-.LCFI181
+	.byte	0xce
+	.byte	0xc5
+	.byte	0xc4
+	.byte	0xc3
+	.byte	0xe
+	.uleb128 0
+	.align	2
+.LEFDE238:
+.LSFDE240:
+	.4byte	.LEFDE240-.LASFDE240
+.LASFDE240:
+	.4byte	.Lframe0
+	.4byte	.LFB269
+	.4byte	.LFE269-.LFB269
+	.byte	0x4
+	.4byte	.LCFI183-.LFB269
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI184-.LCFI183
+	.byte	0xe
+	.uleb128 0x48
+	.byte	0x4
+	.4byte	.LCFI185-.LCFI184
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI186-.LCFI185
+	.byte	0xb
+	.align	2
+.LEFDE240:
+.LSFDE242:
+	.4byte	.LEFDE242-.LASFDE242
+.LASFDE242:
+	.4byte	.Lframe0
+	.4byte	.LFB270
+	.4byte	.LFE270-.LFB270
+	.align	2
+.LEFDE242:
+.LSFDE244:
+	.4byte	.LEFDE244-.LASFDE244
+.LASFDE244:
+	.4byte	.Lframe0
+	.4byte	.LFB164
+	.4byte	.LFE164-.LFB164
+	.byte	0x4
+	.4byte	.LCFI187-.LFB164
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI188-.LCFI187
+	.byte	0xe
+	.uleb128 0x60
+	.byte	0x4
+	.4byte	.LCFI189-.LCFI188
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI190-.LCFI189
+	.byte	0xb
+	.align	2
+.LEFDE244:
+.LSFDE246:
+	.4byte	.LEFDE246-.LASFDE246
+.LASFDE246:
+	.4byte	.Lframe0
+	.4byte	.LFB169
+	.4byte	.LFE169-.LFB169
+	.align	2
+.LEFDE246:
+.LSFDE248:
+	.4byte	.LEFDE248-.LASFDE248
+.LASFDE248:
+	.4byte	.Lframe0
+	.4byte	.LFB167
+	.4byte	.LFE167-.LFB167
+	.byte	0x4
+	.4byte	.LCFI191-.LFB167
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x84
+	.uleb128 0x9
+	.byte	0x85
+	.uleb128 0x8
+	.byte	0x86
+	.uleb128 0x7
+	.byte	0x87
+	.uleb128 0x6
+	.byte	0x88
+	.uleb128 0x5
+	.byte	0x89
+	.uleb128 0x4
+	.byte	0x8a
+	.uleb128 0x3
+	.byte	0x8b
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.byte	0x4
+	.4byte	.LCFI192-.LCFI191
+	.byte	0xe
+	.uleb128 0x68
+	.byte	0x4
+	.4byte	.LCFI193-.LCFI192
+	.byte	0xa
+	.byte	0xe
+	.uleb128 0x24
+	.byte	0x4
+	.4byte	.LCFI194-.LCFI193
+	.byte	0xb
+	.align	2
+.LEFDE248:
+.LSFDE250:
+	.4byte	.LEFDE250-.LASFDE250
+.LASFDE250:
+	.4byte	.Lframe0
+	.4byte	.LFB170
+	.4byte	.LFE170-.LFB170
+	.align	2
+.LEFDE250:
+.LSFDE252:
+	.4byte	.LEFDE252-.LASFDE252
+.LASFDE252:
+	.4byte	.Lframe0
+	.4byte	.LFB224
+	.4byte	.LFE224-.LFB224
+	.byte	0x4
+	.4byte	.LCFI195-.LFB224
+	.byte	0xe
+	.uleb128 0x18
+	.byte	0x83
+	.uleb128 0x6
+	.byte	0x84
+	.uleb128 0x5
+	.byte	0x85
+	.uleb128 0x4
+	.byte	0x86
+	.uleb128 0x3
+	.byte	0x87
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE252:
+.LSFDE254:
+	.4byte	.LEFDE254-.LASFDE254
+.LASFDE254:
+	.4byte	.Lframe0
+	.4byte	.LFB242
+	.4byte	.LFE242-.LFB242
+	.byte	0x4
+	.4byte	.LCFI196-.LFB242
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x84
+	.uleb128 0x4
+	.byte	0x85
+	.uleb128 0x3
+	.byte	0x86
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE254:
+.LSFDE256:
+	.4byte	.LEFDE256-.LASFDE256
+.LASFDE256:
+	.4byte	.Lframe0
+	.4byte	.LFB160
+	.4byte	.LFE160-.LFB160
+	.byte	0x4
+	.4byte	.LCFI197-.LFB160
+	.byte	0xe
+	.uleb128 0x20
+	.byte	0x83
+	.uleb128 0x8
+	.byte	0x84
+	.uleb128 0x7
+	.byte	0x85
+	.uleb128 0x6
+	.byte	0x86
+	.uleb128 0x5
+	.byte	0x87
+	.uleb128 0x4
+	.byte	0x88
+	.uleb128 0x3
+	.byte	0x89
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE256:
+.LSFDE258:
+	.4byte	.LEFDE258-.LASFDE258
+.LASFDE258:
+	.4byte	.Lframe0
+	.4byte	.LFB161
+	.4byte	.LFE161-.LFB161
+	.byte	0x4
+	.4byte	.LCFI198-.LFB161
+	.byte	0xe
+	.uleb128 0x10
+	.byte	0x83
+	.uleb128 0x4
+	.byte	0x84
+	.uleb128 0x3
+	.byte	0x85
+	.uleb128 0x2
+	.byte	0x8e
+	.uleb128 0x1
+	.align	2
+.LEFDE258:
+.LSFDE260:
+	.4byte	.LEFDE260-.LASFDE260
+.LASFDE260:
+	.4byte	.Lframe0
+	.4byte	.LFB279
+	.4byte	.LFE279-.LFB279
+	.align	2
+.LEFDE260:
+	.text
+.Letext0:
+	.file 6 "include/asm-generic/int-ll64.h"
+	.file 7 "./include/uapi/asm-generic/posix_types.h"
+	.file 8 "include/linux/types.h"
+	.file 9 "./arch/arm/include/asm/hwcap.h"
+	.file 10 "include/linux/init.h"
+	.file 11 "include/linux/printk.h"
+	.file 12 "include/linux/kernel.h"
+	.file 13 "drivers/rkflash/rksftl/sftl_inc.h"
+	.file 14 "drivers/rkflash/rksftl/flash_com.h"
+	.file 15 "drivers/rkflash/rksftl/sftl_struct.h"
+	.file 16 "drivers/rkflash/rksftl/sftl_global.h"
+	.file 17 "include/linux/string.h"
+	.file 18 "./arch/arm/include/asm/string.h"
+	.file 19 "drivers/rkflash/rksftl/typedef.h"
+	.file 20 "<built-in>"
+	.section	.debug_info,"",%progbits
+.Ldebug_info0:
+	.4byte	0x6763
+	.2byte	0x4
+	.4byte	.Ldebug_abbrev0
+	.byte	0x4
+	.uleb128 0x1
+	.4byte	.LASF664
+	.byte	0x1
+	.4byte	.LASF665
+	.4byte	.LASF666
+	.4byte	.Ltext0
+	.4byte	.Letext0-.Ltext0
+	.4byte	.Ldebug_line0
+	.uleb128 0x2
+	.byte	0x4
+	.uleb128 0x3
+	.byte	0x4
+	.byte	0x7
+	.4byte	.LASF0
+	.uleb128 0x3
+	.byte	0x4
+	.byte	0x7
+	.4byte	.LASF1
+	.uleb128 0x3
+	.byte	0x1
+	.byte	0x8
+	.4byte	.LASF2
+	.uleb128 0x4
+	.4byte	0x35
+	.uleb128 0x3
+	.byte	0x4
+	.byte	0x7
+	.4byte	.LASF3
+	.uleb128 0x3
+	.byte	0x1
+	.byte	0x6
+	.4byte	.LASF4
+	.uleb128 0x3
+	.byte	0x1
+	.byte	0x8
+	.4byte	.LASF5
+	.uleb128 0x3
+	.byte	0x2
+	.byte	0x5
+	.4byte	.LASF6
+	.uleb128 0x3
+	.byte	0x2
+	.byte	0x7
+	.4byte	.LASF7
+	.uleb128 0x5
+	.byte	0x4
+	.byte	0x5
+	.ascii	"int\000"
+	.uleb128 0x3
+	.byte	0x8
+	.byte	0x5
+	.4byte	.LASF8
+	.uleb128 0x3
+	.byte	0x8
+	.byte	0x7
+	.4byte	.LASF9
+	.uleb128 0x6
+	.ascii	"u8\000"
+	.byte	0x6
+	.byte	0x10
+	.4byte	0x4f
+	.uleb128 0x6
+	.ascii	"u16\000"
+	.byte	0x6
+	.byte	0x13
+	.4byte	0x5d
+	.uleb128 0x6
+	.ascii	"s32\000"
+	.byte	0x6
+	.byte	0x15
+	.4byte	0x64
+	.uleb128 0x6
+	.ascii	"u32\000"
+	.byte	0x6
+	.byte	0x16
+	.4byte	0x41
+	.uleb128 0x3
+	.byte	0x4
+	.byte	0x5
+	.4byte	.LASF10
+	.uleb128 0x7
+	.4byte	.LASF11
+	.byte	0x7
+	.byte	0x43
+	.4byte	0x41
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x35
+	.uleb128 0x7
+	.4byte	.LASF12
+	.byte	0x8
+	.byte	0x1d
+	.4byte	0xc7
+	.uleb128 0x3
+	.byte	0x1
+	.byte	0x2
+	.4byte	.LASF13
+	.uleb128 0x7
+	.4byte	.LASF14
+	.byte	0x8
+	.byte	0x36
+	.4byte	0xab
+	.uleb128 0x9
+	.4byte	.LASF15
+	.byte	0x9
+	.byte	0xd
+	.4byte	0x41
+	.uleb128 0x9
+	.4byte	.LASF16
+	.byte	0x9
+	.byte	0xd
+	.4byte	0x41
+	.uleb128 0x7
+	.4byte	.LASF17
+	.byte	0xa
+	.byte	0x83
+	.4byte	0xfa
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x100
+	.uleb128 0xa
+	.4byte	0x64
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x10b
+	.uleb128 0xb
+	.uleb128 0xc
+	.4byte	0xef
+	.4byte	0x117
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x9
+	.4byte	.LASF18
+	.byte	0xa
+	.byte	0x86
+	.4byte	0x10c
+	.uleb128 0x9
+	.4byte	.LASF19
+	.byte	0xa
+	.byte	0x86
+	.4byte	0x10c
+	.uleb128 0x9
+	.4byte	.LASF20
+	.byte	0xa
+	.byte	0x87
+	.4byte	0x10c
+	.uleb128 0x9
+	.4byte	.LASF21
+	.byte	0xa
+	.byte	0x87
+	.4byte	0x10c
+	.uleb128 0xc
+	.4byte	0x35
+	.4byte	0x14e
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x9
+	.4byte	.LASF22
+	.byte	0xa
+	.byte	0x8e
+	.4byte	0x143
+	.uleb128 0x9
+	.4byte	.LASF23
+	.byte	0xa
+	.byte	0x8f
+	.4byte	0xb6
+	.uleb128 0x9
+	.4byte	.LASF24
+	.byte	0xa
+	.byte	0x90
+	.4byte	0x41
+	.uleb128 0x9
+	.4byte	.LASF25
+	.byte	0xa
+	.byte	0x9c
+	.4byte	0x105
+	.uleb128 0x9
+	.4byte	.LASF26
+	.byte	0xa
+	.byte	0x9e
+	.4byte	0xbc
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x190
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x185
+	.uleb128 0x9
+	.4byte	.LASF27
+	.byte	0xb
+	.byte	0xa
+	.4byte	0x190
+	.uleb128 0x9
+	.4byte	.LASF28
+	.byte	0xb
+	.byte	0xb
+	.4byte	0x190
+	.uleb128 0xc
+	.4byte	0x64
+	.4byte	0x1b6
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x9
+	.4byte	.LASF29
+	.byte	0xb
+	.byte	0x2e
+	.4byte	0x1ab
+	.uleb128 0x9
+	.4byte	.LASF30
+	.byte	0xb
+	.byte	0x9f
+	.4byte	0x64
+	.uleb128 0x9
+	.4byte	.LASF31
+	.byte	0xb
+	.byte	0xa0
+	.4byte	0x64
+	.uleb128 0x9
+	.4byte	.LASF32
+	.byte	0xb
+	.byte	0xa1
+	.4byte	0x64
+	.uleb128 0xe
+	.4byte	.LASF34
+	.uleb128 0x4
+	.4byte	0x1e2
+	.uleb128 0xf
+	.4byte	.LASF33
+	.byte	0xb
+	.2byte	0x1a4
+	.4byte	0x1e7
+	.uleb128 0xe
+	.4byte	.LASF35
+	.uleb128 0xf
+	.4byte	.LASF36
+	.byte	0xc
+	.2byte	0x104
+	.4byte	0x1f8
+	.uleb128 0x10
+	.4byte	0xa4
+	.4byte	0x218
+	.uleb128 0x11
+	.4byte	0x64
+	.byte	0
+	.uleb128 0xf
+	.4byte	.LASF37
+	.byte	0xc
+	.2byte	0x105
+	.4byte	0x224
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x209
+	.uleb128 0xf
+	.4byte	.LASF38
+	.byte	0xc
+	.2byte	0x1bf
+	.4byte	0x64
+	.uleb128 0xf
+	.4byte	.LASF39
+	.byte	0xc
+	.2byte	0x1c0
+	.4byte	0x64
+	.uleb128 0xf
+	.4byte	.LASF40
+	.byte	0xc
+	.2byte	0x1c1
+	.4byte	0x64
+	.uleb128 0xf
+	.4byte	.LASF41
+	.byte	0xc
+	.2byte	0x1c2
+	.4byte	0x64
+	.uleb128 0xf
+	.4byte	.LASF42
+	.byte	0xc
+	.2byte	0x1c3
+	.4byte	0x64
+	.uleb128 0xf
+	.4byte	.LASF43
+	.byte	0xc
+	.2byte	0x1c4
+	.4byte	0x64
+	.uleb128 0xf
+	.4byte	.LASF44
+	.byte	0xc
+	.2byte	0x1c5
+	.4byte	0x64
+	.uleb128 0xf
+	.4byte	.LASF45
+	.byte	0xc
+	.2byte	0x1c7
+	.4byte	0xbc
+	.uleb128 0xf
+	.4byte	.LASF46
+	.byte	0xc
+	.2byte	0x1da
+	.4byte	0x64
+	.uleb128 0xf
+	.4byte	.LASF47
+	.byte	0xc
+	.2byte	0x1dc
+	.4byte	0xbc
+	.uleb128 0x12
+	.4byte	.LASF667
+	.byte	0x4
+	.4byte	0x41
+	.byte	0xc
+	.2byte	0x1df
+	.4byte	0x2d2
+	.uleb128 0x13
+	.4byte	.LASF48
+	.byte	0
+	.uleb128 0x13
+	.4byte	.LASF49
+	.byte	0x1
+	.uleb128 0x13
+	.4byte	.LASF50
+	.byte	0x2
+	.uleb128 0x13
+	.4byte	.LASF51
+	.byte	0x3
+	.uleb128 0x13
+	.4byte	.LASF52
+	.byte	0x4
+	.byte	0
+	.uleb128 0xf
+	.4byte	.LASF53
+	.byte	0xc
+	.2byte	0x1e5
+	.4byte	0x2a2
+	.uleb128 0xf
+	.4byte	.LASF54
+	.byte	0xc
+	.2byte	0x1f8
+	.4byte	0x190
+	.uleb128 0xf
+	.4byte	.LASF55
+	.byte	0xc
+	.2byte	0x203
+	.4byte	0x190
+	.uleb128 0x7
+	.4byte	.LASF56
+	.byte	0xd
+	.byte	0x9
+	.4byte	0x4f
+	.uleb128 0x7
+	.4byte	.LASF57
+	.byte	0xd
+	.byte	0xa
+	.4byte	0x5d
+	.uleb128 0x7
+	.4byte	.LASF58
+	.byte	0xd
+	.byte	0xb
+	.4byte	0x41
+	.uleb128 0x7
+	.4byte	.LASF59
+	.byte	0xd
+	.byte	0xc
+	.4byte	0x64
+	.uleb128 0x7
+	.4byte	.LASF60
+	.byte	0xd
+	.byte	0xd
+	.4byte	0x56
+	.uleb128 0x14
+	.4byte	.LASF65
+	.byte	0x14
+	.byte	0xe
+	.byte	0x22
+	.4byte	0x376
+	.uleb128 0x15
+	.4byte	.LASF61
+	.byte	0xe
+	.byte	0x23
+	.4byte	0x99
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF62
+	.byte	0xe
+	.byte	0x24
+	.4byte	0x99
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF63
+	.byte	0xe
+	.byte	0x25
+	.4byte	0x376
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF64
+	.byte	0xe
+	.byte	0x26
+	.4byte	0x376
+	.byte	0xc
+	.uleb128 0x16
+	.ascii	"lpa\000"
+	.byte	0xe
+	.byte	0x27
+	.4byte	0x99
+	.byte	0x10
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x99
+	.uleb128 0x14
+	.4byte	.LASF66
+	.byte	0x18
+	.byte	0xe
+	.byte	0x2a
+	.4byte	0x419
+	.uleb128 0x15
+	.4byte	.LASF67
+	.byte	0xe
+	.byte	0x2b
+	.4byte	0x83
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF68
+	.byte	0xe
+	.byte	0x2c
+	.4byte	0x83
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF69
+	.byte	0xe
+	.byte	0x2d
+	.4byte	0x83
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF70
+	.byte	0xe
+	.byte	0x2e
+	.4byte	0x83
+	.byte	0x6
+	.uleb128 0x15
+	.4byte	.LASF71
+	.byte	0xe
+	.byte	0x2f
+	.4byte	0x83
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF72
+	.byte	0xe
+	.byte	0x30
+	.4byte	0x83
+	.byte	0xa
+	.uleb128 0x15
+	.4byte	.LASF73
+	.byte	0xe
+	.byte	0x31
+	.4byte	0x83
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF74
+	.byte	0xe
+	.byte	0x32
+	.4byte	0x83
+	.byte	0xe
+	.uleb128 0x15
+	.4byte	.LASF75
+	.byte	0xe
+	.byte	0x33
+	.4byte	0x83
+	.byte	0x10
+	.uleb128 0x15
+	.4byte	.LASF76
+	.byte	0xe
+	.byte	0x34
+	.4byte	0x83
+	.byte	0x12
+	.uleb128 0x15
+	.4byte	.LASF77
+	.byte	0xe
+	.byte	0x35
+	.4byte	0x83
+	.byte	0x14
+	.uleb128 0x15
+	.4byte	.LASF78
+	.byte	0xe
+	.byte	0x36
+	.4byte	0x79
+	.byte	0x16
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x37c
+	.uleb128 0x14
+	.4byte	.LASF79
+	.byte	0x10
+	.byte	0xe
+	.byte	0x39
+	.4byte	0x45b
+	.uleb128 0x15
+	.4byte	.LASF80
+	.byte	0xe
+	.byte	0x3a
+	.4byte	0x475
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF81
+	.byte	0xe
+	.byte	0x3b
+	.4byte	0x48f
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF82
+	.byte	0xe
+	.byte	0x3c
+	.4byte	0x4b3
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF83
+	.byte	0xe
+	.byte	0x3d
+	.4byte	0x4b3
+	.byte	0xc
+	.byte	0
+	.uleb128 0x10
+	.4byte	0x8e
+	.4byte	0x46f
+	.uleb128 0x11
+	.4byte	0x46f
+	.uleb128 0x11
+	.4byte	0x99
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x83
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x45b
+	.uleb128 0x10
+	.4byte	0x99
+	.4byte	0x48f
+	.uleb128 0x11
+	.4byte	0x79
+	.uleb128 0x11
+	.4byte	0x99
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x47b
+	.uleb128 0x10
+	.4byte	0x99
+	.4byte	0x4b3
+	.uleb128 0x11
+	.4byte	0x79
+	.uleb128 0x11
+	.4byte	0x99
+	.uleb128 0x11
+	.4byte	0x376
+	.uleb128 0x11
+	.4byte	0x376
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x495
+	.uleb128 0x14
+	.4byte	.LASF84
+	.byte	0x3c
+	.byte	0xf
+	.byte	0x2b
+	.4byte	0x519
+	.uleb128 0x16
+	.ascii	"id\000"
+	.byte	0xf
+	.byte	0x2d
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF85
+	.byte	0xf
+	.byte	0x2e
+	.4byte	0x301
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF86
+	.byte	0xf
+	.byte	0x2f
+	.4byte	0x301
+	.byte	0x4
+	.uleb128 0x16
+	.ascii	"cnt\000"
+	.byte	0xf
+	.byte	0x30
+	.4byte	0x301
+	.byte	0x6
+	.uleb128 0x15
+	.4byte	.LASF87
+	.byte	0xf
+	.byte	0x31
+	.4byte	0x30c
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF88
+	.byte	0xf
+	.byte	0x32
+	.4byte	0x519
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF89
+	.byte	0xf
+	.byte	0x33
+	.4byte	0x529
+	.byte	0x1c
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x301
+	.4byte	0x529
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x7
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x539
+	.4byte	0x539
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x7
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x30c
+	.uleb128 0x14
+	.4byte	.LASF90
+	.byte	0xc
+	.byte	0xf
+	.byte	0x3f
+	.4byte	0x587
+	.uleb128 0x16
+	.ascii	"id\000"
+	.byte	0xf
+	.byte	0x41
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF85
+	.byte	0xf
+	.byte	0x42
+	.4byte	0x301
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF86
+	.byte	0xf
+	.byte	0x43
+	.4byte	0x301
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF91
+	.byte	0xf
+	.byte	0x44
+	.4byte	0x301
+	.byte	0x6
+	.uleb128 0x15
+	.4byte	.LASF87
+	.byte	0xf
+	.byte	0x45
+	.4byte	0x30c
+	.byte	0x8
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF92
+	.byte	0x28
+	.byte	0xf
+	.byte	0x48
+	.4byte	0x630
+	.uleb128 0x15
+	.4byte	.LASF93
+	.byte	0xf
+	.byte	0x4a
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF85
+	.byte	0xf
+	.byte	0x4b
+	.4byte	0x301
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF94
+	.byte	0xf
+	.byte	0x4d
+	.4byte	0x301
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF95
+	.byte	0xf
+	.byte	0x4e
+	.4byte	0x301
+	.byte	0x6
+	.uleb128 0x15
+	.4byte	.LASF96
+	.byte	0xf
+	.byte	0x50
+	.4byte	0x301
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF97
+	.byte	0xf
+	.byte	0x51
+	.4byte	0x301
+	.byte	0xa
+	.uleb128 0x15
+	.4byte	.LASF98
+	.byte	0xf
+	.byte	0x53
+	.4byte	0x630
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF99
+	.byte	0xf
+	.byte	0x54
+	.4byte	0x539
+	.byte	0x10
+	.uleb128 0x15
+	.4byte	.LASF100
+	.byte	0xf
+	.byte	0x55
+	.4byte	0x630
+	.byte	0x14
+	.uleb128 0x15
+	.4byte	.LASF101
+	.byte	0xf
+	.byte	0x56
+	.4byte	0x539
+	.byte	0x18
+	.uleb128 0x15
+	.4byte	.LASF87
+	.byte	0xf
+	.byte	0x58
+	.4byte	0x30c
+	.byte	0x1c
+	.uleb128 0x15
+	.4byte	.LASF102
+	.byte	0xf
+	.byte	0x59
+	.4byte	0x30c
+	.byte	0x20
+	.uleb128 0x15
+	.4byte	.LASF103
+	.byte	0xf
+	.byte	0x5a
+	.4byte	0x30c
+	.byte	0x24
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x301
+	.uleb128 0x14
+	.4byte	.LASF104
+	.byte	0xc
+	.byte	0xf
+	.byte	0x5d
+	.4byte	0x673
+	.uleb128 0x15
+	.4byte	.LASF105
+	.byte	0xf
+	.byte	0x5f
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF106
+	.byte	0xf
+	.byte	0x60
+	.4byte	0x301
+	.byte	0x2
+	.uleb128 0x16
+	.ascii	"hit\000"
+	.byte	0xf
+	.byte	0x61
+	.4byte	0x30c
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF107
+	.byte	0xf
+	.byte	0x62
+	.4byte	0x539
+	.byte	0x8
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF108
+	.byte	0x24
+	.byte	0xf
+	.byte	0x65
+	.4byte	0x6e0
+	.uleb128 0x15
+	.4byte	.LASF94
+	.byte	0xf
+	.byte	0x67
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF109
+	.byte	0xf
+	.byte	0x68
+	.4byte	0x30c
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF87
+	.byte	0xf
+	.byte	0x69
+	.4byte	0x30c
+	.byte	0x8
+	.uleb128 0x16
+	.ascii	"len\000"
+	.byte	0xf
+	.byte	0x6a
+	.4byte	0x30c
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF110
+	.byte	0xf
+	.byte	0x6b
+	.4byte	0x30c
+	.byte	0x10
+	.uleb128 0x15
+	.4byte	.LASF111
+	.byte	0xf
+	.byte	0x6c
+	.4byte	0x30c
+	.byte	0x14
+	.uleb128 0x15
+	.4byte	.LASF112
+	.byte	0xf
+	.byte	0x6d
+	.4byte	0x6e0
+	.byte	0x18
+	.uleb128 0x16
+	.ascii	"tbl\000"
+	.byte	0xf
+	.byte	0x6e
+	.4byte	0x6f0
+	.byte	0x20
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x30c
+	.4byte	0x6f0
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x1
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x301
+	.4byte	0x700
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x1
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF113
+	.byte	0x10
+	.byte	0xf
+	.byte	0x72
+	.4byte	0x760
+	.uleb128 0x15
+	.4byte	.LASF94
+	.byte	0xf
+	.byte	0x74
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x16
+	.ascii	"id\000"
+	.byte	0xf
+	.byte	0x75
+	.4byte	0x301
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF87
+	.byte	0xf
+	.byte	0x76
+	.4byte	0x30c
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF86
+	.byte	0xf
+	.byte	0x77
+	.4byte	0x301
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF114
+	.byte	0xf
+	.byte	0x78
+	.4byte	0x301
+	.byte	0xa
+	.uleb128 0x15
+	.4byte	.LASF115
+	.byte	0xf
+	.byte	0x79
+	.4byte	0x301
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF112
+	.byte	0xf
+	.byte	0x7a
+	.4byte	0x760
+	.byte	0xe
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x2f6
+	.4byte	0x770
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x1
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF116
+	.byte	0x10
+	.byte	0xf
+	.byte	0x7d
+	.4byte	0x7b8
+	.uleb128 0x15
+	.4byte	.LASF94
+	.byte	0xf
+	.byte	0x7f
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x16
+	.ascii	"id\000"
+	.byte	0xf
+	.byte	0x80
+	.4byte	0x301
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF87
+	.byte	0xf
+	.byte	0x81
+	.4byte	0x30c
+	.byte	0x4
+	.uleb128 0x16
+	.ascii	"lpa\000"
+	.byte	0xf
+	.byte	0x82
+	.4byte	0x30c
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF117
+	.byte	0xf
+	.byte	0x83
+	.4byte	0x30c
+	.byte	0xc
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF118
+	.byte	0x10
+	.byte	0xf
+	.byte	0x8f
+	.4byte	0x800
+	.uleb128 0x15
+	.4byte	.LASF94
+	.byte	0xf
+	.byte	0x91
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x16
+	.ascii	"id\000"
+	.byte	0xf
+	.byte	0x92
+	.4byte	0x301
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF87
+	.byte	0xf
+	.byte	0x93
+	.4byte	0x30c
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF119
+	.byte	0xf
+	.byte	0x94
+	.4byte	0x301
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF112
+	.byte	0xf
+	.byte	0x95
+	.4byte	0x800
+	.byte	0xa
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x2f6
+	.4byte	0x810
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x5
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF120
+	.byte	0x10
+	.byte	0xf
+	.byte	0x98
+	.4byte	0x858
+	.uleb128 0x15
+	.4byte	.LASF94
+	.byte	0xf
+	.byte	0x9a
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x16
+	.ascii	"id\000"
+	.byte	0xf
+	.byte	0x9b
+	.4byte	0x301
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF87
+	.byte	0xf
+	.byte	0x9c
+	.4byte	0x30c
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF121
+	.byte	0xf
+	.byte	0x9d
+	.4byte	0x30c
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF122
+	.byte	0xf
+	.byte	0x9e
+	.4byte	0x30c
+	.byte	0xc
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF123
+	.byte	0x30
+	.byte	0xf
+	.byte	0xa1
+	.4byte	0x955
+	.uleb128 0x16
+	.ascii	"tag\000"
+	.byte	0xf
+	.byte	0xa3
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x16
+	.ascii	"ver\000"
+	.byte	0xf
+	.byte	0xa4
+	.4byte	0x30c
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF91
+	.byte	0xf
+	.byte	0xa6
+	.4byte	0x301
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF124
+	.byte	0xf
+	.byte	0xa7
+	.4byte	0x2f6
+	.byte	0xa
+	.uleb128 0x15
+	.4byte	.LASF125
+	.byte	0xf
+	.byte	0xa8
+	.4byte	0x2f6
+	.byte	0xb
+	.uleb128 0x15
+	.4byte	.LASF126
+	.byte	0xf
+	.byte	0xa9
+	.4byte	0x2f6
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF127
+	.byte	0xf
+	.byte	0xaa
+	.4byte	0x2f6
+	.byte	0xd
+	.uleb128 0x15
+	.4byte	.LASF128
+	.byte	0xf
+	.byte	0xab
+	.4byte	0x301
+	.byte	0xe
+	.uleb128 0x15
+	.4byte	.LASF129
+	.byte	0xf
+	.byte	0xad
+	.4byte	0x301
+	.byte	0x10
+	.uleb128 0x15
+	.4byte	.LASF130
+	.byte	0xf
+	.byte	0xae
+	.4byte	0x301
+	.byte	0x12
+	.uleb128 0x15
+	.4byte	.LASF131
+	.byte	0xf
+	.byte	0xaf
+	.4byte	0x301
+	.byte	0x14
+	.uleb128 0x15
+	.4byte	.LASF132
+	.byte	0xf
+	.byte	0xb0
+	.4byte	0x301
+	.byte	0x16
+	.uleb128 0x15
+	.4byte	.LASF133
+	.byte	0xf
+	.byte	0xb2
+	.4byte	0x301
+	.byte	0x18
+	.uleb128 0x15
+	.4byte	.LASF134
+	.byte	0xf
+	.byte	0xb3
+	.4byte	0x301
+	.byte	0x1a
+	.uleb128 0x15
+	.4byte	.LASF135
+	.byte	0xf
+	.byte	0xb4
+	.4byte	0x301
+	.byte	0x1c
+	.uleb128 0x15
+	.4byte	.LASF136
+	.byte	0xf
+	.byte	0xb5
+	.4byte	0x301
+	.byte	0x1e
+	.uleb128 0x15
+	.4byte	.LASF137
+	.byte	0xf
+	.byte	0xb7
+	.4byte	0x30c
+	.byte	0x20
+	.uleb128 0x15
+	.4byte	.LASF138
+	.byte	0xf
+	.byte	0xb8
+	.4byte	0x30c
+	.byte	0x24
+	.uleb128 0x15
+	.4byte	.LASF139
+	.byte	0xf
+	.byte	0xb9
+	.4byte	0x30c
+	.byte	0x28
+	.uleb128 0x15
+	.4byte	.LASF112
+	.byte	0xf
+	.byte	0xba
+	.4byte	0x6f0
+	.byte	0x2c
+	.byte	0
+	.uleb128 0x18
+	.4byte	.LASF140
+	.2byte	0x200
+	.byte	0xf
+	.byte	0xbe
+	.4byte	0xa9b
+	.uleb128 0x16
+	.ascii	"tag\000"
+	.byte	0xf
+	.byte	0xc0
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x16
+	.ascii	"ver\000"
+	.byte	0xf
+	.byte	0xc1
+	.4byte	0x30c
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF141
+	.byte	0xf
+	.byte	0xc3
+	.4byte	0x30c
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF142
+	.byte	0xf
+	.byte	0xc4
+	.4byte	0x30c
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF143
+	.byte	0xf
+	.byte	0xc5
+	.4byte	0x30c
+	.byte	0x10
+	.uleb128 0x15
+	.4byte	.LASF144
+	.byte	0xf
+	.byte	0xc6
+	.4byte	0x30c
+	.byte	0x14
+	.uleb128 0x15
+	.4byte	.LASF137
+	.byte	0xf
+	.byte	0xc8
+	.4byte	0x30c
+	.byte	0x18
+	.uleb128 0x15
+	.4byte	.LASF145
+	.byte	0xf
+	.byte	0xc9
+	.4byte	0x30c
+	.byte	0x1c
+	.uleb128 0x15
+	.4byte	.LASF146
+	.byte	0xf
+	.byte	0xca
+	.4byte	0x30c
+	.byte	0x20
+	.uleb128 0x15
+	.4byte	.LASF147
+	.byte	0xf
+	.byte	0xcb
+	.4byte	0x30c
+	.byte	0x24
+	.uleb128 0x15
+	.4byte	.LASF134
+	.byte	0xf
+	.byte	0xcd
+	.4byte	0x30c
+	.byte	0x28
+	.uleb128 0x15
+	.4byte	.LASF148
+	.byte	0xf
+	.byte	0xce
+	.4byte	0x30c
+	.byte	0x2c
+	.uleb128 0x15
+	.4byte	.LASF149
+	.byte	0xf
+	.byte	0xcf
+	.4byte	0x30c
+	.byte	0x30
+	.uleb128 0x15
+	.4byte	.LASF150
+	.byte	0xf
+	.byte	0xd0
+	.4byte	0x30c
+	.byte	0x34
+	.uleb128 0x15
+	.4byte	.LASF151
+	.byte	0xf
+	.byte	0xd2
+	.4byte	0x30c
+	.byte	0x38
+	.uleb128 0x15
+	.4byte	.LASF152
+	.byte	0xf
+	.byte	0xd3
+	.4byte	0x30c
+	.byte	0x3c
+	.uleb128 0x15
+	.4byte	.LASF153
+	.byte	0xf
+	.byte	0xd4
+	.4byte	0x30c
+	.byte	0x40
+	.uleb128 0x15
+	.4byte	.LASF154
+	.byte	0xf
+	.byte	0xd5
+	.4byte	0x30c
+	.byte	0x44
+	.uleb128 0x15
+	.4byte	.LASF155
+	.byte	0xf
+	.byte	0xd7
+	.4byte	0x30c
+	.byte	0x48
+	.uleb128 0x15
+	.4byte	.LASF156
+	.byte	0xf
+	.byte	0xd8
+	.4byte	0x30c
+	.byte	0x4c
+	.uleb128 0x15
+	.4byte	.LASF157
+	.byte	0xf
+	.byte	0xd9
+	.4byte	0x30c
+	.byte	0x50
+	.uleb128 0x15
+	.4byte	.LASF158
+	.byte	0xf
+	.byte	0xda
+	.4byte	0x30c
+	.byte	0x54
+	.uleb128 0x15
+	.4byte	.LASF159
+	.byte	0xf
+	.byte	0xdc
+	.4byte	0x30c
+	.byte	0x58
+	.uleb128 0x15
+	.4byte	.LASF160
+	.byte	0xf
+	.byte	0xdd
+	.4byte	0x30c
+	.byte	0x5c
+	.uleb128 0x15
+	.4byte	.LASF161
+	.byte	0xf
+	.byte	0xde
+	.4byte	0x30c
+	.byte	0x60
+	.uleb128 0x15
+	.4byte	.LASF112
+	.byte	0xf
+	.byte	0xe0
+	.4byte	0xa9b
+	.byte	0x64
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x30c
+	.4byte	0xaab
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x66
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF162
+	.byte	0x6
+	.byte	0xf
+	.byte	0xe4
+	.4byte	0xadc
+	.uleb128 0x15
+	.4byte	.LASF163
+	.byte	0xf
+	.byte	0xe6
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF164
+	.byte	0xf
+	.byte	0xe7
+	.4byte	0x301
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF165
+	.byte	0xf
+	.byte	0xe8
+	.4byte	0x301
+	.byte	0x4
+	.byte	0
+	.uleb128 0x18
+	.4byte	.LASF166
+	.2byte	0x808
+	.byte	0xf
+	.byte	0xeb
+	.4byte	0xb26
+	.uleb128 0x16
+	.ascii	"max\000"
+	.byte	0xf
+	.byte	0xed
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF167
+	.byte	0xf
+	.byte	0xee
+	.4byte	0x301
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF168
+	.byte	0xf
+	.byte	0xef
+	.4byte	0x301
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF114
+	.byte	0xf
+	.byte	0xf0
+	.4byte	0x301
+	.byte	0x6
+	.uleb128 0x16
+	.ascii	"arr\000"
+	.byte	0xf
+	.byte	0xf1
+	.4byte	0xb26
+	.byte	0x8
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x301
+	.4byte	0xb37
+	.uleb128 0x19
+	.4byte	0x2e
+	.2byte	0x3ff
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF169
+	.byte	0x30
+	.byte	0xf
+	.byte	0xf5
+	.4byte	0xbc9
+	.uleb128 0x16
+	.ascii	"id\000"
+	.byte	0xf
+	.byte	0xf7
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF170
+	.byte	0xf
+	.byte	0xf8
+	.4byte	0x301
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF171
+	.byte	0xf
+	.byte	0xf9
+	.4byte	0x301
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF172
+	.byte	0xf
+	.byte	0xfa
+	.4byte	0x2f6
+	.byte	0x6
+	.uleb128 0x15
+	.4byte	.LASF173
+	.byte	0xf
+	.byte	0xfb
+	.4byte	0x2f6
+	.byte	0x7
+	.uleb128 0x15
+	.4byte	.LASF174
+	.byte	0xf
+	.byte	0xfc
+	.4byte	0x2f6
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF175
+	.byte	0xf
+	.byte	0xfd
+	.4byte	0x2f6
+	.byte	0x9
+	.uleb128 0x15
+	.4byte	.LASF176
+	.byte	0xf
+	.byte	0xfe
+	.4byte	0x2f6
+	.byte	0xa
+	.uleb128 0x15
+	.4byte	.LASF177
+	.byte	0xf
+	.byte	0xff
+	.4byte	0x2f6
+	.byte	0xb
+	.uleb128 0x1a
+	.4byte	.LASF87
+	.byte	0xf
+	.2byte	0x100
+	.4byte	0x30c
+	.byte	0xc
+	.uleb128 0x1a
+	.4byte	.LASF178
+	.byte	0xf
+	.2byte	0x101
+	.4byte	0xbc9
+	.byte	0x10
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x301
+	.4byte	0xbd9
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0xf
+	.byte	0
+	.uleb128 0x1b
+	.4byte	.LASF179
+	.byte	0xc
+	.byte	0xf
+	.2byte	0x105
+	.4byte	0xc0e
+	.uleb128 0x1a
+	.4byte	.LASF180
+	.byte	0xf
+	.2byte	0x107
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x1a
+	.4byte	.LASF181
+	.byte	0xf
+	.2byte	0x108
+	.4byte	0x30c
+	.byte	0x4
+	.uleb128 0x1c
+	.ascii	"lpa\000"
+	.byte	0xf
+	.2byte	0x109
+	.4byte	0x30c
+	.byte	0x8
+	.byte	0
+	.uleb128 0x1b
+	.4byte	.LASF182
+	.byte	0xc
+	.byte	0xf
+	.2byte	0x10c
+	.4byte	0xc43
+	.uleb128 0x1a
+	.4byte	.LASF63
+	.byte	0xf
+	.2byte	0x10e
+	.4byte	0x539
+	.byte	0
+	.uleb128 0x1a
+	.4byte	.LASF64
+	.byte	0xf
+	.2byte	0x10f
+	.4byte	0x539
+	.byte	0x4
+	.uleb128 0x1a
+	.4byte	.LASF183
+	.byte	0xf
+	.2byte	0x110
+	.4byte	0x30c
+	.byte	0x8
+	.byte	0
+	.uleb128 0x1d
+	.4byte	.LASF184
+	.byte	0x10
+	.byte	0x12
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_type
+	.uleb128 0x1d
+	.4byte	.LASF185
+	.byte	0x10
+	.byte	0x13
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_die_num
+	.uleb128 0x1d
+	.4byte	.LASF186
+	.byte	0x10
+	.byte	0x14
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_planes_per_die
+	.uleb128 0x1d
+	.4byte	.LASF187
+	.byte	0x10
+	.byte	0x15
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_blks_per_die
+	.uleb128 0x1d
+	.4byte	.LASF188
+	.byte	0x10
+	.byte	0x16
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_blks_per_die_shift
+	.uleb128 0x1d
+	.4byte	.LASF189
+	.byte	0x10
+	.byte	0x17
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_planes_num
+	.uleb128 0x1d
+	.4byte	.LASF190
+	.byte	0x10
+	.byte	0x18
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_blk_pre_plane
+	.uleb128 0x1d
+	.4byte	.LASF191
+	.byte	0x10
+	.byte	0x19
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_ext_blk_pre_plane
+	.uleb128 0x1d
+	.4byte	.LASF192
+	.byte	0x10
+	.byte	0x1a
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_bbm_buf_size
+	.uleb128 0x1d
+	.4byte	.LASF193
+	.byte	0x10
+	.byte	0x1c
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_page_pre_blk
+	.uleb128 0x1d
+	.4byte	.LASF194
+	.byte	0x10
+	.byte	0x1d
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_page_pre_slc_blk
+	.uleb128 0x1d
+	.4byte	.LASF195
+	.byte	0x10
+	.byte	0x1e
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_page_pre_super_blk
+	.uleb128 0x1d
+	.4byte	.LASF196
+	.byte	0x10
+	.byte	0x1f
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_sec_pre_page
+	.uleb128 0x1d
+	.4byte	.LASF197
+	.byte	0x10
+	.byte	0x20
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_sec_pre_page_shift
+	.uleb128 0x1d
+	.4byte	.LASF198
+	.byte	0x10
+	.byte	0x24
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_byte_pre_page
+	.uleb128 0x1d
+	.4byte	.LASF199
+	.byte	0x10
+	.byte	0x25
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_byte_pre_oob
+	.uleb128 0x1d
+	.4byte	.LASF200
+	.byte	0x10
+	.byte	0x26
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_reserved_blks
+	.uleb128 0x1d
+	.4byte	.LASF201
+	.byte	0x10
+	.byte	0x27
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_totle_phy_blks
+	.uleb128 0x1d
+	.4byte	.LASF202
+	.byte	0x10
+	.byte	0x29
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_map_region_num
+	.uleb128 0x1d
+	.4byte	.LASF203
+	.byte	0x10
+	.byte	0x2a
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_l2pmap_ram_region_num
+	.uleb128 0x1d
+	.4byte	.LASF204
+	.byte	0x10
+	.byte	0x2c
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_vendor_region_num
+	.uleb128 0x1d
+	.4byte	.LASF205
+	.byte	0x10
+	.byte	0x2e
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_map_blks_per_plane
+	.uleb128 0x1d
+	.4byte	.LASF206
+	.byte	0x10
+	.byte	0x2f
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_max_map_blks
+	.uleb128 0x1d
+	.4byte	.LASF207
+	.byte	0x10
+	.byte	0x30
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_max_vendor_blks
+	.uleb128 0x1d
+	.4byte	.LASF208
+	.byte	0x10
+	.byte	0x31
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_vendor_part_size
+	.uleb128 0x1d
+	.4byte	.LASF209
+	.byte	0x10
+	.byte	0x32
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_sys_blks_per_plane
+	.uleb128 0x1d
+	.4byte	.LASF210
+	.byte	0x10
+	.byte	0x33
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_init_sys_blks_per_plane
+	.uleb128 0x1d
+	.4byte	.LASF211
+	.byte	0x10
+	.byte	0x34
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_max_sys_blks
+	.uleb128 0x1d
+	.4byte	.LASF212
+	.byte	0x10
+	.byte	0x35
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_data_blks_per_plane
+	.uleb128 0x1d
+	.4byte	.LASF213
+	.byte	0x10
+	.byte	0x36
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_data_op_blks_per_plane
+	.uleb128 0x1d
+	.4byte	.LASF214
+	.byte	0x10
+	.byte	0x37
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_ftl_nand_max_data_blks
+	.uleb128 0x1d
+	.4byte	.LASF215
+	.byte	0x10
+	.byte	0x38
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	ftl_gc_temp_power_lost_recovery_flag
+	.uleb128 0x1d
+	.4byte	.LASF216
+	.byte	0x10
+	.byte	0x3a
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_GlobalSysVersion
+	.uleb128 0x1d
+	.4byte	.LASF217
+	.byte	0x10
+	.byte	0x3b
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_GlobalDataVersion
+	.uleb128 0x1d
+	.4byte	.LASF218
+	.byte	0x10
+	.byte	0x3c
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_MaxLbaSector
+	.uleb128 0x1d
+	.4byte	.LASF219
+	.byte	0x10
+	.byte	0x3d
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_MaxLpn
+	.uleb128 0x1d
+	.4byte	.LASF220
+	.byte	0x10
+	.byte	0x3e
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_VaildLpn
+	.uleb128 0x1d
+	.4byte	.LASF221
+	.byte	0x10
+	.byte	0x3f
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_MaxLbn
+	.uleb128 0x1d
+	.4byte	.LASF222
+	.byte	0x10
+	.byte	0x41
+	.4byte	0x4b9
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gBbtInfo
+	.uleb128 0x1d
+	.4byte	.LASF223
+	.byte	0x10
+	.byte	0x42
+	.4byte	0x53f
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gSysInfo
+	.uleb128 0x1d
+	.4byte	.LASF224
+	.byte	0x10
+	.byte	0x43
+	.4byte	0xadc
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gSysFreeQueue
+	.uleb128 0x1d
+	.4byte	.LASF225
+	.byte	0x10
+	.byte	0x44
+	.4byte	0x587
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gL2pMapInfo
+	.uleb128 0x1d
+	.4byte	.LASF226
+	.byte	0x10
+	.byte	0x45
+	.4byte	0x587
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gVendorBlkInfo
+	.uleb128 0x1d
+	.4byte	.LASF227
+	.byte	0x10
+	.byte	0x46
+	.4byte	0x32d
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	req_sys
+	.uleb128 0x1d
+	.4byte	.LASF228
+	.byte	0x10
+	.byte	0x47
+	.4byte	0xf40
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	req_read
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x32d
+	.uleb128 0x1d
+	.4byte	.LASF229
+	.byte	0x10
+	.byte	0x48
+	.4byte	0xf40
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	req_prgm
+	.uleb128 0x1d
+	.4byte	.LASF230
+	.byte	0x10
+	.byte	0x49
+	.4byte	0xf40
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	req_erase
+	.uleb128 0x1d
+	.4byte	.LASF231
+	.byte	0x10
+	.byte	0x4a
+	.4byte	0xf40
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	req_gc
+	.uleb128 0x1d
+	.4byte	.LASF232
+	.byte	0x10
+	.byte	0x4b
+	.4byte	0xf40
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	req_gc_dst
+	.uleb128 0x1d
+	.4byte	.LASF233
+	.byte	0x10
+	.byte	0x4d
+	.4byte	0xf40
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_req_cache
+	.uleb128 0xc
+	.4byte	0x2f6
+	.4byte	0xfab
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x1f
+	.byte	0
+	.uleb128 0x1d
+	.4byte	.LASF234
+	.byte	0x10
+	.byte	0x4f
+	.4byte	0xf9b
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_plane_order_table
+	.uleb128 0x1d
+	.4byte	.LASF235
+	.byte	0x10
+	.byte	0x51
+	.4byte	0x539
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_sys_data_buf
+	.uleb128 0x1d
+	.4byte	.LASF236
+	.byte	0x10
+	.byte	0x52
+	.4byte	0x539
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_sys_data_buf_1
+	.uleb128 0x1d
+	.4byte	.LASF237
+	.byte	0x10
+	.byte	0x53
+	.4byte	0x539
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_vendor_data_buf
+	.uleb128 0x1d
+	.4byte	.LASF238
+	.byte	0x10
+	.byte	0x54
+	.4byte	0x539
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_sys_spare_buf
+	.uleb128 0x1d
+	.4byte	.LASF239
+	.byte	0x10
+	.byte	0x55
+	.4byte	0x539
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_io_data_buf_0
+	.uleb128 0x1d
+	.4byte	.LASF240
+	.byte	0x10
+	.byte	0x56
+	.4byte	0x539
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_io_data_buf_1
+	.uleb128 0x1d
+	.4byte	.LASF241
+	.byte	0x10
+	.byte	0x57
+	.4byte	0x539
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_io_spare_buf
+	.uleb128 0x1d
+	.4byte	.LASF242
+	.byte	0x10
+	.byte	0x58
+	.4byte	0x539
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_gc_spare_buf
+	.uleb128 0x1d
+	.4byte	.LASF243
+	.byte	0x10
+	.byte	0x59
+	.4byte	0x539
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_gc_data_buf
+	.uleb128 0x1d
+	.4byte	.LASF244
+	.byte	0x10
+	.byte	0x5a
+	.4byte	0x1066
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gp_gc_page_buf_info
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0xc0e
+	.uleb128 0x1d
+	.4byte	.LASF245
+	.byte	0x10
+	.byte	0x5b
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_gc_page_buf_num
+	.uleb128 0x1d
+	.4byte	.LASF246
+	.byte	0x10
+	.byte	0x5c
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_num_req
+	.uleb128 0x1d
+	.4byte	.LASF247
+	.byte	0x10
+	.byte	0x5d
+	.4byte	0x109f
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gp_ect_tbl_info
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x673
+	.uleb128 0x1d
+	.4byte	.LASF248
+	.byte	0x10
+	.byte	0x5e
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_ect_tbl_info_size
+	.uleb128 0x1d
+	.4byte	.LASF249
+	.byte	0x10
+	.byte	0x5f
+	.4byte	0x630
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_erase_count_table
+	.uleb128 0x1d
+	.4byte	.LASF250
+	.byte	0x10
+	.byte	0x61
+	.4byte	0x630
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_swl_mul_table
+	.uleb128 0x1d
+	.4byte	.LASF251
+	.byte	0x10
+	.byte	0x62
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_swl_count
+	.uleb128 0x1d
+	.4byte	.LASF252
+	.byte	0x10
+	.byte	0x63
+	.4byte	0x630
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_valid_page_count_table
+	.uleb128 0x1d
+	.4byte	.LASF253
+	.byte	0x10
+	.byte	0x64
+	.4byte	0x630
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_valid_page_count_check_table
+	.uleb128 0x1d
+	.4byte	.LASF254
+	.byte	0x10
+	.byte	0x65
+	.4byte	0x539
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_blk_mode_table
+	.uleb128 0x1d
+	.4byte	.LASF255
+	.byte	0x10
+	.byte	0x67
+	.4byte	0x630
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_map_block_table
+	.uleb128 0x1d
+	.4byte	.LASF256
+	.byte	0x10
+	.byte	0x68
+	.4byte	0x630
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_map_block_valid_page_count
+	.uleb128 0x1d
+	.4byte	.LASF257
+	.byte	0x10
+	.byte	0x69
+	.4byte	0x539
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_map_block_ver_table
+	.uleb128 0x1d
+	.4byte	.LASF258
+	.byte	0x10
+	.byte	0x6a
+	.4byte	0x539
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_map_region_ppn_table
+	.uleb128 0x1d
+	.4byte	.LASF259
+	.byte	0x10
+	.byte	0x6b
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_map_block
+	.uleb128 0x1d
+	.4byte	.LASF260
+	.byte	0x10
+	.byte	0x6d
+	.4byte	0x630
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_vendor_block_table
+	.uleb128 0x1d
+	.4byte	.LASF261
+	.byte	0x10
+	.byte	0x6e
+	.4byte	0x630
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_vendor_block_valid_page_count
+	.uleb128 0x1d
+	.4byte	.LASF262
+	.byte	0x10
+	.byte	0x6f
+	.4byte	0x539
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_vendor_block_ver_table
+	.uleb128 0x1d
+	.4byte	.LASF263
+	.byte	0x10
+	.byte	0x70
+	.4byte	0x539
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_vendor_region_ppn_table
+	.uleb128 0x1d
+	.4byte	.LASF264
+	.byte	0x10
+	.byte	0x71
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_vendor_block
+	.uleb128 0x1d
+	.4byte	.LASF265
+	.byte	0x10
+	.byte	0x73
+	.4byte	0x11d7
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_l2p_ram_map
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x636
+	.uleb128 0x1d
+	.4byte	.LASF266
+	.byte	0x10
+	.byte	0x74
+	.4byte	0x539
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_l2p_map_buf
+	.uleb128 0x1d
+	.4byte	.LASF267
+	.byte	0x10
+	.byte	0x75
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_l2p_last_update_region_id
+	.uleb128 0x1d
+	.4byte	.LASF268
+	.byte	0x10
+	.byte	0x7c
+	.4byte	0x1210
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_data_block_list_table
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0xaab
+	.uleb128 0x1d
+	.4byte	.LASF269
+	.byte	0x10
+	.byte	0x7d
+	.4byte	0x1210
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_free_data_block_list_head
+	.uleb128 0x1d
+	.4byte	.LASF270
+	.byte	0x10
+	.byte	0x7f
+	.4byte	0x1210
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_data_block_list_head
+	.uleb128 0x1d
+	.4byte	.LASF271
+	.byte	0x10
+	.byte	0x80
+	.4byte	0x1210
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_data_block_list_tail
+	.uleb128 0x1d
+	.4byte	.LASF272
+	.byte	0x10
+	.byte	0x81
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_num_free_superblocks
+	.uleb128 0x1d
+	.4byte	.LASF273
+	.byte	0x10
+	.byte	0x82
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_num_data_superblocks
+	.uleb128 0x1d
+	.4byte	.LASF274
+	.byte	0x10
+	.byte	0x83
+	.4byte	0xb37
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_active_superblock
+	.uleb128 0x1d
+	.4byte	.LASF275
+	.byte	0x10
+	.byte	0x84
+	.4byte	0xb37
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_buffer_superblock
+	.uleb128 0x1d
+	.4byte	.LASF276
+	.byte	0x10
+	.byte	0x85
+	.4byte	0xb37
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_temp_superblock
+	.uleb128 0x1d
+	.4byte	.LASF277
+	.byte	0x10
+	.byte	0x86
+	.4byte	0xb37
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_superblock
+	.uleb128 0x1d
+	.4byte	.LASF278
+	.byte	0x10
+	.byte	0x87
+	.4byte	0x12c0
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gp_last_act_superblock
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0xb37
+	.uleb128 0x1d
+	.4byte	.LASF279
+	.byte	0x10
+	.byte	0x88
+	.4byte	0x858
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_sys_save_data
+	.uleb128 0x1d
+	.4byte	.LASF280
+	.byte	0x10
+	.byte	0x89
+	.4byte	0x955
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_sys_ext_data
+	.uleb128 0x1d
+	.4byte	.LASF281
+	.byte	0x10
+	.byte	0x8b
+	.4byte	0x12f9
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_gc_page_info
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0xbd9
+	.uleb128 0x1d
+	.4byte	.LASF282
+	.byte	0x10
+	.byte	0x8c
+	.4byte	0x630
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	p_gc_blk_tbl
+	.uleb128 0x1d
+	.4byte	.LASF283
+	.byte	0x10
+	.byte	0x8d
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_blk_num
+	.uleb128 0x1d
+	.4byte	.LASF284
+	.byte	0x10
+	.byte	0x8e
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_page_offset
+	.uleb128 0x1d
+	.4byte	.LASF285
+	.byte	0x10
+	.byte	0x8f
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_cur_blk_valid_pages
+	.uleb128 0x1d
+	.4byte	.LASF286
+	.byte	0x10
+	.byte	0x90
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_cur_blk_max_valid_pages
+	.uleb128 0x1d
+	.4byte	.LASF287
+	.byte	0x10
+	.byte	0x91
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_next_blk
+	.uleb128 0x1d
+	.4byte	.LASF288
+	.byte	0x10
+	.byte	0x92
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_next_blk_1
+	.uleb128 0x1d
+	.4byte	.LASF289
+	.byte	0x10
+	.byte	0x93
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_bad_block_temp_num
+	.uleb128 0x1d
+	.4byte	.LASF290
+	.byte	0x10
+	.byte	0x94
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_bad_block_gc_index
+	.uleb128 0xc
+	.4byte	0x301
+	.4byte	0x13a8
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x10
+	.byte	0
+	.uleb128 0x1d
+	.4byte	.LASF291
+	.byte	0x10
+	.byte	0x95
+	.4byte	0x1398
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_bad_block_temp_tbl
+	.uleb128 0x1d
+	.4byte	.LASF292
+	.byte	0x10
+	.byte	0x97
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_free_blk_threshold
+	.uleb128 0x1d
+	.4byte	.LASF293
+	.byte	0x10
+	.byte	0x98
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_merge_free_blk_threshold
+	.uleb128 0x1d
+	.4byte	.LASF294
+	.byte	0x10
+	.byte	0x99
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_blk_index
+	.uleb128 0x1d
+	.4byte	.LASF295
+	.byte	0x10
+	.byte	0x9b
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_gc_page_count
+	.uleb128 0x1d
+	.4byte	.LASF296
+	.byte	0x10
+	.byte	0x9c
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_write_page_count
+	.uleb128 0x1d
+	.4byte	.LASF297
+	.byte	0x10
+	.byte	0x9d
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_write_sector
+	.uleb128 0x1d
+	.4byte	.LASF298
+	.byte	0x10
+	.byte	0x9e
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_read_sector
+	.uleb128 0x1d
+	.4byte	.LASF299
+	.byte	0x10
+	.byte	0xa0
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_discard_page_count
+	.uleb128 0x1d
+	.4byte	.LASF300
+	.byte	0x10
+	.byte	0xa1
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_read_page_count
+	.uleb128 0x1d
+	.4byte	.LASF301
+	.byte	0x10
+	.byte	0xa2
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_tmp_data_superblock_id
+	.uleb128 0x1d
+	.4byte	.LASF302
+	.byte	0x10
+	.byte	0xa3
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_cache_write_count
+	.uleb128 0x1d
+	.4byte	.LASF303
+	.byte	0x10
+	.byte	0xa4
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_l2p_write_count
+	.uleb128 0x1d
+	.4byte	.LASF304
+	.byte	0x10
+	.byte	0xa6
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_mlc_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF305
+	.byte	0x10
+	.byte	0xa7
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_avg_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF306
+	.byte	0x10
+	.byte	0xa8
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_min_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF307
+	.byte	0x10
+	.byte	0xa9
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_slc_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF308
+	.byte	0x10
+	.byte	0xaa
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_totle_sys_slc_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF309
+	.byte	0x10
+	.byte	0xab
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_max_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF310
+	.byte	0x10
+	.byte	0xac
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_in_gc_progress
+	.uleb128 0x1d
+	.4byte	.LASF311
+	.byte	0x10
+	.byte	0xad
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_in_swl_replace
+	.uleb128 0x1d
+	.4byte	.LASF312
+	.byte	0x10
+	.byte	0xae
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_ftl_nand_free_count
+	.uleb128 0x1d
+	.4byte	.LASF313
+	.byte	0x10
+	.byte	0xaf
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_head_data_block
+	.uleb128 0x1d
+	.4byte	.LASF314
+	.byte	0x10
+	.byte	0xb0
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_head_data_block_count
+	.uleb128 0x1d
+	.4byte	.LASF315
+	.byte	0x10
+	.byte	0xb1
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_gc_skip_write_count
+	.uleb128 0x1d
+	.4byte	.LASF316
+	.byte	0x10
+	.byte	0xb2
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_cur_erase_blk
+	.uleb128 0x1d
+	.4byte	.LASF317
+	.byte	0x10
+	.byte	0xb4
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_recovery_page_num
+	.uleb128 0x1d
+	.4byte	.LASF318
+	.byte	0x10
+	.byte	0xb5
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_recovery_page_min_ver
+	.uleb128 0xc
+	.4byte	0x30c
+	.4byte	0x1594
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x1f
+	.byte	0
+	.uleb128 0x1d
+	.4byte	.LASF319
+	.byte	0x10
+	.byte	0xb6
+	.4byte	0x1584
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_recovery_ppa_tbl
+	.uleb128 0x1d
+	.4byte	.LASF320
+	.byte	0x10
+	.byte	0xb7
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	c_mlc_erase_count_value
+	.uleb128 0x1d
+	.4byte	.LASF321
+	.byte	0x10
+	.byte	0xb8
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_power_lost_recovery_flag
+	.uleb128 0x9
+	.4byte	.LASF322
+	.byte	0xd
+	.byte	0x14
+	.4byte	0x37c
+	.uleb128 0x9
+	.4byte	.LASF323
+	.byte	0xd
+	.byte	0x15
+	.4byte	0x37c
+	.uleb128 0x9
+	.4byte	.LASF324
+	.byte	0xd
+	.byte	0x16
+	.4byte	0x41e
+	.uleb128 0xc
+	.4byte	0x99
+	.4byte	0x15f9
+	.uleb128 0x19
+	.4byte	0x2e
+	.2byte	0x3ff
+	.byte	0
+	.uleb128 0x9
+	.4byte	.LASF325
+	.byte	0xd
+	.byte	0x17
+	.4byte	0x15e8
+	.uleb128 0x1d
+	.4byte	.LASF326
+	.byte	0x3
+	.byte	0x5
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	DeviceCapacity
+	.uleb128 0x1d
+	.4byte	.LASF327
+	.byte	0x3
+	.byte	0x6
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gFtlInitStatus
+	.uleb128 0x9
+	.4byte	.LASF328
+	.byte	0x3
+	.byte	0x6d
+	.4byte	0x30c
+	.uleb128 0x9
+	.4byte	.LASF329
+	.byte	0x3
+	.byte	0x6e
+	.4byte	0x30c
+	.uleb128 0x9
+	.4byte	.LASF330
+	.byte	0x3
+	.byte	0x6f
+	.4byte	0x30c
+	.uleb128 0x9
+	.4byte	.LASF331
+	.byte	0x3
+	.byte	0x70
+	.4byte	0x30c
+	.uleb128 0x1e
+	.4byte	.LASF332
+	.byte	0x3
+	.2byte	0x3bd
+	.4byte	0x64
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	power_up_flag
+	.uleb128 0x1f
+	.4byte	.LASF336
+	.byte	0x3
+	.2byte	0x480
+	.4byte	0x30c
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gc_discard_updated
+	.uleb128 0x1e
+	.4byte	.LASF333
+	.byte	0x2
+	.2byte	0x35b
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	g_ect_tbl_power_up_flush
+	.uleb128 0x1e
+	.4byte	.LASF334
+	.byte	0x2
+	.2byte	0x370
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	FtlUpdateVaildLpnCount
+	.uleb128 0xc
+	.4byte	0x301
+	.4byte	0x16ab
+	.uleb128 0x19
+	.4byte	0x2e
+	.2byte	0x1fff
+	.byte	0
+	.uleb128 0x1e
+	.4byte	.LASF335
+	.byte	0x2
+	.2byte	0x8ad
+	.4byte	0x169a
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	check_vpc_table
+	.uleb128 0x20
+	.4byte	.LASF337
+	.byte	0x5
+	.byte	0x6d
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	ftl_gc_temp_block_bops_scan_page_addr
+	.uleb128 0x1e
+	.4byte	.LASF338
+	.byte	0x5
+	.2byte	0x1d4
+	.4byte	0x301
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	gc_ink_free_return_value
+	.uleb128 0x20
+	.4byte	.LASF339
+	.byte	0x1
+	.byte	0xe
+	.4byte	0x15e8
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	check_buf
+	.uleb128 0x21
+	.4byte	0x15f9
+	.byte	0x1
+	.byte	0xf
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	ftl_temp_buf
+	.uleb128 0xc
+	.4byte	0x99
+	.4byte	0x170e
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x7f
+	.byte	0
+	.uleb128 0x20
+	.4byte	.LASF340
+	.byte	0x1
+	.byte	0x10
+	.4byte	0x16fe
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	check_spare_buf
+	.uleb128 0x22
+	.4byte	.LASF343
+	.byte	0x1
+	.byte	0xd2
+	.4byte	0x64
+	.4byte	.LFB279
+	.4byte	.LFE279-.LFB279
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x176f
+	.uleb128 0x23
+	.4byte	.LASF341
+	.byte	0x1
+	.byte	0xd2
+	.4byte	0x25
+	.4byte	.LLST300
+	.uleb128 0x23
+	.4byte	.LASF342
+	.byte	0x1
+	.byte	0xd2
+	.4byte	0x25
+	.4byte	.LLST301
+	.uleb128 0x23
+	.4byte	.LASF114
+	.byte	0x1
+	.byte	0xd2
+	.4byte	0x41
+	.4byte	.LLST302
+	.uleb128 0x24
+	.4byte	.LVL1631
+	.4byte	0x6700
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF344
+	.byte	0x1
+	.byte	0xcd
+	.4byte	0x25
+	.4byte	.LFB278
+	.4byte	.LFE278-.LFB278
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x17bf
+	.uleb128 0x23
+	.4byte	.LASF345
+	.byte	0x1
+	.byte	0xcd
+	.4byte	0x25
+	.4byte	.LLST176
+	.uleb128 0x23
+	.4byte	.LASF346
+	.byte	0x1
+	.byte	0xcd
+	.4byte	0x17bf
+	.4byte	.LLST177
+	.uleb128 0x23
+	.4byte	.LASF347
+	.byte	0x1
+	.byte	0xcd
+	.4byte	0x41
+	.4byte	.LLST178
+	.uleb128 0x24
+	.4byte	.LVL813
+	.4byte	0x670b
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x17c5
+	.uleb128 0x25
+	.uleb128 0x26
+	.4byte	.LASF350
+	.byte	0x1
+	.byte	0xc8
+	.4byte	0x25
+	.byte	0x1
+	.4byte	0x180a
+	.uleb128 0x27
+	.ascii	"s\000"
+	.byte	0x1
+	.byte	0xc8
+	.4byte	0x25
+	.uleb128 0x27
+	.ascii	"c\000"
+	.byte	0x1
+	.byte	0xc8
+	.4byte	0x64
+	.uleb128 0x27
+	.ascii	"n\000"
+	.byte	0x1
+	.byte	0xc8
+	.4byte	0x41
+	.uleb128 0x28
+	.uleb128 0x29
+	.ascii	"__p\000"
+	.byte	0x1
+	.byte	0xca
+	.4byte	0x25
+	.uleb128 0x29
+	.ascii	"__n\000"
+	.byte	0x1
+	.byte	0xca
+	.4byte	0xce
+	.byte	0
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF348
+	.byte	0x1
+	.byte	0xb6
+	.4byte	0x8e
+	.4byte	.LFB276
+	.4byte	.LFE276-.LFB276
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1900
+	.uleb128 0x23
+	.4byte	.LASF349
+	.byte	0x1
+	.byte	0xb6
+	.4byte	0x46f
+	.4byte	.LLST108
+	.uleb128 0x2b
+	.ascii	"die\000"
+	.byte	0x1
+	.byte	0xb6
+	.4byte	0x99
+	.4byte	.LLST109
+	.uleb128 0x2c
+	.4byte	.LASF114
+	.byte	0x1
+	.byte	0xb8
+	.4byte	0x83
+	.4byte	.LLST110
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x1
+	.byte	0xb8
+	.4byte	0x83
+	.uleb128 0x2d
+	.4byte	0x17c6
+	.4byte	.LBB337
+	.4byte	.Ldebug_ranges0+0x100
+	.byte	0x1
+	.byte	0xba
+	.4byte	0x18aa
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x100
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x100
+	.uleb128 0x30
+	.4byte	0x17f2
+	.uleb128 0x30
+	.4byte	0x17fd
+	.uleb128 0x31
+	.4byte	.LVL468
+	.4byte	0x6714
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x32
+	.4byte	0x17c6
+	.4byte	.LBB346
+	.4byte	.LBE346-.LBB346
+	.byte	0x1
+	.byte	0xbd
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB347
+	.4byte	.LBE347-.LBB347
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB348
+	.4byte	.LBE348-.LBB348
+	.uleb128 0x30
+	.4byte	0x17f2
+	.uleb128 0x30
+	.4byte	0x17fd
+	.uleb128 0x31
+	.4byte	.LVL472
+	.4byte	0x6714
+	.byte	0
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x26
+	.4byte	.LASF351
+	.byte	0x1
+	.byte	0x9b
+	.4byte	0x317
+	.byte	0x1
+	.4byte	0x1944
+	.uleb128 0x34
+	.4byte	.LASF352
+	.byte	0x1
+	.byte	0x9b
+	.4byte	0x301
+	.uleb128 0x29
+	.ascii	"sts\000"
+	.byte	0x1
+	.byte	0x9d
+	.4byte	0x317
+	.uleb128 0x35
+	.4byte	.LASF353
+	.byte	0x1
+	.byte	0x9e
+	.4byte	0x1944
+	.uleb128 0x29
+	.ascii	"req\000"
+	.byte	0x1
+	.byte	0x9f
+	.4byte	0x32d
+	.uleb128 0x36
+	.ascii	"out\000"
+	.byte	0x1
+	.byte	0xb1
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x30c
+	.4byte	0x1954
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0xf
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF354
+	.byte	0x1
+	.byte	0x85
+	.4byte	0x8e
+	.4byte	.LFB274
+	.4byte	.LFE274-.LFB274
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x19ea
+	.uleb128 0x23
+	.4byte	.LASF355
+	.byte	0x1
+	.byte	0x85
+	.4byte	0x25
+	.4byte	.LLST95
+	.uleb128 0x23
+	.4byte	.LASF356
+	.byte	0x1
+	.byte	0x85
+	.4byte	0x99
+	.4byte	.LLST96
+	.uleb128 0x23
+	.4byte	.LASF357
+	.byte	0x1
+	.byte	0x85
+	.4byte	0x99
+	.4byte	.LLST97
+	.uleb128 0x37
+	.ascii	"i\000"
+	.byte	0x1
+	.byte	0x87
+	.4byte	0x99
+	.uleb128 0x1
+	.byte	0x56
+	.uleb128 0x29
+	.ascii	"cs\000"
+	.byte	0x1
+	.byte	0x87
+	.4byte	0x99
+	.uleb128 0x35
+	.4byte	.LASF61
+	.byte	0x1
+	.byte	0x87
+	.4byte	0x99
+	.uleb128 0x20
+	.4byte	.LASF358
+	.byte	0x1
+	.byte	0x87
+	.4byte	0x99
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -36
+	.uleb128 0x29
+	.ascii	"req\000"
+	.byte	0x1
+	.byte	0x88
+	.4byte	0xf40
+	.uleb128 0x20
+	.4byte	.LASF359
+	.byte	0x1
+	.byte	0x89
+	.4byte	0x99
+	.uleb128 0x1
+	.byte	0x59
+	.uleb128 0x31
+	.4byte	.LVL407
+	.4byte	0x1ba6
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF360
+	.byte	0x1
+	.byte	0x49
+	.4byte	0x8e
+	.4byte	.LFB273
+	.4byte	.LFE273-.LFB273
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1ae3
+	.uleb128 0x23
+	.4byte	.LASF355
+	.byte	0x1
+	.byte	0x49
+	.4byte	0x25
+	.4byte	.LLST90
+	.uleb128 0x23
+	.4byte	.LASF357
+	.byte	0x1
+	.byte	0x49
+	.4byte	0x99
+	.4byte	.LLST91
+	.uleb128 0x23
+	.4byte	.LASF356
+	.byte	0x1
+	.byte	0x49
+	.4byte	0x99
+	.4byte	.LLST92
+	.uleb128 0x23
+	.4byte	.LASF361
+	.byte	0x1
+	.byte	0x49
+	.4byte	0x99
+	.4byte	.LLST93
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x1
+	.byte	0x4b
+	.4byte	0x99
+	.uleb128 0x29
+	.ascii	"cs\000"
+	.byte	0x1
+	.byte	0x4b
+	.4byte	0x99
+	.uleb128 0x35
+	.4byte	.LASF61
+	.byte	0x1
+	.byte	0x4b
+	.4byte	0x99
+	.uleb128 0x20
+	.4byte	.LASF358
+	.byte	0x1
+	.byte	0x4b
+	.4byte	0x99
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -64
+	.uleb128 0x2c
+	.4byte	.LASF359
+	.byte	0x1
+	.byte	0x4c
+	.4byte	0x99
+	.4byte	.LLST94
+	.uleb128 0x29
+	.ascii	"req\000"
+	.byte	0x1
+	.byte	0x4d
+	.4byte	0xf40
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x1af3
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7595
+	.uleb128 0x39
+	.4byte	.Ldebug_ranges0+0xb0
+	.4byte	0x1ad0
+	.uleb128 0x20
+	.4byte	.LASF363
+	.byte	0x1
+	.byte	0x68
+	.4byte	0x32d
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -60
+	.uleb128 0x31
+	.4byte	.LVL391
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL393
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL394
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL395
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL385
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL386
+	.4byte	0x1ba6
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x1af3
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0xe
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x1ae3
+	.uleb128 0x2a
+	.4byte	.LASF364
+	.byte	0x1
+	.byte	0x2b
+	.4byte	0x8e
+	.4byte	.LFB272
+	.4byte	.LFE272-.LFB272
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1ba6
+	.uleb128 0x23
+	.4byte	.LASF355
+	.byte	0x1
+	.byte	0x2b
+	.4byte	0x25
+	.4byte	.LLST83
+	.uleb128 0x23
+	.4byte	.LASF357
+	.byte	0x1
+	.byte	0x2b
+	.4byte	0x99
+	.4byte	.LLST84
+	.uleb128 0x23
+	.4byte	.LASF356
+	.byte	0x1
+	.byte	0x2b
+	.4byte	0x99
+	.4byte	.LLST85
+	.uleb128 0x37
+	.ascii	"i\000"
+	.byte	0x1
+	.byte	0x2d
+	.4byte	0x99
+	.uleb128 0x1
+	.byte	0x56
+	.uleb128 0x29
+	.ascii	"cs\000"
+	.byte	0x1
+	.byte	0x2d
+	.4byte	0x99
+	.uleb128 0x35
+	.4byte	.LASF61
+	.byte	0x1
+	.byte	0x2d
+	.4byte	0x99
+	.uleb128 0x20
+	.4byte	.LASF358
+	.byte	0x1
+	.byte	0x2d
+	.4byte	0x99
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -44
+	.uleb128 0x20
+	.4byte	.LASF359
+	.byte	0x1
+	.byte	0x2e
+	.4byte	0x99
+	.uleb128 0x1
+	.byte	0x57
+	.uleb128 0x29
+	.ascii	"req\000"
+	.byte	0x1
+	.byte	0x2f
+	.4byte	0xf40
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x1af3
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7578
+	.uleb128 0x31
+	.4byte	.LVL355
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL358
+	.4byte	0x1ba6
+	.byte	0
+	.uleb128 0x3a
+	.4byte	.LASF668
+	.byte	0x1
+	.byte	0x11
+	.4byte	0x99
+	.4byte	.LFB271
+	.4byte	.LFE271-.LFB271
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1c4e
+	.uleb128 0x2b
+	.ascii	"req\000"
+	.byte	0x1
+	.byte	0x11
+	.4byte	0xf40
+	.4byte	.LLST0
+	.uleb128 0x23
+	.4byte	.LASF358
+	.byte	0x1
+	.byte	0x11
+	.4byte	0x376
+	.4byte	.LLST1
+	.uleb128 0x23
+	.4byte	.LASF365
+	.byte	0x1
+	.byte	0x11
+	.4byte	0x376
+	.4byte	.LLST2
+	.uleb128 0x35
+	.4byte	.LASF366
+	.byte	0x1
+	.byte	0x13
+	.4byte	0x83
+	.uleb128 0x35
+	.4byte	.LASF367
+	.byte	0x1
+	.byte	0x13
+	.4byte	0x83
+	.uleb128 0x2c
+	.4byte	.LASF71
+	.byte	0x1
+	.byte	0x14
+	.4byte	0x83
+	.4byte	.LLST3
+	.uleb128 0x2c
+	.4byte	.LASF72
+	.byte	0x1
+	.byte	0x14
+	.4byte	0x83
+	.4byte	.LLST4
+	.uleb128 0x2c
+	.4byte	.LASF368
+	.byte	0x1
+	.byte	0x15
+	.4byte	0x99
+	.4byte	.LLST5
+	.uleb128 0x2c
+	.4byte	.LASF62
+	.byte	0x1
+	.byte	0x16
+	.4byte	0x99
+	.4byte	.LLST6
+	.uleb128 0x2c
+	.4byte	.LASF369
+	.byte	0x1
+	.byte	0x17
+	.4byte	0x99
+	.4byte	.LLST7
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF370
+	.byte	0x5
+	.2byte	0x2f8
+	.4byte	0x99
+	.4byte	.LFB270
+	.4byte	.LFE270-.LFB270
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1c72
+	.uleb128 0x24
+	.4byte	.LVL1370
+	.4byte	0x1c72
+	.byte	0
+	.uleb128 0x3c
+	.4byte	.LASF371
+	.byte	0x5
+	.2byte	0x1d5
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x1d3f
+	.uleb128 0x3d
+	.4byte	.LASF372
+	.byte	0x5
+	.2byte	0x1d5
+	.4byte	0x30c
+	.uleb128 0x3d
+	.4byte	.LASF373
+	.byte	0x5
+	.2byte	0x1d5
+	.4byte	0x30c
+	.uleb128 0x3e
+	.4byte	.LASF374
+	.byte	0x5
+	.2byte	0x1d7
+	.4byte	0x301
+	.uleb128 0x3f
+	.ascii	"lpa\000"
+	.byte	0x5
+	.2byte	0x1d8
+	.4byte	0x30c
+	.uleb128 0x3f
+	.ascii	"ppa\000"
+	.byte	0x5
+	.2byte	0x1d8
+	.4byte	0x30c
+	.uleb128 0x3e
+	.4byte	.LASF375
+	.byte	0x5
+	.2byte	0x1d9
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF85
+	.byte	0x5
+	.2byte	0x1da
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF376
+	.byte	0x5
+	.2byte	0x1da
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF377
+	.byte	0x5
+	.2byte	0x1da
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF378
+	.byte	0x5
+	.2byte	0x1da
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF379
+	.byte	0x5
+	.2byte	0x1db
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF380
+	.byte	0x5
+	.2byte	0x1dc
+	.4byte	0x1d3f
+	.uleb128 0x40
+	.4byte	.LASF381
+	.byte	0x5
+	.2byte	0x276
+	.uleb128 0x40
+	.4byte	.LASF382
+	.byte	0x5
+	.2byte	0x279
+	.uleb128 0x41
+	.4byte	.LASF362
+	.4byte	0x1d55
+	.4byte	.LASF371
+	.uleb128 0x28
+	.uleb128 0x3e
+	.4byte	.LASF383
+	.byte	0x5
+	.2byte	0x1f3
+	.4byte	0x301
+	.byte	0
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x770
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x1d55
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x16
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x1d45
+	.uleb128 0x3c
+	.4byte	.LASF384
+	.byte	0x5
+	.2byte	0x1a2
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x1dba
+	.uleb128 0x3f
+	.ascii	"ret\000"
+	.byte	0x5
+	.2byte	0x1a4
+	.4byte	0x64
+	.uleb128 0x3f
+	.ascii	"i\000"
+	.byte	0x5
+	.2byte	0x1a5
+	.4byte	0x64
+	.uleb128 0x3f
+	.ascii	"ppa\000"
+	.byte	0x5
+	.2byte	0x1a6
+	.4byte	0x30c
+	.uleb128 0x3e
+	.4byte	.LASF353
+	.byte	0x5
+	.2byte	0x1a7
+	.4byte	0x1944
+	.uleb128 0x42
+	.4byte	0x1dab
+	.uleb128 0x3e
+	.4byte	.LASF385
+	.byte	0x5
+	.2byte	0x1b1
+	.4byte	0x32d
+	.byte	0
+	.uleb128 0x28
+	.uleb128 0x3e
+	.4byte	.LASF386
+	.byte	0x5
+	.2byte	0x1c6
+	.4byte	0x30c
+	.byte	0
+	.byte	0
+	.uleb128 0x3c
+	.4byte	.LASF387
+	.byte	0x5
+	.2byte	0x185
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x1e04
+	.uleb128 0x3d
+	.4byte	.LASF388
+	.byte	0x5
+	.2byte	0x185
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF376
+	.byte	0x5
+	.2byte	0x187
+	.4byte	0x301
+	.uleb128 0x3f
+	.ascii	"i\000"
+	.byte	0x5
+	.2byte	0x188
+	.4byte	0x301
+	.uleb128 0x3f
+	.ascii	"j\000"
+	.byte	0x5
+	.2byte	0x188
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF178
+	.byte	0x5
+	.2byte	0x189
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x43
+	.4byte	.LASF497
+	.byte	0x5
+	.2byte	0x17a
+	.4byte	0x64
+	.byte	0x1
+	.uleb128 0x3b
+	.4byte	.LASF389
+	.byte	0x5
+	.2byte	0x166
+	.4byte	0x64
+	.4byte	.LFB265
+	.4byte	.LFE265-.LFB265
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1e6d
+	.uleb128 0x44
+	.4byte	.LASF178
+	.byte	0x5
+	.2byte	0x166
+	.4byte	0x301
+	.4byte	.LLST82
+	.uleb128 0x3f
+	.ascii	"i\000"
+	.byte	0x5
+	.2byte	0x168
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF390
+	.byte	0x5
+	.2byte	0x169
+	.4byte	0x301
+	.uleb128 0x31
+	.4byte	.LVL341
+	.4byte	0x4561
+	.uleb128 0x31
+	.4byte	.LVL342
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL343
+	.4byte	0x1e6d
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF391
+	.byte	0x5
+	.2byte	0x158
+	.4byte	0x64
+	.4byte	.LFB264
+	.4byte	.LFE264-.LFB264
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1ea1
+	.uleb128 0x44
+	.4byte	.LASF392
+	.byte	0x5
+	.2byte	0x158
+	.4byte	0x301
+	.4byte	.LLST81
+	.uleb128 0x31
+	.4byte	.LVL338
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF393
+	.byte	0x5
+	.2byte	0x13b
+	.4byte	0x30c
+	.4byte	.LFB263
+	.4byte	.LFE263-.LFB263
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1f15
+	.uleb128 0x3f
+	.ascii	"i\000"
+	.byte	0x5
+	.2byte	0x13d
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF380
+	.byte	0x5
+	.2byte	0x13e
+	.4byte	0x1d3f
+	.4byte	.LLST254
+	.uleb128 0x31
+	.4byte	.LVL1271
+	.4byte	0x19ea
+	.uleb128 0x31
+	.4byte	.LVL1272
+	.4byte	0x22cb
+	.uleb128 0x31
+	.4byte	.LVL1273
+	.4byte	0x20c4
+	.uleb128 0x31
+	.4byte	.LVL1274
+	.4byte	0x4b59
+	.uleb128 0x31
+	.4byte	.LVL1275
+	.4byte	0x499b
+	.uleb128 0x31
+	.4byte	.LVL1276
+	.4byte	0x2093
+	.uleb128 0x31
+	.4byte	.LVL1278
+	.4byte	0x21ed
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF394
+	.byte	0x5
+	.2byte	0x12b
+	.4byte	0x30c
+	.4byte	.LFB262
+	.4byte	.LFE262-.LFB262
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1f6f
+	.uleb128 0x31
+	.4byte	.LVL1279
+	.4byte	0x4f66
+	.uleb128 0x31
+	.4byte	.LVL1280
+	.4byte	0x20c4
+	.uleb128 0x31
+	.4byte	.LVL1281
+	.4byte	0x2505
+	.uleb128 0x31
+	.4byte	.LVL1282
+	.4byte	0x39f4
+	.uleb128 0x31
+	.4byte	.LVL1283
+	.4byte	0x372d
+	.uleb128 0x31
+	.4byte	.LVL1284
+	.4byte	0x3588
+	.uleb128 0x24
+	.4byte	.LVL1285
+	.4byte	0x23e4
+	.byte	0
+	.uleb128 0x46
+	.4byte	.LASF453
+	.byte	0x5
+	.2byte	0x120
+	.byte	0x1
+	.uleb128 0x22
+	.4byte	.LASF395
+	.byte	0x5
+	.byte	0xd2
+	.4byte	0x30c
+	.4byte	.LFB260
+	.4byte	.LFE260-.LFB260
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2093
+	.uleb128 0x23
+	.4byte	.LASF396
+	.byte	0x5
+	.byte	0xd2
+	.4byte	0x12c0
+	.4byte	.LLST167
+	.uleb128 0x23
+	.4byte	.LASF397
+	.byte	0x5
+	.byte	0xd2
+	.4byte	0x30c
+	.4byte	.LLST168
+	.uleb128 0x2c
+	.4byte	.LASF378
+	.byte	0x5
+	.byte	0xd4
+	.4byte	0x301
+	.4byte	.LLST169
+	.uleb128 0x2c
+	.4byte	.LASF357
+	.byte	0x5
+	.byte	0xd5
+	.4byte	0x301
+	.4byte	.LLST170
+	.uleb128 0x29
+	.ascii	"req\000"
+	.byte	0x5
+	.byte	0xd5
+	.4byte	0x301
+	.uleb128 0x35
+	.4byte	.LASF376
+	.byte	0x5
+	.byte	0xd6
+	.4byte	0x301
+	.uleb128 0x2c
+	.4byte	.LASF172
+	.byte	0x5
+	.byte	0xd6
+	.4byte	0x301
+	.4byte	.LLST171
+	.uleb128 0x2c
+	.4byte	.LASF170
+	.byte	0x5
+	.byte	0xd6
+	.4byte	0x301
+	.4byte	.LLST172
+	.uleb128 0x2c
+	.4byte	.LASF398
+	.byte	0x5
+	.byte	0xd7
+	.4byte	0x30c
+	.4byte	.LLST173
+	.uleb128 0x2c
+	.4byte	.LASF399
+	.byte	0x5
+	.byte	0xd8
+	.4byte	0x30c
+	.4byte	.LLST174
+	.uleb128 0x35
+	.4byte	.LASF400
+	.byte	0x5
+	.byte	0xd9
+	.4byte	0x30c
+	.uleb128 0x2c
+	.4byte	.LASF380
+	.byte	0x5
+	.byte	0xda
+	.4byte	0x1d3f
+	.4byte	.LLST175
+	.uleb128 0x47
+	.4byte	.LASF401
+	.byte	0x5
+	.byte	0xe1
+	.uleb128 0x47
+	.4byte	.LASF402
+	.byte	0x5
+	.byte	0xe5
+	.uleb128 0x48
+	.4byte	.LASF471
+	.byte	0x5
+	.2byte	0x117
+	.4byte	.L976
+	.uleb128 0x31
+	.4byte	.LVL773
+	.4byte	0x2093
+	.uleb128 0x31
+	.4byte	.LVL781
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL795
+	.4byte	0x4595
+	.uleb128 0x31
+	.4byte	.LVL803
+	.4byte	0x313e
+	.uleb128 0x31
+	.4byte	.LVL805
+	.4byte	0x21ed
+	.uleb128 0x31
+	.4byte	.LVL807
+	.4byte	0x422b
+	.uleb128 0x31
+	.4byte	.LVL808
+	.4byte	0x2093
+	.byte	0
+	.uleb128 0x49
+	.4byte	.LASF409
+	.byte	0x5
+	.byte	0xc9
+	.4byte	.LFB259
+	.4byte	.LFE259-.LFB259
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x20c4
+	.uleb128 0x31
+	.4byte	.LVL767
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL768
+	.4byte	0x17c6
+	.uleb128 0x24
+	.4byte	.LVL769
+	.4byte	0x230f
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF403
+	.byte	0x5
+	.byte	0x6f
+	.4byte	0x64
+	.4byte	.LFB258
+	.4byte	.LFE258-.LFB258
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x21d8
+	.uleb128 0x23
+	.4byte	.LASF404
+	.byte	0x5
+	.byte	0x6f
+	.4byte	0x64
+	.4byte	.LLST250
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x5
+	.byte	0x71
+	.4byte	0x301
+	.uleb128 0x35
+	.4byte	.LASF405
+	.byte	0x5
+	.byte	0x71
+	.4byte	0x301
+	.uleb128 0x2c
+	.4byte	.LASF406
+	.byte	0x5
+	.byte	0x72
+	.4byte	0x30c
+	.4byte	.LLST251
+	.uleb128 0x2c
+	.4byte	.LASF407
+	.byte	0x5
+	.byte	0x73
+	.4byte	0x30c
+	.4byte	.LLST252
+	.uleb128 0x35
+	.4byte	.LASF396
+	.byte	0x5
+	.byte	0x74
+	.4byte	0x12c0
+	.uleb128 0x2c
+	.4byte	.LASF408
+	.byte	0x5
+	.byte	0x75
+	.4byte	0x12f9
+	.4byte	.LLST253
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x21e8
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7428
+	.uleb128 0x31
+	.4byte	.LVL1239
+	.4byte	0x1f78
+	.uleb128 0x31
+	.4byte	.LVL1241
+	.4byte	0x372d
+	.uleb128 0x31
+	.4byte	.LVL1242
+	.4byte	0x4b59
+	.uleb128 0x31
+	.4byte	.LVL1243
+	.4byte	0x499b
+	.uleb128 0x31
+	.4byte	.LVL1247
+	.4byte	0x4f66
+	.uleb128 0x31
+	.4byte	.LVL1248
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1250
+	.4byte	0x232e
+	.uleb128 0x31
+	.4byte	.LVL1251
+	.4byte	0x4206
+	.uleb128 0x31
+	.4byte	.LVL1253
+	.4byte	0x39f4
+	.uleb128 0x31
+	.4byte	.LVL1254
+	.4byte	0x3588
+	.uleb128 0x31
+	.4byte	.LVL1256
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1257
+	.4byte	0x3929
+	.uleb128 0x31
+	.4byte	.LVL1258
+	.4byte	0x4561
+	.uleb128 0x31
+	.4byte	.LVL1259
+	.4byte	0x3929
+	.uleb128 0x31
+	.4byte	.LVL1260
+	.4byte	0x232e
+	.uleb128 0x31
+	.4byte	.LVL1261
+	.4byte	0x422b
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x21e8
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x12
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x21d8
+	.uleb128 0x49
+	.4byte	.LASF410
+	.byte	0x5
+	.byte	0x54
+	.4byte	.LFB257
+	.4byte	.LFE257-.LFB257
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2255
+	.uleb128 0x23
+	.4byte	.LASF411
+	.byte	0x5
+	.byte	0x54
+	.4byte	0x30c
+	.4byte	.LLST76
+	.uleb128 0x23
+	.4byte	.LASF181
+	.byte	0x5
+	.byte	0x54
+	.4byte	0x30c
+	.4byte	.LLST77
+	.uleb128 0x2b
+	.ascii	"lpa\000"
+	.byte	0x5
+	.byte	0x54
+	.4byte	0x30c
+	.4byte	.LLST78
+	.uleb128 0x2c
+	.4byte	.LASF412
+	.byte	0x5
+	.byte	0x56
+	.4byte	0x301
+	.4byte	.LLST79
+	.uleb128 0x4a
+	.ascii	"i\000"
+	.byte	0x5
+	.byte	0x57
+	.4byte	0x301
+	.4byte	.LLST80
+	.uleb128 0x31
+	.4byte	.LVL326
+	.4byte	0x4561
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF413
+	.byte	0x5
+	.byte	0x49
+	.4byte	0x30c
+	.4byte	.LFB256
+	.4byte	.LFE256-.LFB256
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2287
+	.uleb128 0x2b
+	.ascii	"blk\000"
+	.byte	0x5
+	.byte	0x49
+	.4byte	0x301
+	.4byte	.LLST75
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x5
+	.byte	0x4b
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x49
+	.4byte	.LASF414
+	.byte	0x5
+	.byte	0x38
+	.4byte	.LFB255
+	.4byte	.LFE255-.LFB255
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x22cb
+	.uleb128 0x4b
+	.ascii	"req\000"
+	.byte	0x5
+	.byte	0x38
+	.4byte	0xf40
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x4c
+	.4byte	.LASF415
+	.byte	0x5
+	.byte	0x38
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x51
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x5
+	.byte	0x3a
+	.4byte	0x301
+	.uleb128 0x35
+	.4byte	.LASF416
+	.byte	0x5
+	.byte	0x3b
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x49
+	.4byte	.LASF417
+	.byte	0x5
+	.byte	0x29
+	.4byte	.LFB254
+	.4byte	.LFE254-.LFB254
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x230f
+	.uleb128 0x4b
+	.ascii	"req\000"
+	.byte	0x5
+	.byte	0x29
+	.4byte	0xf40
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x4c
+	.4byte	.LASF415
+	.byte	0x5
+	.byte	0x29
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x51
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x5
+	.byte	0x2b
+	.4byte	0x301
+	.uleb128 0x35
+	.4byte	.LASF416
+	.byte	0x5
+	.byte	0x2c
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x49
+	.4byte	.LASF418
+	.byte	0x5
+	.byte	0x15
+	.4byte	.LFB253
+	.4byte	.LFE253-.LFB253
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x232e
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x5
+	.byte	0x17
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF419
+	.byte	0x2
+	.2byte	0xa93
+	.4byte	0x64
+	.4byte	.LFB252
+	.4byte	.LFE252-.LFB252
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x238f
+	.uleb128 0x44
+	.4byte	.LASF405
+	.byte	0x2
+	.2byte	0xa93
+	.4byte	0x301
+	.4byte	.LLST191
+	.uleb128 0x3f
+	.ascii	"ret\000"
+	.byte	0x2
+	.2byte	0xa95
+	.4byte	0x64
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x239f
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7358
+	.uleb128 0x31
+	.4byte	.LVL886
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL888
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL890
+	.4byte	0x23a4
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x239f
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x13
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x238f
+	.uleb128 0x3c
+	.4byte	.LASF420
+	.byte	0x2
+	.2byte	0xa7e
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x23cf
+	.uleb128 0x3d
+	.4byte	.LASF405
+	.byte	0x2
+	.2byte	0xa7e
+	.4byte	0x301
+	.uleb128 0x41
+	.4byte	.LASF362
+	.4byte	0x23df
+	.4byte	.LASF420
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x23df
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0xf
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x23cf
+	.uleb128 0x3b
+	.4byte	.LASF421
+	.byte	0x2
+	.2byte	0xa5e
+	.4byte	0x30c
+	.4byte	.LFB250
+	.4byte	.LFE250-.LFB250
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2460
+	.uleb128 0x44
+	.4byte	.LASF422
+	.byte	0x2
+	.2byte	0xa5e
+	.4byte	0x12c0
+	.4byte	.LLST73
+	.uleb128 0x45
+	.4byte	.LASF378
+	.byte	0x2
+	.2byte	0xa60
+	.4byte	0x301
+	.4byte	.LLST74
+	.uleb128 0x1f
+	.4byte	.LASF423
+	.byte	0x2
+	.2byte	0xa61
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x56
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x21e8
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7338
+	.uleb128 0x31
+	.4byte	.LVL311
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL312
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL313
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL316
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF424
+	.byte	0x2
+	.2byte	0xa46
+	.4byte	0x64
+	.4byte	.LFB249
+	.4byte	.LFE249-.LFB249
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x24f0
+	.uleb128 0x44
+	.4byte	.LASF422
+	.byte	0x2
+	.2byte	0xa46
+	.4byte	0x12c0
+	.4byte	.LLST236
+	.uleb128 0x1f
+	.4byte	.LASF405
+	.byte	0x2
+	.2byte	0xa48
+	.4byte	0x301
+	.uleb128 0x1
+	.byte	0x55
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x2500
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7331
+	.uleb128 0x31
+	.4byte	.LVL1171
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1172
+	.4byte	0x4206
+	.uleb128 0x31
+	.4byte	.LVL1173
+	.4byte	0x23a4
+	.uleb128 0x31
+	.4byte	.LVL1174
+	.4byte	0x2505
+	.uleb128 0x31
+	.4byte	.LVL1175
+	.4byte	0x39f4
+	.uleb128 0x31
+	.4byte	.LVL1176
+	.4byte	0x372d
+	.uleb128 0x31
+	.4byte	.LVL1177
+	.4byte	0x3588
+	.uleb128 0x31
+	.4byte	.LVL1179
+	.4byte	0x422b
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x2500
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x1c
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x24f0
+	.uleb128 0x4d
+	.4byte	.LASF425
+	.byte	0x2
+	.2byte	0x9e2
+	.4byte	0x64
+	.4byte	.LFB248
+	.4byte	.LFE248-.LFB248
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x265f
+	.uleb128 0x4e
+	.ascii	"p\000"
+	.byte	0x2
+	.2byte	0x9e2
+	.4byte	0x12c0
+	.4byte	.LLST183
+	.uleb128 0x45
+	.4byte	.LASF426
+	.byte	0x2
+	.2byte	0x9e4
+	.4byte	0x301
+	.4byte	.LLST184
+	.uleb128 0x3e
+	.4byte	.LASF376
+	.byte	0x2
+	.2byte	0x9e5
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF357
+	.byte	0x2
+	.2byte	0x9e5
+	.4byte	0x301
+	.4byte	.LLST185
+	.uleb128 0x3f
+	.ascii	"n\000"
+	.byte	0x2
+	.2byte	0x9e5
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF378
+	.byte	0x2
+	.2byte	0x9e5
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF427
+	.byte	0x2
+	.2byte	0x9e6
+	.4byte	0x64
+	.4byte	.LLST186
+	.uleb128 0x45
+	.4byte	.LASF428
+	.byte	0x2
+	.2byte	0x9e7
+	.4byte	0x301
+	.4byte	.LLST187
+	.uleb128 0x40
+	.4byte	.LASF429
+	.byte	0x2
+	.2byte	0x9e8
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x266f
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7310
+	.uleb128 0x4f
+	.4byte	0x3409
+	.4byte	.LBB428
+	.4byte	.Ldebug_ranges0+0x188
+	.byte	0x2
+	.2byte	0xa18
+	.4byte	0x25ce
+	.uleb128 0x2e
+	.4byte	0x3422
+	.uleb128 0x2e
+	.4byte	0x3416
+	.uleb128 0x31
+	.4byte	.LVL858
+	.4byte	0x5c75
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL834
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL838
+	.4byte	0x4027
+	.uleb128 0x31
+	.4byte	.LVL839
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL840
+	.4byte	0x2c45
+	.uleb128 0x31
+	.4byte	.LVL841
+	.4byte	0x4206
+	.uleb128 0x31
+	.4byte	.LVL842
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL845
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL846
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL847
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL848
+	.4byte	0x3409
+	.uleb128 0x31
+	.4byte	.LVL850
+	.4byte	0x1954
+	.uleb128 0x31
+	.4byte	.LVL852
+	.4byte	0x27a4
+	.uleb128 0x31
+	.4byte	.LVL853
+	.4byte	0x499b
+	.uleb128 0x31
+	.4byte	.LVL855
+	.4byte	0x4206
+	.uleb128 0x31
+	.4byte	.LVL860
+	.4byte	0x4b59
+	.uleb128 0x31
+	.4byte	.LVL863
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x266f
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x18
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x265f
+	.uleb128 0x3c
+	.4byte	.LASF430
+	.byte	0x2
+	.2byte	0x9d9
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x2692
+	.uleb128 0x3d
+	.4byte	.LASF405
+	.byte	0x2
+	.2byte	0x9d9
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x4d
+	.4byte	.LASF431
+	.byte	0x2
+	.2byte	0x98e
+	.4byte	0x301
+	.4byte	.LFB246
+	.4byte	.LFE246-.LFB246
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x272c
+	.uleb128 0x1f
+	.4byte	.LASF432
+	.byte	0x2
+	.2byte	0x990
+	.4byte	0x301
+	.uleb128 0x1
+	.byte	0x55
+	.uleb128 0x3e
+	.4byte	.LASF433
+	.byte	0x2
+	.2byte	0x991
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF434
+	.byte	0x2
+	.2byte	0x992
+	.4byte	0x301
+	.4byte	.LLST68
+	.uleb128 0x45
+	.4byte	.LASF435
+	.byte	0x2
+	.2byte	0x993
+	.4byte	0x1210
+	.4byte	.LLST69
+	.uleb128 0x45
+	.4byte	.LASF436
+	.byte	0x2
+	.2byte	0x994
+	.4byte	0x301
+	.4byte	.LLST70
+	.uleb128 0x45
+	.4byte	.LASF437
+	.byte	0x2
+	.2byte	0x995
+	.4byte	0x301
+	.4byte	.LLST71
+	.uleb128 0x3f
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x996
+	.4byte	0x30c
+	.uleb128 0x31
+	.4byte	.LVL293
+	.4byte	0x272c
+	.uleb128 0x31
+	.4byte	.LVL299
+	.4byte	0x277b
+	.uleb128 0x31
+	.4byte	.LVL303
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF438
+	.byte	0x2
+	.2byte	0x979
+	.4byte	0x301
+	.4byte	.LFB245
+	.4byte	.LFE245-.LFB245
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x277b
+	.uleb128 0x44
+	.4byte	.LASF93
+	.byte	0x2
+	.2byte	0x979
+	.4byte	0x301
+	.4byte	.LLST63
+	.uleb128 0x1f
+	.4byte	.LASF439
+	.byte	0x2
+	.2byte	0x97b
+	.4byte	0x301
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x3e
+	.4byte	.LASF392
+	.byte	0x2
+	.2byte	0x97c
+	.4byte	0x301
+	.uleb128 0x3f
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x97d
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF440
+	.byte	0x2
+	.2byte	0x970
+	.4byte	0x301
+	.4byte	.LFB244
+	.4byte	.LFE244-.LFB244
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x27a4
+	.uleb128 0x1f
+	.4byte	.LASF434
+	.byte	0x2
+	.2byte	0x972
+	.4byte	0x301
+	.uleb128 0x1
+	.byte	0x50
+	.byte	0
+	.uleb128 0x4d
+	.4byte	.LASF441
+	.byte	0x2
+	.2byte	0x960
+	.4byte	0x64
+	.4byte	.LFB243
+	.4byte	.LFE243-.LFB243
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2805
+	.uleb128 0x44
+	.4byte	.LASF405
+	.byte	0x2
+	.2byte	0x960
+	.4byte	0x301
+	.4byte	.LLST62
+	.uleb128 0x3e
+	.4byte	.LASF376
+	.byte	0x2
+	.2byte	0x962
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF378
+	.byte	0x2
+	.2byte	0x962
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF165
+	.byte	0x2
+	.2byte	0x963
+	.4byte	0x301
+	.uleb128 0x31
+	.4byte	.LVL200
+	.4byte	0x45c9
+	.uleb128 0x31
+	.4byte	.LVL201
+	.4byte	0x4afe
+	.byte	0
+	.uleb128 0x3c
+	.4byte	.LASF442
+	.byte	0x2
+	.2byte	0x901
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x282f
+	.uleb128 0x3f
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x903
+	.4byte	0x64
+	.uleb128 0x28
+	.uleb128 0x3e
+	.4byte	.LASF396
+	.byte	0x2
+	.2byte	0x928
+	.4byte	0x12c0
+	.byte	0
+	.byte	0
+	.uleb128 0x50
+	.4byte	.LASF443
+	.byte	0x2
+	.2byte	0x8e2
+	.4byte	.LFB241
+	.4byte	.LFE241-.LFB241
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x289a
+	.uleb128 0x51
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x8e4
+	.4byte	0x64
+	.uleb128 0x1
+	.byte	0x55
+	.uleb128 0x51
+	.ascii	"ppa\000"
+	.byte	0x2
+	.2byte	0x8e5
+	.4byte	0x30c
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -28
+	.uleb128 0x3e
+	.4byte	.LASF444
+	.byte	0x2
+	.2byte	0x8e6
+	.4byte	0x1d3f
+	.uleb128 0x31
+	.4byte	.LVL634
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL636
+	.4byte	0x3929
+	.uleb128 0x31
+	.4byte	.LVL637
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL638
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL639
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0x50
+	.4byte	.LASF445
+	.byte	0x2
+	.2byte	0x8ae
+	.4byte	.LFB240
+	.4byte	.LFE240-.LFB240
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x29b3
+	.uleb128 0x3f
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x8b0
+	.4byte	0x301
+	.uleb128 0x52
+	.ascii	"lpn\000"
+	.byte	0x2
+	.2byte	0x8b1
+	.4byte	0x30c
+	.4byte	.LLST148
+	.uleb128 0x1f
+	.4byte	.LASF446
+	.byte	0x2
+	.2byte	0x8b2
+	.4byte	0x30c
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -44
+	.uleb128 0x3f
+	.ascii	"blk\000"
+	.byte	0x2
+	.2byte	0x8b3
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF447
+	.byte	0x2
+	.2byte	0x8b4
+	.4byte	0x301
+	.4byte	.LLST149
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x29c3
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7226
+	.uleb128 0x53
+	.4byte	.LBB389
+	.4byte	.LBE389-.LBB389
+	.4byte	0x292b
+	.uleb128 0x45
+	.4byte	.LASF93
+	.byte	0x2
+	.2byte	0x8d1
+	.4byte	0x301
+	.4byte	.LLST150
+	.uleb128 0x31
+	.4byte	.LVL654
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0x54
+	.4byte	0x17c6
+	.4byte	.LBB386
+	.4byte	.LBE386-.LBB386
+	.byte	0x2
+	.2byte	0x8b7
+	.4byte	0x2985
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB387
+	.4byte	.LBE387-.LBB387
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB388
+	.4byte	.LBE388-.LBB388
+	.uleb128 0x30
+	.4byte	0x6129
+	.uleb128 0x30
+	.4byte	0x612e
+	.uleb128 0x31
+	.4byte	.LVL650
+	.4byte	0x672a
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL649
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL655
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL657
+	.4byte	0x3929
+	.uleb128 0x31
+	.4byte	.LVL658
+	.4byte	0x4561
+	.uleb128 0x31
+	.4byte	.LVL660
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x29c3
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0xd
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x29b3
+	.uleb128 0x50
+	.4byte	.LASF448
+	.byte	0x2
+	.2byte	0x88f
+	.4byte	.LFB239
+	.4byte	.LFE239-.LFB239
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2a6f
+	.uleb128 0x52
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x891
+	.4byte	0x301
+	.4byte	.LLST234
+	.uleb128 0x52
+	.ascii	"lpn\000"
+	.byte	0x2
+	.2byte	0x892
+	.4byte	0x30c
+	.4byte	.LLST235
+	.uleb128 0x1f
+	.4byte	.LASF446
+	.byte	0x2
+	.2byte	0x893
+	.4byte	0x30c
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -36
+	.uleb128 0x3f
+	.ascii	"blk\000"
+	.byte	0x2
+	.2byte	0x894
+	.4byte	0x301
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x2a7f
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7210
+	.uleb128 0x31
+	.4byte	.LVL1157
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1158
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL1162
+	.4byte	0x3929
+	.uleb128 0x31
+	.4byte	.LVL1163
+	.4byte	0x4561
+	.uleb128 0x31
+	.4byte	.LVL1165
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1166
+	.4byte	0x23a4
+	.uleb128 0x31
+	.4byte	.LVL1167
+	.4byte	0x39f4
+	.uleb128 0x31
+	.4byte	.LVL1168
+	.4byte	0x3588
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x2a7f
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x14
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x2a6f
+	.uleb128 0x50
+	.4byte	.LASF449
+	.byte	0x2
+	.2byte	0x86b
+	.4byte	.LFB238
+	.4byte	.LFE238-.LFB238
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2af9
+	.uleb128 0x44
+	.4byte	.LASF396
+	.byte	0x2
+	.2byte	0x86b
+	.4byte	0x12c0
+	.4byte	.LLST212
+	.uleb128 0x1f
+	.4byte	.LASF450
+	.byte	0x2
+	.2byte	0x86d
+	.4byte	0x32d
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -44
+	.uleb128 0x3e
+	.4byte	.LASF380
+	.byte	0x2
+	.2byte	0x86e
+	.4byte	0x1d3f
+	.uleb128 0x3e
+	.4byte	.LASF451
+	.byte	0x2
+	.2byte	0x86f
+	.4byte	0x64
+	.uleb128 0x3e
+	.4byte	.LASF174
+	.byte	0x2
+	.2byte	0x870
+	.4byte	0x30c
+	.uleb128 0x31
+	.4byte	.LVL1036
+	.4byte	0x23e4
+	.uleb128 0x31
+	.4byte	.LVL1037
+	.4byte	0x19ea
+	.uleb128 0x31
+	.4byte	.LVL1038
+	.4byte	0x232e
+	.byte	0
+	.uleb128 0x55
+	.4byte	.LASF452
+	.byte	0x2
+	.2byte	0x851
+	.4byte	.LFB237
+	.4byte	.LFE237-.LFB237
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2b73
+	.uleb128 0x54
+	.4byte	0x17c6
+	.4byte	.LBB486
+	.4byte	.LBE486-.LBB486
+	.byte	0x2
+	.2byte	0x855
+	.4byte	0x2b69
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB487
+	.4byte	.LBE487-.LBB487
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB488
+	.4byte	.LBE488-.LBB488
+	.uleb128 0x30
+	.4byte	0x6129
+	.uleb128 0x30
+	.4byte	0x612e
+	.uleb128 0x31
+	.4byte	.LVL1139
+	.4byte	0x672a
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL1138
+	.4byte	0x377a
+	.byte	0
+	.uleb128 0x46
+	.4byte	.LASF454
+	.byte	0x2
+	.2byte	0x83d
+	.byte	0x1
+	.uleb128 0x4d
+	.4byte	.LASF455
+	.byte	0x2
+	.2byte	0x812
+	.4byte	0x64
+	.4byte	.LFB235
+	.4byte	.LFE235-.LFB235
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2c30
+	.uleb128 0x45
+	.4byte	.LASF432
+	.byte	0x2
+	.2byte	0x814
+	.4byte	0x301
+	.4byte	.LLST164
+	.uleb128 0x3e
+	.4byte	.LASF376
+	.byte	0x2
+	.2byte	0x814
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF378
+	.byte	0x2
+	.2byte	0x814
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF165
+	.byte	0x2
+	.2byte	0x814
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF456
+	.byte	0x2
+	.2byte	0x815
+	.4byte	0x301
+	.4byte	.LLST165
+	.uleb128 0x45
+	.4byte	.LASF457
+	.byte	0x2
+	.2byte	0x815
+	.4byte	0x301
+	.4byte	.LLST166
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x2c40
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7185
+	.uleb128 0x31
+	.4byte	.LVL753
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL755
+	.4byte	0x45c9
+	.uleb128 0x31
+	.4byte	.LVL756
+	.4byte	0x4afe
+	.uleb128 0x31
+	.4byte	.LVL760
+	.4byte	0x422b
+	.uleb128 0x31
+	.4byte	.LVL763
+	.4byte	0x4206
+	.uleb128 0x31
+	.4byte	.LVL765
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x2c40
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x11
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x2c30
+	.uleb128 0x3b
+	.4byte	.LASF458
+	.byte	0x2
+	.2byte	0x7fc
+	.4byte	0x64
+	.4byte	.LFB234
+	.4byte	.LFE234-.LFB234
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2cb0
+	.uleb128 0x4e
+	.ascii	"p\000"
+	.byte	0x2
+	.2byte	0x7fc
+	.4byte	0x12c0
+	.4byte	.LLST61
+	.uleb128 0x3e
+	.4byte	.LASF376
+	.byte	0x2
+	.2byte	0x7fe
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF378
+	.byte	0x2
+	.2byte	0x7fe
+	.4byte	0x301
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x23df
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7164
+	.uleb128 0x31
+	.4byte	.LVL193
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL195
+	.4byte	0x45c9
+	.uleb128 0x31
+	.4byte	.LVL196
+	.4byte	0x4afe
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF459
+	.byte	0x2
+	.2byte	0x7ef
+	.4byte	0x64
+	.4byte	.LFB233
+	.4byte	.LFE233-.LFB233
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2d01
+	.uleb128 0x31
+	.4byte	.LVL1265
+	.4byte	0x2d27
+	.uleb128 0x31
+	.4byte	.LVL1266
+	.4byte	0x2d01
+	.uleb128 0x31
+	.4byte	.LVL1267
+	.4byte	0x2d27
+	.uleb128 0x31
+	.4byte	.LVL1268
+	.4byte	0x2d01
+	.uleb128 0x31
+	.4byte	.LVL1269
+	.4byte	0x1f6f
+	.uleb128 0x31
+	.4byte	.LVL1270
+	.4byte	0x232e
+	.byte	0
+	.uleb128 0x56
+	.4byte	.LASF495
+	.byte	0x2
+	.2byte	0x7dc
+	.byte	0x1
+	.4byte	0x2d27
+	.uleb128 0x3d
+	.4byte	.LASF422
+	.byte	0x2
+	.2byte	0x7dc
+	.4byte	0x12c0
+	.uleb128 0x3e
+	.4byte	.LASF378
+	.byte	0x2
+	.2byte	0x7de
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF460
+	.byte	0x2
+	.2byte	0x677
+	.4byte	0x64
+	.4byte	.LFB231
+	.4byte	.LFE231-.LFB231
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3072
+	.uleb128 0x44
+	.4byte	.LASF396
+	.byte	0x2
+	.2byte	0x677
+	.4byte	0x12c0
+	.4byte	.LLST196
+	.uleb128 0x45
+	.4byte	.LASF461
+	.byte	0x2
+	.2byte	0x679
+	.4byte	0x301
+	.4byte	.LLST197
+	.uleb128 0x45
+	.4byte	.LASF462
+	.byte	0x2
+	.2byte	0x679
+	.4byte	0x301
+	.4byte	.LLST198
+	.uleb128 0x3e
+	.4byte	.LASF376
+	.byte	0x2
+	.2byte	0x67a
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF172
+	.byte	0x2
+	.2byte	0x67a
+	.4byte	0x301
+	.4byte	.LLST199
+	.uleb128 0x3e
+	.4byte	.LASF170
+	.byte	0x2
+	.2byte	0x67a
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF463
+	.byte	0x2
+	.2byte	0x67b
+	.4byte	0x301
+	.4byte	.LLST200
+	.uleb128 0x45
+	.4byte	.LASF464
+	.byte	0x2
+	.2byte	0x67b
+	.4byte	0x301
+	.4byte	.LLST201
+	.uleb128 0x3e
+	.4byte	.LASF378
+	.byte	0x2
+	.2byte	0x67c
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF465
+	.byte	0x2
+	.2byte	0x67d
+	.4byte	0x64
+	.4byte	.LLST202
+	.uleb128 0x3e
+	.4byte	.LASF466
+	.byte	0x2
+	.2byte	0x67d
+	.4byte	0x64
+	.uleb128 0x3e
+	.4byte	.LASF357
+	.byte	0x2
+	.2byte	0x67e
+	.4byte	0x301
+	.uleb128 0x52
+	.ascii	"n\000"
+	.byte	0x2
+	.2byte	0x67e
+	.4byte	0x301
+	.4byte	.LLST203
+	.uleb128 0x3f
+	.ascii	"req\000"
+	.byte	0x2
+	.2byte	0x67e
+	.4byte	0x301
+	.uleb128 0x52
+	.ascii	"lpa\000"
+	.byte	0x2
+	.2byte	0x67f
+	.4byte	0x30c
+	.4byte	.LLST204
+	.uleb128 0x45
+	.4byte	.LASF446
+	.byte	0x2
+	.2byte	0x67f
+	.4byte	0x30c
+	.4byte	.LLST205
+	.uleb128 0x45
+	.4byte	.LASF406
+	.byte	0x2
+	.2byte	0x67f
+	.4byte	0x30c
+	.4byte	.LLST206
+	.uleb128 0x45
+	.4byte	.LASF398
+	.byte	0x2
+	.2byte	0x67f
+	.4byte	0x30c
+	.4byte	.LLST207
+	.uleb128 0x45
+	.4byte	.LASF412
+	.byte	0x2
+	.2byte	0x680
+	.4byte	0x301
+	.4byte	.LLST208
+	.uleb128 0x3e
+	.4byte	.LASF467
+	.byte	0x2
+	.2byte	0x680
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF468
+	.byte	0x2
+	.2byte	0x681
+	.4byte	0x30c
+	.4byte	.LLST209
+	.uleb128 0x3e
+	.4byte	.LASF469
+	.byte	0x2
+	.2byte	0x682
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF380
+	.byte	0x2
+	.2byte	0x683
+	.4byte	0x1d3f
+	.uleb128 0x3e
+	.4byte	.LASF470
+	.byte	0x2
+	.2byte	0x684
+	.4byte	0x30c
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x3082
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7107
+	.uleb128 0x48
+	.4byte	.LASF472
+	.byte	0x2
+	.2byte	0x713
+	.4byte	.L1135
+	.uleb128 0x48
+	.4byte	.LASF402
+	.byte	0x2
+	.2byte	0x71b
+	.4byte	.L1147
+	.uleb128 0x48
+	.4byte	.LASF473
+	.byte	0x2
+	.2byte	0x7ce
+	.4byte	.L1155
+	.uleb128 0x40
+	.4byte	.LASF474
+	.byte	0x2
+	.2byte	0x7d8
+	.uleb128 0x53
+	.4byte	.LBB449
+	.4byte	.LBE449-.LBB449
+	.4byte	0x2f01
+	.uleb128 0x3e
+	.4byte	.LASF475
+	.byte	0x2
+	.2byte	0x6eb
+	.4byte	0x30c
+	.uleb128 0x3e
+	.4byte	.LASF476
+	.byte	0x2
+	.2byte	0x6ec
+	.4byte	0x30c
+	.uleb128 0x31
+	.4byte	.LVL954
+	.4byte	0x1af8
+	.byte	0
+	.uleb128 0x39
+	.4byte	.Ldebug_ranges0+0x1d0
+	.4byte	0x2f73
+	.uleb128 0x45
+	.4byte	.LASF477
+	.byte	0x2
+	.2byte	0x746
+	.4byte	0x30c
+	.4byte	.LLST210
+	.uleb128 0x45
+	.4byte	.LASF478
+	.byte	0x2
+	.2byte	0x747
+	.4byte	0x30c
+	.4byte	.LLST211
+	.uleb128 0x31
+	.4byte	.LVL996
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL999
+	.4byte	0x232e
+	.uleb128 0x31
+	.4byte	.LVL1004
+	.4byte	0x3929
+	.uleb128 0x31
+	.4byte	.LVL1006
+	.4byte	0x451e
+	.uleb128 0x31
+	.4byte	.LVL1008
+	.4byte	0x3087
+	.uleb128 0x31
+	.4byte	.LVL1011
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL1013
+	.4byte	0x451e
+	.uleb128 0x31
+	.4byte	.LVL1014
+	.4byte	0x451e
+	.byte	0
+	.uleb128 0x53
+	.4byte	.LBB453
+	.4byte	.LBE453-.LBB453
+	.4byte	0x2fb4
+	.uleb128 0x3e
+	.4byte	.LASF479
+	.byte	0x2
+	.2byte	0x785
+	.4byte	0x30c
+	.uleb128 0x3e
+	.4byte	.LASF478
+	.byte	0x2
+	.2byte	0x786
+	.4byte	0x30c
+	.uleb128 0x31
+	.4byte	.LVL1019
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL1020
+	.4byte	0x451e
+	.uleb128 0x31
+	.4byte	.LVL1021
+	.4byte	0x3929
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL915
+	.4byte	0x4486
+	.uleb128 0x31
+	.4byte	.LVL917
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL922
+	.4byte	0x4595
+	.uleb128 0x31
+	.4byte	.LVL930
+	.4byte	0x313e
+	.uleb128 0x31
+	.4byte	.LVL935
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL937
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL941
+	.4byte	0x451e
+	.uleb128 0x31
+	.4byte	.LVL957
+	.4byte	0x369b
+	.uleb128 0x31
+	.4byte	.LVL962
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL971
+	.4byte	0x4595
+	.uleb128 0x31
+	.4byte	.LVL981
+	.4byte	0x232e
+	.uleb128 0x31
+	.4byte	.LVL986
+	.4byte	0x451e
+	.uleb128 0x31
+	.4byte	.LVL991
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL994
+	.4byte	0x3929
+	.uleb128 0x31
+	.4byte	.LVL995
+	.4byte	0x451e
+	.uleb128 0x31
+	.4byte	.LVL1000
+	.4byte	0x4561
+	.uleb128 0x31
+	.4byte	.LVL1002
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1017
+	.4byte	0x3929
+	.uleb128 0x31
+	.4byte	.LVL1018
+	.4byte	0x4561
+	.uleb128 0x31
+	.4byte	.LVL1023
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1026
+	.4byte	0x232e
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x3082
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x15
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x3072
+	.uleb128 0x50
+	.4byte	.LASF480
+	.byte	0x2
+	.2byte	0x65b
+	.4byte	.LFB230
+	.4byte	.LFE230-.LFB230
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x313e
+	.uleb128 0x4e
+	.ascii	"lpa\000"
+	.byte	0x2
+	.2byte	0x65b
+	.4byte	0x30c
+	.4byte	.LLST141
+	.uleb128 0x44
+	.4byte	.LASF446
+	.byte	0x2
+	.2byte	0x65b
+	.4byte	0x30c
+	.4byte	.LLST142
+	.uleb128 0x45
+	.4byte	.LASF412
+	.byte	0x2
+	.2byte	0x65d
+	.4byte	0x301
+	.4byte	.LLST143
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x23df
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7073
+	.uleb128 0x39
+	.4byte	.Ldebug_ranges0+0x138
+	.4byte	0x312b
+	.uleb128 0x3f
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x661
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF392
+	.byte	0x2
+	.2byte	0x662
+	.4byte	0x301
+	.4byte	.LLST144
+	.uleb128 0x45
+	.4byte	.LASF93
+	.byte	0x2
+	.2byte	0x663
+	.4byte	0x301
+	.4byte	.LLST145
+	.uleb128 0x31
+	.4byte	.LVL624
+	.4byte	0x4087
+	.uleb128 0x31
+	.4byte	.LVL625
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL626
+	.4byte	0x4206
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL619
+	.4byte	0x4561
+	.uleb128 0x31
+	.4byte	.LVL631
+	.4byte	0x3929
+	.byte	0
+	.uleb128 0x50
+	.4byte	.LASF481
+	.byte	0x2
+	.2byte	0x647
+	.4byte	.LFB229
+	.4byte	.LFE229-.LFB229
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x318f
+	.uleb128 0x57
+	.4byte	.LASF396
+	.byte	0x2
+	.2byte	0x647
+	.4byte	0x12c0
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x44
+	.4byte	.LASF170
+	.byte	0x2
+	.2byte	0x647
+	.4byte	0x301
+	.4byte	.LLST59
+	.uleb128 0x44
+	.4byte	.LASF172
+	.byte	0x2
+	.2byte	0x647
+	.4byte	0x301
+	.4byte	.LLST60
+	.uleb128 0x3e
+	.4byte	.LASF376
+	.byte	0x2
+	.2byte	0x649
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF482
+	.byte	0x2
+	.2byte	0x63e
+	.4byte	0x64
+	.4byte	.LFB228
+	.4byte	.LFE228-.LFB228
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x31bc
+	.uleb128 0x31
+	.4byte	.LVL742
+	.4byte	0x31bc
+	.uleb128 0x31
+	.4byte	.LVL743
+	.4byte	0x3215
+	.byte	0
+	.uleb128 0x50
+	.4byte	.LASF483
+	.byte	0x2
+	.2byte	0x627
+	.4byte	.LFB227
+	.4byte	.LFE227-.LFB227
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x31f1
+	.uleb128 0x3e
+	.4byte	.LASF119
+	.byte	0x2
+	.2byte	0x629
+	.4byte	0x301
+	.uleb128 0x31
+	.4byte	.LVL740
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL741
+	.4byte	0x17c6
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF484
+	.byte	0x2
+	.2byte	0x617
+	.4byte	0x64
+	.4byte	.LFB226
+	.4byte	.LFE226-.LFB226
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3215
+	.uleb128 0x31
+	.4byte	.LVL739
+	.4byte	0x3215
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF485
+	.byte	0x2
+	.2byte	0x5b9
+	.4byte	0x64
+	.4byte	.LFB225
+	.4byte	.LFE225-.LFB225
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3323
+	.uleb128 0x44
+	.4byte	.LASF486
+	.byte	0x2
+	.2byte	0x5b9
+	.4byte	0x3323
+	.4byte	.LLST157
+	.uleb128 0x45
+	.4byte	.LASF487
+	.byte	0x2
+	.2byte	0x5bb
+	.4byte	0x322
+	.4byte	.LLST158
+	.uleb128 0x3e
+	.4byte	.LASF85
+	.byte	0x2
+	.2byte	0x5bb
+	.4byte	0x322
+	.uleb128 0x45
+	.4byte	.LASF488
+	.byte	0x2
+	.2byte	0x5bc
+	.4byte	0x322
+	.4byte	.LLST159
+	.uleb128 0x3e
+	.4byte	.LASF119
+	.byte	0x2
+	.2byte	0x5bd
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF489
+	.byte	0x2
+	.2byte	0x5be
+	.4byte	0x539
+	.4byte	.LLST160
+	.uleb128 0x45
+	.4byte	.LASF98
+	.byte	0x2
+	.2byte	0x5bf
+	.4byte	0x630
+	.4byte	.LLST161
+	.uleb128 0x45
+	.4byte	.LASF99
+	.byte	0x2
+	.2byte	0x5c0
+	.4byte	0x539
+	.4byte	.LLST162
+	.uleb128 0x1f
+	.4byte	.LASF95
+	.byte	0x2
+	.2byte	0x5c1
+	.4byte	0x301
+	.uleb128 0x1
+	.byte	0x5a
+	.uleb128 0x45
+	.4byte	.LASF490
+	.byte	0x2
+	.2byte	0x5c2
+	.4byte	0x301
+	.4byte	.LLST163
+	.uleb128 0x3e
+	.4byte	.LASF491
+	.byte	0x2
+	.2byte	0x5c3
+	.4byte	0x3329
+	.uleb128 0x31
+	.4byte	.LVL704
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL712
+	.4byte	0x4486
+	.uleb128 0x31
+	.4byte	.LVL719
+	.4byte	0x3dcf
+	.uleb128 0x31
+	.4byte	.LVL720
+	.4byte	0x3d77
+	.uleb128 0x31
+	.4byte	.LVL721
+	.4byte	0x3cac
+	.uleb128 0x31
+	.4byte	.LVL722
+	.4byte	0x3cac
+	.uleb128 0x31
+	.4byte	.LVL724
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL730
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL733
+	.4byte	0x1af8
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x587
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x7b8
+	.uleb128 0x4d
+	.4byte	.LASF492
+	.byte	0x2
+	.2byte	0x54f
+	.4byte	0x64
+	.4byte	.LFB224
+	.4byte	.LFE224-.LFB224
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x33de
+	.uleb128 0x45
+	.4byte	.LASF488
+	.byte	0x2
+	.2byte	0x551
+	.4byte	0x322
+	.4byte	.LLST296
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x1af3
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.7010
+	.uleb128 0x31
+	.4byte	.LVL1544
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL1547
+	.4byte	0x4486
+	.uleb128 0x31
+	.4byte	.LVL1549
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1550
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1551
+	.4byte	0x176f
+	.uleb128 0x31
+	.4byte	.LVL1552
+	.4byte	0x176f
+	.uleb128 0x31
+	.4byte	.LVL1553
+	.4byte	0x176f
+	.uleb128 0x31
+	.4byte	.LVL1556
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1557
+	.4byte	0x2c45
+	.uleb128 0x31
+	.4byte	.LVL1558
+	.4byte	0x2c45
+	.uleb128 0x31
+	.4byte	.LVL1559
+	.4byte	0x2c45
+	.uleb128 0x31
+	.4byte	.LVL1560
+	.4byte	0x2c45
+	.uleb128 0x31
+	.4byte	.LVL1562
+	.4byte	0x1af8
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF493
+	.byte	0x2
+	.2byte	0x54a
+	.4byte	0x64
+	.4byte	.LFB223
+	.4byte	.LFE223-.LFB223
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3409
+	.uleb128 0x44
+	.4byte	.LASF494
+	.byte	0x2
+	.2byte	0x54a
+	.4byte	0x301
+	.4byte	.LLST58
+	.byte	0
+	.uleb128 0x56
+	.4byte	.LASF496
+	.byte	0x2
+	.2byte	0x542
+	.byte	0x1
+	.4byte	0x342f
+	.uleb128 0x3d
+	.4byte	.LASF494
+	.byte	0x2
+	.2byte	0x542
+	.4byte	0x301
+	.uleb128 0x3d
+	.4byte	.LASF372
+	.byte	0x2
+	.2byte	0x542
+	.4byte	0x64
+	.byte	0
+	.uleb128 0x43
+	.4byte	.LASF498
+	.byte	0x2
+	.2byte	0x535
+	.4byte	0x64
+	.byte	0x1
+	.uleb128 0x3b
+	.4byte	.LASF499
+	.byte	0x2
+	.2byte	0x446
+	.4byte	0x64
+	.4byte	.LFB220
+	.4byte	.LFE220-.LFB220
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3588
+	.uleb128 0x3e
+	.4byte	.LASF376
+	.byte	0x2
+	.2byte	0x448
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF500
+	.byte	0x2
+	.2byte	0x448
+	.4byte	0x301
+	.4byte	.LLST154
+	.uleb128 0x3e
+	.4byte	.LASF178
+	.byte	0x2
+	.2byte	0x449
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF357
+	.byte	0x2
+	.2byte	0x449
+	.4byte	0x301
+	.4byte	.LLST155
+	.uleb128 0x3f
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x44a
+	.4byte	0x322
+	.uleb128 0x3f
+	.ascii	"j\000"
+	.byte	0x2
+	.2byte	0x44a
+	.4byte	0x322
+	.uleb128 0x45
+	.4byte	.LASF501
+	.byte	0x2
+	.2byte	0x44b
+	.4byte	0x3329
+	.4byte	.LLST156
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x29c3
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6953
+	.uleb128 0x54
+	.4byte	0x17c6
+	.4byte	.LBB395
+	.4byte	.LBE395-.LBB395
+	.byte	0x2
+	.2byte	0x453
+	.4byte	0x3512
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB396
+	.4byte	.LBE396-.LBB396
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB397
+	.4byte	.LBE397-.LBB397
+	.uleb128 0x30
+	.4byte	0x6129
+	.uleb128 0x30
+	.4byte	0x612e
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL671
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL672
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL673
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL674
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL678
+	.4byte	0x45c9
+	.uleb128 0x31
+	.4byte	.LVL679
+	.4byte	0x4afe
+	.uleb128 0x31
+	.4byte	.LVL686
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL687
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL688
+	.4byte	0x436e
+	.uleb128 0x31
+	.4byte	.LVL689
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL690
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL691
+	.4byte	0x436e
+	.uleb128 0x31
+	.4byte	.LVL692
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF502
+	.byte	0x2
+	.2byte	0x3eb
+	.4byte	0x64
+	.4byte	.LFB219
+	.4byte	.LFE219-.LFB219
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3649
+	.uleb128 0x45
+	.4byte	.LASF86
+	.byte	0x2
+	.2byte	0x3ed
+	.4byte	0x301
+	.4byte	.LLST232
+	.uleb128 0x3e
+	.4byte	.LASF503
+	.byte	0x2
+	.2byte	0x3ee
+	.4byte	0x3649
+	.uleb128 0x45
+	.4byte	.LASF504
+	.byte	0x2
+	.2byte	0x3ef
+	.4byte	0x301
+	.4byte	.LLST233
+	.uleb128 0x40
+	.4byte	.LASF505
+	.byte	0x2
+	.2byte	0x41c
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x1af3
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6931
+	.uleb128 0x31
+	.4byte	.LVL1142
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL1143
+	.4byte	0x176f
+	.uleb128 0x31
+	.4byte	.LVL1144
+	.4byte	0x176f
+	.uleb128 0x31
+	.4byte	.LVL1145
+	.4byte	0x176f
+	.uleb128 0x31
+	.4byte	.LVL1146
+	.4byte	0x3709
+	.uleb128 0x31
+	.4byte	.LVL1147
+	.4byte	0x19ea
+	.uleb128 0x31
+	.4byte	.LVL1148
+	.4byte	0x4250
+	.uleb128 0x31
+	.4byte	.LVL1149
+	.4byte	0x19ea
+	.uleb128 0x31
+	.4byte	.LVL1150
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1153
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1154
+	.4byte	0x436e
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x810
+	.uleb128 0x56
+	.4byte	.LASF506
+	.byte	0x2
+	.2byte	0x3b2
+	.byte	0x1
+	.4byte	0x369b
+	.uleb128 0x28
+	.uleb128 0x3f
+	.ascii	"lpa\000"
+	.byte	0x2
+	.2byte	0x3b7
+	.4byte	0x30c
+	.uleb128 0x3f
+	.ascii	"ppa\000"
+	.byte	0x2
+	.2byte	0x3b8
+	.4byte	0x30c
+	.uleb128 0x3e
+	.4byte	.LASF507
+	.byte	0x2
+	.2byte	0x3b9
+	.4byte	0x30c
+	.uleb128 0x3e
+	.4byte	.LASF450
+	.byte	0x2
+	.2byte	0x3ba
+	.4byte	0x32d
+	.uleb128 0x3e
+	.4byte	.LASF380
+	.byte	0x2
+	.2byte	0x3bb
+	.4byte	0x1d3f
+	.byte	0
+	.byte	0
+	.uleb128 0x50
+	.4byte	.LASF508
+	.byte	0x2
+	.2byte	0x380
+	.4byte	.LFB217
+	.4byte	.LFE217-.LFB217
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3709
+	.uleb128 0x44
+	.4byte	.LASF486
+	.byte	0x2
+	.2byte	0x380
+	.4byte	0x3323
+	.4byte	.LLST151
+	.uleb128 0x52
+	.ascii	"ppa\000"
+	.byte	0x2
+	.2byte	0x382
+	.4byte	0x30c
+	.4byte	.LLST152
+	.uleb128 0x3e
+	.4byte	.LASF105
+	.byte	0x2
+	.2byte	0x383
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF489
+	.byte	0x2
+	.2byte	0x384
+	.4byte	0x539
+	.4byte	.LLST153
+	.uleb128 0x31
+	.4byte	.LVL665
+	.4byte	0x1af8
+	.uleb128 0x24
+	.4byte	.LVL667
+	.4byte	0x3ac6
+	.uleb128 0x31
+	.4byte	.LVL669
+	.4byte	0x17c6
+	.byte	0
+	.uleb128 0x56
+	.4byte	.LASF509
+	.byte	0x2
+	.2byte	0x371
+	.byte	0x1
+	.4byte	0x372d
+	.uleb128 0x3d
+	.4byte	.LASF183
+	.byte	0x2
+	.2byte	0x371
+	.4byte	0x30c
+	.uleb128 0x3f
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x373
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF510
+	.byte	0x2
+	.2byte	0x35c
+	.4byte	0x64
+	.4byte	.LFB215
+	.4byte	.LFE215-.LFB215
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x377a
+	.uleb128 0x44
+	.4byte	.LASF511
+	.byte	0x2
+	.2byte	0x35c
+	.4byte	0x30c
+	.4byte	.LLST224
+	.uleb128 0x45
+	.4byte	.LASF512
+	.byte	0x2
+	.2byte	0x35e
+	.4byte	0x30c
+	.4byte	.LLST225
+	.uleb128 0x31
+	.4byte	.LVL1117
+	.4byte	0x3850
+	.uleb128 0x31
+	.4byte	.LVL1118
+	.4byte	0x2b73
+	.byte	0
+	.uleb128 0x4d
+	.4byte	.LASF513
+	.byte	0x2
+	.2byte	0x336
+	.4byte	0x30c
+	.4byte	.LFB214
+	.4byte	.LFE214-.LFB214
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x384a
+	.uleb128 0x44
+	.4byte	.LASF514
+	.byte	0x2
+	.2byte	0x336
+	.4byte	0x30c
+	.4byte	.LLST226
+	.uleb128 0x44
+	.4byte	.LASF515
+	.byte	0x2
+	.2byte	0x336
+	.4byte	0x30c
+	.4byte	.LLST227
+	.uleb128 0x44
+	.4byte	.LASF516
+	.byte	0x2
+	.2byte	0x336
+	.4byte	0x384a
+	.4byte	.LLST228
+	.uleb128 0x52
+	.ascii	"len\000"
+	.byte	0x2
+	.2byte	0x338
+	.4byte	0x301
+	.4byte	.LLST229
+	.uleb128 0x3e
+	.4byte	.LASF517
+	.byte	0x2
+	.2byte	0x338
+	.4byte	0x301
+	.uleb128 0x52
+	.ascii	"ppn\000"
+	.byte	0x2
+	.2byte	0x339
+	.4byte	0x30c
+	.4byte	.LLST230
+	.uleb128 0x1f
+	.4byte	.LASF518
+	.byte	0x2
+	.2byte	0x33a
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x59
+	.uleb128 0x51
+	.ascii	"req\000"
+	.byte	0x2
+	.2byte	0x33b
+	.4byte	0x32d
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -124
+	.uleb128 0x45
+	.4byte	.LASF519
+	.byte	0x2
+	.2byte	0x33c
+	.4byte	0x30c
+	.4byte	.LLST231
+	.uleb128 0x1f
+	.4byte	.LASF353
+	.byte	0x2
+	.2byte	0x33d
+	.4byte	0x1944
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -104
+	.uleb128 0x31
+	.4byte	.LVL1130
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL1131
+	.4byte	0x176f
+	.uleb128 0x31
+	.4byte	.LVL1133
+	.4byte	0x17c6
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x2f6
+	.uleb128 0x4d
+	.4byte	.LASF520
+	.byte	0x2
+	.2byte	0x311
+	.4byte	0x30c
+	.4byte	.LFB213
+	.4byte	.LFE213-.LFB213
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3929
+	.uleb128 0x44
+	.4byte	.LASF514
+	.byte	0x2
+	.2byte	0x311
+	.4byte	0x30c
+	.4byte	.LLST218
+	.uleb128 0x44
+	.4byte	.LASF515
+	.byte	0x2
+	.2byte	0x311
+	.4byte	0x30c
+	.4byte	.LLST219
+	.uleb128 0x44
+	.4byte	.LASF516
+	.byte	0x2
+	.2byte	0x311
+	.4byte	0x384a
+	.4byte	.LLST220
+	.uleb128 0x52
+	.ascii	"len\000"
+	.byte	0x2
+	.2byte	0x313
+	.4byte	0x301
+	.4byte	.LLST221
+	.uleb128 0x3e
+	.4byte	.LASF517
+	.byte	0x2
+	.2byte	0x313
+	.4byte	0x301
+	.uleb128 0x52
+	.ascii	"ppn\000"
+	.byte	0x2
+	.2byte	0x314
+	.4byte	0x30c
+	.4byte	.LLST222
+	.uleb128 0x1f
+	.4byte	.LASF518
+	.byte	0x2
+	.2byte	0x315
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x59
+	.uleb128 0x51
+	.ascii	"req\000"
+	.byte	0x2
+	.2byte	0x316
+	.4byte	0x32d
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -124
+	.uleb128 0x45
+	.4byte	.LASF519
+	.byte	0x2
+	.2byte	0x317
+	.4byte	0x30c
+	.4byte	.LLST223
+	.uleb128 0x1f
+	.4byte	.LASF353
+	.byte	0x2
+	.2byte	0x318
+	.4byte	0x1944
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -104
+	.uleb128 0x31
+	.4byte	.LVL1100
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL1101
+	.4byte	0x176f
+	.uleb128 0x31
+	.4byte	.LVL1102
+	.4byte	0x3ac6
+	.uleb128 0x31
+	.4byte	.LVL1105
+	.4byte	0x17c6
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF521
+	.byte	0x2
+	.2byte	0x2f0
+	.4byte	0x64
+	.4byte	.LFB212
+	.4byte	.LFE212-.LFB212
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x39df
+	.uleb128 0x4e
+	.ascii	"lpn\000"
+	.byte	0x2
+	.2byte	0x2f0
+	.4byte	0x30c
+	.4byte	.LLST137
+	.uleb128 0x4e
+	.ascii	"ppn\000"
+	.byte	0x2
+	.2byte	0x2f0
+	.4byte	0x539
+	.4byte	.LLST138
+	.uleb128 0x44
+	.4byte	.LASF522
+	.byte	0x2
+	.2byte	0x2f0
+	.4byte	0x64
+	.4byte	.LLST139
+	.uleb128 0x45
+	.4byte	.LASF523
+	.byte	0x2
+	.2byte	0x2f2
+	.4byte	0x301
+	.4byte	.LLST140
+	.uleb128 0x1f
+	.4byte	.LASF524
+	.byte	0x2
+	.2byte	0x2f2
+	.4byte	0x301
+	.uleb128 0x1
+	.byte	0x58
+	.uleb128 0x1f
+	.4byte	.LASF525
+	.byte	0x2
+	.2byte	0x2f2
+	.4byte	0x301
+	.uleb128 0x1
+	.byte	0x55
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x39ef
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6858
+	.uleb128 0x48
+	.4byte	.LASF526
+	.byte	0x2
+	.2byte	0x2fb
+	.4byte	.L739
+	.uleb128 0x31
+	.4byte	.LVL606
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL608
+	.4byte	0x3a2f
+	.uleb128 0x31
+	.4byte	.LVL609
+	.4byte	0x3a86
+	.uleb128 0x31
+	.4byte	.LVL610
+	.4byte	0x3e80
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x39ef
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x8
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x39df
+	.uleb128 0x3b
+	.4byte	.LASF527
+	.byte	0x2
+	.2byte	0x2e3
+	.4byte	0x64
+	.4byte	.LFB211
+	.4byte	.LFE211-.LFB211
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3a2f
+	.uleb128 0x52
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x2e5
+	.4byte	0x301
+	.4byte	.LLST195
+	.uleb128 0x31
+	.4byte	.LVL902
+	.4byte	0x364f
+	.uleb128 0x31
+	.4byte	.LVL905
+	.4byte	0x3a86
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF528
+	.byte	0x2
+	.2byte	0x2bb
+	.4byte	0x301
+	.4byte	.LFB210
+	.4byte	.LFE210-.LFB210
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3a86
+	.uleb128 0x3f
+	.ascii	"i\000"
+	.byte	0x2
+	.2byte	0x2bd
+	.4byte	0x301
+	.uleb128 0x1f
+	.4byte	.LASF529
+	.byte	0x2
+	.2byte	0x2be
+	.4byte	0x301
+	.uleb128 0x1
+	.byte	0x54
+	.uleb128 0x3e
+	.4byte	.LASF530
+	.byte	0x2
+	.2byte	0x2bf
+	.4byte	0x30c
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x3082
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6841
+	.uleb128 0x31
+	.4byte	.LVL174
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF531
+	.byte	0x2
+	.2byte	0x2b1
+	.4byte	0x64
+	.4byte	.LFB209
+	.4byte	.LFE209-.LFB209
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3ac6
+	.uleb128 0x44
+	.4byte	.LASF523
+	.byte	0x2
+	.2byte	0x2b1
+	.4byte	0x301
+	.4byte	.LLST136
+	.uleb128 0x3e
+	.4byte	.LASF105
+	.byte	0x2
+	.2byte	0x2b3
+	.4byte	0x30c
+	.uleb128 0x31
+	.4byte	.LVL601
+	.4byte	0x3ac6
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF532
+	.byte	0x2
+	.2byte	0x276
+	.4byte	0x64
+	.4byte	.LFB208
+	.4byte	.LFE208-.LFB208
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3bdc
+	.uleb128 0x44
+	.4byte	.LASF486
+	.byte	0x2
+	.2byte	0x276
+	.4byte	0x3323
+	.4byte	.LLST129
+	.uleb128 0x44
+	.4byte	.LASF105
+	.byte	0x2
+	.2byte	0x276
+	.4byte	0x30c
+	.4byte	.LLST130
+	.uleb128 0x44
+	.4byte	.LASF516
+	.byte	0x2
+	.2byte	0x276
+	.4byte	0x539
+	.4byte	.LLST131
+	.uleb128 0x3e
+	.4byte	.LASF178
+	.byte	0x2
+	.2byte	0x278
+	.4byte	0x30c
+	.uleb128 0x45
+	.4byte	.LASF491
+	.byte	0x2
+	.2byte	0x279
+	.4byte	0x3329
+	.4byte	.LLST132
+	.uleb128 0x45
+	.4byte	.LASF504
+	.byte	0x2
+	.2byte	0x27a
+	.4byte	0x301
+	.4byte	.LLST133
+	.uleb128 0x40
+	.4byte	.LASF533
+	.byte	0x2
+	.2byte	0x27c
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x23df
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6816
+	.uleb128 0x4f
+	.4byte	0x17c6
+	.4byte	.LBB361
+	.4byte	.Ldebug_ranges0+0x120
+	.byte	0x2
+	.2byte	0x292
+	.4byte	0x3ba5
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x120
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x120
+	.uleb128 0x30
+	.4byte	0x6129
+	.uleb128 0x30
+	.4byte	0x612e
+	.uleb128 0x31
+	.4byte	.LVL575
+	.4byte	0x672a
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL572
+	.4byte	0x3bdc
+	.uleb128 0x31
+	.4byte	.LVL573
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL574
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL578
+	.4byte	0x19ea
+	.uleb128 0x31
+	.4byte	.LVL581
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL582
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF534
+	.byte	0x2
+	.2byte	0x246
+	.4byte	0x64
+	.4byte	.LFB207
+	.4byte	.LFE207-.LFB207
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3c97
+	.uleb128 0x44
+	.4byte	.LASF486
+	.byte	0x2
+	.2byte	0x246
+	.4byte	0x3323
+	.4byte	.LLST125
+	.uleb128 0x3e
+	.4byte	.LASF178
+	.byte	0x2
+	.2byte	0x248
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF119
+	.byte	0x2
+	.2byte	0x248
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF535
+	.byte	0x2
+	.2byte	0x249
+	.4byte	0x301
+	.4byte	.LLST126
+	.uleb128 0x45
+	.4byte	.LASF536
+	.byte	0x2
+	.2byte	0x24a
+	.4byte	0x630
+	.4byte	.LLST127
+	.uleb128 0x45
+	.4byte	.LASF489
+	.byte	0x2
+	.2byte	0x24b
+	.4byte	0x539
+	.4byte	.LLST128
+	.uleb128 0x3e
+	.4byte	.LASF491
+	.byte	0x2
+	.2byte	0x24c
+	.4byte	0x3329
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x3ca7
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6802
+	.uleb128 0x31
+	.4byte	.LVL555
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL556
+	.4byte	0x4250
+	.uleb128 0x31
+	.4byte	.LVL562
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL565
+	.4byte	0x19ea
+	.uleb128 0x31
+	.4byte	.LVL566
+	.4byte	0x3cac
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x3ca7
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x1e
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x3c97
+	.uleb128 0x3b
+	.4byte	.LASF537
+	.byte	0x2
+	.2byte	0x218
+	.4byte	0x64
+	.4byte	.LFB206
+	.4byte	.LFE206-.LFB206
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3d77
+	.uleb128 0x44
+	.4byte	.LASF486
+	.byte	0x2
+	.2byte	0x218
+	.4byte	0x3323
+	.4byte	.LLST134
+	.uleb128 0x1f
+	.4byte	.LASF538
+	.byte	0x2
+	.2byte	0x21a
+	.4byte	0x301
+	.uleb128 0x1
+	.byte	0x58
+	.uleb128 0x3e
+	.4byte	.LASF539
+	.byte	0x2
+	.2byte	0x21b
+	.4byte	0x301
+	.uleb128 0x1f
+	.4byte	.LASF119
+	.byte	0x2
+	.2byte	0x21c
+	.4byte	0x301
+	.uleb128 0x1
+	.byte	0x5a
+	.uleb128 0x45
+	.4byte	.LASF536
+	.byte	0x2
+	.2byte	0x21d
+	.4byte	0x630
+	.4byte	.LLST135
+	.uleb128 0x1f
+	.4byte	.LASF489
+	.byte	0x2
+	.2byte	0x21e
+	.4byte	0x539
+	.uleb128 0x1
+	.byte	0x59
+	.uleb128 0x3e
+	.4byte	.LASF491
+	.byte	0x2
+	.2byte	0x21f
+	.4byte	0x3329
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x1af3
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6788
+	.uleb128 0x31
+	.4byte	.LVL588
+	.4byte	0x3dcf
+	.uleb128 0x31
+	.4byte	.LVL590
+	.4byte	0x3d77
+	.uleb128 0x31
+	.4byte	.LVL592
+	.4byte	0x436e
+	.uleb128 0x31
+	.4byte	.LVL594
+	.4byte	0x3d77
+	.uleb128 0x31
+	.4byte	.LVL596
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL597
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL598
+	.4byte	0x3ac6
+	.byte	0
+	.uleb128 0x3c
+	.4byte	.LASF540
+	.byte	0x2
+	.2byte	0x203
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x3dba
+	.uleb128 0x3d
+	.4byte	.LASF486
+	.byte	0x2
+	.2byte	0x203
+	.4byte	0x3323
+	.uleb128 0x3e
+	.4byte	.LASF541
+	.byte	0x2
+	.2byte	0x205
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF536
+	.byte	0x2
+	.2byte	0x206
+	.4byte	0x630
+	.uleb128 0x41
+	.4byte	.LASF362
+	.4byte	0x3dca
+	.4byte	.LASF540
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x3dca
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x19
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x3dba
+	.uleb128 0x3b
+	.4byte	.LASF542
+	.byte	0x2
+	.2byte	0x1db
+	.4byte	0x64
+	.4byte	.LFB204
+	.4byte	.LFE204-.LFB204
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3e80
+	.uleb128 0x44
+	.4byte	.LASF486
+	.byte	0x2
+	.2byte	0x1db
+	.4byte	0x3323
+	.4byte	.LLST120
+	.uleb128 0x1f
+	.4byte	.LASF536
+	.byte	0x2
+	.2byte	0x1dd
+	.4byte	0x630
+	.uleb128 0x1
+	.byte	0x59
+	.uleb128 0x45
+	.4byte	.LASF489
+	.byte	0x2
+	.2byte	0x1de
+	.4byte	0x539
+	.4byte	.LLST121
+	.uleb128 0x1f
+	.4byte	.LASF543
+	.byte	0x2
+	.2byte	0x1df
+	.4byte	0x630
+	.uleb128 0x1
+	.byte	0x55
+	.uleb128 0x45
+	.4byte	.LASF178
+	.byte	0x2
+	.2byte	0x1e0
+	.4byte	0x301
+	.4byte	.LLST122
+	.uleb128 0x3e
+	.4byte	.LASF119
+	.byte	0x2
+	.2byte	0x1e0
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF541
+	.byte	0x2
+	.2byte	0x1e1
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF544
+	.byte	0x2
+	.2byte	0x1e2
+	.4byte	0x301
+	.4byte	.LLST123
+	.uleb128 0x45
+	.4byte	.LASF539
+	.byte	0x2
+	.2byte	0x1e3
+	.4byte	0x301
+	.4byte	.LLST124
+	.uleb128 0x31
+	.4byte	.LVL543
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL552
+	.4byte	0x436e
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF545
+	.byte	0x2
+	.2byte	0x1b9
+	.4byte	0x64
+	.4byte	.LFB203
+	.4byte	.LFE203-.LFB203
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3f27
+	.uleb128 0x44
+	.4byte	.LASF105
+	.byte	0x2
+	.2byte	0x1b9
+	.4byte	0x301
+	.4byte	.LLST117
+	.uleb128 0x44
+	.4byte	.LASF523
+	.byte	0x2
+	.2byte	0x1b9
+	.4byte	0x301
+	.4byte	.LLST118
+	.uleb128 0x45
+	.4byte	.LASF491
+	.byte	0x2
+	.2byte	0x1bb
+	.4byte	0x3329
+	.4byte	.LLST119
+	.uleb128 0x1f
+	.4byte	.LASF546
+	.byte	0x2
+	.2byte	0x1bc
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x57
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x23df
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6745
+	.uleb128 0x31
+	.4byte	.LVL526
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL528
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL531
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL533
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL534
+	.4byte	0x6735
+	.uleb128 0x31
+	.4byte	.LVL535
+	.4byte	0x6735
+	.uleb128 0x31
+	.4byte	.LVL536
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0x3c
+	.4byte	.LASF547
+	.byte	0x2
+	.2byte	0x193
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x3fa6
+	.uleb128 0x3d
+	.4byte	.LASF432
+	.byte	0x2
+	.2byte	0x193
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF548
+	.byte	0x2
+	.2byte	0x195
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF549
+	.byte	0x2
+	.2byte	0x196
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF550
+	.byte	0x2
+	.2byte	0x197
+	.4byte	0x30c
+	.uleb128 0x3e
+	.4byte	.LASF551
+	.byte	0x2
+	.2byte	0x199
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF552
+	.byte	0x2
+	.2byte	0x19a
+	.4byte	0x30c
+	.uleb128 0x3e
+	.4byte	.LASF435
+	.byte	0x2
+	.2byte	0x19b
+	.4byte	0x1210
+	.uleb128 0x3e
+	.4byte	.LASF553
+	.byte	0x2
+	.2byte	0x19b
+	.4byte	0x1210
+	.uleb128 0x41
+	.4byte	.LASF362
+	.4byte	0x3082
+	.4byte	.LASF547
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF554
+	.byte	0x2
+	.2byte	0x17f
+	.4byte	0x64
+	.4byte	.LFB201
+	.4byte	.LFE201-.LFB201
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3fed
+	.uleb128 0x44
+	.4byte	.LASF93
+	.byte	0x2
+	.2byte	0x17f
+	.4byte	0x301
+	.4byte	.LLST47
+	.uleb128 0x3e
+	.4byte	.LASF432
+	.byte	0x2
+	.2byte	0x181
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF435
+	.byte	0x2
+	.2byte	0x182
+	.4byte	0x1210
+	.4byte	.LLST48
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF555
+	.byte	0x2
+	.2byte	0x17a
+	.4byte	0x64
+	.4byte	.LFB200
+	.4byte	.LFE200-.LFB200
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4021
+	.uleb128 0x44
+	.4byte	.LASF556
+	.byte	0x2
+	.2byte	0x17a
+	.4byte	0x4021
+	.4byte	.LLST46
+	.uleb128 0x24
+	.4byte	.LVL148
+	.4byte	0x4027
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x1210
+	.uleb128 0x3b
+	.4byte	.LASF557
+	.byte	0x2
+	.2byte	0x167
+	.4byte	0x64
+	.4byte	.LFB199
+	.4byte	.LFE199-.LFB199
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4087
+	.uleb128 0x44
+	.4byte	.LASF556
+	.byte	0x2
+	.2byte	0x167
+	.4byte	0x4021
+	.4byte	.LLST43
+	.uleb128 0x44
+	.4byte	.LASF93
+	.byte	0x2
+	.2byte	0x167
+	.4byte	0x301
+	.4byte	.LLST44
+	.uleb128 0x3e
+	.4byte	.LASF432
+	.byte	0x2
+	.2byte	0x169
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF435
+	.byte	0x2
+	.2byte	0x16a
+	.4byte	0x1210
+	.4byte	.LLST45
+	.uleb128 0x31
+	.4byte	.LVL142
+	.4byte	0x4087
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF558
+	.byte	0x2
+	.2byte	0x14c
+	.4byte	0x64
+	.4byte	.LFB198
+	.4byte	.LFE198-.LFB198
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x40f4
+	.uleb128 0x44
+	.4byte	.LASF556
+	.byte	0x2
+	.2byte	0x14c
+	.4byte	0x4021
+	.4byte	.LLST41
+	.uleb128 0x44
+	.4byte	.LASF432
+	.byte	0x2
+	.2byte	0x14c
+	.4byte	0x301
+	.4byte	.LLST42
+	.uleb128 0x1f
+	.4byte	.LASF435
+	.byte	0x2
+	.2byte	0x14e
+	.4byte	0x1210
+	.uleb128 0x1
+	.byte	0x54
+	.uleb128 0x3e
+	.4byte	.LASF559
+	.byte	0x2
+	.2byte	0x14e
+	.4byte	0x1210
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x4104
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6704
+	.uleb128 0x31
+	.4byte	.LVL134
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x4104
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0x10
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x40f4
+	.uleb128 0x3b
+	.4byte	.LASF560
+	.byte	0x2
+	.2byte	0x11b
+	.4byte	0x64
+	.4byte	.LFB197
+	.4byte	.LFE197-.LFB197
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4178
+	.uleb128 0x44
+	.4byte	.LASF432
+	.byte	0x2
+	.2byte	0x11b
+	.4byte	0x301
+	.4byte	.LLST38
+	.uleb128 0x1f
+	.4byte	.LASF435
+	.byte	0x2
+	.2byte	0x11d
+	.4byte	0x1210
+	.uleb128 0x1
+	.byte	0x56
+	.uleb128 0x1f
+	.4byte	.LASF559
+	.byte	0x2
+	.2byte	0x11d
+	.4byte	0x1210
+	.uleb128 0x1
+	.byte	0x53
+	.uleb128 0x45
+	.4byte	.LASF561
+	.byte	0x2
+	.2byte	0x11e
+	.4byte	0x301
+	.4byte	.LLST39
+	.uleb128 0x3e
+	.4byte	.LASF562
+	.byte	0x2
+	.2byte	0x11f
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF563
+	.byte	0x2
+	.2byte	0x120
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF564
+	.byte	0x2
+	.byte	0xd8
+	.4byte	0x64
+	.4byte	.LFB196
+	.4byte	.LFE196-.LFB196
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4206
+	.uleb128 0x23
+	.4byte	.LASF432
+	.byte	0x2
+	.byte	0xd8
+	.4byte	0x301
+	.4byte	.LLST30
+	.uleb128 0x2c
+	.4byte	.LASF435
+	.byte	0x2
+	.byte	0xda
+	.4byte	0x1210
+	.4byte	.LLST31
+	.uleb128 0x2c
+	.4byte	.LASF559
+	.byte	0x2
+	.byte	0xda
+	.4byte	0x1210
+	.4byte	.LLST32
+	.uleb128 0x2c
+	.4byte	.LASF565
+	.byte	0x2
+	.byte	0xdb
+	.4byte	0x301
+	.4byte	.LLST33
+	.uleb128 0x2c
+	.4byte	.LASF566
+	.byte	0x2
+	.byte	0xdc
+	.4byte	0x301
+	.4byte	.LLST34
+	.uleb128 0x2c
+	.4byte	.LASF550
+	.byte	0x2
+	.byte	0xdd
+	.4byte	0x30c
+	.4byte	.LLST35
+	.uleb128 0x2c
+	.4byte	.LASF567
+	.byte	0x2
+	.byte	0xde
+	.4byte	0x30c
+	.4byte	.LLST36
+	.uleb128 0x35
+	.4byte	.LASF563
+	.byte	0x2
+	.byte	0xdf
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x58
+	.4byte	.LASF568
+	.byte	0x2
+	.byte	0xb9
+	.byte	0x1
+	.4byte	0x422b
+	.uleb128 0x34
+	.4byte	.LASF432
+	.byte	0x2
+	.byte	0xb9
+	.4byte	0x301
+	.uleb128 0x41
+	.4byte	.LASF362
+	.4byte	0x4104
+	.4byte	.LASF568
+	.byte	0
+	.uleb128 0x58
+	.4byte	.LASF569
+	.byte	0x2
+	.byte	0xb2
+	.byte	0x1
+	.4byte	0x4250
+	.uleb128 0x34
+	.4byte	.LASF432
+	.byte	0x2
+	.byte	0xb2
+	.4byte	0x301
+	.uleb128 0x41
+	.4byte	.LASF362
+	.4byte	0x4104
+	.4byte	.LASF569
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF570
+	.byte	0x2
+	.byte	0xa4
+	.4byte	0x301
+	.4byte	.LFB193
+	.4byte	.LFE193-.LFB193
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x429d
+	.uleb128 0x37
+	.ascii	"tmp\000"
+	.byte	0x2
+	.byte	0xa6
+	.4byte	0x301
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x53
+	.4byte	.LBB253
+	.4byte	.LBE253-.LBB253
+	.4byte	0x428d
+	.uleb128 0x29
+	.ascii	"Q\000"
+	.byte	0x2
+	.byte	0xa9
+	.4byte	0x429d
+	.byte	0
+	.uleb128 0x59
+	.4byte	0x43fb
+	.4byte	.LBB251
+	.4byte	.LBE251-.LBB251
+	.byte	0x2
+	.byte	0xa8
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0xadc
+	.uleb128 0x22
+	.4byte	.LASF571
+	.byte	0x2
+	.byte	0x92
+	.4byte	0x64
+	.4byte	.LFB192
+	.4byte	.LFE192-.LFB192
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x42fc
+	.uleb128 0x2b
+	.ascii	"blk\000"
+	.byte	0x2
+	.byte	0x92
+	.4byte	0x301
+	.4byte	.LLST29
+	.uleb128 0x37
+	.ascii	"ret\000"
+	.byte	0x2
+	.byte	0x94
+	.4byte	0x64
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x37
+	.ascii	"i\000"
+	.byte	0x2
+	.byte	0x95
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x51
+	.uleb128 0x29
+	.ascii	"Q\000"
+	.byte	0x2
+	.byte	0x96
+	.4byte	0x429d
+	.uleb128 0x5a
+	.4byte	0x43ef
+	.4byte	.LBB247
+	.4byte	.Ldebug_ranges0+0x50
+	.byte	0x2
+	.byte	0x98
+	.byte	0
+	.uleb128 0x49
+	.4byte	.LASF572
+	.byte	0x2
+	.byte	0x73
+	.4byte	.LFB191
+	.4byte	.LFE191-.LFB191
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x436e
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x2
+	.byte	0x75
+	.4byte	0x301
+	.uleb128 0x4a
+	.ascii	"tmp\000"
+	.byte	0x2
+	.byte	0x75
+	.4byte	0x301
+	.4byte	.LLST26
+	.uleb128 0x29
+	.ascii	"j\000"
+	.byte	0x2
+	.byte	0x75
+	.4byte	0x301
+	.uleb128 0x2c
+	.4byte	.LASF383
+	.byte	0x2
+	.byte	0x76
+	.4byte	0x301
+	.4byte	.LLST27
+	.uleb128 0x35
+	.4byte	.LASF573
+	.byte	0x2
+	.byte	0x77
+	.4byte	0x301
+	.uleb128 0x2c
+	.4byte	.LASF574
+	.byte	0x2
+	.byte	0x78
+	.4byte	0x30c
+	.4byte	.LLST28
+	.uleb128 0x29
+	.ascii	"Q\000"
+	.byte	0x2
+	.byte	0x79
+	.4byte	0x429d
+	.uleb128 0x31
+	.4byte	.LVL80
+	.4byte	0x4561
+	.byte	0
+	.uleb128 0x49
+	.4byte	.LASF575
+	.byte	0x2
+	.byte	0x61
+	.4byte	.LFB190
+	.4byte	.LFE190-.LFB190
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x43ef
+	.uleb128 0x2b
+	.ascii	"blk\000"
+	.byte	0x2
+	.byte	0x61
+	.4byte	0x301
+	.4byte	.LLST98
+	.uleb128 0x23
+	.4byte	.LASF576
+	.byte	0x2
+	.byte	0x61
+	.4byte	0x301
+	.4byte	.LLST99
+	.uleb128 0x53
+	.4byte	.LBB299
+	.4byte	.LBE299-.LBB299
+	.4byte	0x43df
+	.uleb128 0x29
+	.ascii	"Q\000"
+	.byte	0x2
+	.byte	0x64
+	.4byte	0x429d
+	.uleb128 0x33
+	.4byte	.LBB300
+	.4byte	.LBE300-.LBB300
+	.uleb128 0x35
+	.4byte	.LASF577
+	.byte	0x2
+	.byte	0x66
+	.4byte	0x301
+	.uleb128 0x31
+	.4byte	.LVL411
+	.4byte	0x4561
+	.uleb128 0x31
+	.4byte	.LVL412
+	.4byte	0x1954
+	.byte	0
+	.byte	0
+	.uleb128 0x59
+	.4byte	0x43ef
+	.4byte	.LBB297
+	.4byte	.LBE297-.LBB297
+	.byte	0x2
+	.byte	0x63
+	.byte	0
+	.uleb128 0x5b
+	.4byte	.LASF578
+	.byte	0x2
+	.byte	0x5c
+	.4byte	0x301
+	.byte	0x1
+	.uleb128 0x5b
+	.4byte	.LASF579
+	.byte	0x2
+	.byte	0x57
+	.4byte	0x301
+	.byte	0x1
+	.uleb128 0x22
+	.4byte	.LASF580
+	.byte	0x2
+	.byte	0x4b
+	.4byte	0x301
+	.4byte	.LFB187
+	.4byte	.LFE187-.LFB187
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4486
+	.uleb128 0x2b
+	.ascii	"max\000"
+	.byte	0x2
+	.byte	0x4b
+	.4byte	0x301
+	.4byte	.LLST25
+	.uleb128 0x29
+	.ascii	"Q\000"
+	.byte	0x2
+	.byte	0x4d
+	.4byte	0x429d
+	.uleb128 0x5c
+	.4byte	0x17c6
+	.4byte	.LBB238
+	.4byte	.Ldebug_ranges0+0x30
+	.byte	0x2
+	.byte	0x53
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x30
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x30
+	.uleb128 0x30
+	.4byte	0x17f2
+	.uleb128 0x30
+	.4byte	0x17fd
+	.uleb128 0x31
+	.4byte	.LVL76
+	.4byte	0x672a
+	.byte	0
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF581
+	.byte	0x2
+	.byte	0x2e
+	.4byte	0x64
+	.4byte	.LFB186
+	.4byte	.LFE186-.LFB186
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x451e
+	.uleb128 0x23
+	.4byte	.LASF178
+	.byte	0x2
+	.byte	0x2e
+	.4byte	0x30c
+	.4byte	.LLST88
+	.uleb128 0x23
+	.4byte	.LASF356
+	.byte	0x2
+	.byte	0x2e
+	.4byte	0x64
+	.4byte	.LLST89
+	.uleb128 0x37
+	.ascii	"req\000"
+	.byte	0x2
+	.byte	0x30
+	.4byte	0x32d
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -108
+	.uleb128 0x37
+	.ascii	"low\000"
+	.byte	0x2
+	.byte	0x31
+	.4byte	0x322
+	.uleb128 0x1
+	.byte	0x58
+	.uleb128 0x20
+	.4byte	.LASF582
+	.byte	0x2
+	.byte	0x31
+	.4byte	0x322
+	.uleb128 0x1
+	.byte	0x55
+	.uleb128 0x29
+	.ascii	"mid\000"
+	.byte	0x2
+	.byte	0x31
+	.4byte	0x322
+	.uleb128 0x20
+	.4byte	.LASF583
+	.byte	0x2
+	.byte	0x32
+	.4byte	0x1944
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -88
+	.uleb128 0x35
+	.4byte	.LASF584
+	.byte	0x2
+	.byte	0x33
+	.4byte	0x301
+	.uleb128 0x31
+	.4byte	.LVL374
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL377
+	.4byte	0x1af8
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF585
+	.byte	0x2
+	.byte	0x1e
+	.4byte	0x30c
+	.4byte	.LFB185
+	.4byte	.LFE185-.LFB185
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4561
+	.uleb128 0x23
+	.4byte	.LASF586
+	.byte	0x2
+	.byte	0x1e
+	.4byte	0x30c
+	.4byte	.LLST24
+	.uleb128 0x4c
+	.4byte	.LASF587
+	.byte	0x2
+	.byte	0x1e
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x51
+	.uleb128 0x37
+	.ascii	"ret\000"
+	.byte	0x2
+	.byte	0x20
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x50
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF588
+	.byte	0x2
+	.byte	0x14
+	.4byte	0x301
+	.4byte	.LFB184
+	.4byte	.LFE184-.LFB184
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4595
+	.uleb128 0x23
+	.4byte	.LASF378
+	.byte	0x2
+	.byte	0x14
+	.4byte	0x301
+	.4byte	.LLST23
+	.uleb128 0x35
+	.4byte	.LASF500
+	.byte	0x2
+	.byte	0x16
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF589
+	.byte	0x2
+	.byte	0xc
+	.4byte	0x301
+	.4byte	.LFB183
+	.4byte	.LFE183-.LFB183
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x45c9
+	.uleb128 0x23
+	.4byte	.LASF378
+	.byte	0x2
+	.byte	0xc
+	.4byte	0x301
+	.4byte	.LLST22
+	.uleb128 0x35
+	.4byte	.LASF376
+	.byte	0x2
+	.byte	0xe
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF590
+	.byte	0x2
+	.byte	0x4
+	.4byte	0x301
+	.4byte	.LFB182
+	.4byte	.LFE182-.LFB182
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x460c
+	.uleb128 0x23
+	.4byte	.LASF376
+	.byte	0x2
+	.byte	0x4
+	.4byte	0x301
+	.4byte	.LLST20
+	.uleb128 0x23
+	.4byte	.LASF500
+	.byte	0x2
+	.byte	0x4
+	.4byte	0x301
+	.4byte	.LLST21
+	.uleb128 0x35
+	.4byte	.LASF392
+	.byte	0x2
+	.byte	0x6
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF591
+	.byte	0x4
+	.2byte	0x13c
+	.4byte	0x317
+	.4byte	.LFB181
+	.4byte	.LFE181-.LFB181
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x47d0
+	.uleb128 0x52
+	.ascii	"die\000"
+	.byte	0x4
+	.2byte	0x13e
+	.4byte	0x30c
+	.4byte	.LLST216
+	.uleb128 0x3f
+	.ascii	"blk\000"
+	.byte	0x4
+	.2byte	0x13f
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF352
+	.byte	0x4
+	.2byte	0x140
+	.4byte	0x30c
+	.4byte	.LLST217
+	.uleb128 0x3e
+	.4byte	.LASF592
+	.byte	0x4
+	.2byte	0x142
+	.4byte	0x47d0
+	.uleb128 0x40
+	.4byte	.LASF593
+	.byte	0x4
+	.2byte	0x158
+	.uleb128 0x4f
+	.4byte	0x17c6
+	.4byte	.LBB464
+	.4byte	.Ldebug_ranges0+0x1f0
+	.byte	0x4
+	.2byte	0x15e
+	.4byte	0x46b8
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x1f0
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x1f0
+	.uleb128 0x30
+	.4byte	0x6129
+	.uleb128 0x30
+	.4byte	0x612e
+	.uleb128 0x31
+	.4byte	.LVL1074
+	.4byte	0x672a
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x54
+	.4byte	0x17c6
+	.4byte	.LBB470
+	.4byte	.LBE470-.LBB470
+	.byte	0x4
+	.2byte	0x15f
+	.4byte	0x4712
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB471
+	.4byte	.LBE471-.LBB471
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB472
+	.4byte	.LBE472-.LBB472
+	.uleb128 0x30
+	.4byte	0x6129
+	.uleb128 0x30
+	.4byte	0x612e
+	.uleb128 0x31
+	.4byte	.LVL1075
+	.4byte	0x672a
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL1061
+	.4byte	0x4938
+	.uleb128 0x31
+	.4byte	.LVL1062
+	.4byte	0x47d6
+	.uleb128 0x31
+	.4byte	.LVL1063
+	.4byte	0x4afe
+	.uleb128 0x31
+	.4byte	.LVL1064
+	.4byte	0x1900
+	.uleb128 0x31
+	.4byte	.LVL1065
+	.4byte	0x4b59
+	.uleb128 0x31
+	.4byte	.LVL1068
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL1069
+	.4byte	0x176f
+	.uleb128 0x31
+	.4byte	.LVL1070
+	.4byte	0x4b59
+	.uleb128 0x31
+	.4byte	.LVL1071
+	.4byte	0x180a
+	.uleb128 0x31
+	.4byte	.LVL1072
+	.4byte	0x4a98
+	.uleb128 0x31
+	.4byte	.LVL1073
+	.4byte	0x4afe
+	.uleb128 0x31
+	.4byte	.LVL1078
+	.4byte	0x176f
+	.uleb128 0x31
+	.4byte	.LVL1079
+	.4byte	0x1954
+	.uleb128 0x31
+	.4byte	.LVL1080
+	.4byte	0x19ea
+	.uleb128 0x31
+	.4byte	.LVL1081
+	.4byte	0x4b59
+	.uleb128 0x31
+	.4byte	.LVL1082
+	.4byte	0x4b59
+	.uleb128 0x31
+	.4byte	.LVL1083
+	.4byte	0x1954
+	.uleb128 0x31
+	.4byte	.LVL1084
+	.4byte	0x4b59
+	.uleb128 0x31
+	.4byte	.LVL1085
+	.4byte	0x4b59
+	.uleb128 0x31
+	.4byte	.LVL1086
+	.4byte	0x499b
+	.uleb128 0x31
+	.4byte	.LVL1087
+	.4byte	0x499b
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x700
+	.uleb128 0x3b
+	.4byte	.LASF594
+	.byte	0x4
+	.2byte	0x116
+	.4byte	0x64
+	.4byte	.LFB180
+	.4byte	.LFE180-.LFB180
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4834
+	.uleb128 0x51
+	.ascii	"die\000"
+	.byte	0x4
+	.2byte	0x118
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x56
+	.uleb128 0x52
+	.ascii	"blk\000"
+	.byte	0x4
+	.2byte	0x119
+	.4byte	0x301
+	.4byte	.LLST86
+	.uleb128 0x45
+	.4byte	.LASF595
+	.byte	0x4
+	.2byte	0x11a
+	.4byte	0x30c
+	.4byte	.LLST87
+	.uleb128 0x3e
+	.4byte	.LASF592
+	.byte	0x4
+	.2byte	0x11b
+	.4byte	0x47d0
+	.uleb128 0x31
+	.4byte	.LVL369
+	.4byte	0x1af8
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF596
+	.byte	0x4
+	.byte	0xac
+	.4byte	0x64
+	.4byte	.LFB179
+	.4byte	.LFE179-.LFB179
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x48e4
+	.uleb128 0x4a
+	.ascii	"i\000"
+	.byte	0x4
+	.byte	0xae
+	.4byte	0x30c
+	.4byte	.LLST213
+	.uleb128 0x4a
+	.ascii	"blk\000"
+	.byte	0x4
+	.byte	0xaf
+	.4byte	0x301
+	.4byte	.LLST214
+	.uleb128 0x2c
+	.4byte	.LASF488
+	.byte	0x4
+	.byte	0xb0
+	.4byte	0x322
+	.4byte	.LLST215
+	.uleb128 0x35
+	.4byte	.LASF592
+	.byte	0x4
+	.byte	0xb1
+	.4byte	0x47d0
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x48f4
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6546
+	.uleb128 0x31
+	.4byte	.LVL1039
+	.4byte	0x4938
+	.uleb128 0x31
+	.4byte	.LVL1041
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL1042
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL1043
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL1044
+	.4byte	0x4486
+	.uleb128 0x31
+	.4byte	.LVL1046
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1047
+	.4byte	0x58b9
+	.uleb128 0x31
+	.4byte	.LVL1053
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL1057
+	.4byte	0x176f
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x48f4
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0xa
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x48e4
+	.uleb128 0x22
+	.4byte	.LASF597
+	.byte	0x4
+	.byte	0x9c
+	.4byte	0x301
+	.4byte	.LFB178
+	.4byte	.LFE178-.LFB178
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4938
+	.uleb128 0x4a
+	.ascii	"blk\000"
+	.byte	0x4
+	.byte	0x9e
+	.4byte	0x301
+	.4byte	.LLST19
+	.uleb128 0x20
+	.4byte	.LASF598
+	.byte	0x4
+	.byte	0x9f
+	.4byte	0x301
+	.uleb128 0x1
+	.byte	0x54
+	.uleb128 0x31
+	.4byte	.LVL56
+	.4byte	0x4afe
+	.byte	0
+	.uleb128 0x49
+	.4byte	.LASF599
+	.byte	0x4
+	.byte	0x94
+	.4byte	.LFB177
+	.4byte	.LFE177-.LFB177
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x499b
+	.uleb128 0x5c
+	.4byte	0x17c6
+	.4byte	.LBB227
+	.4byte	.Ldebug_ranges0+0x18
+	.byte	0x4
+	.byte	0x98
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x18
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x18
+	.uleb128 0x30
+	.4byte	0x17f2
+	.uleb128 0x30
+	.4byte	0x17fd
+	.uleb128 0x24
+	.4byte	.LVL53
+	.4byte	0x6714
+	.byte	0
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF600
+	.byte	0x4
+	.byte	0x4f
+	.4byte	0x64
+	.4byte	.LFB176
+	.4byte	.LFE176-.LFB176
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4a98
+	.uleb128 0x4a
+	.ascii	"i\000"
+	.byte	0x4
+	.byte	0x51
+	.4byte	0x64
+	.4byte	.LLST179
+	.uleb128 0x2c
+	.4byte	.LASF601
+	.byte	0x4
+	.byte	0x52
+	.4byte	0x64
+	.4byte	.LLST180
+	.uleb128 0x2c
+	.4byte	.LASF592
+	.byte	0x4
+	.byte	0x53
+	.4byte	0x47d0
+	.4byte	.LLST181
+	.uleb128 0x2c
+	.4byte	.LASF504
+	.byte	0x4
+	.byte	0x54
+	.4byte	0x301
+	.4byte	.LLST182
+	.uleb128 0x47
+	.4byte	.LASF602
+	.byte	0x4
+	.byte	0x67
+	.uleb128 0x5d
+	.4byte	.LASF362
+	.4byte	0x1af3
+	.uleb128 0x2d
+	.4byte	0x17c6
+	.4byte	.LBB419
+	.4byte	.Ldebug_ranges0+0x168
+	.byte	0x4
+	.byte	0x5f
+	.4byte	0x4a4f
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x168
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x168
+	.uleb128 0x30
+	.4byte	0x6129
+	.uleb128 0x30
+	.4byte	0x612e
+	.uleb128 0x31
+	.4byte	.LVL818
+	.4byte	0x6714
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL815
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL820
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL821
+	.4byte	0x19ea
+	.uleb128 0x31
+	.4byte	.LVL822
+	.4byte	0x1954
+	.uleb128 0x31
+	.4byte	.LVL823
+	.4byte	0x19ea
+	.uleb128 0x31
+	.4byte	.LVL826
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL827
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL829
+	.4byte	0x176f
+	.byte	0
+	.uleb128 0x49
+	.4byte	.LASF603
+	.byte	0x4
+	.byte	0x41
+	.4byte	.LFB175
+	.4byte	.LFE175-.LFB175
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4af6
+	.uleb128 0x23
+	.4byte	.LASF536
+	.byte	0x4
+	.byte	0x41
+	.4byte	0x630
+	.4byte	.LLST115
+	.uleb128 0x23
+	.4byte	.LASF604
+	.byte	0x4
+	.byte	0x41
+	.4byte	0x539
+	.4byte	.LLST116
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x4
+	.byte	0x43
+	.4byte	0x30c
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x29c3
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6503
+	.uleb128 0x31
+	.4byte	.LVL522
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL523
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0x5e
+	.4byte	.LASF605
+	.byte	0x4
+	.byte	0x26
+	.byte	0x1
+	.uleb128 0x2a
+	.4byte	.LASF606
+	.byte	0x4
+	.byte	0x17
+	.4byte	0x64
+	.4byte	.LFB173
+	.4byte	.LFE173-.LFB173
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4b59
+	.uleb128 0x23
+	.4byte	.LASF178
+	.byte	0x4
+	.byte	0x17
+	.4byte	0x301
+	.4byte	.LLST16
+	.uleb128 0x4a
+	.ascii	"die\000"
+	.byte	0x4
+	.byte	0x19
+	.4byte	0x30c
+	.4byte	.LLST17
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x4
+	.byte	0x1a
+	.4byte	0x30c
+	.uleb128 0x35
+	.4byte	.LASF604
+	.byte	0x4
+	.byte	0x1b
+	.4byte	0x539
+	.uleb128 0x2c
+	.4byte	.LASF369
+	.byte	0x4
+	.byte	0x1c
+	.4byte	0x301
+	.4byte	.LLST18
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF607
+	.byte	0x4
+	.byte	0x4
+	.4byte	0x64
+	.4byte	.LFB172
+	.4byte	.LFE172-.LFB172
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4bb0
+	.uleb128 0x23
+	.4byte	.LASF178
+	.byte	0x4
+	.byte	0x4
+	.4byte	0x301
+	.4byte	.LLST14
+	.uleb128 0x4a
+	.ascii	"die\000"
+	.byte	0x4
+	.byte	0x6
+	.4byte	0x30c
+	.4byte	.LLST15
+	.uleb128 0x35
+	.4byte	.LASF604
+	.byte	0x4
+	.byte	0x7
+	.4byte	0x539
+	.uleb128 0x35
+	.4byte	.LASF369
+	.byte	0x4
+	.byte	0x8
+	.4byte	0x301
+	.uleb128 0x31
+	.4byte	.LVL43
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0x5f
+	.4byte	.LASF669
+	.byte	0x3
+	.2byte	0x4bb
+	.4byte	0x30c
+	.4byte	.LFB171
+	.4byte	.LFE171-.LFB171
+	.uleb128 0x1
+	.byte	0x9c
+	.uleb128 0x3b
+	.4byte	.LASF608
+	.byte	0x3
+	.2byte	0x4b6
+	.4byte	0x64
+	.4byte	.LFB170
+	.4byte	.LFE170-.LFB170
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4c1a
+	.uleb128 0x44
+	.4byte	.LASF93
+	.byte	0x3
+	.2byte	0x4b6
+	.4byte	0x99
+	.4byte	.LLST293
+	.uleb128 0x44
+	.4byte	.LASF114
+	.byte	0x3
+	.2byte	0x4b6
+	.4byte	0x99
+	.4byte	.LLST294
+	.uleb128 0x4e
+	.ascii	"buf\000"
+	.byte	0x3
+	.2byte	0x4b6
+	.4byte	0x4c1a
+	.4byte	.LLST295
+	.uleb128 0x24
+	.4byte	.LVL1543
+	.4byte	0x4d46
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x79
+	.uleb128 0x3b
+	.4byte	.LASF609
+	.byte	0x3
+	.2byte	0x4b0
+	.4byte	0x64
+	.4byte	.LFB169
+	.4byte	.LFE169-.LFB169
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4c74
+	.uleb128 0x44
+	.4byte	.LASF93
+	.byte	0x3
+	.2byte	0x4b0
+	.4byte	0x99
+	.4byte	.LLST279
+	.uleb128 0x44
+	.4byte	.LASF114
+	.byte	0x3
+	.2byte	0x4b0
+	.4byte	0x99
+	.4byte	.LLST280
+	.uleb128 0x4e
+	.ascii	"buf\000"
+	.byte	0x3
+	.2byte	0x4b0
+	.4byte	0x4c1a
+	.4byte	.LLST281
+	.uleb128 0x24
+	.4byte	.LVL1442
+	.4byte	0x50c3
+	.byte	0
+	.uleb128 0x4d
+	.4byte	.LASF610
+	.byte	0x3
+	.2byte	0x481
+	.4byte	0x64
+	.4byte	.LFB168
+	.4byte	.LFE168-.LFB168
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4d46
+	.uleb128 0x44
+	.4byte	.LASF514
+	.byte	0x3
+	.2byte	0x481
+	.4byte	0x30c
+	.4byte	.LLST244
+	.uleb128 0x44
+	.4byte	.LASF515
+	.byte	0x3
+	.2byte	0x481
+	.4byte	0x30c
+	.4byte	.LLST245
+	.uleb128 0x45
+	.4byte	.LASF517
+	.byte	0x3
+	.2byte	0x483
+	.4byte	0x301
+	.4byte	.LLST246
+	.uleb128 0x3f
+	.ascii	"tmp\000"
+	.byte	0x3
+	.2byte	0x484
+	.4byte	0x301
+	.uleb128 0x52
+	.ascii	"lpa\000"
+	.byte	0x3
+	.2byte	0x485
+	.4byte	0x30c
+	.4byte	.LLST247
+	.uleb128 0x45
+	.4byte	.LASF446
+	.byte	0x3
+	.2byte	0x486
+	.4byte	0x30c
+	.4byte	.LLST248
+	.uleb128 0x45
+	.4byte	.LASF423
+	.byte	0x3
+	.2byte	0x486
+	.4byte	0x30c
+	.4byte	.LLST249
+	.uleb128 0x3e
+	.4byte	.LASF412
+	.byte	0x3
+	.2byte	0x487
+	.4byte	0x301
+	.uleb128 0x31
+	.4byte	.LVL1215
+	.4byte	0x4f66
+	.uleb128 0x31
+	.4byte	.LVL1221
+	.4byte	0x39f4
+	.uleb128 0x31
+	.4byte	.LVL1222
+	.4byte	0x3588
+	.uleb128 0x31
+	.4byte	.LVL1223
+	.4byte	0x3929
+	.uleb128 0x31
+	.4byte	.LVL1226
+	.4byte	0x3929
+	.uleb128 0x31
+	.4byte	.LVL1227
+	.4byte	0x4561
+	.uleb128 0x31
+	.4byte	.LVL1228
+	.4byte	0x232e
+	.byte	0
+	.uleb128 0x4d
+	.4byte	.LASF611
+	.byte	0x3
+	.2byte	0x3be
+	.4byte	0x64
+	.4byte	.LFB167
+	.4byte	.LFE167-.LFB167
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4f66
+	.uleb128 0x4e
+	.ascii	"LUN\000"
+	.byte	0x3
+	.2byte	0x3be
+	.4byte	0x2f6
+	.4byte	.LLST282
+	.uleb128 0x44
+	.4byte	.LASF514
+	.byte	0x3
+	.2byte	0x3be
+	.4byte	0x30c
+	.4byte	.LLST283
+	.uleb128 0x44
+	.4byte	.LASF515
+	.byte	0x3
+	.2byte	0x3be
+	.4byte	0x30c
+	.4byte	.LLST284
+	.uleb128 0x44
+	.4byte	.LASF516
+	.byte	0x3
+	.2byte	0x3be
+	.4byte	0x384a
+	.4byte	.LLST285
+	.uleb128 0x3e
+	.4byte	.LASF380
+	.byte	0x3
+	.2byte	0x3c0
+	.4byte	0x1d3f
+	.uleb128 0x52
+	.ascii	"lpa\000"
+	.byte	0x3
+	.2byte	0x3c1
+	.4byte	0x30c
+	.4byte	.LLST286
+	.uleb128 0x45
+	.4byte	.LASF612
+	.byte	0x3
+	.2byte	0x3c1
+	.4byte	0x30c
+	.4byte	.LLST287
+	.uleb128 0x45
+	.4byte	.LASF613
+	.byte	0x3
+	.2byte	0x3c1
+	.4byte	0x30c
+	.4byte	.LLST288
+	.uleb128 0x45
+	.4byte	.LASF446
+	.byte	0x3
+	.2byte	0x3c2
+	.4byte	0x30c
+	.4byte	.LLST289
+	.uleb128 0x3f
+	.ascii	"ppa\000"
+	.byte	0x3
+	.2byte	0x3c2
+	.4byte	0x30c
+	.uleb128 0x52
+	.ascii	"i\000"
+	.byte	0x3
+	.2byte	0x3c3
+	.4byte	0x30c
+	.4byte	.LLST290
+	.uleb128 0x45
+	.4byte	.LASF614
+	.byte	0x3
+	.2byte	0x3c3
+	.4byte	0x30c
+	.4byte	.LLST291
+	.uleb128 0x3e
+	.4byte	.LASF377
+	.byte	0x3
+	.2byte	0x3c3
+	.4byte	0x30c
+	.uleb128 0x3e
+	.4byte	.LASF615
+	.byte	0x3
+	.2byte	0x3c4
+	.4byte	0x30c
+	.uleb128 0x3e
+	.4byte	.LASF616
+	.byte	0x3
+	.2byte	0x3c4
+	.4byte	0x30c
+	.uleb128 0x45
+	.4byte	.LASF422
+	.byte	0x3
+	.2byte	0x3c5
+	.4byte	0x12c0
+	.4byte	.LLST292
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x39ef
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6439
+	.uleb128 0x39
+	.4byte	.Ldebug_ranges0+0x250
+	.4byte	0x4e8d
+	.uleb128 0x1f
+	.4byte	.LASF385
+	.byte	0x3
+	.2byte	0x43a
+	.4byte	0x32d
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -60
+	.uleb128 0x31
+	.4byte	.LVL1520
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL1524
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1525
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL1446
+	.4byte	0x3850
+	.uleb128 0x31
+	.4byte	.LVL1457
+	.4byte	0x4f66
+	.uleb128 0x31
+	.4byte	.LVL1463
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1465
+	.4byte	0x4f66
+	.uleb128 0x31
+	.4byte	.LVL1466
+	.4byte	0x2460
+	.uleb128 0x31
+	.4byte	.LVL1468
+	.4byte	0x2460
+	.uleb128 0x31
+	.4byte	.LVL1470
+	.4byte	0x2460
+	.uleb128 0x31
+	.4byte	.LVL1473
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1477
+	.4byte	0x1c72
+	.uleb128 0x31
+	.4byte	.LVL1479
+	.4byte	0x3fa6
+	.uleb128 0x31
+	.4byte	.LVL1480
+	.4byte	0x1e6d
+	.uleb128 0x31
+	.4byte	.LVL1481
+	.4byte	0x1c72
+	.uleb128 0x31
+	.4byte	.LVL1482
+	.4byte	0x1c72
+	.uleb128 0x31
+	.4byte	.LVL1487
+	.4byte	0x176f
+	.uleb128 0x31
+	.4byte	.LVL1492
+	.4byte	0x4f66
+	.uleb128 0x31
+	.4byte	.LVL1496
+	.4byte	0x2460
+	.uleb128 0x31
+	.4byte	.LVL1499
+	.4byte	0x3929
+	.uleb128 0x31
+	.4byte	.LVL1500
+	.4byte	0x23e4
+	.uleb128 0x31
+	.4byte	.LVL1501
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL1514
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1521
+	.4byte	0x176f
+	.uleb128 0x31
+	.4byte	.LVL1526
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL1534
+	.4byte	0x4f8a
+	.uleb128 0x31
+	.4byte	.LVL1536
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF617
+	.byte	0x3
+	.2byte	0x3b5
+	.4byte	0x64
+	.4byte	.LFB166
+	.4byte	.LFE166-.LFB166
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4f8a
+	.uleb128 0x31
+	.4byte	.LVL1205
+	.4byte	0x4f8a
+	.byte	0
+	.uleb128 0x50
+	.4byte	.LASF618
+	.byte	0x3
+	.2byte	0x385
+	.4byte	.LFB165
+	.4byte	.LFE165-.LFB165
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x50ae
+	.uleb128 0x4e
+	.ascii	"req\000"
+	.byte	0x3
+	.2byte	0x385
+	.4byte	0xf40
+	.4byte	.LLST237
+	.uleb128 0x44
+	.4byte	.LASF377
+	.byte	0x3
+	.2byte	0x385
+	.4byte	0x30c
+	.4byte	.LLST238
+	.uleb128 0x44
+	.4byte	.LASF619
+	.byte	0x3
+	.2byte	0x385
+	.4byte	0x30c
+	.4byte	.LLST239
+	.uleb128 0x44
+	.4byte	.LASF422
+	.byte	0x3
+	.2byte	0x385
+	.4byte	0x12c0
+	.4byte	.LLST240
+	.uleb128 0x52
+	.ascii	"i\000"
+	.byte	0x3
+	.2byte	0x387
+	.4byte	0x30c
+	.4byte	.LLST241
+	.uleb128 0x52
+	.ascii	"ppa\000"
+	.byte	0x3
+	.2byte	0x388
+	.4byte	0x30c
+	.4byte	.LLST242
+	.uleb128 0x45
+	.4byte	.LASF446
+	.byte	0x3
+	.2byte	0x388
+	.4byte	0x30c
+	.4byte	.LLST243
+	.uleb128 0x3e
+	.4byte	.LASF405
+	.byte	0x3
+	.2byte	0x389
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF380
+	.byte	0x3
+	.2byte	0x38a
+	.4byte	0x1d3f
+	.uleb128 0x3e
+	.4byte	.LASF470
+	.byte	0x3
+	.2byte	0x38b
+	.4byte	0x30c
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x50be
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6411
+	.uleb128 0x31
+	.4byte	.LVL1184
+	.4byte	0x19ea
+	.uleb128 0x31
+	.4byte	.LVL1186
+	.4byte	0x4561
+	.uleb128 0x31
+	.4byte	.LVL1187
+	.4byte	0x2460
+	.uleb128 0x31
+	.4byte	.LVL1188
+	.4byte	0x1e11
+	.uleb128 0x31
+	.4byte	.LVL1189
+	.4byte	0x23e4
+	.uleb128 0x31
+	.4byte	.LVL1190
+	.4byte	0x19ea
+	.uleb128 0x31
+	.4byte	.LVL1192
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1194
+	.4byte	0x3929
+	.uleb128 0x31
+	.4byte	.LVL1196
+	.4byte	0x4561
+	.uleb128 0x31
+	.4byte	.LVL1199
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1200
+	.4byte	0x232e
+	.uleb128 0x31
+	.4byte	.LVL1203
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0xc
+	.4byte	0x3c
+	.4byte	0x50be
+	.uleb128 0x17
+	.4byte	0x2e
+	.byte	0xc
+	.byte	0
+	.uleb128 0x4
+	.4byte	0x50ae
+	.uleb128 0x4d
+	.4byte	.LASF620
+	.byte	0x3
+	.2byte	0x32c
+	.4byte	0x64
+	.4byte	.LFB164
+	.4byte	.LFE164-.LFB164
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x52a2
+	.uleb128 0x4e
+	.ascii	"LUN\000"
+	.byte	0x3
+	.2byte	0x32c
+	.4byte	0x2f6
+	.4byte	.LLST264
+	.uleb128 0x44
+	.4byte	.LASF514
+	.byte	0x3
+	.2byte	0x32c
+	.4byte	0x30c
+	.4byte	.LLST265
+	.uleb128 0x44
+	.4byte	.LASF515
+	.byte	0x3
+	.2byte	0x32c
+	.4byte	0x30c
+	.4byte	.LLST266
+	.uleb128 0x44
+	.4byte	.LASF516
+	.byte	0x3
+	.2byte	0x32c
+	.4byte	0x384a
+	.4byte	.LLST267
+	.uleb128 0x51
+	.ascii	"ret\000"
+	.byte	0x3
+	.2byte	0x32e
+	.4byte	0x64
+	.uleb128 0x1
+	.byte	0x58
+	.uleb128 0x45
+	.4byte	.LASF612
+	.byte	0x3
+	.2byte	0x32f
+	.4byte	0x30c
+	.4byte	.LLST268
+	.uleb128 0x45
+	.4byte	.LASF613
+	.byte	0x3
+	.2byte	0x32f
+	.4byte	0x30c
+	.4byte	.LLST269
+	.uleb128 0x45
+	.4byte	.LASF621
+	.byte	0x3
+	.2byte	0x32f
+	.4byte	0x30c
+	.4byte	.LLST270
+	.uleb128 0x52
+	.ascii	"lpa\000"
+	.byte	0x3
+	.2byte	0x330
+	.4byte	0x30c
+	.4byte	.LLST271
+	.uleb128 0x52
+	.ascii	"ppa\000"
+	.byte	0x3
+	.2byte	0x330
+	.4byte	0x30c
+	.4byte	.LLST272
+	.uleb128 0x52
+	.ascii	"n\000"
+	.byte	0x3
+	.2byte	0x332
+	.4byte	0x30c
+	.4byte	.LLST273
+	.uleb128 0x45
+	.4byte	.LASF377
+	.byte	0x3
+	.2byte	0x332
+	.4byte	0x30c
+	.4byte	.LLST274
+	.uleb128 0x45
+	.4byte	.LASF614
+	.byte	0x3
+	.2byte	0x332
+	.4byte	0x30c
+	.4byte	.LLST275
+	.uleb128 0x45
+	.4byte	.LASF622
+	.byte	0x3
+	.2byte	0x333
+	.4byte	0x30c
+	.4byte	.LLST276
+	.uleb128 0x3e
+	.4byte	.LASF623
+	.byte	0x3
+	.2byte	0x333
+	.4byte	0x30c
+	.uleb128 0x45
+	.4byte	.LASF624
+	.byte	0x3
+	.2byte	0x334
+	.4byte	0x30c
+	.4byte	.LLST277
+	.uleb128 0x45
+	.4byte	.LASF625
+	.byte	0x3
+	.2byte	0x335
+	.4byte	0x30c
+	.4byte	.LLST278
+	.uleb128 0x53
+	.4byte	.LBB513
+	.4byte	.LBE513-.LBB513
+	.4byte	0x5211
+	.uleb128 0x3e
+	.4byte	.LASF392
+	.byte	0x3
+	.2byte	0x379
+	.4byte	0x301
+	.uleb128 0x31
+	.4byte	.LVL1414
+	.4byte	0x4561
+	.uleb128 0x31
+	.4byte	.LVL1415
+	.4byte	0x1e6d
+	.byte	0
+	.uleb128 0x54
+	.4byte	0x17c6
+	.4byte	.LBB514
+	.4byte	.LBE514-.LBB514
+	.byte	0x3
+	.2byte	0x34f
+	.4byte	0x526b
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB515
+	.4byte	.LBE515-.LBB515
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB516
+	.4byte	.LBE516-.LBB516
+	.uleb128 0x30
+	.4byte	0x6129
+	.uleb128 0x30
+	.4byte	0x612e
+	.uleb128 0x31
+	.4byte	.LVL1419
+	.4byte	0x672a
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL1374
+	.4byte	0x377a
+	.uleb128 0x31
+	.4byte	.LVL1380
+	.4byte	0x4f66
+	.uleb128 0x31
+	.4byte	.LVL1395
+	.4byte	0x1c72
+	.uleb128 0x31
+	.4byte	.LVL1398
+	.4byte	0x3929
+	.uleb128 0x31
+	.4byte	.LVL1405
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL1411
+	.4byte	0x176f
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF626
+	.byte	0x3
+	.2byte	0x325
+	.4byte	0x64
+	.4byte	.LFB163
+	.4byte	.LFE163-.LFB163
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x52c6
+	.uleb128 0x31
+	.4byte	.LVL1210
+	.4byte	0x52c6
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF627
+	.byte	0x3
+	.2byte	0x31c
+	.4byte	0x64
+	.4byte	.LFB162
+	.4byte	.LFE162-.LFB162
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5305
+	.uleb128 0x31
+	.4byte	.LVL1206
+	.4byte	0x4f66
+	.uleb128 0x31
+	.4byte	.LVL1207
+	.4byte	0x39f4
+	.uleb128 0x31
+	.4byte	.LVL1208
+	.4byte	0x372d
+	.uleb128 0x31
+	.4byte	.LVL1209
+	.4byte	0x3588
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF628
+	.byte	0x3
+	.2byte	0x2e6
+	.4byte	0x64
+	.4byte	.LFB161
+	.4byte	.LFE161-.LFB161
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5394
+	.uleb128 0x3e
+	.4byte	.LASF629
+	.byte	0x3
+	.2byte	0x2e8
+	.4byte	0x5394
+	.uleb128 0x40
+	.4byte	.LASF630
+	.byte	0x3
+	.2byte	0x2f3
+	.uleb128 0x53
+	.4byte	.LBB526
+	.4byte	.LBE526-.LBB526
+	.4byte	0x5354
+	.uleb128 0x3f
+	.ascii	"i\000"
+	.byte	0x3
+	.2byte	0x310
+	.4byte	0x30c
+	.uleb128 0x31
+	.4byte	.LVL1629
+	.4byte	0x1c72
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL1622
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1623
+	.4byte	0x5868
+	.uleb128 0x31
+	.4byte	.LVL1624
+	.4byte	0x56e0
+	.uleb128 0x31
+	.4byte	.LVL1625
+	.4byte	0x55e4
+	.uleb128 0x31
+	.4byte	.LVL1626
+	.4byte	0x4407
+	.uleb128 0x31
+	.4byte	.LVL1627
+	.4byte	0x4834
+	.uleb128 0x31
+	.4byte	.LVL1628
+	.4byte	0x2805
+	.byte	0
+	.uleb128 0x8
+	.byte	0x4
+	.4byte	0x419
+	.uleb128 0x4d
+	.4byte	.LASF631
+	.byte	0x3
+	.2byte	0x26e
+	.4byte	0x64
+	.4byte	.LFB160
+	.4byte	.LFE160-.LFB160
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5493
+	.uleb128 0x3e
+	.4byte	.LASF500
+	.byte	0x3
+	.2byte	0x270
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF632
+	.byte	0x3
+	.2byte	0x270
+	.4byte	0x301
+	.4byte	.LLST298
+	.uleb128 0x45
+	.4byte	.LASF633
+	.byte	0x3
+	.2byte	0x271
+	.4byte	0x301
+	.4byte	.LLST299
+	.uleb128 0x3f
+	.ascii	"i\000"
+	.byte	0x3
+	.2byte	0x272
+	.4byte	0x301
+	.uleb128 0x48
+	.4byte	.LASF634
+	.byte	0x3
+	.2byte	0x2bc
+	.4byte	.L1779
+	.uleb128 0x48
+	.4byte	.LASF635
+	.byte	0x3
+	.2byte	0x2cc
+	.4byte	.L1781
+	.uleb128 0x31
+	.4byte	.LVL1591
+	.4byte	0x4407
+	.uleb128 0x31
+	.4byte	.LVL1592
+	.4byte	0x4834
+	.uleb128 0x31
+	.4byte	.LVL1593
+	.4byte	0x460c
+	.uleb128 0x31
+	.4byte	.LVL1600
+	.4byte	0x499b
+	.uleb128 0x31
+	.4byte	.LVL1601
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL1602
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL1603
+	.4byte	0x2c45
+	.uleb128 0x31
+	.4byte	.LVL1605
+	.4byte	0x5493
+	.uleb128 0x31
+	.4byte	.LVL1609
+	.4byte	0x58b9
+	.uleb128 0x31
+	.4byte	.LVL1610
+	.4byte	0x4407
+	.uleb128 0x31
+	.4byte	.LVL1612
+	.4byte	0x5493
+	.uleb128 0x31
+	.4byte	.LVL1614
+	.4byte	0x5493
+	.uleb128 0x31
+	.4byte	.LVL1618
+	.4byte	0x2c45
+	.uleb128 0x31
+	.4byte	.LVL1619
+	.4byte	0x4250
+	.uleb128 0x31
+	.4byte	.LVL1620
+	.4byte	0x3588
+	.uleb128 0x31
+	.4byte	.LVL1621
+	.4byte	0x2805
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF636
+	.byte	0x3
+	.2byte	0x20f
+	.4byte	0x64
+	.4byte	.LFB159
+	.4byte	.LFE159-.LFB159
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x55ba
+	.uleb128 0x44
+	.4byte	.LASF500
+	.byte	0x3
+	.2byte	0x20f
+	.4byte	0x301
+	.4byte	.LLST100
+	.uleb128 0x44
+	.4byte	.LASF637
+	.byte	0x3
+	.2byte	0x20f
+	.4byte	0x2f6
+	.4byte	.LLST101
+	.uleb128 0x45
+	.4byte	.LASF632
+	.byte	0x3
+	.2byte	0x211
+	.4byte	0x301
+	.4byte	.LLST102
+	.uleb128 0x3e
+	.4byte	.LASF357
+	.byte	0x3
+	.2byte	0x211
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF376
+	.byte	0x3
+	.2byte	0x212
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF178
+	.byte	0x3
+	.2byte	0x212
+	.4byte	0x301
+	.uleb128 0x45
+	.4byte	.LASF638
+	.byte	0x3
+	.2byte	0x213
+	.4byte	0x301
+	.4byte	.LLST103
+	.uleb128 0x45
+	.4byte	.LASF639
+	.byte	0x3
+	.2byte	0x214
+	.4byte	0x301
+	.4byte	.LLST104
+	.uleb128 0x45
+	.4byte	.LASF640
+	.byte	0x3
+	.2byte	0x215
+	.4byte	0x301
+	.4byte	.LLST105
+	.uleb128 0x45
+	.4byte	.LASF641
+	.byte	0x3
+	.2byte	0x216
+	.4byte	0x301
+	.4byte	.LLST106
+	.uleb128 0x48
+	.4byte	.LASF642
+	.byte	0x3
+	.2byte	0x240
+	.4byte	.L495
+	.uleb128 0x31
+	.4byte	.LVL418
+	.4byte	0x1954
+	.uleb128 0x31
+	.4byte	.LVL425
+	.4byte	0x19ea
+	.uleb128 0x31
+	.4byte	.LVL433
+	.4byte	0x1954
+	.uleb128 0x31
+	.4byte	.LVL437
+	.4byte	0x45c9
+	.uleb128 0x31
+	.4byte	.LVL438
+	.4byte	0x55ba
+	.uleb128 0x31
+	.4byte	.LVL439
+	.4byte	0x4afe
+	.uleb128 0x31
+	.4byte	.LVL444
+	.4byte	0x4b59
+	.uleb128 0x31
+	.4byte	.LVL449
+	.4byte	0x45c9
+	.uleb128 0x31
+	.4byte	.LVL450
+	.4byte	0x55ba
+	.uleb128 0x31
+	.4byte	.LVL451
+	.4byte	0x4afe
+	.uleb128 0x31
+	.4byte	.LVL454
+	.4byte	0x4b59
+	.uleb128 0x31
+	.4byte	.LVL456
+	.4byte	0x436e
+	.byte	0
+	.uleb128 0x3c
+	.4byte	.LASF643
+	.byte	0x3
+	.2byte	0x201
+	.4byte	0x64
+	.byte	0x1
+	.4byte	0x55e4
+	.uleb128 0x3d
+	.4byte	.LASF178
+	.byte	0x3
+	.2byte	0x201
+	.4byte	0x301
+	.uleb128 0x3e
+	.4byte	.LASF644
+	.byte	0x3
+	.2byte	0x203
+	.4byte	0x301
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF645
+	.byte	0x3
+	.2byte	0x1ec
+	.4byte	0x64
+	.4byte	.LFB157
+	.4byte	.LFE157-.LFB157
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x56e0
+	.uleb128 0x54
+	.4byte	0x17c6
+	.4byte	.LBB408
+	.4byte	.LBE408-.LBB408
+	.byte	0x3
+	.2byte	0x1f9
+	.4byte	0x5658
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB409
+	.4byte	.LBE409-.LBB409
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB410
+	.4byte	.LBE410-.LBB410
+	.uleb128 0x30
+	.4byte	0x6129
+	.uleb128 0x30
+	.4byte	0x612e
+	.uleb128 0x31
+	.4byte	.LVL747
+	.4byte	0x672a
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x54
+	.4byte	0x17c6
+	.4byte	.LBB411
+	.4byte	.LBE411-.LBB411
+	.byte	0x3
+	.2byte	0x1fa
+	.4byte	0x56b2
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB412
+	.4byte	.LBE412-.LBB412
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB413
+	.4byte	.LBE413-.LBB413
+	.uleb128 0x30
+	.4byte	0x6129
+	.uleb128 0x30
+	.4byte	0x612e
+	.uleb128 0x31
+	.4byte	.LVL748
+	.4byte	0x672a
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL744
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL745
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL746
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL749
+	.4byte	0x230f
+	.uleb128 0x31
+	.4byte	.LVL750
+	.4byte	0x31bc
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF646
+	.byte	0x3
+	.2byte	0x116
+	.4byte	0x64
+	.4byte	.LFB156
+	.4byte	.LFE156-.LFB156
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5868
+	.uleb128 0x52
+	.ascii	"i\000"
+	.byte	0x3
+	.2byte	0x118
+	.4byte	0x30c
+	.4byte	.LLST114
+	.uleb128 0x3e
+	.4byte	.LASF647
+	.byte	0x3
+	.2byte	0x119
+	.4byte	0x30c
+	.uleb128 0x38
+	.4byte	.LASF362
+	.4byte	0x48f4
+	.uleb128 0x5
+	.byte	0x3
+	.4byte	__func__.6287
+	.uleb128 0x31
+	.4byte	.LVL479
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL480
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL481
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL482
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL483
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL484
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL485
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL486
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL487
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL488
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL489
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL490
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL491
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL492
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL493
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL494
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL495
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL496
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL497
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL498
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL499
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL500
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL501
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL502
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL503
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL504
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL505
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL506
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL507
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL508
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL509
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL510
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL511
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL512
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL513
+	.4byte	0x6740
+	.uleb128 0x31
+	.4byte	.LVL516
+	.4byte	0x671f
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF648
+	.byte	0x3
+	.byte	0xb6
+	.4byte	0x64
+	.4byte	.LFB155
+	.4byte	.LFE155-.LFB155
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x58b9
+	.uleb128 0x23
+	.4byte	.LASF629
+	.byte	0x3
+	.byte	0xb6
+	.4byte	0x5394
+	.4byte	.LLST11
+	.uleb128 0x4a
+	.ascii	"i\000"
+	.byte	0x3
+	.byte	0xb8
+	.4byte	0x30c
+	.4byte	.LLST12
+	.uleb128 0x31
+	.4byte	.LVL28
+	.4byte	0x58fa
+	.uleb128 0x31
+	.4byte	.LVL29
+	.4byte	0x58fa
+	.uleb128 0x31
+	.4byte	.LVL32
+	.4byte	0x58b9
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF649
+	.byte	0x3
+	.byte	0xa4
+	.4byte	0x64
+	.4byte	.LFB154
+	.4byte	.LFE154-.LFB154
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x58e2
+	.uleb128 0x23
+	.4byte	.LASF650
+	.byte	0x3
+	.byte	0xa4
+	.4byte	0x301
+	.4byte	.LLST10
+	.byte	0
+	.uleb128 0x58
+	.4byte	.LASF651
+	.byte	0x3
+	.byte	0x9e
+	.byte	0x1
+	.4byte	0x58fa
+	.uleb128 0x34
+	.4byte	.LASF652
+	.byte	0x3
+	.byte	0x9e
+	.4byte	0x30c
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF653
+	.byte	0x3
+	.byte	0x7f
+	.4byte	0x301
+	.4byte	.LFB152
+	.4byte	.LFE152-.LFB152
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5939
+	.uleb128 0x2b
+	.ascii	"num\000"
+	.byte	0x3
+	.byte	0x7f
+	.4byte	0x30c
+	.4byte	.LLST9
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x3
+	.byte	0x81
+	.4byte	0x301
+	.uleb128 0x20
+	.4byte	.LASF654
+	.byte	0x3
+	.byte	0x82
+	.4byte	0x30c
+	.uleb128 0x1
+	.byte	0x52
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF655
+	.byte	0x3
+	.byte	0x71
+	.4byte	0x64
+	.4byte	.LFB151
+	.4byte	.LFE151-.LFB151
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x597f
+	.uleb128 0x23
+	.4byte	.LASF85
+	.byte	0x3
+	.byte	0x71
+	.4byte	0xb6
+	.4byte	.LLST67
+	.uleb128 0x29
+	.ascii	"buf\000"
+	.byte	0x3
+	.byte	0x73
+	.4byte	0xb6
+	.uleb128 0x31
+	.4byte	.LVL286
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL287
+	.4byte	0x597f
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF656
+	.byte	0x3
+	.byte	0xa
+	.4byte	0x64
+	.4byte	.LFB150
+	.4byte	.LFE150-.LFB150
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5c75
+	.uleb128 0x23
+	.4byte	.LASF85
+	.byte	0x3
+	.byte	0xa
+	.4byte	0xb6
+	.4byte	.LLST64
+	.uleb128 0x29
+	.ascii	"i\000"
+	.byte	0x3
+	.byte	0xc
+	.4byte	0x64
+	.uleb128 0x29
+	.ascii	"buf\000"
+	.byte	0x3
+	.byte	0xd
+	.4byte	0xb6
+	.uleb128 0x53
+	.4byte	.LBB284
+	.4byte	.LBE284-.LBB284
+	.4byte	0x59ea
+	.uleb128 0x2c
+	.4byte	.LASF392
+	.byte	0x3
+	.byte	0x57
+	.4byte	0x301
+	.4byte	.LLST65
+	.uleb128 0x31
+	.4byte	.LVL277
+	.4byte	0x3fa6
+	.uleb128 0x31
+	.4byte	.LVL279
+	.4byte	0x674b
+	.byte	0
+	.uleb128 0x53
+	.4byte	.LBB285
+	.4byte	.LBE285-.LBB285
+	.4byte	0x5a10
+	.uleb128 0x2c
+	.4byte	.LASF392
+	.byte	0x3
+	.byte	0x60
+	.4byte	0x301
+	.4byte	.LLST66
+	.uleb128 0x31
+	.4byte	.LVL283
+	.4byte	0x674b
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL207
+	.4byte	0x6757
+	.uleb128 0x31
+	.4byte	.LVL208
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL209
+	.4byte	0x6757
+	.uleb128 0x31
+	.4byte	.LVL210
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL211
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL212
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL213
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL214
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL215
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL216
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL217
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL218
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL219
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL220
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL221
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL222
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL223
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL224
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL225
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL226
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL227
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL228
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL229
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL230
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL231
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL232
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL233
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL234
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL235
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL236
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL237
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL238
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL239
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL240
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL241
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL242
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL243
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL244
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL245
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL246
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL247
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL248
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL249
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL250
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL251
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL252
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL253
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL254
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL255
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL256
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL257
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL258
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL259
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL260
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL261
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL262
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL263
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL264
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL265
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL266
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL267
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL268
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL269
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL270
+	.4byte	0x277b
+	.uleb128 0x31
+	.4byte	.LVL271
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL272
+	.4byte	0x272c
+	.uleb128 0x31
+	.4byte	.LVL273
+	.4byte	0x674b
+	.uleb128 0x31
+	.4byte	.LVL276
+	.4byte	0x674b
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x3409
+	.4byte	.LFB286
+	.4byte	.LFE286-.LFB286
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5c97
+	.uleb128 0x61
+	.4byte	0x3416
+	.4byte	.LLST8
+	.uleb128 0x2e
+	.4byte	0x3422
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x58e2
+	.4byte	.LFB153
+	.4byte	.LFE153-.LFB153
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5cb2
+	.uleb128 0x62
+	.4byte	0x58ee
+	.uleb128 0x1
+	.byte	0x50
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x55ba
+	.4byte	.LFB158
+	.4byte	.LFE158-.LFB158
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5cea
+	.uleb128 0x61
+	.4byte	0x55cb
+	.4byte	.LLST13
+	.uleb128 0x30
+	.4byte	0x55d7
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0
+	.uleb128 0x2e
+	.4byte	0x55cb
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0
+	.uleb128 0x30
+	.4byte	0x5cce
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x63
+	.4byte	0x4af6
+	.4byte	.LFB174
+	.4byte	.LFE174-.LFB174
+	.uleb128 0x1
+	.byte	0x9c
+	.uleb128 0x63
+	.4byte	0x43fb
+	.4byte	.LFB188
+	.4byte	.LFE188-.LFB188
+	.uleb128 0x1
+	.byte	0x9c
+	.uleb128 0x63
+	.4byte	0x43ef
+	.4byte	.LFB189
+	.4byte	.LFE189-.LFB189
+	.uleb128 0x1
+	.byte	0x9c
+	.uleb128 0x60
+	.4byte	0x4206
+	.4byte	.LFB195
+	.4byte	.LFE195-.LFB195
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5d65
+	.uleb128 0x61
+	.4byte	0x4212
+	.4byte	.LLST37
+	.uleb128 0x30
+	.4byte	0x421d
+	.uleb128 0x39
+	.4byte	.Ldebug_ranges0+0x68
+	.4byte	0x5d5b
+	.uleb128 0x2e
+	.4byte	0x4212
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x68
+	.uleb128 0x30
+	.4byte	0x5d33
+	.uleb128 0x24
+	.4byte	.LVL120
+	.4byte	0x671f
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL119
+	.4byte	0x4178
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x422b
+	.4byte	.LFB194
+	.4byte	.LFE194-.LFB194
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5db3
+	.uleb128 0x61
+	.4byte	0x4237
+	.4byte	.LLST40
+	.uleb128 0x30
+	.4byte	0x4242
+	.uleb128 0x39
+	.4byte	.Ldebug_ranges0+0x80
+	.4byte	0x5da9
+	.uleb128 0x2e
+	.4byte	0x4237
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x80
+	.uleb128 0x30
+	.4byte	0x5d81
+	.uleb128 0x24
+	.4byte	.LVL130
+	.4byte	0x671f
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL129
+	.4byte	0x4109
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x3f27
+	.4byte	.LFB202
+	.4byte	.LFE202-.LFB202
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5e69
+	.uleb128 0x61
+	.4byte	0x3f38
+	.4byte	.LLST49
+	.uleb128 0x30
+	.4byte	0x3f44
+	.uleb128 0x30
+	.4byte	0x3f50
+	.uleb128 0x30
+	.4byte	0x3f5c
+	.uleb128 0x30
+	.4byte	0x3f68
+	.uleb128 0x30
+	.4byte	0x3f74
+	.uleb128 0x30
+	.4byte	0x3f80
+	.uleb128 0x30
+	.4byte	0x3f8c
+	.uleb128 0x30
+	.4byte	0x3f98
+	.uleb128 0x33
+	.4byte	.LBB268
+	.4byte	.LBE268-.LBB268
+	.uleb128 0x2e
+	.4byte	0x3f38
+	.uleb128 0x33
+	.4byte	.LBB269
+	.4byte	.LBE269-.LBB269
+	.uleb128 0x30
+	.4byte	0x5dcf
+	.uleb128 0x30
+	.4byte	0x5dd4
+	.uleb128 0x64
+	.4byte	0x5dd9
+	.4byte	.LLST50
+	.uleb128 0x30
+	.4byte	0x5dde
+	.uleb128 0x64
+	.4byte	0x5de3
+	.4byte	.LLST51
+	.uleb128 0x64
+	.4byte	0x5de8
+	.4byte	.LLST52
+	.uleb128 0x30
+	.4byte	0x5ded
+	.uleb128 0x30
+	.4byte	0x5df2
+	.uleb128 0x31
+	.4byte	.LVL163
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL165
+	.4byte	0x4087
+	.uleb128 0x31
+	.4byte	.LVL166
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL167
+	.4byte	0x4206
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x3d77
+	.4byte	.LFB205
+	.4byte	.LFE205-.LFB205
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5ed7
+	.uleb128 0x61
+	.4byte	0x3d88
+	.4byte	.LLST53
+	.uleb128 0x64
+	.4byte	0x3d94
+	.4byte	.LLST54
+	.uleb128 0x30
+	.4byte	0x3da0
+	.uleb128 0x30
+	.4byte	0x3dac
+	.uleb128 0x53
+	.4byte	.LBB272
+	.4byte	.LBE272-.LBB272
+	.4byte	0x5ecd
+	.uleb128 0x2e
+	.4byte	0x3d88
+	.uleb128 0x33
+	.4byte	.LBB273
+	.4byte	.LBE273-.LBB273
+	.uleb128 0x30
+	.4byte	0x5e85
+	.uleb128 0x30
+	.4byte	0x5e8e
+	.uleb128 0x30
+	.4byte	0x5e93
+	.uleb128 0x31
+	.4byte	.LVL171
+	.4byte	0x671f
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL172
+	.4byte	0x4250
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x3709
+	.4byte	.LFB216
+	.4byte	.LFE216-.LFB216
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5f0f
+	.uleb128 0x61
+	.4byte	0x3716
+	.4byte	.LLST55
+	.uleb128 0x30
+	.4byte	0x3722
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x98
+	.uleb128 0x2e
+	.4byte	0x3716
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x98
+	.uleb128 0x30
+	.4byte	0x5ef3
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x3409
+	.4byte	.LFB222
+	.4byte	.LFE222-.LFB222
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5f3e
+	.uleb128 0x61
+	.4byte	0x3416
+	.4byte	.LLST56
+	.uleb128 0x61
+	.4byte	0x3422
+	.4byte	.LLST57
+	.uleb128 0x24
+	.4byte	.LVL178
+	.4byte	0x5c75
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x2d01
+	.4byte	.LFB232
+	.4byte	.LFE232-.LFB232
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5f7e
+	.uleb128 0x62
+	.4byte	0x2d0e
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x30
+	.4byte	0x2d1a
+	.uleb128 0x33
+	.4byte	.LBB282
+	.4byte	.LBE282-.LBB282
+	.uleb128 0x2e
+	.4byte	0x2d0e
+	.uleb128 0x33
+	.4byte	.LBB283
+	.4byte	.LBE283-.LBB283
+	.uleb128 0x65
+	.4byte	0x5f58
+	.uleb128 0x1
+	.byte	0x51
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x2674
+	.4byte	.LFB247
+	.4byte	.LFE247-.LFB247
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5fb3
+	.uleb128 0x61
+	.4byte	0x2685
+	.4byte	.LLST72
+	.uleb128 0x33
+	.4byte	.LBB288
+	.4byte	.LBE288-.LBB288
+	.uleb128 0x2e
+	.4byte	0x2685
+	.uleb128 0x31
+	.4byte	.LVL308
+	.4byte	0x422b
+	.byte	0
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x1e04
+	.4byte	.LFB266
+	.4byte	.LFE266-.LFB266
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5fd9
+	.uleb128 0x31
+	.4byte	.LVL345
+	.4byte	0x4561
+	.uleb128 0x31
+	.4byte	.LVL346
+	.4byte	0x1e6d
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x1900
+	.4byte	.LFB275
+	.4byte	.LFE275-.LFB275
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x60ee
+	.uleb128 0x61
+	.4byte	0x1910
+	.4byte	.LLST107
+	.uleb128 0x30
+	.4byte	0x191b
+	.uleb128 0x30
+	.4byte	0x1926
+	.uleb128 0x30
+	.4byte	0x1931
+	.uleb128 0x33
+	.4byte	.LBB313
+	.4byte	.LBE313-.LBB313
+	.uleb128 0x2e
+	.4byte	0x1910
+	.uleb128 0x33
+	.4byte	.LBB314
+	.4byte	.LBE314-.LBB314
+	.uleb128 0x30
+	.4byte	0x5ff5
+	.uleb128 0x65
+	.4byte	0x5ffa
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -80
+	.uleb128 0x65
+	.4byte	0x5fff
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -100
+	.uleb128 0x66
+	.4byte	0x193c
+	.uleb128 0x2d
+	.4byte	0x17c6
+	.4byte	.LBB315
+	.4byte	.Ldebug_ranges0+0xd0
+	.byte	0x1
+	.byte	0xa7
+	.4byte	0x6088
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0xd0
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0xd0
+	.uleb128 0x30
+	.4byte	0x17f2
+	.uleb128 0x30
+	.4byte	0x17fd
+	.uleb128 0x31
+	.4byte	.LVL459
+	.4byte	0x6714
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x2d
+	.4byte	0x17c6
+	.4byte	.LBB321
+	.4byte	.Ldebug_ranges0+0xe8
+	.byte	0x1
+	.byte	0xa8
+	.4byte	0x60d0
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0xe8
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0xe8
+	.uleb128 0x30
+	.4byte	0x17f2
+	.uleb128 0x30
+	.4byte	0x17fd
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL460
+	.4byte	0x1954
+	.uleb128 0x31
+	.4byte	.LVL461
+	.4byte	0x19ea
+	.uleb128 0x31
+	.4byte	.LVL462
+	.4byte	0x1954
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x17c6
+	.4byte	.LFB277
+	.4byte	.LFE277-.LFB277
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x616b
+	.uleb128 0x61
+	.4byte	0x17d6
+	.4byte	.LLST111
+	.uleb128 0x61
+	.4byte	0x17df
+	.4byte	.LLST112
+	.uleb128 0x61
+	.4byte	0x17e8
+	.4byte	.LLST113
+	.uleb128 0x53
+	.4byte	.LBB353
+	.4byte	.LBE353-.LBB353
+	.4byte	0x6134
+	.uleb128 0x30
+	.4byte	0x17f2
+	.uleb128 0x30
+	.4byte	0x17fd
+	.byte	0
+	.uleb128 0x33
+	.4byte	.LBB354
+	.4byte	.LBE354-.LBB354
+	.uleb128 0x2e
+	.4byte	0x17e8
+	.uleb128 0x2e
+	.4byte	0x17df
+	.uleb128 0x2e
+	.4byte	0x17d6
+	.uleb128 0x33
+	.4byte	.LBB355
+	.4byte	.LBE355-.LBB355
+	.uleb128 0x30
+	.4byte	0x6129
+	.uleb128 0x30
+	.4byte	0x612e
+	.uleb128 0x31
+	.4byte	.LVL478
+	.4byte	0x6714
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x1d5a
+	.4byte	.LFB268
+	.4byte	.LFE268-.LFB268
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6209
+	.uleb128 0x65
+	.4byte	0x1d6b
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x30
+	.4byte	0x1d77
+	.uleb128 0x30
+	.4byte	0x1d81
+	.uleb128 0x30
+	.4byte	0x1d8d
+	.uleb128 0x39
+	.4byte	.Ldebug_ranges0+0x150
+	.4byte	0x61f5
+	.uleb128 0x30
+	.4byte	0x617e
+	.uleb128 0x30
+	.4byte	0x6185
+	.uleb128 0x64
+	.4byte	0x618a
+	.4byte	.LLST146
+	.uleb128 0x65
+	.4byte	0x618f
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -80
+	.uleb128 0x53
+	.4byte	.LBB376
+	.4byte	.LBE376-.LBB376
+	.4byte	0x61eb
+	.uleb128 0x65
+	.4byte	0x1d9e
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -100
+	.uleb128 0x31
+	.4byte	.LVL642
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL643
+	.4byte	0x4561
+	.uleb128 0x31
+	.4byte	.LVL644
+	.4byte	0x1e6d
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL641
+	.4byte	0x3929
+	.byte	0
+	.uleb128 0x33
+	.4byte	.LBB379
+	.4byte	.LBE379-.LBB379
+	.uleb128 0x64
+	.4byte	0x1dac
+	.4byte	.LLST147
+	.byte	0
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x1dba
+	.4byte	.LFB267
+	.4byte	.LFE267-.LFB267
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6294
+	.uleb128 0x61
+	.4byte	0x1dcb
+	.4byte	.LLST188
+	.uleb128 0x30
+	.4byte	0x1dd7
+	.uleb128 0x30
+	.4byte	0x1de3
+	.uleb128 0x30
+	.4byte	0x1ded
+	.uleb128 0x30
+	.4byte	0x1df7
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x1a0
+	.uleb128 0x2e
+	.4byte	0x1dcb
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x1a0
+	.uleb128 0x30
+	.4byte	0x6225
+	.uleb128 0x65
+	.4byte	0x622a
+	.uleb128 0x1
+	.byte	0x55
+	.uleb128 0x64
+	.4byte	0x622f
+	.4byte	.LLST189
+	.uleb128 0x65
+	.4byte	0x6234
+	.uleb128 0x1
+	.byte	0x59
+	.uleb128 0x31
+	.4byte	.LVL867
+	.4byte	0x1e04
+	.uleb128 0x31
+	.4byte	.LVL869
+	.4byte	0x45c9
+	.uleb128 0x31
+	.4byte	.LVL870
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL871
+	.4byte	0x4b59
+	.uleb128 0x31
+	.4byte	.LVL872
+	.4byte	0x499b
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x23a4
+	.4byte	.LFB251
+	.4byte	.LFE251-.LFB251
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x630e
+	.uleb128 0x61
+	.4byte	0x23b5
+	.4byte	.LLST190
+	.uleb128 0x30
+	.4byte	0x23c1
+	.uleb128 0x53
+	.4byte	.LBB440
+	.4byte	.LBE440-.LBB440
+	.4byte	0x6304
+	.uleb128 0x2e
+	.4byte	0x23b5
+	.uleb128 0x33
+	.4byte	.LBB441
+	.4byte	.LBE441-.LBB441
+	.uleb128 0x30
+	.4byte	0x62b0
+	.uleb128 0x31
+	.4byte	.LVL877
+	.4byte	0x4087
+	.uleb128 0x31
+	.4byte	.LVL878
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL879
+	.4byte	0x2674
+	.uleb128 0x31
+	.4byte	.LVL880
+	.4byte	0x1dba
+	.uleb128 0x31
+	.4byte	.LVL881
+	.4byte	0x671f
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL884
+	.4byte	0x3f27
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x364f
+	.4byte	.LFB218
+	.4byte	.LFE218-.LFB218
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6386
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x1b8
+	.uleb128 0x64
+	.4byte	0x365d
+	.4byte	.LLST192
+	.uleb128 0x64
+	.4byte	0x3669
+	.4byte	.LLST193
+	.uleb128 0x64
+	.4byte	0x3675
+	.4byte	.LLST194
+	.uleb128 0x65
+	.4byte	0x3681
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -52
+	.uleb128 0x30
+	.4byte	0x368d
+	.uleb128 0x31
+	.4byte	.LVL892
+	.4byte	0x3929
+	.uleb128 0x31
+	.4byte	.LVL893
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL896
+	.4byte	0x17c6
+	.uleb128 0x31
+	.4byte	.LVL898
+	.4byte	0x23e4
+	.uleb128 0x31
+	.4byte	.LVL899
+	.4byte	0x19ea
+	.uleb128 0x31
+	.4byte	.LVL900
+	.4byte	0x232e
+	.byte	0
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x2b73
+	.4byte	.LFB236
+	.4byte	.LFE236-.LFB236
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x63a3
+	.uleb128 0x24
+	.4byte	.LVL1107
+	.4byte	0x3850
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x342f
+	.4byte	.LFB221
+	.4byte	.LFE221-.LFB221
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x63d2
+	.uleb128 0x31
+	.4byte	.LVL1135
+	.4byte	0x377a
+	.uleb128 0x31
+	.4byte	.LVL1136
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1137
+	.4byte	0x17c6
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x1f6f
+	.4byte	.LFB261
+	.4byte	.LFE261-.LFB261
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6401
+	.uleb128 0x31
+	.4byte	.LVL1262
+	.4byte	0x1f78
+	.uleb128 0x31
+	.4byte	.LVL1263
+	.4byte	0x369b
+	.uleb128 0x31
+	.4byte	.LVL1264
+	.4byte	0x20c4
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x1c72
+	.4byte	.LFB269
+	.4byte	.LFE269-.LFB269
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x65f2
+	.uleb128 0x61
+	.4byte	0x1c83
+	.4byte	.LLST255
+	.uleb128 0x61
+	.4byte	0x1c8f
+	.4byte	.LLST256
+	.uleb128 0x30
+	.4byte	0x1c9b
+	.uleb128 0x30
+	.4byte	0x1ca7
+	.uleb128 0x30
+	.4byte	0x1cb3
+	.uleb128 0x30
+	.4byte	0x1cbf
+	.uleb128 0x30
+	.4byte	0x1ccb
+	.uleb128 0x30
+	.4byte	0x1cd7
+	.uleb128 0x30
+	.4byte	0x1ce3
+	.uleb128 0x30
+	.4byte	0x1cef
+	.uleb128 0x30
+	.4byte	0x1cfb
+	.uleb128 0x30
+	.4byte	0x1d07
+	.uleb128 0x30
+	.4byte	0x1d23
+	.uleb128 0x39
+	.4byte	.Ldebug_ranges0+0x208
+	.4byte	0x65e8
+	.uleb128 0x2e
+	.4byte	0x1c8f
+	.uleb128 0x2e
+	.4byte	0x1c83
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x208
+	.uleb128 0x64
+	.4byte	0x6426
+	.4byte	.LLST257
+	.uleb128 0x64
+	.4byte	0x642b
+	.4byte	.LLST258
+	.uleb128 0x64
+	.4byte	0x6430
+	.4byte	.LLST259
+	.uleb128 0x30
+	.4byte	0x6435
+	.uleb128 0x30
+	.4byte	0x643a
+	.uleb128 0x30
+	.4byte	0x643f
+	.uleb128 0x64
+	.4byte	0x6444
+	.4byte	.LLST260
+	.uleb128 0x64
+	.4byte	0x6449
+	.4byte	.LLST261
+	.uleb128 0x64
+	.4byte	0x644e
+	.4byte	.LLST262
+	.uleb128 0x64
+	.4byte	0x6453
+	.4byte	.LLST263
+	.uleb128 0x66
+	.4byte	0x1d13
+	.uleb128 0x66
+	.4byte	0x1d1b
+	.uleb128 0x30
+	.4byte	0x6458
+	.uleb128 0x39
+	.4byte	.Ldebug_ranges0+0x230
+	.4byte	0x650e
+	.uleb128 0x30
+	.4byte	0x1d31
+	.uleb128 0x31
+	.4byte	.LVL1289
+	.4byte	0x2692
+	.uleb128 0x31
+	.4byte	.LVL1290
+	.4byte	0x3fa6
+	.uleb128 0x31
+	.4byte	.LVL1291
+	.4byte	0x3fa6
+	.uleb128 0x31
+	.4byte	.LVL1292
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1294
+	.4byte	0x1e04
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL1306
+	.4byte	0x2255
+	.uleb128 0x31
+	.4byte	.LVL1307
+	.4byte	0x2c45
+	.uleb128 0x31
+	.4byte	.LVL1312
+	.4byte	0x3fa6
+	.uleb128 0x31
+	.4byte	.LVL1315
+	.4byte	0x1d5a
+	.uleb128 0x31
+	.4byte	.LVL1316
+	.4byte	0x3fa6
+	.uleb128 0x31
+	.4byte	.LVL1317
+	.4byte	0x232e
+	.uleb128 0x31
+	.4byte	.LVL1321
+	.4byte	0x2255
+	.uleb128 0x31
+	.4byte	.LVL1322
+	.4byte	0x232e
+	.uleb128 0x31
+	.4byte	.LVL1323
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1324
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1325
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1326
+	.4byte	0x2c45
+	.uleb128 0x31
+	.4byte	.LVL1328
+	.4byte	0x1d5a
+	.uleb128 0x31
+	.4byte	.LVL1343
+	.4byte	0x1af8
+	.uleb128 0x31
+	.4byte	.LVL1345
+	.4byte	0x671f
+	.uleb128 0x31
+	.4byte	.LVL1347
+	.4byte	0x3929
+	.uleb128 0x31
+	.4byte	.LVL1348
+	.4byte	0x1f15
+	.uleb128 0x31
+	.4byte	.LVL1351
+	.4byte	0x2287
+	.uleb128 0x31
+	.4byte	.LVL1352
+	.4byte	0x1ea1
+	.uleb128 0x31
+	.4byte	.LVL1359
+	.4byte	0x1ea1
+	.uleb128 0x31
+	.4byte	.LVL1360
+	.4byte	0x23a4
+	.uleb128 0x31
+	.4byte	.LVL1361
+	.4byte	0x4f66
+	.uleb128 0x31
+	.4byte	.LVL1362
+	.4byte	0x39f4
+	.uleb128 0x31
+	.4byte	.LVL1363
+	.4byte	0x3588
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL1293
+	.4byte	0x20c4
+	.byte	0
+	.uleb128 0x60
+	.4byte	0x2805
+	.4byte	.LFB242
+	.4byte	.LFE242-.LFB242
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6700
+	.uleb128 0x30
+	.4byte	0x2816
+	.uleb128 0x53
+	.4byte	.LBB523
+	.4byte	.LBE523-.LBB523
+	.4byte	0x669c
+	.uleb128 0x64
+	.4byte	0x6605
+	.4byte	.LLST297
+	.uleb128 0x39
+	.4byte	.Ldebug_ranges0+0x268
+	.4byte	0x662f
+	.uleb128 0x30
+	.4byte	0x2821
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL1577
+	.4byte	0x2a84
+	.uleb128 0x31
+	.4byte	.LVL1578
+	.4byte	0x2a84
+	.uleb128 0x31
+	.4byte	.LVL1579
+	.4byte	0x369b
+	.uleb128 0x31
+	.4byte	.LVL1580
+	.4byte	0x369b
+	.uleb128 0x31
+	.4byte	.LVL1581
+	.4byte	0x39f4
+	.uleb128 0x31
+	.4byte	.LVL1582
+	.4byte	0x3588
+	.uleb128 0x31
+	.4byte	.LVL1583
+	.4byte	0x3588
+	.uleb128 0x31
+	.4byte	.LVL1586
+	.4byte	0x1e6d
+	.uleb128 0x31
+	.4byte	.LVL1587
+	.4byte	0x1e6d
+	.uleb128 0x31
+	.4byte	.LVL1588
+	.4byte	0x2460
+	.uleb128 0x31
+	.4byte	.LVL1589
+	.4byte	0x2460
+	.uleb128 0x31
+	.4byte	.LVL1590
+	.4byte	0x29c8
+	.byte	0
+	.uleb128 0x31
+	.4byte	.LVL1565
+	.4byte	0x4407
+	.uleb128 0x31
+	.4byte	.LVL1566
+	.4byte	0x343c
+	.uleb128 0x31
+	.4byte	.LVL1567
+	.4byte	0x332f
+	.uleb128 0x31
+	.4byte	.LVL1568
+	.4byte	0x318f
+	.uleb128 0x31
+	.4byte	.LVL1569
+	.4byte	0x31f1
+	.uleb128 0x31
+	.4byte	.LVL1570
+	.4byte	0x2af9
+	.uleb128 0x31
+	.4byte	.LVL1571
+	.4byte	0x342f
+	.uleb128 0x31
+	.4byte	.LVL1572
+	.4byte	0x42fc
+	.uleb128 0x31
+	.4byte	.LVL1573
+	.4byte	0x2b7c
+	.uleb128 0x31
+	.4byte	.LVL1574
+	.4byte	0x2cb0
+	.uleb128 0x31
+	.4byte	.LVL1575
+	.4byte	0x3709
+	.byte	0
+	.uleb128 0x67
+	.4byte	.LASF657
+	.4byte	.LASF657
+	.byte	0x11
+	.byte	0x6f
+	.uleb128 0x68
+	.4byte	.LASF670
+	.4byte	.LASF670
+	.uleb128 0x67
+	.4byte	.LASF658
+	.4byte	.LASF658
+	.byte	0x12
+	.byte	0x19
+	.uleb128 0x67
+	.4byte	.LASF659
+	.4byte	.LASF659
+	.byte	0xb
+	.byte	0x8e
+	.uleb128 0x67
+	.4byte	.LASF660
+	.4byte	.LASF660
+	.byte	0x12
+	.byte	0x1b
+	.uleb128 0x67
+	.4byte	.LASF661
+	.4byte	.LASF661
+	.byte	0x13
+	.byte	0x27
+	.uleb128 0x67
+	.4byte	.LASF662
+	.4byte	.LASF662
+	.byte	0xd
+	.byte	0x18
+	.uleb128 0x69
+	.4byte	.LASF663
+	.4byte	.LASF663
+	.byte	0xc
+	.2byte	0x19b
+	.uleb128 0x6a
+	.4byte	.LASF671
+	.4byte	.LASF672
+	.byte	0x14
+	.byte	0
+	.4byte	.LASF671
+	.byte	0
+	.section	.debug_abbrev,"",%progbits
+.Ldebug_abbrev0:
+	.uleb128 0x1
+	.uleb128 0x11
+	.byte	0x1
+	.uleb128 0x25
+	.uleb128 0xe
+	.uleb128 0x13
+	.uleb128 0xb
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x1b
+	.uleb128 0xe
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x10
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x2
+	.uleb128 0xf
+	.byte	0
+	.uleb128 0xb
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x24
+	.byte	0
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x3e
+	.uleb128 0xb
+	.uleb128 0x3
+	.uleb128 0xe
+	.byte	0
+	.byte	0
+	.uleb128 0x4
+	.uleb128 0x26
+	.byte	0
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x5
+	.uleb128 0x24
+	.byte	0
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x3e
+	.uleb128 0xb
+	.uleb128 0x3
+	.uleb128 0x8
+	.byte	0
+	.byte	0
+	.uleb128 0x6
+	.uleb128 0x16
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x7
+	.uleb128 0x16
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x8
+	.uleb128 0xf
+	.byte	0
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x9
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0xa
+	.uleb128 0x15
+	.byte	0
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0xb
+	.uleb128 0x15
+	.byte	0
+	.uleb128 0x27
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0xc
+	.uleb128 0x1
+	.byte	0x1
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0xd
+	.uleb128 0x21
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0xe
+	.uleb128 0x13
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3c
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0xf
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0x10
+	.uleb128 0x15
+	.byte	0x1
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x11
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x12
+	.uleb128 0x4
+	.byte	0x1
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x13
+	.uleb128 0x28
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x1c
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x14
+	.uleb128 0x13
+	.byte	0x1
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x15
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x38
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x16
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x38
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x17
+	.uleb128 0x21
+	.byte	0
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2f
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x18
+	.uleb128 0x13
+	.byte	0x1
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0xb
+	.uleb128 0x5
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x19
+	.uleb128 0x21
+	.byte	0
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2f
+	.uleb128 0x5
+	.byte	0
+	.byte	0
+	.uleb128 0x1a
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x38
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x1b
+	.uleb128 0x13
+	.byte	0x1
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x1c
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x38
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x1d
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x1e
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x1f
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x20
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x21
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x47
+	.uleb128 0x13
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x22
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x23
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.uleb128 0x4109
+	.byte	0
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x2115
+	.uleb128 0x19
+	.uleb128 0x31
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x25
+	.uleb128 0x26
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x26
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x20
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x27
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x28
+	.uleb128 0xb
+	.byte	0x1
+	.byte	0
+	.byte	0
+	.uleb128 0x29
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x2a
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2116
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x2b
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x2c
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x2d
+	.uleb128 0x1d
+	.byte	0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x52
+	.uleb128 0x1
+	.uleb128 0x55
+	.uleb128 0x17
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x2e
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x2f
+	.uleb128 0xb
+	.byte	0x1
+	.uleb128 0x55
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x30
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x4109
+	.byte	0
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x32
+	.uleb128 0x1d
+	.byte	0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x33
+	.uleb128 0xb
+	.byte	0x1
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.byte	0
+	.byte	0
+	.uleb128 0x34
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x35
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x36
+	.uleb128 0xa
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x37
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x38
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x34
+	.uleb128 0x19
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x39
+	.uleb128 0xb
+	.byte	0x1
+	.uleb128 0x55
+	.uleb128 0x17
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x3a
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2116
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x3b
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x3c
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x20
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x3d
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x3e
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x40
+	.uleb128 0xa
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.byte	0
+	.byte	0
+	.uleb128 0x41
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x34
+	.uleb128 0x19
+	.uleb128 0x1c
+	.uleb128 0xe
+	.byte	0
+	.byte	0
+	.uleb128 0x42
+	.uleb128 0xb
+	.byte	0x1
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x43
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x20
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x44
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x45
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x46
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x20
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x47
+	.uleb128 0xa
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x48
+	.uleb128 0xa
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x11
+	.uleb128 0x1
+	.byte	0
+	.byte	0
+	.uleb128 0x49
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x4a
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x4b
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x4c
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x4d
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2116
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x4e
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x4f
+	.uleb128 0x1d
+	.byte	0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x52
+	.uleb128 0x1
+	.uleb128 0x55
+	.uleb128 0x17
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0x5
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x50
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x51
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x52
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x53
+	.uleb128 0xb
+	.byte	0x1
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x54
+	.uleb128 0x1d
+	.byte	0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0x5
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x55
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2116
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x56
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x20
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x57
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x58
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x20
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x59
+	.uleb128 0x1d
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x5a
+	.uleb128 0x1d
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x52
+	.uleb128 0x1
+	.uleb128 0x55
+	.uleb128 0x17
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x5b
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x20
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x5c
+	.uleb128 0x1d
+	.byte	0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x52
+	.uleb128 0x1
+	.uleb128 0x55
+	.uleb128 0x17
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x5d
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x34
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0x5e
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x20
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x5f
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0x60
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x61
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x62
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x63
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x6
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0x64
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x65
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x66
+	.uleb128 0xa
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x67
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.uleb128 0x6e
+	.uleb128 0xe
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x68
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.uleb128 0x6e
+	.uleb128 0xe
+	.uleb128 0x3
+	.uleb128 0xe
+	.byte	0
+	.byte	0
+	.uleb128 0x69
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.uleb128 0x6e
+	.uleb128 0xe
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.byte	0
+	.byte	0
+	.uleb128 0x6a
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.uleb128 0x6e
+	.uleb128 0xe
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x6e
+	.uleb128 0xe
+	.byte	0
+	.byte	0
+	.byte	0
+	.section	.debug_loc,"",%progbits
+.Ldebug_loc0:
+.LLST300:
+	.4byte	.LVL1630-.Ltext0
+	.4byte	.LVL1631-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST301:
+	.4byte	.LVL1630-.Ltext0
+	.4byte	.LVL1631-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST302:
+	.4byte	.LVL1630-.Ltext0
+	.4byte	.LVL1631-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST176:
+	.4byte	.LVL812-.Ltext0
+	.4byte	.LVL813-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST177:
+	.4byte	.LVL812-.Ltext0
+	.4byte	.LVL813-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST178:
+	.4byte	.LVL812-.Ltext0
+	.4byte	.LVL813-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST108:
+	.4byte	.LVL466-.Ltext0
+	.4byte	.LVL468-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL468-1-.Ltext0
+	.4byte	.LFE276-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST109:
+	.4byte	.LVL466-.Ltext0
+	.4byte	.LVL467-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL467-.Ltext0
+	.4byte	.LFE276-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST110:
+	.4byte	.LVL470-.Ltext0
+	.4byte	.LVL471-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL473-.Ltext0
+	.4byte	.LVL475-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL476-.Ltext0
+	.4byte	.LFE276-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST95:
+	.4byte	.LVL399-.Ltext0
+	.4byte	.LVL400-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL401-.Ltext0
+	.4byte	.LVL404-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL405-.Ltext0
+	.4byte	.LVL406-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST96:
+	.4byte	.LVL399-.Ltext0
+	.4byte	.LVL400-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST97:
+	.4byte	.LVL399-.Ltext0
+	.4byte	.LVL400-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL400-.Ltext0
+	.4byte	.LVL405-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL405-.Ltext0
+	.4byte	.LFE274-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST90:
+	.4byte	.LVL378-.Ltext0
+	.4byte	.LVL380-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST91:
+	.4byte	.LVL378-.Ltext0
+	.4byte	.LVL384-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL384-.Ltext0
+	.4byte	.LVL392-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	.LVL396-.Ltext0
+	.4byte	.LFE273-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	0
+	.4byte	0
+.LLST92:
+	.4byte	.LVL378-.Ltext0
+	.4byte	.LVL384-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL384-.Ltext0
+	.4byte	.LFE273-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST93:
+	.4byte	.LVL378-.Ltext0
+	.4byte	.LVL379-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL383-.Ltext0
+	.4byte	.LVL384-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL389-.Ltext0
+	.4byte	.LVL390-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL396-.Ltext0
+	.4byte	.LFE273-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST94:
+	.4byte	.LVL381-.Ltext0
+	.4byte	.LVL389-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL397-.Ltext0
+	.4byte	.LVL398-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	0
+	.4byte	0
+.LLST83:
+	.4byte	.LVL347-.Ltext0
+	.4byte	.LVL351-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL352-.Ltext0
+	.4byte	.LVL354-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL355-.Ltext0
+	.4byte	.LVL357-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST84:
+	.4byte	.LVL347-.Ltext0
+	.4byte	.LVL352-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL352-.Ltext0
+	.4byte	.LFE272-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST85:
+	.4byte	.LVL347-.Ltext0
+	.4byte	.LVL353-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL355-.Ltext0
+	.4byte	.LVL356-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST0:
+	.4byte	.LVL0-.Ltext0
+	.4byte	.LVL5-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST1:
+	.4byte	.LVL0-.Ltext0
+	.4byte	.LVL7-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL7-.Ltext0
+	.4byte	.LVL14-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST2:
+	.4byte	.LVL0-.Ltext0
+	.4byte	.LVL9-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL9-1-.Ltext0
+	.4byte	.LVL14-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST3:
+	.4byte	.LVL2-.Ltext0
+	.4byte	.LVL11-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST4:
+	.4byte	.LVL3-.Ltext0
+	.4byte	.LVL6-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL8-.Ltext0
+	.4byte	.LVL14-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST5:
+	.4byte	.LVL10-.Ltext0
+	.4byte	.LVL13-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST6:
+	.4byte	.LVL1-.Ltext0
+	.4byte	.LVL4-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST7:
+	.4byte	.LVL11-.Ltext0
+	.4byte	.LVL12-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST82:
+	.4byte	.LVL340-.Ltext0
+	.4byte	.LVL341-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL341-1-.Ltext0
+	.4byte	.LVL344-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST81:
+	.4byte	.LVL336-.Ltext0
+	.4byte	.LVL337-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL337-.Ltext0
+	.4byte	.LFE264-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST254:
+	.4byte	.LVL1277-.Ltext0
+	.4byte	.LVL1278-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST167:
+	.4byte	.LVL770-.Ltext0
+	.4byte	.LVL774-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL774-.Ltext0
+	.4byte	.LVL811-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST168:
+	.4byte	.LVL770-.Ltext0
+	.4byte	.LVL772-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL772-.Ltext0
+	.4byte	.LVL773-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL774-.Ltext0
+	.4byte	.LVL775-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL775-.Ltext0
+	.4byte	.LVL778-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL782-.Ltext0
+	.4byte	.LVL785-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL799-.Ltext0
+	.4byte	.LVL800-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL809-.Ltext0
+	.4byte	.LVL810-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST169:
+	.4byte	.LVL779-.Ltext0
+	.4byte	.LVL780-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL788-.Ltext0
+	.4byte	.LVL789-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL792-.Ltext0
+	.4byte	.LVL793-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST170:
+	.4byte	.LVL777-.Ltext0
+	.4byte	.LVL790-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL791-.Ltext0
+	.4byte	.LVL811-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST171:
+	.4byte	.LVL786-.Ltext0
+	.4byte	.LVL787-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL799-.Ltext0
+	.4byte	.LVL802-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST172:
+	.4byte	.LVL771-.Ltext0
+	.4byte	.LVL783-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL784-.Ltext0
+	.4byte	.LVL806-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL809-.Ltext0
+	.4byte	.LVL811-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST173:
+	.4byte	.LVL794-.Ltext0
+	.4byte	.LVL795-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL796-.Ltext0
+	.4byte	.LVL801-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL804-.Ltext0
+	.4byte	.LVL805-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST174:
+	.4byte	.LVL776-.Ltext0
+	.4byte	.LVL811-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	0
+	.4byte	0
+.LLST175:
+	.4byte	.LVL797-.Ltext0
+	.4byte	.LVL798-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL804-.Ltext0
+	.4byte	.LVL805-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST250:
+	.4byte	.LVL1231-.Ltext0
+	.4byte	.LVL1232-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1235-.Ltext0
+	.4byte	.LVL1236-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1237-.Ltext0
+	.4byte	.LVL1238-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST251:
+	.4byte	.LVL1234-.Ltext0
+	.4byte	.LVL1235-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	.LVL1240-.Ltext0
+	.4byte	.LVL1244-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	.LVL1245-.Ltext0
+	.4byte	.LFE258-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	0
+	.4byte	0
+.LLST252:
+	.4byte	.LVL1233-.Ltext0
+	.4byte	.LVL1239-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1244-.Ltext0
+	.4byte	.LVL1245-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1246-.Ltext0
+	.4byte	.LVL1247-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST253:
+	.4byte	.LVL1249-.Ltext0
+	.4byte	.LVL1252-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1255-.Ltext0
+	.4byte	.LFE258-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST76:
+	.4byte	.LVL324-.Ltext0
+	.4byte	.LVL325-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL325-.Ltext0
+	.4byte	.LVL335-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST77:
+	.4byte	.LVL324-.Ltext0
+	.4byte	.LVL326-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL326-1-.Ltext0
+	.4byte	.LVL335-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST78:
+	.4byte	.LVL324-.Ltext0
+	.4byte	.LVL326-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL326-1-.Ltext0
+	.4byte	.LVL335-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST79:
+	.4byte	.LVL327-.Ltext0
+	.4byte	.LVL330-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL331-.Ltext0
+	.4byte	.LVL334-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST80:
+	.4byte	.LVL328-.Ltext0
+	.4byte	.LVL329-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
+	.4byte	.LVL331-.Ltext0
+	.4byte	.LVL332-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
+	.4byte	.LVL333-.Ltext0
+	.4byte	.LFE257-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
+	.4byte	0
+	.4byte	0
+.LLST75:
+	.4byte	.LVL320-.Ltext0
+	.4byte	.LVL321-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL322-.Ltext0
+	.4byte	.LVL323-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST191:
+	.4byte	.LVL885-.Ltext0
+	.4byte	.LVL887-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL887-.Ltext0
+	.4byte	.LVL889-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL889-.Ltext0
+	.4byte	.LFE252-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST73:
+	.4byte	.LVL310-.Ltext0
+	.4byte	.LVL311-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL311-.Ltext0
+	.4byte	.LFE250-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST74:
+	.4byte	.LVL314-.Ltext0
+	.4byte	.LVL315-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL317-.Ltext0
+	.4byte	.LFE250-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST236:
+	.4byte	.LVL1169-.Ltext0
+	.4byte	.LVL1171-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1171-.Ltext0
+	.4byte	.LFE249-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST183:
+	.4byte	.LVL832-.Ltext0
+	.4byte	.LVL834-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL834-.Ltext0
+	.4byte	.LVL864-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST184:
+	.4byte	.LVL833-.Ltext0
+	.4byte	.LVL864-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST185:
+	.4byte	.LVL833-.Ltext0
+	.4byte	.LVL856-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL857-.Ltext0
+	.4byte	.LVL864-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST186:
+	.4byte	.LVL851-.Ltext0
+	.4byte	.LVL852-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL853-.Ltext0
+	.4byte	.LVL854-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL859-.Ltext0
+	.4byte	.LVL860-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL861-.Ltext0
+	.4byte	.LVL862-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST187:
+	.4byte	.LVL835-.Ltext0
+	.4byte	.LVL836-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL837-.Ltext0
+	.4byte	.LVL838-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL843-.Ltext0
+	.4byte	.LVL844-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST68:
+	.4byte	.LVL291-.Ltext0
+	.4byte	.LVL292-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL296-.Ltext0
+	.4byte	.LVL302-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL304-.Ltext0
+	.4byte	.LFE246-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST69:
+	.4byte	.LVL291-.Ltext0
+	.4byte	.LVL292-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL295-.Ltext0
+	.4byte	.LVL297-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL304-.Ltext0
+	.4byte	.LVL305-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL306-.Ltext0
+	.4byte	.LFE246-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST70:
+	.4byte	.LVL291-.Ltext0
+	.4byte	.LVL292-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL294-.Ltext0
+	.4byte	.LFE246-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST71:
+	.4byte	.LVL291-.Ltext0
+	.4byte	.LVL292-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL298-.Ltext0
+	.4byte	.LVL300-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL301-.Ltext0
+	.4byte	.LVL304-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	0
+	.4byte	0
+.LLST63:
+	.4byte	.LVL202-.Ltext0
+	.4byte	.LVL203-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL204-.Ltext0
+	.4byte	.LVL205-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST62:
+	.4byte	.LVL197-.Ltext0
+	.4byte	.LVL199-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL199-.Ltext0
+	.4byte	.LFE243-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST148:
+	.4byte	.LVL648-.Ltext0
+	.4byte	.LVL651-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL656-.Ltext0
+	.4byte	.LVL659-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST149:
+	.4byte	.LVL652-.Ltext0
+	.4byte	.LVL656-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL659-.Ltext0
+	.4byte	.LFE240-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST150:
+	.4byte	.LVL653-.Ltext0
+	.4byte	.LVL656-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST234:
+	.4byte	.LVL1159-.Ltext0
+	.4byte	.LVL1161-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1164-.Ltext0
+	.4byte	.LFE239-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST235:
+	.4byte	.LVL1156-.Ltext0
+	.4byte	.LVL1160-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1161-.Ltext0
+	.4byte	.LVL1164-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST212:
+	.4byte	.LVL1034-.Ltext0
+	.4byte	.LVL1035-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1035-.Ltext0
+	.4byte	.LFE238-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST164:
+	.4byte	.LVL754-.Ltext0
+	.4byte	.LVL766-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST165:
+	.4byte	.LVL752-.Ltext0
+	.4byte	.LVL761-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL762-.Ltext0
+	.4byte	.LVL764-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST166:
+	.4byte	.LVL751-.Ltext0
+	.4byte	.LVL758-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL759-.Ltext0
+	.4byte	.LVL766-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST61:
+	.4byte	.LVL192-.Ltext0
+	.4byte	.LVL193-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL193-.Ltext0
+	.4byte	.LFE234-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST196:
+	.4byte	.LVL906-.Ltext0
+	.4byte	.LVL912-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL912-.Ltext0
+	.4byte	.LVL913-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL913-.Ltext0
+	.4byte	.LFE231-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	0
+	.4byte	0
+.LLST197:
+	.4byte	.LVL907-.Ltext0
+	.4byte	.LVL908-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL909-.Ltext0
+	.4byte	.LVL914-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL925-.Ltext0
+	.4byte	.LVL927-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL931-.Ltext0
+	.4byte	.LVL932-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL934-.Ltext0
+	.4byte	.LVL935-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL935-.Ltext0
+	.4byte	.LVL936-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL945-.Ltext0
+	.4byte	.LVL949-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL949-.Ltext0
+	.4byte	.LVL950-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL956-.Ltext0
+	.4byte	.LVL957-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL972-.Ltext0
+	.4byte	.LVL973-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL974-.Ltext0
+	.4byte	.LVL975-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL981-.Ltext0
+	.4byte	.LVL982-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST198:
+	.4byte	.LVL908-.Ltext0
+	.4byte	.LVL910-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL927-.Ltext0
+	.4byte	.LVL928-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL936-.Ltext0
+	.4byte	.LVL937-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL937-.Ltext0
+	.4byte	.LVL938-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL945-.Ltext0
+	.4byte	.LVL951-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL952-.Ltext0
+	.4byte	.LVL953-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL955-.Ltext0
+	.4byte	.LVL957-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL973-.Ltext0
+	.4byte	.LVL975-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL981-.Ltext0
+	.4byte	.LVL982-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST199:
+	.4byte	.LVL928-.Ltext0
+	.4byte	.LVL929-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL958-.Ltext0
+	.4byte	.LVL960-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL963-.Ltext0
+	.4byte	.LVL965-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL967-.Ltext0
+	.4byte	.LVL970-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL973-.Ltext0
+	.4byte	.LVL980-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL981-.Ltext0
+	.4byte	.LVL985-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL988-.Ltext0
+	.4byte	.LVL990-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL991-.Ltext0
+	.4byte	.LVL993-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1024-.Ltext0
+	.4byte	.LVL1025-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1031-.Ltext0
+	.4byte	.LVL1033-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST200:
+	.4byte	.LVL926-.Ltext0
+	.4byte	.LVL930-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL945-.Ltext0
+	.4byte	.LVL946-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL976-.Ltext0
+	.4byte	.LVL978-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1031-.Ltext0
+	.4byte	.LVL1032-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST201:
+	.4byte	.LVL921-.Ltext0
+	.4byte	.LVL922-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL923-.Ltext0
+	.4byte	.LVL924-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL924-.Ltext0
+	.4byte	.LVL926-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL943-.Ltext0
+	.4byte	.LVL944-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL945-.Ltext0
+	.4byte	.LVL946-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL975-.Ltext0
+	.4byte	.LVL976-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL977-.Ltext0
+	.4byte	.LVL978-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST202:
+	.4byte	.LVL911-.Ltext0
+	.4byte	.LVL912-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL915-.Ltext0
+	.4byte	.LVL916-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL916-.Ltext0
+	.4byte	.LVL931-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL933-.Ltext0
+	.4byte	.LVL947-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL956-.Ltext0
+	.4byte	.LVL959-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST203:
+	.4byte	.LVL920-.Ltext0
+	.4byte	.LVL922-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL939-.Ltext0
+	.4byte	.LVL940-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL942-.Ltext0
+	.4byte	.LVL943-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST204:
+	.4byte	.LVL911-.Ltext0
+	.4byte	.LVL912-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL958-.Ltext0
+	.4byte	.LVL959-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL963-.Ltext0
+	.4byte	.LVL966-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL967-.Ltext0
+	.4byte	.LVL969-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL979-.Ltext0
+	.4byte	.LVL983-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL992-.Ltext0
+	.4byte	.LVL1001-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1003-.Ltext0
+	.4byte	.LVL1022-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1033-.Ltext0
+	.4byte	.LFE231-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST205:
+	.4byte	.LVL911-.Ltext0
+	.4byte	.LVL912-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -52
+	.4byte	.LVL928-.Ltext0
+	.4byte	.LVL931-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -52
+	.4byte	.LVL958-.Ltext0
+	.4byte	.LVL1033-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -52
+	.4byte	.LVL1033-.Ltext0
+	.4byte	.LFE231-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST206:
+	.4byte	.LVL911-.Ltext0
+	.4byte	.LVL912-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -48
+	.4byte	.LVL928-.Ltext0
+	.4byte	.LVL931-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -48
+	.4byte	.LVL958-.Ltext0
+	.4byte	.LFE231-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -48
+	.4byte	0
+	.4byte	0
+.LLST207:
+	.4byte	.LVL911-.Ltext0
+	.4byte	.LVL912-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	.LVL928-.Ltext0
+	.4byte	.LVL931-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	.LVL958-.Ltext0
+	.4byte	.LVL1009-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	.LVL1009-.Ltext0
+	.4byte	.LVL1010-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1010-.Ltext0
+	.4byte	.LFE231-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	0
+	.4byte	0
+.LLST208:
+	.4byte	.LVL911-.Ltext0
+	.4byte	.LVL912-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL958-.Ltext0
+	.4byte	.LVL959-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL963-.Ltext0
+	.4byte	.LVL966-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL967-.Ltext0
+	.4byte	.LVL969-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL980-.Ltext0
+	.4byte	.LVL983-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1001-.Ltext0
+	.4byte	.LVL1003-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1022-.Ltext0
+	.4byte	.LVL1024-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST209:
+	.4byte	.LVL918-.Ltext0
+	.4byte	.LVL919-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL948-.Ltext0
+	.4byte	.LVL949-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL958-.Ltext0
+	.4byte	.LVL961-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL963-.Ltext0
+	.4byte	.LVL964-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL967-.Ltext0
+	.4byte	.LVL971-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL981-.Ltext0
+	.4byte	.LVL983-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL984-.Ltext0
+	.4byte	.LVL987-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL988-.Ltext0
+	.4byte	.LVL989-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1027-.Ltext0
+	.4byte	.LVL1028-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1029-.Ltext0
+	.4byte	.LVL1030-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1030-.Ltext0
+	.4byte	.LVL1031-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST210:
+	.4byte	.LVL911-.Ltext0
+	.4byte	.LVL912-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL958-.Ltext0
+	.4byte	.LVL968-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL980-.Ltext0
+	.4byte	.LVL983-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL997-.Ltext0
+	.4byte	.LVL1003-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL1005-.Ltext0
+	.4byte	.LVL1016-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL1022-.Ltext0
+	.4byte	.LVL1024-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST211:
+	.4byte	.LVL997-.Ltext0
+	.4byte	.LVL998-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1007-.Ltext0
+	.4byte	.LVL1008-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1012-.Ltext0
+	.4byte	.LVL1015-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST141:
+	.4byte	.LVL615-.Ltext0
+	.4byte	.LVL616-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL616-.Ltext0
+	.4byte	.LVL618-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL618-.Ltext0
+	.4byte	.LVL632-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST142:
+	.4byte	.LVL615-.Ltext0
+	.4byte	.LVL616-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL617-.Ltext0
+	.4byte	.LVL619-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL619-1-.Ltext0
+	.4byte	.LFE230-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -28
+	.4byte	0
+	.4byte	0
+.LLST143:
+	.4byte	.LVL620-.Ltext0
+	.4byte	.LVL632-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST144:
+	.4byte	.LVL622-.Ltext0
+	.4byte	.LVL628-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL629-.Ltext0
+	.4byte	.LVL632-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST145:
+	.4byte	.LVL621-.Ltext0
+	.4byte	.LVL623-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL627-.Ltext0
+	.4byte	.LVL630-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST59:
+	.4byte	.LVL183-.Ltext0
+	.4byte	.LVL184-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL186-.Ltext0
+	.4byte	.LVL189-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST60:
+	.4byte	.LVL183-.Ltext0
+	.4byte	.LVL185-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL186-.Ltext0
+	.4byte	.LVL187-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL188-.Ltext0
+	.4byte	.LVL189-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST157:
+	.4byte	.LVL697-.Ltext0
+	.4byte	.LVL703-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL703-.Ltext0
+	.4byte	.LFE225-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST158:
+	.4byte	.LVL708-.Ltext0
+	.4byte	.LVL712-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL718-.Ltext0
+	.4byte	.LVL719-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL726-.Ltext0
+	.4byte	.LVL729-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST159:
+	.4byte	.LVL714-.Ltext0
+	.4byte	.LVL715-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST160:
+	.4byte	.LVL698-.Ltext0
+	.4byte	.LVL700-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL706-.Ltext0
+	.4byte	.LVL709-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL709-.Ltext0
+	.4byte	.LVL710-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL717-.Ltext0
+	.4byte	.LVL719-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL719-1-.Ltext0
+	.4byte	.LVL723-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL723-.Ltext0
+	.4byte	.LVL724-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL725-.Ltext0
+	.4byte	.LVL726-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL726-.Ltext0
+	.4byte	.LVL728-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL731-.Ltext0
+	.4byte	.LVL732-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL734-.Ltext0
+	.4byte	.LVL735-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL736-.Ltext0
+	.4byte	.LVL737-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL738-.Ltext0
+	.4byte	.LFE225-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST161:
+	.4byte	.LVL701-.Ltext0
+	.4byte	.LVL714-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL718-.Ltext0
+	.4byte	.LVL723-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL726-.Ltext0
+	.4byte	.LFE225-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST162:
+	.4byte	.LVL700-.Ltext0
+	.4byte	.LVL702-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL713-.Ltext0
+	.4byte	.LVL716-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST163:
+	.4byte	.LVL702-.Ltext0
+	.4byte	.LVL704-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL705-.Ltext0
+	.4byte	.LVL706-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL707-.Ltext0
+	.4byte	.LVL711-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL718-.Ltext0
+	.4byte	.LVL719-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL726-.Ltext0
+	.4byte	.LVL727-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST296:
+	.4byte	.LVL1545-.Ltext0
+	.4byte	.LVL1546-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1548-.Ltext0
+	.4byte	.LVL1554-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1561-.Ltext0
+	.4byte	.LVL1563-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1564-.Ltext0
+	.4byte	.LFE224-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST58:
+	.4byte	.LVL181-.Ltext0
+	.4byte	.LVL182-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST154:
+	.4byte	.LVL675-.Ltext0
+	.4byte	.LVL683-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL684-.Ltext0
+	.4byte	.LFE220-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST155:
+	.4byte	.LVL676-.Ltext0
+	.4byte	.LVL680-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL681-.Ltext0
+	.4byte	.LFE220-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST156:
+	.4byte	.LVL676-.Ltext0
+	.4byte	.LVL677-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL682-.Ltext0
+	.4byte	.LVL685-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL686-.Ltext0
+	.4byte	.LVL694-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL695-.Ltext0
+	.4byte	.LVL696-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST232:
+	.4byte	.LVL1141-.Ltext0
+	.4byte	.LVL1155-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST233:
+	.4byte	.LVL1146-.Ltext0
+	.4byte	.LVL1151-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1152-.Ltext0
+	.4byte	.LVL1155-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST151:
+	.4byte	.LVL661-.Ltext0
+	.4byte	.LVL666-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL667-.Ltext0
+	.4byte	.LVL670-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL670-.Ltext0
+	.4byte	.LFE217-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST152:
+	.4byte	.LVL663-.Ltext0
+	.4byte	.LVL664-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL667-.Ltext0
+	.4byte	.LVL668-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST153:
+	.4byte	.LVL662-.Ltext0
+	.4byte	.LVL663-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST224:
+	.4byte	.LVL1108-.Ltext0
+	.4byte	.LVL1112-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1114-.Ltext0
+	.4byte	.LVL1116-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST225:
+	.4byte	.LVL1109-.Ltext0
+	.4byte	.LVL1110-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1111-.Ltext0
+	.4byte	.LVL1113-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1114-.Ltext0
+	.4byte	.LVL1115-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST226:
+	.4byte	.LVL1119-.Ltext0
+	.4byte	.LVL1123-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1123-.Ltext0
+	.4byte	.LFE214-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST227:
+	.4byte	.LVL1119-.Ltext0
+	.4byte	.LVL1123-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1123-.Ltext0
+	.4byte	.LFE214-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST228:
+	.4byte	.LVL1119-.Ltext0
+	.4byte	.LVL1120-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1120-.Ltext0
+	.4byte	.LFE214-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	0
+	.4byte	0
+.LLST229:
+	.4byte	.LVL1122-.Ltext0
+	.4byte	.LVL1124-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL1128-.Ltext0
+	.4byte	.LVL1134-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST230:
+	.4byte	.LVL1125-.Ltext0
+	.4byte	.LVL1126-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1127-.Ltext0
+	.4byte	.LVL1129-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1132-.Ltext0
+	.4byte	.LVL1133-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST231:
+	.4byte	.LVL1121-.Ltext0
+	.4byte	.LVL1122-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST218:
+	.4byte	.LVL1089-.Ltext0
+	.4byte	.LVL1093-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1093-.Ltext0
+	.4byte	.LFE213-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST219:
+	.4byte	.LVL1089-.Ltext0
+	.4byte	.LVL1093-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1093-.Ltext0
+	.4byte	.LFE213-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST220:
+	.4byte	.LVL1089-.Ltext0
+	.4byte	.LVL1090-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1090-.Ltext0
+	.4byte	.LFE213-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	0
+	.4byte	0
+.LLST221:
+	.4byte	.LVL1092-.Ltext0
+	.4byte	.LVL1097-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1098-.Ltext0
+	.4byte	.LVL1106-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST222:
+	.4byte	.LVL1094-.Ltext0
+	.4byte	.LVL1095-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1096-.Ltext0
+	.4byte	.LVL1099-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1103-.Ltext0
+	.4byte	.LVL1104-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST223:
+	.4byte	.LVL1091-.Ltext0
+	.4byte	.LVL1106-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST137:
+	.4byte	.LVL602-.Ltext0
+	.4byte	.LVL605-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL606-.Ltext0
+	.4byte	.LVL608-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL611-.Ltext0
+	.4byte	.LVL612-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST138:
+	.4byte	.LVL602-.Ltext0
+	.4byte	.LVL606-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL606-.Ltext0
+	.4byte	.LFE212-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST139:
+	.4byte	.LVL602-.Ltext0
+	.4byte	.LVL606-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL606-.Ltext0
+	.4byte	.LFE212-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST140:
+	.4byte	.LVL607-.Ltext0
+	.4byte	.LVL613-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL614-.Ltext0
+	.4byte	.LFE212-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST195:
+	.4byte	.LVL902-.Ltext0
+	.4byte	.LVL903-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL904-.Ltext0
+	.4byte	.LVL905-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL905-.Ltext0
+	.4byte	.LFE211-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST136:
+	.4byte	.LVL599-.Ltext0
+	.4byte	.LVL600-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST129:
+	.4byte	.LVL570-.Ltext0
+	.4byte	.LVL572-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL572-.Ltext0
+	.4byte	.LVL583-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST130:
+	.4byte	.LVL570-.Ltext0
+	.4byte	.LVL572-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL572-.Ltext0
+	.4byte	.LVL583-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST131:
+	.4byte	.LVL570-.Ltext0
+	.4byte	.LVL583-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST132:
+	.4byte	.LVL576-.Ltext0
+	.4byte	.LVL577-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST133:
+	.4byte	.LVL571-.Ltext0
+	.4byte	.LVL579-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL580-.Ltext0
+	.4byte	.LVL583-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST125:
+	.4byte	.LVL553-.Ltext0
+	.4byte	.LVL555-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL555-.Ltext0
+	.4byte	.LVL558-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL558-.Ltext0
+	.4byte	.LVL561-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL561-.Ltext0
+	.4byte	.LFE207-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST126:
+	.4byte	.LVL563-.Ltext0
+	.4byte	.LVL564-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL567-.Ltext0
+	.4byte	.LVL568-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL569-.Ltext0
+	.4byte	.LFE207-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST127:
+	.4byte	.LVL554-.Ltext0
+	.4byte	.LVL559-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST128:
+	.4byte	.LVL557-.Ltext0
+	.4byte	.LVL558-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL560-.Ltext0
+	.4byte	.LFE207-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST134:
+	.4byte	.LVL584-.Ltext0
+	.4byte	.LVL585-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL585-.Ltext0
+	.4byte	.LVL588-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL588-1-.Ltext0
+	.4byte	.LFE206-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST135:
+	.4byte	.LVL586-.Ltext0
+	.4byte	.LVL591-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL593-.Ltext0
+	.4byte	.LVL595-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST120:
+	.4byte	.LVL537-.Ltext0
+	.4byte	.LVL538-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL538-.Ltext0
+	.4byte	.LVL542-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL542-.Ltext0
+	.4byte	.LFE204-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST121:
+	.4byte	.LVL541-.Ltext0
+	.4byte	.LVL547-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL549-.Ltext0
+	.4byte	.LVL551-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST122:
+	.4byte	.LVL544-.Ltext0
+	.4byte	.LVL545-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL550-.Ltext0
+	.4byte	.LVL551-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST123:
+	.4byte	.LVL546-.Ltext0
+	.4byte	.LVL549-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	.LVL551-.Ltext0
+	.4byte	.LFE204-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	0
+	.4byte	0
+.LLST124:
+	.4byte	.LVL548-.Ltext0
+	.4byte	.LVL549-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL551-.Ltext0
+	.4byte	.LFE204-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	0
+	.4byte	0
+.LLST117:
+	.4byte	.LVL525-.Ltext0
+	.4byte	.LVL526-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL526-.Ltext0
+	.4byte	.LFE203-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST118:
+	.4byte	.LVL525-.Ltext0
+	.4byte	.LVL526-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL526-.Ltext0
+	.4byte	.LVL532-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST119:
+	.4byte	.LVL529-.Ltext0
+	.4byte	.LVL530-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL532-.Ltext0
+	.4byte	.LFE203-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST47:
+	.4byte	.LVL149-.Ltext0
+	.4byte	.LVL153-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL154-.Ltext0
+	.4byte	.LVL155-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL157-.Ltext0
+	.4byte	.LVL158-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST48:
+	.4byte	.LVL150-.Ltext0
+	.4byte	.LVL151-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL152-.Ltext0
+	.4byte	.LVL154-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL156-.Ltext0
+	.4byte	.LVL159-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST46:
+	.4byte	.LVL147-.Ltext0
+	.4byte	.LVL148-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST43:
+	.4byte	.LVL138-.Ltext0
+	.4byte	.LVL142-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL143-.Ltext0
+	.4byte	.LVL146-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST44:
+	.4byte	.LVL138-.Ltext0
+	.4byte	.LVL141-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL143-.Ltext0
+	.4byte	.LVL144-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL145-.Ltext0
+	.4byte	.LFE199-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST45:
+	.4byte	.LVL139-.Ltext0
+	.4byte	.LVL140-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL143-.Ltext0
+	.4byte	.LFE199-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST41:
+	.4byte	.LVL131-.Ltext0
+	.4byte	.LVL134-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL134-.Ltext0
+	.4byte	.LFE198-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST42:
+	.4byte	.LVL131-.Ltext0
+	.4byte	.LVL133-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL134-.Ltext0
+	.4byte	.LVL135-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL136-.Ltext0
+	.4byte	.LVL137-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST38:
+	.4byte	.LVL121-.Ltext0
+	.4byte	.LVL125-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL126-.Ltext0
+	.4byte	.LFE197-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST39:
+	.4byte	.LVL124-.Ltext0
+	.4byte	.LVL126-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL127-.Ltext0
+	.4byte	.LFE197-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST30:
+	.4byte	.LVL94-.Ltext0
+	.4byte	.LVL95-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL95-.Ltext0
+	.4byte	.LVL99-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL100-.Ltext0
+	.4byte	.LFE196-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST31:
+	.4byte	.LVL96-.Ltext0
+	.4byte	.LVL108-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL109-.Ltext0
+	.4byte	.LVL110-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL111-.Ltext0
+	.4byte	.LFE196-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST32:
+	.4byte	.LVL97-.Ltext0
+	.4byte	.LVL116-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL117-.Ltext0
+	.4byte	.LFE196-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST33:
+	.4byte	.LVL101-.Ltext0
+	.4byte	.LVL103-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL111-.Ltext0
+	.4byte	.LVL113-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST34:
+	.4byte	.LVL98-.Ltext0
+	.4byte	.LVL100-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	.LVL104-.Ltext0
+	.4byte	.LVL111-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	.LVL113-.Ltext0
+	.4byte	.LFE196-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	0
+	.4byte	0
+.LLST35:
+	.4byte	.LVL98-.Ltext0
+	.4byte	.LVL100-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL102-.Ltext0
+	.4byte	.LVL111-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL112-.Ltext0
+	.4byte	.LFE196-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST36:
+	.4byte	.LVL98-.Ltext0
+	.4byte	.LVL100-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL105-.Ltext0
+	.4byte	.LVL106-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL107-.Ltext0
+	.4byte	.LVL111-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL114-.Ltext0
+	.4byte	.LVL115-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST29:
+	.4byte	.LVL89-.Ltext0
+	.4byte	.LVL91-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL92-.Ltext0
+	.4byte	.LVL93-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST26:
+	.4byte	.LVL77-.Ltext0
+	.4byte	.LVL78-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL83-.Ltext0
+	.4byte	.LVL84-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL86-.Ltext0
+	.4byte	.LFE191-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST27:
+	.4byte	.LVL77-.Ltext0
+	.4byte	.LVL79-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL81-.Ltext0
+	.4byte	.LVL82-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL85-.Ltext0
+	.4byte	.LVL87-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST28:
+	.4byte	.LVL77-.Ltext0
+	.4byte	.LVL79-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL81-.Ltext0
+	.4byte	.LVL88-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST98:
+	.4byte	.LVL410-.Ltext0
+	.4byte	.LVL413-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL413-.Ltext0
+	.4byte	.LVL414-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL414-.Ltext0
+	.4byte	.LFE190-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST99:
+	.4byte	.LVL410-.Ltext0
+	.4byte	.LVL411-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL413-.Ltext0
+	.4byte	.LFE190-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST25:
+	.4byte	.LVL74-.Ltext0
+	.4byte	.LVL75-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST88:
+	.4byte	.LVL370-.Ltext0
+	.4byte	.LVL372-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST89:
+	.4byte	.LVL370-.Ltext0
+	.4byte	.LVL371-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL371-.Ltext0
+	.4byte	.LFE186-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST24:
+	.4byte	.LVL70-.Ltext0
+	.4byte	.LVL71-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL72-.Ltext0
+	.4byte	.LVL73-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST23:
+	.4byte	.LVL67-.Ltext0
+	.4byte	.LVL68-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST22:
+	.4byte	.LVL63-.Ltext0
+	.4byte	.LVL64-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL64-1-.Ltext0
+	.4byte	.LVL66-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST20:
+	.4byte	.LVL57-.Ltext0
+	.4byte	.LVL59-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL59-1-.Ltext0
+	.4byte	.LVL62-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST21:
+	.4byte	.LVL57-.Ltext0
+	.4byte	.LVL58-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL58-.Ltext0
+	.4byte	.LVL60-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST216:
+	.4byte	.LVL1060-.Ltext0
+	.4byte	.LVL1088-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST217:
+	.4byte	.LVL1062-.Ltext0
+	.4byte	.LVL1066-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL1067-.Ltext0
+	.4byte	.LVL1076-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL1077-.Ltext0
+	.4byte	.LVL1088-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST86:
+	.4byte	.LVL362-.Ltext0
+	.4byte	.LVL364-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL365-.Ltext0
+	.4byte	.LVL366-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL367-.Ltext0
+	.4byte	.LFE180-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST87:
+	.4byte	.LVL368-.Ltext0
+	.4byte	.LVL369-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST213:
+	.4byte	.LVL1048-.Ltext0
+	.4byte	.LVL1049-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1056-.Ltext0
+	.4byte	.LVL1058-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST214:
+	.4byte	.LVL1040-.Ltext0
+	.4byte	.LVL1045-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1049-.Ltext0
+	.4byte	.LVL1050-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1051-.Ltext0
+	.4byte	.LVL1052-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1058-.Ltext0
+	.4byte	.LVL1059-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST215:
+	.4byte	.LVL1045-.Ltext0
+	.4byte	.LVL1048-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1052-.Ltext0
+	.4byte	.LVL1054-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1055-.Ltext0
+	.4byte	.LVL1056-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST19:
+	.4byte	.LVL54-.Ltext0
+	.4byte	.LVL55-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST179:
+	.4byte	.LVL814-.Ltext0
+	.4byte	.LVL817-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL828-.Ltext0
+	.4byte	.LVL830-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST180:
+	.4byte	.LVL819-.Ltext0
+	.4byte	.LVL828-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL830-.Ltext0
+	.4byte	.LVL831-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST181:
+	.4byte	.LVL816-.Ltext0
+	.4byte	.LVL828-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL830-.Ltext0
+	.4byte	.LVL831-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST182:
+	.4byte	.LVL817-.Ltext0
+	.4byte	.LVL824-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL825-.Ltext0
+	.4byte	.LVL828-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL830-.Ltext0
+	.4byte	.LVL831-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST115:
+	.4byte	.LVL519-.Ltext0
+	.4byte	.LVL521-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST116:
+	.4byte	.LVL519-.Ltext0
+	.4byte	.LVL520-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL520-.Ltext0
+	.4byte	.LVL524-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST16:
+	.4byte	.LVL45-.Ltext0
+	.4byte	.LVL46-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL46-1-.Ltext0
+	.4byte	.LVL52-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST17:
+	.4byte	.LVL49-.Ltext0
+	.4byte	.LVL51-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST18:
+	.4byte	.LVL47-.Ltext0
+	.4byte	.LVL50-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST14:
+	.4byte	.LVL38-.Ltext0
+	.4byte	.LVL39-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL39-.Ltext0
+	.4byte	.LVL40-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL40-1-.Ltext0
+	.4byte	.LVL44-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST15:
+	.4byte	.LVL41-.Ltext0
+	.4byte	.LVL44-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST293:
+	.4byte	.LVL1539-.Ltext0
+	.4byte	.LVL1542-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST294:
+	.4byte	.LVL1539-.Ltext0
+	.4byte	.LVL1541-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST295:
+	.4byte	.LVL1539-.Ltext0
+	.4byte	.LVL1540-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST279:
+	.4byte	.LVL1438-.Ltext0
+	.4byte	.LVL1441-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST280:
+	.4byte	.LVL1438-.Ltext0
+	.4byte	.LVL1440-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST281:
+	.4byte	.LVL1438-.Ltext0
+	.4byte	.LVL1439-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST244:
+	.4byte	.LVL1211-.Ltext0
+	.4byte	.LVL1212-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1212-.Ltext0
+	.4byte	.LVL1214-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1214-.Ltext0
+	.4byte	.LVL1218-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL1230-.Ltext0
+	.4byte	.LFE168-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST245:
+	.4byte	.LVL1211-.Ltext0
+	.4byte	.LVL1212-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1212-.Ltext0
+	.4byte	.LVL1215-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1215-1-.Ltext0
+	.4byte	.LFE168-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST246:
+	.4byte	.LVL1213-.Ltext0
+	.4byte	.LVL1214-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL1219-.Ltext0
+	.4byte	.LVL1230-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST247:
+	.4byte	.LVL1213-.Ltext0
+	.4byte	.LVL1214-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL1217-.Ltext0
+	.4byte	.LVL1230-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST248:
+	.4byte	.LVL1213-.Ltext0
+	.4byte	.LVL1214-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -32
+	.4byte	.LVL1220-.Ltext0
+	.4byte	.LVL1224-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -32
+	.4byte	.LVL1224-.Ltext0
+	.4byte	.LVL1225-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1226-.Ltext0
+	.4byte	.LVL1228-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -32
+	.4byte	.LVL1228-.Ltext0
+	.4byte	.LVL1229-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1229-.Ltext0
+	.4byte	.LVL1230-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -32
+	.4byte	0
+	.4byte	0
+.LLST249:
+	.4byte	.LVL1213-.Ltext0
+	.4byte	.LVL1214-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -28
+	.4byte	.LVL1220-.Ltext0
+	.4byte	.LVL1230-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -28
+	.4byte	0
+	.4byte	0
+.LLST282:
+	.4byte	.LVL1443-.Ltext0
+	.4byte	.LVL1445-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1447-.Ltext0
+	.4byte	.LVL1450-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1537-.Ltext0
+	.4byte	.LVL1538-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST283:
+	.4byte	.LVL1443-.Ltext0
+	.4byte	.LVL1446-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1446-.Ltext0
+	.4byte	.LVL1537-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL1537-.Ltext0
+	.4byte	.LFE167-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST284:
+	.4byte	.LVL1443-.Ltext0
+	.4byte	.LVL1444-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1447-.Ltext0
+	.4byte	.LVL1448-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1448-.Ltext0
+	.4byte	.LVL1449-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1485-.Ltext0
+	.4byte	.LVL1486-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1490-.Ltext0
+	.4byte	.LVL1491-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1503-.Ltext0
+	.4byte	.LVL1504-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1506-.Ltext0
+	.4byte	.LVL1513-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1514-.Ltext0
+	.4byte	.LVL1515-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1518-.Ltext0
+	.4byte	.LVL1519-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST285:
+	.4byte	.LVL1443-.Ltext0
+	.4byte	.LVL1446-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1447-.Ltext0
+	.4byte	.LVL1448-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1491-.Ltext0
+	.4byte	.LVL1492-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1507-.Ltext0
+	.4byte	.LVL1508-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1508-.Ltext0
+	.4byte	.LVL1509-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1510-.Ltext0
+	.4byte	.LVL1512-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1527-.Ltext0
+	.4byte	.LVL1528-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1531-.Ltext0
+	.4byte	.LVL1532-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST286:
+	.4byte	.LVL1446-.Ltext0
+	.4byte	.LVL1447-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1460-.Ltext0
+	.4byte	.LVL1483-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1488-.Ltext0
+	.4byte	.LVL1489-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1495-.Ltext0
+	.4byte	.LVL1537-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST287:
+	.4byte	.LVL1446-.Ltext0
+	.4byte	.LVL1447-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL1452-.Ltext0
+	.4byte	.LVL1537-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	0
+	.4byte	0
+.LLST288:
+	.4byte	.LVL1453-.Ltext0
+	.4byte	.LVL1456-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1476-.Ltext0
+	.4byte	.LVL1477-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1502-.Ltext0
+	.4byte	.LVL1503-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1511-.Ltext0
+	.4byte	.LVL1512-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1522-.Ltext0
+	.4byte	.LVL1523-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1529-.Ltext0
+	.4byte	.LVL1530-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST289:
+	.4byte	.LVL1446-.Ltext0
+	.4byte	.LVL1447-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -64
+	.4byte	.LVL1460-.Ltext0
+	.4byte	.LVL1483-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -64
+	.4byte	.LVL1488-.Ltext0
+	.4byte	.LVL1489-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -64
+	.4byte	.LVL1495-.Ltext0
+	.4byte	.LVL1516-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -64
+	.4byte	.LVL1516-.Ltext0
+	.4byte	.LVL1517-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1517-.Ltext0
+	.4byte	.LVL1537-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -64
+	.4byte	0
+	.4byte	0
+.LLST290:
+	.4byte	.LVL1446-.Ltext0
+	.4byte	.LVL1447-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL1460-.Ltext0
+	.4byte	.LVL1464-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL1474-.Ltext0
+	.4byte	.LVL1483-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL1488-.Ltext0
+	.4byte	.LVL1489-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL1497-.Ltext0
+	.4byte	.LVL1537-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST291:
+	.4byte	.LVL1454-.Ltext0
+	.4byte	.LVL1455-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1455-.Ltext0
+	.4byte	.LVL1457-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1457-.Ltext0
+	.4byte	.LVL1458-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1459-.Ltext0
+	.4byte	.LVL1461-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1461-.Ltext0
+	.4byte	.LVL1462-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1471-.Ltext0
+	.4byte	.LVL1472-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1473-.Ltext0
+	.4byte	.LVL1475-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1475-.Ltext0
+	.4byte	.LVL1476-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1483-.Ltext0
+	.4byte	.LVL1484-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1493-.Ltext0
+	.4byte	.LVL1495-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1497-.Ltext0
+	.4byte	.LVL1498-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1532-.Ltext0
+	.4byte	.LVL1533-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1535-.Ltext0
+	.4byte	.LVL1536-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1536-.Ltext0
+	.4byte	.LVL1537-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST292:
+	.4byte	.LVL1446-.Ltext0
+	.4byte	.LVL1447-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1459-.Ltext0
+	.4byte	.LVL1467-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1469-.Ltext0
+	.4byte	.LVL1478-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1488-.Ltext0
+	.4byte	.LVL1489-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1494-.Ltext0
+	.4byte	.LVL1537-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST237:
+	.4byte	.LVL1180-.Ltext0
+	.4byte	.LVL1184-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1184-1-.Ltext0
+	.4byte	.LVL1185-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1190-.Ltext0
+	.4byte	.LVL1191-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1201-.Ltext0
+	.4byte	.LVL1204-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST238:
+	.4byte	.LVL1180-.Ltext0
+	.4byte	.LVL1184-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1184-1-.Ltext0
+	.4byte	.LVL1204-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST239:
+	.4byte	.LVL1180-.Ltext0
+	.4byte	.LVL1182-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST240:
+	.4byte	.LVL1180-.Ltext0
+	.4byte	.LVL1183-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1183-.Ltext0
+	.4byte	.LVL1204-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST241:
+	.4byte	.LVL1181-.Ltext0
+	.4byte	.LVL1204-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST242:
+	.4byte	.LVL1184-.Ltext0
+	.4byte	.LVL1185-.Ltext0
+	.2byte	0x2
+	.byte	0x71
+	.sleb128 -4
+	.4byte	.LVL1185-.Ltext0
+	.4byte	.LVL1193-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	.LVL1193-.Ltext0
+	.4byte	.LFE165-.Ltext0
+	.2byte	0x2
+	.byte	0x71
+	.sleb128 -4
+	.4byte	0
+	.4byte	0
+.LLST243:
+	.4byte	.LVL1184-.Ltext0
+	.4byte	.LVL1185-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1190-.Ltext0
+	.4byte	.LVL1191-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1195-.Ltext0
+	.4byte	.LVL1196-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1197-.Ltext0
+	.4byte	.LVL1198-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1200-.Ltext0
+	.4byte	.LVL1202-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST264:
+	.4byte	.LVL1371-.Ltext0
+	.4byte	.LVL1373-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1375-.Ltext0
+	.4byte	.LVL1376-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1377-.Ltext0
+	.4byte	.LVL1380-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1437-.Ltext0
+	.4byte	.LFE164-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST265:
+	.4byte	.LVL1371-.Ltext0
+	.4byte	.LVL1375-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1375-.Ltext0
+	.4byte	.LVL1437-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL1437-.Ltext0
+	.4byte	.LFE164-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST266:
+	.4byte	.LVL1371-.Ltext0
+	.4byte	.LVL1372-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1377-.Ltext0
+	.4byte	.LVL1378-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1378-.Ltext0
+	.4byte	.LVL1379-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1426-.Ltext0
+	.4byte	.LVL1427-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST267:
+	.4byte	.LVL1371-.Ltext0
+	.4byte	.LVL1374-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1374-1-.Ltext0
+	.4byte	.LFE164-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	0
+	.4byte	0
+.LLST268:
+	.4byte	.LVL1385-.Ltext0
+	.4byte	.LVL1387-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1408-.Ltext0
+	.4byte	.LVL1409-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1412-.Ltext0
+	.4byte	.LVL1413-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1422-.Ltext0
+	.4byte	.LVL1423-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1428-.Ltext0
+	.4byte	.LVL1429-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1433-.Ltext0
+	.4byte	.LVL1434-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST269:
+	.4byte	.LVL1375-.Ltext0
+	.4byte	.LVL1376-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1388-.Ltext0
+	.4byte	.LVL1394-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1396-.Ltext0
+	.4byte	.LVL1397-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1410-.Ltext0
+	.4byte	.LVL1411-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1412-.Ltext0
+	.4byte	.LVL1413-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1429-.Ltext0
+	.4byte	.LVL1430-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1431-.Ltext0
+	.4byte	.LVL1432-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1434-.Ltext0
+	.4byte	.LVL1435-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1436-.Ltext0
+	.4byte	.LVL1437-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST270:
+	.4byte	.LVL1399-.Ltext0
+	.4byte	.LVL1400-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1417-.Ltext0
+	.4byte	.LVL1418-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1419-.Ltext0
+	.4byte	.LVL1420-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST271:
+	.4byte	.LVL1375-.Ltext0
+	.4byte	.LVL1377-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1386-.Ltext0
+	.4byte	.LVL1437-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST272:
+	.4byte	.LVL1375-.Ltext0
+	.4byte	.LVL1377-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	.LVL1391-.Ltext0
+	.4byte	.LVL1437-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	0
+	.4byte	0
+.LLST273:
+	.4byte	.LVL1375-.Ltext0
+	.4byte	.LVL1377-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	.LVL1391-.Ltext0
+	.4byte	.LVL1399-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	.LVL1404-.Ltext0
+	.4byte	.LVL1416-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	.LVL1420-.Ltext0
+	.4byte	.LVL1421-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	.LVL1433-.Ltext0
+	.4byte	.LVL1437-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	0
+	.4byte	0
+.LLST274:
+	.4byte	.LVL1375-.Ltext0
+	.4byte	.LVL1377-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1382-.Ltext0
+	.4byte	.LVL1437-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST275:
+	.4byte	.LVL1389-.Ltext0
+	.4byte	.LVL1390-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1390-.Ltext0
+	.4byte	.LVL1392-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1392-.Ltext0
+	.4byte	.LVL1393-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1396-.Ltext0
+	.4byte	.LVL1398-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1401-.Ltext0
+	.4byte	.LVL1402-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1403-.Ltext0
+	.4byte	.LVL1405-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST276:
+	.4byte	.LVL1406-.Ltext0
+	.4byte	.LVL1407-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1424-.Ltext0
+	.4byte	.LVL1425-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST277:
+	.4byte	.LVL1375-.Ltext0
+	.4byte	.LVL1377-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	.LVL1381-.Ltext0
+	.4byte	.LVL1437-.Ltext0
+	.2byte	0x1
+	.byte	0x59
+	.4byte	0
+	.4byte	0
+.LLST278:
+	.4byte	.LVL1375-.Ltext0
+	.4byte	.LVL1377-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	.LVL1391-.Ltext0
+	.4byte	.LVL1404-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	.LVL1416-.Ltext0
+	.4byte	.LVL1421-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	0
+	.4byte	0
+.LLST298:
+	.4byte	.LVL1596-.Ltext0
+	.4byte	.LVL1599-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1613-.Ltext0
+	.4byte	.LVL1615-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1616-.Ltext0
+	.4byte	.LVL1617-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST299:
+	.4byte	.LVL1594-.Ltext0
+	.4byte	.LVL1595-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1604-.Ltext0
+	.4byte	.LVL1606-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL1607-.Ltext0
+	.4byte	.LVL1611-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST100:
+	.4byte	.LVL415-.Ltext0
+	.4byte	.LVL417-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL432-.Ltext0
+	.4byte	.LVL433-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL433-.Ltext0
+	.4byte	.LVL434-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL434-.Ltext0
+	.4byte	.LVL435-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL435-.Ltext0
+	.4byte	.LVL436-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST101:
+	.4byte	.LVL415-.Ltext0
+	.4byte	.LVL435-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL435-.Ltext0
+	.4byte	.LFE159-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST102:
+	.4byte	.LVL416-.Ltext0
+	.4byte	.LVL440-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL441-.Ltext0
+	.4byte	.LVL442-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL443-.Ltext0
+	.4byte	.LVL452-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL453-.Ltext0
+	.4byte	.LFE159-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST103:
+	.4byte	.LVL419-.Ltext0
+	.4byte	.LVL421-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL422-.Ltext0
+	.4byte	.LVL424-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL428-.Ltext0
+	.4byte	.LVL431-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL447-.Ltext0
+	.4byte	.LVL448-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST104:
+	.4byte	.LVL423-.Ltext0
+	.4byte	.LVL427-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL429-.Ltext0
+	.4byte	.LVL430-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL433-.Ltext0
+	.4byte	.LVL435-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL448-.Ltext0
+	.4byte	.LVL455-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST105:
+	.4byte	.LVL421-.Ltext0
+	.4byte	.LVL424-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL426-.Ltext0
+	.4byte	.LVL428-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL445-.Ltext0
+	.4byte	.LVL447-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST106:
+	.4byte	.LVL420-.Ltext0
+	.4byte	.LVL435-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL446-.Ltext0
+	.4byte	.LFE159-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	0
+	.4byte	0
+.LLST114:
+	.4byte	.LVL514-.Ltext0
+	.4byte	.LVL515-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL517-.Ltext0
+	.4byte	.LVL518-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST11:
+	.4byte	.LVL24-.Ltext0
+	.4byte	.LVL25-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL25-.Ltext0
+	.4byte	.LVL33-.Ltext0
+	.2byte	0x1
+	.byte	0x5b
+	.4byte	0
+	.4byte	0
+.LLST12:
+	.4byte	.LVL26-.Ltext0
+	.4byte	.LVL27-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST10:
+	.4byte	.LVL22-.Ltext0
+	.4byte	.LVL23-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST9:
+	.4byte	.LVL17-.Ltext0
+	.4byte	.LVL19-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL20-.Ltext0
+	.4byte	.LFE152-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST67:
+	.4byte	.LVL285-.Ltext0
+	.4byte	.LVL286-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL286-1-.Ltext0
+	.4byte	.LVL288-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST64:
+	.4byte	.LVL206-.Ltext0
+	.4byte	.LVL207-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL207-1-.Ltext0
+	.4byte	.LFE150-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST65:
+	.4byte	.LVL278-.Ltext0
+	.4byte	.LVL279-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL280-.Ltext0
+	.4byte	.LVL281-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST66:
+	.4byte	.LVL274-.Ltext0
+	.4byte	.LVL275-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL282-.Ltext0
+	.4byte	.LVL283-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL284-.Ltext0
+	.4byte	.LFE150-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST8:
+	.4byte	.LVL15-.Ltext0
+	.4byte	.LVL16-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST13:
+	.4byte	.LVL34-.Ltext0
+	.4byte	.LVL35-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL36-.Ltext0
+	.4byte	.LVL37-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST37:
+	.4byte	.LVL118-.Ltext0
+	.4byte	.LVL119-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST40:
+	.4byte	.LVL128-.Ltext0
+	.4byte	.LVL129-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST49:
+	.4byte	.LVL160-.Ltext0
+	.4byte	.LVL167-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL167-.Ltext0
+	.4byte	.LVL168-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST50:
+	.4byte	.LVL162-.Ltext0
+	.4byte	.LVL168-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST51:
+	.4byte	.LVL164-.Ltext0
+	.4byte	.LVL165-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL167-.Ltext0
+	.4byte	.LVL168-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST52:
+	.4byte	.LVL161-.Ltext0
+	.4byte	.LVL168-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST53:
+	.4byte	.LVL169-.Ltext0
+	.4byte	.LVL172-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL172-1-.Ltext0
+	.4byte	.LVL173-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST54:
+	.4byte	.LVL170-.Ltext0
+	.4byte	.LVL173-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST55:
+	.4byte	.LVL175-.Ltext0
+	.4byte	.LVL176-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST56:
+	.4byte	.LVL177-.Ltext0
+	.4byte	.LVL178-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL178-.Ltext0
+	.4byte	.LVL179-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST57:
+	.4byte	.LVL177-.Ltext0
+	.4byte	.LVL178-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL178-.Ltext0
+	.4byte	.LVL180-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST72:
+	.4byte	.LVL307-.Ltext0
+	.4byte	.LVL308-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL308-.Ltext0
+	.4byte	.LVL309-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST107:
+	.4byte	.LVL457-.Ltext0
+	.4byte	.LVL458-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL462-.Ltext0
+	.4byte	.LVL463-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL464-.Ltext0
+	.4byte	.LVL465-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	.LVL465-.Ltext0
+	.4byte	.LFE275-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	0
+	.4byte	0
+.LLST111:
+	.4byte	.LVL477-.Ltext0
+	.4byte	.LVL478-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL478-.Ltext0
+	.4byte	.LFE277-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.4byte	0
+	.4byte	0
+.LLST112:
+	.4byte	.LVL477-.Ltext0
+	.4byte	.LVL478-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL478-.Ltext0
+	.4byte	.LFE277-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST113:
+	.4byte	.LVL477-.Ltext0
+	.4byte	.LVL478-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL478-.Ltext0
+	.4byte	.LFE277-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST146:
+	.4byte	.LVL640-.Ltext0
+	.4byte	.LVL645-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 -104
+	.4byte	0
+	.4byte	0
+.LLST147:
+	.4byte	.LVL646-.Ltext0
+	.4byte	.LVL647-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST188:
+	.4byte	.LVL865-.Ltext0
+	.4byte	.LVL867-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL867-.Ltext0
+	.4byte	.LFE267-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST189:
+	.4byte	.LVL866-.Ltext0
+	.4byte	.LVL873-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL874-.Ltext0
+	.4byte	.LFE267-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST190:
+	.4byte	.LVL875-.Ltext0
+	.4byte	.LVL876-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL876-.Ltext0
+	.4byte	.LVL882-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	.LVL882-.Ltext0
+	.4byte	.LVL884-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL884-1-.Ltext0
+	.4byte	.LFE251-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.4byte	0
+	.4byte	0
+.LLST192:
+	.4byte	.LVL891-.Ltext0
+	.4byte	.LVL901-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST193:
+	.4byte	.LVL892-.Ltext0
+	.4byte	.LVL901-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -56
+	.4byte	0
+	.4byte	0
+.LLST194:
+	.4byte	.LVL894-.Ltext0
+	.4byte	.LVL895-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL897-.Ltext0
+	.4byte	.LVL901-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST255:
+	.4byte	.LVL1286-.Ltext0
+	.4byte	.LVL1287-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.4byte	.LVL1287-.Ltext0
+	.4byte	.LVL1305-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL1308-.Ltext0
+	.4byte	.LVL1309-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL1313-.Ltext0
+	.4byte	.LVL1314-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL1318-.Ltext0
+	.4byte	.LVL1320-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	.LVL1366-.Ltext0
+	.4byte	.LFE269-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.4byte	0
+	.4byte	0
+.LLST256:
+	.4byte	.LVL1286-.Ltext0
+	.4byte	.LVL1288-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1296-.Ltext0
+	.4byte	.LVL1297-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1366-.Ltext0
+	.4byte	.LVL1367-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	0
+	.4byte	0
+.LLST257:
+	.4byte	.LVL1295-.Ltext0
+	.4byte	.LVL1297-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1298-.Ltext0
+	.4byte	.LVL1299-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1300-.Ltext0
+	.4byte	.LVL1301-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1302-.Ltext0
+	.4byte	.LVL1303-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1304-.Ltext0
+	.4byte	.LVL1313-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1318-.Ltext0
+	.4byte	.LVL1332-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1333-.Ltext0
+	.4byte	.LVL1354-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1364-.Ltext0
+	.4byte	.LVL1365-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	.LVL1368-.Ltext0
+	.4byte	.LVL1369-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.4byte	0
+	.4byte	0
+.LLST258:
+	.4byte	.LVL1344-.Ltext0
+	.4byte	.LVL1345-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1346-.Ltext0
+	.4byte	.LVL1347-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST259:
+	.4byte	.LVL1296-.Ltext0
+	.4byte	.LVL1297-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	.LVL1309-.Ltext0
+	.4byte	.LVL1313-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	.LVL1319-.Ltext0
+	.4byte	.LVL1349-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	.LVL1349-.Ltext0
+	.4byte	.LVL1350-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1350-.Ltext0
+	.4byte	.LVL1366-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 -44
+	.4byte	0
+	.4byte	0
+.LLST260:
+	.4byte	.LVL1296-.Ltext0
+	.4byte	.LVL1297-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL1309-.Ltext0
+	.4byte	.LVL1311-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL1327-.Ltext0
+	.4byte	.LVL1337-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	.LVL1339-.Ltext0
+	.4byte	.LVL1366-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.4byte	0
+	.4byte	0
+.LLST261:
+	.4byte	.LVL1336-.Ltext0
+	.4byte	.LVL1338-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1340-.Ltext0
+	.4byte	.LVL1342-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	0
+	.4byte	0
+.LLST262:
+	.4byte	.LVL1329-.Ltext0
+	.4byte	.LVL1330-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1331-.Ltext0
+	.4byte	.LVL1335-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.4byte	.LVL1341-.Ltext0
+	.4byte	.LVL1342-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1353-.Ltext0
+	.4byte	.LVL1355-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.4byte	.LVL1355-.Ltext0
+	.4byte	.LVL1356-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1357-.Ltext0
+	.4byte	.LVL1358-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+.LLST263:
+	.4byte	.LVL1296-.Ltext0
+	.4byte	.LVL1297-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL1309-.Ltext0
+	.4byte	.LVL1310-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL1327-.Ltext0
+	.4byte	.LVL1334-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	.LVL1343-.Ltext0
+	.4byte	.LVL1366-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.4byte	0
+	.4byte	0
+.LLST297:
+	.4byte	.LVL1576-.Ltext0
+	.4byte	.LVL1577-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	.LVL1584-.Ltext0
+	.4byte	.LVL1585-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.4byte	0
+	.4byte	0
+	.section	.debug_aranges,"",%progbits
+	.4byte	0x1c
+	.2byte	0x2
+	.4byte	.Ldebug_info0
+	.byte	0x4
+	.byte	0
+	.2byte	0
+	.2byte	0
+	.4byte	.Ltext0
+	.4byte	.Letext0-.Ltext0
+	.4byte	0
+	.4byte	0
+	.section	.debug_ranges,"",%progbits
+.Ldebug_ranges0:
+	.4byte	.LBB218-.Ltext0
+	.4byte	.LBE218-.Ltext0
+	.4byte	.LBB221-.Ltext0
+	.4byte	.LBE221-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB227-.Ltext0
+	.4byte	.LBE227-.Ltext0
+	.4byte	.LBB232-.Ltext0
+	.4byte	.LBE232-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB238-.Ltext0
+	.4byte	.LBE238-.Ltext0
+	.4byte	.LBB245-.Ltext0
+	.4byte	.LBE245-.Ltext0
+	.4byte	.LBB246-.Ltext0
+	.4byte	.LBE246-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB247-.Ltext0
+	.4byte	.LBE247-.Ltext0
+	.4byte	.LBB250-.Ltext0
+	.4byte	.LBE250-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB256-.Ltext0
+	.4byte	.LBE256-.Ltext0
+	.4byte	.LBB259-.Ltext0
+	.4byte	.LBE259-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB262-.Ltext0
+	.4byte	.LBE262-.Ltext0
+	.4byte	.LBB265-.Ltext0
+	.4byte	.LBE265-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB276-.Ltext0
+	.4byte	.LBE276-.Ltext0
+	.4byte	.LBB279-.Ltext0
+	.4byte	.LBE279-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB294-.Ltext0
+	.4byte	.LBE294-.Ltext0
+	.4byte	.LBB295-.Ltext0
+	.4byte	.LBE295-.Ltext0
+	.4byte	.LBB296-.Ltext0
+	.4byte	.LBE296-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB315-.Ltext0
+	.4byte	.LBE315-.Ltext0
+	.4byte	.LBB320-.Ltext0
+	.4byte	.LBE320-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB321-.Ltext0
+	.4byte	.LBE321-.Ltext0
+	.4byte	.LBB326-.Ltext0
+	.4byte	.LBE326-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB337-.Ltext0
+	.4byte	.LBE337-.Ltext0
+	.4byte	.LBB344-.Ltext0
+	.4byte	.LBE344-.Ltext0
+	.4byte	.LBB345-.Ltext0
+	.4byte	.LBE345-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB361-.Ltext0
+	.4byte	.LBE361-.Ltext0
+	.4byte	.LBB366-.Ltext0
+	.4byte	.LBE366-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB367-.Ltext0
+	.4byte	.LBE367-.Ltext0
+	.4byte	.LBB368-.Ltext0
+	.4byte	.LBE368-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB375-.Ltext0
+	.4byte	.LBE375-.Ltext0
+	.4byte	.LBB377-.Ltext0
+	.4byte	.LBE377-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB419-.Ltext0
+	.4byte	.LBE419-.Ltext0
+	.4byte	.LBB426-.Ltext0
+	.4byte	.LBE426-.Ltext0
+	.4byte	.LBB427-.Ltext0
+	.4byte	.LBE427-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB428-.Ltext0
+	.4byte	.LBE428-.Ltext0
+	.4byte	.LBB431-.Ltext0
+	.4byte	.LBE431-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB434-.Ltext0
+	.4byte	.LBE434-.Ltext0
+	.4byte	.LBB437-.Ltext0
+	.4byte	.LBE437-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB446-.Ltext0
+	.4byte	.LBE446-.Ltext0
+	.4byte	.LBB447-.Ltext0
+	.4byte	.LBE447-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB450-.Ltext0
+	.4byte	.LBE450-.Ltext0
+	.4byte	.LBB451-.Ltext0
+	.4byte	.LBE451-.Ltext0
+	.4byte	.LBB452-.Ltext0
+	.4byte	.LBE452-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB464-.Ltext0
+	.4byte	.LBE464-.Ltext0
+	.4byte	.LBB469-.Ltext0
+	.4byte	.LBE469-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB496-.Ltext0
+	.4byte	.LBE496-.Ltext0
+	.4byte	.LBB504-.Ltext0
+	.4byte	.LBE504-.Ltext0
+	.4byte	.LBB505-.Ltext0
+	.4byte	.LBE505-.Ltext0
+	.4byte	.LBB506-.Ltext0
+	.4byte	.LBE506-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB498-.Ltext0
+	.4byte	.LBE498-.Ltext0
+	.4byte	.LBB499-.Ltext0
+	.4byte	.LBE499-.Ltext0
+	.4byte	.LBB500-.Ltext0
+	.4byte	.LBE500-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB517-.Ltext0
+	.4byte	.LBE517-.Ltext0
+	.4byte	.LBB518-.Ltext0
+	.4byte	.LBE518-.Ltext0
+	.4byte	0
+	.4byte	0
+	.4byte	.LBB524-.Ltext0
+	.4byte	.LBE524-.Ltext0
+	.4byte	.LBB525-.Ltext0
+	.4byte	.LBE525-.Ltext0
+	.4byte	0
+	.4byte	0
+	.section	.debug_line,"",%progbits
+.Ldebug_line0:
+	.section	.debug_str,"MS",%progbits,1
+.LASF470:
+	.ascii	"recovery_flash_mode\000"
+.LASF46:
+	.ascii	"root_mountflags\000"
+.LASF400:
+	.ascii	"error_phy_page\000"
+.LASF338:
+	.ascii	"gc_ink_free_return_value\000"
+.LASF171:
+	.ascii	"available_pages\000"
+.LASF466:
+	.ascii	"mlc_detected_active_page\000"
+.LASF388:
+	.ascii	"spperBlk\000"
+.LASF14:
+	.ascii	"size_t\000"
+.LASF189:
+	.ascii	"c_ftl_nand_planes_num\000"
+.LASF1:
+	.ascii	"sizetype\000"
+.LASF593:
+	.ascii	"re_try_next_blk\000"
+.LASF23:
+	.ascii	"saved_command_line\000"
+.LASF588:
+	.ascii	"P2V_block_in_plane\000"
+.LASF343:
+	.ascii	"ftl_memcmp\000"
+.LASF216:
+	.ascii	"g_GlobalSysVersion\000"
+.LASF264:
+	.ascii	"g_totle_vendor_block\000"
+.LASF96:
+	.ascii	"BlkNum\000"
+.LASF598:
+	.ascii	"totle_count\000"
+.LASF488:
+	.ascii	"lastWritePage\000"
+.LASF445:
+	.ascii	"ftl_check_vpc\000"
+.LASF355:
+	.ascii	"request\000"
+.LASF326:
+	.ascii	"DeviceCapacity\000"
+.LASF558:
+	.ascii	"List_remove_node\000"
+.LASF135:
+	.ascii	"PowerOnTimes\000"
+.LASF498:
+	.ascii	"FtlLoadEctTbl\000"
+.LASF385:
+	.ascii	"req_read_temp\000"
+.LASF69:
+	.ascii	"plane_per_die\000"
+.LASF58:
+	.ascii	"uint32\000"
+.LASF449:
+	.ascii	"FtlSuperblockPowerLostFix\000"
+.LASF225:
+	.ascii	"gL2pMapInfo\000"
+.LASF501:
+	.ascii	"pMapHeader\000"
+.LASF362:
+	.ascii	"__func__\000"
+.LASF477:
+	.ascii	"prev_ppa_ver\000"
+.LASF86:
+	.ascii	"prev_id\000"
+.LASF103:
+	.ascii	"dump_write_en\000"
+.LASF148:
+	.ascii	"max_erase_count\000"
+.LASF228:
+	.ascii	"req_read\000"
+.LASF395:
+	.ascii	"FtlGcScanTempBlk\000"
+.LASF404:
+	.ascii	"BOPS_EN\000"
+.LASF421:
+	.ascii	"get_new_active_ppa\000"
+.LASF323:
+	.ascii	"g_nand_phy_info\000"
+.LASF403:
+	.ascii	"FtlGcFreeTempBlock\000"
+.LASF251:
+	.ascii	"g_totle_swl_count\000"
+.LASF563:
+	.ascii	"tmp_id\000"
+.LASF94:
+	.ascii	"sign\000"
+.LASF232:
+	.ascii	"req_gc_dst\000"
+.LASF442:
+	.ascii	"FtlSysBlkInit\000"
+.LASF467:
+	.ascii	"lookup_superblock_id\000"
+.LASF141:
+	.ascii	"gc_page_count\000"
+.LASF566:
+	.ascii	"tmp_data_count\000"
+.LASF190:
+	.ascii	"c_ftl_nand_blk_pre_plane\000"
+.LASF75:
+	.ascii	"sec_per_blk\000"
+.LASF370:
+	.ascii	"sftl_gc\000"
+.LASF382:
+	.ascii	"get_new_gc_superblock\000"
+.LASF562:
+	.ascii	"tmp_erase_count\000"
+.LASF424:
+	.ascii	"allocate_new_data_superblock\000"
+.LASF664:
+	.ascii	"GNU C89 6.3.1 20170404 -mlittle-endian -mabi=aapcs-"
+	.ascii	"linux -mno-thumb-interwork -mfpu=vfp -mthumb -march"
+	.ascii	"=armv7-a -mfloat-abi=soft -mtune=cortex-a9 -mtls-di"
+	.ascii	"alect=gnu -g -Os -std=gnu90 -fno-strict-aliasing -f"
+	.ascii	"no-common -fno-PIE -fno-dwarf2-cfi-asm -fno-ipa-sra"
+	.ascii	" -funwind-tables -fno-delete-null-pointer-checks -f"
+	.ascii	"no-stack-protector -fomit-frame-pointer -fno-var-tr"
+	.ascii	"acking-assignments -fno-strict-overflow -fno-merge-"
+	.ascii	"all-constants -fmerge-constants -fstack-check=no -f"
+	.ascii	"conserve-stack --param allow-store-data-races=0\000"
+.LASF381:
+	.ascii	"gc_next_superblock\000"
+.LASF22:
+	.ascii	"boot_command_line\000"
+.LASF533:
+	.ascii	"update_map_block\000"
+.LASF607:
+	.ascii	"FtlBbmMapBadBlock\000"
+.LASF605:
+	.ascii	"FtlBbtInfoPrint\000"
+.LASF55:
+	.ascii	"hex_asc_upper\000"
+.LASF461:
+	.ascii	"saved_active_page\000"
+.LASF505:
+	.ascii	"re_save_vpndata\000"
+.LASF535:
+	.ascii	"region_num\000"
+.LASF602:
+	.ascii	"re_save_bbmdata\000"
+.LASF622:
+	.ascii	"first_lpa_sctidx\000"
+.LASF20:
+	.ascii	"__security_initcall_start\000"
+.LASF307:
+	.ascii	"g_totle_slc_erase_count\000"
+.LASF596:
+	.ascii	"FtlLoadBbt\000"
+.LASF175:
+	.ascii	"check_en\000"
+.LASF221:
+	.ascii	"g_MaxLbn\000"
+.LASF62:
+	.ascii	"page_addr\000"
+.LASF397:
+	.ascii	"totle_num\000"
+.LASF324:
+	.ascii	"g_nand_ops\000"
+.LASF587:
+	.ascii	"ver2\000"
+.LASF214:
+	.ascii	"c_ftl_nand_max_data_blks\000"
+.LASF213:
+	.ascii	"c_ftl_nand_data_op_blks_per_plane\000"
+.LASF570:
+	.ascii	"FtlFreeSysBlkQueueOut\000"
+.LASF116:
+	.ascii	"ftl_data_blk_header\000"
+.LASF230:
+	.ascii	"req_erase\000"
+.LASF614:
+	.ascii	"num_lpa\000"
+.LASF199:
+	.ascii	"c_ftl_nand_byte_pre_oob\000"
+.LASF510:
+	.ascii	"FtlEctTblFlush\000"
+.LASF120:
+	.ascii	"ftl_sys_blk_header\000"
+.LASF344:
+	.ascii	"ftl_memcpy\000"
+.LASF300:
+	.ascii	"g_totle_read_page_count\000"
+.LASF236:
+	.ascii	"p_sys_data_buf_1\000"
+.LASF44:
+	.ascii	"sysctl_panic_on_stackoverflow\000"
+.LASF202:
+	.ascii	"c_ftl_nand_map_region_num\000"
+.LASF52:
+	.ascii	"SYSTEM_RESTART\000"
+.LASF125:
+	.ascii	"activeFlashMode\000"
+.LASF363:
+	.ascii	"read_req\000"
+.LASF260:
+	.ascii	"p_vendor_block_table\000"
+.LASF147:
+	.ascii	"discard_page_count\000"
+.LASF543:
+	.ascii	"vpcTbl\000"
+.LASF275:
+	.ascii	"g_buffer_superblock\000"
+.LASF10:
+	.ascii	"long int\000"
+.LASF635:
+	.ascii	"create_first_buffer_superblock\000"
+.LASF63:
+	.ascii	"p_data\000"
+.LASF245:
+	.ascii	"c_gc_page_buf_num\000"
+.LASF654:
+	.ascii	"limit\000"
+.LASF514:
+	.ascii	"Index\000"
+.LASF224:
+	.ascii	"gSysFreeQueue\000"
+.LASF144:
+	.ascii	"l2p_write_count\000"
+.LASF621:
+	.ascii	"absolute_sector\000"
+.LASF556:
+	.ascii	"pHead\000"
+.LASF66:
+	.ascii	"nand_phy_info\000"
+.LASF184:
+	.ascii	"c_ftl_nand_type\000"
+.LASF334:
+	.ascii	"FtlUpdateVaildLpnCount\000"
+.LASF351:
+	.ascii	"FlashTestBlk\000"
+.LASF672:
+	.ascii	"__builtin_strcpy\000"
+.LASF290:
+	.ascii	"g_gc_bad_block_gc_index\000"
+.LASF269:
+	.ascii	"p_free_data_block_list_head\000"
+.LASF100:
+	.ascii	"pBlkVpcTbl\000"
+.LASF582:
+	.ascii	"high\000"
+.LASF637:
+	.ascii	"is_sys_blk\000"
+.LASF263:
+	.ascii	"p_vendor_region_ppn_table\000"
+.LASF545:
+	.ascii	"load_l2p_region\000"
+.LASF531:
+	.ascii	"flush_l2p_region\000"
+.LASF37:
+	.ascii	"panic_blink\000"
+.LASF457:
+	.ascii	"num_free_node\000"
+.LASF359:
+	.ascii	"block_size\000"
+.LASF346:
+	.ascii	"pvForm\000"
+.LASF208:
+	.ascii	"c_ftl_vendor_part_size\000"
+.LASF559:
+	.ascii	"pTmp\000"
+.LASF389:
+	.ascii	"FtlGcMarkBadPhyBlk\000"
+.LASF113:
+	.ascii	"ftl_bbt_blk_header\000"
+.LASF443:
+	.ascii	"ftl_scan_all_data\000"
+.LASF353:
+	.ascii	"spare\000"
+.LASF569:
+	.ascii	"INSERT_FREE_LIST\000"
+.LASF54:
+	.ascii	"hex_asc\000"
+.LASF4:
+	.ascii	"signed char\000"
+.LASF298:
+	.ascii	"g_totle_read_sector\000"
+.LASF65:
+	.ascii	"nand_req\000"
+.LASF262:
+	.ascii	"p_vendor_block_ver_table\000"
+.LASF322:
+	.ascii	"gNandPhyInfo\000"
+.LASF483:
+	.ascii	"FtlL2PDataInit\000"
+.LASF522:
+	.ascii	"action\000"
+.LASF405:
+	.ascii	"superblock_id\000"
+.LASF313:
+	.ascii	"g_gc_head_data_block\000"
+.LASF53:
+	.ascii	"system_state\000"
+.LASF620:
+	.ascii	"FtlRead\000"
+.LASF272:
+	.ascii	"g_num_free_superblocks\000"
+.LASF592:
+	.ascii	"pBbtHeader\000"
+.LASF5:
+	.ascii	"unsigned char\000"
+.LASF345:
+	.ascii	"pvTo\000"
+.LASF47:
+	.ascii	"early_boot_irqs_disabled\000"
+.LASF204:
+	.ascii	"c_ftl_nand_vendor_region_num\000"
+.LASF463:
+	.ascii	"next_free_active_plane\000"
+.LASF520:
+	.ascii	"FtlVendorPartWrite\000"
+.LASF48:
+	.ascii	"SYSTEM_BOOTING\000"
+.LASF119:
+	.ascii	"regionId\000"
+.LASF612:
+	.ascii	"start_lpa\000"
+.LASF310:
+	.ascii	"g_in_gc_progress\000"
+.LASF18:
+	.ascii	"__con_initcall_start\000"
+.LASF83:
+	.ascii	"read_page\000"
+.LASF283:
+	.ascii	"g_gc_blk_num\000"
+.LASF431:
+	.ascii	"GetSwlReplaceBlock\000"
+.LASF90:
+	.ascii	"ftl_sys_info\000"
+.LASF158:
+	.ascii	"refresh_start_lpa\000"
+.LASF459:
+	.ascii	"FtlPowerLostRecovery\000"
+.LASF560:
+	.ascii	"insert_free_list\000"
+.LASF13:
+	.ascii	"_Bool\000"
+.LASF460:
+	.ascii	"FtlRecoverySuperblock\000"
+.LASF28:
+	.ascii	"linux_proc_banner\000"
+.LASF429:
+	.ascii	"get_new_id\000"
+.LASF316:
+	.ascii	"g_cur_erase_blk\000"
+.LASF349:
+	.ascii	"table\000"
+.LASF165:
+	.ascii	"value\000"
+.LASF223:
+	.ascii	"gSysInfo\000"
+.LASF374:
+	.ascii	"gc_page_num\000"
+.LASF348:
+	.ascii	"FlashGetBadBlockList\000"
+.LASF89:
+	.ascii	"BbtMap\000"
+.LASF2:
+	.ascii	"char\000"
+.LASF649:
+	.ascii	"FtlSysBlkNumInit\000"
+.LASF658:
+	.ascii	"memset\000"
+.LASF328:
+	.ascii	"TotleReadBufferCount1\000"
+.LASF160:
+	.ascii	"totle_read_sector\000"
+.LASF330:
+	.ascii	"TotleReadBufferCount3\000"
+.LASF627:
+	.ascii	"FtlSysFlush\000"
+.LASF257:
+	.ascii	"p_map_block_ver_table\000"
+.LASF131:
+	.ascii	"bufferPageOffset\000"
+.LASF524:
+	.ascii	"l2p_region_id\000"
+.LASF410:
+	.ascii	"FtlGcUpdatePage\000"
+.LASF436:
+	.ascii	"maxFreeBlockEraseCount\000"
+.LASF642:
+	.ascii	"re_test_next_page\000"
+.LASF42:
+	.ascii	"panic_on_io_nmi\000"
+.LASF425:
+	.ascii	"allocate_data_superblock\000"
+.LASF575:
+	.ascii	"FtlFreeSysBlkQueueIn\000"
+.LASF491:
+	.ascii	"pMapBlkHeader\000"
+.LASF71:
+	.ascii	"blk_per_die\000"
+.LASF329:
+	.ascii	"TotleReadBufferCount2\000"
+.LASF377:
+	.ascii	"num_io\000"
+.LASF584:
+	.ascii	"pagePreBlk\000"
+.LASF129:
+	.ascii	"activePageOffset\000"
+.LASF77:
+	.ascii	"reserved_blk\000"
+.LASF482:
+	.ascii	"FtlLoadMapInfo\000"
+.LASF366:
+	.ascii	"block_index\000"
+.LASF651:
+	.ascii	"FtlPrintInfo\000"
+.LASF480:
+	.ascii	"FtlReUsePrevPpa\000"
+.LASF250:
+	.ascii	"p_swl_mul_table\000"
+.LASF564:
+	.ascii	"insert_data_list\000"
+.LASF645:
+	.ascii	"FtlVariablesInit\000"
+.LASF268:
+	.ascii	"p_data_block_list_table\000"
+.LASF512:
+	.ascii	"ec_mod_count\000"
+.LASF435:
+	.ascii	"pNode\000"
+.LASF304:
+	.ascii	"g_totle_mlc_erase_count\000"
+.LASF585:
+	.ascii	"ftl_cmp_data_ver\000"
+.LASF276:
+	.ascii	"g_gc_temp_superblock\000"
+.LASF261:
+	.ascii	"p_vendor_block_valid_page_count\000"
+.LASF499:
+	.ascii	"FtlScanSysBlk\000"
+.LASF668:
+	.ascii	"l2p_addr_tran\000"
+.LASF309:
+	.ascii	"g_max_erase_count\000"
+.LASF210:
+	.ascii	"c_ftl_nand_init_sys_blks_per_plane\000"
+.LASF182:
+	.ascii	"ftl_gc_page_buffer\000"
+.LASF233:
+	.ascii	"g_req_cache\000"
+.LASF648:
+	.ascii	"FtlConstantsInit\000"
+.LASF451:
+	.ascii	"pages\000"
+.LASF420:
+	.ascii	"update_vpc_list\000"
+.LASF661:
+	.ascii	"rknand_print_hex\000"
+.LASF408:
+	.ascii	"p_gc_page\000"
+.LASF15:
+	.ascii	"elf_hwcap\000"
+.LASF394:
+	.ascii	"Ftl_get_new_temp_ppa\000"
+.LASF136:
+	.ascii	"PowerLostTimes\000"
+.LASF577:
+	.ascii	"blk_Id\000"
+.LASF293:
+	.ascii	"g_gc_merge_free_blk_threshold\000"
+.LASF38:
+	.ascii	"oops_in_progress\000"
+.LASF432:
+	.ascii	"node_id\000"
+.LASF134:
+	.ascii	"cache_write_count\000"
+.LASF259:
+	.ascii	"g_totle_map_block\000"
+.LASF659:
+	.ascii	"printk\000"
+.LASF546:
+	.ascii	"phyAddr\000"
+.LASF186:
+	.ascii	"c_ftl_nand_planes_per_die\000"
+.LASF489:
+	.ascii	"ppnTbl\000"
+.LASF364:
+	.ascii	"FlashReadPages\000"
+.LASF375:
+	.ascii	"gc_blk\000"
+.LASF484:
+	.ascii	"FtlLoadVonderInfo\000"
+.LASF554:
+	.ascii	"List_get_gc_head_node\000"
+.LASF503:
+	.ascii	"pSysHeader\000"
+.LASF180:
+	.ascii	"scr_ppa\000"
+.LASF209:
+	.ascii	"c_ftl_nand_sys_blks_per_plane\000"
+.LASF572:
+	.ascii	"FtlFreeSysBLkSort\000"
+.LASF266:
+	.ascii	"p_l2p_map_buf\000"
+.LASF643:
+	.ascii	"IsBlkInVendorPart\000"
+.LASF599:
+	.ascii	"FtlBbtMemInit\000"
+.LASF244:
+	.ascii	"gp_gc_page_buf_info\000"
+.LASF573:
+	.ascii	"tmp_blk_id\000"
+.LASF167:
+	.ascii	"front\000"
+.LASF235:
+	.ascii	"p_sys_data_buf\000"
+.LASF93:
+	.ascii	"index\000"
+.LASF538:
+	.ascii	"lastMapBlk\000"
+.LASF624:
+	.ascii	"last_lpa_nscts\000"
+.LASF301:
+	.ascii	"g_tmp_data_superblock_id\000"
+.LASF247:
+	.ascii	"gp_ect_tbl_info\000"
+.LASF655:
+	.ascii	"rknand_proc_ftlread\000"
+.LASF542:
+	.ascii	"ftl_free_no_use_map_blk\000"
+.LASF666:
+	.ascii	"/home/ldq/rk-linux/kernel-debug\000"
+.LASF35:
+	.ascii	"atomic_notifier_head\000"
+.LASF384:
+	.ascii	"FtlReadRefresh\000"
+.LASF187:
+	.ascii	"c_ftl_nand_blks_per_die\000"
+.LASF565:
+	.ascii	"node_data_count\000"
+.LASF601:
+	.ascii	"write_count\000"
+.LASF241:
+	.ascii	"p_io_spare_buf\000"
+.LASF479:
+	.ascii	"current_ppa_ver\000"
+.LASF0:
+	.ascii	"long unsigned int\000"
+.LASF173:
+	.ascii	"num_planes\000"
+.LASF121:
+	.ascii	"res32_0\000"
+.LASF122:
+	.ascii	"res32_1\000"
+.LASF433:
+	.ascii	"min_ec_id\000"
+.LASF361:
+	.ascii	"check\000"
+.LASF29:
+	.ascii	"console_printk\000"
+.LASF671:
+	.ascii	"strcpy\000"
+.LASF61:
+	.ascii	"status\000"
+.LASF68:
+	.ascii	"die_num\000"
+.LASF628:
+	.ascii	"sftl_init\000"
+.LASF292:
+	.ascii	"g_gc_free_blk_threshold\000"
+.LASF32:
+	.ascii	"kptr_restrict\000"
+.LASF594:
+	.ascii	"FtlLoadFactoryBbt\000"
+.LASF407:
+	.ascii	"scan_page_num\000"
+.LASF149:
+	.ascii	"min_erase_count\000"
+.LASF185:
+	.ascii	"c_ftl_nand_die_num\000"
+.LASF306:
+	.ascii	"g_min_erase_count\000"
+.LASF481:
+	.ascii	"ftl_sb_update_avl_pages\000"
+.LASF105:
+	.ascii	"region_id\000"
+.LASF631:
+	.ascii	"ftl_low_format\000"
+.LASF342:
+	.ascii	"str2\000"
+.LASF95:
+	.ascii	"maxRegion\000"
+.LASF325:
+	.ascii	"ftl_temp_buf\000"
+.LASF161:
+	.ascii	"progErrorCount\000"
+.LASF523:
+	.ascii	"ram_region_id\000"
+.LASF335:
+	.ascii	"check_vpc_table\000"
+.LASF453:
+	.ascii	"FtlGcPageRecovery\000"
+.LASF30:
+	.ascii	"printk_delay_msec\000"
+.LASF493:
+	.ascii	"ftl_get_blk_mode\000"
+.LASF27:
+	.ascii	"linux_banner\000"
+.LASF663:
+	.ascii	"sprintf\000"
+.LASF108:
+	.ascii	"ftl_ect_tbl_info\000"
+.LASF540:
+	.ascii	"ftl_map_blk_alloc_new_blk\000"
+.LASF513:
+	.ascii	"FtlVendorPartRead\000"
+.LASF611:
+	.ascii	"FtlWrite\000"
+.LASF74:
+	.ascii	"sec_per_page\000"
+.LASF70:
+	.ascii	"blk_per_plane\000"
+.LASF401:
+	.ascii	"ReInit\000"
+.LASF518:
+	.ascii	"result\000"
+.LASF99:
+	.ascii	"pBlkVerTbl\000"
+.LASF450:
+	.ascii	"req_temp\000"
+.LASF117:
+	.ascii	"lastPpa\000"
+.LASF321:
+	.ascii	"g_power_lost_recovery_flag\000"
+.LASF603:
+	.ascii	"FtlBbt2Bitmap\000"
+.LASF72:
+	.ascii	"page_per_blk\000"
+.LASF472:
+	.ascii	"recovery_super_page\000"
+.LASF312:
+	.ascii	"g_ftl_nand_free_count\000"
+.LASF368:
+	.ascii	"die_index\000"
+.LASF415:
+	.ascii	"numREQ\000"
+.LASF78:
+	.ascii	"ecc_bits\000"
+.LASF633:
+	.ascii	"sys_bad_block_cnt\000"
+.LASF195:
+	.ascii	"c_ftl_nand_page_pre_super_blk\000"
+.LASF177:
+	.ascii	"reversed\000"
+.LASF402:
+	.ascii	"read_super_page\000"
+.LASF39:
+	.ascii	"panic_timeout\000"
+.LASF127:
+	.ascii	"gcTempFlashMode\000"
+.LASF295:
+	.ascii	"g_totle_gc_page_count\000"
+.LASF237:
+	.ascii	"p_vendor_data_buf\000"
+.LASF600:
+	.ascii	"FtlBbmTblFlush\000"
+.LASF567:
+	.ascii	"tmp_multiplier_value\000"
+.LASF660:
+	.ascii	"__memzero\000"
+.LASF406:
+	.ascii	"lookup_ppa\000"
+.LASF8:
+	.ascii	"long long int\000"
+.LASF305:
+	.ascii	"g_totle_avg_erase_count\000"
+.LASF215:
+	.ascii	"ftl_gc_temp_power_lost_recovery_flag\000"
+.LASF551:
+	.ascii	"prev_valid_page_count\000"
+.LASF387:
+	.ascii	"FtlGcFreeBadSuperBlk\000"
+.LASF11:
+	.ascii	"__kernel_size_t\000"
+.LASF222:
+	.ascii	"gBbtInfo\000"
+.LASF226:
+	.ascii	"gVendorBlkInfo\000"
+.LASF422:
+	.ascii	"p_superblock\000"
+.LASF270:
+	.ascii	"p_data_block_list_head\000"
+.LASF475:
+	.ascii	"last_page_version\000"
+.LASF231:
+	.ascii	"req_gc\000"
+.LASF610:
+	.ascii	"FtlDiscard\000"
+.LASF36:
+	.ascii	"panic_notifier_list\000"
+.LASF287:
+	.ascii	"g_gc_next_blk\000"
+.LASF386:
+	.ascii	"add_count\000"
+.LASF154:
+	.ascii	"inkDie_write_and_check_en\000"
+.LASF581:
+	.ascii	"FtlGetLastWrittenPage\000"
+.LASF465:
+	.ascii	"detected_active_page\000"
+.LASF509:
+	.ascii	"FtlUpdateVaildLpn\000"
+.LASF24:
+	.ascii	"reset_devices\000"
+.LASF157:
+	.ascii	"refresh_enable_mode\000"
+.LASF606:
+	.ascii	"FtlBbmIsBadBlock\000"
+.LASF176:
+	.ascii	"dump_writed\000"
+.LASF391:
+	.ascii	"FtlGcRefreshBlock\000"
+.LASF88:
+	.ascii	"fBbtBlk\000"
+.LASF536:
+	.ascii	"blkTbl\000"
+.LASF380:
+	.ascii	"p_dataHeader\000"
+.LASF462:
+	.ascii	"saved_active_plane\000"
+.LASF126:
+	.ascii	"bufferFlashMode\000"
+.LASF114:
+	.ascii	"count\000"
+.LASF133:
+	.ascii	"gcTempPageOffset\000"
+.LASF358:
+	.ascii	"addr\000"
+.LASF139:
+	.ascii	"GlobalSysVersion\000"
+.LASF411:
+	.ascii	"src_ppa\000"
+.LASF557:
+	.ascii	"List_pop_index_node\000"
+.LASF273:
+	.ascii	"g_num_data_superblocks\000"
+.LASF447:
+	.ascii	"error_flag\000"
+.LASF665:
+	.ascii	"drivers/rkflash/rksftl/rk_sftl.c\000"
+.LASF311:
+	.ascii	"g_in_swl_replace\000"
+.LASF169:
+	.ascii	"ftl_superblock_info\000"
+.LASF3:
+	.ascii	"unsigned int\000"
+.LASF98:
+	.ascii	"pBlkTbl\000"
+.LASF168:
+	.ascii	"rear\000"
+.LASF192:
+	.ascii	"c_ftl_nand_bbm_buf_size\000"
+.LASF219:
+	.ascii	"g_MaxLpn\000"
+.LASF541:
+	.ascii	"blk_index\000"
+.LASF456:
+	.ascii	"num_data_node\000"
+.LASF50:
+	.ascii	"SYSTEM_HALT\000"
+.LASF291:
+	.ascii	"g_gc_bad_block_temp_tbl\000"
+.LASF33:
+	.ascii	"kmsg_fops\000"
+.LASF568:
+	.ascii	"INSERT_DATA_LIST\000"
+.LASF615:
+	.ascii	"sctidx\000"
+.LASF390:
+	.ascii	"superBlk\000"
+.LASF183:
+	.ascii	"flag\000"
+.LASF284:
+	.ascii	"g_gc_page_offset\000"
+.LASF641:
+	.ascii	"test_mode\000"
+.LASF299:
+	.ascii	"g_totle_discard_page_count\000"
+.LASF217:
+	.ascii	"g_GlobalDataVersion\000"
+.LASF652:
+	.ascii	"debug_flag\000"
+.LASF327:
+	.ascii	"gFtlInitStatus\000"
+.LASF530:
+	.ascii	"hit_count\000"
+.LASF82:
+	.ascii	"prog_page\000"
+.LASF130:
+	.ascii	"bufferSuperblockId\000"
+.LASF492:
+	.ascii	"FtlLoadSysInfo\000"
+.LASF155:
+	.ascii	"readErrorCount\000"
+.LASF172:
+	.ascii	"current_plane\000"
+.LASF399:
+	.ascii	"page_count\000"
+.LASF277:
+	.ascii	"g_gc_superblock\000"
+.LASF274:
+	.ascii	"g_active_superblock\000"
+.LASF517:
+	.ascii	"offset\000"
+.LASF252:
+	.ascii	"p_valid_page_count_table\000"
+.LASF197:
+	.ascii	"c_ftl_nand_sec_pre_page_shift\000"
+.LASF26:
+	.ascii	"initcall_debug\000"
+.LASF392:
+	.ascii	"block\000"
+.LASF354:
+	.ascii	"FlashEraseBlocks\000"
+.LASF85:
+	.ascii	"page\000"
+.LASF413:
+	.ascii	"IsBlkInGcList\000"
+.LASF341:
+	.ascii	"str1\000"
+.LASF67:
+	.ascii	"nand_type\000"
+.LASF616:
+	.ascii	"nscts\000"
+.LASF104:
+	.ascii	"ftl_l2p_ram_map_info\000"
+.LASF297:
+	.ascii	"g_totle_write_sector\000"
+.LASF446:
+	.ascii	"prev_ppa\000"
+.LASF80:
+	.ascii	"get_bad_blk_list\000"
+.LASF296:
+	.ascii	"g_totle_write_page_count\000"
+.LASF646:
+	.ascii	"FtlMemInit\000"
+.LASF303:
+	.ascii	"g_totle_l2p_write_count\000"
+.LASF589:
+	.ascii	"P2V_plane\000"
+.LASF12:
+	.ascii	"bool\000"
+.LASF256:
+	.ascii	"p_map_block_valid_page_count\000"
+.LASF339:
+	.ascii	"check_buf\000"
+.LASF561:
+	.ascii	"node_erase_count\000"
+.LASF555:
+	.ascii	"List_pop_head_node\000"
+.LASF145:
+	.ascii	"slc_erase_count\000"
+.LASF544:
+	.ascii	"minValidPageCount\000"
+.LASF644:
+	.ascii	"ven_blk\000"
+.LASF193:
+	.ascii	"c_ftl_nand_page_pre_blk\000"
+.LASF107:
+	.ascii	"L2PMap\000"
+.LASF347:
+	.ascii	"size\000"
+.LASF547:
+	.ascii	"List_update_data_list\000"
+.LASF308:
+	.ascii	"g_totle_sys_slc_erase_count\000"
+.LASF124:
+	.ascii	"maxDieNum\000"
+.LASF246:
+	.ascii	"g_gc_num_req\000"
+.LASF91:
+	.ascii	"maxLogicBlk\000"
+.LASF150:
+	.ascii	"totle_power_on_run_times\000"
+.LASF521:
+	.ascii	"log2phys\000"
+.LASF469:
+	.ascii	"detected_error_page\000"
+.LASF583:
+	.ascii	"spareBuf\000"
+.LASF188:
+	.ascii	"c_ftl_nand_blks_per_die_shift\000"
+.LASF140:
+	.ascii	"ftl_sys_ext_info\000"
+.LASF265:
+	.ascii	"p_l2p_ram_map\000"
+.LASF97:
+	.ascii	"maxBlkNum\000"
+.LASF662:
+	.ascii	"ftl_malloc\000"
+.LASF444:
+	.ascii	"pDataHeader\000"
+.LASF170:
+	.ascii	"current_page\000"
+.LASF81:
+	.ascii	"erase_blk\000"
+.LASF455:
+	.ascii	"SupperBlkListInit\000"
+.LASF634:
+	.ascii	"create_first_active_superblock\000"
+.LASF166:
+	.ascii	"sys_blk_queue\000"
+.LASF34:
+	.ascii	"file_operations\000"
+.LASF360:
+	.ascii	"FlashProgPages\000"
+.LASF519:
+	.ascii	"ppn_index\000"
+.LASF9:
+	.ascii	"long long unsigned int\000"
+.LASF220:
+	.ascii	"g_VaildLpn\000"
+.LASF249:
+	.ascii	"p_erase_count_table\000"
+.LASF528:
+	.ascii	"select_l2p_ram_region\000"
+.LASF438:
+	.ascii	"GetFreeBlockMaxEraseCount\000"
+.LASF552:
+	.ascii	"prev_multiplier_value\000"
+.LASF21:
+	.ascii	"__security_initcall_end\000"
+.LASF40:
+	.ascii	"panic_on_oops\000"
+.LASF267:
+	.ascii	"g_l2p_last_update_region_id\000"
+.LASF201:
+	.ascii	"c_ftl_nand_totle_phy_blks\000"
+.LASF636:
+	.ascii	"FtlLowFormatEraseBlock\000"
+.LASF76:
+	.ascii	"byte_per_sec\000"
+.LASF181:
+	.ascii	"des_ppa\000"
+.LASF255:
+	.ascii	"p_map_block_table\000"
+.LASF548:
+	.ascii	"prev_node_id\000"
+.LASF243:
+	.ascii	"p_gc_data_buf\000"
+.LASF532:
+	.ascii	"FtlMapWritePage\000"
+.LASF16:
+	.ascii	"elf_hwcap2\000"
+.LASF254:
+	.ascii	"p_blk_mode_table\000"
+.LASF285:
+	.ascii	"g_gc_cur_blk_valid_pages\000"
+.LASF579:
+	.ascii	"FtlFreeSysBlkQueueEmpty\000"
+.LASF194:
+	.ascii	"c_ftl_nand_page_pre_slc_blk\000"
+.LASF515:
+	.ascii	"nSec\000"
+.LASF597:
+	.ascii	"FtlBbtCalcTotleCnt\000"
+.LASF196:
+	.ascii	"c_ftl_nand_sec_pre_page\000"
+.LASF495:
+	.ascii	"FtlSlcSuperblockCheck\000"
+.LASF586:
+	.ascii	"ver1\000"
+.LASF153:
+	.ascii	"SlcPartLbaEndSector\000"
+.LASF206:
+	.ascii	"c_ftl_nand_max_map_blks\000"
+.LASF497:
+	.ascii	"FtlGcReFreshBadBlk\000"
+.LASF476:
+	.ascii	"last_mlc_page_version\000"
+.LASF508:
+	.ascii	"FtlMapBlkWriteDump_data\000"
+.LASF248:
+	.ascii	"g_ect_tbl_info_size\000"
+.LASF110:
+	.ascii	"totleEc\000"
+.LASF440:
+	.ascii	"GetFreeBlockMinEraseCount\000"
+.LASF437:
+	.ascii	"minDataBlockEraseCount\000"
+.LASF51:
+	.ascii	"SYSTEM_POWER_OFF\000"
+.LASF218:
+	.ascii	"g_MaxLbaSector\000"
+.LASF87:
+	.ascii	"version\000"
+.LASF31:
+	.ascii	"dmesg_restrict\000"
+.LASF464:
+	.ascii	"next_free_active_page\000"
+.LASF132:
+	.ascii	"gcTempSuperblockId\000"
+.LASF623:
+	.ascii	"first_lpa_nscts\000"
+.LASF302:
+	.ascii	"g_totle_cache_write_count\000"
+.LASF496:
+	.ascii	"ftl_set_blk_mode\000"
+.LASF452:
+	.ascii	"Ftl_load_ext_data\000"
+.LASF506:
+	.ascii	"FtlWriteDump_data\000"
+.LASF638:
+	.ascii	"max_test_page_num\000"
+.LASF393:
+	.ascii	"Ftl_gc_temp_data_write_back\000"
+.LASF369:
+	.ascii	"block_in_die\000"
+.LASF418:
+	.ascii	"FtlGcBufInit\000"
+.LASF234:
+	.ascii	"p_plane_order_table\000"
+.LASF101:
+	.ascii	"pMapPpnTbl\000"
+.LASF430:
+	.ascii	"free_data_superblock\000"
+.LASF146:
+	.ascii	"sys_slc_erase_count\000"
+.LASF207:
+	.ascii	"c_ftl_nand_max_vendor_blks\000"
+.LASF378:
+	.ascii	"physical_block\000"
+.LASF448:
+	.ascii	"FtlVpcCheckAndModify\000"
+.LASF279:
+	.ascii	"g_sys_save_data\000"
+.LASF84:
+	.ascii	"ftl_bbt_info\000"
+.LASF428:
+	.ascii	"free_blk_index\000"
+.LASF253:
+	.ascii	"p_valid_page_count_check_table\000"
+.LASF212:
+	.ascii	"c_ftl_nand_data_blks_per_plane\000"
+.LASF371:
+	.ascii	"rk_ftl_garbage_collect\000"
+.LASF657:
+	.ascii	"memcmp\000"
+.LASF373:
+	.ascii	"numPages\000"
+.LASF314:
+	.ascii	"g_gc_head_data_block_count\000"
+.LASF258:
+	.ascii	"p_map_region_ppn_table\000"
+.LASF527:
+	.ascii	"l2p_flush\000"
+.LASF458:
+	.ascii	"make_superblock\000"
+.LASF19:
+	.ascii	"__con_initcall_end\000"
+.LASF632:
+	.ascii	"bad_block_cnt\000"
+.LASF550:
+	.ascii	"node_multiplier_value\000"
+.LASF333:
+	.ascii	"g_ect_tbl_power_up_flush\000"
+.LASF319:
+	.ascii	"g_recovery_ppa_tbl\000"
+.LASF526:
+	.ascii	"found_lpa\000"
+.LASF280:
+	.ascii	"g_sys_ext_data\000"
+.LASF356:
+	.ascii	"flash_type\000"
+.LASF416:
+	.ascii	"req_num\000"
+.LASF511:
+	.ascii	"forceFlush\000"
+.LASF56:
+	.ascii	"uint8\000"
+.LASF332:
+	.ascii	"power_up_flag\000"
+.LASF282:
+	.ascii	"p_gc_blk_tbl\000"
+.LASF414:
+	.ascii	"FtlGcBufAlloc\000"
+.LASF191:
+	.ascii	"c_ftl_nand_ext_blk_pre_plane\000"
+.LASF379:
+	.ascii	"max_gc_page_num\000"
+.LASF198:
+	.ascii	"c_ftl_nand_byte_pre_page\000"
+.LASF441:
+	.ascii	"update_multiplier_value\000"
+.LASF619:
+	.ascii	"flashType\000"
+.LASF6:
+	.ascii	"short int\000"
+.LASF242:
+	.ascii	"p_gc_spare_buf\000"
+.LASF494:
+	.ascii	"sblk\000"
+.LASF372:
+	.ascii	"mode\000"
+.LASF426:
+	.ascii	"new_id\000"
+.LASF629:
+	.ascii	"pNand\000"
+.LASF49:
+	.ascii	"SYSTEM_RUNNING\000"
+.LASF516:
+	.ascii	"pBuf\000"
+.LASF142:
+	.ascii	"write_page_count\000"
+.LASF604:
+	.ascii	"bitmap\000"
+.LASF200:
+	.ascii	"c_ftl_nand_reserved_blks\000"
+.LASF669:
+	.ascii	"sftl_get_density\000"
+.LASF640:
+	.ascii	"test_page_step\000"
+.LASF595:
+	.ascii	"blkAddr\000"
+.LASF286:
+	.ascii	"g_gc_cur_blk_max_valid_pages\000"
+.LASF288:
+	.ascii	"g_gc_next_blk_1\000"
+.LASF529:
+	.ascii	"target_region\000"
+.LASF613:
+	.ascii	"end_lpa\000"
+.LASF473:
+	.ascii	"scan_completed\000"
+.LASF656:
+	.ascii	"FtlPrintInfo2buf\000"
+.LASF365:
+	.ascii	"p_die\000"
+.LASF239:
+	.ascii	"p_io_data_buf_0\000"
+.LASF240:
+	.ascii	"p_io_data_buf_1\000"
+.LASF137:
+	.ascii	"mlc_erase_count\000"
+.LASF178:
+	.ascii	"phyBlk\000"
+.LASF626:
+	.ascii	"sftl_deinit\000"
+.LASF486:
+	.ascii	"pMapBlockInfo\000"
+.LASF151:
+	.ascii	"last_refresh_data_times\000"
+.LASF667:
+	.ascii	"system_states\000"
+.LASF159:
+	.ascii	"totle_write_sector\000"
+.LASF229:
+	.ascii	"req_prgm\000"
+.LASF591:
+	.ascii	"FtlMakeBbt\000"
+.LASF102:
+	.ascii	"in_gc_mode\000"
+.LASF434:
+	.ascii	"min_ec\000"
+.LASF60:
+	.ascii	"int16\000"
+.LASF281:
+	.ascii	"p_gc_page_info\000"
+.LASF211:
+	.ascii	"c_ftl_nand_max_sys_blks\000"
+.LASF439:
+	.ascii	"max_ec\000"
+.LASF238:
+	.ascii	"p_sys_spare_buf\000"
+.LASF670:
+	.ascii	"memcpy\000"
+.LASF504:
+	.ascii	"prog_error_count\000"
+.LASF336:
+	.ascii	"gc_discard_updated\000"
+.LASF412:
+	.ascii	"prev_superblock_id\000"
+.LASF639:
+	.ascii	"test_page_num\000"
+.LASF156:
+	.ascii	"last_refresh_read_count\000"
+.LASF478:
+	.ascii	"lookup_ppa_ver\000"
+.LASF490:
+	.ascii	"totleBlkNum\000"
+.LASF609:
+	.ascii	"sftl_read\000"
+.LASF578:
+	.ascii	"FtlFreeSysBlkQueueFull\000"
+.LASF409:
+	.ascii	"FtlGcPageVarInit\000"
+.LASF112:
+	.ascii	"padding\000"
+.LASF174:
+	.ascii	"flash_mode\000"
+.LASF468:
+	.ascii	"recovery_cur_page_ver\000"
+.LASF537:
+	.ascii	"ftl_map_blk_gc\000"
+.LASF608:
+	.ascii	"sftl_write\000"
+.LASF118:
+	.ascii	"ftl_map_blk_header\000"
+.LASF580:
+	.ascii	"FtlFreeSysBlkQueueInit\000"
+.LASF25:
+	.ascii	"late_time_init\000"
+.LASF647:
+	.ascii	"mem_size\000"
+.LASF485:
+	.ascii	"FtlMapTblRecovery\000"
+.LASF423:
+	.ascii	"new_ppa\000"
+.LASF427:
+	.ascii	"num_bad_block\000"
+.LASF525:
+	.ascii	"lpn_index\000"
+.LASF203:
+	.ascii	"c_ftl_nand_l2pmap_ram_region_num\000"
+.LASF625:
+	.ascii	"sector\000"
+.LASF507:
+	.ascii	"num_page\000"
+.LASF618:
+	.ascii	"FtlProgPages\000"
+.LASF417:
+	.ascii	"FtlGcBufFree\000"
+.LASF271:
+	.ascii	"p_data_block_list_tail\000"
+.LASF398:
+	.ascii	"current_ppa\000"
+.LASF64:
+	.ascii	"p_spare\000"
+.LASF383:
+	.ascii	"tmp_blk\000"
+.LASF294:
+	.ascii	"g_gc_blk_index\000"
+.LASF500:
+	.ascii	"block_in_plane\000"
+.LASF111:
+	.ascii	"lastEc\000"
+.LASF352:
+	.ascii	"PhyBlk\000"
+.LASF106:
+	.ascii	"reserved\000"
+.LASF317:
+	.ascii	"g_recovery_page_num\000"
+.LASF549:
+	.ascii	"node_valid_page_count\000"
+.LASF179:
+	.ascii	"ftl_gc_page_item\000"
+.LASF143:
+	.ascii	"read_page_count\000"
+.LASF419:
+	.ascii	"decrement_vpc_count\000"
+.LASF7:
+	.ascii	"short unsigned int\000"
+.LASF539:
+	.ascii	"minValidPageIndex\000"
+.LASF331:
+	.ascii	"TotleReadBufferMatchCount\000"
+.LASF340:
+	.ascii	"check_spare_buf\000"
+.LASF574:
+	.ascii	"tmp_ec\000"
+.LASF315:
+	.ascii	"g_gc_skip_write_count\000"
+.LASF59:
+	.ascii	"int32\000"
+.LASF73:
+	.ascii	"page_per_slc_blk\000"
+.LASF318:
+	.ascii	"g_recovery_page_min_ver\000"
+.LASF227:
+	.ascii	"req_sys\000"
+.LASF162:
+	.ascii	"List_Node\000"
+.LASF653:
+	.ascii	"Ftl_log2\000"
+.LASF152:
+	.ascii	"all_blk_used_slc_mode\000"
+.LASF396:
+	.ascii	"pSuperblock\000"
+.LASF474:
+	.ascii	"function_exit\000"
+.LASF205:
+	.ascii	"c_ftl_nand_map_blks_per_plane\000"
+.LASF17:
+	.ascii	"initcall_t\000"
+.LASF590:
+	.ascii	"V2P_block\000"
+.LASF115:
+	.ascii	"sysBlksPerPlane\000"
+.LASF454:
+	.ascii	"Ftl_save_ext_data\000"
+.LASF617:
+	.ascii	"FtlCacheWriteBack\000"
+.LASF79:
+	.ascii	"nand_ops\000"
+.LASF630:
+	.ascii	"load_bbt\000"
+.LASF650:
+	.ascii	"blkNum\000"
+.LASF367:
+	.ascii	"page_index\000"
+.LASF502:
+	.ascii	"FtlVpcTblFlush\000"
+.LASF109:
+	.ascii	"hash\000"
+.LASF571:
+	.ascii	"IsInFreeQueue\000"
+.LASF471:
+	.ascii	"read_super_page_end\000"
+.LASF357:
+	.ascii	"num_req\000"
+.LASF320:
+	.ascii	"c_mlc_erase_count_value\000"
+.LASF553:
+	.ascii	"pPrev\000"
+.LASF138:
+	.ascii	"GlobalDataVersion\000"
+.LASF41:
+	.ascii	"panic_on_unrecovered_nmi\000"
+.LASF163:
+	.ascii	"next\000"
+.LASF128:
+	.ascii	"activeSuperblockId\000"
+.LASF376:
+	.ascii	"plane\000"
+.LASF43:
+	.ascii	"panic_on_warn\000"
+.LASF92:
+	.ascii	"ftl_l2p_map_info\000"
+.LASF164:
+	.ascii	"prev\000"
+.LASF57:
+	.ascii	"uint16\000"
+.LASF350:
+	.ascii	"ftl_memset\000"
+.LASF534:
+	.ascii	"Ftl_write_map_blk_to_last_page\000"
+.LASF45:
+	.ascii	"crash_kexec_post_notifiers\000"
+.LASF289:
+	.ascii	"g_gc_bad_block_temp_num\000"
+.LASF123:
+	.ascii	"ftl_sys_save_info\000"
+.LASF278:
+	.ascii	"gp_last_act_superblock\000"
+.LASF576:
+	.ascii	"erase_flag\000"
+.LASF487:
+	.ascii	"blk_id\000"
+.LASF337:
+	.ascii	"ftl_gc_temp_block_bops_scan_page_addr\000"
diff --git a/drivers/rkflash/rk_sftl_arm_v8.S b/drivers/rkflash/rk_sftl_arm_v8.S
new file mode 100644
index 000000000000..154f15f2767a
--- /dev/null
+++ b/drivers/rkflash/rk_sftl_arm_v8.S
@@ -0,0 +1,38819 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+/*
+ * Copyright (c) 2018 Rockchip Electronics Co. Ltd.
+ * date: 2018-06-13
+ */
+	.arch armv8-a
+	.file	"rk_sftl.c"
+	.text
+.Ltext0:
+	.cfi_sections	.debug_frame
+#APP
+	.irp	num,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30
+	.equ	.L__reg_num_x\num, \num
+	.endr
+	.equ	.L__reg_num_xzr, 31
+
+	.macro	mrs_s, rt, sreg
+	.inst	0xd5200000|(\sreg)|(.L__reg_num_\rt)
+	.endm
+
+	.macro	msr_s, sreg, rt
+	.inst	0xd5000000|(\sreg)|(.L__reg_num_\rt)
+	.endm
+
+#NO_APP
+	.align	2
+	.type	l2p_addr_tran.isra.0, %function
+l2p_addr_tran.isra.0:
+.LFB269:
+	.file 1 "drivers/rkflash/rksftl/sftl_flash.c"
+	.loc 1 17 0
+	.cfi_startproc
+.LVL0:
+	.loc 1 25 0
+	adrp	x4, g_nand_phy_info
+	add	x4, x4, :lo12:g_nand_phy_info
+	ldrh	w3, [x4, 8]
+.LVL1:
+	.loc 1 26 0
+	ldrh	w6, [x4, 10]
+.LVL2:
+	.loc 1 27 0
+	ldrh	w4, [x4, 14]
+	cmp	w4, 4
+	bne	.L2
+	.loc 1 28 0
+	lsr	w3, w3, 1
+	.loc 1 29 0
+	ubfiz	w6, w6, 1, 15
+.L2:
+	.loc 1 33 0
+	lsr	w5, w0, 10
+	.loc 1 37 0
+	and	w0, w0, 1023
+	.loc 1 34 0
+	and	w4, w5, 65535
+	.loc 1 35 0
+	and	w5, w5, 65535
+	.loc 1 34 0
+	udiv	w4, w4, w3
+.LVL3:
+	.loc 1 35 0
+	msub	w3, w3, w4, w5
+.LVL4:
+	.loc 1 37 0
+	madd	w3, w3, w6, w0
+.LVL5:
+	.loc 1 41 0
+	mov	w0, 0
+	.loc 1 37 0
+	str	w3, [x1]
+	.loc 1 38 0
+	str	w4, [x2]
+	.loc 1 41 0
+	ret
+	.cfi_endproc
+.LFE269:
+	.size	l2p_addr_tran.isra.0, .-l2p_addr_tran.isra.0
+	.align	2
+	.type	ftl_set_blk_mode.part.7, %function
+ftl_set_blk_mode.part.7:
+.LFB276:
+	.file 2 "drivers/rkflash/rksftl/sftl_sys.c"
+	.loc 2 1346 0
+	.cfi_startproc
+.LVL6:
+	.loc 2 1346 0
+	and	w0, w0, 65535
+	.loc 2 1349 0
+	adrp	x2, .LANCHOR0
+	ubfx	x1, x0, 5, 11
+	ldr	x3, [x2, #:lo12:.LANCHOR0]
+	lsl	x1, x1, 2
+	mov	w2, 1
+	lsl	w2, w2, w0
+	ldr	w0, [x3, x1]
+.LVL7:
+	orr	w0, w0, w2
+	str	w0, [x3, x1]
+	ret
+	.cfi_endproc
+.LFE276:
+	.size	ftl_set_blk_mode.part.7, .-ftl_set_blk_mode.part.7
+	.align	2
+	.global	Ftl_log2
+	.type	Ftl_log2, %function
+Ftl_log2:
+.LFB141:
+	.file 3 "drivers/rkflash/rksftl/sftl_plat.c"
+	.loc 3 128 0
+	.cfi_startproc
+.LVL8:
+	.loc 3 130 0
+	mov	w2, 1
+.LVL9:
+	.loc 3 132 0
+	mov	w1, 0
+.L5:
+	.loc 3 132 0 is_stmt 0 discriminator 1
+	cmp	w2, w0
+	bls	.L6
+	.loc 3 134 0 is_stmt 1
+	sub	w0, w1, #1
+.LVL10:
+	.loc 3 136 0
+	ret
+.LVL11:
+.L6:
+	.loc 3 132 0 discriminator 3
+	add	w1, w1, 1
+	.loc 3 133 0 discriminator 3
+	lsl	w2, w2, 1
+	.loc 3 132 0 discriminator 3
+	and	w1, w1, 65535
+	b	.L5
+	.cfi_endproc
+.LFE141:
+	.size	Ftl_log2, .-Ftl_log2
+	.align	2
+	.global	FtlPrintInfo
+	.type	FtlPrintInfo, %function
+FtlPrintInfo:
+.LFB142:
+	.loc 3 159 0
+	.cfi_startproc
+.LVL12:
+	ret
+	.cfi_endproc
+.LFE142:
+	.size	FtlPrintInfo, .-FtlPrintInfo
+	.align	2
+	.global	FtlSysBlkNumInit
+	.type	FtlSysBlkNumInit, %function
+FtlSysBlkNumInit:
+.LFB143:
+	.loc 3 165 0
+	.cfi_startproc
+.LVL13:
+	.loc 3 165 0
+	and	w0, w0, 65535
+	mov	w1, 24
+	cmp	w0, 24
+	csel	w0, w0, w1, cs
+.LVL14:
+	.loc 3 168 0
+	adrp	x1, .LANCHOR0
+	add	x1, x1, :lo12:.LANCHOR0
+	and	w0, w0, 65535
+.LVL15:
+	.loc 3 169 0
+	ldrh	w2, [x1, 12]
+	.loc 3 170 0
+	ldrh	w3, [x1, 22]
+	.loc 3 168 0
+	str	w0, [x1, 8]
+	.loc 3 169 0
+	mul	w2, w2, w0
+	.loc 3 170 0
+	sub	w0, w3, w0
+.LVL16:
+	strh	w0, [x1, 20]
+	.loc 3 171 0
+	ldr	w0, [x1, 28]
+	.loc 3 169 0
+	str	w2, [x1, 16]
+	.loc 3 171 0
+	sub	w2, w0, w2
+	.loc 3 174 0
+	mov	w0, 0
+	.loc 3 171 0
+	str	w2, [x1, 24]
+	.loc 3 174 0
+	ret
+	.cfi_endproc
+.LFE143:
+	.size	FtlSysBlkNumInit, .-FtlSysBlkNumInit
+	.align	2
+	.global	FtlConstantsInit
+	.type	FtlConstantsInit, %function
+FtlConstantsInit:
+.LFB144:
+	.loc 3 183 0
+	.cfi_startproc
+.LVL17:
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	mov	x7, x0
+	.loc 3 188 0
+	adrp	x4, .LANCHOR0
+	add	x1, x4, :lo12:.LANCHOR0
+	.loc 3 183 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 3 188 0
+	ldrh	w3, [x0]
+	.loc 3 189 0
+	ldrh	w6, [x0, 2]
+	.loc 3 190 0
+	ldrh	w0, [x0, 4]
+.LVL18:
+	.loc 3 191 0
+	ldrh	w2, [x7, 14]
+	.loc 3 188 0
+	strh	w3, [x1, 32]
+	.loc 3 189 0
+	strh	w6, [x1, 34]
+	.loc 3 191 0
+	cmp	w2, 4
+	.loc 3 190 0
+	strh	w0, [x1, 36]
+	.loc 3 191 0
+	bne	.L10
+	.loc 3 192 0
+	ldrh	w2, [x7, 6]
+	lsr	w2, w2, 1
+	strh	w2, [x1, 22]
+	.loc 3 193 0
+	mov	w2, 8
+	strh	w2, [x1, 38]
+.L10:
+	.loc 3 197 0 discriminator 3
+	add	x2, x4, :lo12:.LANCHOR0
+	.loc 3 183 0 discriminator 3
+	mov	x1, 0
+	.loc 3 197 0 discriminator 3
+	add	x5, x2, 40
+.L11:
+	strb	w1, [x1, x5]
+	add	x1, x1, 1
+	.loc 3 196 0 discriminator 3
+	cmp	x1, 32
+	bne	.L11
+	.loc 3 198 0
+	mov	w1, 5
+	.loc 3 199 0
+	strh	wzr, [x2, 74]
+	.loc 3 198 0
+	strh	w1, [x2, 72]
+	.loc 3 200 0
+	cmp	w3, 1
+	bne	.L12
+	.loc 3 201 0
+	strh	w3, [x2, 72]
+.L12:
+	.loc 3 202 0
+	add	x3, x4, :lo12:.LANCHOR0
+	.loc 3 204 0
+	mul	w6, w6, w0
+	.loc 3 202 0
+	mov	w1, 640
+	.loc 3 204 0
+	and	w6, w6, 65535
+	.loc 3 205 0
+	ldrh	w5, [x3, 22]
+	.loc 3 202 0
+	strh	w1, [x3, 76]
+	.loc 3 204 0
+	strh	w6, [x3, 12]
+	.loc 3 205 0
+	mul	w0, w0, w5
+	and	w0, w0, 65535
+	strh	w0, [x3, 78]
+	.loc 3 206 0
+	bl	Ftl_log2
+.LVL19:
+	.loc 3 207 0
+	ldrh	w9, [x7, 12]
+	.loc 3 210 0
+	ldrh	w8, [x3, 38]
+	.loc 3 206 0
+	strh	w0, [x3, 80]
+	.loc 3 207 0
+	strh	w9, [x3, 82]
+	.loc 3 209 0
+	mul	w0, w6, w9
+	.loc 3 208 0
+	strh	w9, [x3, 84]
+	.loc 3 209 0
+	strh	w0, [x3, 86]
+	.loc 3 210 0
+	mov	w0, w8
+	bl	Ftl_log2
+.LVL20:
+	and	w2, w0, 65535
+	strh	w0, [x3, 88]
+	.loc 3 212 0
+	ubfiz	w0, w8, 9, 7
+	strh	w0, [x3, 90]
+	.loc 3 213 0
+	ubfx	w0, w0, 8, 8
+	strh	w0, [x3, 92]
+	.loc 3 214 0
+	ldrh	w0, [x7, 20]
+	strh	w0, [x3, 94]
+	.loc 3 216 0
+	mul	w0, w6, w5
+	str	w0, [x3, 28]
+	.loc 3 217 0
+	mul	w0, w0, w8
+	.loc 3 218 0
+	mul	w8, w8, w9
+	.loc 3 217 0
+	mul	w0, w0, w9
+	asr	w0, w0, 11
+	str	w0, [x3, 96]
+	.loc 3 218 0
+	mov	w0, 5120
+	sdiv	w0, w0, w8
+	and	w0, w0, 65535
+	.loc 3 219 0
+	cmp	w0, 4
+	bls	.L13
+.L19:
+	.loc 3 221 0
+	add	x1, x4, :lo12:.LANCHOR0
+	.loc 3 220 0
+	strh	w0, [x3, 100]
+	.loc 3 221 0
+	mov	w0, 640
+	.loc 3 223 0
+	lsl	w5, w5, 6
+	.loc 3 221 0
+	asr	w0, w0, w2
+	.loc 3 223 0
+	add	w2, w2, 9
+	.loc 3 221 0
+	add	w0, w0, 2
+	strh	w0, [x1, 102]
+	.loc 3 223 0
+	asr	w5, w5, w2
+	strh	w5, [x1, 104]
+	and	w5, w5, 65535
+	.loc 3 227 0
+	cmp	w6, 1
+	.loc 3 224 0
+	mul	w0, w5, w6
+	.loc 3 226 0
+	add	w5, w5, 8
+	.loc 3 224 0
+	str	w0, [x1, 108]
+	.loc 3 226 0
+	ldrh	w0, [x1, 100]
+	udiv	w0, w0, w6
+	add	w5, w0, w5
+	.loc 3 227 0
+	beq	.L15
+.L20:
+	.loc 3 231 0
+	add	x4, x4, :lo12:.LANCHOR0
+	.loc 3 228 0
+	str	w5, [x1, 8]
+	.loc 3 231 0
+	ldrh	w0, [x4, 8]
+	bl	FtlSysBlkNumInit
+.LVL21:
+	.loc 3 232 0
+	ldr	w0, [x4, 8]
+	str	w0, [x4, 112]
+	.loc 3 234 0
+	ldr	w0, [x4, 24]
+	ldrh	w1, [x4, 82]
+	.loc 3 236 0
+	str	wzr, [x4, 120]
+	.loc 3 234 0
+	lsl	w0, w0, 2
+	mul	w0, w0, w1
+	ldrh	w1, [x4, 88]
+	add	w1, w1, 9
+	lsr	w0, w0, w1
+	add	w0, w0, 2
+	strh	w0, [x4, 116]
+	.loc 3 235 0
+	mov	w0, 32
+	strh	w0, [x4, 118]
+	.loc 3 237 0
+	ldrh	w0, [x4, 100]
+	add	w0, w0, 3
+	strh	w0, [x4, 100]
+	.loc 3 238 0
+	ldr	w0, [x4, 108]
+	add	w0, w0, 3
+	str	w0, [x4, 108]
+	.loc 3 263 0
+	mov	w0, 0
+	ldp	x29, x30, [sp], 16
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+.L13:
+	.cfi_restore_state
+	.loc 3 220 0
+	mov	w0, 4
+	b	.L19
+.L15:
+	.loc 3 228 0
+	add	w5, w5, 4
+	b	.L20
+	.cfi_endproc
+.LFE144:
+	.size	FtlConstantsInit, .-FtlConstantsInit
+	.align	2
+	.global	IsBlkInVendorPart
+	.type	IsBlkInVendorPart, %function
+IsBlkInVendorPart:
+.LFB147:
+	.loc 3 514 0
+	.cfi_startproc
+.LVL22:
+	.loc 3 517 0
+	adrp	x1, .LANCHOR0
+	add	x1, x1, :lo12:.LANCHOR0
+	.loc 3 514 0
+	and	w0, w0, 65535
+	.loc 3 517 0
+	ldrh	w2, [x1, 124]
+	cbz	w2, .L25
+.LBB164:
+.LBB165:
+	.loc 3 518 0
+	ldrh	w2, [x1, 100]
+	.loc 3 519 0
+	ldr	x3, [x1, 128]
+	mov	x1, 0
+.L23:
+	.loc 3 518 0
+	cmp	w2, w1, uxth
+	bhi	.L24
+.L25:
+.LBE165:
+.LBE164:
+	.loc 3 524 0
+	mov	w0, 0
+.LVL23:
+	ret
+.LVL24:
+.L24:
+	add	x1, x1, 1
+.LBB167:
+.LBB166:
+	.loc 3 519 0
+	add	x4, x3, x1, lsl 1
+	ldrh	w4, [x4, -2]
+	cmp	w4, w0
+	bne	.L23
+	.loc 3 520 0
+	mov	w0, 1
+.LVL25:
+.LBE166:
+.LBE167:
+	.loc 3 525 0
+	ret
+	.cfi_endproc
+.LFE147:
+	.size	IsBlkInVendorPart, .-IsBlkInVendorPart
+	.align	2
+	.global	sftl_get_density
+	.type	sftl_get_density, %function
+sftl_get_density:
+.LFB160:
+	.loc 3 1212 0
+	.cfi_startproc
+	.loc 3 1214 0
+	adrp	x0, .LANCHOR0+120
+	ldr	w0, [x0, #:lo12:.LANCHOR0+120]
+	ret
+	.cfi_endproc
+.LFE160:
+	.size	sftl_get_density, .-sftl_get_density
+	.align	2
+	.global	FtlBbmMapBadBlock
+	.type	FtlBbmMapBadBlock, %function
+FtlBbmMapBadBlock:
+.LFB161:
+	.file 4 "drivers/rkflash/rksftl/sftl_bbm.c"
+	.loc 4 5 0
+	.cfi_startproc
+.LVL26:
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	and	w1, w0, 65535
+.LVL27:
+	.loc 4 15 0
+	mov	w4, 1
+	.loc 4 5 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	str	x19, [sp, 16]
+	.cfi_offset 19, -16
+	.loc 4 10 0
+	adrp	x19, .LANCHOR0
+	add	x19, x19, :lo12:.LANCHOR0
+	.loc 4 13 0
+	add	x19, x19, 136
+	.loc 4 10 0
+	ldrh	w0, [x19, -58]
+	udiv	w3, w1, w0
+	and	w2, w3, 65535
+.LVL28:
+	msub	w3, w3, w0, w1
+	.loc 4 13 0
+	add	x0, x19, x2, uxth 3
+	and	w3, w3, 65535
+	.loc 4 15 0
+	ldr	x0, [x0, 32]
+	ubfx	x5, x3, 5, 11
+	lsl	x5, x5, 2
+	lsl	w4, w4, w3
+	ldr	w6, [x0, x5]
+	orr	w4, w4, w6
+	str	w4, [x0, x5]
+	.loc 4 16 0
+	adrp	x0, .LC0
+	add	x0, x0, :lo12:.LC0
+	bl	printk
+.LVL29:
+	.loc 4 17 0
+	ldrh	w0, [x19, 6]
+	add	w0, w0, 1
+	strh	w0, [x19, 6]
+	.loc 4 19 0
+	mov	w0, 0
+	ldr	x19, [sp, 16]
+	ldp	x29, x30, [sp], 32
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE161:
+	.size	FtlBbmMapBadBlock, .-FtlBbmMapBadBlock
+	.align	2
+	.global	FtlBbmIsBadBlock
+	.type	FtlBbmIsBadBlock, %function
+FtlBbmIsBadBlock:
+.LFB162:
+	.loc 4 24 0
+	.cfi_startproc
+.LVL30:
+	.loc 4 30 0
+	adrp	x2, .LANCHOR0
+	add	x3, x2, :lo12:.LANCHOR0
+	.loc 4 24 0
+	and	w0, w0, 65535
+	.loc 4 30 0
+	ldrh	w1, [x3, 78]
+	.loc 4 31 0
+	udiv	w2, w0, w1
+	msub	w0, w2, w1, w0
+.LVL31:
+	.loc 4 33 0
+	add	x2, x3, x2, uxth 3
+	.loc 4 31 0
+	and	w0, w0, 65535
+.LVL32:
+	.loc 4 34 0
+	ldr	x1, [x2, 168]
+	ubfx	x3, x0, 5, 11
+	ldr	w1, [x1, x3, lsl 2]
+	lsr	w0, w1, w0
+.LVL33:
+	.loc 4 36 0
+	and	w0, w0, 1
+	ret
+	.cfi_endproc
+.LFE162:
+	.size	FtlBbmIsBadBlock, .-FtlBbmIsBadBlock
+	.align	2
+	.global	FtlBbtInfoPrint
+	.type	FtlBbtInfoPrint, %function
+FtlBbtInfoPrint:
+.LFB163:
+	.loc 4 39 0
+	.cfi_startproc
+	ret
+	.cfi_endproc
+.LFE163:
+	.size	FtlBbtInfoPrint, .-FtlBbtInfoPrint
+	.align	2
+	.global	FtlBbtCalcTotleCnt
+	.type	FtlBbtCalcTotleCnt, %function
+FtlBbtCalcTotleCnt:
+.LFB167:
+	.loc 4 157 0
+	.cfi_startproc
+	.loc 4 160 0
+	adrp	x0, .LANCHOR0
+	add	x0, x0, :lo12:.LANCHOR0
+	mov	w4, 0
+.LVL34:
+	.loc 4 159 0
+	mov	w5, 0
+.LVL35:
+	.loc 4 160 0
+	ldrh	w6, [x0, 78]
+	ldrh	w0, [x0, 34]
+	mul	w6, w6, w0
+	cmp	w4, w6
+	blt	.L42
+	.loc 4 169 0
+	mov	w0, w5
+	ret
+.L42:
+	.loc 4 157 0
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+.L35:
+	.loc 4 162 0
+	mov	w0, w4
+	bl	FtlBbmIsBadBlock
+.LVL36:
+	cbz	w0, .L34
+	.loc 4 164 0
+	add	w5, w5, 1
+.LVL37:
+	and	w5, w5, 65535
+.LVL38:
+.L34:
+	.loc 4 160 0 discriminator 2
+	add	w4, w4, 1
+.LVL39:
+	and	w4, w4, 65535
+.LVL40:
+	cmp	w4, w6
+	blt	.L35
+	.loc 4 169 0
+	mov	w0, w5
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE167:
+	.size	FtlBbtCalcTotleCnt, .-FtlBbtCalcTotleCnt
+	.align	2
+	.global	V2P_block
+	.type	V2P_block, %function
+V2P_block:
+.LFB171:
+	.loc 2 5 0
+	.cfi_startproc
+.LVL41:
+	.loc 2 8 0
+	adrp	x4, .LANCHOR0
+	add	x4, x4, :lo12:.LANCHOR0
+	.loc 2 5 0
+	and	w0, w0, 65535
+	and	w1, w1, 65535
+	.loc 2 8 0
+	ldrh	w2, [x4, 36]
+	ldrh	w4, [x4, 78]
+	udiv	w3, w0, w2
+	msub	w0, w3, w2, w0
+.LVL42:
+	madd	w2, w2, w1, w0
+	madd	w0, w3, w4, w2
+	.loc 2 10 0
+	ret
+	.cfi_endproc
+.LFE171:
+	.size	V2P_block, .-V2P_block
+	.align	2
+	.global	P2V_plane
+	.type	P2V_plane, %function
+P2V_plane:
+.LFB172:
+	.loc 2 13 0
+	.cfi_startproc
+.LVL43:
+	.loc 2 16 0
+	adrp	x2, .LANCHOR0
+	add	x2, x2, :lo12:.LANCHOR0
+	.loc 2 13 0
+	and	w3, w0, 65535
+.LVL44:
+	.loc 2 16 0
+	ldrh	w1, [x2, 36]
+	ldrh	w2, [x2, 78]
+	udiv	w0, w3, w1
+	udiv	w2, w3, w2
+	msub	w0, w0, w1, w3
+	madd	w0, w1, w2, w0
+	.loc 2 18 0
+	ret
+	.cfi_endproc
+.LFE172:
+	.size	P2V_plane, .-P2V_plane
+	.align	2
+	.global	P2V_block_in_plane
+	.type	P2V_block_in_plane, %function
+P2V_block_in_plane:
+.LFB173:
+	.loc 2 21 0
+	.cfi_startproc
+.LVL45:
+	.loc 2 24 0
+	adrp	x1, .LANCHOR0
+	add	x1, x1, :lo12:.LANCHOR0
+	.loc 2 21 0
+	and	w3, w0, 65535
+.LVL46:
+	.loc 2 24 0
+	ldrh	w2, [x1, 78]
+	.loc 2 25 0
+	ldrh	w1, [x1, 36]
+	.loc 2 24 0
+	udiv	w0, w3, w2
+	msub	w0, w0, w2, w3
+	and	w0, w0, 65535
+	.loc 2 27 0
+	udiv	w0, w0, w1
+	ret
+	.cfi_endproc
+.LFE173:
+	.size	P2V_block_in_plane, .-P2V_block_in_plane
+	.align	2
+	.global	ftl_cmp_data_ver
+	.type	ftl_cmp_data_ver, %function
+ftl_cmp_data_ver:
+.LFB174:
+	.loc 2 31 0
+	.cfi_startproc
+.LVL47:
+	.loc 2 34 0
+	cmp	w0, w1
+	mov	w2, -2147483648
+	bls	.L47
+	.loc 2 36 0
+	sub	w1, w0, w1
+.LVL48:
+	cmp	w1, w2
+	cset	w0, ls
+.LVL49:
+	ret
+.LVL50:
+.L47:
+	.loc 2 40 0
+	sub	w1, w1, w0
+.LVL51:
+	cmp	w1, w2
+	cset	w0, hi
+.LVL52:
+	.loc 2 44 0
+	ret
+	.cfi_endproc
+.LFE174:
+	.size	ftl_cmp_data_ver, .-ftl_cmp_data_ver
+	.align	2
+	.global	FtlFreeSysBlkQueueEmpty
+	.type	FtlFreeSysBlkQueueEmpty, %function
+FtlFreeSysBlkQueueEmpty:
+.LFB177:
+	.loc 2 88 0
+	.cfi_startproc
+	.loc 2 89 0
+	adrp	x0, .LANCHOR0+238
+	ldrh	w0, [x0, #:lo12:.LANCHOR0+238]
+	cmp	w0, 0
+	.loc 2 90 0
+	cset	w0, eq
+	ret
+	.cfi_endproc
+.LFE177:
+	.size	FtlFreeSysBlkQueueEmpty, .-FtlFreeSysBlkQueueEmpty
+	.align	2
+	.global	FtlFreeSysBlkQueueFull
+	.type	FtlFreeSysBlkQueueFull, %function
+FtlFreeSysBlkQueueFull:
+.LFB178:
+	.loc 2 93 0
+	.cfi_startproc
+	.loc 2 94 0
+	adrp	x0, .LANCHOR0+238
+	ldrh	w0, [x0, #:lo12:.LANCHOR0+238]
+	cmp	w0, 1024
+	.loc 2 95 0
+	cset	w0, eq
+	ret
+	.cfi_endproc
+.LFE178:
+	.size	FtlFreeSysBlkQueueFull, .-FtlFreeSysBlkQueueFull
+	.align	2
+	.global	FtlFreeSysBLkSort
+	.type	FtlFreeSysBLkSort, %function
+FtlFreeSysBLkSort:
+.LFB180:
+	.loc 2 116 0
+	.cfi_startproc
+	.loc 2 123 0
+	adrp	x2, .LANCHOR0
+	add	x7, x2, :lo12:.LANCHOR0
+	add	x6, x7, 232
+	mov	x4, x2
+	.loc 2 116 0
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	.loc 2 123 0
+	mov	w5, 0
+	.loc 2 116 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+.L52:
+	.loc 2 123 0 discriminator 1
+	ldrh	w0, [x6, 6]
+	cmp	w0, w5
+	bhi	.L53
+	.loc 2 128 0 discriminator 1
+	add	x2, x4, :lo12:.LANCHOR0
+	mov	w0, 0
+	add	x5, x2, 232
+.LVL53:
+.L54:
+	ldrh	w7, [x5, 6]
+	sub	w1, w7, #1
+.LVL54:
+	cmp	w0, w1
+	blt	.L59
+	.loc 2 144 0
+	ldp	x29, x30, [sp], 16
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+.LVL55:
+.L53:
+	.cfi_restore_state
+	.loc 2 124 0 discriminator 3
+	ldrh	w0, [x6, 2]
+	add	w0, w0, w5
+	add	x0, x6, x0, sxtw 1
+	ldrh	w0, [x0, 8]
+	bl	P2V_block_in_plane
+.LVL56:
+	.loc 2 125 0 discriminator 3
+	ldr	x3, [x7, 2296]
+	ubfiz	x0, x0, 1, 16
+	ldr	x2, [x7, 2288]
+	ubfiz	x1, x5, 2, 16
+	.loc 2 123 0 discriminator 3
+	add	w5, w5, 1
+	and	w5, w5, 65535
+	.loc 2 125 0 discriminator 3
+	ldrh	w0, [x3, x0]
+	str	w0, [x2, x1]
+	b	.L52
+.LVL57:
+.L59:
+	.loc 2 130 0
+	add	w6, w0, 1
+	.loc 2 131 0
+	ldr	x4, [x2, 2288]
+.LVL58:
+	.loc 2 130 0
+	and	w6, w6, 65535
+	mov	w1, w0
+.LVL59:
+	mov	w3, w6
+.L55:
+	.loc 2 130 0 is_stmt 0 discriminator 1
+	cmp	w3, w7
+	bcc	.L57
+	.loc 2 134 0 is_stmt 1
+	cmp	w0, w1
+	beq	.L58
+	.loc 2 136 0
+	ubfiz	x3, x0, 2, 16
+	.loc 2 135 0
+	ubfiz	x7, x1, 2, 32
+	.loc 2 136 0
+	ldr	w9, [x4, x3]
+	.loc 2 135 0
+	ldr	w8, [x4, x7]
+.LVL60:
+	.loc 2 136 0
+	str	w9, [x4, x7]
+	.loc 2 137 0
+	ldr	x4, [x2, 2288]
+.LVL61:
+	str	w8, [x4, x3]
+	.loc 2 139 0
+	ldrh	w3, [x5, 2]
+	.loc 2 140 0
+	add	w0, w0, w3
+	.loc 2 139 0
+	add	w1, w1, w3
+.LVL62:
+	.loc 2 140 0
+	add	x0, x5, x0, sxtw 1
+	.loc 2 139 0
+	add	x1, x5, x1, sxtw 1
+	.loc 2 140 0
+	ldrh	w3, [x0, 8]
+	.loc 2 139 0
+	ldrh	w4, [x1, 8]
+.LVL63:
+	.loc 2 140 0
+	strh	w3, [x1, 8]
+	.loc 2 141 0
+	strh	w4, [x0, 8]
+.LVL64:
+.L58:
+	.loc 2 130 0 discriminator 1
+	mov	w0, w6
+	b	.L54
+.LVL65:
+.L57:
+	.loc 2 131 0
+	ubfiz	x8, x3, 2, 16
+.LVL66:
+	ldr	w9, [x4, w1, uxtw 2]
+	ldr	w8, [x4, x8]
+	cmp	w9, w8
+	csel	w1, w1, w3, ls
+	.loc 2 130 0
+	add	w3, w3, 1
+	and	w3, w3, 65535
+	b	.L55
+	.cfi_endproc
+.LFE180:
+	.size	FtlFreeSysBLkSort, .-FtlFreeSysBLkSort
+	.align	2
+	.global	IsInFreeQueue
+	.type	IsInFreeQueue, %function
+IsInFreeQueue:
+.LFB181:
+	.loc 2 147 0
+	.cfi_startproc
+.LVL67:
+.LBB168:
+.LBB169:
+	.loc 2 94 0
+	adrp	x1, .LANCHOR0
+	add	x1, x1, :lo12:.LANCHOR0
+	add	x1, x1, 232
+.LBE169:
+.LBE168:
+	.loc 2 147 0
+	and	w0, w0, 65535
+.LBB171:
+.LBB170:
+	.loc 2 94 0
+	ldrh	w4, [x1, 6]
+.LBE170:
+.LBE171:
+	.loc 2 152 0
+	cmp	w4, 1024
+	beq	.L65
+	.loc 2 155 0
+	ldrh	w5, [x1, 2]
+	mov	w3, 0
+.LVL68:
+.L63:
+	.loc 2 154 0 discriminator 1
+	cmp	w3, w4
+	bcc	.L64
+.L65:
+	.loc 2 148 0
+	mov	w0, 0
+.LVL69:
+	ret
+.LVL70:
+.L64:
+	.loc 2 155 0
+	add	w2, w3, w5
+	ubfiz	x2, x2, 1, 10
+	add	x2, x1, x2
+	ldrh	w2, [x2, 8]
+	cmp	w2, w0
+	beq	.L66
+	.loc 2 154 0 discriminator 2
+	add	w3, w3, 1
+	b	.L63
+.L66:
+	.loc 2 156 0
+	mov	w0, 1
+.LVL71:
+	.loc 2 162 0
+	ret
+	.cfi_endproc
+.LFE181:
+	.size	IsInFreeQueue, .-IsInFreeQueue
+	.align	2
+	.global	FtlFreeSysBlkQueueOut
+	.type	FtlFreeSysBlkQueueOut, %function
+FtlFreeSysBlkQueueOut:
+.LFB182:
+	.loc 2 165 0
+	.cfi_startproc
+.LBB172:
+.LBB173:
+	.loc 2 89 0
+	adrp	x1, .LANCHOR0
+	add	x1, x1, :lo12:.LANCHOR0
+	add	x1, x1, 232
+	ldrh	w3, [x1, 6]
+.LBE173:
+.LBE172:
+	.loc 2 168 0
+	cbz	w3, .L69
+.LBB174:
+	.loc 2 170 0
+	ldrh	w2, [x1, 2]
+	.loc 2 171 0
+	sub	w3, w3, #1
+	strh	w3, [x1, 6]
+	.loc 2 170 0
+	add	x0, x1, x2, sxtw 1
+	.loc 2 172 0
+	add	w2, w2, 1
+	and	w2, w2, 1023
+	strh	w2, [x1, 2]
+	.loc 2 170 0
+	ldrh	w0, [x0, 8]
+.LVL72:
+.LVL73:
+	ret
+.L69:
+.LBE174:
+	.loc 2 166 0
+	mov	w0, 65535
+.LVL74:
+.LVL75:
+	.loc 2 176 0
+	ret
+	.cfi_endproc
+.LFE182:
+	.size	FtlFreeSysBlkQueueOut, .-FtlFreeSysBlkQueueOut
+	.align	2
+	.global	insert_data_list
+	.type	insert_data_list, %function
+insert_data_list:
+.LFB185:
+	.loc 2 217 0
+	.cfi_startproc
+.LVL76:
+	.loc 2 217 0
+	and	w0, w0, 65535
+	.loc 2 225 0
+	mov	w10, 65535
+	cmp	w0, w10
+	beq	.L71
+	.loc 2 230 0
+	adrp	x2, .LANCHOR0
+	add	x5, x2, :lo12:.LANCHOR0
+	mov	w7, 6
+	.loc 2 231 0
+	mov	w1, -1
+	mov	x3, x2
+	.loc 2 230 0
+	ldr	x12, [x5, 2304]
+	umull	x11, w0, w7
+	add	x4, x12, x11
+.LVL77:
+	.loc 2 231 0
+	strh	w1, [x4, 2]
+	strh	w1, [x12, x11]
+	.loc 2 233 0
+	ldr	x1, [x5, 2312]
+.LVL78:
+	cbnz	x1, .L72
+	.loc 2 234 0
+	str	x4, [x5, 2312]
+.LVL79:
+.L71:
+	.loc 2 281 0
+	mov	w0, 0
+.LVL80:
+	ret
+.LVL81:
+.L72:
+	.loc 2 238 0
+	ldr	x14, [x5, 2320]
+	ubfiz	x8, x0, 1, 16
+	.loc 2 239 0
+	ldrh	w2, [x4, 4]
+	.loc 2 244 0
+	mov	x15, -6148914691236517206
+	ldr	x13, [x5, 2304]
+	movk	x15, 0xaaab, lsl 0
+	.loc 2 239 0
+	cmp	w2, 0
+	mov	w9, -1
+	.loc 2 238 0
+	ldrh	w6, [x14, x8]
+.LVL82:
+	.loc 2 239 0
+	mul	w6, w6, w2
+.LVL83:
+	.loc 2 244 0
+	sub	x2, x1, x13
+	asr	x2, x2, 1
+	.loc 2 239 0
+	csel	w6, w6, w9, ne
+.LVL84:
+	.loc 2 244 0
+	mul	x2, x2, x15
+	.loc 2 252 0
+	ldr	x15, [x5, 2296]
+	.loc 2 244 0
+	and	w2, w2, 65535
+	.loc 2 252 0
+	add	x8, x15, x8
+.L79:
+	.loc 2 246 0
+	ubfiz	x16, x2, 1, 16
+	.loc 2 247 0
+	ldrh	w17, [x1, 4]
+	cmp	w17, 0
+	.loc 2 246 0
+	ldrh	w5, [x14, x16]
+.LVL85:
+	.loc 2 247 0
+	mul	w5, w5, w17
+.LVL86:
+	csel	w5, w5, w9, ne
+.LVL87:
+	.loc 2 251 0
+	cmp	w6, w5
+	bne	.L75
+	.loc 2 252 0
+	ldrh	w16, [x15, x16]
+	ldrh	w5, [x8]
+.LVL88:
+	cmp	w16, w5
+	bcc	.L77
+.LVL89:
+.L76:
+	.loc 2 270 0
+	strh	w2, [x12, x11]
+	.loc 2 271 0
+	ldrh	w2, [x1, 2]
+	strh	w2, [x4, 2]
+	.loc 2 273 0
+	add	x2, x3, :lo12:.LANCHOR0
+	ldr	x3, [x2, 2312]
+	cmp	x1, x3
+	bne	.L80
+	.loc 2 274 0
+	strh	w0, [x1, 2]
+	.loc 2 275 0
+	str	x4, [x2, 2312]
+	b	.L71
+.L75:
+	.loc 2 256 0
+	bcc	.L76
+.L77:
+	.loc 2 259 0
+	ldrh	w5, [x1]
+.LVL90:
+	cmp	w5, w10
+	bne	.L78
+	.loc 2 260 0
+	strh	w2, [x4, 2]
+	.loc 2 262 0
+	add	x2, x3, :lo12:.LANCHOR0
+	.loc 2 261 0
+	strh	w0, [x1]
+	.loc 2 262 0
+	str	x4, [x2, 2328]
+	.loc 2 263 0
+	b	.L71
+.L78:
+	.loc 2 267 0
+	umaddl	x1, w5, w7, x13
+	.loc 2 246 0
+	mov	w2, w5
+	b	.L79
+.LVL91:
+.L80:
+	.loc 2 277 0
+	ldrh	w3, [x1, 2]
+	mov	w4, 6
+.LVL92:
+	ldr	x2, [x2, 2304]
+	umull	x3, w3, w4
+	strh	w0, [x2, x3]
+	.loc 2 278 0
+	strh	w0, [x1, 2]
+	b	.L71
+	.cfi_endproc
+.LFE185:
+	.size	insert_data_list, .-insert_data_list
+	.align	2
+	.global	INSERT_DATA_LIST
+	.type	INSERT_DATA_LIST, %function
+INSERT_DATA_LIST:
+.LFB184:
+	.loc 2 186 0
+	.cfi_startproc
+.LVL93:
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 2 187 0
+	bl	insert_data_list
+.LVL94:
+	.loc 2 188 0
+	adrp	x1, .LANCHOR0
+	add	x1, x1, :lo12:.LANCHOR0
+	ldrh	w0, [x1, 2336]
+	add	w0, w0, 1
+	and	w0, w0, 65535
+	strh	w0, [x1, 2336]
+	.loc 2 189 0
+	ldrh	w1, [x1, 20]
+	cmp	w1, w0
+	bcs	.L83
+.LBB177:
+.LBB178:
+	adrp	x1, .LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 189
+	add	x1, x1, :lo12:.LANCHOR1
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL95:
+.L83:
+.LBE178:
+.LBE177:
+	.loc 2 190 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE184:
+	.size	INSERT_DATA_LIST, .-INSERT_DATA_LIST
+	.align	2
+	.global	insert_free_list
+	.type	insert_free_list, %function
+insert_free_list:
+.LFB186:
+	.loc 2 284 0
+	.cfi_startproc
+.LVL96:
+	.loc 2 284 0
+	and	w0, w0, 65535
+	.loc 2 290 0
+	mov	w7, 65535
+	cmp	w0, w7
+	beq	.L87
+	.loc 2 293 0
+	adrp	x2, .LANCHOR0
+	add	x5, x2, :lo12:.LANCHOR0
+	mov	w6, 6
+	.loc 2 294 0
+	mov	w1, -1
+	mov	x3, x2
+	.loc 2 293 0
+	ldr	x9, [x5, 2304]
+	umull	x8, w0, w6
+	add	x4, x9, x8
+.LVL97:
+	.loc 2 294 0
+	strh	w1, [x4, 2]
+	strh	w1, [x9, x8]
+	.loc 2 296 0
+	ldr	x1, [x5, 2344]
+.LVL98:
+	cbnz	x1, .L88
+	.loc 2 297 0
+	str	x4, [x5, 2344]
+.LVL99:
+.L87:
+	.loc 2 330 0
+	mov	w0, 0
+.LVL100:
+	ret
+.LVL101:
+.L88:
+	.loc 2 301 0
+	ldr	x11, [x5, 2296]
+	ubfiz	x2, x0, 1, 16
+	.loc 2 303 0
+	ldr	x10, [x5, 2304]
+	mov	x5, -6148914691236517206
+	movk	x5, 0xaaab, lsl 0
+	.loc 2 301 0
+	ldrh	w12, [x11, x2]
+.LVL102:
+	.loc 2 303 0
+	sub	x2, x1, x10
+	asr	x2, x2, 1
+	mul	x2, x2, x5
+	and	w2, w2, 65535
+.L91:
+	.loc 2 306 0
+	ubfiz	x5, x2, 1, 16
+	.loc 2 307 0
+	ldrh	w5, [x11, x5]
+	cmp	w5, w12
+	bcs	.L89
+	.loc 2 310 0
+	ldrh	w5, [x1]
+	cmp	w5, w7
+	bne	.L90
+	.loc 2 311 0
+	strh	w2, [x4, 2]
+	.loc 2 312 0
+	strh	w0, [x1]
+	.loc 2 313 0
+	b	.L87
+.L90:
+	.loc 2 316 0
+	umaddl	x1, w5, w6, x10
+	.loc 2 306 0
+	mov	w2, w5
+	b	.L91
+.L89:
+	.loc 2 319 0
+	ldrh	w5, [x1, 2]
+	strh	w5, [x4, 2]
+	.loc 2 320 0
+	strh	w2, [x9, x8]
+	.loc 2 322 0
+	add	x2, x3, :lo12:.LANCHOR0
+	ldr	x3, [x2, 2344]
+	cmp	x1, x3
+	bne	.L92
+	.loc 2 323 0
+	strh	w0, [x1, 2]
+	.loc 2 324 0
+	str	x4, [x2, 2344]
+	b	.L87
+.L92:
+	.loc 2 326 0
+	ldrh	w3, [x1, 2]
+	mov	w4, 6
+.LVL103:
+	ldr	x2, [x2, 2304]
+	umull	x3, w3, w4
+	strh	w0, [x2, x3]
+	.loc 2 327 0
+	strh	w0, [x1, 2]
+	b	.L87
+	.cfi_endproc
+.LFE186:
+	.size	insert_free_list, .-insert_free_list
+	.align	2
+	.global	INSERT_FREE_LIST
+	.type	INSERT_FREE_LIST, %function
+INSERT_FREE_LIST:
+.LFB183:
+	.loc 2 179 0
+	.cfi_startproc
+.LVL104:
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 2 180 0
+	bl	insert_free_list
+.LVL105:
+	.loc 2 181 0
+	adrp	x1, .LANCHOR0
+	add	x1, x1, :lo12:.LANCHOR0
+	ldrh	w0, [x1, 2352]
+	add	w0, w0, 1
+	and	w0, w0, 65535
+	strh	w0, [x1, 2352]
+	.loc 2 182 0
+	ldrh	w1, [x1, 20]
+	cmp	w1, w0
+	bcs	.L93
+.LBB181:
+.LBB182:
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 182
+	add	x1, x1, 24
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL106:
+.L93:
+.LBE182:
+.LBE181:
+	.loc 2 183 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE183:
+	.size	INSERT_FREE_LIST, .-INSERT_FREE_LIST
+	.align	2
+	.global	List_remove_node
+	.type	List_remove_node, %function
+List_remove_node:
+.LFB187:
+	.loc 2 333 0
+	.cfi_startproc
+.LVL107:
+	stp	x29, x30, [sp, -64]!
+	.cfi_def_cfa_offset 64
+	.cfi_offset 29, -64
+	.cfi_offset 30, -56
+	and	w1, w1, 65535
+	.loc 2 336 0
+	mov	w2, 6
+	.loc 2 333 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -48
+	.cfi_offset 20, -40
+	.loc 2 336 0
+	adrp	x19, .LANCHOR0
+	.loc 2 333 0
+	str	x23, [sp, 48]
+	.cfi_offset 23, -16
+	mov	x23, x0
+	.loc 2 336 0
+	add	x0, x19, :lo12:.LANCHOR0
+.LVL108:
+	.loc 2 333 0
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -32
+	.cfi_offset 22, -24
+	.loc 2 336 0
+	umull	x21, w1, w2
+	ldr	x22, [x0, 2304]
+	.loc 2 337 0
+	mov	w0, 65535
+	.loc 2 336 0
+	add	x20, x22, x21
+.LVL109:
+	.loc 2 337 0
+	ldrh	w1, [x20, 2]
+.LVL110:
+	cmp	w1, w0
+	bne	.L97
+	.loc 2 337 0 is_stmt 0 discriminator 1
+	ldr	x0, [x23]
+	cmp	x20, x0
+	beq	.L97
+	.loc 2 337 0 discriminator 2
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 337
+	add	x1, x1, 48
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL111:
+.L97:
+	.loc 2 339 0 is_stmt 1
+	ldr	x0, [x23]
+	mov	w1, 65535
+	cmp	x20, x0
+	ldrh	w0, [x22, x21]
+	bne	.L98
+	.loc 2 340 0
+	cmp	w0, w1
+	bne	.L99
+	.loc 2 341 0
+	str	xzr, [x23]
+.L100:
+	.loc 2 355 0
+	mov	w0, -1
+	strh	w0, [x22, x21]
+	strh	w0, [x20, 2]
+	.loc 2 357 0
+	mov	w0, 0
+	ldp	x19, x20, [sp, 16]
+.LVL112:
+	ldp	x21, x22, [sp, 32]
+	ldr	x23, [sp, 48]
+.LVL113:
+	ldp	x29, x30, [sp], 64
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 23
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL114:
+.L99:
+	.cfi_restore_state
+	.loc 2 343 0
+	add	x19, x19, :lo12:.LANCHOR0
+	mov	w2, 6
+	ldr	x1, [x19, 2304]
+	umaddl	x0, w0, w2, x1
+	.loc 2 344 0
+	mov	w1, -1
+	.loc 2 343 0
+	str	x0, [x23]
+	.loc 2 344 0
+	strh	w1, [x0, 2]
+	b	.L100
+.L98:
+	.loc 2 346 0
+	cmp	w0, w1
+	.loc 2 347 0
+	add	x19, x19, :lo12:.LANCHOR0
+	mov	w2, 6
+	ldrh	w1, [x20, 2]
+	.loc 2 346 0
+	bne	.L101
+	.loc 2 347 0
+	umull	x1, w1, w2
+	.loc 2 348 0
+	ldr	x0, [x19, 2304]
+	mov	w2, -1
+	strh	w2, [x0, x1]
+	b	.L100
+.L101:
+	.loc 2 351 0
+	ldr	x3, [x19, 2304]
+	umaddl	x0, w0, w2, x3
+	strh	w1, [x0, 2]
+	.loc 2 352 0
+	ldrh	w1, [x20, 2]
+	.loc 2 353 0
+	ldr	x0, [x19, 2304]
+	ldrh	w3, [x22, x21]
+	.loc 2 352 0
+	umull	x1, w1, w2
+	.loc 2 353 0
+	strh	w3, [x0, x1]
+	b	.L100
+	.cfi_endproc
+.LFE187:
+	.size	List_remove_node, .-List_remove_node
+	.align	2
+	.global	List_pop_index_node
+	.type	List_pop_index_node, %function
+List_pop_index_node:
+.LFB188:
+	.loc 2 360 0
+	.cfi_startproc
+.LVL115:
+	.loc 2 364 0
+	ldr	x2, [x0]
+.LVL116:
+	cbz	x2, .L109
+	.loc 2 360 0
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	.loc 2 369 0
+	adrp	x3, .LANCHOR0+2304
+	and	w1, w1, 65535
+	.loc 2 368 0
+	mov	w4, 65535
+	.loc 2 360 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	str	x19, [sp, 16]
+	.cfi_offset 19, -16
+	.loc 2 369 0
+	mov	w5, 6
+	ldr	x19, [x3, #:lo12:.LANCHOR0+2304]
+.L105:
+	.loc 2 368 0
+	cbnz	w1, .L106
+.L108:
+	.loc 2 372 0
+	sub	x19, x2, x19
+	mov	x2, -6148914691236517206
+.LVL117:
+	asr	x19, x19, 1
+	movk	x2, 0xaaab, lsl 0
+	mul	x19, x19, x2
+	and	w19, w19, 65535
+.LVL118:
+	.loc 2 373 0
+	mov	w1, w19
+.LVL119:
+	bl	List_remove_node
+.LVL120:
+	.loc 2 375 0
+	mov	w0, w19
+	.loc 2 376 0
+	ldr	x19, [sp, 16]
+.LVL121:
+	ldp	x29, x30, [sp], 32
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_def_cfa 31, 0
+	ret
+.LVL122:
+.L106:
+	.cfi_restore_state
+	.loc 2 368 0 discriminator 1
+	ldrh	w3, [x2]
+	cmp	w3, w4
+	beq	.L108
+	.loc 2 370 0
+	sub	w1, w1, #1
+.LVL123:
+	.loc 2 369 0
+	umaddl	x2, w3, w5, x19
+	.loc 2 370 0
+	and	w1, w1, 65535
+.LVL124:
+	b	.L105
+.L109:
+	.cfi_def_cfa 31, 0
+	.cfi_restore 19
+	.cfi_restore 29
+	.cfi_restore 30
+	.loc 2 365 0
+	mov	w0, 65535
+.LVL125:
+	ret
+	.cfi_endproc
+.LFE188:
+	.size	List_pop_index_node, .-List_pop_index_node
+	.align	2
+	.global	List_pop_head_node
+	.type	List_pop_head_node, %function
+List_pop_head_node:
+.LFB189:
+	.loc 2 379 0
+	.cfi_startproc
+.LVL126:
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	.loc 2 380 0
+	mov	w1, 0
+	.loc 2 379 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 2 380 0
+	bl	List_pop_index_node
+.LVL127:
+	.loc 2 381 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE189:
+	.size	List_pop_head_node, .-List_pop_head_node
+	.align	2
+	.global	List_get_gc_head_node
+	.type	List_get_gc_head_node, %function
+List_get_gc_head_node:
+.LFB190:
+	.loc 2 384 0
+	.cfi_startproc
+.LVL128:
+	.loc 2 384 0
+	and	w2, w0, 65535
+.LVL129:
+	.loc 2 388 0
+	adrp	x0, .LANCHOR0
+	add	x0, x0, :lo12:.LANCHOR0
+	ldr	x1, [x0, 2312]
+.LVL130:
+	cbz	x1, .L121
+	.loc 2 393 0
+	ldr	x3, [x0, 2304]
+	mov	w4, 6
+	.loc 2 392 0
+	mov	w0, 65535
+.L118:
+	cbz	w2, .L119
+	.loc 2 392 0 is_stmt 0 discriminator 1
+	ldrh	w1, [x1]
+.LVL131:
+	cmp	w1, w0
+	bne	.L120
+	ret
+.L120:
+	.loc 2 394 0 is_stmt 1
+	sub	w2, w2, #1
+.LVL132:
+	.loc 2 393 0
+	umaddl	x1, w1, w4, x3
+.LVL133:
+	.loc 2 394 0
+	and	w2, w2, 65535
+.LVL134:
+	b	.L118
+.L121:
+	.loc 2 389 0
+	mov	w0, 65535
+	ret
+.L119:
+	.loc 2 398 0
+	sub	x0, x1, x3
+	mov	x1, -6148914691236517206
+.LVL135:
+	asr	x0, x0, 1
+	movk	x1, 0xaaab, lsl 0
+	mul	x0, x0, x1
+	.loc 2 400 0
+	and	w0, w0, 65535
+	.loc 2 401 0
+	ret
+	.cfi_endproc
+.LFE190:
+	.size	List_get_gc_head_node, .-List_get_gc_head_node
+	.align	2
+	.global	List_update_data_list
+	.type	List_update_data_list, %function
+List_update_data_list:
+.LFB191:
+	.loc 2 404 0
+	.cfi_startproc
+.LVL136:
+	stp	x29, x30, [sp, -48]!
+	.cfi_def_cfa_offset 48
+	.cfi_offset 29, -48
+	.cfi_offset 30, -40
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -32
+	.cfi_offset 20, -24
+	and	w20, w0, 65535
+.LVL137:
+	.loc 2 413 0
+	adrp	x19, .LANCHOR0
+	add	x0, x19, :lo12:.LANCHOR0
+	.loc 2 404 0
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -16
+	.cfi_offset 22, -8
+	.loc 2 413 0
+	ldrh	w1, [x0, 2360]
+	cmp	w1, w20
+	beq	.L124
+	.loc 2 413 0 is_stmt 0 discriminator 1
+	ldrh	w1, [x0, 2408]
+	cmp	w1, w20
+	beq	.L124
+	.loc 2 413 0 discriminator 2
+	ldrh	w1, [x0, 2456]
+	cmp	w1, w20
+	beq	.L124
+.LBB185:
+.LBB186:
+	.loc 2 416 0 is_stmt 1
+	mov	w1, 6
+	ldr	x3, [x0, 2304]
+	.loc 2 418 0
+	ldr	x2, [x0, 2312]
+	.loc 2 416 0
+	umull	x1, w20, w1
+	add	x22, x3, x1
+.LVL138:
+	.loc 2 418 0
+	cmp	x22, x2
+	beq	.L124
+	.loc 2 421 0
+	ldr	x4, [x0, 2320]
+	ubfiz	x2, x20, 1, 16
+	.loc 2 422 0
+	ldrh	w0, [x22, 4]
+	ldrh	w21, [x4, x2]
+	.loc 2 426 0
+	mov	w2, 65535
+	.loc 2 422 0
+	mul	w21, w21, w0
+.LVL139:
+	.loc 2 426 0
+	ldrh	w0, [x22, 2]
+	.loc 2 424 0
+	cmp	w21, 0
+	csinv	w21, w21, wzr, ne
+	.loc 2 426 0
+	cmp	w0, w2
+	bne	.L127
+	ldrh	w1, [x3, x1]
+	cmp	w1, w0
+	bne	.L127
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 426
+	add	x1, x1, 72
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL140:
+.L127:
+	.loc 2 427 0
+	ldrh	w1, [x22, 2]
+	mov	w0, 6
+	.loc 2 429 0
+	add	x22, x19, :lo12:.LANCHOR0
+.LVL141:
+	.loc 2 428 0
+	mov	x2, -6148914691236517206
+	movk	x2, 0xaaab, lsl 0
+	.loc 2 427 0
+	umull	x1, w1, w0
+	.loc 2 428 0
+	asr	x0, x1, 1
+	mul	x0, x0, x2
+	.loc 2 429 0
+	ldr	x2, [x22, 2320]
+	.loc 2 430 0
+	ldrh	w0, [x2, x0, lsl 1]
+	ldr	x2, [x22, 2304]
+	add	x1, x2, x1
+	ldrh	w1, [x1, 4]
+	mul	w0, w0, w1
+.LVL142:
+	.loc 2 432 0
+	cmp	w0, 0
+	csinv	w0, w0, wzr, ne
+	.loc 2 434 0
+	cmp	w21, w0
+	bcs	.L124
+	.loc 2 435 0
+	mov	w1, w20
+	add	x0, x22, 2312
+.LVL143:
+	bl	List_remove_node
+.LVL144:
+	ldrh	w0, [x22, 2336]
+	cbnz	w0, .L129
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 435
+	add	x1, x1, 72
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL145:
+.L129:
+	add	x19, x19, :lo12:.LANCHOR0
+	ldrh	w0, [x19, 2336]
+	sub	w0, w0, #1
+	strh	w0, [x19, 2336]
+	.loc 2 436 0
+	mov	w0, w20
+	bl	INSERT_DATA_LIST
+.LVL146:
+.L124:
+.LBE186:
+.LBE185:
+	.loc 2 439 0
+	mov	w0, 0
+.LVL147:
+	ldp	x19, x20, [sp, 16]
+.LVL148:
+	ldp	x21, x22, [sp, 32]
+.LVL149:
+	ldp	x29, x30, [sp], 48
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE191:
+	.size	List_update_data_list, .-List_update_data_list
+	.align	2
+	.global	ftl_map_blk_alloc_new_blk
+	.type	ftl_map_blk_alloc_new_blk, %function
+ftl_map_blk_alloc_new_blk:
+.LFB194:
+	.loc 2 516 0
+	.cfi_startproc
+.LVL150:
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	mov	x4, x0
+	.loc 2 520 0
+	mov	w5, 0
+.LVL151:
+	.loc 2 516 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 2 520 0
+	ldrh	w1, [x0, 10]
+	ldr	x0, [x0, 16]
+.LVL152:
+.L132:
+	.loc 2 520 0 is_stmt 0 discriminator 1
+	cmp	w5, w1
+	bne	.L135
+.L136:
+.LBB189:
+.LBB190:
+	.loc 2 532 0 is_stmt 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	mov	w2, 532
+	add	x1, x1, 96
+	adrp	x0, .LC1
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL153:
+	b	.L137
+.LVL154:
+.L135:
+.LBE190:
+.LBE189:
+	.loc 2 521 0
+	mov	x6, x0
+	ldrh	w2, [x0], 2
+	cbnz	w2, .L133
+	.loc 2 522 0
+	bl	FtlFreeSysBlkQueueOut
+.LVL155:
+	strh	w0, [x6]
+	.loc 2 523 0
+	tst	w0, 65535
+	beq	.L134
+	.loc 2 526 0
+	ldr	w0, [x4, 48]
+	.loc 2 524 0
+	strh	wzr, [x4, 2]
+	.loc 2 526 0
+	add	w0, w0, 1
+	str	w0, [x4, 48]
+	.loc 2 527 0
+	ldrh	w0, [x4, 8]
+	.loc 2 525 0
+	strh	w5, [x4]
+	.loc 2 527 0
+	add	w0, w0, 1
+	strh	w0, [x4, 8]
+.L134:
+	.loc 2 532 0
+	ldrh	w0, [x4, 10]
+	cmp	w0, w5
+	bls	.L136
+.L137:
+	.loc 2 534 0
+	mov	w0, 0
+	ldp	x29, x30, [sp], 16
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+.L133:
+	.cfi_restore_state
+	.loc 2 520 0 discriminator 2
+	add	w5, w5, 1
+.LVL156:
+	and	w5, w5, 65535
+.LVL157:
+	b	.L132
+	.cfi_endproc
+.LFE194:
+	.size	ftl_map_blk_alloc_new_blk, .-ftl_map_blk_alloc_new_blk
+	.align	2
+	.global	select_l2p_ram_region
+	.type	select_l2p_ram_region, %function
+select_l2p_ram_region:
+.LFB199:
+	.loc 2 700 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	.loc 2 705 0
+	adrp	x1, .LANCHOR0
+	add	x0, x1, :lo12:.LANCHOR0
+	mov	x3, 0
+	.loc 2 700 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	str	x19, [sp, 16]
+	.cfi_offset 19, -16
+	.loc 2 706 0
+	mov	w4, 65535
+	.loc 2 705 0
+	ldrh	w2, [x0, 118]
+	.loc 2 706 0
+	ldr	x0, [x0, 2504]
+.LVL158:
+.L143:
+	and	w19, w3, 65535
+	.loc 2 705 0 discriminator 1
+	cmp	w19, w2
+	bcc	.L145
+	add	x4, x0, 4
+	.loc 2 705 0 is_stmt 0
+	mov	w19, w2
+	mov	w6, -2147483648
+	mov	w3, 0
+.L146:
+	.loc 2 715 0 is_stmt 1 discriminator 1
+	cmp	w3, w2
+	bne	.L148
+	.loc 2 724 0
+	cmp	w19, w2
+	bcc	.L144
+	.loc 2 730 0
+	add	x1, x1, :lo12:.LANCHOR0
+	mov	w19, w2
+	mov	w3, -1
+	ldrh	w4, [x1, 2512]
+	mov	w1, 0
+.L149:
+	.loc 2 729 0 discriminator 1
+	cmp	w1, w2
+	bne	.L151
+	.loc 2 735 0
+	cmp	w19, w1
+	bcc	.L144
+	.loc 2 735 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	mov	w2, 735
+	add	x1, x1, 128
+	adrp	x0, .LC1
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL159:
+	b	.L144
+.L145:
+	add	x3, x3, 1
+	.loc 2 706 0 is_stmt 1
+	add	x5, x0, x3, lsl 4
+	ldrh	w5, [x5, -16]
+	cmp	w5, w4
+	bne	.L143
+.L144:
+	.loc 2 737 0
+	mov	w0, w19
+	ldr	x19, [sp, 16]
+.LVL160:
+	ldp	x29, x30, [sp], 32
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_def_cfa 31, 0
+	ret
+.LVL161:
+.L148:
+	.cfi_restore_state
+	.loc 2 716 0
+	ldr	w5, [x4]
+	tbnz	w5, #31, .L147
+	.loc 2 717 0
+	cmp	w6, w5
+	bls	.L147
+	mov	w6, w5
+	mov	w19, w3
+.L147:
+	.loc 2 715 0 discriminator 2
+	add	w3, w3, 1
+	add	x4, x4, 16
+	and	w3, w3, 65535
+	b	.L146
+.L151:
+	.loc 2 730 0
+	ldr	w6, [x0, 4]
+	cmp	w3, w6
+	bls	.L150
+	.loc 2 730 0 is_stmt 0 discriminator 1
+	ldrh	w5, [x0]
+	cmp	w5, w4
+	csel	w3, w3, w6, eq
+	csel	w19, w19, w1, eq
+.L150:
+	.loc 2 729 0 is_stmt 1 discriminator 2
+	add	w1, w1, 1
+	add	x0, x0, 16
+	and	w1, w1, 65535
+	b	.L149
+	.cfi_endproc
+.LFE199:
+	.size	select_l2p_ram_region, .-select_l2p_ram_region
+	.align	2
+	.global	FtlUpdateVaildLpn
+	.type	FtlUpdateVaildLpn, %function
+FtlUpdateVaildLpn:
+.LFB205:
+	.loc 2 882 0
+	.cfi_startproc
+.LVL162:
+	.loc 2 885 0
+	adrp	x1, .LANCHOR0
+	add	x3, x1, :lo12:.LANCHOR0
+	ldrh	w2, [x3, 2514]
+	cmp	w2, 4
+	bhi	.L154
+	.loc 2 885 0 is_stmt 0 discriminator 1
+	cbnz	w0, .L154
+	.loc 2 885 0
+	add	w2, w2, 1
+	strh	w2, [x3, 2514]
+	.loc 2 894 0 is_stmt 1
+	ret
+.L154:
+	.loc 2 886 0
+	add	x0, x1, :lo12:.LANCHOR0
+.LVL163:
+.LBB193:
+.LBB194:
+	.loc 2 890 0
+	mov	w6, 65535
+	mov	x1, 0
+	.loc 2 888 0
+	ldrh	w4, [x0, 20]
+	.loc 2 890 0
+	ldr	x5, [x0, 2320]
+.LBE194:
+.LBE193:
+	.loc 2 886 0
+	strh	wzr, [x0, 2514]
+	.loc 2 887 0
+	str	wzr, [x0, 2516]
+.L155:
+.LBB196:
+.LBB195:
+	.loc 2 888 0
+	cmp	w4, w1, uxth
+	bhi	.L157
+	ret
+.L157:
+	.loc 2 890 0
+	ldrh	w3, [x5, x1, lsl 1]
+	cmp	w3, w6
+	beq	.L156
+	.loc 2 891 0
+	ldr	w2, [x0, 2516]
+	add	w2, w2, w3
+	str	w2, [x0, 2516]
+.L156:
+	add	x1, x1, 1
+	b	.L155
+.LBE195:
+.LBE196:
+	.cfi_endproc
+.LFE205:
+	.size	FtlUpdateVaildLpn, .-FtlUpdateVaildLpn
+	.align	2
+	.global	ftl_set_blk_mode
+	.type	ftl_set_blk_mode, %function
+ftl_set_blk_mode:
+.LFB211:
+	.loc 2 1347 0
+	.cfi_startproc
+.LVL164:
+	and	w0, w0, 65535
+	.loc 2 1348 0
+	cbz	w1, .L160
+	.loc 2 1347 0
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	bl	ftl_set_blk_mode.part.7
+.LVL165:
+	.loc 2 1352 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+.LVL166:
+.L160:
+	.loc 2 1351 0
+	adrp	x1, .LANCHOR0
+.LVL167:
+	ubfx	x2, x0, 5, 11
+	lsl	x2, x2, 2
+	ldr	x3, [x1, #:lo12:.LANCHOR0]
+	mov	w1, 1
+	lsl	w0, w1, w0
+.LVL168:
+	ldr	w1, [x3, x2]
+	bic	w0, w1, w0
+	str	w0, [x3, x2]
+	.loc 2 1352 0
+	ret
+	.cfi_endproc
+.LFE211:
+	.size	ftl_set_blk_mode, .-ftl_set_blk_mode
+	.align	2
+	.global	ftl_get_blk_mode
+	.type	ftl_get_blk_mode, %function
+ftl_get_blk_mode:
+.LFB212:
+	.loc 2 1355 0
+	.cfi_startproc
+.LVL169:
+	.loc 2 1355 0
+	and	w1, w0, 65535
+.LVL170:
+	.loc 2 1356 0
+	adrp	x0, .LANCHOR0
+	ldr	x0, [x0, #:lo12:.LANCHOR0]
+	ubfx	x2, x1, 5, 11
+	ldr	w0, [x0, x2, lsl 2]
+	lsr	w0, w0, w1
+	.loc 2 1357 0
+	and	w0, w0, 1
+	ret
+	.cfi_endproc
+.LFE212:
+	.size	ftl_get_blk_mode, .-ftl_get_blk_mode
+	.align	2
+	.global	ftl_sb_update_avl_pages
+	.type	ftl_sb_update_avl_pages, %function
+ftl_sb_update_avl_pages:
+.LFB218:
+	.loc 2 1608 0
+	.cfi_startproc
+.LVL171:
+	.loc 2 1608 0
+	and	w6, w1, 65535
+.LVL172:
+	.loc 2 1611 0
+	adrp	x4, .LANCHOR0
+	add	x1, x4, :lo12:.LANCHOR0
+	and	w2, w2, 65535
+.LVL173:
+	.loc 2 1610 0
+	strh	wzr, [x0, 4]
+	.loc 2 1611 0
+	ldrh	w3, [x1, 12]
+	.loc 2 1613 0
+	mov	w1, 65535
+.L168:
+	.loc 2 1611 0 discriminator 1
+	cmp	w3, w2, uxth
+	bhi	.L170
+	.loc 2 1622 0
+	add	x4, x4, :lo12:.LANCHOR0
+	ubfiz	x3, x3, 1, 16
+	add	x3, x3, 16
+	add	x2, x0, 16
+	add	x3, x0, x3
+	.loc 2 1620 0
+	mov	w5, 65535
+	ldrh	w1, [x4, 82]
+	sub	w1, w1, #1
+	and	w1, w1, 65535
+	.loc 2 1622 0
+	sub	w1, w1, w6
+.L171:
+	.loc 2 1618 0 discriminator 1
+	cmp	x2, x3
+	bne	.L173
+	.loc 2 1625 0
+	ret
+.L170:
+	.loc 2 1613 0
+	add	x5, x0, x2, sxtw 1
+	ldrh	w5, [x5, 16]
+	cmp	w5, w1
+	beq	.L169
+	.loc 2 1615 0
+	ldrh	w5, [x0, 4]
+	add	w5, w5, 1
+	strh	w5, [x0, 4]
+.L169:
+	add	w2, w2, 1
+	b	.L168
+.L173:
+	.loc 2 1620 0
+	ldrh	w4, [x2]
+	cmp	w4, w5
+	beq	.L172
+	.loc 2 1622 0
+	ldrh	w4, [x0, 4]
+	add	w4, w1, w4
+	strh	w4, [x0, 4]
+.L172:
+	add	x2, x2, 2
+	b	.L171
+	.cfi_endproc
+.LFE218:
+	.size	ftl_sb_update_avl_pages, .-ftl_sb_update_avl_pages
+	.align	2
+	.global	FtlSlcSuperblockCheck
+	.type	FtlSlcSuperblockCheck, %function
+FtlSlcSuperblockCheck:
+.LFB221:
+	.loc 2 2013 0
+	.cfi_startproc
+.LVL174:
+	.loc 2 2016 0
+	ldrh	w1, [x0, 4]
+	cbz	w1, .L174
+	.loc 2 2018 0
+	ldrh	w2, [x0]
+	mov	w1, 65535
+	cmp	w2, w1
+	beq	.L174
+.LBB199:
+.LBB200:
+	.loc 2 2020 0
+	ldrb	w2, [x0, 6]
+	add	x2, x2, 8
+	ldrh	w3, [x0, x2, lsl 1]
+.LVL175:
+	.loc 2 2023 0
+	adrp	x2, .LANCHOR0+12
+	ldrh	w4, [x2, #:lo12:.LANCHOR0+12]
+	.loc 2 2021 0
+	mov	w2, w1
+.L177:
+	cmp	w3, w2
+	beq	.L179
+.L174:
+	ret
+.L179:
+	.loc 2 2022 0
+	ldrb	w1, [x0, 6]
+	add	w1, w1, 1
+	and	w1, w1, 255
+	strb	w1, [x0, 6]
+	.loc 2 2023 0
+	cmp	w1, w4
+	bne	.L178
+	.loc 2 2024 0
+	ldrh	w1, [x0, 2]
+	.loc 2 2025 0
+	strb	wzr, [x0, 6]
+	.loc 2 2024 0
+	add	w1, w1, 1
+	strh	w1, [x0, 2]
+.L178:
+	.loc 2 2027 0
+	ldrb	w1, [x0, 6]
+	add	x1, x1, 8
+	ldrh	w3, [x0, x1, lsl 1]
+	b	.L177
+.LBE200:
+.LBE199:
+	.cfi_endproc
+.LFE221:
+	.size	FtlSlcSuperblockCheck, .-FtlSlcSuperblockCheck
+	.align	2
+	.global	make_superblock
+	.type	make_superblock, %function
+make_superblock:
+.LFB223:
+	.loc 2 2045 0
+	.cfi_startproc
+.LVL176:
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -16
+	.cfi_offset 20, -8
+	.loc 2 2045 0
+	mov	x19, x0
+	.loc 2 2048 0
+	adrp	x20, .LANCHOR0
+	add	x0, x20, :lo12:.LANCHOR0
+.LVL177:
+	ldrh	w1, [x19]
+	ldrh	w0, [x0, 20]
+	cmp	w1, w0
+	bcc	.L181
+	.loc 2 2048 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 2048
+	add	x1, x1, 152
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL178:
+.L181:
+	.loc 2 2051 0 is_stmt 1
+	add	x0, x20, :lo12:.LANCHOR0
+	add	x6, x19, 16
+	.loc 2 2052 0
+	add	x7, x0, 40
+	.loc 2 2049 0
+	strh	wzr, [x19, 4]
+	.loc 2 2050 0
+	strb	wzr, [x19, 7]
+	.loc 2 2051 0
+	mov	x5, 0
+	ldrh	w8, [x0, 12]
+	.loc 2 2053 0
+	mov	w9, -1
+.L182:
+	.loc 2 2051 0 discriminator 1
+	cmp	w8, w5, uxth
+	bhi	.L184
+	.loc 2 2061 0
+	add	x20, x20, :lo12:.LANCHOR0
+	ldrb	w0, [x19, 7]
+	ldrh	w1, [x20, 82]
+	mul	w0, w0, w1
+	strh	w0, [x19, 4]
+	.loc 2 2062 0
+	mov	w0, 1
+	strb	w0, [x19, 9]
+	.loc 2 2064 0
+	mov	w0, 0
+	ldp	x19, x20, [sp, 16]
+.LVL179:
+	ldp	x29, x30, [sp], 32
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL180:
+.L184:
+	.cfi_restore_state
+	.loc 2 2052 0
+	ldrh	w1, [x19]
+	ldrb	w0, [x7, x5]
+	bl	V2P_block
+.LVL181:
+	mov	w4, w0
+	.loc 2 2053 0
+	strh	w9, [x6]
+	.loc 2 2054 0
+	bl	FtlBbmIsBadBlock
+.LVL182:
+	cbnz	w0, .L183
+	.loc 2 2055 0
+	strh	w4, [x6]
+	.loc 2 2056 0
+	ldrb	w0, [x19, 7]
+	add	w0, w0, 1
+	strb	w0, [x19, 7]
+.L183:
+	add	x5, x5, 1
+	add	x6, x6, 2
+	b	.L182
+	.cfi_endproc
+.LFE223:
+	.size	make_superblock, .-make_superblock
+	.align	2
+	.global	update_multiplier_value
+	.type	update_multiplier_value, %function
+update_multiplier_value:
+.LFB232:
+	.loc 2 2401 0
+	.cfi_startproc
+.LVL183:
+	and	w8, w0, 65535
+.LVL184:
+	.loc 2 2405 0
+	adrp	x0, .LANCHOR0
+	add	x1, x0, :lo12:.LANCHOR0
+	mov	x9, 0
+	.loc 2 2403 0
+	mov	w6, 0
+	mov	x5, x0
+	.loc 2 2406 0
+	add	x7, x1, 40
+	.loc 2 2405 0
+	ldrh	w10, [x1, 12]
+	.loc 2 2408 0
+	ldrh	w11, [x1, 82]
+	.loc 2 2405 0
+	cmp	w10, w9, uxth
+	bhi	.L198
+	.loc 2 2410 0
+	cbz	w6, .L196
+	.loc 2 2411 0
+	mov	w0, 32768
+	sdiv	w6, w0, w6
+.L197:
+	.loc 2 2412 0
+	add	x0, x5, :lo12:.LANCHOR0
+	mov	w1, 6
+	ldr	x0, [x0, 2304]
+	umaddl	x8, w8, w1, x0
+.LVL185:
+	.loc 2 2414 0
+	mov	w0, 0
+	.loc 2 2412 0
+	strh	w6, [x8, 4]
+	.loc 2 2414 0
+	ret
+.LVL186:
+.L191:
+	.cfi_def_cfa 29, 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	mov	w6, 0
+	b	.L190
+.L196:
+	.cfi_def_cfa 31, 0
+	.cfi_restore 29
+	.cfi_restore 30
+	mov	w6, 0
+	b	.L197
+.L198:
+	.loc 2 2401 0
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+.L189:
+	.loc 2 2406 0
+	ldrb	w0, [x7, x9]
+	mov	w1, w8
+	bl	V2P_block
+.LVL187:
+	.loc 2 2407 0
+	bl	FtlBbmIsBadBlock
+.LVL188:
+	cbnz	w0, .L188
+	.loc 2 2408 0
+	add	w6, w6, w11
+	and	w6, w6, 65535
+.L188:
+	add	x9, x9, 1
+	.loc 2 2405 0 discriminator 2
+	cmp	w10, w9, uxth
+	bhi	.L189
+	.loc 2 2410 0
+	cbz	w6, .L191
+	.loc 2 2411 0
+	mov	w0, 32768
+	sdiv	w6, w0, w6
+.L190:
+	.loc 2 2412 0
+	add	x0, x5, :lo12:.LANCHOR0
+	mov	w1, 6
+	ldr	x0, [x0, 2304]
+	umaddl	x8, w8, w1, x0
+.LVL189:
+	.loc 2 2414 0
+	mov	w0, 0
+	.loc 2 2412 0
+	strh	w6, [x8, 4]
+	.loc 2 2414 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE232:
+	.size	update_multiplier_value, .-update_multiplier_value
+	.align	2
+	.global	GetFreeBlockMinEraseCount
+	.type	GetFreeBlockMinEraseCount, %function
+GetFreeBlockMinEraseCount:
+.LFB233:
+	.loc 2 2417 0
+	.cfi_startproc
+	.loc 2 2420 0
+	adrp	x1, .LANCHOR0
+	add	x1, x1, :lo12:.LANCHOR0
+	ldr	x0, [x1, 2344]
+	cbz	x0, .L201
+	.loc 2 2421 0
+	ldr	x2, [x1, 2304]
+	ldr	x1, [x1, 2296]
+	sub	x0, x0, x2
+	mov	x2, -6148914691236517206
+	asr	x0, x0, 1
+	movk	x2, 0xaaab, lsl 0
+	mul	x0, x0, x2
+	and	x0, x0, 65535
+	ldrh	w0, [x1, x0, lsl 1]
+.LVL190:
+.LVL191:
+	ret
+.L201:
+	.loc 2 2418 0
+	mov	w0, 0
+.LVL192:
+.LVL193:
+	.loc 2 2423 0
+	ret
+	.cfi_endproc
+.LFE233:
+	.size	GetFreeBlockMinEraseCount, .-GetFreeBlockMinEraseCount
+	.align	2
+	.global	GetFreeBlockMaxEraseCount
+	.type	GetFreeBlockMaxEraseCount, %function
+GetFreeBlockMaxEraseCount:
+.LFB234:
+	.loc 2 2426 0
+	.cfi_startproc
+.LVL194:
+	.loc 2 2431 0
+	adrp	x2, .LANCHOR0
+	add	x4, x2, :lo12:.LANCHOR0
+	.loc 2 2426 0
+	and	w0, w0, 65535
+	.loc 2 2431 0
+	ldr	x1, [x4, 2344]
+	cbz	x1, .L209
+	.loc 2 2432 0
+	ldrh	w3, [x4, 2352]
+	mov	w5, 7
+	.loc 2 2434 0
+	ldr	x4, [x4, 2304]
+	.loc 2 2436 0
+	mov	w6, 6
+	mov	w7, 65535
+	.loc 2 2434 0
+	sub	x1, x1, x4
+	.loc 2 2432 0
+	mul	w3, w3, w5
+	.loc 2 2434 0
+	asr	x1, x1, 1
+	.loc 2 2432 0
+	asr	w3, w3, 3
+	.loc 2 2433 0
+	cmp	w0, w3
+	csel	w0, w3, w0, gt
+	.loc 2 2434 0
+	mov	x3, -6148914691236517206
+	movk	x3, 0xaaab, lsl 0
+	mul	x1, x1, x3
+	.loc 2 2435 0
+	mov	w3, 0
+.LVL195:
+	.loc 2 2434 0
+	and	w1, w1, 65535
+.L205:
+	.loc 2 2435 0 discriminator 1
+	cmp	w0, w3
+	beq	.L208
+	.loc 2 2436 0
+	umull	x5, w1, w6
+	ldrh	w5, [x4, x5]
+	cmp	w5, w7
+	bne	.L206
+.L208:
+	.loc 2 2440 0
+	add	x2, x2, :lo12:.LANCHOR0
+	ubfiz	x1, x1, 1, 16
+	ldr	x0, [x2, 2296]
+.LVL196:
+	ldrh	w0, [x0, x1]
+.LVL197:
+.LVL198:
+	ret
+.LVL199:
+.L206:
+	.loc 2 2435 0 discriminator 2
+	add	w3, w3, 1
+.LVL200:
+	mov	w1, w5
+	and	w3, w3, 65535
+.LVL201:
+	b	.L205
+.LVL202:
+.L209:
+	.loc 2 2427 0
+	mov	w0, 0
+.LVL203:
+.LVL204:
+	.loc 2 2443 0
+	ret
+	.cfi_endproc
+.LFE234:
+	.size	GetFreeBlockMaxEraseCount, .-GetFreeBlockMaxEraseCount
+	.align	2
+	.global	FtlPrintInfo2buf
+	.type	FtlPrintInfo2buf, %function
+FtlPrintInfo2buf:
+.LFB139:
+	.loc 3 11 0
+	.cfi_startproc
+.LVL205:
+	stp	x29, x30, [sp, -96]!
+	.cfi_def_cfa_offset 96
+	.cfi_offset 29, -96
+	.cfi_offset 30, -88
+	.loc 3 15 0
+	adrp	x1, .LC2
+	add	x1, x1, :lo12:.LC2
+	.loc 3 11 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -64
+	.cfi_offset 22, -56
+	mov	x22, x0
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -48
+	.cfi_offset 24, -40
+	.loc 3 17 0
+	adrp	x23, .LANCHOR0
+	add	x21, x23, :lo12:.LANCHOR0
+	.loc 3 11 0
+	stp	x19, x20, [sp, 16]
+	stp	x25, x26, [sp, 64]
+	.cfi_offset 19, -80
+	.cfi_offset 20, -72
+	.cfi_offset 25, -32
+	.cfi_offset 26, -24
+	.loc 3 15 0
+	add	x20, x0, 12
+	.loc 3 11 0
+	str	x27, [sp, 80]
+	.cfi_offset 27, -16
+	.loc 3 15 0
+	bl	strcpy
+.LVL206:
+	.loc 3 17 0
+	ldr	w2, [x21, 96]
+	mov	x0, x20
+	adrp	x1, .LC3
+	add	x1, x1, :lo12:.LC3
+	bl	sprintf
+.LVL207:
+	add	x20, x20, x0, sxtw
+	.loc 3 18 0
+	mov	x0, x20
+	adrp	x1, .LC4
+	add	x1, x1, :lo12:.LC4
+	bl	strcpy
+.LVL208:
+	.loc 3 19 0
+	ldr	w2, [x21, 2520]
+	.loc 3 18 0
+	add	x20, x20, 10
+	.loc 3 19 0
+	mov	x0, x20
+	adrp	x1, .LC5
+	add	x1, x1, :lo12:.LC5
+	bl	sprintf
+.LVL209:
+	add	x20, x20, x0, sxtw
+	.loc 3 20 0
+	ldr	w2, [x21, 2516]
+	mov	x0, x20
+	adrp	x1, .LC6
+	add	x1, x1, :lo12:.LC6
+	bl	sprintf
+.LVL210:
+	add	x20, x20, x0, sxtw
+	.loc 3 21 0
+	ldr	w2, [x21, 2524]
+	mov	x0, x20
+	adrp	x1, .LC7
+	add	x1, x1, :lo12:.LC7
+	bl	sprintf
+.LVL211:
+	add	x20, x20, x0, sxtw
+	.loc 3 22 0
+	ldr	w2, [x21, 2528]
+	mov	x0, x20
+	adrp	x1, .LC8
+	add	x1, x1, :lo12:.LC8
+	bl	sprintf
+.LVL212:
+	add	x20, x20, x0, sxtw
+	.loc 3 23 0
+	ldr	w2, [x21, 2532]
+	mov	x0, x20
+	adrp	x1, .LC9
+	add	x1, x1, :lo12:.LC9
+	bl	sprintf
+.LVL213:
+	add	x20, x20, x0, sxtw
+	.loc 3 24 0
+	ldr	w2, [x21, 2536]
+	mov	x0, x20
+	adrp	x1, .LC10
+	add	x1, x1, :lo12:.LC10
+	bl	sprintf
+.LVL214:
+	add	x20, x20, x0, sxtw
+	.loc 3 25 0
+	ldr	w2, [x21, 2540]
+	mov	x0, x20
+	adrp	x1, .LC11
+	add	x1, x1, :lo12:.LC11
+	bl	sprintf
+.LVL215:
+	add	x20, x20, x0, sxtw
+	.loc 3 26 0
+	ldr	w2, [x21, 2544]
+	mov	x0, x20
+	adrp	x1, .LC12
+	add	x1, x1, :lo12:.LC12
+	bl	sprintf
+.LVL216:
+	add	x20, x20, x0, sxtw
+	.loc 3 27 0
+	ldr	w2, [x21, 2548]
+	mov	x0, x20
+	adrp	x1, .LC13
+	add	x1, x1, :lo12:.LC13
+	lsr	w2, w2, 11
+	bl	sprintf
+.LVL217:
+	.loc 3 28 0
+	ldr	w2, [x21, 2552]
+	.loc 3 27 0
+	add	x20, x20, x0, sxtw
+	.loc 3 28 0
+	mov	x0, x20
+	adrp	x1, .LC14
+	add	x1, x1, :lo12:.LC14
+	lsr	w2, w2, 11
+	bl	sprintf
+.LVL218:
+	.loc 3 29 0
+	ldr	w2, [x21, 2556]
+	.loc 3 28 0
+	add	x20, x20, x0, sxtw
+	.loc 3 29 0
+	mov	x0, x20
+	adrp	x1, .LC15
+	add	x1, x1, :lo12:.LC15
+	bl	sprintf
+.LVL219:
+	add	x20, x20, x0, sxtw
+	.loc 3 30 0
+	ldr	w2, [x21, 2560]
+	mov	x0, x20
+	adrp	x1, .LC16
+	add	x1, x1, :lo12:.LC16
+	bl	sprintf
+.LVL220:
+	add	x20, x20, x0, sxtw
+	.loc 3 31 0
+	ldrh	w2, [x21, 142]
+	mov	x0, x20
+	adrp	x1, .LC17
+	add	x1, x1, :lo12:.LC17
+	bl	sprintf
+.LVL221:
+	add	x20, x20, x0, sxtw
+	.loc 3 32 0
+	ldrh	w2, [x21, 2352]
+	mov	x0, x20
+	adrp	x1, .LC18
+	add	x1, x1, :lo12:.LC18
+	bl	sprintf
+.LVL222:
+	add	x20, x20, x0, sxtw
+	.loc 3 33 0
+	ldr	w2, [x21, 2564]
+	mov	x0, x20
+	adrp	x1, .LC19
+	add	x1, x1, :lo12:.LC19
+	bl	sprintf
+.LVL223:
+	add	x20, x20, x0, sxtw
+	.loc 3 34 0
+	ldr	w2, [x21, 2568]
+	mov	x0, x20
+	adrp	x1, .LC20
+	add	x1, x1, :lo12:.LC20
+	bl	sprintf
+.LVL224:
+	add	x20, x20, x0, sxtw
+	.loc 3 35 0
+	ldr	w2, [x21, 2572]
+	mov	x0, x20
+	adrp	x1, .LC21
+	add	x1, x1, :lo12:.LC21
+	bl	sprintf
+.LVL225:
+	add	x20, x20, x0, sxtw
+	.loc 3 36 0
+	ldr	w2, [x21, 2576]
+	mov	x0, x20
+	adrp	x1, .LC22
+	add	x1, x1, :lo12:.LC22
+	bl	sprintf
+.LVL226:
+	add	x20, x20, x0, sxtw
+	.loc 3 37 0
+	ldr	w2, [x21, 2580]
+	mov	x0, x20
+	adrp	x1, .LC23
+	add	x1, x1, :lo12:.LC23
+	bl	sprintf
+.LVL227:
+	add	x20, x20, x0, sxtw
+	.loc 3 38 0
+	ldr	w2, [x21, 2584]
+	mov	x0, x20
+	adrp	x1, .LC24
+	add	x1, x1, :lo12:.LC24
+	bl	sprintf
+.LVL228:
+	add	x20, x20, x0, sxtw
+	.loc 3 39 0
+	ldrh	w2, [x21, 2622]
+	mov	x0, x20
+	adrp	x1, .LC25
+	add	x1, x1, :lo12:.LC25
+	bl	sprintf
+.LVL229:
+	add	x20, x20, x0, sxtw
+	.loc 3 40 0
+	ldrh	w2, [x21, 2620]
+	mov	x0, x20
+	adrp	x1, .LC26
+	add	x1, x1, :lo12:.LC26
+	bl	sprintf
+.LVL230:
+	add	x20, x20, x0, sxtw
+	.loc 3 41 0
+	ldr	w2, [x21, 120]
+	mov	x0, x20
+	adrp	x1, .LC27
+	add	x1, x1, :lo12:.LC27
+	bl	sprintf
+.LVL231:
+	add	x20, x20, x0, sxtw
+	.loc 3 42 0
+	ldr	w2, [x21, 112]
+	mov	x0, x20
+	adrp	x1, .LC28
+	add	x1, x1, :lo12:.LC28
+	bl	sprintf
+.LVL232:
+	add	x20, x20, x0, sxtw
+	.loc 3 43 0
+	ldr	w2, [x21, 8]
+	mov	x0, x20
+	adrp	x1, .LC29
+	add	x1, x1, :lo12:.LC29
+	bl	sprintf
+.LVL233:
+	add	x20, x20, x0, sxtw
+	.loc 3 44 0
+	ldrh	w2, [x21, 238]
+	mov	x0, x20
+	adrp	x1, .LC30
+	add	x1, x1, :lo12:.LC30
+	bl	sprintf
+.LVL234:
+	add	x20, x20, x0, sxtw
+	.loc 3 45 0
+	ldrh	w2, [x21, 20]
+	mov	x0, x20
+	adrp	x1, .LC31
+	add	x1, x1, :lo12:.LC31
+	bl	sprintf
+.LVL235:
+	add	x20, x20, x0, sxtw
+	.loc 3 46 0
+	ldrh	w2, [x21, 2640]
+	mov	x0, x20
+	adrp	x1, .LC32
+	add	x1, x1, :lo12:.LC32
+	bl	sprintf
+.LVL236:
+	add	x20, x20, x0, sxtw
+	.loc 3 47 0
+	ldr	w2, [x21, 24]
+	mov	x0, x20
+	adrp	x1, .LC33
+	add	x1, x1, :lo12:.LC33
+	bl	sprintf
+.LVL237:
+	add	x20, x20, x0, sxtw
+	.loc 3 48 0
+	ldrh	w2, [x21, 2648]
+	mov	x0, x20
+	adrp	x1, .LC34
+	add	x1, x1, :lo12:.LC34
+	bl	sprintf
+.LVL238:
+	add	x20, x20, x0, sxtw
+	.loc 3 49 0
+	ldrh	w2, [x21, 136]
+	mov	x0, x20
+	adrp	x1, .LC35
+	add	x1, x1, :lo12:.LC35
+	bl	sprintf
+.LVL239:
+	add	x20, x20, x0, sxtw
+	.loc 3 50 0
+	ldrh	w2, [x21, 2362]
+	mov	x0, x20
+	adrp	x1, .LC36
+	add	x1, x1, :lo12:.LC36
+	bl	sprintf
+.LVL240:
+	add	x20, x20, x0, sxtw
+	.loc 3 51 0
+	ldrb	w2, [x21, 2366]
+	mov	x0, x20
+	adrp	x1, .LC37
+	add	x1, x1, :lo12:.LC37
+	bl	sprintf
+.LVL241:
+	add	x20, x20, x0, sxtw
+	.loc 3 52 0
+	ldrh	w2, [x21, 2360]
+	mov	x0, x20
+	adrp	x1, .LC38
+	add	x1, x1, :lo12:.LC38
+	bl	sprintf
+.LVL242:
+	add	x20, x20, x0, sxtw
+	.loc 3 53 0
+	ldrb	w2, [x21, 2368]
+	mov	x0, x20
+	adrp	x1, .LC39
+	add	x1, x1, :lo12:.LC39
+	bl	sprintf
+.LVL243:
+	add	x20, x20, x0, sxtw
+	.loc 3 54 0
+	ldrh	w2, [x21, 2364]
+	mov	x0, x20
+	adrp	x1, .LC40
+	add	x1, x1, :lo12:.LC40
+	bl	sprintf
+.LVL244:
+	add	x20, x20, x0, sxtw
+	.loc 3 55 0
+	ldrh	w1, [x21, 2360]
+	ldr	x0, [x21, 2320]
+	ldrh	w2, [x0, x1, lsl 1]
+	mov	x0, x20
+	adrp	x1, .LC41
+	add	x1, x1, :lo12:.LC41
+	bl	sprintf
+.LVL245:
+	add	x20, x20, x0, sxtw
+	.loc 3 56 0
+	ldrh	w2, [x21, 2410]
+	mov	x0, x20
+	adrp	x1, .LC42
+	add	x1, x1, :lo12:.LC42
+	bl	sprintf
+.LVL246:
+	add	x20, x20, x0, sxtw
+	.loc 3 57 0
+	ldrb	w2, [x21, 2414]
+	mov	x0, x20
+	adrp	x1, .LC43
+	add	x1, x1, :lo12:.LC43
+	bl	sprintf
+.LVL247:
+	add	x20, x20, x0, sxtw
+	.loc 3 58 0
+	ldrh	w2, [x21, 2408]
+	mov	x0, x20
+	adrp	x1, .LC44
+	add	x1, x1, :lo12:.LC44
+	bl	sprintf
+.LVL248:
+	add	x20, x20, x0, sxtw
+	.loc 3 59 0
+	ldrb	w2, [x21, 2416]
+	mov	x0, x20
+	adrp	x1, .LC45
+	add	x1, x1, :lo12:.LC45
+	bl	sprintf
+.LVL249:
+	add	x20, x20, x0, sxtw
+	.loc 3 60 0
+	ldrh	w2, [x21, 2412]
+	mov	x0, x20
+	adrp	x1, .LC46
+	add	x1, x1, :lo12:.LC46
+	bl	sprintf
+.LVL250:
+	add	x20, x20, x0, sxtw
+	.loc 3 61 0
+	ldrh	w1, [x21, 2408]
+	ldr	x0, [x21, 2320]
+	ldrh	w2, [x0, x1, lsl 1]
+	mov	x0, x20
+	adrp	x1, .LC47
+	add	x1, x1, :lo12:.LC47
+	bl	sprintf
+.LVL251:
+	add	x20, x20, x0, sxtw
+	.loc 3 62 0
+	ldrh	w2, [x21, 2458]
+	mov	x0, x20
+	adrp	x1, .LC48
+	add	x1, x1, :lo12:.LC48
+	bl	sprintf
+.LVL252:
+	add	x20, x20, x0, sxtw
+	.loc 3 63 0
+	ldrb	w2, [x21, 2462]
+	mov	x0, x20
+	adrp	x1, .LC49
+	add	x1, x1, :lo12:.LC49
+	bl	sprintf
+.LVL253:
+	add	x20, x20, x0, sxtw
+	.loc 3 64 0
+	ldrh	w2, [x21, 2456]
+	mov	x0, x20
+	adrp	x1, .LC50
+	add	x1, x1, :lo12:.LC50
+	bl	sprintf
+.LVL254:
+	add	x20, x20, x0, sxtw
+	.loc 3 65 0
+	ldrb	w2, [x21, 2464]
+	mov	x0, x20
+	adrp	x1, .LC51
+	add	x1, x1, :lo12:.LC51
+	bl	sprintf
+.LVL255:
+	add	x20, x20, x0, sxtw
+	.loc 3 66 0
+	ldrh	w2, [x21, 2460]
+	mov	x0, x20
+	adrp	x1, .LC52
+	add	x1, x1, :lo12:.LC52
+	bl	sprintf
+.LVL256:
+	add	x20, x20, x0, sxtw
+	.loc 3 67 0
+	ldrh	w2, [x21, 2666]
+	mov	x0, x20
+	adrp	x1, .LC53
+	add	x1, x1, :lo12:.LC53
+	bl	sprintf
+.LVL257:
+	add	x20, x20, x0, sxtw
+	.loc 3 68 0
+	ldrb	w2, [x21, 2670]
+	mov	x0, x20
+	adrp	x1, .LC54
+	add	x1, x1, :lo12:.LC54
+	bl	sprintf
+.LVL258:
+	add	x20, x20, x0, sxtw
+	.loc 3 69 0
+	ldrh	w2, [x21, 2664]
+	mov	x0, x20
+	adrp	x1, .LC55
+	add	x1, x1, :lo12:.LC55
+	bl	sprintf
+.LVL259:
+	add	x20, x20, x0, sxtw
+	.loc 3 70 0
+	ldrb	w2, [x21, 2672]
+	mov	x0, x20
+	adrp	x1, .LC56
+	add	x1, x1, :lo12:.LC56
+	bl	sprintf
+.LVL260:
+	add	x20, x20, x0, sxtw
+	.loc 3 71 0
+	ldrh	w2, [x21, 2668]
+	mov	x0, x20
+	adrp	x1, .LC57
+	add	x1, x1, :lo12:.LC57
+	bl	sprintf
+.LVL261:
+	add	x20, x20, x0, sxtw
+	.loc 3 72 0
+	ldr	w4, [x21, 2788]
+	adrp	x1, .LC58
+	ldr	w3, [x21, 2796]
+	add	x1, x1, :lo12:.LC58
+	ldr	w2, [x21, 2792]
+	mov	x0, x20
+	bl	sprintf
+.LVL262:
+	add	x19, x20, x0, sxtw
+	.loc 3 73 0
+	ldr	w2, [x21, 2784]
+	mov	x0, x19
+	adrp	x1, .LC59
+	add	x1, x1, :lo12:.LC59
+	bl	sprintf
+.LVL263:
+	add	x19, x19, x0, sxtw
+	.loc 3 74 0
+	ldr	w2, [x21, 2808]
+	mov	x0, x19
+	adrp	x1, .LC60
+	add	x1, x1, :lo12:.LC60
+	bl	sprintf
+.LVL264:
+	add	x19, x19, x0, sxtw
+	.loc 3 75 0
+	ldrh	w2, [x21, 3224]
+	mov	x0, x19
+	adrp	x1, .LC61
+	add	x1, x1, :lo12:.LC61
+	bl	sprintf
+.LVL265:
+	add	x19, x19, x0, sxtw
+	.loc 3 76 0
+	ldrh	w2, [x21, 3226]
+	mov	x0, x19
+	adrp	x1, .LC62
+	add	x1, x1, :lo12:.LC62
+	bl	sprintf
+.LVL266:
+	add	x19, x19, x0, sxtw
+	.loc 3 77 0
+	ldr	w2, [x21, 3228]
+	mov	x0, x19
+	adrp	x1, .LC63
+	add	x1, x1, :lo12:.LC63
+	bl	sprintf
+.LVL267:
+	add	x19, x19, x0, sxtw
+	.loc 3 78 0
+	ldrh	w2, [x21, 3232]
+	adrp	x1, .LC64
+	add	x1, x1, :lo12:.LC64
+	mov	x0, x19
+	bl	sprintf
+.LVL268:
+	add	x19, x19, x0, sxtw
+	.loc 3 79 0
+	bl	GetFreeBlockMinEraseCount
+.LVL269:
+	and	w2, w0, 65535
+	adrp	x1, .LC65
+	mov	x0, x19
+	add	x1, x1, :lo12:.LC65
+	bl	sprintf
+.LVL270:
+	add	x19, x19, x0, sxtw
+	.loc 3 80 0
+	ldrh	w0, [x21, 2352]
+	bl	GetFreeBlockMaxEraseCount
+.LVL271:
+	and	w2, w0, 65535
+	adrp	x1, .LC66
+	mov	x0, x19
+	add	x1, x1, :lo12:.LC66
+	bl	sprintf
+.LVL272:
+	add	x19, x19, x0, sxtw
+	.loc 3 81 0
+	adrp	x0, .LANCHOR2
+	ldr	w0, [x0, #:lo12:.LANCHOR2]
+	cmp	w0, 1
+	beq	.L211
+.LVL273:
+.L216:
+	.loc 3 104 0
+	sub	w0, w19, w22
+	.loc 3 105 0
+	ldr	x27, [sp, 80]
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+.LVL274:
+	ldp	x23, x24, [sp, 48]
+	ldp	x25, x26, [sp, 64]
+	ldp	x29, x30, [sp], 96
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL275:
+.L211:
+	.cfi_restore_state
+	.loc 3 84 0
+	ldrh	w0, [x21, 2664]
+	mov	w1, 65535
+	cmp	w0, w1
+	beq	.L213
+	.loc 3 85 0
+	ldr	x1, [x21, 2320]
+	ubfiz	x0, x0, 1, 16
+	ldrh	w2, [x1, x0]
+	mov	x0, x19
+	adrp	x1, .LC67
+	add	x1, x1, :lo12:.LC67
+	bl	sprintf
+.LVL276:
+	add	x19, x19, x0, sxtw
+.L213:
+.LBB201:
+	.loc 3 87 0
+	mov	w0, 0
+	.loc 3 91 0
+	adrp	x24, .LC68
+	.loc 3 87 0
+	bl	List_get_gc_head_node
+.LVL277:
+	.loc 3 91 0
+	add	x21, x23, :lo12:.LANCHOR0
+	.loc 3 87 0
+	and	w3, w0, 65535
+.LVL278:
+	.loc 3 91 0
+	add	x24, x24, :lo12:.LC68
+	.loc 3 88 0
+	mov	w20, 0
+	.loc 3 89 0
+	mov	w27, 65535
+	.loc 3 91 0
+	mov	w26, 6
+.L215:
+	.loc 3 89 0
+	cmp	w3, w27
+	beq	.L214
+	.loc 3 91 0 discriminator 2
+	umull	x25, w3, w26
+	ldr	x0, [x21, 2304]
+	ldr	x4, [x21, 2296]
+	ubfiz	x1, x3, 1, 16
+	ldr	x2, [x21, 2320]
+	add	x0, x0, x25
+	ldrh	w6, [x4, x1]
+	ldrh	w5, [x0, 4]
+	mov	x0, x19
+	ldrh	w4, [x2, x1]
+	mov	w2, w20
+	mov	x1, x24
+	.loc 3 88 0 discriminator 2
+	add	w20, w20, 1
+	.loc 3 91 0 discriminator 2
+	bl	sprintf
+.LVL279:
+	add	x19, x19, x0, sxtw
+	.loc 3 92 0 discriminator 2
+	ldr	x0, [x21, 2304]
+	.loc 3 88 0 discriminator 2
+	cmp	w20, 16
+	.loc 3 92 0 discriminator 2
+	ldrh	w3, [x0, x25]
+.LVL280:
+	.loc 3 88 0 discriminator 2
+	bne	.L215
+.L214:
+.LBE201:
+.LBB202:
+	.loc 3 96 0
+	add	x23, x23, :lo12:.LANCHOR0
+	.loc 3 100 0
+	adrp	x21, .LC69
+	add	x21, x21, :lo12:.LC69
+	.loc 3 97 0
+	mov	w20, 0
+	.loc 3 98 0
+	mov	w25, 65535
+	.loc 3 100 0
+	mov	w26, 6
+	.loc 3 96 0
+	ldr	x0, [x23, 2304]
+	ldr	x3, [x23, 2344]
+.LVL281:
+	sub	x3, x3, x0
+	mov	x0, -6148914691236517206
+	asr	x3, x3, 1
+	movk	x0, 0xaaab, lsl 0
+	mul	x3, x3, x0
+	and	w3, w3, 65535
+.LVL282:
+.L217:
+	.loc 3 98 0
+	cmp	w3, w25
+	beq	.L216
+	.loc 3 100 0 discriminator 2
+	umull	x24, w3, w26
+	ldr	x0, [x23, 2304]
+	ldr	x2, [x23, 2296]
+	ubfiz	x1, x3, 1, 16
+	add	x0, x0, x24
+	ldrh	w5, [x2, x1]
+	mov	w2, w20
+	ldrh	w4, [x0, 4]
+	mov	x1, x21
+	mov	x0, x19
+	.loc 3 97 0 discriminator 2
+	add	w20, w20, 1
+	.loc 3 100 0 discriminator 2
+	bl	sprintf
+.LVL283:
+	add	x19, x19, x0, sxtw
+	.loc 3 97 0 discriminator 2
+	cmp	w20, 4
+	beq	.L216
+	.loc 3 101 0
+	ldr	x0, [x23, 2304]
+	ldrh	w3, [x0, x24]
+.LVL284:
+	b	.L217
+.LBE202:
+	.cfi_endproc
+.LFE139:
+	.size	FtlPrintInfo2buf, .-FtlPrintInfo2buf
+	.align	2
+	.global	rknand_proc_ftlread
+	.type	rknand_proc_ftlread, %function
+rknand_proc_ftlread:
+.LFB140:
+	.loc 3 114 0
+	.cfi_startproc
+.LVL285:
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	.loc 3 120 0
+	adrp	x2, .LC70
+	adrp	x1, .LC71
+	add	x2, x2, :lo12:.LC70
+	.loc 3 114 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 3 120 0
+	add	x1, x1, :lo12:.LC71
+	.loc 3 114 0
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -16
+	.cfi_offset 20, -8
+	.loc 3 114 0
+	mov	x20, x0
+	.loc 3 120 0
+	bl	sprintf
+.LVL286:
+	add	x19, x20, x0, sxtw
+	.loc 3 122 0
+	mov	x0, x19
+	bl	FtlPrintInfo2buf
+.LVL287:
+	add	x0, x19, x0, sxtw
+	.loc 3 124 0
+	sub	w0, w0, w20
+	ldp	x19, x20, [sp, 16]
+.LVL288:
+	ldp	x29, x30, [sp], 32
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE140:
+	.size	rknand_proc_ftlread, .-rknand_proc_ftlread
+	.align	2
+	.global	GetSwlReplaceBlock
+	.type	GetSwlReplaceBlock, %function
+GetSwlReplaceBlock:
+.LFB235:
+	.loc 2 2447 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	.loc 2 2456 0
+	adrp	x8, .LANCHOR0
+	add	x0, x8, :lo12:.LANCHOR0
+	.loc 2 2447 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -16
+	.cfi_offset 20, -8
+	.loc 2 2456 0
+	ldr	w2, [x0, 2572]
+	ldr	w1, [x0, 2584]
+	cmp	w2, w1
+	bcs	.L226
+	.loc 2 2459 0
+	ldrh	w2, [x0, 20]
+	mov	x1, 0
+	.loc 2 2460 0
+	ldr	x4, [x0, 2296]
+	.loc 2 2458 0
+	str	wzr, [x0, 2564]
+.L227:
+	.loc 2 2459 0 discriminator 1
+	cmp	w2, w1
+	bhi	.L228
+	.loc 2 2461 0
+	add	x1, x8, :lo12:.LANCHOR0
+	ldr	w0, [x1, 2564]
+	udiv	w2, w0, w2
+	str	w2, [x1, 2572]
+	.loc 2 2462 0
+	ldr	w2, [x1, 2568]
+	sub	w0, w0, w2
+	ldrh	w2, [x1, 72]
+	udiv	w0, w0, w2
+	str	w0, [x1, 2564]
+.L229:
+	.loc 2 2468 0
+	add	x1, x8, :lo12:.LANCHOR0
+	ldr	w9, [x1, 2584]
+	ldr	w10, [x1, 2572]
+	add	w0, w9, 256
+	cmp	w0, w10
+	bls	.L234
+	.loc 2 2468 0 is_stmt 0 discriminator 1
+	ldr	w1, [x1, 2580]
+	add	w0, w9, 768
+	cmp	w0, w1
+	bls	.L234
+.LVL289:
+.L237:
+	.loc 2 2469 0 is_stmt 1
+	mov	w20, 65535
+.L235:
+	.loc 2 2518 0
+	mov	w0, w20
+.LVL290:
+	ldp	x19, x20, [sp, 16]
+.LVL291:
+	ldp	x29, x30, [sp], 32
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL292:
+.L228:
+	.cfi_restore_state
+	.loc 2 2460 0 discriminator 3
+	ldrh	w3, [x4, x1, lsl 1]
+	add	x1, x1, 1
+	ldr	w5, [x0, 2564]
+	add	w3, w3, w5
+	str	w3, [x0, 2564]
+	b	.L227
+.L226:
+	.loc 2 2463 0
+	ldr	w1, [x0, 2580]
+	cmp	w2, w1
+	bls	.L229
+	.loc 2 2464 0
+	add	w1, w1, 1
+	str	w1, [x0, 2580]
+	.loc 2 2465 0
+	mov	w1, 0
+.L231:
+	.loc 2 2465 0 is_stmt 0 discriminator 1
+	ldrh	w2, [x0, 20]
+	cmp	w1, w2
+	bcs	.L229
+	.loc 2 2466 0 is_stmt 1 discriminator 3
+	ldr	x4, [x0, 2296]
+	ubfiz	x3, x1, 1, 32
+	.loc 2 2465 0 discriminator 3
+	add	w1, w1, 1
+	.loc 2 2466 0 discriminator 3
+	ldrh	w2, [x4, x3]
+	add	w2, w2, 1
+	strh	w2, [x4, x3]
+	b	.L231
+.L234:
+	.loc 2 2471 0
+	add	x0, x8, :lo12:.LANCHOR0
+	ldrh	w0, [x0, 2352]
+	add	w0, w0, w0, lsl 1
+	lsr	w0, w0, 2
+	bl	GetFreeBlockMaxEraseCount
+.LVL293:
+	and	w6, w0, 65535
+.LVL294:
+	.loc 2 2472 0
+	add	w0, w9, 64
+	cmp	w6, w0
+	bcs	.L236
+	.loc 2 2472 0 is_stmt 0 discriminator 1
+	cmp	w9, 30
+	bhi	.L237
+.L236:
+	.loc 2 2476 0 is_stmt 1
+	add	x1, x8, :lo12:.LANCHOR0
+	ldr	x0, [x1, 2312]
+.LVL295:
+	cbz	x0, .L237
+	.loc 2 2484 0
+	mov	w4, 65535
+.LVL296:
+	.loc 2 2483 0
+	mov	x11, -6148914691236517206
+	.loc 2 2484 0
+	ldr	x5, [x1, 2296]
+	.loc 2 2479 0
+	mov	w7, w4
+	.loc 2 2483 0
+	ldr	x3, [x1, 2304]
+	.loc 2 2484 0
+	mov	w1, w4
+	.loc 2 2483 0
+	movk	x11, 0xaaab, lsl 0
+	.loc 2 2495 0
+	mov	w12, 6
+.LVL297:
+.L238:
+	.loc 2 2479 0
+	ldrh	w2, [x0]
+	cmp	w2, w7
+	bne	.L241
+	mov	w20, w1
+.L240:
+	.loc 2 2498 0
+	mov	w0, 65535
+.LVL298:
+	cmp	w20, w0
+	beq	.L237
+	.loc 2 2500 0
+	ubfiz	x7, x20, 1, 32
+	ldrh	w3, [x5, x7]
+.LVL299:
+	.loc 2 2501 0
+	cmp	w9, w3
+	bcs	.L242
+	.loc 2 2503 0
+	bl	GetFreeBlockMinEraseCount
+.LVL300:
+	cmp	w9, w0, uxth
+	bcs	.L242
+	.loc 2 2504 0
+	add	x0, x8, :lo12:.LANCHOR0
+	str	w4, [x0, 2584]
+.L242:
+	.loc 2 2506 0
+	cmp	w10, w3
+	bls	.L237
+	.loc 2 2506 0 is_stmt 0 discriminator 1
+	add	w0, w3, 128
+	cmp	w6, w0
+	ble	.L237
+	.loc 2 2508 0 is_stmt 1
+	add	w0, w3, 256
+	cmp	w10, w0
+	bhi	.L243
+	.loc 2 2508 0 is_stmt 0 discriminator 1
+	add	x0, x8, :lo12:.LANCHOR0
+	add	w3, w3, 768
+.LVL301:
+	ldr	w0, [x0, 2580]
+	cmp	w3, w0
+	bcs	.L237
+.LVL302:
+.L243:
+	.loc 2 2510 0 is_stmt 1
+	add	x19, x8, :lo12:.LANCHOR0
+	ldrh	w5, [x5, x7]
+	mov	w2, w10
+	mov	w1, w20
+	ldr	x0, [x19, 2320]
+	ldr	w3, [x19, 2580]
+.LVL303:
+	ldrh	w4, [x0, x7]
+.LVL304:
+	adrp	x0, .LC72
+	add	x0, x0, :lo12:.LC72
+	bl	printk
+.LVL305:
+	.loc 2 2511 0
+	mov	w0, 1
+	str	w0, [x19, 3236]
+	.loc 2 2512 0
+	b	.L235
+.LVL306:
+.L241:
+	.loc 2 2481 0
+	ldrh	w13, [x0, 4]
+	cbz	w13, .L239
+	.loc 2 2483 0
+	sub	x0, x0, x3
+.LVL307:
+	asr	x0, x0, 1
+	mul	x0, x0, x11
+	and	w20, w0, 65535
+	.loc 2 2484 0
+	and	x0, x0, 65535
+	ldrh	w0, [x5, x0, lsl 1]
+	cmp	w9, w0
+	bcs	.L240
+	.loc 2 2489 0
+	cmp	w4, w0
+	bls	.L239
+	mov	w4, w0
+	.loc 2 2483 0
+	mov	w1, w20
+.LVL308:
+.L239:
+	.loc 2 2495 0
+	umaddl	x0, w2, w12, x3
+	b	.L238
+	.cfi_endproc
+.LFE235:
+	.size	GetSwlReplaceBlock, .-GetSwlReplaceBlock
+	.align	2
+	.global	free_data_superblock
+	.type	free_data_superblock, %function
+free_data_superblock:
+.LFB236:
+	.loc 2 2522 0
+	.cfi_startproc
+.LVL309:
+	and	w0, w0, 65535
+	.loc 2 2523 0
+	mov	w1, 65535
+	cmp	w0, w1
+	beq	.L254
+	.loc 2 2522 0
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+.LBB205:
+.LBB206:
+	.loc 2 2525 0
+	adrp	x2, .LANCHOR0+2320
+	ubfiz	x1, x0, 1, 16
+.LBE206:
+.LBE205:
+	.loc 2 2522 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+.LBB208:
+.LBB207:
+	.loc 2 2525 0
+	ldr	x2, [x2, #:lo12:.LANCHOR0+2320]
+	strh	wzr, [x2, x1]
+	.loc 2 2526 0
+	bl	INSERT_FREE_LIST
+.LVL310:
+.LBE207:
+.LBE208:
+	.loc 2 2528 0
+	mov	w0, 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+.LVL311:
+.L254:
+	mov	w0, 0
+.LVL312:
+	ret
+	.cfi_endproc
+.LFE236:
+	.size	free_data_superblock, .-free_data_superblock
+	.align	2
+	.global	get_new_active_ppa
+	.type	get_new_active_ppa, %function
+get_new_active_ppa:
+.LFB239:
+	.loc 2 2655 0
+	.cfi_startproc
+.LVL313:
+	stp	x29, x30, [sp, -48]!
+	.cfi_def_cfa_offset 48
+	.cfi_offset 29, -48
+	.cfi_offset 30, -40
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -32
+	.cfi_offset 20, -24
+	mov	x19, x0
+	str	x21, [sp, 32]
+	.cfi_offset 21, -16
+	.loc 2 2659 0
+	ldrh	w1, [x0]
+	mov	w0, 65535
+.LVL314:
+	cmp	w1, w0
+	bne	.L258
+	.loc 2 2659 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 2659
+	add	x1, x1, 168
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL315:
+.L258:
+	.loc 2 2660 0 is_stmt 1
+	adrp	x20, .LANCHOR0
+	add	x0, x20, :lo12:.LANCHOR0
+	ldrh	w1, [x19, 2]
+	ldrh	w0, [x0, 82]
+	cmp	w1, w0
+	bne	.L259
+	.loc 2 2660 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 2660
+	add	x1, x1, 168
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL316:
+.L259:
+	.loc 2 2661 0 is_stmt 1
+	ldrh	w0, [x19, 4]
+	cbnz	w0, .L260
+	.loc 2 2661 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 2661
+	add	x1, x1, 168
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL317:
+.L260:
+	.loc 2 2663 0 is_stmt 1
+	ldrb	w0, [x19, 6]
+	.loc 2 2666 0
+	add	x1, x20, :lo12:.LANCHOR0
+	.loc 2 2662 0
+	strb	wzr, [x19, 10]
+	.loc 2 2663 0
+	add	x0, x0, 8
+	.loc 2 2666 0
+	ldrh	w2, [x1, 12]
+	.loc 2 2664 0
+	mov	w1, 65535
+	.loc 2 2663 0
+	ldrh	w0, [x19, x0, lsl 1]
+.LVL318:
+.L261:
+	.loc 2 2664 0
+	cmp	w0, w1
+	beq	.L263
+	.loc 2 2672 0
+	ldrh	w21, [x19, 2]
+	.loc 2 2680 0
+	mov	w3, 65535
+	.loc 2 2673 0
+	ldrh	w1, [x19, 4]
+	.loc 2 2672 0
+	orr	w21, w21, w0, lsl 10
+	ldrb	w0, [x19, 6]
+.LVL319:
+	.loc 2 2673 0
+	sub	w1, w1, #1
+	and	w1, w1, 65535
+	strh	w1, [x19, 4]
+.L265:
+	.loc 2 2675 0
+	add	w0, w0, 1
+	and	w0, w0, 255
+	.loc 2 2676 0
+	cmp	w2, w0
+	bne	.L264
+	.loc 2 2677 0
+	ldrh	w0, [x19, 2]
+	add	w0, w0, 1
+	strh	w0, [x19, 2]
+	.loc 2 2678 0
+	mov	w0, 0
+.L264:
+	.loc 2 2680 0
+	add	x4, x19, x0, sxtw 1
+	ldrh	w4, [x4, 16]
+	cmp	w4, w3
+	beq	.L265
+	.loc 2 2682 0
+	add	x20, x20, :lo12:.LANCHOR0
+	strb	w0, [x19, 6]
+	ldrh	w2, [x19, 2]
+	ldrh	w0, [x20, 82]
+	cmp	w2, w0
+	bne	.L257
+	.loc 2 2682 0 is_stmt 0 discriminator 1
+	cbz	w1, .L257
+	.loc 2 2682 0 discriminator 2
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 2682
+	add	x1, x1, 168
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL320:
+.L257:
+	.loc 2 2684 0 is_stmt 1
+	mov	w0, w21
+	ldr	x21, [sp, 32]
+	ldp	x19, x20, [sp, 16]
+.LVL321:
+	ldp	x29, x30, [sp], 48
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 21
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL322:
+.L263:
+	.cfi_restore_state
+	.loc 2 2665 0
+	ldrb	w0, [x19, 6]
+.LVL323:
+	add	w0, w0, 1
+	and	w0, w0, 255
+	strb	w0, [x19, 6]
+	.loc 2 2666 0
+	cmp	w0, w2
+	bne	.L262
+	.loc 2 2667 0
+	ldrh	w0, [x19, 2]
+	.loc 2 2668 0
+	strb	wzr, [x19, 6]
+	.loc 2 2667 0
+	add	w0, w0, 1
+	strh	w0, [x19, 2]
+.L262:
+	.loc 2 2670 0
+	ldrb	w0, [x19, 6]
+	add	x0, x0, 8
+	ldrh	w0, [x19, x0, lsl 1]
+.LVL324:
+	b	.L261
+	.cfi_endproc
+.LFE239:
+	.size	get_new_active_ppa, .-get_new_active_ppa
+	.align	2
+	.global	FtlGcBufInit
+	.type	FtlGcBufInit, %function
+FtlGcBufInit:
+.LFB242:
+	.file 5 "drivers/rkflash/rksftl/sftl_gc.c"
+	.loc 5 22 0
+	.cfi_startproc
+	.loc 5 25 0
+	adrp	x0, .LANCHOR0
+	add	x1, x0, :lo12:.LANCHOR0
+	.loc 5 26 0
+	mov	w3, 0
+	.loc 5 27 0
+	mov	w8, 24
+	mov	w9, 1
+	.loc 5 28 0
+	mov	w5, 4
+	.loc 5 25 0
+	str	wzr, [x1, 3240]
+.L273:
+	.loc 5 26 0 discriminator 1
+	ldrh	w2, [x1, 12]
+	cmp	w3, w2
+	bcc	.L274
+	.loc 5 34 0 discriminator 1
+	add	x0, x0, :lo12:.LANCHOR0
+	.loc 5 35 0 discriminator 1
+	mov	w6, 24
+	.loc 5 36 0 discriminator 1
+	mov	w5, 4
+.L275:
+	.loc 5 34 0 discriminator 1
+	ldr	w1, [x0, 3280]
+	cmp	w2, w1
+	bcc	.L276
+	.loc 5 39 0
+	ret
+.L274:
+	.loc 5 27 0 discriminator 3
+	umull	x4, w3, w8
+	ldr	x6, [x1, 3248]
+	.loc 5 28 0 discriminator 3
+	ldr	x7, [x1, 3256]
+	.loc 5 27 0 discriminator 3
+	add	x2, x6, x4
+	str	w9, [x2, 16]
+	.loc 5 28 0 discriminator 3
+	ldrh	w2, [x1, 90]
+	mul	w2, w2, w3
+	sdiv	w2, w2, w5
+	add	x2, x7, x2, sxtw 2
+	str	x2, [x6, x4]
+	.loc 5 29 0 discriminator 3
+	ldrh	w2, [x1, 92]
+	ldr	x7, [x1, 3248]
+	ldr	x10, [x1, 3264]
+	add	x6, x7, x4
+	mul	w2, w2, w3
+	sdiv	w2, w2, w5
+	add	x2, x10, x2, sxtw 2
+	str	x2, [x6, 8]
+	.loc 5 30 0 discriminator 3
+	ldr	x2, [x1, 3272]
+	ubfiz	x10, x3, 5, 16
+	ldr	x4, [x7, x4]
+	.loc 5 26 0 discriminator 3
+	add	w3, w3, 1
+	.loc 5 30 0 discriminator 3
+	add	x2, x2, x10
+	.loc 5 26 0 discriminator 3
+	and	w3, w3, 65535
+	.loc 5 30 0 discriminator 3
+	str	x4, [x2, 8]
+	.loc 5 31 0 discriminator 3
+	ldr	x4, [x6, 8]
+	str	x4, [x2, 16]
+	b	.L273
+.L276:
+	.loc 5 35 0 discriminator 3
+	umull	x4, w2, w6
+	ldr	x3, [x0, 3248]
+	.loc 5 36 0 discriminator 3
+	ldr	x7, [x0, 3256]
+	.loc 5 35 0 discriminator 3
+	add	x1, x3, x4
+	str	wzr, [x1, 16]
+	.loc 5 36 0 discriminator 3
+	ldrh	w1, [x0, 90]
+	mul	w1, w1, w2
+	sdiv	w1, w1, w5
+	add	x1, x7, x1, sxtw 2
+	str	x1, [x3, x4]
+	.loc 5 37 0 discriminator 3
+	ldrh	w1, [x0, 92]
+	ldr	x3, [x0, 3248]
+	add	x3, x3, x4
+	ldr	x4, [x0, 3264]
+	mul	w1, w1, w2
+	.loc 5 34 0 discriminator 3
+	add	w2, w2, 1
+	and	w2, w2, 65535
+	.loc 5 37 0 discriminator 3
+	sdiv	w1, w1, w5
+	add	x1, x4, x1, sxtw 2
+	str	x1, [x3, 8]
+	b	.L275
+	.cfi_endproc
+.LFE242:
+	.size	FtlGcBufInit, .-FtlGcBufInit
+	.align	2
+	.global	FtlGcBufFree
+	.type	FtlGcBufFree, %function
+FtlGcBufFree:
+.LFB243:
+	.loc 5 42 0
+	.cfi_startproc
+.LVL325:
+	.loc 5 47 0
+	adrp	x2, .LANCHOR0
+	add	x2, x2, :lo12:.LANCHOR0
+	.loc 5 46 0
+	mov	w3, 0
+.LVL326:
+	.loc 5 48 0
+	mov	w8, 24
+	.loc 5 47 0
+	ldr	w7, [x2, 3280]
+	.loc 5 48 0
+	ldr	x5, [x2, 3248]
+.LVL327:
+.L278:
+	.loc 5 46 0 discriminator 1
+	cmp	w3, w1
+	bcs	.L277
+	.loc 5 48 0
+	ubfiz	x4, x3, 5, 16
+	mov	w2, 0
+	add	x4, x0, x4
+	b	.L283
+.L279:
+	.loc 5 47 0 discriminator 2
+	add	w2, w2, 1
+.LVL328:
+	and	w2, w2, 65535
+.LVL329:
+.L283:
+	.loc 5 47 0 is_stmt 0 discriminator 1
+	cmp	w2, w7
+	bcs	.L280
+	.loc 5 48 0 is_stmt 1
+	umull	x6, w2, w8
+	add	x9, x5, x6
+	ldr	x10, [x5, x6]
+	ldr	x6, [x4, 8]
+	cmp	x10, x6
+	bne	.L279
+	.loc 5 49 0
+	str	wzr, [x9, 16]
+.L280:
+	.loc 5 46 0 discriminator 2
+	add	w3, w3, 1
+.LVL330:
+	and	w3, w3, 65535
+.LVL331:
+	b	.L278
+.L277:
+	ret
+	.cfi_endproc
+.LFE243:
+	.size	FtlGcBufFree, .-FtlGcBufFree
+	.align	2
+	.global	FtlGcBufAlloc
+	.type	FtlGcBufAlloc, %function
+FtlGcBufAlloc:
+.LFB244:
+	.loc 5 57 0
+	.cfi_startproc
+.LVL332:
+	.loc 5 62 0
+	adrp	x2, .LANCHOR0
+	add	x2, x2, :lo12:.LANCHOR0
+	.loc 5 61 0
+	mov	w3, 0
+.LVL333:
+	.loc 5 63 0
+	mov	w7, 24
+	.loc 5 64 0
+	mov	w8, 1
+	.loc 5 62 0
+	ldr	w5, [x2, 3280]
+	.loc 5 63 0
+	ldr	x6, [x2, 3248]
+.LVL334:
+.L285:
+	.loc 5 61 0 discriminator 1
+	cmp	w3, w1
+	bcs	.L284
+	mov	w2, 0
+	b	.L290
+.L286:
+	.loc 5 62 0 discriminator 2
+	add	w2, w2, 1
+.LVL335:
+	and	w2, w2, 65535
+.LVL336:
+.L290:
+	.loc 5 62 0 is_stmt 0 discriminator 1
+	cmp	w2, w5
+	bcs	.L287
+	.loc 5 63 0 is_stmt 1
+	umaddl	x4, w2, w7, x6
+	ldr	w9, [x4, 16]
+	cbnz	w9, .L286
+	.loc 5 65 0
+	ubfiz	x2, x3, 5, 16
+.LVL337:
+	ldr	x9, [x4]
+	add	x2, x0, x2
+	.loc 5 64 0
+	str	w8, [x4, 16]
+	.loc 5 65 0
+	str	x9, [x2, 8]
+	.loc 5 66 0
+	ldr	x4, [x4, 8]
+	str	x4, [x2, 16]
+.LVL338:
+.L287:
+	.loc 5 61 0 discriminator 2
+	add	w3, w3, 1
+.LVL339:
+	and	w3, w3, 65535
+.LVL340:
+	b	.L285
+.L284:
+	ret
+	.cfi_endproc
+.LFE244:
+	.size	FtlGcBufAlloc, .-FtlGcBufAlloc
+	.align	2
+	.global	IsBlkInGcList
+	.type	IsBlkInGcList, %function
+IsBlkInGcList:
+.LFB245:
+	.loc 5 74 0
+	.cfi_startproc
+.LVL341:
+	.loc 5 77 0
+	adrp	x1, .LANCHOR0
+	add	x1, x1, :lo12:.LANCHOR0
+	.loc 5 74 0
+	and	w0, w0, 65535
+	.loc 5 77 0
+	ldrh	w2, [x1, 3284]
+	.loc 5 78 0
+	ldr	x3, [x1, 3288]
+	.loc 5 77 0
+	mov	x1, 0
+.L292:
+	.loc 5 77 0 is_stmt 0 discriminator 1
+	cmp	w2, w1, uxth
+	bhi	.L294
+	.loc 5 81 0 is_stmt 1
+	mov	w0, 0
+.LVL342:
+	ret
+.LVL343:
+.L294:
+	add	x1, x1, 1
+	.loc 5 78 0
+	add	x4, x3, x1, lsl 1
+	ldrh	w4, [x4, -2]
+	cmp	w4, w0
+	bne	.L292
+	.loc 5 79 0
+	mov	w0, 1
+.LVL344:
+	.loc 5 82 0
+	ret
+	.cfi_endproc
+.LFE245:
+	.size	IsBlkInGcList, .-IsBlkInGcList
+	.align	2
+	.global	FtlGcUpdatePage
+	.type	FtlGcUpdatePage, %function
+FtlGcUpdatePage:
+.LFB246:
+	.loc 5 85 0
+	.cfi_startproc
+.LVL345:
+	mov	w5, w0
+	mov	w8, w1
+	mov	w7, w2
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	.loc 5 88 0
+	lsr	w0, w0, 10
+.LVL346:
+	.loc 5 85 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 5 88 0
+	bl	P2V_block_in_plane
+.LVL347:
+	and	w9, w0, 65535
+.LVL348:
+	.loc 5 91 0
+	adrp	x3, .LANCHOR0
+	add	x4, x3, :lo12:.LANCHOR0
+	ldrh	w1, [x4, 3284]
+	.loc 5 92 0
+	ldr	x6, [x4, 3288]
+	.loc 5 91 0
+	mov	x4, 0
+.L297:
+	and	w2, w4, 65535
+.LVL349:
+	.loc 5 91 0 is_stmt 0 discriminator 1
+	cmp	w2, w1
+	bcc	.L299
+	.loc 5 96 0 is_stmt 1
+	bne	.L298
+	.loc 5 97 0
+	and	x4, x4, 65535
+	strh	w0, [x6, x4, lsl 1]
+	.loc 5 98 0
+	add	x4, x3, :lo12:.LANCHOR0
+	ldrh	w0, [x4, 3284]
+	add	w0, w0, 1
+	strh	w0, [x4, 3284]
+	b	.L298
+.L299:
+	add	x4, x4, 1
+	.loc 5 92 0
+	add	x2, x6, x4, lsl 1
+.LVL350:
+	ldrh	w2, [x2, -2]
+	cmp	w2, w9
+	bne	.L297
+.LVL351:
+.L298:
+	.loc 5 101 0
+	add	x0, x3, :lo12:.LANCHOR0
+	mov	w1, 12
+	ldrh	w3, [x0, 3296]
+	ldr	x4, [x0, 3304]
+	umull	x3, w3, w1
+	add	x4, x4, x3
+	str	w8, [x4, 4]
+	.loc 5 102 0
+	ldr	x1, [x0, 3304]
+	add	x4, x1, x3
+	str	w7, [x4, 8]
+	.loc 5 103 0
+	str	w5, [x1, x3]
+	.loc 5 107 0
+	ldrh	w1, [x0, 3296]
+	add	w1, w1, 1
+	strh	w1, [x0, 3296]
+	.loc 5 108 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE246:
+	.size	FtlGcUpdatePage, .-FtlGcUpdatePage
+	.align	2
+	.global	FtlGcRefreshBlock
+	.type	FtlGcRefreshBlock, %function
+FtlGcRefreshBlock:
+.LFB253:
+	.loc 5 345 0
+	.cfi_startproc
+.LVL352:
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	str	x19, [sp, 16]
+	.cfi_offset 19, -16
+	.loc 5 345 0
+	and	w19, w0, 65535
+.LVL353:
+	.loc 5 347 0
+	mov	w1, w19
+	adrp	x0, .LC73
+	add	x0, x0, :lo12:.LC73
+	bl	printk
+.LVL354:
+	.loc 5 349 0
+	adrp	x0, .LANCHOR0
+	add	x0, x0, :lo12:.LANCHOR0
+	ldrh	w3, [x0, 3312]
+	cmp	w19, w3
+	beq	.L302
+	.loc 5 349 0 is_stmt 0 discriminator 1
+	ldrh	w2, [x0, 3314]
+	cmp	w19, w2
+	beq	.L302
+	.loc 5 351 0 is_stmt 1
+	mov	w1, 65535
+	cmp	w3, w1
+	bne	.L303
+	.loc 5 352 0
+	strh	w19, [x0, 3312]
+.L302:
+	.loc 5 356 0
+	mov	w0, 0
+	ldr	x19, [sp, 16]
+.LVL355:
+	ldp	x29, x30, [sp], 32
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_def_cfa 31, 0
+	ret
+.LVL356:
+.L303:
+	.cfi_restore_state
+	.loc 5 353 0
+	cmp	w2, w1
+	bne	.L302
+	.loc 5 354 0
+	strh	w19, [x0, 3314]
+	b	.L302
+	.cfi_endproc
+.LFE253:
+	.size	FtlGcRefreshBlock, .-FtlGcRefreshBlock
+	.align	2
+	.global	FtlGcMarkBadPhyBlk
+	.type	FtlGcMarkBadPhyBlk, %function
+FtlGcMarkBadPhyBlk:
+.LFB254:
+	.loc 5 359 0
+	.cfi_startproc
+.LVL357:
+	stp	x29, x30, [sp, -48]!
+	.cfi_def_cfa_offset 48
+	.cfi_offset 29, -48
+	.cfi_offset 30, -40
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -32
+	.cfi_offset 20, -24
+	.loc 5 364 0
+	adrp	x19, .LANCHOR0
+	add	x20, x19, :lo12:.LANCHOR0
+	.loc 5 359 0
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -16
+	.cfi_offset 22, -8
+	.loc 5 359 0
+	and	w21, w0, 65535
+.LVL358:
+	.loc 5 369 0
+	add	x20, x20, 3320
+	.loc 5 361 0
+	mov	w0, w21
+	bl	P2V_block_in_plane
+.LVL359:
+	.loc 5 364 0
+	ldrh	w1, [x20, -4]
+	mov	w2, w21
+	.loc 5 361 0
+	mov	w22, w0
+	.loc 5 364 0
+	adrp	x0, .LC74
+	add	x0, x0, :lo12:.LC74
+	bl	printk
+.LVL360:
+	.loc 5 366 0
+	mov	w0, w22
+	bl	FtlGcRefreshBlock
+.LVL361:
+	.loc 5 368 0
+	ldrh	w0, [x20, -4]
+	mov	x1, 0
+.L306:
+	.loc 5 368 0 is_stmt 0 discriminator 1
+	cmp	w0, w1, uxth
+	bhi	.L308
+	.loc 5 372 0 is_stmt 1
+	cmp	w0, 15
+	bhi	.L307
+	.loc 5 373 0
+	add	x19, x19, :lo12:.LANCHOR0
+	add	w1, w0, 1
+	add	x19, x19, 3320
+	strh	w1, [x19, -4]
+	strh	w21, [x19, w0, sxtw 1]
+	b	.L307
+.L308:
+	add	x1, x1, 1
+	.loc 5 369 0
+	add	x2, x20, x1, lsl 1
+	ldrh	w2, [x2, -2]
+	cmp	w2, w21
+	bne	.L306
+.L307:
+	.loc 5 375 0
+	mov	w0, 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+.LVL362:
+	ldp	x29, x30, [sp], 48
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE254:
+	.size	FtlGcMarkBadPhyBlk, .-FtlGcMarkBadPhyBlk
+	.align	2
+	.global	FtlGcReFreshBadBlk
+	.type	FtlGcReFreshBadBlk, %function
+FtlGcReFreshBadBlk:
+.LFB255:
+	.loc 5 379 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	str	x19, [sp, 16]
+	.cfi_offset 19, -16
+	.loc 5 380 0
+	adrp	x19, .LANCHOR0
+	add	x0, x19, :lo12:.LANCHOR0
+	ldrh	w1, [x0, 3316]
+	cbz	w1, .L311
+	.loc 5 380 0 is_stmt 0 discriminator 1
+	ldrh	w3, [x0, 3312]
+	mov	w2, 65535
+	cmp	w3, w2
+	bne	.L311
+	.loc 5 381 0 is_stmt 1
+	ldrh	w2, [x0, 3354]
+	cmp	w2, w1
+	bcc	.L312
+	.loc 5 382 0
+	strh	wzr, [x0, 3354]
+.L312:
+.LBB211:
+.LBB212:
+	.loc 5 383 0
+	add	x19, x19, :lo12:.LANCHOR0
+	add	x0, x19, 3320
+	ldrh	w1, [x19, 3354]
+	ldrh	w0, [x0, x1, lsl 1]
+	bl	P2V_block_in_plane
+.LVL363:
+	bl	FtlGcRefreshBlock
+.LVL364:
+	.loc 5 384 0
+	ldrh	w0, [x19, 3354]
+	add	w0, w0, 1
+	strh	w0, [x19, 3354]
+.L311:
+.LBE212:
+.LBE211:
+	.loc 5 387 0
+	mov	w0, 0
+	ldr	x19, [sp, 16]
+	ldp	x29, x30, [sp], 32
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE255:
+	.size	FtlGcReFreshBadBlk, .-FtlGcReFreshBadBlk
+	.align	2
+	.global	FlashReadPages
+	.type	FlashReadPages, %function
+FlashReadPages:
+.LFB261:
+	.loc 1 44 0
+	.cfi_startproc
+.LVL365:
+	stp	x29, x30, [sp, -96]!
+	.cfi_def_cfa_offset 96
+	.cfi_offset 29, -96
+	.cfi_offset 30, -88
+	ubfiz	x1, x1, 5, 32
+.LVL366:
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -48
+	.cfi_offset 24, -40
+	.loc 1 46 0
+	adrp	x23, g_nand_phy_info
+	add	x2, x23, :lo12:g_nand_phy_info
+.LVL367:
+	.loc 1 44 0
+	stp	x19, x20, [sp, 16]
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 19, -80
+	.cfi_offset 20, -72
+	.cfi_offset 21, -64
+	.cfi_offset 22, -56
+	.loc 1 51 0
+	adrp	x20, .LANCHOR1
+	.loc 1 44 0
+	str	x25, [sp, 64]
+	.cfi_offset 25, -32
+	.loc 1 51 0
+	add	x20, x20, :lo12:.LANCHOR1
+	adrp	x22, .LC1
+	mov	x19, x0
+	.loc 1 46 0
+	ldrh	w25, [x2, 12]
+.LVL368:
+	add	x24, x0, x1
+.LVL369:
+	.loc 1 51 0
+	add	x20, x20, 192
+	add	x22, x22, :lo12:.LC1
+.LVL370:
+.L318:
+	.loc 1 50 0 discriminator 1
+	cmp	x19, x24
+	bne	.L325
+	.loc 1 71 0
+	ldp	x19, x20, [sp, 16]
+	mov	w0, 0
+	ldp	x21, x22, [sp, 32]
+	ldp	x23, x24, [sp, 48]
+	ldr	x25, [sp, 64]
+.LVL371:
+	ldp	x29, x30, [sp], 96
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 25
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL372:
+.L325:
+	.cfi_restore_state
+	.loc 1 51 0
+	ldr	x0, [x19, 8]
+	cbz	x0, .L319
+	.loc 1 51 0 is_stmt 0 discriminator 2
+	ldr	x0, [x19, 16]
+	cbnz	x0, .L320
+.L319:
+	.loc 1 51 0 discriminator 3
+	mov	w2, 51
+	mov	x1, x20
+	mov	x0, x22
+	bl	printk
+.LVL373:
+.L320:
+	.loc 1 52 0 is_stmt 1
+	ldr	w0, [x19, 4]
+	.loc 1 53 0
+	adrp	x21, g_nand_ops
+	add	x21, x21, :lo12:g_nand_ops
+	.loc 1 52 0
+	add	x2, x29, 88
+	add	x1, x29, 92
+	bl	l2p_addr_tran.isra.0
+.LVL374:
+	.loc 1 53 0
+	ldrb	w0, [x29, 88]
+	ldr	w1, [x29, 92]
+	ldp	x2, x3, [x19, 8]
+	ldr	x4, [x21, 24]
+	blr	x4
+.LVL375:
+	.loc 1 57 0
+	str	w0, [x19]
+	.loc 1 58 0
+	add	x0, x23, :lo12:g_nand_phy_info
+	ldrh	w0, [x0, 14]
+	cmp	w0, 4
+	bne	.L322
+	.loc 1 59 0
+	ldrb	w0, [x29, 88]
+	ldr	x4, [x21, 24]
+	ldp	x2, x3, [x19, 8]
+	ldr	w1, [x29, 92]
+	add	x3, x3, 8
+	add	x2, x2, 2048
+	add	w1, w25, w1
+	blr	x4
+.LVL376:
+	.loc 1 63 0
+	cmn	w0, #1
+	beq	.L323
+	.loc 1 64 0 discriminator 1
+	ldr	x0, [x19, 16]
+	.loc 1 63 0 discriminator 1
+	ldr	w1, [x0, 12]
+	cmn	w1, #1
+	bne	.L322
+	.loc 1 64 0
+	ldr	w1, [x0, 8]
+	cmn	w1, #1
+	bne	.L322
+	.loc 1 65 0
+	ldr	w0, [x0]
+	cmn	w0, #1
+	beq	.L322
+.L323:
+	.loc 1 67 0
+	mov	w0, -1
+	str	w0, [x19]
+.L322:
+	add	x19, x19, 32
+	b	.L318
+	.cfi_endproc
+.LFE261:
+	.size	FlashReadPages, .-FlashReadPages
+	.align	2
+	.global	FtlLoadFactoryBbt
+	.type	FtlLoadFactoryBbt, %function
+FtlLoadFactoryBbt:
+.LFB169:
+	.loc 4 279 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -80]!
+	.cfi_def_cfa_offset 80
+	.cfi_offset 29, -80
+	.cfi_offset 30, -72
+	.loc 4 286 0
+	adrp	x0, .LANCHOR0
+	add	x0, x0, :lo12:.LANCHOR0
+	.loc 4 279 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -48
+	.cfi_offset 22, -40
+	add	x22, x0, 148
+	stp	x25, x26, [sp, 64]
+	.loc 4 289 0
+	mov	w21, 0
+.LVL377:
+	.loc 4 279 0
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 25, -16
+	.cfi_offset 26, -8
+	.cfi_offset 19, -64
+	.cfi_offset 20, -56
+	.loc 4 289 0
+	mov	x19, x0
+	.loc 4 279 0
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -32
+	.cfi_offset 24, -24
+	.loc 4 286 0
+	add	x23, x0, 3360
+	.loc 4 293 0
+	mov	x25, x23
+	.loc 4 301 0
+	mov	w26, 61664
+	.loc 4 286 0
+	ldr	x1, [x0, 2288]
+	.loc 4 287 0
+	ldr	x24, [x0, 3392]
+	stp	x1, x24, [x23, 8]
+.LVL378:
+.L337:
+	.loc 4 289 0 discriminator 1
+	ldrh	w0, [x19, 34]
+	cmp	w21, w0
+	bcc	.L342
+	.loc 4 314 0
+	mov	w0, 0
+	ldp	x19, x20, [sp, 16]
+.LVL379:
+	ldp	x21, x22, [sp, 32]
+.LVL380:
+	ldp	x23, x24, [sp, 48]
+	ldp	x25, x26, [sp, 64]
+	ldp	x29, x30, [sp], 80
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL381:
+.L342:
+	.cfi_restore_state
+	.loc 4 291 0
+	ldrh	w20, [x19, 78]
+.LVL382:
+	.loc 4 290 0
+	mov	w0, -1
+	strh	w0, [x22]
+.LVL383:
+.L339:
+	.loc 4 291 0 discriminator 2
+	ldrh	w0, [x19, 78]
+	sub	w20, w20, #1
+.LVL384:
+	and	w20, w20, 65535
+.LVL385:
+	sub	w1, w0, #16
+	cmp	w20, w1
+	ble	.L340
+	.loc 4 292 0
+	madd	w0, w0, w21, w20
+	.loc 4 294 0
+	mov	w2, 1
+	mov	w1, w2
+	.loc 4 292 0
+	lsl	w0, w0, 10
+.LVL386:
+	.loc 4 293 0
+	str	w0, [x25, 4]
+	.loc 4 294 0
+	mov	x0, x23
+.LVL387:
+	bl	FlashReadPages
+.LVL388:
+	.loc 4 295 0
+	ldr	w0, [x25]
+	cmn	w0, #1
+	beq	.L339
+	.loc 4 301 0
+	ldrh	w0, [x24]
+	cmp	w0, w26
+	bne	.L339
+	.loc 4 303 0
+	strh	w20, [x22]
+.L340:
+	.loc 4 289 0 discriminator 2
+	add	w21, w21, 1
+	add	x22, x22, 2
+	b	.L337
+	.cfi_endproc
+.LFE169:
+	.size	FtlLoadFactoryBbt, .-FtlLoadFactoryBbt
+	.align	2
+	.global	FtlGetLastWrittenPage
+	.type	FtlGetLastWrittenPage, %function
+FtlGetLastWrittenPage:
+.LFB175:
+	.loc 2 47 0
+	.cfi_startproc
+.LVL389:
+	stp	x29, x30, [sp, -160]!
+	.cfi_def_cfa_offset 160
+	.cfi_offset 29, -160
+	.cfi_offset 30, -152
+	.loc 2 51 0
+	cmp	w1, 1
+	.loc 2 47 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -112
+	.cfi_offset 24, -104
+	mov	w23, w1
+	stp	x19, x20, [sp, 16]
+	adrp	x1, .LANCHOR0
+.LVL390:
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 19, -144
+	.cfi_offset 20, -136
+	.cfi_offset 21, -128
+	.cfi_offset 22, -120
+	.loc 2 51 0
+	add	x1, x1, :lo12:.LANCHOR0
+	bne	.L348
+	.loc 2 51 0 is_stmt 0 discriminator 1
+	ldrh	w19, [x1, 84]
+.L349:
+	.loc 2 56 0 is_stmt 1 discriminator 4
+	sub	w19, w19, #1
+	.loc 2 53 0 discriminator 4
+	adrp	x1, ftl_temp_buf
+	.loc 2 56 0 discriminator 4
+	sxth	w19, w19
+.LVL391:
+	.loc 2 53 0 discriminator 4
+	add	x1, x1, :lo12:ftl_temp_buf
+	.loc 2 57 0 discriminator 4
+	lsl	w21, w0, 10
+	.loc 2 53 0 discriminator 4
+	str	x1, [x29, 72]
+	.loc 2 57 0 discriminator 4
+	orr	w0, w19, w21
+.LVL392:
+	.loc 2 54 0 discriminator 4
+	add	x1, x29, 96
+	.loc 2 57 0 discriminator 4
+	str	w0, [x29, 68]
+	.loc 2 58 0 discriminator 4
+	mov	w2, w23
+	.loc 2 54 0 discriminator 4
+	str	x1, [x29, 80]
+	.loc 2 58 0 discriminator 4
+	add	x0, x29, 64
+	mov	w1, 1
+	bl	FlashReadPages
+.LVL393:
+	.loc 2 59 0 discriminator 4
+	ldr	w0, [x29, 96]
+	cmn	w0, #1
+	bne	.L350
+	mov	w22, 0
+.LVL394:
+	.loc 2 61 0
+	mov	w24, 2
+.L351:
+	.loc 2 60 0
+	cmp	w22, w19
+	ble	.L354
+.L350:
+	.loc 2 73 0
+	mov	w0, w19
+	ldp	x19, x20, [sp, 16]
+.LVL395:
+	ldp	x21, x22, [sp, 32]
+.LVL396:
+	ldp	x23, x24, [sp, 48]
+.LVL397:
+	ldp	x29, x30, [sp], 160
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL398:
+.L348:
+	.cfi_restore_state
+	.loc 2 51 0 discriminator 2
+	ldrh	w19, [x1, 82]
+	b	.L349
+.LVL399:
+.L354:
+	.loc 2 61 0
+	add	w20, w22, w19
+	.loc 2 63 0
+	mov	w2, w23
+	mov	w1, 1
+	.loc 2 61 0
+	sdiv	w20, w20, w24
+	.loc 2 62 0
+	sxth	w0, w20
+	orr	w0, w0, w21
+	str	w0, [x29, 68]
+	.loc 2 63 0
+	add	x0, x29, 64
+	bl	FlashReadPages
+.LVL400:
+	.loc 2 65 0
+	ldr	w0, [x29, 96]
+	cmn	w0, #1
+	bne	.L352
+	.loc 2 65 0 is_stmt 0 discriminator 1
+	ldr	w0, [x29, 100]
+	cmn	w0, #1
+	bne	.L352
+	.loc 2 66 0 is_stmt 1
+	sub	w19, w20, #1
+.LVL401:
+	sxth	w19, w19
+.LVL402:
+	b	.L351
+.L352:
+	.loc 2 68 0
+	add	w20, w20, 1
+	sxth	w22, w20
+	b	.L351
+	.cfi_endproc
+.LFE175:
+	.size	FtlGetLastWrittenPage, .-FtlGetLastWrittenPage
+	.align	2
+	.global	FlashProgPages
+	.type	FlashProgPages, %function
+FlashProgPages:
+.LFB262:
+	.loc 1 74 0
+	.cfi_startproc
+.LVL403:
+	stp	x29, x30, [sp, -144]!
+	.cfi_def_cfa_offset 144
+	.cfi_offset 29, -144
+	.cfi_offset 30, -136
+	ubfiz	x1, x1, 5, 32
+.LVL404:
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -96
+	.cfi_offset 24, -88
+	.loc 1 76 0
+	adrp	x23, g_nand_phy_info
+	.loc 1 74 0
+	stp	x25, x26, [sp, 64]
+	.cfi_offset 25, -80
+	.cfi_offset 26, -72
+	mov	w26, w2
+	.loc 1 76 0
+	add	x2, x23, :lo12:g_nand_phy_info
+.LVL405:
+	.loc 1 74 0
+	stp	x19, x20, [sp, 16]
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 19, -128
+	.cfi_offset 20, -120
+	.cfi_offset 21, -112
+	.cfi_offset 22, -104
+	.loc 1 81 0
+	adrp	x22, .LANCHOR1
+	.loc 1 74 0
+	stp	x27, x28, [sp, 80]
+	.cfi_offset 27, -64
+	.cfi_offset 28, -56
+	.loc 1 81 0
+	add	x22, x22, :lo12:.LANCHOR1
+	adrp	x25, .LC1
+	.loc 1 74 0
+	mov	w27, w3
+	.loc 1 76 0
+	ldrh	w28, [x2, 12]
+.LVL406:
+	mov	x20, x0
+	add	x24, x0, x1
+.LVL407:
+	.loc 1 80 0
+	mov	x19, x0
+	.loc 1 81 0
+	add	x22, x22, 208
+	add	x25, x25, :lo12:.LC1
+.LVL408:
+.L357:
+	.loc 1 80 0 discriminator 1
+	cmp	x19, x24
+	bne	.L365
+	.loc 1 101 0
+	cbnz	w27, .L366
+.L384:
+	.loc 1 131 0
+	ldp	x19, x20, [sp, 16]
+	mov	w0, 0
+	ldp	x21, x22, [sp, 32]
+	ldp	x23, x24, [sp, 48]
+	ldp	x25, x26, [sp, 64]
+.LVL409:
+	ldp	x27, x28, [sp, 80]
+.LVL410:
+	ldp	x29, x30, [sp], 144
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 28
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL411:
+.L365:
+	.cfi_restore_state
+	.loc 1 81 0
+	ldr	x0, [x19, 8]
+	cbz	x0, .L358
+	.loc 1 81 0 is_stmt 0 discriminator 2
+	ldr	x0, [x19, 16]
+	cbnz	x0, .L359
+.L358:
+	.loc 1 81 0 discriminator 3
+	mov	w2, 81
+	mov	x1, x22
+	mov	x0, x25
+	bl	printk
+.LVL412:
+.L359:
+	.loc 1 82 0 is_stmt 1
+	ldr	w0, [x19, 4]
+	add	x2, x29, 104
+	add	x1, x29, 108
+	.loc 1 83 0
+	adrp	x21, g_nand_ops
+	.loc 1 82 0
+	bl	l2p_addr_tran.isra.0
+.LVL413:
+	.loc 1 83 0
+	add	x0, x21, :lo12:g_nand_ops
+	ldr	w1, [x29, 108]
+	ldp	x2, x3, [x19, 8]
+	ldr	x4, [x0, 16]
+	ldrb	w0, [x29, 104]
+	blr	x4
+.LVL414:
+	.loc 1 88 0
+	cbnz	w0, .L360
+	.loc 1 87 0
+	str	wzr, [x19]
+.L361:
+	.loc 1 91 0
+	add	x0, x23, :lo12:g_nand_phy_info
+	ldrh	w0, [x0, 14]
+	cmp	w0, 4
+	bne	.L363
+	.loc 1 92 0
+	add	x21, x21, :lo12:g_nand_ops
+	ldrb	w0, [x29, 104]
+	ldp	x2, x3, [x19, 8]
+	ldr	x4, [x21, 16]
+	ldr	w1, [x29, 108]
+	add	x3, x3, 8
+	add	x2, x2, 2048
+	add	w1, w28, w1
+	blr	x4
+.LVL415:
+	.loc 1 96 0
+	cbz	w0, .L363
+	.loc 1 97 0
+	mov	w0, -1
+	str	w0, [x19]
+.L363:
+	add	x19, x19, 32
+	b	.L357
+.L360:
+	.loc 1 89 0
+	mov	w0, -1
+	str	w0, [x19]
+	b	.L361
+.L370:
+.LBB213:
+	.loc 1 107 0
+	str	wzr, [x21]
+	.loc 1 112 0
+	mov	w2, w26
+	.loc 1 106 0
+	str	wzr, [x23]
+	.loc 1 112 0
+	mov	w1, 1
+	.loc 1 110 0
+	stp	x23, x21, [x29, 120]
+	.loc 1 108 0
+	ldr	w0, [x20, 4]
+	str	w0, [x29, 116]
+	.loc 1 112 0
+	add	x0, x29, 112
+	bl	FlashReadPages
+.LVL416:
+	.loc 1 113 0
+	ldr	w25, [x29, 112]
+	cmn	w25, #1
+	bne	.L367
+	.loc 1 114 0
+	ldr	w1, [x20, 4]
+	adrp	x0, .LC75
+	add	x0, x0, :lo12:.LC75
+	bl	printk
+.LVL417:
+	.loc 1 115 0
+	str	w25, [x20]
+.L367:
+	.loc 1 117 0
+	ldr	x0, [x20, 16]
+	cbz	x0, .L368
+	.loc 1 118 0
+	ldr	w2, [x0]
+	add	x0, x24, :lo12:.LANCHOR0
+	ldr	w3, [x0, 3400]
+	cmp	w2, w3
+	beq	.L368
+	.loc 1 119 0
+	ldr	w1, [x20, 4]
+	adrp	x0, .LC76
+	add	x0, x0, :lo12:.LC76
+	bl	printk
+.LVL418:
+	.loc 1 120 0
+	mov	w0, -1
+	str	w0, [x20]
+.L368:
+	.loc 1 123 0
+	ldr	x0, [x20, 8]
+	cbz	x0, .L369
+	.loc 1 124 0
+	ldr	w3, [x22, #:lo12:check_buf]
+	ldr	w2, [x0]
+	cmp	w2, w3
+	beq	.L369
+	.loc 1 125 0
+	ldr	w1, [x20, 4]
+	adrp	x0, .LC77
+	add	x0, x0, :lo12:.LC77
+	bl	printk
+.LVL419:
+	.loc 1 126 0
+	mov	w0, -1
+	str	w0, [x20]
+.L369:
+	add	x20, x20, 32
+.L385:
+.LBE213:
+	.loc 1 103 0 discriminator 1
+	cmp	x20, x19
+	bne	.L370
+	b	.L384
+.L366:
+.LBB214:
+	.loc 1 107 0 discriminator 1
+	adrp	x24, .LANCHOR0
+	add	x21, x24, :lo12:.LANCHOR0
+	.loc 1 106 0 discriminator 1
+	adrp	x22, check_buf
+	.loc 1 107 0 discriminator 1
+	add	x21, x21, 3400
+	.loc 1 106 0 discriminator 1
+	add	x23, x22, :lo12:check_buf
+	b	.L385
+.LBE214:
+	.cfi_endproc
+.LFE262:
+	.size	FlashProgPages, .-FlashProgPages
+	.align	2
+	.global	FlashEraseBlocks
+	.type	FlashEraseBlocks, %function
+FlashEraseBlocks:
+.LFB263:
+	.loc 1 134 0
+	.cfi_startproc
+.LVL420:
+	stp	x29, x30, [sp, -80]!
+	.cfi_def_cfa_offset 80
+	.cfi_offset 29, -80
+	.cfi_offset 30, -72
+	.loc 1 137 0
+	adrp	x1, g_nand_phy_info
+.LVL421:
+	add	x3, x1, :lo12:g_nand_phy_info
+	ubfiz	x2, x2, 5, 32
+.LVL422:
+	.loc 1 134 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	add	x2, x2, 4
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 19, -64
+	.cfi_offset 20, -56
+	.cfi_offset 21, -48
+	.cfi_offset 22, -40
+	add	x19, x0, 4
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -32
+	.cfi_offset 24, -24
+	.loc 1 142 0
+	adrp	x21, g_nand_ops
+	add	x22, x0, x2
+	mov	x20, x1
+	.loc 1 137 0
+	ldrh	w23, [x3, 12]
+.LVL423:
+	.loc 1 147 0
+	add	x24, x21, :lo12:g_nand_ops
+.LVL424:
+.L388:
+	.loc 1 140 0 discriminator 1
+	cmp	x19, x22
+	bne	.L394
+	.loc 1 153 0
+	ldp	x19, x20, [sp, 16]
+	mov	w0, 0
+.LVL425:
+	ldp	x21, x22, [sp, 32]
+	ldp	x23, x24, [sp, 48]
+.LVL426:
+	ldp	x29, x30, [sp], 80
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL427:
+.L394:
+	.cfi_restore_state
+	.loc 1 141 0
+	ldr	w0, [x19]
+.LVL428:
+	add	x2, x29, 72
+	add	x1, x29, 76
+	bl	l2p_addr_tran.isra.0
+.LVL429:
+	.loc 1 142 0
+	add	x0, x21, :lo12:g_nand_ops
+	ldr	w1, [x29, 76]
+	ldr	x2, [x0, 8]
+	ldrb	w0, [x29, 72]
+	blr	x2
+.LVL430:
+	.loc 1 144 0
+	cbnz	w0, .L389
+	.loc 1 143 0
+	str	wzr, [x19, -4]
+.L390:
+	.loc 1 146 0
+	add	x0, x20, :lo12:g_nand_phy_info
+	ldrh	w0, [x0, 14]
+	cmp	w0, 4
+	bne	.L392
+	.loc 1 147 0
+	ldrb	w0, [x29, 72]
+	ldr	x2, [x24, 8]
+	ldr	w1, [x29, 76]
+	add	w1, w23, w1
+	blr	x2
+.LVL431:
+	.loc 1 148 0
+	cbz	w0, .L392
+	.loc 1 149 0
+	mov	w0, -1
+	str	w0, [x19, -4]
+.L392:
+	add	x19, x19, 32
+	b	.L388
+.L389:
+	.loc 1 145 0
+	mov	w0, -1
+	str	w0, [x19, -4]
+	b	.L390
+	.cfi_endproc
+.LFE263:
+	.size	FlashEraseBlocks, .-FlashEraseBlocks
+	.align	2
+	.global	FtlFreeSysBlkQueueIn
+	.type	FtlFreeSysBlkQueueIn, %function
+FtlFreeSysBlkQueueIn:
+.LFB179:
+	.loc 2 98 0
+	.cfi_startproc
+.LVL432:
+	stp	x29, x30, [sp, -48]!
+	.cfi_def_cfa_offset 48
+	.cfi_offset 29, -48
+	.cfi_offset 30, -40
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 19, -32
+	.cfi_offset 20, -24
+	.cfi_offset 21, -16
+	.cfi_offset 22, -8
+	.loc 2 98 0
+	and	w22, w0, 65535
+.LVL433:
+.LBB215:
+.LBB216:
+	.loc 2 94 0
+	adrp	x0, .LANCHOR0
+	add	x20, x0, :lo12:.LANCHOR0
+.LBE216:
+.LBE215:
+	.loc 2 99 0
+	ldrh	w2, [x20, 238]
+	cmp	w2, 1024
+	beq	.L399
+	and	w1, w1, 65535
+	mov	x19, x0
+.LBB217:
+	.loc 2 101 0
+	cbz	w1, .L401
+.LBB218:
+	.loc 2 102 0
+	mov	w0, w22
+	bl	P2V_block_in_plane
+.LVL434:
+	and	w21, w0, 65535
+.LVL435:
+	.loc 2 103 0
+	ldr	x0, [x20, 3912]
+	lsl	w1, w22, 10
+	.loc 2 104 0
+	mov	w2, 1
+	.loc 2 103 0
+	str	w1, [x0, 4]
+	.loc 2 104 0
+	mov	w1, w2
+	ldr	x0, [x20, 3912]
+	bl	FlashEraseBlocks
+.LVL436:
+	.loc 2 105 0
+	ldr	x2, [x20, 2296]
+	ubfiz	x0, x21, 1, 16
+	ldrh	w1, [x2, x0]
+	add	w1, w1, 1
+	strh	w1, [x2, x0]
+	.loc 2 106 0
+	ldr	w0, [x20, 2576]
+	add	w0, w0, 1
+	str	w0, [x20, 2576]
+.LVL437:
+.L401:
+.LBE218:
+	.loc 2 108 0
+	add	x0, x19, :lo12:.LANCHOR0
+	add	x0, x0, 232
+	ldrh	w1, [x0, 6]
+.LVL438:
+	add	w1, w1, 1
+	strh	w1, [x0, 6]
+	.loc 2 109 0
+	ldrh	w1, [x0, 4]
+	add	x2, x0, x1, sxtw 1
+	.loc 2 110 0
+	add	w1, w1, 1
+	and	w1, w1, 1023
+	strh	w1, [x0, 4]
+	.loc 2 109 0
+	strh	w22, [x2, 8]
+.LVL439:
+.L399:
+.LBE217:
+	.loc 2 113 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+.LVL440:
+	ldp	x29, x30, [sp], 48
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE179:
+	.size	FtlFreeSysBlkQueueIn, .-FtlFreeSysBlkQueueIn
+	.align	2
+	.global	FtlLowFormatEraseBlock
+	.type	FtlLowFormatEraseBlock, %function
+FtlLowFormatEraseBlock:
+.LFB148:
+	.loc 3 528 0
+	.cfi_startproc
+.LVL441:
+	stp	x29, x30, [sp, -128]!
+	.cfi_def_cfa_offset 128
+	.cfi_offset 29, -128
+	.cfi_offset 30, -120
+	.loc 3 539 0
+	mov	w10, 0
+	.loc 3 551 0
+	mov	w9, 4
+	.loc 3 528 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -112
+	.cfi_offset 20, -104
+	.loc 3 538 0
+	adrp	x20, .LANCHOR0
+	add	x5, x20, :lo12:.LANCHOR0
+	.loc 3 528 0
+	stp	x23, x24, [sp, 48]
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 23, -80
+	.cfi_offset 24, -72
+	.cfi_offset 21, -96
+	.cfi_offset 22, -88
+	and	w23, w1, 255
+.LVL442:
+	stp	x25, x26, [sp, 64]
+	.loc 3 541 0
+	add	x8, x5, 40
+	.loc 3 528 0
+	stp	x27, x28, [sp, 80]
+	.cfi_offset 25, -64
+	.cfi_offset 26, -56
+	.cfi_offset 27, -48
+	.cfi_offset 28, -40
+	.loc 3 528 0
+	and	w24, w0, 65535
+.LVL443:
+	.loc 3 536 0
+	mov	w21, 0
+	.loc 3 537 0
+	mov	w19, 0
+.LVL444:
+	.loc 3 538 0
+	str	w24, [x5, 3920]
+.L410:
+	.loc 3 539 0 discriminator 1
+	ldrh	w0, [x5, 12]
+	cmp	w0, w10
+	bhi	.L414
+	.loc 3 559 0
+	cbz	w21, .L409
+	.loc 3 562 0
+	ldr	x0, [x5, 3912]
+	mov	w2, w21
+	mov	w1, 0
+	ubfiz	x21, x21, 5, 16
+	mov	x22, 0
+	.loc 3 564 0
+	add	x25, x20, :lo12:.LANCHOR0
+	.loc 3 562 0
+	bl	FlashEraseBlocks
+.LVL445:
+.L418:
+	.loc 3 564 0
+	ldr	x0, [x25, 3912]
+	add	x1, x0, x22
+	ldr	w0, [x0, x22]
+	cmn	w0, #1
+	bne	.L417
+	.loc 3 566 0
+	ldr	w0, [x1, 4]
+	.loc 3 565 0
+	add	w19, w19, 1
+.LVL446:
+	and	w19, w19, 65535
+.LVL447:
+	.loc 3 566 0
+	lsr	w0, w0, 10
+	bl	FtlBbmMapBadBlock
+.LVL448:
+.L417:
+	add	x22, x22, 32
+	.loc 3 563 0 discriminator 2
+	cmp	x22, x21
+	bne	.L418
+	.loc 3 571 0
+	cbz	w23, .L431
+	.loc 3 573 0
+	add	x0, x20, :lo12:.LANCHOR0
+	.loc 3 572 0
+	mov	w25, 1
+.LVL449:
+	.loc 3 573 0
+	ldrh	w26, [x0, 84]
+.LVL450:
+	.loc 3 574 0
+	lsr	w0, w26, 2
+.LVL451:
+	str	w0, [x29, 124]
+.L419:
+	.loc 3 578 0
+	add	x27, x20, :lo12:.LANCHOR0
+	mov	w22, 0
+.LVL452:
+	.loc 3 580 0
+	add	x0, x27, 40
+.LVL453:
+	str	x0, [x29, 112]
+.LVL454:
+.L427:
+	.loc 3 578 0
+	mov	w5, 0
+	.loc 3 577 0
+	mov	w21, 0
+.L420:
+	.loc 3 578 0 discriminator 1
+	ldrh	w0, [x27, 12]
+.LVL455:
+	cmp	w0, w5
+	bhi	.L423
+	.loc 3 593 0
+	cbz	w21, .L409
+	.loc 3 596 0
+	ldr	x0, [x27, 3912]
+	mov	w1, w21
+	mov	w3, 1
+	mov	w2, w25
+	mov	x28, 0
+	bl	FlashProgPages
+.LVL456:
+	ubfiz	x1, x21, 5, 16
+.L426:
+	.loc 3 598 0
+	ldr	x0, [x27, 3912]
+	add	x3, x0, x28
+	ldr	w0, [x0, x28]
+	cbz	w0, .L425
+	.loc 3 600 0
+	ldr	w0, [x3, 4]
+	.loc 3 599 0
+	add	w19, w19, 1
+.LVL457:
+	str	x1, [x29, 104]
+	and	w19, w19, 65535
+.LVL458:
+	.loc 3 600 0
+	lsr	w0, w0, 10
+	bl	FtlBbmMapBadBlock
+.LVL459:
+	ldr	x1, [x29, 104]
+.L425:
+	add	x28, x28, 32
+	.loc 3 597 0 discriminator 2
+	cmp	x1, x28
+	bne	.L426
+	.loc 3 604 0
+	ldr	w0, [x29, 124]
+.LVL460:
+	add	w22, w22, w0
+.LVL461:
+	and	w22, w22, 65535
+.LVL462:
+	.loc 3 605 0
+	cmp	w26, w22
+	bhi	.L427
+	.loc 3 611 0
+	add	x26, x20, :lo12:.LANCHOR0
+.LVL463:
+	mov	x22, 0
+.LVL464:
+.L429:
+	cbz	w23, .L428
+	.loc 3 611 0 is_stmt 0 discriminator 1
+	ldr	x0, [x26, 3912]
+.LVL465:
+	add	x1, x0, x22
+	ldr	w0, [x0, x22]
+	cbnz	w0, .L428
+	.loc 3 612 0 is_stmt 1
+	ldr	w0, [x1, 4]
+	mov	w1, 1
+	lsr	w0, w0, 10
+	bl	FtlFreeSysBlkQueueIn
+.LVL466:
+.L428:
+	add	x22, x22, 32
+	.loc 3 610 0 discriminator 2
+	cmp	x22, x28
+	bne	.L429
+	.loc 3 615 0
+	cmp	w24, 63
+	ccmp	w23, 0, 0, hi
+	beq	.L409
+	.loc 3 616 0
+	add	x20, x20, :lo12:.LANCHOR0
+	mov	w2, w21
+	mov	w1, w25
+	ldr	x0, [x20, 3912]
+.LVL467:
+	bl	FlashEraseBlocks
+.LVL468:
+.L409:
+	.loc 3 619 0
+	mov	w0, w19
+.LVL469:
+	ldp	x19, x20, [sp, 16]
+.LVL470:
+	ldp	x21, x22, [sp, 32]
+.LVL471:
+	ldp	x23, x24, [sp, 48]
+.LVL472:
+	ldp	x25, x26, [sp, 64]
+.LVL473:
+	ldp	x27, x28, [sp, 80]
+	ldp	x29, x30, [sp], 128
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 28
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL474:
+.L414:
+	.cfi_restore_state
+	.loc 3 540 0
+	ldr	x1, [x5, 3912]
+	ubfiz	x0, x10, 5, 16
+	str	wzr, [x1, x0]
+	.loc 3 541 0
+	mov	w1, w24
+	ldrb	w0, [x8, w10, sxtw]
+	bl	V2P_block
+.LVL475:
+	and	w6, w0, 65535
+	mov	w7, w6
+	.loc 3 543 0
+	cbz	w23, .L411
+	.loc 3 544 0
+	bl	IsBlkInVendorPart
+.LVL476:
+	cbnz	w0, .L412
+.L411:
+	.loc 3 548 0
+	mov	w0, w7
+	bl	FtlBbmIsBadBlock
+.LVL477:
+	cbnz	w0, .L413
+	.loc 3 549 0
+	ldr	x0, [x5, 3912]
+	ubfiz	x2, x21, 5, 16
+	lsl	w6, w6, 10
+	add	x0, x0, x2
+	str	w6, [x0, 4]
+	.loc 3 550 0
+	ldr	x1, [x5, 3912]
+	ldr	x0, [x5, 3928]
+	add	x1, x1, x2
+	.loc 3 551 0
+	ldr	x2, [x5, 3936]
+	.loc 3 550 0
+	str	x0, [x1, 8]
+	.loc 3 551 0
+	ldrh	w0, [x5, 92]
+	mul	w0, w0, w21
+	.loc 3 552 0
+	add	w21, w21, 1
+	and	w21, w21, 65535
+	.loc 3 551 0
+	sdiv	w0, w0, w9
+	add	x0, x2, x0, sxtw 2
+	str	x0, [x1, 16]
+.L412:
+	.loc 3 539 0 discriminator 2
+	add	w10, w10, 1
+	and	w10, w10, 65535
+	b	.L410
+.L413:
+	.loc 3 554 0
+	add	w19, w19, 1
+.LVL478:
+	and	w19, w19, 65535
+.LVL479:
+	b	.L412
+.L431:
+	.loc 3 533 0
+	mov	w0, 6
+.LVL480:
+	.loc 3 534 0
+	mov	w25, 0
+.LVL481:
+	.loc 3 531 0
+	mov	w26, 1
+.LVL482:
+	.loc 3 533 0
+	str	w0, [x29, 124]
+	b	.L419
+.LVL483:
+.L423:
+	.loc 3 579 0
+	ldr	x1, [x27, 3912]
+	ubfiz	x0, x5, 5, 16
+	str	wzr, [x1, x0]
+	.loc 3 580 0
+	mov	w1, w24
+	ldr	x0, [x29, 112]
+	ldrb	w0, [x0, w5, sxtw]
+	bl	V2P_block
+.LVL484:
+	and	w6, w0, 65535
+	mov	w7, w6
+	.loc 3 581 0
+	cbz	w23, .L421
+	.loc 3 582 0
+	bl	IsBlkInVendorPart
+.LVL485:
+	cbnz	w0, .L422
+.L421:
+	.loc 3 585 0
+	mov	w0, w7
+	bl	FtlBbmIsBadBlock
+.LVL486:
+	cbnz	w0, .L422
+	.loc 3 586 0
+	ldr	x0, [x27, 3912]
+	ubfiz	x2, x21, 5, 16
+	add	w6, w22, w6, lsl 10
+	add	x0, x0, x2
+	str	w6, [x0, 4]
+	.loc 3 587 0
+	ldr	x1, [x27, 3912]
+	ldr	x0, [x27, 3944]
+	add	x1, x1, x2
+	.loc 3 588 0
+	mov	w2, 4
+	.loc 3 587 0
+	str	x0, [x1, 8]
+	.loc 3 588 0
+	ldrh	w0, [x27, 92]
+	mul	w0, w0, w21
+	.loc 3 589 0
+	add	w21, w21, 1
+	and	w21, w21, 65535
+	.loc 3 588 0
+	sdiv	w0, w0, w2
+	ldr	x2, [x27, 3928]
+	add	x0, x2, x0, sxtw 2
+	str	x0, [x1, 16]
+.L422:
+	.loc 3 578 0 discriminator 2
+	add	w5, w5, 1
+	and	w5, w5, 65535
+	b	.L420
+	.cfi_endproc
+.LFE148:
+	.size	FtlLowFormatEraseBlock, .-FtlLowFormatEraseBlock
+	.align	2
+	.global	ftl_memset
+	.type	ftl_memset, %function
+ftl_memset:
+.LFB266:
+	.loc 1 201 0
+	.cfi_startproc
+.LVL487:
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	.loc 1 202 0
+	uxtw	x2, w2
+.LVL488:
+	.loc 1 201 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 1 202 0
+	bl	memset
+.LVL489:
+	.loc 1 203 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE266:
+	.size	ftl_memset, .-ftl_memset
+	.align	2
+	.global	FtlMemInit
+	.type	FtlMemInit, %function
+FtlMemInit:
+.LFB145:
+	.loc 3 279 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -48]!
+	.cfi_def_cfa_offset 48
+	.cfi_offset 29, -48
+	.cfi_offset 30, -40
+	.loc 3 297 0
+	mov	w0, 65535
+	.loc 3 279 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -32
+	.cfi_offset 20, -24
+	.loc 3 282 0
+	adrp	x20, .LANCHOR0
+	add	x19, x20, :lo12:.LANCHOR0
+	.loc 3 279 0
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -16
+	.cfi_offset 22, -8
+	.loc 3 287 0
+	add	x1, x19, 2304
+	.loc 3 291 0
+	add	x2, x19, 2560
+	.loc 3 305 0
+	strh	wzr, [x19, 3232]
+	.loc 3 306 0
+	strh	wzr, [x19, 3316]
+	.loc 3 287 0
+	stp	wzr, wzr, [x1, 220]
+	stp	wzr, wzr, [x1, 228]
+	.loc 3 288 0
+	str	wzr, [x19, 2540]
+	.loc 3 284 0
+	str	wzr, [x19, 2544]
+	.loc 3 291 0
+	stp	wzr, wzr, [x2, -4]
+	stp	wzr, wzr, [x2, 4]
+	.loc 3 297 0
+	str	w0, [x19, 3956]
+	.loc 3 301 0
+	mov	w0, -1
+	strh	w0, [x19, 3312]
+	.loc 3 302 0
+	strh	w0, [x19, 3314]
+	.loc 3 303 0
+	mov	w0, 32
+	.loc 3 292 0
+	str	wzr, [x19, 2576]
+	.loc 3 303 0
+	strh	w0, [x19, 3224]
+	.loc 3 304 0
+	mov	w0, 128
+	.loc 3 293 0
+	str	wzr, [x19, 2580]
+	.loc 3 304 0
+	strh	w0, [x19, 3226]
+	.loc 3 294 0
+	str	wzr, [x19, 2584]
+	.loc 3 299 0
+	str	wzr, [x19, 3228]
+	.loc 3 296 0
+	str	wzr, [x19, 3236]
+	.loc 3 300 0
+	str	wzr, [x19, 3920]
+	.loc 3 295 0
+	str	wzr, [x19, 3952]
+	.loc 3 298 0
+	str	wzr, [x19, 3960]
+	.loc 3 307 0
+	strh	wzr, [x19, 3354]
+	.loc 3 310 0
+	ldrh	w0, [x19, 86]
+	lsl	w0, w0, 1
+	bl	ftl_malloc
+.LVL490:
+	.loc 3 311 0
+	ldrh	w1, [x19, 86]
+	.loc 3 310 0
+	str	x0, [x19, 3288]
+	.loc 3 311 0
+	mov	w0, 12
+	mul	w0, w1, w0
+	bl	ftl_malloc
+.LVL491:
+	.loc 3 312 0
+	ldrh	w21, [x19, 12]
+	.loc 3 311 0
+	str	x0, [x19, 3304]
+	.loc 3 312 0
+	lsl	w22, w21, 5
+	.loc 3 313 0
+	lsl	w21, w21, 7
+	mov	w0, w21
+	bl	ftl_malloc
+.LVL492:
+	str	x0, [x19, 3968]
+	.loc 3 314 0
+	mov	w0, w22
+	bl	ftl_malloc
+.LVL493:
+	str	x0, [x19, 3976]
+	.loc 3 315 0
+	mov	w0, w21
+	bl	ftl_malloc
+.LVL494:
+	str	x0, [x19, 3984]
+	.loc 3 316 0
+	mov	w0, w22
+	bl	ftl_malloc
+.LVL495:
+	str	x0, [x19, 3912]
+	.loc 3 317 0
+	mov	w0, w22
+	bl	ftl_malloc
+.LVL496:
+	str	x0, [x19, 3272]
+	.loc 3 320 0
+	ldrh	w0, [x19, 12]
+	.loc 3 319 0
+	ldrh	w21, [x19, 90]
+	.loc 3 320 0
+	lsl	w0, w0, 1
+	add	w0, w0, 1
+	str	w0, [x19, 3280]
+	.loc 3 321 0
+	mov	w0, w21
+	bl	ftl_malloc
+.LVL497:
+	str	x0, [x19, 2288]
+	.loc 3 322 0
+	mov	w0, w21
+	bl	ftl_malloc
+.LVL498:
+	str	x0, [x19, 3992]
+	.loc 3 323 0
+	mov	w0, w21
+	bl	ftl_malloc
+.LVL499:
+	str	x0, [x19, 4000]
+	.loc 3 324 0
+	ldr	w0, [x19, 3280]
+	mul	w0, w21, w0
+	bl	ftl_malloc
+.LVL500:
+	str	x0, [x19, 3256]
+	.loc 3 325 0
+	mov	w0, w21
+	bl	ftl_malloc
+.LVL501:
+	str	x0, [x19, 3944]
+	.loc 3 326 0
+	mov	w0, w21
+	bl	ftl_malloc
+.LVL502:
+	str	x0, [x19, 3928]
+	.loc 3 327 0
+	ldr	w1, [x19, 3280]
+	mov	w0, 24
+	mul	w0, w1, w0
+	bl	ftl_malloc
+.LVL503:
+	.loc 3 329 0
+	ldrh	w21, [x19, 92]
+	.loc 3 327 0
+	str	x0, [x19, 3248]
+	.loc 3 329 0
+	ldrh	w0, [x19, 12]
+	mul	w21, w21, w0
+	.loc 3 330 0
+	mov	w0, w21
+	bl	ftl_malloc
+.LVL504:
+	str	x0, [x19, 3392]
+	.loc 3 331 0
+	lsl	w0, w21, 2
+	bl	ftl_malloc
+.LVL505:
+	str	x0, [x19, 3936]
+	.loc 3 332 0
+	ldrh	w1, [x19, 92]
+	ldr	w0, [x19, 3280]
+	mul	w0, w1, w0
+	bl	ftl_malloc
+.LVL506:
+	str	x0, [x19, 3264]
+	.loc 3 335 0
+	ldrh	w0, [x19, 22]
+	ubfiz	w0, w0, 1, 15
+	strh	w0, [x19, 4008]
+	.loc 3 336 0
+	and	w0, w0, 65534
+	bl	ftl_malloc
+.LVL507:
+	str	x0, [x19, 4016]
+	.loc 3 337 0
+	ldrh	w0, [x19, 4008]
+	add	x0, x0, 547
+	lsr	x0, x0, 9
+	strh	w0, [x19, 4008]
+	.loc 3 338 0
+	lsl	w0, w0, 9
+	bl	ftl_malloc
+.LVL508:
+	.loc 3 345 0
+	ldrh	w21, [x19, 22]
+	.loc 3 338 0
+	str	x0, [x19, 4024]
+	.loc 3 339 0
+	add	x0, x0, 32
+	str	x0, [x19, 2296]
+	.loc 3 345 0
+	lsl	w21, w21, 1
+	.loc 3 347 0
+	mov	w0, w21
+	bl	ftl_malloc
+.LVL509:
+	str	x0, [x19, 4032]
+	.loc 3 349 0
+	mov	w0, w21
+	bl	ftl_malloc
+.LVL510:
+	.loc 3 350 0
+	ldr	w21, [x19, 108]
+	.loc 3 349 0
+	str	x0, [x19, 2320]
+	.loc 3 350 0
+	lsl	w21, w21, 1
+	.loc 3 351 0
+	mov	w0, w21
+	bl	ftl_malloc
+.LVL511:
+	str	x0, [x19, 4040]
+	.loc 3 352 0
+	mov	w0, w21
+	bl	ftl_malloc
+.LVL512:
+	str	x0, [x19, 4048]
+	.loc 3 353 0
+	ldrh	w0, [x19, 22]
+	.loc 3 367 0
+	adrp	x21, .LANCHOR3
+	add	x22, x21, :lo12:.LANCHOR3
+	.loc 3 353 0
+	lsr	w0, w0, 3
+	add	w0, w0, 4
+	bl	ftl_malloc
+.LVL513:
+	str	x0, [x20, #:lo12:.LANCHOR0]
+	.loc 3 354 0
+	ldrh	w0, [x19, 100]
+	lsl	w0, w0, 1
+	bl	ftl_malloc
+.LVL514:
+	str	x0, [x19, 128]
+	.loc 3 355 0
+	ldrh	w0, [x19, 100]
+	lsl	w0, w0, 1
+	bl	ftl_malloc
+.LVL515:
+	str	x0, [x19, 4056]
+	.loc 3 356 0
+	ldrh	w0, [x19, 100]
+	lsl	w0, w0, 2
+	bl	ftl_malloc
+.LVL516:
+	str	x0, [x19, 4064]
+	.loc 3 357 0
+	ldrh	w0, [x19, 102]
+	lsl	w0, w0, 2
+	bl	ftl_malloc
+.LVL517:
+	.loc 3 358 0
+	ldrh	w2, [x19, 102]
+	mov	w1, 0
+	.loc 3 357 0
+	str	x0, [x19, 4072]
+	.loc 3 358 0
+	lsl	w2, w2, 2
+	bl	ftl_memset
+.LVL518:
+	.loc 3 360 0
+	ldrh	w0, [x19, 116]
+	.loc 3 361 0
+	lsl	w0, w0, 2
+	bl	ftl_malloc
+.LVL519:
+	str	x0, [x19, 4080]
+	.loc 3 362 0
+	ldr	w0, [x19, 108]
+	.loc 3 363 0
+	lsl	w0, w0, 2
+	bl	ftl_malloc
+.LVL520:
+	str	x0, [x19, 4088]
+	.loc 3 364 0
+	ldrh	w0, [x19, 118]
+	.loc 3 365 0
+	lsl	w0, w0, 4
+	bl	ftl_malloc
+.LVL521:
+	.loc 3 366 0
+	ldrh	w1, [x19, 118]
+	.loc 3 365 0
+	str	x0, [x19, 2504]
+	.loc 3 366 0
+	ldrh	w0, [x19, 90]
+	.loc 3 367 0
+	mul	w0, w1, w0
+	bl	ftl_malloc
+.LVL522:
+	str	x0, [x22, -256]
+	.loc 3 368 0
+	ldrh	w1, [x19, 22]
+	.loc 3 369 0
+	mov	w0, 6
+	mul	w0, w1, w0
+	bl	ftl_malloc
+.LVL523:
+	str	x0, [x19, 2304]
+	.loc 3 370 0
+	ldrh	w0, [x19, 78]
+	.loc 3 371 0
+	ldrh	w1, [x19, 34]
+	.loc 3 370 0
+	add	w0, w0, 31
+	asr	w0, w0, 5
+	strh	w0, [x22, -248]
+	.loc 3 371 0
+	mul	w0, w1, w0
+	.loc 3 372 0
+	lsl	w0, w0, 2
+	bl	ftl_malloc
+.LVL524:
+	.loc 3 374 0
+	ldrh	w4, [x22, -248]
+	add	x5, x19, 176
+	.loc 3 373 0
+	ldrh	w6, [x19, 34]
+	mov	x1, 1
+	.loc 3 372 0
+	str	x0, [x19, 168]
+	.loc 3 373 0
+	mov	w2, w4
+	mov	x0, x20
+.L455:
+.LVL525:
+	.loc 3 373 0 is_stmt 0 discriminator 1
+	cmp	w1, w6
+	bcc	.L456
+	mov	w2, 8
+	.loc 3 379 0 is_stmt 1
+	add	x4, x0, :lo12:.LANCHOR0
+	sub	w2, w2, w1
+	add	x4, x4, 136
+	add	x2, x2, 1
+	.loc 3 373 0
+	mov	x3, 0
+.L457:
+	add	x3, x3, 1
+	.loc 3 377 0 discriminator 1
+	cmp	x3, x2
+	bne	.L458
+	.loc 3 383 0
+	add	x1, x0, :lo12:.LANCHOR0
+.LVL526:
+	ldr	x2, [x1, 4040]
+	cbnz	x2, .L459
+.L461:
+	.loc 3 385 0
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	add	x1, x1, 224
+	adrp	x0, .LC78
+	add	x0, x0, :lo12:.LC78
+	bl	printk
+.LVL527:
+	.loc 3 386 0
+	mov	w0, -1
+.L454:
+	.loc 3 484 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+	ldp	x29, x30, [sp], 48
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL528:
+.L456:
+	.cfi_restore_state
+	.loc 3 374 0 discriminator 3
+	ldr	x3, [x19, 168]
+	.loc 3 373 0 discriminator 3
+	add	w1, w1, 1
+.LVL529:
+	.loc 3 374 0 discriminator 3
+	add	x3, x3, x2, uxtw 2
+	add	w2, w2, w4
+	str	x3, [x5], 8
+	b	.L455
+.LVL530:
+.L458:
+	.loc 3 379 0 discriminator 2
+	add	x5, x1, x3
+	add	x5, x4, x5, lsl 3
+	str	xzr, [x5, 24]
+	b	.L457
+.LVL531:
+.L459:
+	.loc 3 388 0
+	ldr	x2, [x1, 4048]
+	cbz	x2, .L461
+	.loc 3 393 0
+	ldr	x2, [x1, 4080]
+	cbz	x2, .L461
+	.loc 3 398 0
+	ldr	x2, [x1, 4088]
+	cbz	x2, .L461
+	.loc 3 404 0
+	ldr	x2, [x1, 2504]
+	cbz	x2, .L461
+	.loc 3 409 0
+	add	x21, x21, :lo12:.LANCHOR3
+	ldr	x2, [x21, -256]
+	cbz	x2, .L461
+	.loc 3 414 0
+	ldr	x2, [x1, 2304]
+	cbz	x2, .L461
+	.loc 3 419 0
+	ldr	x2, [x1, 168]
+	cbz	x2, .L461
+	.loc 3 425 0
+	ldr	x1, [x1, 2320]
+	cbz	x1, .L461
+	.loc 3 430 0
+	add	x1, x0, :lo12:.LANCHOR0
+	ldr	x2, [x1, 3288]
+	cbz	x2, .L461
+	.loc 3 430 0 is_stmt 0 discriminator 1
+	ldr	x2, [x1, 3304]
+	cbz	x2, .L461
+	.loc 3 435 0 is_stmt 1
+	ldr	x2, [x1, 3968]
+	cbz	x2, .L461
+	.loc 3 435 0 is_stmt 0 discriminator 1
+	ldr	x2, [x1, 3984]
+	cbz	x2, .L461
+	.loc 3 435 0 discriminator 2
+	ldr	x2, [x1, 3912]
+	cbz	x2, .L461
+	.loc 3 435 0 discriminator 3
+	ldr	x2, [x1, 3272]
+	cbz	x2, .L461
+	.loc 3 435 0 discriminator 4
+	ldr	x2, [x1, 3976]
+	cbz	x2, .L461
+	.loc 3 440 0 is_stmt 1
+	ldr	x2, [x1, 2288]
+	cbz	x2, .L461
+	.loc 3 440 0 is_stmt 0 discriminator 1
+	ldr	x2, [x1, 3992]
+	cbz	x2, .L461
+	.loc 3 440 0 discriminator 2
+	ldr	x1, [x1, 4000]
+	cbz	x1, .L461
+	.loc 3 441 0 is_stmt 1 discriminator 3
+	add	x0, x0, :lo12:.LANCHOR0
+	.loc 3 440 0 discriminator 3
+	ldr	x1, [x0, 3256]
+	cbz	x1, .L461
+	.loc 3 441 0
+	ldr	x1, [x0, 3944]
+	cbz	x1, .L461
+	.loc 3 441 0 is_stmt 0 discriminator 1
+	ldr	x1, [x0, 3928]
+	cbz	x1, .L461
+	.loc 3 441 0 discriminator 2
+	ldr	x1, [x0, 3248]
+	cbz	x1, .L461
+	.loc 3 446 0 is_stmt 1
+	ldr	x1, [x0, 3392]
+	cbz	x1, .L461
+	.loc 3 446 0 is_stmt 0 discriminator 1
+	ldr	x1, [x0, 3936]
+	cbz	x1, .L461
+	.loc 3 446 0 discriminator 2
+	ldr	x1, [x0, 3264]
+	cbz	x1, .L461
+	.loc 3 452 0 is_stmt 1
+	ldr	x1, [x0, 2296]
+	cbz	x1, .L461
+	.loc 3 452 0 is_stmt 0 discriminator 1
+	ldr	x1, [x0, 4016]
+	cbz	x1, .L461
+	.loc 3 458 0 is_stmt 1
+	ldr	x0, [x0, 128]
+	cbz	x0, .L461
+	.loc 3 464 0
+	adrp	x0, .LANCHOR0
+	add	x0, x0, :lo12:.LANCHOR0
+	ldr	x1, [x0, 4056]
+	cbz	x1, .L461
+	.loc 3 470 0
+	ldr	x1, [x0, 4064]
+	cbz	x1, .L461
+	.loc 3 476 0
+	ldr	x0, [x0, 4072]
+	cbz	x0, .L461
+	.loc 3 483 0
+	mov	w0, 0
+	b	.L454
+	.cfi_endproc
+.LFE145:
+	.size	FtlMemInit, .-FtlMemInit
+	.align	2
+	.global	FtlBbt2Bitmap
+	.type	FtlBbt2Bitmap, %function
+FtlBbt2Bitmap:
+.LFB164:
+	.loc 4 66 0
+	.cfi_startproc
+.LVL532:
+	stp	x29, x30, [sp, -64]!
+	.cfi_def_cfa_offset 64
+	.cfi_offset 29, -64
+	.cfi_offset 30, -56
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -32
+	.cfi_offset 22, -24
+	mov	x22, x0
+	.loc 4 69 0
+	adrp	x0, .LANCHOR3-248
+.LVL533:
+	.loc 4 66 0
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -48
+	.cfi_offset 20, -40
+	.loc 4 74 0
+	adrp	x20, .LANCHOR1
+	add	x20, x20, :lo12:.LANCHOR1
+	.loc 4 69 0
+	ldrh	w2, [x0, #:lo12:.LANCHOR3-248]
+	.loc 4 74 0
+	add	x20, x20, 240
+	.loc 4 66 0
+	str	x23, [sp, 48]
+	.cfi_offset 23, -16
+	.loc 4 74 0
+	adrp	x23, .LANCHOR0
+	add	x23, x23, :lo12:.LANCHOR0
+	.loc 4 69 0
+	mov	x19, 0
+	.loc 4 66 0
+	mov	x21, x1
+	.loc 4 69 0
+	lsl	w2, w2, 2
+	mov	w1, 0
+.LVL534:
+	mov	x0, x21
+	bl	ftl_memset
+.LVL535:
+.L559:
+	.loc 4 72 0
+	ldrh	w0, [x22, x19]
+	mov	w1, 65535
+	cmp	w0, w1
+	beq	.L556
+	.loc 4 74 0
+	ldrh	w1, [x23, 78]
+	cmp	w1, w0
+	bhi	.L558
+	.loc 4 74 0 is_stmt 0 discriminator 1
+	adrp	x0, .LC1
+	mov	w2, 74
+	mov	x1, x20
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL536:
+.L558:
+	.loc 4 75 0 is_stmt 1 discriminator 2
+	ldrh	w2, [x22, x19]
+	mov	w1, 1
+	add	x19, x19, 2
+	.loc 4 70 0 discriminator 2
+	cmp	x19, 1024
+	.loc 4 75 0 discriminator 2
+	ubfx	x0, x2, 5, 11
+	lsl	w2, w1, w2
+	lsl	x0, x0, 2
+	ldr	w1, [x21, x0]
+	orr	w1, w1, w2
+	str	w1, [x21, x0]
+	.loc 4 70 0 discriminator 2
+	bne	.L559
+.L556:
+	.loc 4 77 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+.LVL537:
+	ldr	x23, [sp, 48]
+	ldp	x29, x30, [sp], 64
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 23
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE164:
+	.size	FtlBbt2Bitmap, .-FtlBbt2Bitmap
+	.align	2
+	.global	FtlBbtMemInit
+	.type	FtlBbtMemInit, %function
+FtlBbtMemInit:
+.LFB166:
+	.loc 4 149 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	.loc 4 150 0
+	adrp	x0, .LANCHOR0
+	add	x0, x0, :lo12:.LANCHOR0
+	mov	w1, -1
+	.loc 4 149 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 4 152 0
+	mov	w2, 16
+	add	x0, x0, 148
+	.loc 4 150 0
+	strh	w1, [x0, -12]
+	.loc 4 152 0
+	mov	w1, 255
+	.loc 4 151 0
+	strh	wzr, [x0, -6]
+	.loc 4 152 0
+	bl	ftl_memset
+.LVL538:
+	.loc 4 153 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE166:
+	.size	FtlBbtMemInit, .-FtlBbtMemInit
+	.align	2
+	.global	FtlFreeSysBlkQueueInit
+	.type	FtlFreeSysBlkQueueInit, %function
+FtlFreeSysBlkQueueInit:
+.LFB176:
+	.loc 2 76 0
+	.cfi_startproc
+.LVL539:
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	.loc 2 79 0
+	adrp	x3, .LANCHOR0
+	add	x3, x3, :lo12:.LANCHOR0
+	.loc 2 83 0
+	mov	w2, 2048
+	.loc 2 76 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 2 83 0
+	mov	w1, 0
+	.loc 2 82 0
+	strh	w0, [x3, 232]
+	.loc 2 83 0
+	add	x0, x3, 240
+.LVL540:
+	.loc 2 79 0
+	strh	wzr, [x3, 234]
+	.loc 2 80 0
+	strh	wzr, [x3, 236]
+	.loc 2 81 0
+	strh	wzr, [x3, 238]
+	.loc 2 83 0
+	bl	ftl_memset
+.LVL541:
+	.loc 2 85 0
+	mov	w0, 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE176:
+	.size	FtlFreeSysBlkQueueInit, .-FtlFreeSysBlkQueueInit
+	.align	2
+	.global	load_l2p_region
+	.type	load_l2p_region, %function
+load_l2p_region:
+.LFB192:
+	.loc 2 442 0
+	.cfi_startproc
+.LVL542:
+	stp	x29, x30, [sp, -80]!
+	.cfi_def_cfa_offset 80
+	.cfi_offset 29, -80
+	.cfi_offset 30, -72
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -48
+	.cfi_offset 22, -40
+	.loc 2 446 0
+	adrp	x21, .LANCHOR0
+	.loc 2 442 0
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -32
+	.cfi_offset 24, -24
+	and	w23, w0, 65535
+.LVL543:
+	.loc 2 446 0
+	add	x0, x21, :lo12:.LANCHOR0
+	.loc 2 442 0
+	stp	x19, x20, [sp, 16]
+	str	x25, [sp, 64]
+	.cfi_offset 19, -64
+	.cfi_offset 20, -56
+	.cfi_offset 25, -16
+	.loc 2 442 0
+	and	x19, x1, 65535
+	.loc 2 446 0
+	ldrh	w0, [x0, 116]
+	cmp	w0, w23
+	bcs	.L568
+	.loc 2 446 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+.LVL544:
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 446
+	add	x1, x1, 256
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL545:
+.L568:
+	.loc 2 447 0 is_stmt 1
+	add	x20, x21, :lo12:.LANCHOR0
+	ubfiz	x0, x23, 2, 16
+	ldr	x1, [x20, 4080]
+.LVL546:
+	ldr	w24, [x1, x0]
+.LVL547:
+	.loc 2 449 0
+	cbnz	w24, .L569
+	.loc 2 450 0
+	ldr	x0, [x20, 2504]
+.LVL548:
+	lsl	x19, x19, 4
+.LVL549:
+	ldrh	w2, [x20, 90]
+	mov	w1, 255
+	add	x0, x0, x19
+	ldr	x0, [x0, 8]
+	bl	ftl_memset
+.LVL550:
+	.loc 2 451 0
+	ldr	x0, [x20, 2504]
+	strh	w23, [x0, x19]
+	.loc 2 452 0
+	ldr	x0, [x20, 2504]
+	add	x19, x0, x19
+	str	wzr, [x19, 4]
+.LVL551:
+.L570:
+	.loc 2 473 0
+	mov	w0, 0
+	ldr	x25, [sp, 64]
+.LVL552:
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+	ldp	x23, x24, [sp, 48]
+.LVL553:
+	ldp	x29, x30, [sp], 80
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 25
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL554:
+.L569:
+	.cfi_restore_state
+	.loc 2 456 0
+	ldr	x0, [x20, 2504]
+.LVL555:
+	lsl	x19, x19, 4
+.LVL556:
+	.loc 2 455 0
+	add	x22, x20, 3360
+	.loc 2 458 0
+	mov	w2, 1
+	.loc 2 456 0
+	add	x0, x0, x19
+	.loc 2 458 0
+	mov	w1, w2
+	.loc 2 455 0
+	str	w24, [x20, 3364]
+	.loc 2 456 0
+	ldr	x0, [x0, 8]
+	str	x0, [x20, 3368]
+	.loc 2 457 0
+	ldr	x0, [x20, 3392]
+	str	x0, [x20, 3376]
+	.loc 2 458 0
+	mov	x0, x22
+	bl	FlashReadPages
+.LVL557:
+	.loc 2 459 0
+	ldr	x25, [x20, 3376]
+.LVL558:
+	.loc 2 461 0
+	ldrh	w0, [x25, 8]
+	cmp	w0, w23
+	beq	.L571
+	.loc 2 462 0
+	mov	w2, w24
+	mov	w1, w23
+	adrp	x0, .LC79
+	add	x0, x0, :lo12:.LC79
+	bl	printk
+.LVL559:
+	.loc 2 463 0
+	ldr	x1, [x20, 3376]
+	mov	w3, 4
+	adrp	x0, .LC80
+	mov	w2, w3
+	add	x0, x0, :lo12:.LC80
+	bl	rknand_print_hex
+.LVL560:
+	.loc 2 464 0
+	ldrh	w3, [x20, 116]
+	adrp	x0, .LC81
+	ldr	x1, [x20, 4080]
+	mov	w2, 4
+	add	x0, x0, :lo12:.LC81
+	bl	rknand_print_hex
+.LVL561:
+.L571:
+	.loc 2 467 0
+	ldrh	w0, [x25, 8]
+	cmp	w0, w23
+	beq	.L572
+	.loc 2 467 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 467
+	add	x1, x1, 256
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL562:
+.L572:
+	.loc 2 470 0 is_stmt 1
+	add	x21, x21, :lo12:.LANCHOR0
+	ldr	x0, [x21, 2504]
+	add	x0, x0, x19
+	str	wzr, [x0, 4]
+	.loc 2 471 0
+	ldr	x0, [x21, 2504]
+	strh	w23, [x0, x19]
+	.loc 2 472 0
+	b	.L570
+	.cfi_endproc
+.LFE192:
+	.size	load_l2p_region, .-load_l2p_region
+	.align	2
+	.global	ftl_free_no_use_map_blk
+	.type	ftl_free_no_use_map_blk, %function
+ftl_free_no_use_map_blk:
+.LFB193:
+	.loc 2 476 0
+	.cfi_startproc
+.LVL563:
+	stp	x29, x30, [sp, -80]!
+	.cfi_def_cfa_offset 80
+	.cfi_offset 29, -80
+	.cfi_offset 30, -72
+	.loc 2 485 0
+	mov	w1, 0
+	.loc 2 476 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -64
+	.cfi_offset 20, -56
+	mov	x19, x0
+	stp	x21, x22, [sp, 32]
+	stp	x23, x24, [sp, 48]
+	stp	x25, x26, [sp, 64]
+	.cfi_offset 21, -48
+	.cfi_offset 22, -40
+	.cfi_offset 23, -32
+	.cfi_offset 24, -24
+	.cfi_offset 25, -16
+	.cfi_offset 26, -8
+	.loc 2 485 0
+	ldrh	w2, [x0, 10]
+	.loc 2 478 0
+	ldp	x21, x20, [x0, 32]
+.LVL564:
+	.loc 2 477 0
+	ldr	x23, [x0, 16]
+.LVL565:
+	.loc 2 485 0
+	lsl	w2, w2, 1
+	mov	x0, x21
+.LVL566:
+	bl	ftl_memset
+.LVL567:
+	.loc 2 486 0
+	mov	w0, 0
+.LVL568:
+.L575:
+	.loc 2 486 0 is_stmt 0 discriminator 1
+	ldrh	w1, [x19, 6]
+	cmp	w1, w0
+	bhi	.L579
+	.loc 2 494 0 is_stmt 1
+	ldrh	w26, [x21]
+.LVL569:
+	.loc 2 498 0
+	adrp	x24, .LANCHOR0
+	add	x24, x24, :lo12:.LANCHOR0
+	.loc 2 495 0
+	mov	w25, 0
+.LVL570:
+	.loc 2 497 0
+	mov	w20, 0
+.LVL571:
+.L580:
+	.loc 2 497 0 is_stmt 0 discriminator 1
+	ldrh	w0, [x19, 10]
+.LVL572:
+	cmp	w0, w20
+	bhi	.L584
+	.loc 2 513 0 is_stmt 1
+	mov	w0, w25
+	ldp	x19, x20, [sp, 16]
+.LVL573:
+	ldp	x21, x22, [sp, 32]
+.LVL574:
+	ldp	x23, x24, [sp, 48]
+.LVL575:
+	ldp	x25, x26, [sp, 64]
+.LVL576:
+	ldp	x29, x30, [sp], 80
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL577:
+.L579:
+	.cfi_restore_state
+	.loc 2 487 0
+	ubfiz	x1, x0, 2, 16
+	ldr	w2, [x20, x1]
+.LVL578:
+	.loc 2 488 0
+	mov	w1, 0
+	.loc 2 487 0
+	ubfx	x2, x2, 10, 16
+.LVL579:
+.L576:
+	.loc 2 488 0 discriminator 1
+	ldrh	w3, [x19, 10]
+	cmp	w3, w1
+	bhi	.L578
+	.loc 2 486 0 discriminator 2
+	add	w0, w0, 1
+.LVL580:
+	and	w0, w0, 65535
+.LVL581:
+	b	.L575
+.L578:
+	.loc 2 489 0
+	ubfiz	x3, x1, 1, 16
+	ldrh	w4, [x23, x3]
+	cmp	w4, w2
+	bne	.L577
+	.loc 2 490 0
+	ldrh	w4, [x21, x3]
+	add	w4, w4, 1
+	strh	w4, [x21, x3]
+.L577:
+	.loc 2 488 0 discriminator 2
+	add	w1, w1, 1
+	and	w1, w1, 65535
+	b	.L576
+.LVL582:
+.L584:
+	.loc 2 498 0
+	ldrh	w0, [x19]
+	uxtw	x22, w20
+	cmp	w0, w20
+	bne	.L581
+	.loc 2 498 0 is_stmt 0 discriminator 1
+	ldrh	w0, [x24, 84]
+	ldrh	w1, [x19, 2]
+	cmp	w1, w0
+	bcs	.L581
+	.loc 2 499 0 is_stmt 1
+	strh	w0, [x21, x22, lsl 1]
+.L581:
+	.loc 2 500 0
+	lsl	x22, x22, 1
+	ldrh	w0, [x21, x22]
+	cmp	w26, w0
+	bls	.L582
+	mov	w25, w20
+	mov	w26, w0
+.L582:
+	.loc 2 504 0
+	cbnz	w0, .L583
+	.loc 2 504 0 is_stmt 0 discriminator 1
+	ldrh	w0, [x23, x22]
+	cbz	w0, .L583
+	.loc 2 506 0 is_stmt 1
+	mov	w1, 1
+	bl	FtlFreeSysBlkQueueIn
+.LVL583:
+	.loc 2 507 0
+	strh	wzr, [x23, x22]
+	.loc 2 508 0
+	ldrh	w0, [x19, 8]
+	sub	w0, w0, #1
+	strh	w0, [x19, 8]
+.LVL584:
+.L583:
+	.loc 2 497 0 discriminator 2
+	add	w20, w20, 1
+	and	w20, w20, 65535
+	b	.L580
+	.cfi_endproc
+.LFE193:
+	.size	ftl_free_no_use_map_blk, .-ftl_free_no_use_map_blk
+	.align	2
+	.global	Ftl_write_map_blk_to_last_page
+	.type	Ftl_write_map_blk_to_last_page, %function
+Ftl_write_map_blk_to_last_page:
+.LFB196:
+	.loc 2 583 0
+	.cfi_startproc
+.LVL585:
+	stp	x29, x30, [sp, -64]!
+	.cfi_def_cfa_offset 64
+	.cfi_offset 29, -64
+	.cfi_offset 30, -56
+	.loc 2 591 0
+	mov	w1, 65535
+	.loc 2 583 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -48
+	.cfi_offset 20, -40
+	mov	x19, x0
+	stp	x21, x22, [sp, 32]
+	str	x23, [sp, 48]
+	.cfi_offset 21, -32
+	.cfi_offset 22, -24
+	.cfi_offset 23, -16
+	.loc 2 586 0
+	ldr	x20, [x0, 16]
+.LVL586:
+	.loc 2 591 0
+	ldrh	w0, [x0]
+.LVL587:
+	cmp	w0, w1
+	bne	.L590
+	.loc 2 592 0
+	ldrh	w0, [x19, 8]
+	cbz	w0, .L591
+	.loc 2 592 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 592
+	add	x1, x1, 272
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL588:
+.L591:
+	.loc 2 593 0 is_stmt 1
+	ldrh	w0, [x19, 8]
+	add	w0, w0, 1
+	strh	w0, [x19, 8]
+	.loc 2 594 0
+	bl	FtlFreeSysBlkQueueOut
+.LVL589:
+	strh	w0, [x20]
+	.loc 2 595 0
+	strh	wzr, [x19, 2]
+	.loc 2 597 0
+	ldr	w0, [x19, 48]
+	.loc 2 596 0
+	strh	wzr, [x19]
+	.loc 2 597 0
+	add	w0, w0, 1
+	str	w0, [x19, 48]
+.LVL590:
+.L592:
+	.loc 2 628 0
+	mov	w0, 0
+	ldr	x23, [sp, 48]
+.LVL591:
+	ldp	x19, x20, [sp, 16]
+.LVL592:
+	ldp	x21, x22, [sp, 32]
+	ldp	x29, x30, [sp], 64
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 23
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL593:
+.L590:
+	.cfi_restore_state
+	.loc 2 601 0
+	ubfiz	x0, x0, 1, 16
+	.loc 2 602 0
+	adrp	x21, .LANCHOR0
+	.loc 2 607 0
+	ldr	w1, [x19, 48]
+	.loc 2 587 0
+	ldr	x23, [x19, 40]
+.LVL594:
+	.loc 2 601 0
+	ldrh	w22, [x20, x0]
+	.loc 2 602 0
+	add	x20, x21, :lo12:.LANCHOR0
+.LVL595:
+	ldrh	w0, [x19, 2]
+	orr	w0, w0, w22, lsl 10
+	str	w0, [x20, 3364]
+	.loc 2 603 0
+	ldr	x0, [x20, 2288]
+	str	x0, [x20, 3368]
+	.loc 2 604 0
+	ldr	x0, [x20, 3392]
+	str	x0, [x20, 3376]
+	.loc 2 607 0
+	str	w1, [x0, 4]
+	.loc 2 608 0
+	mov	w1, -1291
+	strh	w1, [x0, 8]
+	.loc 2 609 0
+	ldrh	w1, [x19, 4]
+	strh	w1, [x0]
+	.loc 2 610 0
+	strh	w22, [x0, 2]
+	.loc 2 612 0
+	mov	w1, 255
+	ldrh	w2, [x20, 84]
+	ldr	x0, [x20, 2288]
+	lsl	w2, w2, 3
+	bl	ftl_memset
+.LVL596:
+	.loc 2 613 0
+	mov	w0, 0
+.LVL597:
+	.loc 2 614 0
+	mov	w1, 0
+.LVL598:
+.L593:
+	.loc 2 614 0 is_stmt 0 discriminator 1
+	ldrh	w2, [x19, 6]
+	cmp	w2, w1
+	bhi	.L595
+	.loc 2 621 0 is_stmt 1
+	add	x0, x21, :lo12:.LANCHOR0
+.LVL599:
+	mov	w2, 1
+	mov	w3, 0
+	mov	w1, w2
+.LVL600:
+	add	x0, x0, 3360
+	bl	FlashProgPages
+.LVL601:
+	.loc 2 622 0
+	ldrh	w0, [x19, 2]
+	add	w0, w0, 1
+	strh	w0, [x19, 2]
+	.loc 2 626 0
+	mov	x0, x19
+	bl	ftl_map_blk_gc
+.LVL602:
+	.loc 2 627 0
+	b	.L592
+.LVL603:
+.L595:
+	.loc 2 615 0
+	ubfiz	x2, x1, 2, 16
+	ldr	w3, [x23, x2]
+	cmp	w22, w3, lsr 10
+	bne	.L594
+	.loc 2 616 0
+	add	w0, w0, 1
+.LVL604:
+	.loc 2 617 0
+	ldr	x4, [x20, 2288]
+	.loc 2 616 0
+	and	w0, w0, 65535
+.LVL605:
+	.loc 2 617 0
+	ubfiz	x3, x0, 3, 16
+	str	w1, [x4, x3]
+	.loc 2 618 0
+	ldr	w4, [x23, x2]
+	ldr	x2, [x20, 2288]
+	add	x2, x2, x3
+	str	w4, [x2, 4]
+.L594:
+	.loc 2 614 0 discriminator 2
+	add	w1, w1, 1
+.LVL606:
+	and	w1, w1, 65535
+.LVL607:
+	b	.L593
+	.cfi_endproc
+.LFE196:
+	.size	Ftl_write_map_blk_to_last_page, .-Ftl_write_map_blk_to_last_page
+	.align	2
+	.global	FtlMapWritePage
+	.type	FtlMapWritePage, %function
+FtlMapWritePage:
+.LFB197:
+	.loc 2 631 0
+	.cfi_startproc
+.LVL608:
+	stp	x29, x30, [sp, -96]!
+	.cfi_def_cfa_offset 96
+	.cfi_offset 29, -96
+	.cfi_offset 30, -88
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -48
+	.cfi_offset 24, -40
+	.loc 2 637 0
+	adrp	x23, .LANCHOR0
+	.loc 2 654 0
+	add	x24, x23, :lo12:.LANCHOR0
+	.loc 2 631 0
+	stp	x19, x20, [sp, 16]
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 19, -80
+	.cfi_offset 20, -72
+	.cfi_offset 21, -64
+	.cfi_offset 22, -56
+	mov	x19, x0
+	stp	x25, x26, [sp, 64]
+	.loc 2 650 0
+	adrp	x22, .LANCHOR1
+	.loc 2 631 0
+	stp	x27, x28, [sp, 80]
+	.cfi_offset 25, -32
+	.cfi_offset 26, -24
+	.cfi_offset 27, -16
+	.cfi_offset 28, -8
+	.loc 2 631 0
+	mov	w26, w1
+	mov	x27, x2
+	mov	x25, x23
+	.loc 2 650 0
+	add	x22, x22, :lo12:.LANCHOR1
+	.loc 2 654 0
+	add	x20, x24, 3360
+	.loc 2 634 0
+	mov	w21, 0
+.LVL609:
+.L601:
+	.loc 2 637 0
+	add	x0, x23, :lo12:.LANCHOR0
+	ldr	w1, [x0, 2540]
+	add	w1, w1, 1
+	str	w1, [x0, 2540]
+	.loc 2 638 0
+	ldrh	w0, [x0, 84]
+	ldrh	w1, [x19, 2]
+	sub	w0, w0, #1
+	cmp	w1, w0
+	bge	.L602
+	.loc 2 638 0 is_stmt 0 discriminator 1
+	ldrh	w1, [x19]
+	mov	w0, 65535
+	cmp	w1, w0
+	bne	.L603
+.L602:
+	.loc 2 639 0 is_stmt 1
+	mov	x0, x19
+	bl	Ftl_write_map_blk_to_last_page
+.LVL610:
+.L603:
+	.loc 2 650 0
+	ldrh	w1, [x19]
+	ldr	x0, [x19, 16]
+	ldrh	w0, [x0, x1, lsl 1]
+	cbnz	w0, .L604
+	.loc 2 650 0 is_stmt 0 discriminator 1
+	adrp	x0, .LC1
+	mov	w2, 650
+	add	x1, x22, 304
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL611:
+.L604:
+	.loc 2 651 0 is_stmt 1
+	ldrh	w1, [x19]
+	ldrh	w0, [x19, 10]
+	cmp	w1, w0
+	bcc	.L605
+	.loc 2 651 0 is_stmt 0 discriminator 1
+	adrp	x0, .LC1
+	mov	w2, 651
+	add	x1, x22, 304
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL612:
+.L605:
+	.loc 2 652 0 is_stmt 1
+	ldrh	w1, [x19]
+	.loc 2 658 0
+	mov	w2, 16
+	.loc 2 652 0
+	ldr	x0, [x19, 16]
+	ldrh	w28, [x0, x1, lsl 1]
+	.loc 2 658 0
+	mov	w1, 0
+	.loc 2 654 0
+	ldrh	w0, [x19, 2]
+	.loc 2 655 0
+	str	x27, [x20, 8]
+	.loc 2 654 0
+	orr	w0, w0, w28, lsl 10
+	str	w0, [x20, 4]
+	.loc 2 656 0
+	ldr	x0, [x24, 3392]
+	str	x0, [x20, 16]
+	.loc 2 658 0
+	bl	ftl_memset
+.LVL613:
+	.loc 2 659 0
+	ldr	x0, [x20, 16]
+.LVL614:
+	.loc 2 664 0
+	mov	w3, 1
+	.loc 2 660 0
+	ldr	w1, [x19, 48]
+	.loc 2 664 0
+	mov	w2, w3
+	.loc 2 661 0
+	strh	w26, [x0, 8]
+	.loc 2 660 0
+	str	w1, [x0, 4]
+	.loc 2 662 0
+	ldrh	w1, [x19, 4]
+	strh	w1, [x0]
+	.loc 2 664 0
+	mov	w1, w3
+	.loc 2 663 0
+	strh	w28, [x0, 2]
+	.loc 2 664 0
+	mov	x0, x20
+.LVL615:
+	bl	FlashProgPages
+.LVL616:
+	.loc 2 665 0
+	ldrh	w0, [x19, 2]
+	add	w0, w0, 1
+	and	w0, w0, 65535
+	strh	w0, [x19, 2]
+	.loc 2 667 0
+	ldr	w1, [x20]
+	cmn	w1, #1
+	bne	.L606
+	.loc 2 668 0
+	ldr	w1, [x20, 4]
+	adrp	x0, .LC82
+	add	x0, x0, :lo12:.LC82
+	.loc 2 669 0
+	add	w21, w21, 1
+.LVL617:
+	and	w21, w21, 65535
+.LVL618:
+	.loc 2 668 0
+	bl	printk
+.LVL619:
+	.loc 2 670 0
+	ldrh	w0, [x19, 2]
+	cmp	w0, 2
+	bhi	.L607
+	.loc 2 671 0
+	ldrh	w0, [x24, 84]
+	sub	w0, w0, #1
+	strh	w0, [x19, 2]
+.L607:
+	.loc 2 673 0
+	cmp	w21, 3
+	bls	.L608
+	.loc 2 674 0
+	add	x25, x25, :lo12:.LANCHOR0
+	adrp	x0, .LC83
+	mov	w2, w21
+	add	x0, x0, :lo12:.LC83
+	ldr	w1, [x25, 3364]
+	bl	printk
+.LVL620:
+.L609:
+	b	.L609
+.L608:
+	.loc 2 678 0
+	ldr	w0, [x19, 52]
+	cbz	w0, .L601
+.L618:
+	b	.L618
+.L606:
+	.loc 2 682 0
+	cmp	w0, 1
+	beq	.L601
+	.loc 2 685 0
+	ldr	x0, [x19, 40]
+	ldr	w1, [x20, 4]
+	str	w1, [x0, w26, uxtw 2]
+	.loc 2 687 0
+	mov	w0, 0
+	ldp	x19, x20, [sp, 16]
+.LVL621:
+	ldp	x21, x22, [sp, 32]
+.LVL622:
+	ldp	x23, x24, [sp, 48]
+	ldp	x25, x26, [sp, 64]
+.LVL623:
+	ldp	x27, x28, [sp, 80]
+.LVL624:
+	ldp	x29, x30, [sp], 96
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 28
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE197:
+	.size	FtlMapWritePage, .-FtlMapWritePage
+	.align	2
+	.global	ftl_map_blk_gc
+	.type	ftl_map_blk_gc, %function
+ftl_map_blk_gc:
+.LFB195:
+	.loc 2 537 0
+	.cfi_startproc
+.LVL625:
+	stp	x29, x30, [sp, -96]!
+	.cfi_def_cfa_offset 96
+	.cfi_offset 29, -96
+	.cfi_offset 30, -88
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -80
+	.cfi_offset 20, -72
+	mov	x19, x0
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -64
+	.cfi_offset 22, -56
+	adrp	x22, .LANCHOR0
+	stp	x23, x24, [sp, 48]
+	stp	x25, x26, [sp, 64]
+	stp	x27, x28, [sp, 80]
+	.cfi_offset 23, -48
+	.cfi_offset 24, -40
+	.cfi_offset 25, -32
+	.cfi_offset 26, -24
+	.cfi_offset 27, -16
+	.cfi_offset 28, -8
+	.loc 2 541 0
+	ldr	x20, [x0, 16]
+.LVL626:
+	.loc 2 542 0
+	ldr	x25, [x0, 40]
+.LVL627:
+	.loc 2 545 0
+	bl	ftl_free_no_use_map_blk
+.LVL628:
+	.loc 2 547 0
+	ldrh	w1, [x19, 10]
+	ldrh	w2, [x19, 8]
+	sub	w1, w1, #4
+	cmp	w2, w1
+	blt	.L621
+	.loc 2 548 0
+	ubfiz	x0, x0, 1, 16
+	ldrh	w24, [x20, x0]
+.LVL629:
+	.loc 2 549 0
+	cbz	w24, .L621
+	.loc 2 549 0 is_stmt 0 discriminator 1
+	ldr	w1, [x19, 52]
+	cbnz	w1, .L621
+	.loc 2 550 0 is_stmt 1
+	mov	w1, 1
+	str	w1, [x19, 52]
+	.loc 2 551 0
+	strh	wzr, [x20, x0]
+	.loc 2 552 0
+	ldrh	w0, [x19, 8]
+	.loc 2 553 0
+	ldrh	w1, [x19, 2]
+	.loc 2 552 0
+	sub	w0, w0, #1
+	strh	w0, [x19, 8]
+	.loc 2 553 0
+	add	x0, x22, :lo12:.LANCHOR0
+	ldrh	w0, [x0, 84]
+	cmp	w1, w0
+	bcc	.L622
+	.loc 2 554 0
+	mov	x0, x19
+	bl	ftl_map_blk_alloc_new_blk
+.LVL630:
+.L622:
+	.loc 2 558 0 discriminator 1
+	add	x26, x22, :lo12:.LANCHOR0
+	.loc 2 564 0 discriminator 1
+	adrp	x23, .LANCHOR1
+	add	x23, x23, :lo12:.LANCHOR1
+	.loc 2 558 0 discriminator 1
+	add	x21, x26, 3360
+	.loc 2 564 0 discriminator 1
+	add	x23, x23, 320
+	.loc 2 537 0 discriminator 1
+	mov	w20, 0
+.LVL631:
+.L623:
+	.loc 2 556 0 discriminator 1
+	ldrh	w0, [x19, 6]
+	cmp	w0, w20
+	bhi	.L627
+	.loc 2 572 0
+	mov	w1, 1
+	mov	w0, w24
+	bl	FtlFreeSysBlkQueueIn
+.LVL632:
+	.loc 2 573 0
+	str	wzr, [x19, 52]
+.LVL633:
+.L621:
+	.loc 2 577 0
+	add	x22, x22, :lo12:.LANCHOR0
+	ldrh	w1, [x19, 2]
+	ldrh	w0, [x22, 84]
+	cmp	w1, w0
+	bcc	.L628
+	.loc 2 578 0
+	mov	x0, x19
+	bl	ftl_map_blk_alloc_new_blk
+.LVL634:
+.L628:
+	.loc 2 580 0
+	mov	w0, 0
+	ldp	x19, x20, [sp, 16]
+.LVL635:
+	ldp	x21, x22, [sp, 32]
+	ldp	x23, x24, [sp, 48]
+.LVL636:
+	ldp	x25, x26, [sp, 64]
+.LVL637:
+	ldp	x27, x28, [sp, 80]
+	ldp	x29, x30, [sp], 96
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 28
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL638:
+.L627:
+	.cfi_restore_state
+	.loc 2 557 0
+	ubfiz	x27, x20, 2, 16
+	ldr	w0, [x25, x27]
+	cmp	w24, w0, lsr 10
+	bne	.L624
+	.loc 2 559 0
+	ldr	x28, [x26, 3392]
+	.loc 2 562 0
+	mov	w2, 1
+	.loc 2 558 0
+	ldr	x0, [x26, 3992]
+	.loc 2 562 0
+	mov	w1, w2
+	.loc 2 559 0
+	stp	x0, x28, [x21, 8]
+	.loc 2 560 0
+	ldr	w0, [x25, x27]
+	str	w0, [x21, 4]
+	.loc 2 562 0
+	mov	x0, x21
+	bl	FlashReadPages
+.LVL639:
+	.loc 2 564 0
+	ldrh	w0, [x28, 8]
+	cmp	w0, w20
+	beq	.L625
+	.loc 2 564 0 is_stmt 0 discriminator 1
+	adrp	x0, .LC1
+	mov	w2, 564
+	mov	x1, x23
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL640:
+.L625:
+	.loc 2 565 0 is_stmt 1
+	ldr	w0, [x21]
+	cmn	w0, #1
+	bne	.L626
+	.loc 2 566 0
+	str	wzr, [x25, x27]
+.L624:
+	.loc 2 556 0 discriminator 2
+	add	w20, w20, 1
+.LVL641:
+	and	w20, w20, 65535
+.LVL642:
+	b	.L623
+.L626:
+	.loc 2 568 0
+	ldr	x2, [x21, 8]
+	mov	w1, w20
+	mov	x0, x19
+	bl	FtlMapWritePage
+.LVL643:
+	b	.L624
+	.cfi_endproc
+.LFE195:
+	.size	ftl_map_blk_gc, .-ftl_map_blk_gc
+	.align	2
+	.global	flush_l2p_region
+	.type	flush_l2p_region, %function
+flush_l2p_region:
+.LFB198:
+	.loc 2 690 0
+	.cfi_startproc
+.LVL644:
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -16
+	.cfi_offset 20, -8
+	.loc 2 693 0
+	adrp	x19, .LANCHOR0
+	add	x19, x19, :lo12:.LANCHOR0
+	ubfiz	x20, x0, 4, 16
+	ldr	x0, [x19, 2504]
+.LVL645:
+	add	x1, x0, x20
+	.loc 2 694 0
+	ldr	x2, [x1, 8]
+	ldrh	w1, [x0, x20]
+	adrp	x0, .LANCHOR3
+	add	x0, x0, :lo12:.LANCHOR3
+	sub	x0, x0, #240
+	bl	FtlMapWritePage
+.LVL646:
+	.loc 2 695 0
+	ldr	x0, [x19, 2504]
+	add	x0, x0, x20
+	ldr	w1, [x0, 4]
+	and	w1, w1, 2147483647
+	str	w1, [x0, 4]
+	.loc 2 697 0
+	mov	w0, 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x29, x30, [sp], 32
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE198:
+	.size	flush_l2p_region, .-flush_l2p_region
+	.align	2
+	.global	log2phys
+	.type	log2phys, %function
+log2phys:
+.LFB201:
+	.loc 2 753 0
+	.cfi_startproc
+.LVL647:
+	stp	x29, x30, [sp, -80]!
+	.cfi_def_cfa_offset 80
+	.cfi_offset 29, -80
+	.cfi_offset 30, -72
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -32
+	.cfi_offset 24, -24
+	mov	w23, w2
+	.loc 2 756 0
+	adrp	x24, .LANCHOR0
+	add	x2, x24, :lo12:.LANCHOR0
+.LVL648:
+	.loc 2 753 0
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -48
+	.cfi_offset 22, -40
+	mov	x22, x1
+	stp	x19, x20, [sp, 16]
+	str	x25, [sp, 64]
+	.cfi_offset 19, -64
+	.cfi_offset 20, -56
+	.cfi_offset 25, -16
+	.loc 2 756 0
+	ldrh	w19, [x2, 88]
+	add	w1, w19, 7
+.LVL649:
+	.loc 2 757 0
+	mov	x19, 1
+	.loc 2 756 0
+	lsr	w21, w0, w1
+	and	w21, w21, 65535
+.LVL650:
+	.loc 2 757 0
+	lsl	x19, x19, x1
+	.loc 2 759 0
+	ldr	w1, [x2, 2520]
+	.loc 2 757 0
+	sub	w19, w19, #1
+	and	w19, w19, w0
+	.loc 2 759 0
+	cmp	w0, w1
+	.loc 2 757 0
+	and	x19, x19, 65535
+	.loc 2 759 0
+	bcc	.L636
+	.loc 2 759 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+.LVL651:
+	mov	w2, 759
+	add	x1, x1, 336
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL652:
+.L636:
+	.loc 2 761 0 is_stmt 1
+	add	x0, x24, :lo12:.LANCHOR0
+.LVL653:
+	ldrh	w1, [x0, 118]
+	.loc 2 762 0
+	ldr	x2, [x0, 2504]
+	.loc 2 761 0
+	mov	x0, 0
+.LVL654:
+.L637:
+	and	x20, x0, 65535
+.LVL655:
+	.loc 2 761 0 is_stmt 0 discriminator 1
+	cmp	w20, w1
+	bcc	.L642
+	.loc 2 776 0 is_stmt 1
+	bl	select_l2p_ram_region
+.LVL656:
+	and	x20, x0, 65535
+.LVL657:
+	.loc 2 777 0
+	add	x2, x24, :lo12:.LANCHOR0
+.LVL658:
+	ubfiz	x1, x20, 4, 16
+	.loc 2 776 0
+	mov	w25, w0
+	.loc 2 777 0
+	ldr	x2, [x2, 2504]
+	add	x3, x2, x1
+	ldrh	w2, [x2, x1]
+	mov	w1, 65535
+	cmp	w2, w1
+	beq	.L643
+	.loc 2 777 0 is_stmt 0 discriminator 1
+	ldr	w1, [x3, 4]
+	tbz	w1, #31, .L643
+	.loc 2 778 0 is_stmt 1
+	bl	flush_l2p_region
+.LVL659:
+.L643:
+	.loc 2 781 0
+	mov	w1, w25
+	mov	w0, w21
+	bl	load_l2p_region
+.LVL660:
+	.loc 2 782 0
+	b	.L638
+.L642:
+	add	x0, x0, 1
+	.loc 2 762 0
+	add	x3, x2, x0, lsl 4
+	ldrh	w3, [x3, -16]
+	cmp	w3, w21
+	bne	.L637
+.L638:
+	.loc 2 764 0
+	cbnz	w23, .L639
+	.loc 2 765 0
+	add	x0, x24, :lo12:.LANCHOR0
+	ldr	x0, [x0, 2504]
+	add	x0, x0, x20, lsl 4
+	ldr	x0, [x0, 8]
+.LVL661:
+	ldr	w0, [x0, x19, lsl 2]
+	str	w0, [x22]
+.L640:
+	.loc 2 771 0
+	add	x24, x24, :lo12:.LANCHOR0
+	ldr	x0, [x24, 2504]
+	add	x20, x0, x20, lsl 4
+.LVL662:
+	ldr	w0, [x20, 4]
+	cmn	w0, #1
+	beq	.L645
+	.loc 2 772 0
+	add	w0, w0, 1
+	str	w0, [x20, 4]
+.L645:
+	.loc 2 783 0
+	mov	w0, 0
+	ldr	x25, [sp, 64]
+	ldp	x19, x20, [sp, 16]
+.LVL663:
+	ldp	x21, x22, [sp, 32]
+.LVL664:
+	ldp	x23, x24, [sp, 48]
+.LVL665:
+	ldp	x29, x30, [sp], 80
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 25
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL666:
+.L639:
+	.cfi_restore_state
+	.loc 2 767 0
+	add	x2, x24, :lo12:.LANCHOR0
+	lsl	x0, x20, 4
+	mov	x1, x0
+	ldr	w4, [x22]
+	ldr	x3, [x2, 2504]
+	add	x0, x3, x0
+	ldr	x0, [x0, 8]
+.LVL667:
+	str	w4, [x0, x19, lsl 2]
+	.loc 2 769 0
+	strh	w21, [x2, 2512]
+	.loc 2 768 0
+	ldr	x0, [x2, 2504]
+	add	x0, x0, x1
+	ldr	w1, [x0, 4]
+	orr	w1, w1, -2147483648
+	str	w1, [x0, 4]
+	b	.L640
+	.cfi_endproc
+.LFE201:
+	.size	log2phys, .-log2phys
+	.align	2
+	.global	FtlReUsePrevPpa
+	.type	FtlReUsePrevPpa, %function
+FtlReUsePrevPpa:
+.LFB219:
+	.loc 2 1628 0
+	.cfi_startproc
+.LVL668:
+	stp	x29, x30, [sp, -80]!
+	.cfi_def_cfa_offset 80
+	.cfi_offset 29, -80
+	.cfi_offset 30, -72
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -48
+	.cfi_offset 22, -40
+	mov	w21, w0
+	stp	x19, x20, [sp, 16]
+	.loc 2 1629 0
+	lsr	w0, w1, 10
+.LVL669:
+	.loc 2 1628 0
+	str	w1, [x29, 76]
+	.loc 2 1631 0
+	adrp	x22, .LANCHOR0
+	.loc 2 1628 0
+	str	x23, [sp, 48]
+	.cfi_offset 19, -64
+	.cfi_offset 20, -56
+	.cfi_offset 23, -32
+	.loc 2 1629 0
+	bl	P2V_block_in_plane
+.LVL670:
+	.loc 2 1631 0
+	add	x2, x22, :lo12:.LANCHOR0
+	.loc 2 1629 0
+	and	w0, w0, 65535
+.LVL671:
+	.loc 2 1631 0
+	ubfiz	x20, x0, 1, 16
+	ldr	x3, [x2, 2320]
+	ldrh	w1, [x3, x20]
+.LVL672:
+	cbnz	w1, .L651
+	.loc 2 1632 0
+	ldr	x19, [x2, 2344]
+	cbz	x19, .L652
+.LBB219:
+	.loc 2 1635 0
+	ldrh	w3, [x2, 2352]
+.LVL673:
+	.loc 2 1636 0
+	mov	x4, -6148914691236517206
+	ldr	x2, [x2, 2304]
+	movk	x4, 0xaaab, lsl 0
+	.loc 2 1644 0
+	mov	w5, 65535
+	.loc 2 1636 0
+	sub	x19, x19, x2
+	asr	x19, x19, 1
+	mul	x19, x19, x4
+	.loc 2 1644 0
+	mov	w4, 6
+	.loc 2 1636 0
+	and	w19, w19, 65535
+.LVL674:
+.L653:
+	.loc 2 1637 0 discriminator 1
+	cmp	w1, w3
+	beq	.L652
+	.loc 2 1638 0
+	cmp	w19, w0
+	bne	.L654
+	.loc 2 1639 0
+	add	x23, x22, :lo12:.LANCHOR0
+	mov	w1, w19
+.LVL675:
+	add	x0, x23, 2344
+.LVL676:
+	bl	List_remove_node
+.LVL677:
+	ldrh	w0, [x23, 2352]
+	cbnz	w0, .L655
+	.loc 2 1639 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 1639
+	add	x1, x1, 352
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL678:
+.L655:
+	.loc 2 1639 0 discriminator 3
+	add	x22, x22, :lo12:.LANCHOR0
+	ldrh	w0, [x22, 2352]
+	sub	w0, w0, #1
+	strh	w0, [x22, 2352]
+	.loc 2 1640 0 is_stmt 1 discriminator 3
+	mov	w0, w19
+	bl	INSERT_DATA_LIST
+.LVL679:
+	.loc 2 1641 0 discriminator 3
+	ldr	x1, [x22, 2320]
+	ldrh	w0, [x1, x20]
+	add	w0, w0, 1
+	strh	w0, [x1, x20]
+.LVL680:
+.L652:
+.LBE219:
+	.loc 2 1652 0
+	add	x1, x29, 76
+.LVL681:
+	mov	w2, 1
+	mov	w0, w21
+.LVL682:
+	bl	log2phys
+.LVL683:
+	.loc 2 1653 0
+	ldp	x19, x20, [sp, 16]
+.LVL684:
+	ldp	x21, x22, [sp, 32]
+.LVL685:
+	ldr	x23, [sp, 48]
+	ldp	x29, x30, [sp], 80
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 23
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL686:
+.L654:
+	.cfi_restore_state
+.LBB220:
+	.loc 2 1644 0
+	umull	x19, w19, w4
+.LVL687:
+	ldrh	w19, [x2, x19]
+.LVL688:
+	cmp	w19, w5
+	beq	.L652
+	.loc 2 1637 0 discriminator 2
+	add	w1, w1, 1
+.LVL689:
+	and	w1, w1, 65535
+.LVL690:
+	b	.L653
+.LVL691:
+.L651:
+.LBE220:
+	.loc 2 1650 0
+	add	w1, w1, 1
+.LVL692:
+	strh	w1, [x3, x20]
+	b	.L652
+	.cfi_endproc
+.LFE219:
+	.size	FtlReUsePrevPpa, .-FtlReUsePrevPpa
+	.align	2
+	.global	ftl_scan_all_data
+	.type	ftl_scan_all_data, %function
+ftl_scan_all_data:
+.LFB230:
+	.loc 2 2275 0
+	.cfi_startproc
+	sub	sp, sp, #96
+	.cfi_def_cfa_offset 96
+	.loc 2 2280 0
+	adrp	x0, .LC84
+	mov	w1, 0
+	add	x0, x0, :lo12:.LC84
+	.loc 2 2275 0
+	stp	x29, x30, [sp, 16]
+	.cfi_offset 29, -80
+	.cfi_offset 30, -72
+	add	x29, sp, 16
+	.cfi_def_cfa 29, 80
+	stp	x21, x22, [sp, 48]
+	.cfi_offset 21, -48
+	.cfi_offset 22, -40
+	.loc 2 2281 0
+	adrp	x22, .LANCHOR0
+	.loc 2 2286 0
+	add	x21, x22, :lo12:.LANCHOR0
+	.loc 2 2275 0
+	stp	x19, x20, [sp, 32]
+	str	x23, [sp, 64]
+	.cfi_offset 19, -64
+	.cfi_offset 20, -56
+	.cfi_offset 23, -32
+	.loc 2 2281 0
+	mov	w20, 0
+.LVL693:
+	.loc 2 2286 0
+	add	x19, x21, 3360
+	.loc 2 2280 0
+	bl	printk
+.LVL694:
+.L662:
+	.loc 2 2281 0 discriminator 1
+	add	x0, x22, :lo12:.LANCHOR0
+	ldr	w0, [x0, 2520]
+	cmp	w20, w0
+	bcc	.L668
+	.loc 2 2303 0
+	ldp	x19, x20, [sp, 32]
+.LVL695:
+	ldp	x21, x22, [sp, 48]
+	ldp	x29, x30, [sp, 16]
+	ldr	x23, [sp, 64]
+	add	sp, sp, 96
+	.cfi_remember_state
+	.cfi_restore 29
+	.cfi_restore 30
+	.cfi_restore 23
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL696:
+.L668:
+	.cfi_restore_state
+	.loc 2 2282 0
+	mov	w2, 0
+	add	x1, x29, 76
+	mov	w0, w20
+	bl	log2phys
+.LVL697:
+	.loc 2 2283 0
+	tst	x20, 2047
+	bne	.L663
+	.loc 2 2284 0
+	ldr	w2, [x29, 76]
+	adrp	x0, .LC85
+	mov	w1, w20
+	add	x0, x0, :lo12:.LC85
+	bl	printk
+.LVL698:
+.L663:
+	.loc 2 2285 0
+	ldr	w0, [x29, 76]
+	cmn	w0, #1
+	beq	.L665
+	.loc 2 2289 0
+	ldr	x23, [x21, 3392]
+	.loc 2 2292 0
+	mov	w2, 0
+	.loc 2 2286 0
+	stp	wzr, w0, [x19]
+	.loc 2 2292 0
+	mov	w1, 1
+	.loc 2 2288 0
+	ldr	x0, [x21, 2288]
+	str	x0, [x19, 8]
+	.loc 2 2292 0
+	mov	x0, x19
+	.loc 2 2289 0
+	str	x23, [x19, 16]
+	.loc 2 2287 0
+	str	w20, [x19, 24]
+	.loc 2 2292 0
+	bl	FlashReadPages
+.LVL699:
+	.loc 2 2293 0
+	ldr	w0, [x19]
+	cmp	w0, 256
+	ccmn	w0, #1, 4, ne
+	beq	.L666
+	.loc 2 2294 0
+	ldr	w0, [x23, 8]
+	cmp	w20, w0
+	beq	.L665
+.L666:
+	.loc 2 2297 0
+	ldp	x1, x0, [x19, 8]
+	ldr	w2, [x1, 4]
+	str	w2, [sp]
+	ldp	w3, w4, [x0]
+	ldp	w5, w6, [x0, 8]
+	adrp	x0, .LC86
+	ldr	w7, [x1]
+	add	x0, x0, :lo12:.LC86
+	ldr	w2, [x19, 4]
+	mov	w1, w20
+	bl	printk
+.LVL700:
+.L665:
+	.loc 2 2281 0 discriminator 2
+	add	w20, w20, 1
+	b	.L662
+	.cfi_endproc
+.LFE230:
+	.size	ftl_scan_all_data, .-ftl_scan_all_data
+	.align	2
+	.global	FtlReadRefresh
+	.type	FtlReadRefresh, %function
+FtlReadRefresh:
+.LFB257:
+	.loc 5 419 0
+	.cfi_startproc
+	.loc 5 425 0
+	adrp	x0, .LANCHOR0
+	add	x1, x0, :lo12:.LANCHOR0
+	add	x2, x1, 2712
+	ldr	w3, [x2, 80]
+	cbz	w3, .L671
+	.loc 5 426 0
+	ldr	w0, [x1, 2520]
+	ldr	w3, [x2, 84]
+	cmp	w3, w0
+	bcs	.L672
+	.loc 5 419 0
+	stp	x29, x30, [sp, -160]!
+	.cfi_def_cfa_offset 160
+	.cfi_offset 29, -160
+	.cfi_offset 30, -152
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -144
+	.cfi_offset 20, -136
+.LBB226:
+.LBB227:
+	.loc 5 428 0
+	mov	x19, x1
+.LBE227:
+.LBE226:
+	mov	w20, 2048
+	.loc 5 419 0
+	str	x21, [sp, 32]
+	.cfi_offset 21, -128
+.LVL701:
+.L677:
+.LBB232:
+.LBB229:
+	.loc 5 428 0
+	ldr	w1, [x19, 2520]
+	ldr	w0, [x19, 2796]
+	cmp	w0, w1
+	bcs	.L674
+	.loc 5 430 0
+	add	x1, x29, 60
+	mov	w2, 0
+	bl	log2phys
+.LVL702:
+	.loc 5 431 0
+	ldr	w0, [x19, 2796]
+	.loc 5 432 0
+	ldr	w1, [x29, 60]
+	.loc 5 431 0
+	add	w0, w0, 1
+	str	w0, [x19, 2796]
+	.loc 5 432 0
+	cmn	w1, #1
+	beq	.L675
+.LBB228:
+	.loc 5 435 0
+	str	w0, [x29, 88]
+	.loc 5 436 0
+	adrp	x0, ftl_temp_buf
+	add	x0, x0, :lo12:ftl_temp_buf
+	str	x0, [x29, 72]
+	.loc 5 437 0
+	add	x0, x29, 96
+	str	x0, [x29, 80]
+	.loc 5 438 0
+	add	x0, x29, 160
+	.loc 5 434 0
+	str	w1, [x29, 68]
+	.loc 5 439 0
+	mov	w2, 0
+	mov	w1, 1
+	.loc 5 438 0
+	str	wzr, [x0, -96]!
+	.loc 5 439 0
+	bl	FlashReadPages
+.LVL703:
+	.loc 5 440 0
+	ldr	w0, [x29, 64]
+	cmp	w0, 256
+	bne	.L674
+	.loc 5 442 0
+	ldr	w0, [x29, 60]
+	lsr	w0, w0, 10
+	bl	P2V_block_in_plane
+.LVL704:
+	bl	FtlGcRefreshBlock
+.LVL705:
+.L674:
+.LBE228:
+.LBE229:
+.LBE232:
+	.loc 5 466 0
+	ldp	x19, x20, [sp, 16]
+.LBB233:
+.LBB230:
+	mov	w0, -1
+.LBE230:
+.LBE233:
+	ldr	x21, [sp, 32]
+	ldp	x29, x30, [sp], 160
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 21
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.L675:
+	.cfi_restore_state
+.LBB234:
+.LBB231:
+	.loc 5 427 0
+	subs	w20, w20, #1
+	bne	.L677
+	b	.L674
+.LVL706:
+.L672:
+	.cfi_def_cfa 31, 0
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_restore 21
+	.cfi_restore 29
+	.cfi_restore 30
+.LBE231:
+.LBE234:
+	.loc 5 451 0
+	ldr	w0, [x1, 2524]
+	.loc 5 449 0
+	stp	w0, wzr, [x2, 76]
+	.loc 5 450 0
+	str	wzr, [x2, 84]
+.L681:
+	.loc 5 420 0
+	mov	w0, 0
+	.loc 5 465 0
+	ret
+.L671:
+.LBB235:
+	.loc 5 456 0
+	ldr	w3, [x1, 2524]
+	ldr	w5, [x2, 76]
+	add	w2, w3, 1048576
+	cmp	w5, w2
+	bhi	.L680
+	.loc 5 454 0
+	ldr	w2, [x1, 2580]
+	lsr	w4, w2, 10
+	mov	w2, 33554432
+	asr	w2, w2, w4
+.LVL707:
+	.loc 5 457 0
+	add	w2, w2, w5
+.LVL708:
+	cmp	w3, w2
+	bhi	.L680
+	.loc 5 458 0
+	ldrb	w1, [x1, 2620]
+	cbnz	w1, .L681
+.L680:
+	.loc 5 460 0
+	add	x0, x0, :lo12:.LANCHOR0
+	mov	w1, 1
+	.loc 5 462 0
+	str	w3, [x0, 2788]
+	.loc 5 460 0
+	str	w1, [x0, 2792]
+	.loc 5 461 0
+	str	wzr, [x0, 2796]
+	b	.L681
+.LBE235:
+	.cfi_endproc
+.LFE257:
+	.size	FtlReadRefresh, .-FtlReadRefresh
+	.align	2
+	.global	FtlMapBlkWriteDump_data
+	.type	FtlMapBlkWriteDump_data, %function
+FtlMapBlkWriteDump_data:
+.LFB206:
+	.loc 2 897 0
+	.cfi_startproc
+.LVL709:
+	.loc 2 903 0
+	ldr	w1, [x0, 56]
+	cbz	w1, .L695
+	.loc 2 897 0
+	stp	x29, x30, [sp, -48]!
+	.cfi_def_cfa_offset 48
+	.cfi_offset 29, -48
+	.cfi_offset 30, -40
+	.loc 2 907 0
+	adrp	x1, .LANCHOR0
+	add	x2, x1, :lo12:.LANCHOR0
+	.loc 2 897 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -32
+	.cfi_offset 20, -24
+	mov	x19, x0
+	str	x21, [sp, 32]
+	.cfi_offset 21, -16
+	.loc 2 907 0
+	add	x0, x2, 3360
+.LVL710:
+	mov	x21, x1
+	.loc 2 899 0
+	ldrh	w20, [x19, 6]
+	.loc 2 908 0
+	ldr	x4, [x2, 3392]
+	.loc 2 899 0
+	sub	w20, w20, #1
+	.loc 2 907 0
+	ldr	x3, [x2, 3992]
+	.loc 2 899 0
+	and	w20, w20, 65535
+.LVL711:
+	.loc 2 900 0
+	ldr	x5, [x19, 40]
+.LVL712:
+	.loc 2 908 0
+	stp	x3, x4, [x0, 8]
+	.loc 2 930 0
+	ubfiz	x4, x20, 2, 16
+	.loc 2 905 0
+	str	wzr, [x19, 56]
+	.loc 2 930 0
+	ldr	w4, [x5, x4]
+.LVL713:
+	.loc 2 931 0
+	str	w4, [x0, 4]
+	.loc 2 932 0
+	cbz	w4, .L689
+	.loc 2 934 0
+	mov	w2, 1
+	mov	w1, w2
+	bl	FlashReadPages
+.LVL714:
+.L690:
+	.loc 2 941 0
+	add	x1, x21, :lo12:.LANCHOR0
+	mov	x0, x19
+	ldr	x2, [x1, 3368]
+	mov	w1, w20
+	bl	FtlMapWritePage
+.LVL715:
+	.loc 2 943 0
+	ldr	x21, [sp, 32]
+	ldp	x19, x20, [sp, 16]
+.LVL716:
+	ldp	x29, x30, [sp], 48
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 21
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL717:
+.L689:
+	.cfi_restore_state
+	.loc 2 938 0
+	ldrh	w2, [x2, 90]
+	mov	w1, 255
+	mov	x0, x3
+	bl	ftl_memset
+.LVL718:
+	b	.L690
+.LVL719:
+.L695:
+	.cfi_def_cfa 31, 0
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_restore 21
+	.cfi_restore 29
+	.cfi_restore 30
+	ret
+	.cfi_endproc
+.LFE206:
+	.size	FtlMapBlkWriteDump_data, .-FtlMapBlkWriteDump_data
+	.align	2
+	.global	FtlScanSysBlk
+	.type	FtlScanSysBlk, %function
+FtlScanSysBlk:
+.LFB209:
+	.loc 2 1095 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -112]!
+	.cfi_def_cfa_offset 112
+	.cfi_offset 29, -112
+	.cfi_offset 30, -104
+	.loc 2 1103 0
+	mov	w1, 0
+	.loc 2 1095 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -96
+	.cfi_offset 20, -88
+	.loc 2 1101 0
+	adrp	x20, .LANCHOR3
+	.loc 2 1095 0
+	stp	x21, x22, [sp, 32]
+	.loc 2 1101 0
+	add	x0, x20, :lo12:.LANCHOR3
+	.cfi_offset 21, -80
+	.cfi_offset 22, -72
+	.loc 2 1102 0
+	adrp	x21, .LANCHOR0
+	add	x19, x21, :lo12:.LANCHOR0
+	.loc 2 1095 0
+	stp	x23, x24, [sp, 48]
+	stp	x25, x26, [sp, 64]
+	.cfi_offset 23, -64
+	.cfi_offset 24, -56
+	.cfi_offset 25, -48
+	.cfi_offset 26, -40
+	.loc 2 1162 0
+	adrp	x25, .LANCHOR1
+	.loc 2 1095 0
+	stp	x27, x28, [sp, 80]
+	.cfi_offset 27, -32
+	.cfi_offset 28, -24
+	.loc 2 1162 0
+	add	x25, x25, :lo12:.LANCHOR1
+	.loc 2 1101 0
+	strh	wzr, [x0, -176]
+	.loc 2 1162 0
+	add	x25, x25, 368
+	.loc 2 1103 0
+	ldr	x0, [x19, 4088]
+	ldr	w2, [x19, 108]
+	.loc 2 1102 0
+	strh	wzr, [x19, 124]
+	.loc 2 1103 0
+	lsl	w2, w2, 2
+	bl	ftl_memset
+.LVL720:
+	.loc 2 1104 0
+	ldr	x0, [x19, 4040]
+	mov	w1, 0
+	ldr	w2, [x19, 108]
+	lsl	w2, w2, 1
+	bl	ftl_memset
+.LVL721:
+	.loc 2 1105 0
+	ldr	x0, [x19, 4064]
+	mov	w1, 0
+	ldrh	w2, [x19, 100]
+	lsl	w2, w2, 2
+	bl	ftl_memset
+.LVL722:
+	.loc 2 1106 0
+	ldr	x0, [x19, 128]
+	mov	w1, 0
+	ldrh	w2, [x19, 100]
+	lsl	w2, w2, 1
+	bl	ftl_memset
+.LVL723:
+	.loc 2 1107 0
+	mov	w2, 12
+	mov	w1, 255
+	add	x0, x19, 2648
+	bl	ftl_memset
+.LVL724:
+	.loc 2 1109 0
+	ldrh	w24, [x19, 20]
+.LVL725:
+.L699:
+	.loc 2 1109 0 is_stmt 0 discriminator 1
+	ldrh	w0, [x19, 22]
+	cmp	w0, w24
+	bls	.L739
+	.loc 2 1113 0 is_stmt 1 discriminator 1
+	ldrh	w9, [x19, 12]
+	.loc 2 1120 0 discriminator 1
+	mov	x5, 0
+	ldrh	w8, [x19, 92]
+	mov	w22, 0
+	.loc 2 1115 0 discriminator 1
+	add	x7, x19, 40
+	.loc 2 1120 0 discriminator 1
+	mov	w6, 4
+	b	.L740
+.L701:
+	.loc 2 1115 0
+	ldrb	w0, [x7, x5]
+	mov	w1, w24
+	bl	V2P_block
+.LVL726:
+	and	w4, w0, 65535
+	.loc 2 1116 0
+	bl	FtlBbmIsBadBlock
+.LVL727:
+	cbnz	w0, .L700
+	.loc 2 1118 0
+	ldr	x0, [x19, 3968]
+	ubfiz	x2, x22, 5, 16
+	lsl	w4, w4, 10
+	add	x0, x0, x2
+	str	w4, [x0, 4]
+	.loc 2 1119 0
+	ldr	x1, [x19, 3968]
+	ldr	x0, [x19, 3256]
+	add	x1, x1, x2
+	.loc 2 1120 0
+	ldr	x2, [x19, 3264]
+	.loc 2 1119 0
+	str	x0, [x1, 8]
+	.loc 2 1120 0
+	mul	w0, w22, w8
+	.loc 2 1121 0
+	add	w22, w22, 1
+.LVL728:
+	and	w22, w22, 65535
+.LVL729:
+	.loc 2 1120 0
+	sdiv	w0, w0, w6
+	add	x0, x2, x0, sxtw 2
+	str	x0, [x1, 16]
+.L700:
+	add	x5, x5, 1
+.L740:
+	.loc 2 1113 0 discriminator 1
+	cmp	w9, w5, uxth
+	bhi	.L701
+	.loc 2 1124 0
+	cbnz	w22, .L702
+.L738:
+	.loc 2 1109 0
+	add	w24, w24, 1
+.LVL730:
+	and	w24, w24, 65535
+.LVL731:
+	b	.L699
+.L702:
+	.loc 2 1127 0
+	ldr	x0, [x19, 3968]
+	mov	w1, w22
+	mov	w2, 1
+	ubfiz	x22, x22, 5, 16
+.LVL732:
+	mov	x23, 0
+	.loc 2 1248 0
+	add	x28, x19, 2648
+	.loc 2 1127 0
+	bl	FlashReadPages
+.LVL733:
+.L737:
+	.loc 2 1129 0
+	ldr	x0, [x19, 3968]
+	add	x1, x0, x23
+	.loc 2 1132 0
+	ldr	w0, [x0, x23]
+	.loc 2 1129 0
+	ldr	w26, [x1, 4]
+	.loc 2 1132 0
+	cmn	w0, #1
+	.loc 2 1130 0
+	ldr	x27, [x1, 16]
+	.loc 2 1129 0
+	ubfx	x26, x26, 10, 16
+	.loc 2 1132 0
+	bne	.L705
+	mov	w3, 16
+	.loc 2 1136 0
+	mov	w4, 65535
+.L707:
+	.loc 2 1134 0
+	ldr	x0, [x19, 3968]
+	.loc 2 1135 0
+	mov	w2, 1
+	stp	w4, w3, [x29, 104]
+	.loc 2 1134 0
+	add	x0, x0, x23
+	ldr	w1, [x0, 4]
+	add	w1, w1, 1
+	str	w1, [x0, 4]
+	.loc 2 1135 0
+	mov	w1, w2
+	ldr	x0, [x19, 3968]
+	add	x0, x0, x23
+	bl	FlashReadPages
+.LVL734:
+	.loc 2 1136 0
+	ldp	w4, w3, [x29, 104]
+	ldrh	w0, [x27]
+	cmp	w0, w4
+	.loc 2 1137 0
+	ldr	x0, [x19, 3968]
+	.loc 2 1136 0
+	bne	.L704
+	.loc 2 1137 0
+	mov	w1, -1
+	str	w1, [x0, x23]
+	.loc 2 1145 0
+	ldr	x0, [x19, 3968]
+	ldr	w0, [x0, x23]
+	cmp	w0, w1
+	bne	.L705
+.L706:
+	.loc 2 1287 0
+	mov	w1, 1
+	b	.L777
+.L704:
+	.loc 2 1139 0
+	ldr	w0, [x0, x23]
+	cmn	w0, #1
+	bne	.L705
+	sub	w3, w3, #1
+	.loc 2 1133 0 discriminator 2
+	ands	w3, w3, 65535
+	bne	.L707
+	b	.L706
+.L705:
+	.loc 2 1147 0
+	ldr	w1, [x19, 2556]
+	ldr	w0, [x27, 4]
+	cmn	w1, #1
+	beq	.L708
+	.loc 2 1147 0 is_stmt 0 discriminator 1
+	cmp	w1, w0
+	bhi	.L709
+.L708:
+	.loc 2 1149 0 is_stmt 1
+	cmn	w0, #1
+	beq	.L709
+	.loc 2 1152 0
+	add	w1, w0, 1
+	str	w1, [x19, 2556]
+.L709:
+	.loc 2 1157 0
+	ldrh	w1, [x27]
+	mov	w2, 61604
+	cmp	w1, w2
+	beq	.L711
+	bhi	.L712
+	mov	w0, 61574
+	cmp	w1, w0
+	beq	.L713
+.L710:
+	add	x23, x23, 32
+	.loc 2 1128 0 discriminator 2
+	cmp	x22, x23
+	bne	.L737
+	b	.L738
+.L712:
+	.loc 2 1157 0
+	mov	w0, 61634
+	cmp	w1, w0
+	beq	.L714
+	mov	w0, 65535
+	cmp	w1, w0
+	bne	.L710
+	.loc 2 1280 0
+	mov	w1, 0
+.L777:
+	.loc 2 1287 0
+	mov	w0, w26
+	bl	FtlFreeSysBlkQueueIn
+.LVL735:
+	b	.L710
+.L714:
+	.loc 2 1162 0
+	add	x0, x20, :lo12:.LANCHOR3
+	ldrh	w1, [x0, -176]
+	ldr	w0, [x19, 108]
+	cmp	w1, w0
+	bls	.L716
+	.loc 2 1162 0 is_stmt 0 discriminator 1
+	adrp	x0, .LC1
+	mov	w2, 1162
+	mov	x1, x25
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL736:
+.L716:
+	.loc 2 1163 0 is_stmt 1
+	add	x1, x20, :lo12:.LANCHOR3
+	ldr	w3, [x19, 108]
+	.loc 2 1165 0
+	ldr	x4, [x19, 4088]
+	.loc 2 1163 0
+	and	w2, w3, 65535
+	ldrh	w1, [x1, -176]
+	sub	w0, w2, #1
+	sxth	x0, w0
+	sub	w2, w2, w1
+	sub	w2, w2, #1
+	sxth	w2, w2
+.L717:
+	.loc 2 1163 0 is_stmt 0 discriminator 1
+	cmp	w0, w2
+	bgt	.L723
+	.loc 2 1186 0 is_stmt 1
+	tbz	w0, #31, .L757
+	b	.L710
+.L723:
+	.loc 2 1165 0
+	sxtw	x5, w0
+	ldr	w8, [x27, 4]
+	lsl	x6, x5, 2
+	ldr	w7, [x4, x6]
+	cmp	w8, w7
+	bls	.L718
+	.loc 2 1167 0
+	ldr	w2, [x4]
+	cbnz	w2, .L719
+	.loc 2 1167 0 is_stmt 0 discriminator 1
+	cmp	w3, w1
+	beq	.L719
+	.loc 2 1172 0 is_stmt 1
+	add	x2, x20, :lo12:.LANCHOR3
+	add	w1, w1, 1
+	strh	w1, [x2, -176]
+.L719:
+	mov	w1, 0
+.L720:
+	.loc 2 1175 0 discriminator 1
+	cmp	w1, w0
+	bne	.L721
+	.loc 2 1180 0
+	ldr	x1, [x19, 4088]
+	ldr	w2, [x27, 4]
+	str	w2, [x1, x6]
+	.loc 2 1181 0
+	ldr	x1, [x19, 4040]
+	strh	w26, [x1, x5, lsl 1]
+	.loc 2 1186 0
+	tbnz	w0, #31, .L710
+	.loc 2 1193 0
+	add	x1, x20, :lo12:.LANCHOR3
+	ldr	w2, [x19, 108]
+	ldrh	w1, [x1, -176]
+	sub	w2, w2, w1
+	sub	w2, w2, #1
+	cmp	w0, w2, sxth
+	bgt	.L710
+.L757:
+	.loc 2 1195 0
+	add	x2, x20, :lo12:.LANCHOR3
+	add	w1, w1, 1
+	strh	w1, [x2, -176]
+	.loc 2 1196 0
+	ldr	x1, [x19, 4088]
+	ldr	w2, [x27, 4]
+	str	w2, [x1, x0, lsl 2]
+	.loc 2 1197 0
+	ldr	x1, [x19, 4040]
+.L775:
+	.loc 2 1241 0
+	strh	w26, [x1, x0, lsl 1]
+	b	.L710
+.L721:
+	.loc 2 1177 0 discriminator 3
+	ldr	x4, [x19, 4088]
+	sxtw	x2, w1
+	lsl	x3, x2, 2
+	.loc 2 1178 0 discriminator 3
+	lsl	x2, x2, 1
+	.loc 2 1177 0 discriminator 3
+	add	x7, x4, x3
+	add	w1, w1, 1
+	sxth	w1, w1
+	ldr	w7, [x7, 4]
+	str	w7, [x4, x3]
+	.loc 2 1178 0 discriminator 3
+	ldr	x3, [x19, 4040]
+	add	x4, x3, x2
+	ldrh	w4, [x4, 2]
+	strh	w4, [x3, x2]
+	b	.L720
+.L718:
+	sub	w0, w0, #1
+	sxth	x0, w0
+	b	.L717
+.L713:
+	.loc 2 1203 0
+	ldrh	w1, [x19, 124]
+	ldrh	w0, [x19, 100]
+	cmp	w1, w0
+	bls	.L726
+	.loc 2 1203 0 is_stmt 0 discriminator 1
+	adrp	x0, .LC1
+	mov	w2, 1203
+	mov	x1, x25
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL737:
+.L726:
+	.loc 2 1204 0 is_stmt 1
+	ldrh	w3, [x19, 100]
+	ldrh	w1, [x19, 124]
+	sub	w2, w3, #1
+	.loc 2 1206 0
+	ldr	x4, [x19, 4064]
+	.loc 2 1204 0
+	sxth	x0, w2
+	sub	w2, w2, w1
+.L727:
+	.loc 2 1204 0 is_stmt 0 discriminator 1
+	cmp	w0, w2
+	ble	.L732
+	.loc 2 1206 0 is_stmt 1
+	sxtw	x5, w0
+	ldr	w8, [x27, 4]
+	lsl	x6, x5, 2
+	ldr	w7, [x4, x6]
+	cmp	w8, w7
+	bls	.L728
+	.loc 2 1208 0
+	ldr	w2, [x4]
+	cbnz	w2, .L729
+	.loc 2 1208 0 is_stmt 0 discriminator 1
+	cmp	w3, w1
+	beq	.L729
+	.loc 2 1216 0 is_stmt 1
+	add	w1, w1, 1
+	strh	w1, [x19, 124]
+.L729:
+	mov	w1, 0
+.L730:
+	.loc 2 1218 0 discriminator 1
+	cmp	w1, w0
+	bne	.L731
+	.loc 2 1223 0
+	ldr	x1, [x19, 4064]
+	ldr	w2, [x27, 4]
+	str	w2, [x1, x6]
+	.loc 2 1224 0
+	ldr	x1, [x19, 128]
+	strh	w26, [x1, x5, lsl 1]
+.L732:
+	.loc 2 1229 0
+	tbnz	w0, #31, .L710
+	.loc 2 1237 0
+	ldrh	w1, [x19, 100]
+	ldrh	w2, [x19, 124]
+	sub	w1, w1, #1
+	sub	w1, w1, w2
+	cmp	w0, w1, sxth
+	bgt	.L710
+	.loc 2 1240 0
+	ldr	x1, [x19, 4064]
+	.loc 2 1239 0
+	add	w2, w2, 1
+	strh	w2, [x19, 124]
+	.loc 2 1240 0
+	ldr	w2, [x27, 4]
+	str	w2, [x1, x0, lsl 2]
+	.loc 2 1241 0
+	ldr	x1, [x19, 128]
+	b	.L775
+.L731:
+	.loc 2 1220 0 discriminator 3
+	ldr	x4, [x19, 4064]
+	sxtw	x2, w1
+	lsl	x3, x2, 2
+	.loc 2 1221 0 discriminator 3
+	lsl	x2, x2, 1
+	.loc 2 1220 0 discriminator 3
+	add	x7, x4, x3
+	add	w1, w1, 1
+	sxth	w1, w1
+	ldr	w7, [x7, 4]
+	str	w7, [x4, x3]
+	.loc 2 1221 0 discriminator 3
+	ldr	x3, [x19, 128]
+	add	x4, x3, x2
+	ldrh	w4, [x4, 2]
+	strh	w4, [x3, x2]
+	b	.L730
+.L728:
+	sub	w0, w0, #1
+	sxth	x0, w0
+	b	.L727
+.L711:
+	.loc 2 1248 0
+	ldrh	w2, [x28]
+	mov	w1, 65535
+	cmp	w2, w1
+	bne	.L734
+	.loc 2 1250 0
+	strh	w26, [x28]
+.L776:
+	.loc 2 1261 0
+	str	w0, [x28, 8]
+	b	.L710
+.L734:
+	.loc 2 1255 0
+	ldrh	w0, [x28, 4]
+	cmp	w0, w1
+	beq	.L735
+	.loc 2 1256 0
+	mov	w1, 1
+	bl	FtlFreeSysBlkQueueIn
+.LVL738:
+.L735:
+	.loc 2 1257 0
+	ldr	w0, [x27, 4]
+	ldr	w1, [x28, 8]
+	cmp	w1, w0
+	bcs	.L736
+	.loc 2 1259 0
+	ldrh	w0, [x28]
+	strh	w0, [x28, 4]
+	.loc 2 1260 0
+	strh	w26, [x28]
+	.loc 2 1261 0
+	ldr	w0, [x27, 4]
+	b	.L776
+.L736:
+	.loc 2 1265 0
+	strh	w26, [x28, 4]
+	b	.L710
+.LVL739:
+.L739:
+	.loc 2 1292 0
+	ldr	x1, [x19, 4040]
+	ldrh	w0, [x1]
+	cbz	w0, .L741
+.L744:
+	.loc 2 1310 0
+	add	x0, x21, :lo12:.LANCHOR0
+	ldr	x1, [x0, 128]
+	ldrh	w2, [x1]
+	cbz	w2, .L742
+.L743:
+	.loc 2 1328 0
+	add	x20, x20, :lo12:.LANCHOR3
+	add	x21, x21, :lo12:.LANCHOR0
+	ldrh	w1, [x20, -176]
+	ldr	w0, [x21, 108]
+	cmp	w1, w0
+	bls	.L773
+	.loc 2 1328 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 1328
+	add	x1, x1, 368
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL740:
+.L773:
+	.loc 2 1330 0 is_stmt 1
+	ldp	x19, x20, [sp, 16]
+	mov	w0, 0
+	ldp	x21, x22, [sp, 32]
+.LVL741:
+	ldp	x23, x24, [sp, 48]
+.LVL742:
+	ldp	x25, x26, [sp, 64]
+	ldp	x27, x28, [sp, 80]
+.LVL743:
+	ldp	x29, x30, [sp], 112
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 28
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL744:
+.L741:
+	.cfi_restore_state
+	.loc 2 1292 0 discriminator 1
+	add	x0, x20, :lo12:.LANCHOR3
+	ldrh	w0, [x0, -176]
+	cbz	w0, .L744
+	.loc 2 1294 0 discriminator 1
+	ldr	w2, [x19, 108]
+	mov	w0, 0
+.L745:
+	cmp	w0, w2
+	bcs	.L744
+	.loc 2 1296 0
+	ldrh	w3, [x1, w0, sxtw 1]
+	cbz	w3, .L746
+	mov	w1, w0
+	.loc 2 1298 0 discriminator 1
+	add	x2, x21, :lo12:.LANCHOR0
+.L747:
+	ldr	w3, [x2, 108]
+	cmp	w1, w3
+	bcs	.L744
+	.loc 2 1300 0 discriminator 3
+	ldr	x5, [x2, 4040]
+	sxtw	x6, w1
+	lsl	x4, x6, 1
+	sub	w3, w1, w0
+	sxtw	x3, w3
+	add	w1, w1, 1
+	sxth	w1, w1
+	ldrh	w7, [x5, x4]
+	strh	w7, [x5, x3, lsl 1]
+	.loc 2 1301 0 discriminator 3
+	ldr	x5, [x2, 4088]
+	ldr	w6, [x5, x6, lsl 2]
+	str	w6, [x5, x3, lsl 2]
+	.loc 2 1302 0 discriminator 3
+	ldr	x3, [x2, 4040]
+	strh	wzr, [x3, x4]
+	b	.L747
+.L746:
+	add	w0, w0, 1
+	sxth	w0, w0
+	b	.L745
+.L742:
+	.loc 2 1310 0 discriminator 1
+	ldrh	w2, [x0, 124]
+	cbz	w2, .L743
+	.loc 2 1312 0 discriminator 1
+	ldrh	w2, [x0, 100]
+	mov	w0, 0
+.L752:
+	mov	w6, w0
+	cmp	w0, w2
+	bge	.L743
+	.loc 2 1314 0
+	ldrh	w3, [x1, w0, sxtw 1]
+	cbz	w3, .L753
+	.loc 2 1316 0 discriminator 1
+	add	x1, x21, :lo12:.LANCHOR0
+.L754:
+	ldrh	w2, [x1, 100]
+	cmp	w0, w2
+	bge	.L743
+	.loc 2 1318 0 discriminator 3
+	ldr	x4, [x1, 128]
+	sxtw	x5, w0
+	lsl	x3, x5, 1
+	sub	w2, w0, w6
+	sxtw	x2, w2
+	add	w0, w0, 1
+	sxth	w0, w0
+	ldrh	w7, [x4, x3]
+	strh	w7, [x4, x2, lsl 1]
+	.loc 2 1319 0 discriminator 3
+	ldr	x4, [x1, 4064]
+	ldr	w5, [x4, x5, lsl 2]
+	str	w5, [x4, x2, lsl 2]
+	.loc 2 1320 0 discriminator 3
+	ldr	x2, [x1, 128]
+	strh	wzr, [x2, x3]
+	b	.L754
+.L753:
+	add	w0, w0, 1
+	sxth	w0, w0
+	b	.L752
+	.cfi_endproc
+.LFE209:
+	.size	FtlScanSysBlk, .-FtlScanSysBlk
+	.align	2
+	.global	FtlMapTblRecovery
+	.type	FtlMapTblRecovery, %function
+FtlMapTblRecovery:
+.LFB214:
+	.loc 2 1466 0
+	.cfi_startproc
+.LVL745:
+	stp	x29, x30, [sp, -128]!
+	.cfi_def_cfa_offset 128
+	.cfi_offset 29, -128
+	.cfi_offset 30, -120
+	.loc 2 1477 0
+	mov	w1, 0
+	.loc 2 1466 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -112
+	.cfi_offset 20, -104
+	mov	x19, x0
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -96
+	.cfi_offset 22, -88
+	.loc 2 1478 0
+	adrp	x21, .LANCHOR0
+	.loc 2 1466 0
+	stp	x25, x26, [sp, 64]
+	stp	x27, x28, [sp, 80]
+	.cfi_offset 25, -64
+	.cfi_offset 26, -56
+	.cfi_offset 27, -48
+	.cfi_offset 28, -40
+	.loc 2 1486 0
+	mov	w27, 0
+.LVL746:
+	.loc 2 1466 0
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -80
+	.cfi_offset 24, -72
+	.loc 2 1473 0
+	ldrh	w24, [x0, 6]
+.LVL747:
+	.loc 2 1470 0
+	ldr	x0, [x0, 40]
+.LVL748:
+	str	x0, [x29, 120]
+	.loc 2 1474 0
+	ldrh	w0, [x19, 8]
+.LVL749:
+	.loc 2 1477 0
+	lsl	w2, w24, 2
+	.loc 2 1474 0
+	str	w0, [x29, 116]
+	.loc 2 1477 0
+	ldr	x0, [x29, 120]
+.LVL750:
+	.loc 2 1472 0
+	ldp	x23, x26, [x19, 16]
+.LVL751:
+	.loc 2 1477 0
+	bl	ftl_memset
+.LVL752:
+	.loc 2 1483 0
+	stp	wzr, wzr, [x19, 48]
+	.loc 2 1478 0
+	add	x3, x21, :lo12:.LANCHOR0
+	add	x20, x3, 3360
+	.loc 2 1510 0
+	mov	x25, x3
+	.loc 2 1478 0
+	ldr	x0, [x3, 2288]
+	.loc 2 1479 0
+	ldr	x22, [x3, 3392]
+	stp	x0, x22, [x20, 8]
+	.loc 2 1481 0
+	mov	w0, -1
+	strh	w0, [x19]
+	.loc 2 1482 0
+	strh	w0, [x19, 2]
+	.loc 2 1485 0
+	mov	w0, 1
+	str	w0, [x19, 56]
+	.loc 2 1488 0
+	ldr	w0, [x29, 116]
+.LVL753:
+	sub	w0, w0, #1
+.LVL754:
+	str	w0, [x29, 112]
+.LVL755:
+.L779:
+	.loc 2 1486 0 discriminator 1
+	ldr	w0, [x29, 116]
+.LVL756:
+	cmp	w27, w0
+	bge	.L796
+	.loc 2 1488 0
+	ldr	w0, [x29, 112]
+.LVL757:
+	sxtw	x28, w27
+.LVL758:
+	cmp	w27, w0
+	bne	.L780
+	.loc 2 1490 0
+	lsl	x0, x28, 1
+	mov	w1, 1
+	add	x20, x23, x0
+	.loc 2 1496 0
+	add	x25, x21, :lo12:.LANCHOR0
+	add	x25, x25, 3360
+	.loc 2 1490 0
+	ldrh	w0, [x23, x0]
+	.loc 2 1494 0
+	mov	w23, 0
+.LVL759:
+	.loc 2 1490 0
+	bl	FtlGetLastWrittenPage
+.LVL760:
+	.loc 2 1492 0
+	strh	w27, [x19]
+	.loc 2 1490 0
+	sxth	w1, w0
+.LVL761:
+	.loc 2 1491 0
+	add	w0, w0, 1
+	strh	w0, [x19, 2]
+	.loc 2 1493 0
+	ldr	w0, [x26, x28, lsl 2]
+	.loc 2 1494 0
+	add	w26, w1, 1
+.LVL762:
+	.loc 2 1493 0
+	str	w0, [x19, 48]
+.LVL763:
+.L781:
+	.loc 2 1494 0 discriminator 1
+	cmp	w23, w26
+	blt	.L783
+.LVL764:
+.L796:
+	.loc 2 1548 0
+	add	x21, x21, :lo12:.LANCHOR0
+	.loc 2 1547 0
+	mov	x0, x19
+.LVL765:
+	bl	ftl_free_no_use_map_blk
+.LVL766:
+	.loc 2 1548 0
+	ldrh	w1, [x19, 2]
+	ldrh	w0, [x21, 84]
+	cmp	w1, w0
+	bne	.L785
+	.loc 2 1550 0
+	mov	x0, x19
+	bl	ftl_map_blk_alloc_new_blk
+.LVL767:
+.L785:
+	.loc 2 1553 0
+	mov	x0, x19
+	bl	ftl_map_blk_gc
+.LVL768:
+	.loc 2 1555 0
+	mov	x0, x19
+	bl	ftl_map_blk_gc
+.LVL769:
+	.loc 2 1557 0
+	mov	w0, 0
+	ldp	x19, x20, [sp, 16]
+.LVL770:
+	ldp	x21, x22, [sp, 32]
+	ldp	x23, x24, [sp, 48]
+.LVL771:
+	ldp	x25, x26, [sp, 64]
+.LVL772:
+	ldp	x27, x28, [sp, 80]
+.LVL773:
+	ldp	x29, x30, [sp], 128
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 28
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL774:
+.L783:
+	.cfi_restore_state
+	.loc 2 1496 0
+	ldrh	w0, [x20]
+	.loc 2 1497 0
+	mov	w2, 1
+.LVL775:
+	mov	w1, w2
+.LVL776:
+	.loc 2 1496 0
+	orr	w0, w23, w0, lsl 10
+	str	w0, [x25, 4]
+	.loc 2 1497 0
+	mov	x0, x25
+	bl	FlashReadPages
+.LVL777:
+	.loc 2 1500 0
+	ldr	w0, [x25]
+	cmn	w0, #1
+	beq	.L782
+	.loc 2 1502 0
+	ldrh	w0, [x22, 8]
+	cmp	w24, w0
+	bls	.L782
+	.loc 2 1502 0 is_stmt 0 discriminator 1
+	ldrh	w2, [x22]
+	ldrh	w1, [x19, 4]
+	cmp	w2, w1
+	bne	.L782
+	.loc 2 1504 0 is_stmt 1
+	ldr	x2, [x29, 120]
+.LVL778:
+	ubfiz	x0, x0, 2, 16
+	ldr	w1, [x25, 4]
+	str	w1, [x2, x0]
+.L782:
+	add	w23, w23, 1
+	sxth	w23, w23
+	b	.L781
+.LVL779:
+.L780:
+	.loc 2 1510 0
+	ldr	x0, [x25, 2288]
+	.loc 2 1512 0
+	mov	w2, 1
+	.loc 2 1510 0
+	str	x0, [x20, 8]
+	.loc 2 1511 0
+	lsl	x0, x28, 1
+	ldrh	w1, [x25, 84]
+	add	x28, x23, x0
+.LVL780:
+	ldrh	w0, [x23, x0]
+	sub	w1, w1, #1
+	orr	w0, w1, w0, lsl 10
+	.loc 2 1512 0
+	mov	w1, w2
+	.loc 2 1511 0
+	str	w0, [x20, 4]
+	.loc 2 1512 0
+	mov	x0, x20
+	bl	FlashReadPages
+.LVL781:
+	.loc 2 1515 0
+	ldr	w0, [x20]
+	cmn	w0, #1
+	beq	.L798
+	.loc 2 1515 0 is_stmt 0 discriminator 1
+	ldrh	w1, [x22]
+	ldrh	w0, [x19, 4]
+	cmp	w1, w0
+	bne	.L798
+	.loc 2 1515 0 discriminator 2
+	ldrh	w1, [x22, 8]
+	mov	w0, 64245
+	cmp	w1, w0
+	beq	.L787
+.L798:
+	mov	w5, 0
+.LVL782:
+.L788:
+	.loc 2 1530 0 is_stmt 1 discriminator 1
+	ldrh	w0, [x25, 84]
+	cmp	w5, w0
+	bge	.L794
+	.loc 2 1532 0
+	ldrh	w0, [x28]
+	.loc 2 1533 0
+	mov	w2, 1
+.LVL783:
+	.loc 2 1532 0
+	str	w5, [x29, 108]
+	.loc 2 1533 0
+	mov	w1, w2
+	.loc 2 1532 0
+	orr	w0, w5, w0, lsl 10
+	str	w0, [x20, 4]
+	.loc 2 1533 0
+	mov	x0, x20
+	bl	FlashReadPages
+.LVL784:
+	.loc 2 1536 0
+	ldr	w0, [x20]
+	ldr	w5, [x29, 108]
+	cmn	w0, #1
+	beq	.L792
+	.loc 2 1538 0
+	ldrh	w0, [x22, 8]
+	cmp	w24, w0
+	bls	.L792
+	.loc 2 1538 0 is_stmt 0 discriminator 1
+	ldrh	w2, [x22]
+	ldrh	w1, [x19, 4]
+	cmp	w2, w1
+	bne	.L792
+	.loc 2 1540 0 is_stmt 1
+	ldr	x2, [x29, 120]
+.LVL785:
+	ubfiz	x0, x0, 2, 16
+	ldr	w1, [x20, 4]
+	str	w1, [x2, x0]
+.L792:
+	add	w5, w5, 1
+	sxth	w5, w5
+	b	.L788
+.LVL786:
+.L787:
+	mov	w0, 0
+.LVL787:
+.L789:
+	.loc 2 1518 0 discriminator 1
+	ldrh	w1, [x25, 84]
+.LVL788:
+	sub	w1, w1, #1
+	cmp	w0, w1
+	blt	.L791
+.L794:
+	add	w4, w27, 1
+	sxth	w27, w4
+	b	.L779
+.L791:
+	.loc 2 1520 0
+	ldr	x2, [x25, 2288]
+	sbfiz	x5, x0, 3, 32
+	ldrh	w1, [x2, x5]
+.LVL789:
+	.loc 2 1521 0
+	cmp	w24, w1
+	bls	.L790
+	.loc 2 1523 0
+	add	x2, x2, x5
+	ldr	x3, [x29, 120]
+	ubfiz	x1, x1, 2, 16
+.LVL790:
+	ldr	w2, [x2, 4]
+	str	w2, [x3, x1]
+.LVL791:
+.L790:
+	add	w0, w0, 1
+	sxth	w0, w0
+	b	.L789
+	.cfi_endproc
+.LFE214:
+	.size	FtlMapTblRecovery, .-FtlMapTblRecovery
+	.align	2
+	.global	FtlLoadVonderInfo
+	.type	FtlLoadVonderInfo, %function
+FtlLoadVonderInfo:
+.LFB215:
+	.loc 2 1560 0
+	.cfi_startproc
+	.loc 2 1561 0
+	adrp	x1, .LANCHOR0
+	add	x1, x1, :lo12:.LANCHOR0
+	.loc 2 1560 0
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	.loc 2 1561 0
+	adrp	x0, .LANCHOR3
+	add	x0, x0, :lo12:.LANCHOR3
+	.loc 2 1560 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 2 1561 0
+	ldrh	w2, [x1, 100]
+	strh	w2, [x0, -158]
+	.loc 2 1562 0
+	mov	w2, -3962
+	strh	w2, [x0, -164]
+	.loc 2 1563 0
+	ldrh	w2, [x1, 124]
+	strh	w2, [x0, -160]
+	.loc 2 1564 0
+	ldrh	w2, [x1, 102]
+	strh	w2, [x0, -162]
+	.loc 2 1565 0
+	ldr	x2, [x1, 128]
+	str	x2, [x0, -152]
+	.loc 2 1566 0
+	ldr	x2, [x1, 4064]
+	str	x2, [x0, -144]
+	.loc 2 1567 0
+	ldr	x2, [x1, 4056]
+	.loc 2 1568 0
+	ldr	x1, [x1, 4072]
+	stp	x2, x1, [x0, -136]
+	.loc 2 1570 0
+	sub	x0, x0, #168
+	bl	FtlMapTblRecovery
+.LVL792:
+	.loc 2 1573 0
+	mov	w0, 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE215:
+	.size	FtlLoadVonderInfo, .-FtlLoadVonderInfo
+	.align	2
+	.global	FtlL2PDataInit
+	.type	FtlL2PDataInit, %function
+FtlL2PDataInit:
+.LFB216:
+	.loc 2 1576 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -48]!
+	.cfi_def_cfa_offset 48
+	.cfi_offset 29, -48
+	.cfi_offset 30, -40
+	.loc 2 1578 0
+	adrp	x0, .LANCHOR0
+	mov	w1, 0
+	.loc 2 1576 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -32
+	.cfi_offset 20, -24
+	.loc 2 1578 0
+	add	x19, x0, :lo12:.LANCHOR0
+	.loc 2 1576 0
+	str	x21, [sp, 32]
+	.cfi_offset 21, -16
+	.loc 2 1579 0
+	adrp	x20, .LANCHOR3
+	add	x21, x20, :lo12:.LANCHOR3
+	.loc 2 1578 0
+	ldr	x0, [x19, 4048]
+	ldr	w2, [x19, 108]
+	lsl	w2, w2, 1
+	bl	ftl_memset
+.LVL793:
+	.loc 2 1579 0
+	ldrh	w0, [x19, 118]
+	mov	w1, 255
+	ldrh	w2, [x19, 90]
+	mul	w2, w2, w0
+	ldr	x0, [x21, -256]
+	bl	ftl_memset
+.LVL794:
+	.loc 2 1580 0
+	mov	x0, x19
+	mov	w1, 0
+.LVL795:
+	.loc 2 1583 0
+	mov	w5, -1
+.L809:
+	.loc 2 1580 0 discriminator 1
+	ldrh	w2, [x0, 118]
+	cmp	w2, w1
+	bhi	.L810
+	.loc 2 1586 0
+	add	x1, x20, :lo12:.LANCHOR3
+.LVL796:
+	mov	w2, -1
+	strh	w2, [x1, -238]
+	.loc 2 1587 0
+	strh	w2, [x1, -240]
+	.loc 2 1588 0
+	ldr	w2, [x0, 108]
+	strh	w2, [x1, -230]
+	.loc 2 1589 0
+	mov	w2, -3902
+	strh	w2, [x1, -236]
+	.loc 2 1590 0
+	ldrh	w2, [x1, -176]
+	strh	w2, [x1, -232]
+	.loc 2 1591 0
+	ldrh	w2, [x0, 116]
+	strh	w2, [x1, -234]
+	.loc 2 1592 0
+	ldr	x2, [x0, 4040]
+	str	x2, [x1, -224]
+	.loc 2 1593 0
+	ldr	x2, [x0, 4088]
+	str	x2, [x1, -216]
+	.loc 2 1594 0
+	ldr	x2, [x0, 4048]
+	.loc 2 1595 0
+	ldr	x0, [x0, 4080]
+	stp	x2, x0, [x1, -208]
+	.loc 2 1596 0
+	ldp	x19, x20, [sp, 16]
+	ldr	x21, [sp, 32]
+	ldp	x29, x30, [sp], 48
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 21
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL797:
+.L810:
+	.cfi_restore_state
+	.loc 2 1582 0 discriminator 3
+	ldr	x3, [x0, 2504]
+	ubfiz	x2, x1, 4, 16
+	add	x3, x3, x2
+	str	wzr, [x3, 4]
+	.loc 2 1583 0 discriminator 3
+	ldr	x3, [x0, 2504]
+	strh	w5, [x3, x2]
+	.loc 2 1584 0 discriminator 3
+	ldr	x3, [x0, 2504]
+	ldr	x4, [x21, -256]
+	add	x3, x3, x2
+	ldrh	w2, [x0, 90]
+	mul	w2, w2, w1
+	.loc 2 1580 0 discriminator 3
+	add	w1, w1, 1
+.LVL798:
+	and	w1, w1, 65535
+.LVL799:
+	.loc 2 1584 0 discriminator 3
+	sxtw	x2, w2
+	and	x2, x2, -4
+	add	x2, x4, x2
+	str	x2, [x3, 8]
+	b	.L809
+	.cfi_endproc
+.LFE216:
+	.size	FtlL2PDataInit, .-FtlL2PDataInit
+	.align	2
+	.global	FtlLoadMapInfo
+	.type	FtlLoadMapInfo, %function
+FtlLoadMapInfo:
+.LFB217:
+	.loc 2 1599 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 2 1600 0
+	bl	FtlL2PDataInit
+.LVL800:
+	.loc 2 1602 0
+	adrp	x0, .LANCHOR3
+	add	x0, x0, :lo12:.LANCHOR3
+	sub	x0, x0, #240
+	bl	FtlMapTblRecovery
+.LVL801:
+	.loc 2 1605 0
+	mov	w0, 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE217:
+	.size	FtlLoadMapInfo, .-FtlLoadMapInfo
+	.align	2
+	.global	FtlVariablesInit
+	.type	FtlVariablesInit, %function
+FtlVariablesInit:
+.LFB146:
+	.loc 3 493 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	.loc 3 496 0
+	adrp	x0, .LANCHOR3
+	add	x0, x0, :lo12:.LANCHOR3
+	.loc 3 497 0
+	mov	w1, -1
+	.loc 3 493 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	str	x19, [sp, 16]
+	.cfi_offset 19, -16
+	.loc 3 501 0
+	adrp	x19, .LANCHOR0
+	add	x19, x19, :lo12:.LANCHOR0
+	.loc 3 497 0
+	strh	w1, [x0, -96]
+	.loc 3 496 0
+	str	xzr, [x0, -104]
+	.loc 3 500 0
+	mov	w1, -1
+	.loc 3 499 0
+	stp	wzr, wzr, [x0, -92]
+	.loc 3 500 0
+	str	w1, [x0, -84]
+	.loc 3 502 0
+	mov	w1, 0
+	ldr	x0, [x19, 128]
+	ldrh	w2, [x19, 100]
+	.loc 3 501 0
+	strh	wzr, [x19, 124]
+	.loc 3 502 0
+	lsl	w2, w2, 1
+	bl	ftl_memset
+.LVL802:
+	.loc 3 503 0
+	ldr	x0, [x19, 2296]
+	mov	w1, 0
+	ldrh	w2, [x19, 22]
+	lsl	w2, w2, 1
+	bl	ftl_memset
+.LVL803:
+	.loc 3 504 0
+	ldr	x0, [x19, 4016]
+	mov	w1, 0
+	ldrh	w2, [x19, 22]
+	lsl	w2, w2, 1
+	bl	ftl_memset
+.LVL804:
+	.loc 3 505 0
+	mov	w2, 48
+	mov	w1, 0
+	add	x0, x19, 2592
+	bl	ftl_memset
+.LVL805:
+	.loc 3 506 0
+	mov	w2, 512
+	mov	w1, 0
+	add	x0, x19, 2712
+	bl	ftl_memset
+.LVL806:
+	.loc 3 507 0
+	bl	FtlGcBufInit
+.LVL807:
+	.loc 3 508 0
+	bl	FtlL2PDataInit
+.LVL808:
+	.loc 3 510 0
+	ldr	x19, [sp, 16]
+	mov	w0, 0
+	ldp	x29, x30, [sp], 32
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE146:
+	.size	FtlVariablesInit, .-FtlVariablesInit
+	.align	2
+	.global	SupperBlkListInit
+	.type	SupperBlkListInit, %function
+SupperBlkListInit:
+.LFB224:
+	.loc 2 2067 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -64]!
+	.cfi_def_cfa_offset 64
+	.cfi_offset 29, -64
+	.cfi_offset 30, -56
+	.loc 2 2071 0
+	mov	w0, 6
+	mov	w1, 0
+	.loc 2 2067 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -48
+	.cfi_offset 20, -40
+	.loc 2 2071 0
+	adrp	x19, .LANCHOR0
+	add	x19, x19, :lo12:.LANCHOR0
+	.loc 2 2067 0
+	str	x23, [sp, 48]
+	.cfi_offset 23, -16
+	.loc 2 2082 0
+	add	x23, x19, 40
+	.loc 2 2067 0
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -32
+	.cfi_offset 22, -24
+	.loc 2 2079 0
+	mov	w20, 0
+.LVL809:
+	.loc 2 2077 0
+	mov	w22, 0
+.LVL810:
+	.loc 2 2071 0
+	ldrh	w2, [x19, 22]
+	.loc 2 2077 0
+	mov	w21, 0
+.LVL811:
+	.loc 2 2071 0
+	mul	w2, w2, w0
+	ldr	x0, [x19, 2304]
+	bl	ftl_memset
+.LVL812:
+	.loc 2 2075 0
+	strh	wzr, [x19, 2336]
+	.loc 2 2076 0
+	strh	wzr, [x19, 2352]
+	.loc 2 2073 0
+	str	xzr, [x19, 2312]
+	.loc 2 2074 0
+	str	xzr, [x19, 2328]
+	.loc 2 2072 0
+	str	xzr, [x19, 2344]
+.L817:
+	.loc 2 2079 0 discriminator 1
+	ldrh	w0, [x19, 20]
+	cmp	w20, w0
+	bcs	.L823
+	.loc 2 2081 0
+	ldrh	w8, [x19, 12]
+	.loc 2 2084 0
+	mov	x6, 0
+	ldrh	w7, [x19, 82]
+	mov	w5, 0
+	b	.L824
+.L819:
+	.loc 2 2082 0
+	ldrb	w0, [x23, x6]
+	mov	w1, w20
+	bl	V2P_block
+.LVL813:
+	.loc 2 2083 0
+	bl	FtlBbmIsBadBlock
+.LVL814:
+	cbnz	w0, .L818
+	.loc 2 2084 0
+	add	w5, w5, w7
+	and	w5, w5, 65535
+.L818:
+	add	x6, x6, 1
+.L824:
+	.loc 2 2081 0 discriminator 1
+	cmp	w8, w6, uxth
+	bhi	.L819
+	.loc 2 2086 0
+	cbz	w5, .L826
+	.loc 2 2087 0
+	mov	w0, 32768
+	sdiv	w5, w0, w5
+.L820:
+	.loc 2 2088 0
+	ldr	x1, [x19, 2304]
+	mov	w0, 6
+	umaddl	x0, w20, w0, x1
+	strh	w5, [x0, 4]
+	.loc 2 2090 0
+	ldrh	w0, [x19, 2360]
+	cmp	w0, w20
+	beq	.L821
+	.loc 2 2090 0 is_stmt 0 discriminator 1
+	ldrh	w0, [x19, 2408]
+	cmp	w0, w20
+	beq	.L821
+	.loc 2 2091 0 is_stmt 1
+	ldrh	w0, [x19, 2456]
+	cmp	w0, w20
+	beq	.L821
+	.loc 2 2094 0
+	ldr	x1, [x19, 2320]
+	ubfiz	x0, x20, 1, 16
+	ldrh	w0, [x1, x0]
+	cbnz	w0, .L822
+	.loc 2 2095 0
+	add	w22, w22, 1
+.LVL815:
+	.loc 2 2096 0
+	mov	w0, w20
+	.loc 2 2095 0
+	and	w22, w22, 65535
+.LVL816:
+	.loc 2 2096 0
+	bl	INSERT_FREE_LIST
+.LVL817:
+.L821:
+	.loc 2 2079 0 discriminator 2
+	add	w20, w20, 1
+.LVL818:
+	and	w20, w20, 65535
+.LVL819:
+	b	.L817
+.L826:
+	mov	w5, 0
+	b	.L820
+.L822:
+	.loc 2 2098 0
+	add	w21, w21, 1
+.LVL820:
+	.loc 2 2099 0
+	mov	w0, w20
+	.loc 2 2098 0
+	and	w21, w21, 65535
+.LVL821:
+	.loc 2 2099 0
+	bl	INSERT_DATA_LIST
+.LVL822:
+	b	.L821
+.L823:
+	.loc 2 2103 0
+	strh	w21, [x19, 2336]
+	.loc 2 2105 0
+	add	w21, w21, w22
+.LVL823:
+	.loc 2 2104 0
+	strh	w22, [x19, 2352]
+	.loc 2 2105 0
+	cmp	w21, w0
+	ble	.L825
+	.loc 2 2105 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 2105
+	add	x1, x1, 384
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL824:
+.L825:
+	.loc 2 2107 0 is_stmt 1
+	mov	w0, 0
+	ldr	x23, [sp, 48]
+	ldp	x19, x20, [sp, 16]
+.LVL825:
+	ldp	x21, x22, [sp, 32]
+.LVL826:
+	ldp	x29, x30, [sp], 64
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 23
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE224:
+	.size	SupperBlkListInit, .-SupperBlkListInit
+	.align	2
+	.global	ftl_check_vpc
+	.type	ftl_check_vpc, %function
+ftl_check_vpc:
+.LFB229:
+	.loc 2 2223 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -128]!
+	.cfi_def_cfa_offset 128
+	.cfi_offset 29, -128
+	.cfi_offset 30, -120
+	.loc 2 2229 0
+	adrp	x0, .LC87
+	add	x0, x0, :lo12:.LC87
+	.loc 2 2223 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -112
+	.cfi_offset 20, -104
+	.loc 2 2232 0
+	adrp	x20, .LANCHOR0
+	.loc 2 2223 0
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -80
+	.cfi_offset 24, -72
+	.loc 2 2232 0
+	add	x24, x20, :lo12:.LANCHOR0
+	.loc 2 2223 0
+	stp	x21, x22, [sp, 32]
+	.loc 2 2232 0
+	mov	w23, 0
+.LVL827:
+	.cfi_offset 21, -96
+	.cfi_offset 22, -88
+	.loc 2 2229 0
+	adrp	x21, .LANCHOR1
+	add	x1, x21, :lo12:.LANCHOR1
+	add	x1, x1, 408
+	.loc 2 2223 0
+	stp	x25, x26, [sp, 64]
+	stp	x27, x28, [sp, 80]
+	.cfi_offset 25, -64
+	.cfi_offset 26, -56
+	.cfi_offset 27, -48
+	.cfi_offset 28, -40
+	.loc 2 2231 0
+	adrp	x22, check_vpc_table
+	.loc 2 2229 0
+	bl	printk
+.LVL828:
+	.loc 2 2231 0
+	add	x19, x22, :lo12:check_vpc_table
+	mov	w2, 8192
+	mov	w1, 0
+	mov	x0, x19
+	bl	ftl_memset
+.LVL829:
+.L829:
+	.loc 2 2232 0 discriminator 1
+	ldr	w0, [x24, 2520]
+	cmp	w23, w0
+	bcc	.L831
+	.loc 2 2247 0 discriminator 1
+	adrp	x25, .LC88
+	.loc 2 2243 0 discriminator 1
+	add	x23, x20, :lo12:.LANCHOR0
+.LVL830:
+	.loc 2 2245 0 discriminator 1
+	add	x26, x22, :lo12:check_vpc_table
+	.loc 2 2247 0 discriminator 1
+	add	x25, x25, :lo12:.LC88
+	mov	w24, 0
+.LVL831:
+	mov	w19, 0
+	.loc 2 2248 0 discriminator 1
+	mov	w4, 65535
+.L832:
+	.loc 2 2243 0 discriminator 1
+	ldrh	w0, [x23, 20]
+	cmp	w0, w19
+	bhi	.L834
+	.loc 2 2255 0
+	ldr	x19, [x23, 2344]
+	cbz	x19, .L835
+.LBB236:
+	.loc 2 2258 0
+	ldr	x0, [x23, 2304]
+	.loc 2 2263 0
+	adrp	x25, .LC89
+	.loc 2 2261 0
+	add	x20, x20, :lo12:.LANCHOR0
+	.loc 2 2263 0
+	add	x22, x22, :lo12:check_vpc_table
+	.loc 2 2258 0
+	sub	x19, x19, x0
+	mov	x0, -6148914691236517206
+	asr	x19, x19, 1
+	movk	x0, 0xaaab, lsl 0
+	.loc 2 2263 0
+	add	x25, x25, :lo12:.LC89
+	.loc 2 2257 0
+	ldrh	w26, [x23, 2352]
+.LVL832:
+	.loc 2 2266 0
+	mov	w27, 6
+	.loc 2 2259 0
+	mov	w23, 0
+	.loc 2 2258 0
+	mul	x19, x19, x0
+	and	w19, w19, 65535
+.L836:
+	.loc 2 2259 0 discriminator 1
+	cmp	w23, w26
+	bne	.L838
+.L835:
+.LBE236:
+	.loc 2 2271 0
+	cbz	w24, .L828
+	.loc 2 2271 0 is_stmt 0 discriminator 1
+	add	x1, x21, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 2271
+	add	x1, x1, 408
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL833:
+.L828:
+	.loc 2 2272 0 is_stmt 1
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+	ldp	x23, x24, [sp, 48]
+.LVL834:
+	ldp	x25, x26, [sp, 64]
+.LVL835:
+	ldp	x27, x28, [sp, 80]
+	ldp	x29, x30, [sp], 128
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 28
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL836:
+.L831:
+	.cfi_restore_state
+	.loc 2 2234 0
+	mov	w2, 0
+	add	x1, x29, 124
+	mov	w0, w23
+	bl	log2phys
+.LVL837:
+	.loc 2 2235 0
+	ldr	w0, [x29, 124]
+	cmn	w0, #1
+	beq	.L830
+	.loc 2 2237 0
+	lsr	w0, w0, 10
+	bl	P2V_block_in_plane
+.LVL838:
+	.loc 2 2238 0
+	and	x0, x0, 65535
+	ldrh	w1, [x19, x0, lsl 1]
+	add	w1, w1, 1
+	strh	w1, [x19, x0, lsl 1]
+.L830:
+	.loc 2 2232 0 discriminator 2
+	add	w23, w23, 1
+	b	.L829
+.LVL839:
+.L834:
+	.loc 2 2245 0
+	ldr	x0, [x23, 2320]
+	ubfiz	x28, x19, 1, 16
+	sxtw	x27, w19
+	ldrh	w2, [x0, x28]
+	ldrh	w3, [x26, x27, lsl 1]
+	cmp	w2, w3
+	beq	.L833
+	str	w4, [x29, 108]
+	.loc 2 2247 0
+	mov	w1, w19
+	mov	x0, x25
+	bl	printk
+.LVL840:
+	.loc 2 2248 0
+	ldr	x0, [x23, 2320]
+	ldr	w4, [x29, 108]
+	ldrh	w0, [x0, x28]
+	cmp	w0, w4
+	beq	.L833
+	.loc 2 2248 0 is_stmt 0 discriminator 1
+	ldrh	w1, [x26, x27, lsl 1]
+	.loc 2 2250 0 is_stmt 1 discriminator 1
+	cmp	w1, w0
+	csinc	w24, w24, wzr, ls
+.L833:
+	.loc 2 2243 0 discriminator 2
+	add	w19, w19, 1
+	and	w19, w19, 65535
+	b	.L832
+.LVL841:
+.L838:
+.LBB237:
+	.loc 2 2261 0
+	ldr	x1, [x20, 2320]
+	ubfiz	x0, x19, 1, 16
+	ldrh	w2, [x1, x0]
+	cbz	w2, .L837
+	.loc 2 2263 0
+	ldrh	w3, [x22, w19, sxtw 1]
+	.loc 2 2264 0
+	mov	w24, 1
+	.loc 2 2263 0
+	mov	w1, w19
+	mov	x0, x25
+	bl	printk
+.LVL842:
+.L837:
+	.loc 2 2266 0
+	ldr	x0, [x20, 2304]
+	umull	x19, w19, w27
+	ldrh	w19, [x0, x19]
+	mov	w0, 65535
+	cmp	w19, w0
+	beq	.L835
+	.loc 2 2259 0 discriminator 2
+	add	w23, w23, 1
+	and	w23, w23, 65535
+	b	.L836
+.LBE237:
+	.cfi_endproc
+.LFE229:
+	.size	ftl_check_vpc, .-ftl_check_vpc
+	.align	2
+	.global	FtlGcPageVarInit
+	.type	FtlGcPageVarInit, %function
+FtlGcPageVarInit:
+.LFB248:
+	.loc 5 202 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	.loc 5 205 0
+	mov	w1, 255
+	.loc 5 202 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	str	x19, [sp, 16]
+	.cfi_offset 19, -16
+	.loc 5 203 0
+	adrp	x19, .LANCHOR0
+	add	x19, x19, :lo12:.LANCHOR0
+	.loc 5 205 0
+	ldr	x0, [x19, 3288]
+	ldrh	w2, [x19, 86]
+	.loc 5 203 0
+	strh	wzr, [x19, 3284]
+	.loc 5 204 0
+	strh	wzr, [x19, 3296]
+	.loc 5 205 0
+	lsl	w2, w2, 1
+	bl	ftl_memset
+.LVL843:
+	.loc 5 206 0
+	ldrh	w2, [x19, 86]
+	mov	w0, 12
+	mov	w1, 255
+	mul	w2, w2, w0
+	ldr	x0, [x19, 3304]
+	bl	ftl_memset
+.LVL844:
+	.loc 5 207 0
+	bl	FtlGcBufInit
+.LVL845:
+	.loc 5 208 0
+	ldr	x19, [sp, 16]
+	ldp	x29, x30, [sp], 32
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE248:
+	.size	FtlGcPageVarInit, .-FtlGcPageVarInit
+	.align	2
+	.global	FtlGcScanTempBlk
+	.type	FtlGcScanTempBlk, %function
+FtlGcScanTempBlk:
+.LFB249:
+	.loc 5 211 0
+	.cfi_startproc
+.LVL846:
+	stp	x29, x30, [sp, -80]!
+	.cfi_def_cfa_offset 80
+	.cfi_offset 29, -80
+	.cfi_offset 30, -72
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -48
+	.cfi_offset 22, -40
+	mov	x21, x0
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -32
+	.cfi_offset 24, -24
+	.loc 5 220 0
+	adrp	x23, .LANCHOR2
+	add	x0, x23, :lo12:.LANCHOR2
+.LVL847:
+	.loc 5 211 0
+	stp	x25, x26, [sp, 64]
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 25, -16
+	.cfi_offset 26, -8
+	.cfi_offset 19, -64
+	.cfi_offset 20, -56
+	.loc 5 211 0
+	mov	w25, w1
+	.loc 5 220 0
+	ldrh	w19, [x0, 4]
+.LVL848:
+	.loc 5 221 0
+	mov	w0, 65535
+	cmp	w19, w0
+	beq	.L872
+	.loc 5 223 0
+	cbnz	w19, .L856
+.L857:
+	.loc 5 224 0
+	bl	FtlGcPageVarInit
+.LVL849:
+	b	.L858
+.LVL850:
+.L872:
+	.loc 5 222 0
+	mov	w19, 0
+.L856:
+	.loc 5 223 0 discriminator 1
+	adrp	x0, .LANCHOR0+82
+	ldrh	w0, [x0, #:lo12:.LANCHOR0+82]
+	cmp	w0, w25
+	beq	.L857
+.L858:
+	.loc 5 235 0
+	adrp	x26, .LANCHOR0
+	.loc 5 234 0
+	add	x22, x26, :lo12:.LANCHOR0
+	.loc 5 222 0
+	mov	w24, 0
+.LVL851:
+.L866:
+	.loc 5 228 0
+	ldrh	w1, [x21]
+	mov	w0, 65535
+	.loc 5 226 0
+	strb	wzr, [x21, 8]
+	.loc 5 228 0
+	cmp	w1, w0
+	beq	.L873
+.L869:
+	.loc 5 235 0
+	add	x0, x26, :lo12:.LANCHOR0
+	add	x2, x21, 16
+	.loc 5 230 0
+	mov	w20, 0
+.LVL852:
+	.loc 5 233 0
+	mov	w9, 65535
+	.loc 5 235 0
+	mov	w5, 4
+	ldrh	w7, [x0, 90]
+	.loc 5 236 0
+	ldrh	w8, [x0, 92]
+	ldrh	w0, [x0, 12]
+	add	x0, x0, 8
+	add	x0, x21, x0, lsl 1
+.LVL853:
+.L860:
+	.loc 5 231 0 discriminator 1
+	cmp	x0, x2
+	bne	.L862
+	.loc 5 240 0
+	ldr	x0, [x22, 3968]
+	mov	w1, w20
+.LVL854:
+	mov	w2, 0
+	ubfiz	x20, x20, 5, 16
+.LVL855:
+	bl	FlashReadPages
+.LVL856:
+	.loc 5 241 0
+	mov	x10, 0
+	.loc 5 248 0
+	mov	w11, 65535
+.L863:
+	.loc 5 241 0 discriminator 1
+	cmp	x10, x20
+	bne	.L867
+	.loc 5 264 0
+	add	w19, w19, 1
+.LVL857:
+	.loc 5 266 0
+	add	w24, w24, 1
+	.loc 5 264 0
+	and	w19, w19, 65535
+.LVL858:
+	.loc 5 268 0
+	cmp	w25, w24
+	bls	.L868
+.L870:
+	.loc 5 274 0
+	ldrh	w0, [x22, 82]
+	cmp	w0, w19
+	bhi	.L869
+.L873:
+	.loc 5 227 0
+	mov	w2, 0
+.LVL859:
+	b	.L859
+.LVL860:
+.L862:
+	.loc 5 232 0
+	ldrh	w1, [x2]
+	.loc 5 233 0
+	cmp	w1, w9
+	beq	.L861
+	.loc 5 234 0
+	ldr	x4, [x22, 3968]
+	ubfiz	x6, x20, 5, 16
+	orr	w1, w19, w1, lsl 10
+.LVL861:
+	add	x4, x4, x6
+	str	w1, [x4, 4]
+	.loc 5 235 0
+	mul	w1, w20, w7
+	ldr	x3, [x22, 3968]
+	ldr	x4, [x22, 3256]
+	sdiv	w1, w1, w5
+	add	x3, x3, x6
+	add	x1, x4, x1, sxtw 2
+	str	x1, [x3, 8]
+	.loc 5 236 0
+	mul	w1, w20, w8
+	ldr	x4, [x22, 3264]
+	.loc 5 237 0
+	add	w20, w20, 1
+.LVL862:
+	and	w20, w20, 65535
+.LVL863:
+	.loc 5 236 0
+	sdiv	w1, w1, w5
+	add	x1, x4, x1, sxtw 2
+	str	x1, [x3, 16]
+.LVL864:
+.L861:
+	add	x2, x2, 2
+	b	.L860
+.LVL865:
+.L867:
+	.loc 5 242 0
+	ldr	x6, [x22, 3968]
+	add	x5, x6, x10
+	ldr	w4, [x5, 4]
+.LVL866:
+	.loc 5 243 0
+	lsr	w0, w4, 10
+	bl	P2V_plane
+.LVL867:
+	and	w2, w0, 65535
+.LVL868:
+	.loc 5 245 0
+	ldr	w0, [x6, x10]
+	cbnz	w0, .L864
+	.loc 5 247 0
+	ldr	x0, [x5, 16]
+.LVL869:
+	add	x10, x10, 32
+	.loc 5 248 0
+	ldrh	w1, [x0]
+	cmp	w1, w11
+	bne	.L865
+	.loc 5 249 0
+	adrp	x0, .LANCHOR3-88
+.LVL870:
+	mov	w1, 1
+	str	w1, [x0, #:lo12:.LANCHOR3-88]
+.L859:
+	.loc 5 281 0
+	add	x23, x23, :lo12:.LANCHOR2
+	.loc 5 282 0
+	strh	w19, [x21, 2]
+	.loc 5 283 0
+	strb	w2, [x21, 6]
+	.loc 5 281 0
+	mov	w0, -1
+	.loc 5 284 0
+	mov	w1, w19
+	.loc 5 281 0
+	strh	w0, [x23, 4]
+	.loc 5 284 0
+	mov	x0, x21
+	bl	ftl_sb_update_avl_pages
+.LVL871:
+	.loc 5 285 0
+	b	.L871
+.LVL872:
+.L865:
+	.loc 5 252 0
+	ldp	w2, w0, [x0, 8]
+.LVL873:
+	mov	w1, w4
+	bl	FtlGcUpdatePage
+.LVL874:
+	b	.L863
+.LVL875:
+.L864:
+	.loc 5 256 0
+	ldr	x0, [x22, 2320]
+	.loc 5 259 0
+	mov	w19, 0
+	.loc 5 256 0
+	ldrh	w1, [x21]
+	strh	wzr, [x0, x1, lsl 1]
+	.loc 5 257 0
+	ldrh	w0, [x21]
+	bl	INSERT_FREE_LIST
+.LVL876:
+	.loc 5 258 0
+	mov	w0, -1
+	strh	w0, [x21]
+	.loc 5 260 0
+	bl	FtlGcPageVarInit
+.LVL877:
+	.loc 5 261 0
+	b	.L866
+.L868:
+	.loc 5 268 0 discriminator 1
+	add	x1, x23, :lo12:.LANCHOR2
+	mov	w2, 65535
+	ldrh	w0, [x1, 4]
+	cmp	w0, w2
+	beq	.L870
+	.loc 5 269 0
+	add	w0, w0, w24
+	strh	w0, [x1, 4]
+	.loc 5 270 0
+	ldrh	w0, [x22, 82]
+	cmp	w0, w19
+	bls	.L870
+.L871:
+	.loc 5 286 0
+	mov	w0, -1
+	ldp	x19, x20, [sp, 16]
+.LVL878:
+	ldp	x21, x22, [sp, 32]
+.LVL879:
+	ldp	x23, x24, [sp, 48]
+.LVL880:
+	ldp	x25, x26, [sp, 64]
+.LVL881:
+	ldp	x29, x30, [sp], 80
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE249:
+	.size	FtlGcScanTempBlk, .-FtlGcScanTempBlk
+	.align	2
+	.global	FlashTestBlk
+	.type	FlashTestBlk, %function
+FlashTestBlk:
+.LFB264:
+	.loc 1 156 0
+	.cfi_startproc
+.LVL882:
+	stp	x29, x30, [sp, -128]!
+	.cfi_def_cfa_offset 128
+	.cfi_offset 29, -128
+	.cfi_offset 30, -120
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -112
+	.cfi_offset 20, -104
+	.loc 1 156 0
+	and	w19, w0, 65535
+.LVL883:
+	.loc 1 161 0
+	cmp	w19, 11
+	bls	.L881
+.LBB240:
+.LBB241:
+	.loc 1 166 0
+	add	x0, x29, 64
+	.loc 1 167 0
+	mov	w2, 32
+	mov	w1, 165
+	.loc 1 165 0
+	adrp	x20, ftl_temp_buf
+	add	x20, x20, :lo12:ftl_temp_buf
+	.loc 1 166 0
+	stp	x20, x0, [x29, 40]
+	.loc 1 167 0
+	bl	ftl_memset
+.LVL884:
+	.loc 1 169 0
+	lsl	w19, w19, 10
+.LVL885:
+	.loc 1 168 0
+	mov	w2, 8
+	mov	w1, 90
+	mov	x0, x20
+	bl	ftl_memset
+.LVL886:
+	.loc 1 170 0
+	mov	w2, 1
+	.loc 1 169 0
+	str	w19, [x29, 36]
+	.loc 1 170 0
+	mov	w1, w2
+	add	x0, x29, 32
+	bl	FlashEraseBlocks
+.LVL887:
+	.loc 1 171 0
+	mov	w3, 1
+	add	x0, x29, 32
+	mov	w2, w3
+	mov	w1, w3
+	bl	FlashProgPages
+.LVL888:
+	.loc 1 172 0
+	ldr	w0, [x29, 32]
+	.loc 1 178 0
+	mov	w2, 1
+	mov	w1, 0
+	.loc 1 172 0
+	cmp	w0, 0
+	.loc 1 178 0
+	add	x0, x29, 32
+	.loc 1 172 0
+	csetm	w19, ne
+	.loc 1 178 0
+	bl	FlashEraseBlocks
+.LVL889:
+.L879:
+.LBE241:
+.LBE240:
+	.loc 1 180 0
+	mov	w0, w19
+	ldp	x19, x20, [sp, 16]
+	ldp	x29, x30, [sp], 128
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL890:
+.L881:
+	.cfi_restore_state
+	.loc 1 162 0
+	mov	w19, 0
+.LVL891:
+	b	.L879
+	.cfi_endproc
+.LFE264:
+	.size	FlashTestBlk, .-FlashTestBlk
+	.align	2
+	.global	FlashGetBadBlockList
+	.type	FlashGetBadBlockList, %function
+FlashGetBadBlockList:
+.LFB265:
+	.loc 1 183 0
+	.cfi_startproc
+.LVL892:
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	.loc 1 186 0
+	mov	w2, 256
+	.loc 1 183 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -16
+	.cfi_offset 20, -8
+	.loc 1 183 0
+	mov	x19, x0
+	mov	w20, w1
+	.loc 1 186 0
+	mov	w1, 255
+.LVL893:
+	bl	ftl_memset
+.LVL894:
+	.loc 1 187 0
+	adrp	x0, g_nand_ops
+	mov	w1, w20
+	ldr	x2, [x0, #:lo12:g_nand_ops]
+	mov	x0, x19
+	blr	x2
+.LVL895:
+	and	w0, w0, 65535
+.LVL896:
+	.loc 1 188 0
+	cmp	w0, 50
+	bls	.L884
+	.loc 1 189 0
+	mov	w2, 256
+	mov	w1, 255
+	mov	x0, x19
+.LVL897:
+	bl	ftl_memset
+.LVL898:
+	.loc 1 190 0
+	mov	w0, 0
+.LVL899:
+.L884:
+	.loc 1 192 0
+	adrp	x1, g_nand_phy_info+14
+	ldrh	w1, [x1, #:lo12:g_nand_phy_info+14]
+	cmp	w1, 4
+	bne	.L888
+	mov	x1, 0
+.L886:
+	.loc 1 193 0 discriminator 1
+	cmp	w0, w1, uxth
+	bhi	.L887
+.L888:
+	.loc 1 198 0
+	ldp	x19, x20, [sp, 16]
+.LVL900:
+.LVL901:
+	ldp	x29, x30, [sp], 32
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL902:
+.L887:
+	.cfi_restore_state
+	.loc 1 194 0 discriminator 3
+	ldrh	w2, [x19, x1, lsl 1]
+	lsr	w2, w2, 1
+	strh	w2, [x19, x1, lsl 1]
+	add	x1, x1, 1
+	b	.L886
+	.cfi_endproc
+.LFE265:
+	.size	FlashGetBadBlockList, .-FlashGetBadBlockList
+	.align	2
+	.global	ftl_memcpy
+	.type	ftl_memcpy, %function
+ftl_memcpy:
+.LFB267:
+	.loc 1 206 0
+	.cfi_startproc
+.LVL903:
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	.loc 1 207 0
+	uxtw	x2, w2
+.LVL904:
+	.loc 1 206 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 1 207 0
+	bl	memcpy
+.LVL905:
+	.loc 1 208 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE267:
+	.size	ftl_memcpy, .-ftl_memcpy
+	.align	2
+	.global	FtlBbmTblFlush
+	.type	FtlBbmTblFlush, %function
+FtlBbmTblFlush:
+.LFB165:
+	.loc 4 80 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -80]!
+	.cfi_def_cfa_offset 80
+	.cfi_offset 29, -80
+	.cfi_offset 30, -72
+	.loc 4 89 0
+	mov	w1, 0
+	.loc 4 80 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	str	x25, [sp, 64]
+	.cfi_offset 19, -64
+	.cfi_offset 20, -56
+	.cfi_offset 25, -16
+	.loc 4 87 0
+	adrp	x25, .LANCHOR0
+	add	x19, x25, :lo12:.LANCHOR0
+	.loc 4 80 0
+	stp	x21, x22, [sp, 32]
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 21, -48
+	.cfi_offset 22, -40
+	.cfi_offset 23, -32
+	.cfi_offset 24, -24
+	.loc 4 92 0
+	adrp	x22, .LANCHOR3
+	.loc 4 91 0
+	mov	w21, 0
+.LVL906:
+	.loc 4 92 0
+	add	x22, x22, :lo12:.LANCHOR3
+	.loc 4 88 0
+	ldr	x2, [x19, 3392]
+	add	x23, x19, 168
+	.loc 4 87 0
+	ldr	x0, [x19, 2288]
+	.loc 4 88 0
+	str	x2, [x19, 3376]
+	.loc 4 89 0
+	ldrh	w2, [x19, 90]
+	.loc 4 87 0
+	str	x0, [x19, 3368]
+	.loc 4 89 0
+	bl	ftl_memset
+.LVL907:
+.L893:
+	.loc 4 91 0 discriminator 1
+	ldrh	w0, [x19, 34]
+	add	x20, x19, 3360
+	cmp	w21, w0
+	blt	.L894
+	.loc 4 94 0
+	ldr	x24, [x20, 16]
+.LVL908:
+	.loc 4 95 0
+	mov	w1, 255
+	mov	w2, 16
+	.loc 4 108 0
+	adrp	x22, .LC90
+	.loc 4 95 0
+	mov	x0, x24
+	bl	ftl_memset
+.LVL909:
+	.loc 4 97 0
+	mov	w0, -3887
+	.loc 4 98 0
+	add	x1, x19, 136
+	.loc 4 97 0
+	strh	w0, [x24]
+	.loc 4 104 0
+	add	x25, x25, :lo12:.LANCHOR0
+	.loc 4 108 0
+	add	x22, x22, :lo12:.LC90
+	.loc 4 84 0
+	mov	w21, 0
+.LVL910:
+	.loc 4 98 0
+	ldr	w0, [x19, 144]
+	.loc 4 82 0
+	mov	w23, 0
+.LVL911:
+	.loc 4 98 0
+	str	w0, [x24, 4]
+	.loc 4 99 0
+	ldrh	w0, [x19, 136]
+	strh	w0, [x24, 2]
+	.loc 4 100 0
+	ldrh	w0, [x19, 140]
+	strh	w0, [x24, 8]
+	.loc 4 101 0
+	ldrh	w0, [x19, 142]
+	strh	w0, [x24, 10]
+	.loc 4 102 0
+	ldr	w0, [x19, 8]
+	.loc 4 107 0
+	mov	x19, x1
+	.loc 4 102 0
+	strh	w0, [x24, 12]
+.L895:
+	.loc 4 104 0
+	ldr	x0, [x25, 2288]
+	str	x0, [x20, 8]
+	.loc 4 105 0
+	ldr	x0, [x25, 3392]
+	str	x0, [x20, 16]
+	.loc 4 107 0
+	ldrh	w1, [x19]
+	ldrh	w2, [x19, 2]
+	.loc 4 108 0
+	ldrh	w3, [x19, 4]
+	ldrh	w4, [x24, 10]
+	.loc 4 107 0
+	orr	w0, w2, w1, lsl 10
+	.loc 4 106 0
+	str	wzr, [x20]
+	.loc 4 107 0
+	str	w0, [x20, 4]
+	.loc 4 108 0
+	mov	x0, x22
+	bl	printk
+.LVL912:
+	.loc 4 109 0
+	mov	w3, 1
+	mov	x0, x20
+	mov	w1, w3
+	mov	w2, w3
+	bl	FlashProgPages
+.LVL913:
+	.loc 4 110 0
+	ldrh	w0, [x25, 84]
+	ldrh	w1, [x19, 2]
+	sub	w0, w0, #1
+	cmp	w1, w0
+	blt	.L896
+	.loc 4 113 0
+	ldr	w0, [x19, 8]
+	.loc 4 122 0
+	mov	w2, 1
+	.loc 4 115 0
+	ldrh	w1, [x19]
+	.loc 4 113 0
+	add	w0, w0, 1
+	str	w0, [x19, 8]
+	.loc 4 114 0
+	str	w0, [x24, 4]
+	.loc 4 115 0
+	strh	w1, [x24, 8]
+	.loc 4 116 0
+	ldrh	w0, [x19, 4]
+	.loc 4 118 0
+	strh	w1, [x19, 4]
+	.loc 4 121 0
+	ldr	x1, [x25, 3912]
+	.loc 4 116 0
+	strh	w0, [x19]
+	.loc 4 119 0
+	lsl	w0, w0, 10
+	str	w0, [x20, 4]
+	.loc 4 117 0
+	strh	wzr, [x19, 2]
+	.loc 4 121 0
+	str	w0, [x1, 4]
+	.loc 4 122 0
+	mov	w1, w2
+	ldr	x0, [x25, 3912]
+	bl	FlashEraseBlocks
+.LVL914:
+	.loc 4 123 0
+	mov	w3, 1
+	mov	x0, x20
+	mov	w2, w3
+	mov	w1, w3
+	bl	FlashProgPages
+.LVL915:
+.L896:
+	.loc 4 126 0
+	ldrh	w0, [x19, 2]
+	add	w0, w0, 1
+	strh	w0, [x19, 2]
+	.loc 4 127 0
+	ldr	w0, [x20]
+	cmn	w0, #1
+	bne	.L897
+	.loc 4 129 0
+	ldr	w1, [x20, 4]
+	.loc 4 130 0
+	add	w21, w21, 1
+.LVL916:
+	.loc 4 129 0
+	adrp	x0, .LC91
+	.loc 4 130 0
+	and	w21, w21, 65535
+.LVL917:
+	.loc 4 129 0
+	add	x0, x0, :lo12:.LC91
+	bl	printk
+.LVL918:
+	.loc 4 131 0
+	cmp	w21, 3
+	bls	.L895
+	.loc 4 132 0
+	ldr	w1, [x20, 4]
+	adrp	x0, .LC92
+	mov	w2, w21
+	add	x0, x0, :lo12:.LC92
+	bl	printk
+.LVL919:
+.L899:
+	b	.L899
+.LVL920:
+.L894:
+	.loc 4 92 0 discriminator 3
+	ldrh	w2, [x22, -248]
+	ldr	x1, [x23], 8
+	ldr	x0, [x20, 8]
+	mul	w3, w21, w2
+	lsl	w2, w2, 2
+	.loc 4 91 0 discriminator 3
+	add	w21, w21, 1
+	.loc 4 92 0 discriminator 3
+	add	x0, x0, x3, sxtw 2
+	bl	ftl_memcpy
+.LVL921:
+	b	.L893
+.LVL922:
+.L900:
+	mov	w23, 1
+	b	.L895
+.L897:
+	.loc 4 139 0
+	cbz	w23, .L900
+	.loc 4 146 0
+	mov	w0, 0
+	ldr	x25, [sp, 64]
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+.LVL923:
+	ldp	x23, x24, [sp, 48]
+.LVL924:
+	ldp	x29, x30, [sp], 80
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 25
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE165:
+	.size	FtlBbmTblFlush, .-FtlBbmTblFlush
+	.align	2
+	.global	allocate_data_superblock
+	.type	allocate_data_superblock, %function
+allocate_data_superblock:
+.LFB237:
+	.loc 2 2531 0
+	.cfi_startproc
+.LVL925:
+	stp	x29, x30, [sp, -112]!
+	.cfi_def_cfa_offset 112
+	.cfi_offset 29, -112
+	.cfi_offset 30, -104
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -80
+	.cfi_offset 22, -72
+	.loc 2 2537 0
+	adrp	x21, .LANCHOR0
+	add	x22, x21, :lo12:.LANCHOR0
+	.loc 2 2531 0
+	stp	x19, x20, [sp, 16]
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 19, -96
+	.cfi_offset 20, -88
+	.cfi_offset 23, -64
+	.cfi_offset 24, -56
+	mov	x20, x0
+	.loc 2 2539 0
+	mov	x19, x22
+	add	x23, x22, 2456
+	.loc 2 2531 0
+	stp	x25, x26, [sp, 64]
+	stp	x27, x28, [sp, 80]
+	.cfi_offset 25, -48
+	.cfi_offset 26, -40
+	.cfi_offset 27, -32
+	.cfi_offset 28, -24
+.LVL926:
+.L903:
+	.loc 2 2537 0
+	ldrh	w1, [x22, 2336]
+	ldrh	w0, [x22, 2352]
+	add	w0, w0, w1
+	ldrh	w1, [x22, 20]
+	cmp	w0, w1
+	ble	.L904
+	.loc 2 2537 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 2537
+	add	x1, x1, 424
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL927:
+.L904:
+	.loc 2 2539 0 is_stmt 1
+	cmp	x20, x23
+	bne	.L929
+	.loc 2 2540 0
+	ldrh	w0, [x19, 2352]
+	ldr	w1, [x19, 3236]
+	mul	w1, w0, w1
+	lsr	w0, w0, 1
+	add	w0, w0, 1
+	add	w1, w0, w1, lsr 2
+	.loc 2 2544 0
+	ands	w1, w1, 65535
+.LVL928:
+	beq	.L905
+	.loc 2 2545 0
+	sub	w1, w1, #1
+.LVL929:
+	and	w1, w1, 65535
+.LVL930:
+.L905:
+	.loc 2 2546 0
+	add	x0, x19, 2344
+	bl	List_pop_index_node
+.LVL931:
+	and	w24, w0, 65535
+	ldrh	w0, [x19, 2352]
+	cbnz	w0, .L906
+	.loc 2 2546 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 2546
+	add	x1, x1, 424
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL932:
+.L906:
+	.loc 2 2546 0 discriminator 3
+	ldrh	w0, [x19, 2352]
+	sub	w0, w0, #1
+	strh	w0, [x19, 2352]
+	.loc 2 2549 0 is_stmt 1 discriminator 3
+	strh	w24, [x20]
+	.loc 2 2550 0 discriminator 3
+	mov	x0, x20
+	bl	make_superblock
+.LVL933:
+	.loc 2 2551 0 discriminator 3
+	ldrb	w0, [x20, 7]
+	cbnz	w0, .L907
+	.loc 2 2555 0
+	ldr	x1, [x19, 2320]
+	ubfiz	x0, x24, 1, 16
+	mov	w2, -1
+	strh	w2, [x1, x0]
+	.loc 2 2556 0
+	mov	w0, w24
+	bl	INSERT_DATA_LIST
+.LVL934:
+	.loc 2 2557 0
+	ldrh	w1, [x19, 2336]
+	ldrh	w0, [x19, 2352]
+	add	w0, w0, w1
+	ldrh	w1, [x19, 20]
+	cmp	w0, w1
+	ble	.L903
+	.loc 2 2557 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	mov	w2, 2557
+	add	x1, x1, 424
+	adrp	x0, .LC1
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL935:
+	b	.L903
+.L929:
+	mov	w1, 0
+.LVL936:
+	b	.L905
+.LVL937:
+.L907:
+	.loc 2 2560 0 is_stmt 1
+	ldrh	w1, [x19, 2336]
+	ldrh	w0, [x19, 2352]
+	add	w0, w0, w1
+	ldrh	w1, [x19, 20]
+	cmp	w0, w1
+	ble	.L909
+	.loc 2 2560 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 2560
+	add	x1, x1, 424
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL938:
+.L909:
+	add	x27, x20, 16
+	.loc 2 2563 0 is_stmt 1 discriminator 1
+	ldrh	w4, [x19, 12]
+	mov	x3, x27
+	mov	x0, 0
+	mov	w25, 0
+	.loc 2 2566 0 discriminator 1
+	mov	w5, 65535
+.L910:
+	.loc 2 2563 0 discriminator 1
+	cmp	w4, w0, uxth
+	bhi	.L912
+	.loc 2 2571 0
+	cbnz	w25, .L913
+	.loc 2 2571 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 2571
+	add	x1, x1, 424
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL939:
+.L913:
+	.loc 2 2573 0 is_stmt 1
+	ldrh	w0, [x19, 2664]
+	cmp	w0, w24
+	bne	.L914
+	.loc 2 2573 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 2573
+	add	x1, x1, 424
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL940:
+.L914:
+	.loc 2 2574 0 is_stmt 1
+	ldrb	w0, [x20, 8]
+	uxtw	x26, w24
+.LVL941:
+	cbnz	w0, .L915
+	.loc 2 2575 0
+	ldr	x2, [x19, 2296]
+	lsl	x1, x26, 1
+	ldrh	w0, [x2, x1]
+	cbz	w0, .L916
+	.loc 2 2576 0
+	ldrh	w3, [x19, 72]
+	add	w0, w0, w3
+.L937:
+	.loc 2 2578 0
+	strh	w0, [x2, x1]
+	.loc 2 2580 0
+	mov	w1, 0
+	.loc 2 2579 0
+	ldr	w0, [x19, 2564]
+	add	w0, w0, 1
+	str	w0, [x19, 2564]
+.LVL942:
+	.loc 2 2580 0
+	mov	w0, w24
+	bl	ftl_set_blk_mode
+.LVL943:
+.L918:
+	.loc 2 2587 0
+	ldr	x0, [x19, 2296]
+.LVL944:
+	lsl	x26, x26, 1
+.LVL945:
+	ldr	w1, [x19, 2580]
+	ldrh	w0, [x0, x26]
+	cmp	w0, w1
+	bls	.L919
+	.loc 2 2588 0
+	str	w0, [x19, 2580]
+.L919:
+	.loc 2 2590 0
+	ldr	w1, [x19, 2568]
+	ubfiz	x3, x25, 5, 16
+	ldrh	w0, [x19, 72]
+	ldr	w2, [x19, 2564]
+	madd	w0, w0, w2, w1
+	ldrh	w1, [x19, 20]
+	udiv	w0, w0, w1
+	.loc 2 2591 0
+	ldr	x1, [x19, 4024]
+	.loc 2 2590 0
+	str	w0, [x19, 2572]
+	.loc 2 2591 0
+	ldr	w0, [x1, 16]
+	add	w0, w0, 1
+	str	w0, [x1, 16]
+	.loc 2 2593 0
+	mov	x0, 0
+.L920:
+	.loc 2 2593 0 is_stmt 0 discriminator 1
+	cmp	x3, x0
+	bne	.L921
+	.loc 2 2595 0 is_stmt 1
+	ldrb	w1, [x20, 8]
+	mov	w2, w25
+	ldr	x0, [x19, 3912]
+	.loc 2 2597 0
+	mov	x28, 0
+	.loc 2 2595 0
+	bl	FlashEraseBlocks
+.LVL946:
+	.loc 2 2596 0
+	mov	w1, 0
+.LVL947:
+.L922:
+	.loc 2 2597 0 discriminator 1
+	cmp	w25, w28, uxth
+	bhi	.L924
+	.loc 2 2608 0
+	cmp	w1, 0
+	ble	.L925
+	.loc 2 2609 0
+	mov	w0, w24
+	bl	update_multiplier_value
+.LVL948:
+	.loc 2 2610 0
+	bl	FtlBbmTblFlush
+.LVL949:
+.L925:
+	.loc 2 2613 0
+	ldrb	w0, [x20, 7]
+	cbnz	w0, .L926
+	.loc 2 2615 0
+	ldr	x0, [x19, 2320]
+	mov	w1, -1
+.LVL950:
+	strh	w1, [x0, x26]
+	.loc 2 2616 0
+	mov	w0, w24
+	bl	INSERT_DATA_LIST
+.LVL951:
+	.loc 2 2617 0
+	b	.L903
+.L912:
+	.loc 2 2564 0
+	ldr	x1, [x19, 3912]
+	add	x2, x1, x0, lsl 5
+	.loc 2 2565 0
+	stp	xzr, xzr, [x2, 8]
+	.loc 2 2566 0
+	ldrh	w2, [x3]
+	cmp	w2, w5
+	beq	.L911
+	.loc 2 2567 0
+	ubfiz	x6, x25, 5, 16
+	.loc 2 2568 0
+	add	w25, w25, 1
+.LVL952:
+	.loc 2 2567 0
+	add	x1, x1, x6
+	.loc 2 2568 0
+	and	w25, w25, 65535
+.LVL953:
+	.loc 2 2567 0
+	lsl	w2, w2, 10
+	str	w2, [x1, 4]
+.L911:
+	add	x0, x0, 1
+	add	x3, x3, 2
+	b	.L910
+.LVL954:
+.L916:
+	.loc 2 2578 0
+	mov	w0, 2
+	b	.L937
+.L915:
+	.loc 2 2582 0
+	ldr	x2, [x19, 2296]
+	lsl	x0, x26, 1
+	ldrh	w1, [x2, x0]
+	add	w1, w1, 1
+	strh	w1, [x2, x0]
+	.loc 2 2583 0
+	ldr	w0, [x19, 2568]
+	add	w0, w0, 1
+	str	w0, [x19, 2568]
+.LBB242:
+.LBB243:
+	mov	w0, w24
+	bl	ftl_set_blk_mode.part.7
+.LVL955:
+	b	.L918
+.LVL956:
+.L921:
+.LBE243:
+.LBE242:
+	.loc 2 2594 0 discriminator 3
+	ldr	x1, [x19, 3912]
+	add	x1, x1, x0
+	add	x0, x0, 32
+	ldr	w2, [x1, 4]
+	and	w2, w2, -1024
+	str	w2, [x1, 4]
+	b	.L920
+.LVL957:
+.L924:
+	.loc 2 2598 0
+	ldr	x2, [x19, 3912]
+	lsl	x0, x28, 5
+	add	x3, x2, x0
+	ldr	w2, [x2, x0]
+	cmn	w2, #1
+	bne	.L923
+	.loc 2 2599 0
+	add	w1, w1, 1
+	.loc 2 2600 0
+	ldr	w0, [x3, 4]
+	.loc 2 2599 0
+	stp	w2, w1, [x29, 104]
+	.loc 2 2601 0
+	lsr	w0, w0, 10
+	bl	FtlBbmMapBadBlock
+.LVL958:
+	.loc 2 2603 0
+	ldp	w2, w1, [x29, 104]
+	.loc 2 2602 0
+	strh	w2, [x27]
+	.loc 2 2603 0
+	ldrb	w0, [x20, 7]
+	sub	w0, w0, #1
+	strb	w0, [x20, 7]
+.LVL959:
+.L923:
+	add	x28, x28, 1
+	add	x27, x27, 2
+	b	.L922
+.L926:
+	.loc 2 2620 0
+	add	x21, x21, :lo12:.LANCHOR0
+	.loc 2 2622 0
+	strh	wzr, [x20, 2]
+	.loc 2 2623 0
+	strb	wzr, [x20, 6]
+	.loc 2 2620 0
+	ldrh	w1, [x21, 82]
+.LVL960:
+	.loc 2 2621 0
+	strh	w24, [x20]
+	.loc 2 2620 0
+	mul	w0, w0, w1
+	.loc 2 2624 0
+	ldr	w1, [x21, 2556]
+	str	w1, [x20, 12]
+	.loc 2 2620 0
+	and	w0, w0, 65535
+	.loc 2 2624 0
+	add	w1, w1, 1
+	.loc 2 2620 0
+	strh	w0, [x20, 4]
+	.loc 2 2624 0
+	str	w1, [x21, 2556]
+	.loc 2 2625 0
+	ldr	x1, [x21, 2320]
+	ldrh	w2, [x20]
+	strh	w0, [x1, x2, lsl 1]
+	.loc 2 2626 0
+	ldrh	w0, [x20, 4]
+	cbz	w0, .L927
+	.loc 2 2626 0 is_stmt 0 discriminator 2
+	ldrb	w0, [x20, 7]
+	cbnz	w0, .L928
+.L927:
+	.loc 2 2626 0 discriminator 3
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 2626
+	add	x1, x1, 424
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL961:
+.L928:
+	.loc 2 2628 0 is_stmt 1
+	ldp	x19, x20, [sp, 16]
+.LVL962:
+	mov	w0, 0
+	ldp	x21, x22, [sp, 32]
+	ldp	x23, x24, [sp, 48]
+.LVL963:
+	ldp	x25, x26, [sp, 64]
+.LVL964:
+	ldp	x27, x28, [sp, 80]
+	ldp	x29, x30, [sp], 112
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 28
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE237:
+	.size	allocate_data_superblock, .-allocate_data_superblock
+	.align	2
+	.global	FtlGcFreeBadSuperBlk
+	.type	FtlGcFreeBadSuperBlk, %function
+FtlGcFreeBadSuperBlk:
+.LFB256:
+	.loc 5 390 0
+	.cfi_startproc
+.LVL965:
+	stp	x29, x30, [sp, -96]!
+	.cfi_def_cfa_offset 96
+	.cfi_offset 29, -96
+	.cfi_offset 30, -88
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -80
+	.cfi_offset 20, -72
+	.loc 5 395 0
+	adrp	x19, .LANCHOR0
+	add	x19, x19, :lo12:.LANCHOR0
+	.loc 5 390 0
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -64
+	.cfi_offset 22, -56
+	and	w22, w0, 65535
+.LVL966:
+	stp	x23, x24, [sp, 48]
+	stp	x25, x26, [sp, 64]
+	.loc 5 395 0
+	ldrh	w0, [x19, 3316]
+	.loc 5 390 0
+	str	x27, [sp, 80]
+	.cfi_offset 23, -48
+	.cfi_offset 24, -40
+	.cfi_offset 25, -32
+	.cfi_offset 26, -24
+	.cfi_offset 27, -16
+	.loc 5 395 0
+	cbz	w0, .L939
+.LBB246:
+.LBB247:
+	.loc 5 397 0
+	add	x23, x19, 40
+	.loc 5 399 0
+	add	x24, x19, 3320
+.LBE247:
+.LBE246:
+	mov	w21, 0
+.LVL967:
+.L940:
+.LBB250:
+.LBB248:
+	.loc 5 396 0
+	ldrh	w0, [x19, 12]
+	cmp	w0, w21
+	bhi	.L946
+	.loc 5 412 0
+	bl	FtlGcReFreshBadBlk
+.LVL968:
+.L939:
+.LBE248:
+.LBE250:
+	.loc 5 415 0
+	mov	w0, 0
+	ldr	x27, [sp, 80]
+	ldp	x19, x20, [sp, 16]
+.LVL969:
+	ldp	x21, x22, [sp, 32]
+.LVL970:
+	ldp	x23, x24, [sp, 48]
+	ldp	x25, x26, [sp, 64]
+.LVL971:
+	ldp	x29, x30, [sp], 96
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL972:
+.L946:
+	.cfi_restore_state
+.LBB251:
+.LBB249:
+	.loc 5 397 0
+	ldrb	w0, [x23, w21, sxtw]
+	mov	w1, w22
+	.loc 5 401 0
+	adrp	x26, .LC93
+	add	x26, x26, :lo12:.LC93
+	.loc 5 398 0
+	mov	w20, 0
+	.loc 5 397 0
+	bl	V2P_block
+.LVL973:
+	and	w25, w0, 65535
+.L941:
+	.loc 5 398 0
+	ldrh	w0, [x19, 3316]
+	cmp	w0, w20
+	bhi	.L945
+	.loc 5 396 0
+	add	w21, w21, 1
+.LVL974:
+	and	w21, w21, 65535
+.LVL975:
+	b	.L940
+.L945:
+	.loc 5 399 0
+	ldrh	w0, [x24, w20, sxtw 1]
+	add	w27, w20, 1
+	cmp	w0, w25
+	bne	.L942
+	.loc 5 401 0
+	mov	w1, w25
+	mov	x0, x26
+	bl	printk
+.LVL976:
+	.loc 5 403 0
+	mov	w0, w25
+	bl	FtlBbmMapBadBlock
+.LVL977:
+	.loc 5 404 0
+	bl	FtlBbmTblFlush
+.LVL978:
+	.loc 5 405 0
+	ldrh	w0, [x19, 3316]
+	mov	w1, w27
+.LVL979:
+.L943:
+	cmp	w20, w0
+	bcc	.L944
+	.loc 5 407 0
+	sub	w0, w0, #1
+	strh	w0, [x19, 3316]
+.L942:
+	.loc 5 398 0
+	and	w20, w27, 65535
+.LVL980:
+	b	.L941
+.LVL981:
+.L944:
+	.loc 5 406 0
+	sub	w2, w1, #1
+	ldrh	w3, [x24, w1, sxtw 1]
+	.loc 5 405 0
+	add	w20, w20, 1
+.LVL982:
+	add	w1, w1, 1
+	and	w20, w20, 65535
+.LVL983:
+	.loc 5 406 0
+	strh	w3, [x24, w2, sxtw 1]
+	b	.L943
+.LBE249:
+.LBE251:
+	.cfi_endproc
+.LFE256:
+	.size	FtlGcFreeBadSuperBlk, .-FtlGcFreeBadSuperBlk
+	.align	2
+	.global	update_vpc_list
+	.type	update_vpc_list, %function
+update_vpc_list:
+.LFB240:
+	.loc 2 2687 0
+	.cfi_startproc
+.LVL984:
+	stp	x29, x30, [sp, -48]!
+	.cfi_def_cfa_offset 48
+	.cfi_offset 29, -48
+	.cfi_offset 30, -40
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -32
+	.cfi_offset 20, -24
+	and	w19, w0, 65535
+.LVL985:
+	.loc 2 2688 0
+	adrp	x20, .LANCHOR0
+	add	x0, x20, :lo12:.LANCHOR0
+	.loc 2 2687 0
+	str	x21, [sp, 32]
+	.cfi_offset 21, -16
+	.loc 2 2688 0
+	ubfiz	x1, x19, 1, 16
+	ldr	x2, [x0, 2320]
+	ldrh	w1, [x2, x1]
+	cbnz	w1, .L952
+	.loc 2 2689 0
+	ldrh	w1, [x0, 2664]
+	cmp	w1, w19
+	bne	.L953
+	.loc 2 2691 0
+	mov	w1, -1
+	strh	w1, [x0, 2664]
+.L954:
+.LBB254:
+.LBB255:
+	.loc 2 2696 0
+	add	x21, x20, :lo12:.LANCHOR0
+	mov	w1, w19
+	add	x0, x21, 2312
+	bl	List_remove_node
+.LVL986:
+	ldrh	w0, [x21, 2336]
+	cbnz	w0, .L956
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 2696
+	add	x1, x1, 456
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL987:
+.L956:
+	add	x20, x20, :lo12:.LANCHOR0
+	ldrh	w0, [x20, 2336]
+	sub	w0, w0, #1
+	strh	w0, [x20, 2336]
+	.loc 2 2697 0
+	mov	w0, w19
+	bl	free_data_superblock
+.LVL988:
+	.loc 2 2698 0
+	mov	w0, w19
+	bl	FtlGcFreeBadSuperBlk
+.LVL989:
+	.loc 2 2699 0
+	ldrh	w1, [x20, 2336]
+	mov	w19, 1
+.LVL990:
+	ldrh	w0, [x20, 2352]
+	add	w0, w0, w1
+	ldrh	w1, [x20, 20]
+	cmp	w0, w1
+	ble	.L951
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 2699
+	add	x1, x1, 456
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL991:
+.L951:
+.LBE255:
+.LBE254:
+	.loc 2 2705 0
+	mov	w0, w19
+	ldr	x21, [sp, 32]
+	ldp	x19, x20, [sp, 16]
+	ldp	x29, x30, [sp], 48
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 21
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL992:
+.L953:
+	.cfi_restore_state
+	.loc 2 2692 0
+	ldrh	w1, [x0, 2360]
+	cmp	w1, w19
+	beq	.L959
+	.loc 2 2692 0 is_stmt 0 discriminator 1
+	ldrh	w1, [x0, 2408]
+	cmp	w1, w19
+	beq	.L959
+	.loc 2 2692 0 discriminator 2
+	ldrh	w0, [x0, 2456]
+	cmp	w0, w19
+	bne	.L954
+.L959:
+	.loc 2 2694 0 is_stmt 1
+	mov	w19, 0
+.LVL993:
+	b	.L951
+.LVL994:
+.L952:
+	.loc 2 2702 0
+	mov	w0, w19
+	bl	List_update_data_list
+.LVL995:
+	b	.L959
+	.cfi_endproc
+.LFE240:
+	.size	update_vpc_list, .-update_vpc_list
+	.align	2
+	.global	decrement_vpc_count
+	.type	decrement_vpc_count, %function
+decrement_vpc_count:
+.LFB241:
+	.loc 2 2708 0
+	.cfi_startproc
+.LVL996:
+	stp	x29, x30, [sp, -48]!
+	.cfi_def_cfa_offset 48
+	.cfi_offset 29, -48
+	.cfi_offset 30, -40
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -32
+	.cfi_offset 20, -24
+	and	w19, w0, 65535
+.LVL997:
+	str	x21, [sp, 32]
+	.cfi_offset 21, -16
+	.loc 2 2711 0
+	mov	w0, 65535
+	cmp	w19, w0
+	beq	.L963
+	.loc 2 2712 0
+	adrp	x20, .LANCHOR0
+	add	x20, x20, :lo12:.LANCHOR0
+	ubfiz	x21, x19, 1, 16
+	ldr	x1, [x20, 2320]
+	ldrh	w0, [x1, x21]
+	cbnz	w0, .L964
+	.loc 2 2713 0
+	mov	w2, 0
+	mov	w1, w19
+	adrp	x0, .LC94
+	add	x0, x0, :lo12:.LC94
+	bl	printk
+.LVL998:
+	.loc 2 2714 0
+	ldr	x0, [x20, 2320]
+	ldrh	w0, [x0, x21]
+	cbz	w0, .L965
+.L970:
+	.loc 2 2715 0 discriminator 1
+	mov	w21, 0
+.L962:
+	.loc 2 2733 0
+	mov	w0, w21
+	ldr	x21, [sp, 32]
+	ldp	x19, x20, [sp, 16]
+.LVL999:
+	ldp	x29, x30, [sp], 48
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 21
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1000:
+.L965:
+	.cfi_restore_state
+	.loc 2 2714 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	mov	w2, 2714
+	add	x1, x1, 472
+	adrp	x0, .LC1
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1001:
+	b	.L970
+.L964:
+	.loc 2 2717 0
+	sub	w0, w0, #1
+	strh	w0, [x1, x21]
+.L963:
+	.loc 2 2721 0
+	adrp	x20, .LANCHOR3
+	add	x20, x20, :lo12:.LANCHOR3
+	mov	w1, 65535
+	ldrh	w0, [x20, -96]
+	cmp	w0, w1
+	bne	.L967
+	.loc 2 2722 0
+	strh	w19, [x20, -96]
+	b	.L970
+.L967:
+	.loc 2 2724 0
+	cmp	w19, w0
+	beq	.L970
+	.loc 2 2727 0
+	bl	update_vpc_list
+.LVL1002:
+	cmp	w0, 0
+	.loc 2 2730 0
+	adrp	x1, .LANCHOR0
+	add	x1, x1, :lo12:.LANCHOR0
+	.loc 2 2729 0
+	strh	w19, [x20, -96]
+	.loc 2 2727 0
+	cset	w21, ne
+	.loc 2 2730 0
+	ldr	x2, [x1, 2304]
+	ldr	x0, [x1, 2312]
+	ldr	x1, [x1, 2320]
+	sub	x0, x0, x2
+	mov	x2, -6148914691236517206
+	asr	x0, x0, 1
+	movk	x2, 0xaaab, lsl 0
+	mul	x0, x0, x2
+	and	x2, x0, 65535
+	ldrh	w1, [x1, x2, lsl 1]
+	cbnz	w1, .L962
+	.loc 2 2730 0 is_stmt 0 discriminator 1
+	cmp	w19, w0, uxth
+	beq	.L962
+	.loc 2 2730 0 discriminator 2
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	mov	w2, 2730
+	add	x1, x1, 472
+	adrp	x0, .LC1
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1003:
+	b	.L962
+	.cfi_endproc
+.LFE241:
+	.size	decrement_vpc_count, .-decrement_vpc_count
+	.align	2
+	.global	FtlWriteDump_data
+	.type	FtlWriteDump_data, %function
+FtlWriteDump_data:
+.LFB207:
+	.loc 2 947 0 is_stmt 1
+	.cfi_startproc
+	stp	x29, x30, [sp, -128]!
+	.cfi_def_cfa_offset 128
+	.cfi_offset 29, -128
+	.cfi_offset 30, -120
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -112
+	.cfi_offset 20, -104
+	.loc 2 948 0
+	adrp	x19, .LANCHOR0
+	add	x20, x19, :lo12:.LANCHOR0
+	.loc 2 947 0
+	stp	x21, x22, [sp, 32]
+	stp	x23, x24, [sp, 48]
+	str	x25, [sp, 64]
+	.cfi_offset 21, -96
+	.cfi_offset 22, -88
+	.cfi_offset 23, -80
+	.cfi_offset 24, -72
+	.cfi_offset 25, -64
+	.loc 2 948 0
+	ldrh	w2, [x20, 2364]
+	cbz	w2, .L972
+	.loc 2 948 0 is_stmt 0 discriminator 1
+	ldrb	w1, [x20, 2368]
+	cbnz	w1, .L972
+	.loc 2 949 0 is_stmt 1
+	ldrb	w1, [x20, 2367]
+	ldrh	w3, [x20, 82]
+	mul	w1, w1, w3
+	cmp	w2, w1
+	beq	.L972
+.LBB259:
+.LBB260:
+	.loc 2 956 0
+	ldrb	w0, [x20, 2370]
+	cbnz	w0, .L971
+	.loc 2 951 0
+	ldr	w22, [x20, 2520]
+	.loc 2 958 0
+	add	x1, x29, 92
+	.loc 2 953 0
+	ldrh	w24, [x20, 12]
+	.loc 2 958 0
+	mov	w2, 0
+	.loc 2 951 0
+	sub	w22, w22, #1
+.LVL1004:
+	.loc 2 958 0
+	mov	w0, w22
+	bl	log2phys
+.LVL1005:
+	.loc 2 964 0
+	ldr	x21, [x20, 3392]
+.LVL1006:
+	.loc 2 961 0
+	ldr	w0, [x29, 92]
+	.loc 2 963 0
+	ldr	x1, [x20, 2288]
+	.loc 2 961 0
+	str	w0, [x29, 100]
+	.loc 2 967 0
+	cmn	w0, #1
+	.loc 2 964 0
+	stp	x1, x21, [x29, 104]
+	.loc 2 962 0
+	str	w22, [x29, 120]
+	.loc 2 966 0
+	str	wzr, [x21, 4]
+	.loc 2 967 0
+	beq	.L974
+	.loc 2 969 0
+	mov	w2, 0
+	mov	w1, 1
+	add	x0, x29, 96
+	bl	FlashReadPages
+.LVL1007:
+.L975:
+	.loc 2 978 0
+	add	x25, x19, :lo12:.LANCHOR0
+	.loc 2 953 0
+	lsl	w24, w24, 2
+.LVL1008:
+	.loc 2 978 0
+	add	x20, x25, 2360
+	.loc 2 975 0
+	mov	w0, -3947
+	mov	w23, 0
+	strh	w0, [x21]
+.L976:
+	.loc 2 976 0
+	cmp	w24, w23
+	bne	.L980
+.L977:
+	.loc 2 992 0
+	add	x19, x19, :lo12:.LANCHOR0
+	mov	w0, 1
+	strb	w0, [x19, 2370]
+.L971:
+.LBE260:
+.LBE259:
+	.loc 2 1000 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+.LVL1009:
+	ldp	x23, x24, [sp, 48]
+.LVL1010:
+	ldr	x25, [sp, 64]
+	ldp	x29, x30, [sp], 128
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 25
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1011:
+.L974:
+	.cfi_restore_state
+.LBB262:
+.LBB261:
+	.loc 2 973 0
+	ldrh	w2, [x20, 90]
+	mov	w1, 255
+	ldr	x0, [x20, 2288]
+	bl	ftl_memset
+.LVL1012:
+	b	.L975
+.LVL1013:
+.L980:
+	.loc 2 978 0
+	ldrh	w0, [x20, 4]
+	cbz	w0, .L977
+	.loc 2 983 0
+	ldr	w0, [x29, 100]
+	add	w23, w23, 1
+	stp	w22, w0, [x21, 8]
+	.loc 2 984 0
+	ldrh	w0, [x20]
+	strh	w0, [x21, 2]
+	.loc 2 986 0
+	mov	x0, x20
+	bl	get_new_active_ppa
+.LVL1014:
+	str	w0, [x29, 100]
+	.loc 2 987 0
+	ldr	w0, [x25, 2560]
+	.loc 2 988 0
+	mov	w3, 0
+	.loc 2 987 0
+	str	w0, [x21, 4]
+	.loc 2 988 0
+	mov	w2, 0
+	.loc 2 987 0
+	add	w0, w0, 1
+	.loc 2 988 0
+	mov	w1, 1
+	.loc 2 987 0
+	cmn	w0, #1
+	csel	w0, w0, wzr, ne
+	str	w0, [x25, 2560]
+	.loc 2 988 0
+	add	x0, x29, 96
+	bl	FlashProgPages
+.LVL1015:
+	.loc 2 990 0
+	ldrh	w0, [x20]
+	bl	decrement_vpc_count
+.LVL1016:
+	b	.L976
+.LVL1017:
+.L972:
+.LBE261:
+.LBE262:
+	.loc 2 998 0
+	add	x19, x19, :lo12:.LANCHOR0
+	strb	wzr, [x19, 2370]
+	.loc 2 1000 0
+	b	.L971
+	.cfi_endproc
+.LFE207:
+	.size	FtlWriteDump_data, .-FtlWriteDump_data
+	.align	2
+	.global	l2p_flush
+	.type	l2p_flush, %function
+l2p_flush:
+.LFB200:
+	.loc 2 740 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -16
+	.cfi_offset 20, -8
+	.loc 2 746 0
+	adrp	x20, .LANCHOR0
+	add	x20, x20, :lo12:.LANCHOR0
+	mov	w19, 0
+.LVL1018:
+	.loc 2 744 0
+	bl	FtlWriteDump_data
+.LVL1019:
+.L990:
+	.loc 2 746 0 discriminator 1
+	ldrh	w0, [x20, 118]
+	cmp	w0, w19
+	bhi	.L992
+	.loc 2 750 0
+	mov	w0, 0
+	ldp	x19, x20, [sp, 16]
+.LVL1020:
+	ldp	x29, x30, [sp], 32
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1021:
+.L992:
+	.cfi_restore_state
+	.loc 2 747 0
+	ldr	x1, [x20, 2504]
+	ubfiz	x0, x19, 4, 16
+	add	x0, x1, x0
+	ldr	w0, [x0, 4]
+	tbz	w0, #31, .L991
+	.loc 2 748 0
+	mov	w0, w19
+	bl	flush_l2p_region
+.LVL1022:
+.L991:
+	.loc 2 746 0 discriminator 2
+	add	w19, w19, 1
+.LVL1023:
+	and	w19, w19, 65535
+.LVL1024:
+	b	.L990
+	.cfi_endproc
+.LFE200:
+	.size	l2p_flush, .-l2p_flush
+	.align	2
+	.global	FtlRecoverySuperblock
+	.type	FtlRecoverySuperblock, %function
+FtlRecoverySuperblock:
+.LFB220:
+	.loc 2 1656 0
+	.cfi_startproc
+.LVL1025:
+	stp	x29, x30, [sp, -176]!
+	.cfi_def_cfa_offset 176
+	.cfi_offset 29, -176
+	.cfi_offset 30, -168
+	.loc 2 1670 0
+	mov	w1, 65535
+	.loc 2 1656 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -160
+	.cfi_offset 20, -152
+	mov	x19, x0
+	stp	x21, x22, [sp, 32]
+	stp	x23, x24, [sp, 48]
+	stp	x25, x26, [sp, 64]
+	stp	x27, x28, [sp, 80]
+	.cfi_offset 21, -144
+	.cfi_offset 22, -136
+	.cfi_offset 23, -128
+	.cfi_offset 24, -120
+	.cfi_offset 25, -112
+	.cfi_offset 26, -104
+	.cfi_offset 27, -96
+	.cfi_offset 28, -88
+	.loc 2 1670 0
+	ldrh	w0, [x0]
+.LVL1026:
+	cmp	w0, w1
+	beq	.L1112
+	.loc 2 1676 0
+	ldrb	w0, [x19, 6]
+.LVL1027:
+	.loc 2 1681 0
+	adrp	x20, .LANCHOR0
+	.loc 2 1676 0
+	str	w0, [x29, 156]
+	.loc 2 1681 0
+	add	x0, x20, :lo12:.LANCHOR0
+.LVL1028:
+	.loc 2 1675 0
+	ldrh	w27, [x19, 2]
+.LVL1029:
+	.loc 2 1681 0
+	ldrh	w0, [x0, 82]
+	cmp	w0, w27
+	bne	.L997
+	.loc 2 1682 0
+	strh	wzr, [x19, 4]
+.LVL1030:
+.L1118:
+	.loc 2 1709 0
+	strb	wzr, [x19, 6]
+.LVL1031:
+.L1112:
+	.loc 2 2010 0
+	ldp	x19, x20, [sp, 16]
+.LVL1032:
+	mov	w0, 0
+.LVL1033:
+	ldp	x21, x22, [sp, 32]
+.LVL1034:
+	ldp	x23, x24, [sp, 48]
+.LVL1035:
+	ldp	x25, x26, [sp, 64]
+.LVL1036:
+	ldp	x27, x28, [sp, 80]
+.LVL1037:
+	ldp	x29, x30, [sp], 176
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 28
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1038:
+.L997:
+	.cfi_restore_state
+	.loc 2 1689 0
+	ldrh	w0, [x19, 16]
+	.loc 2 1688 0
+	mov	w21, 0
+.L998:
+	.loc 2 1690 0
+	cmp	w0, w1
+	beq	.L999
+	.loc 2 1697 0
+	mov	w1, 1
+	bl	FtlGetLastWrittenPage
+.LVL1039:
+	mov	w24, w0
+.LVL1040:
+	.loc 2 1705 0
+	cmn	w0, #1
+	beq	.L1000
+	.loc 2 1721 0
+	add	x0, x20, :lo12:.LANCHOR0
+	add	x1, x19, 16
+	str	x1, [x29, 144]
+	.loc 2 1722 0
+	add	x5, x19, 16
+	mov	w21, 0
+	.loc 2 1719 0
+	mov	w10, 65535
+	ldrh	w1, [x0, 12]
+	.loc 2 1721 0
+	mov	w6, 4
+	ldrh	w8, [x0, 90]
+	add	x1, x1, 8
+	.loc 2 1722 0
+	ldrh	w9, [x0, 92]
+	add	x1, x19, x1, lsl 1
+.L1001:
+	.loc 2 1717 0 discriminator 1
+	cmp	x5, x1
+	bne	.L1005
+	.loc 2 1727 0
+	add	x23, x20, :lo12:.LANCHOR0
+	mov	w2, 0
+	mov	w1, w21
+	ldr	x0, [x23, 3968]
+	bl	FlashReadPages
+.LVL1041:
+	.loc 2 1728 0
+	ldr	w22, [x23, 2560]
+	.loc 2 1730 0
+	ldr	x4, [x23, 3968]
+	.loc 2 1742 0
+	and	w9, w24, 65535
+	.loc 2 1728 0
+	sub	w22, w22, #1
+.LVL1042:
+	.loc 2 1666 0
+	mov	w7, 65535
+	mov	x6, x4
+	.loc 2 1729 0
+	mov	w3, 0
+.LVL1043:
+.L1006:
+	.loc 2 1729 0 is_stmt 0 discriminator 1
+	cmp	w21, w3
+	bne	.L1011
+	.loc 2 1747 0 is_stmt 1
+	add	w23, w24, 1
+	.loc 2 1749 0
+	ldr	w0, [x4, 4]
+	.loc 2 1747 0
+	and	w23, w23, 65535
+.LVL1044:
+.L1114:
+	.loc 2 1753 0
+	lsr	w0, w0, 10
+	bl	P2V_plane
+.LVL1045:
+	and	w28, w0, 65535
+.LVL1046:
+	.loc 2 1758 0
+	add	x0, x20, :lo12:.LANCHOR0
+	ldrh	w0, [x0, 82]
+	cmp	w0, w23
+	bne	.L1013
+	.loc 2 1759 0
+	strh	w23, [x19, 2]
+	.loc 2 1760 0
+	strb	wzr, [x19, 6]
+	.loc 2 1761 0
+	strh	wzr, [x19, 4]
+.L1013:
+	.loc 2 1764 0
+	ldr	w0, [x29, 156]
+	cmp	w23, w27
+.LVL1047:
+	ccmp	w28, w0, 0, eq
+	bne	.L1014
+.LVL1048:
+.L1119:
+	.loc 2 2004 0
+	mov	w2, w28
+	mov	w1, w23
+	mov	x0, x19
+.LVL1049:
+	bl	ftl_sb_update_avl_pages
+.LVL1050:
+	b	.L1112
+.LVL1051:
+.L999:
+	.loc 2 1691 0
+	add	w21, w21, 1
+	and	w21, w21, 65535
+	.loc 2 1692 0
+	add	x0, x19, x21, sxtw 1
+	ldrh	w0, [x0, 16]
+	b	.L998
+.LVL1052:
+.L1000:
+	.loc 2 1706 0
+	cbz	w27, .L1002
+	.loc 2 1706 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+.LVL1053:
+	mov	w2, 1706
+	add	x1, x1, 496
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1054:
+.L1002:
+	.loc 2 1707 0 is_stmt 1
+	ldr	w0, [x29, 156]
+.LVL1055:
+	cmp	w0, 0
+	ccmp	w21, w0, 4, ne
+	beq	.L1003
+	.loc 2 1707 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+.LVL1056:
+	mov	w2, 1707
+	add	x1, x1, 496
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1057:
+.L1003:
+	.loc 2 1708 0 is_stmt 1
+	strh	wzr, [x19, 2]
+	b	.L1118
+.LVL1058:
+.L1005:
+	.loc 2 1718 0
+	ldrh	w2, [x5]
+	.loc 2 1719 0
+	cmp	w2, w10
+	beq	.L1004
+	.loc 2 1720 0
+	ldr	x4, [x0, 3968]
+	ubfiz	x7, x21, 5, 16
+	orr	w2, w24, w2, lsl 10
+	add	x4, x4, x7
+	str	w2, [x4, 4]
+	.loc 2 1721 0
+	mul	w2, w21, w8
+	ldr	x3, [x0, 3968]
+	ldr	x4, [x0, 3256]
+	sdiv	w2, w2, w6
+	add	x3, x3, x7
+	add	x2, x4, x2, sxtw 2
+	str	x2, [x3, 8]
+	.loc 2 1722 0
+	mul	w2, w21, w9
+	ldr	x4, [x0, 3264]
+	.loc 2 1723 0
+	add	w21, w21, 1
+	and	w21, w21, 65535
+	.loc 2 1722 0
+	sdiv	w2, w2, w6
+	add	x2, x4, x2, sxtw 2
+	str	x2, [x3, 16]
+.L1004:
+	add	x5, x5, 2
+	b	.L1001
+.LVL1059:
+.L1011:
+	.loc 2 1730 0
+	ldr	w0, [x6]
+	cbnz	w0, .L1007
+	.loc 2 1731 0
+	ldr	x8, [x6, 16]
+	.loc 2 1732 0
+	ldr	w5, [x8, 4]
+	cmn	w5, #1
+	beq	.L1008
+	.loc 2 1733 0
+	ldr	w1, [x23, 2560]
+	mov	w0, w5
+	bl	ftl_cmp_data_ver
+.LVL1060:
+	cbz	w0, .L1008
+	.loc 2 1735 0
+	add	w5, w5, 1
+	str	w5, [x23, 2560]
+.L1008:
+	.loc 2 1738 0
+	ldr	w0, [x8]
+	cmn	w0, #1
+	bne	.L1010
+	.loc 2 1753 0
+	ubfiz	x3, x3, 5, 16
+.LVL1061:
+	.loc 2 1752 0
+	and	w23, w24, 65535
+.LVL1062:
+	.loc 2 1753 0
+	add	x3, x4, x3
+	ldr	w0, [x3, 4]
+	b	.L1114
+.LVL1063:
+.L1007:
+	.loc 2 1742 0
+	mov	w7, w9
+.L1010:
+	.loc 2 1729 0 discriminator 2
+	add	w3, w3, 1
+.LVL1064:
+	add	x6, x6, 32
+	and	w3, w3, 65535
+.LVL1065:
+	b	.L1006
+.LVL1066:
+.L1014:
+	.loc 2 1770 0
+	mov	w0, 65535
+.LVL1067:
+	adrp	x21, .LANCHOR3
+	cmp	w7, w0
+	bne	.L1015
+	.loc 2 1770 0 is_stmt 0 discriminator 1
+	ldrb	w0, [x19, 8]
+	cbnz	w0, .L1016
+.L1015:
+.LBB263:
+	.loc 2 1775 0 is_stmt 1
+	add	x0, x21, :lo12:.LANCHOR3
+	.loc 2 1774 0
+	and	w3, w24, 65535
+	.loc 2 1775 0
+	ldr	w1, [x0, -84]
+	cmn	w1, #1
+	bne	.L1017
+	.loc 2 1776 0
+	str	w22, [x0, -84]
+.L1017:
+	.loc 2 1778 0
+	add	w0, w27, 7
+	cmp	w0, w24, uxth
+	bge	.L1065
+	.loc 2 1779 0
+	sub	w25, w3, #7
+	and	w25, w25, 65535
+.L1018:
+	.loc 2 1782 0 discriminator 1
+	add	x26, x20, :lo12:.LANCHOR0
+	.loc 2 1784 0 discriminator 1
+	mov	w4, 65535
+.L1019:
+	.loc 2 1780 0 discriminator 1
+	cmp	w25, w3
+	bhi	.L1026
+	ldrh	w0, [x26, 12]
+	.loc 2 1782 0
+	mov	w24, 0
+.LVL1068:
+	ldr	x1, [x29, 144]
+	add	x0, x0, 8
+	add	x0, x19, x0, lsl 1
+	b	.L1027
+.LVL1069:
+.L1065:
+	mov	w25, w27
+	b	.L1018
+.LVL1070:
+.L1021:
+	.loc 2 1783 0
+	ldrh	w2, [x1]
+	.loc 2 1784 0
+	cmp	w2, w4
+	beq	.L1020
+	.loc 2 1785 0
+	ldr	x5, [x26, 3968]
+	ubfiz	x6, x24, 5, 16
+	.loc 2 1786 0
+	add	w24, w24, 1
+	.loc 2 1785 0
+	orr	w2, w25, w2, lsl 10
+	add	x5, x5, x6
+	.loc 2 1786 0
+	and	w24, w24, 65535
+	.loc 2 1785 0
+	str	w2, [x5, 4]
+.L1020:
+	add	x1, x1, 2
+.L1027:
+	.loc 2 1782 0 discriminator 1
+	cmp	x0, x1
+	bne	.L1021
+	.loc 2 1789 0
+	ldr	x0, [x26, 3968]
+	mov	w1, w24
+	mov	w2, 0
+	str	w4, [x29, 128]
+	str	w3, [x29, 136]
+	ubfiz	x24, x24, 5, 16
+	add	x24, x24, 16
+	bl	FlashReadPages
+.LVL1071:
+	.loc 2 1791 0
+	ldr	x1, [x26, 3968]
+	.loc 2 1797 0
+	add	x2, x21, :lo12:.LANCHOR3
+	.loc 2 1790 0
+	ldr	w4, [x29, 128]
+	ldr	w3, [x29, 136]
+	add	x0, x1, 16
+	add	x24, x1, x24
+.L1022:
+	.loc 2 1790 0 is_stmt 0 discriminator 1
+	cmp	x24, x0
+	bne	.L1025
+	.loc 2 1780 0 is_stmt 1
+	add	w25, w25, 1
+	and	w25, w25, 65535
+	b	.L1019
+.L1025:
+	.loc 2 1791 0
+	ldr	w1, [x0, -16]
+	cbnz	w1, .L1016
+	.loc 2 1792 0
+	ldr	x1, [x0]
+	.loc 2 1793 0
+	ldrh	w5, [x1]
+	cmp	w5, w4
+	beq	.L1024
+	.loc 2 1795 0
+	ldr	w1, [x1, 4]
+	cmn	w1, #1
+	beq	.L1024
+	.loc 2 1797 0
+	str	w1, [x2, -84]
+.L1024:
+	add	x0, x0, 32
+	b	.L1022
+.LVL1072:
+.L1026:
+	.loc 2 1809 0
+	add	x0, x21, :lo12:.LANCHOR3
+	mov	w1, -1
+	str	w1, [x0, -84]
+.L1016:
+.LBE263:
+	.loc 2 1814 0
+	add	x21, x21, :lo12:.LANCHOR3
+	mov	w0, 1
+	.loc 2 1815 0
+	mov	w25, w27
+	.loc 2 1821 0
+	add	x20, x20, :lo12:.LANCHOR0
+	.loc 2 1814 0
+	strh	w0, [x21, -80]
+	.loc 2 1815 0
+	sub	x0, x21, #240
+	bl	FtlMapBlkWriteDump_data
+.LVL1073:
+	.loc 2 1970 0
+	sub	x0, x21, #72
+	str	x0, [x29, 112]
+.LVL1074:
+.L1028:
+	ldrh	w0, [x20, 12]
+	.loc 2 1820 0
+	mov	w24, 0
+.LVL1075:
+	.loc 2 1821 0
+	ldr	x1, [x29, 144]
+.LVL1076:
+	.loc 2 1823 0
+	mov	w4, 65535
+	add	x0, x0, 8
+	add	x0, x19, x0, lsl 1
+.L1029:
+	.loc 2 1821 0 discriminator 1
+	cmp	x0, x1
+	bne	.L1031
+	.loc 2 1828 0
+	ldr	x0, [x20, 3968]
+	mov	w1, w24
+	mov	w2, 0
+	bl	FlashReadPages
+.LVL1077:
+	ubfiz	x0, x24, 5, 16
+	str	x0, [x29, 120]
+	.loc 2 1957 0
+	adrp	x0, .LANCHOR1
+	add	x0, x0, :lo12:.LANCHOR1
+	add	x0, x0, 496
+	.loc 2 1829 0
+	mov	x24, 0
+	.loc 2 1957 0
+	str	x0, [x29, 128]
+.LVL1078:
+.L1032:
+	.loc 2 1829 0 discriminator 1
+	ldr	x0, [x29, 120]
+.LVL1079:
+	cmp	x0, x24
+	bne	.L1059
+	.loc 2 1982 0
+	add	w25, w25, 1
+	.loc 2 1983 0
+	ldrh	w0, [x20, 82]
+	.loc 2 1982 0
+	and	w25, w25, 65535
+	.loc 2 1983 0
+	cmp	w0, w25
+	bne	.L1028
+	.loc 2 1986 0
+	ldrh	w1, [x20, 12]
+.LVL1080:
+	mov	w0, 0
+	.loc 2 1984 0
+	strh	w25, [x19, 2]
+	.loc 2 1988 0
+	mov	w2, 65535
+	.loc 2 1985 0
+	strh	wzr, [x19, 4]
+.L1060:
+	.loc 2 1986 0 discriminator 1
+	cmp	w0, w1
+	beq	.L1112
+	.loc 2 1988 0
+	ldr	x4, [x29, 144]
+	ldrh	w3, [x4], 2
+	str	x4, [x29, 144]
+	cmp	w3, w2
+	beq	.L1061
+	.loc 2 1989 0
+	strb	w0, [x19, 6]
+	.loc 2 1990 0
+	b	.L1112
+.L1031:
+	.loc 2 1822 0
+	ldrh	w2, [x1]
+	.loc 2 1823 0
+	cmp	w2, w4
+	beq	.L1030
+	.loc 2 1824 0
+	ldr	x3, [x20, 3968]
+	ubfiz	x5, x24, 5, 16
+	.loc 2 1825 0
+	add	w24, w24, 1
+	.loc 2 1824 0
+	orr	w2, w25, w2, lsl 10
+	add	x3, x3, x5
+	.loc 2 1825 0
+	and	w24, w24, 65535
+	.loc 2 1824 0
+	str	w2, [x3, 4]
+.L1030:
+	add	x1, x1, 2
+	b	.L1029
+.LVL1081:
+.L1059:
+	.loc 2 1830 0
+	ldr	x4, [x20, 3968]
+	add	x4, x4, x24
+	ldr	w5, [x4, 4]
+	str	w5, [x29, 172]
+	.loc 2 1831 0
+	lsr	w0, w5, 10
+	bl	P2V_plane
+.LVL1082:
+	and	w0, w0, 65535
+.LVL1083:
+	.loc 2 1833 0
+	cmp	w25, w27
+	bcc	.L1033
+	.loc 2 1833 0 is_stmt 0 discriminator 1
+	ldr	w1, [x29, 156]
+.LVL1084:
+	ccmp	w1, w0, 0, eq
+	bhi	.L1033
+	.loc 2 1837 0 is_stmt 1
+	cmp	w25, w23
+	ccmp	w28, w0, 0, eq
+	beq	.L1034
+	.loc 2 1841 0
+	ldr	w0, [x4]
+.LVL1085:
+	cmn	w0, #1
+	beq	.L1035
+	.loc 2 1842 0
+	ldr	x3, [x4, 16]
+	.loc 2 1843 0
+	mov	w0, 61589
+	ldrh	w1, [x3]
+.LVL1086:
+	cmp	w1, w0
+	beq	.L1036
+.L1043:
+.LBB264:
+	.loc 2 1876 0
+	ldrh	w0, [x19]
+.L1117:
+.LBE264:
+	.loc 2 1960 0
+	bl	decrement_vpc_count
+.LVL1087:
+.L1033:
+	add	x24, x24, 32
+	b	.L1032
+.LVL1088:
+.L1036:
+	.loc 2 1849 0
+	ldr	w22, [x3, 4]
+.LVL1089:
+	.loc 2 1850 0
+	cmn	w22, #1
+	beq	.L1037
+	.loc 2 1851 0 discriminator 1
+	ldr	w1, [x20, 2560]
+	mov	w0, w22
+	str	x3, [x29, 136]
+	bl	ftl_cmp_data_ver
+.LVL1090:
+	.loc 2 1850 0 discriminator 1
+	ldr	x3, [x29, 136]
+	cbz	w0, .L1037
+	.loc 2 1853 0
+	add	w0, w22, 1
+	str	w0, [x20, 2560]
+.L1037:
+	.loc 2 1856 0
+	ldrh	w1, [x3]
+	mov	w0, 61589
+	cmp	w1, w0
+	beq	.L1038
+	.loc 2 1856 0 is_stmt 0 discriminator 1
+	ldr	x1, [x29, 128]
+	mov	w2, 1856
+	str	x3, [x29, 136]
+	adrp	x0, .LC1
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1091:
+	ldr	x3, [x29, 136]
+.L1038:
+	.loc 2 1858 0 is_stmt 1
+	ldp	w26, w0, [x3, 8]
+.LVL1092:
+	.loc 2 1859 0
+	add	x1, x29, 168
+	.loc 2 1858 0
+	str	w0, [x29, 164]
+	.loc 2 1859 0
+	mov	w2, 0
+.LVL1093:
+	mov	w0, w26
+	bl	log2phys
+.LVL1094:
+	.loc 2 1860 0
+	ldr	w1, [x21, -84]
+	cmn	w1, #1
+	beq	.L1039
+	.loc 2 1861 0 discriminator 1
+	mov	w0, w22
+	bl	ftl_cmp_data_ver
+.LVL1095:
+	.loc 2 1860 0 discriminator 1
+	cbz	w0, .L1039
+.LBB265:
+	.loc 2 1865 0
+	ldr	w1, [x29, 164]
+	cmn	w1, #1
+	beq	.L1040
+	.loc 2 1866 0
+	ldr	x0, [x20, 3968]
+	.loc 2 1868 0
+	mov	w2, 0
+	.loc 2 1866 0
+	add	x0, x0, x24
+	ldr	x4, [x0, 16]
+	.loc 2 1867 0
+	str	w1, [x0, 4]
+	.loc 2 1868 0
+	mov	w1, 1
+	.loc 2 1866 0
+	str	x4, [x29, 136]
+	.loc 2 1868 0
+	ldr	x0, [x20, 3968]
+	add	x0, x0, x24
+	bl	FlashReadPages
+.LVL1096:
+	.loc 2 1881 0
+	ldr	x0, [x20, 3968]
+	ldr	x4, [x29, 136]
+	add	x3, x0, x24
+	ldr	w0, [x0, x24]
+	cmn	w0, #1
+	bne	.L1041
+.LVL1097:
+.L1042:
+	.loc 2 1913 0
+	mov	w0, -1
+	str	w0, [x29, 164]
+	.loc 2 1914 0
+	ldrh	w0, [x19]
+	bl	decrement_vpc_count
+.LVL1098:
+.L1050:
+.LBE265:
+	.loc 2 1954 0
+	ldr	w4, [x29, 164]
+	cmn	w4, #1
+	beq	.L1033
+.L1064:
+	.loc 2 1956 0
+	lsr	w0, w4, 10
+.LVL1099:
+	bl	P2V_block_in_plane
+.LVL1100:
+	and	w26, w0, 65535
+.LVL1101:
+	.loc 2 1957 0
+	ldrh	w0, [x20, 20]
+	.loc 2 1956 0
+	mov	w3, w26
+.LVL1102:
+	.loc 2 1957 0
+	cmp	w0, w26
+	bhi	.L1055
+	.loc 2 1957 0 is_stmt 0 discriminator 1
+	ldr	x1, [x29, 128]
+	mov	w2, 1957
+	adrp	x0, .LC1
+	str	w26, [x29, 136]
+.LVL1103:
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1104:
+	ldr	w3, [x29, 136]
+.LVL1105:
+.L1055:
+	.loc 2 1958 0 is_stmt 1
+	ldr	x1, [x20, 2320]
+	ubfiz	x0, x26, 1, 16
+	ldrh	w0, [x1, x0]
+	cbz	w0, .L1056
+	.loc 2 1960 0
+	mov	w0, w3
+	b	.L1117
+.LVL1106:
+.L1040:
+.LBB266:
+	.loc 2 1872 0
+	ldp	w1, w0, [x29, 168]
+	cmp	w1, w0
+	bne	.L1043
+	.loc 2 1873 0
+	mov	w2, 1
+	add	x1, x29, 164
+	mov	w0, w26
+	bl	log2phys
+.LVL1107:
+	b	.L1043
+.L1041:
+	.loc 2 1881 0 discriminator 1
+	ldr	w0, [x4, 8]
+	cmp	w26, w0
+	bne	.L1042
+	.loc 2 1869 0 discriminator 2
+	ldr	w0, [x4, 4]
+.LVL1108:
+	str	w0, [x29, 136]
+	str	x4, [x29, 104]
+	.loc 2 1882 0 discriminator 2
+	uxtw	x1, w0
+.LVL1109:
+	ldr	w0, [x21, -84]
+	bl	ftl_cmp_data_ver
+.LVL1110:
+	.loc 2 1881 0 discriminator 2
+	cbz	w0, .L1042
+	.loc 2 1883 0
+	ldp	w0, w1, [x29, 168]
+	ldr	x4, [x29, 104]
+	cmp	w0, w1
+	.loc 2 1885 0
+	ldr	w1, [x29, 164]
+	.loc 2 1883 0
+	bne	.L1045
+.LVL1111:
+.L1115:
+	.loc 2 1909 0
+	mov	w0, w26
+	bl	FtlReUsePrevPpa
+.LVL1112:
+	b	.L1042
+.L1045:
+	.loc 2 1886 0
+	cmp	w0, w1
+	beq	.L1042
+	.loc 2 1887 0
+	cmn	w0, #1
+	beq	.L1046
+	.loc 2 1888 0
+	ldr	x4, [x3, 16]
+	.loc 2 1890 0
+	mov	w2, 0
+	.loc 2 1889 0
+	str	w0, [x3, 4]
+	.loc 2 1890 0
+	mov	w1, 1
+	.loc 2 1888 0
+	str	x4, [x29, 104]
+	.loc 2 1890 0
+	ldr	x0, [x20, 3968]
+	add	x0, x0, x24
+	bl	FlashReadPages
+.LVL1113:
+	ldr	x4, [x29, 104]
+.L1047:
+	.loc 2 1895 0
+	adrp	x0, .LANCHOR0+3968
+	ldr	x0, [x0, #:lo12:.LANCHOR0+3968]
+	ldr	w0, [x0, x24]
+	cmn	w0, #1
+	beq	.L1048
+	.loc 2 1896 0
+	ldr	w3, [x4, 4]
+	.loc 2 1897 0
+	ldr	w0, [x21, -84]
+.LVL1114:
+	mov	w1, w3
+	bl	ftl_cmp_data_ver
+.LVL1115:
+	cbz	w0, .L1048
+	.loc 2 1898 0
+	ldr	w0, [x29, 136]
+	mov	w1, w3
+	bl	ftl_cmp_data_ver
+.LVL1116:
+	cbz	w0, .L1042
+.L1048:
+	.loc 2 1909 0
+	ldr	w1, [x29, 164]
+	b	.L1115
+.LVL1117:
+.L1046:
+	.loc 2 1892 0
+	str	w0, [x3]
+	b	.L1047
+.LVL1118:
+.L1039:
+.LBE266:
+	.loc 2 1915 0
+	ldp	w1, w0, [x29, 168]
+	cmp	w1, w0
+	beq	.L1050
+	.loc 2 1917 0
+	mov	w2, 1
+	add	x1, x29, 172
+	mov	w0, w26
+	bl	log2phys
+.LVL1119:
+	.loc 2 1918 0
+	ldr	w4, [x29, 168]
+	cmn	w4, #1
+	beq	.L1050
+	.loc 2 1918 0 is_stmt 0 discriminator 1
+	ldr	w0, [x29, 164]
+	cmp	w4, w0
+	beq	.L1064
+	.loc 2 1919 0 is_stmt 1
+	lsr	w0, w4, 10
+	bl	P2V_block_in_plane
+.LVL1120:
+	.loc 2 1921 0
+	ldrh	w1, [x20, 2360]
+	.loc 2 1919 0
+	and	w0, w0, 65535
+.LVL1121:
+	.loc 2 1921 0
+	cmp	w1, w0
+	beq	.L1054
+	.loc 2 1921 0 is_stmt 0 discriminator 1
+	ldrh	w1, [x20, 2408]
+	cmp	w1, w0
+	beq	.L1054
+	.loc 2 1922 0 is_stmt 1
+	ldrh	w1, [x20, 2456]
+	cmp	w1, w0
+	bne	.L1050
+.L1054:
+.LBB267:
+	.loc 2 1927 0
+	ldr	x0, [x20, 3968]
+.LVL1122:
+	.loc 2 1930 0
+	mov	w2, 0
+	mov	w1, 1
+	.loc 2 1929 0
+	str	w4, [x0, 4]
+	.loc 2 1927 0
+	ldr	x3, [x0, 16]
+	.loc 2 1930 0
+	ldr	x0, [x20, 3968]
+	.loc 2 1927 0
+	str	x3, [x29, 136]
+	.loc 2 1930 0
+	bl	FlashReadPages
+.LVL1123:
+	.loc 2 1933 0
+	ldr	x0, [x20, 3968]
+	ldr	w0, [x0]
+	cmn	w0, #1
+	beq	.L1050
+	.loc 2 1934 0
+	ldr	x3, [x29, 136]
+	mov	w0, w22
+	ldr	w1, [x3, 4]
+	bl	ftl_cmp_data_ver
+.LVL1124:
+	cbnz	w0, .L1050
+	.loc 2 1941 0
+	mov	w2, 1
+	add	x1, x29, 168
+	mov	w0, w26
+	bl	log2phys
+.LVL1125:
+	b	.L1050
+.LVL1126:
+.L1056:
+.LBE267:
+	.loc 2 1962 0
+	mov	w1, w26
+	adrp	x0, .LC95
+	add	x0, x0, :lo12:.LC95
+	bl	printk
+.LVL1127:
+	b	.L1033
+.LVL1128:
+.L1035:
+	.loc 2 1969 0
+	ldr	w0, [x21, -76]
+	cmp	w0, 31
+	bhi	.L1057
+	.loc 2 1970 0
+	ldr	x1, [x29, 112]
+.LVL1129:
+	str	w5, [x1, w0, uxtw 2]
+	.loc 2 1971 0
+	add	w0, w0, 1
+	str	w0, [x21, -76]
+.LVL1130:
+.L1057:
+	.loc 2 1973 0
+	ldrh	w0, [x19]
+	bl	decrement_vpc_count
+.LVL1131:
+	.loc 2 1975 0
+	ldr	w0, [x21, -84]
+	cmn	w0, #1
+	bne	.L1058
+.L1116:
+	.loc 2 1978 0
+	str	w22, [x21, -84]
+	b	.L1033
+.L1058:
+	.loc 2 1977 0
+	cmp	w22, w0
+	bcs	.L1033
+	b	.L1116
+.L1061:
+	.loc 2 1986 0 discriminator 2
+	add	w0, w0, 1
+	and	w0, w0, 65535
+	b	.L1060
+.LVL1132:
+.L1034:
+	.loc 2 2002 0
+	strb	w28, [x19, 6]
+	.loc 2 2003 0
+	strh	w23, [x19, 2]
+	b	.L1119
+	.cfi_endproc
+.LFE220:
+	.size	FtlRecoverySuperblock, .-FtlRecoverySuperblock
+	.align	2
+	.global	FtlSuperblockPowerLostFix
+	.type	FtlSuperblockPowerLostFix, %function
+FtlSuperblockPowerLostFix:
+.LFB227:
+	.loc 2 2156 0
+	.cfi_startproc
+.LVL1133:
+	stp	x29, x30, [sp, -96]!
+	.cfi_def_cfa_offset 96
+	.cfi_offset 29, -96
+	.cfi_offset 30, -88
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -80
+	.cfi_offset 20, -72
+	adrp	x20, .LANCHOR0
+	stp	x21, x22, [sp, 32]
+	mov	x19, x0
+	.cfi_offset 21, -64
+	.cfi_offset 22, -56
+	.loc 2 2169 0
+	add	x21, x20, :lo12:.LANCHOR0
+	.loc 2 2156 0
+	str	x23, [sp, 48]
+	.cfi_offset 23, -48
+	.loc 2 2168 0
+	mov	w22, -1
+	.loc 2 2162 0
+	mov	w23, 7
+.L1121:
+	subs	w23, w23, #1
+	beq	.L1123
+	.loc 2 2163 0
+	ldrh	w0, [x19, 4]
+	cbnz	w0, .L1122
+.LVL1134:
+.L1123:
+	.loc 2 2183 0
+	add	x20, x20, :lo12:.LANCHOR0
+	ldrh	w0, [x19]
+	ldrh	w3, [x19, 4]
+	ldr	x2, [x20, 2320]
+	lsl	x0, x0, 1
+	ldrh	w1, [x2, x0]
+	sub	w1, w1, w3
+	strh	w1, [x2, x0]
+	.loc 2 2185 0
+	strb	wzr, [x19, 6]
+	.loc 2 2184 0
+	ldrh	w0, [x20, 82]
+	strh	w0, [x19, 2]
+	.loc 2 2186 0
+	strh	wzr, [x19, 4]
+	.loc 2 2188 0
+	ldp	x19, x20, [sp, 16]
+.LVL1135:
+	ldp	x21, x22, [sp, 32]
+	ldr	x23, [sp, 48]
+	ldp	x29, x30, [sp], 96
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 23
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1136:
+.L1122:
+	.cfi_restore_state
+	.loc 2 2165 0
+	mov	x0, x19
+	bl	get_new_active_ppa
+.LVL1137:
+	str	w0, [x29, 68]
+	.loc 2 2166 0
+	cmn	w0, #1
+	beq	.L1123
+	.loc 2 2170 0
+	ldr	x1, [x21, 3392]
+	.loc 2 2179 0
+	mov	w3, 0
+	.loc 2 2169 0
+	ldr	x0, [x21, 2288]
+	.loc 2 2179 0
+	mov	w2, 0
+	.loc 2 2170 0
+	stp	x0, x1, [x29, 72]
+	.loc 2 2168 0
+	str	w22, [x29, 88]
+	.loc 2 2174 0
+	stp	w22, w22, [x1, 8]
+	.loc 2 2175 0
+	ldrh	w0, [x19]
+	strh	w0, [x1, 2]
+	.loc 2 2176 0
+	strh	wzr, [x1]
+	.loc 2 2178 0
+	ldr	w0, [x21, 2560]
+	str	w0, [x1, 4]
+	.loc 2 2179 0
+	mov	w1, 1
+	.loc 2 2178 0
+	add	w0, w0, 1
+	cmn	w0, #1
+	csel	w0, w0, wzr, ne
+	str	w0, [x21, 2560]
+	.loc 2 2179 0
+	add	x0, x29, 64
+	bl	FlashProgPages
+.LVL1138:
+	.loc 2 2180 0
+	ldrh	w0, [x19]
+	bl	decrement_vpc_count
+.LVL1139:
+	b	.L1121
+	.cfi_endproc
+.LFE227:
+	.size	FtlSuperblockPowerLostFix, .-FtlSuperblockPowerLostFix
+	.align	2
+	.global	FtlLoadBbt
+	.type	FtlLoadBbt, %function
+FtlLoadBbt:
+.LFB168:
+	.loc 4 173 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -64]!
+	.cfi_def_cfa_offset 64
+	.cfi_offset 29, -64
+	.cfi_offset 30, -56
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -48
+	.cfi_offset 20, -40
+	.loc 4 180 0
+	adrp	x19, .LANCHOR0
+	.loc 4 173 0
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -16
+	.cfi_offset 24, -8
+	.loc 4 180 0
+	add	x23, x19, :lo12:.LANCHOR0
+	.loc 4 173 0
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -32
+	.cfi_offset 22, -24
+	.loc 4 180 0
+	add	x21, x23, 3360
+	.loc 4 196 0
+	mov	w24, 61649
+	.loc 4 180 0
+	ldr	x0, [x23, 2288]
+	.loc 4 181 0
+	ldr	x22, [x23, 3392]
+	stp	x0, x22, [x21, 8]
+	.loc 4 183 0
+	bl	FtlBbtMemInit
+.LVL1140:
+	.loc 4 184 0
+	ldrh	w20, [x23, 78]
+	sub	w20, w20, #1
+	and	w20, w20, 65535
+.LVL1141:
+.L1133:
+	.loc 4 184 0 is_stmt 0 discriminator 1
+	ldrh	w0, [x23, 78]
+	sub	w0, w0, #16
+	cmp	w20, w0
+	ble	.L1136
+	.loc 4 185 0 is_stmt 1
+	lsl	w0, w20, 10
+	.loc 4 186 0
+	mov	w2, 1
+	.loc 4 185 0
+	str	w0, [x21, 4]
+	.loc 4 186 0
+	mov	w1, w2
+	mov	x0, x21
+	bl	FlashReadPages
+.LVL1142:
+	.loc 4 187 0
+	ldr	w0, [x21]
+	cmn	w0, #1
+	bne	.L1134
+	.loc 4 188 0
+	ldr	w0, [x21, 4]
+	.loc 4 189 0
+	mov	w2, 1
+	mov	w1, w2
+	.loc 4 188 0
+	add	w0, w0, 1
+	str	w0, [x21, 4]
+	.loc 4 189 0
+	mov	x0, x21
+	bl	FlashReadPages
+.LVL1143:
+.L1134:
+	.loc 4 191 0
+	ldr	w0, [x21]
+	cmn	w0, #1
+	beq	.L1135
+	.loc 4 196 0
+	ldrh	w0, [x22]
+	cmp	w0, w24
+	bne	.L1135
+	.loc 4 199 0
+	ldr	w1, [x22, 4]
+	str	w1, [x23, 144]
+	.loc 4 198 0
+	strh	w20, [x23, 136]
+	.loc 4 200 0
+	ldrh	w1, [x22, 8]
+	strh	w1, [x23, 140]
+.L1136:
+	.loc 4 216 0
+	add	x21, x19, :lo12:.LANCHOR0
+	mov	w0, 65535
+	ldrh	w1, [x21, 136]
+	cmp	w1, w0
+	beq	.L1150
+	.loc 4 222 0
+	ldrh	w1, [x21, 140]
+	cmp	w1, w0
+	beq	.L1140
+	.loc 4 224 0
+	add	x0, x21, 3360
+	lsl	w1, w1, 10
+	.loc 4 225 0
+	mov	w2, 1
+	.loc 4 224 0
+	str	w1, [x0, 4]
+	.loc 4 225 0
+	mov	w1, w2
+	bl	FlashReadPages
+.LVL1144:
+	.loc 4 226 0
+	ldr	w0, [x21, 3360]
+	cmn	w0, #1
+	beq	.L1140
+	.loc 4 229 0
+	ldrh	w1, [x22]
+	mov	w0, 61649
+	cmp	w1, w0
+	bne	.L1140
+	.loc 4 229 0 is_stmt 0 discriminator 1
+	ldr	w1, [x21, 144]
+	ldr	w0, [x22, 4]
+	cmp	w0, w1
+	bls	.L1140
+	.loc 4 232 0 is_stmt 1
+	str	w0, [x21, 144]
+	.loc 4 231 0
+	ldrh	w1, [x21, 140]
+	.loc 4 233 0
+	ldrh	w0, [x22, 8]
+	.loc 4 231 0
+	strh	w1, [x21, 136]
+	.loc 4 233 0
+	strh	w0, [x21, 140]
+.L1140:
+	.loc 4 238 0
+	add	x20, x19, :lo12:.LANCHOR0
+.LVL1145:
+	mov	w1, 1
+	.loc 4 243 0
+	add	x23, x20, 3360
+	.loc 4 247 0
+	mov	w24, 61649
+	.loc 4 238 0
+	ldrh	w0, [x20, 136]
+	bl	FtlGetLastWrittenPage
+.LVL1146:
+	sxth	w21, w0
+.LVL1147:
+	.loc 4 239 0
+	add	w0, w0, 1
+	strh	w0, [x20, 138]
+.L1142:
+	.loc 4 241 0
+	tbz	w21, #31, .L1145
+	.loc 4 254 0
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 254
+	add	x1, x1, 520
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1148:
+.L1144:
+	.loc 4 255 0
+	add	x1, x19, :lo12:.LANCHOR0
+	ldrh	w0, [x22, 10]
+	.loc 4 257 0
+	mov	w2, 65535
+	.loc 4 255 0
+	strh	w0, [x1, 142]
+	.loc 4 257 0
+	ldrh	w0, [x22, 12]
+	cmp	w0, w2
+	beq	.L1147
+	.loc 4 259 0
+	ldr	w2, [x1, 8]
+	cmp	w0, w2
+	beq	.L1147
+	.loc 4 259 0 is_stmt 0 discriminator 1
+	ldrh	w1, [x1, 22]
+	lsr	w1, w1, 2
+	cmp	w2, w1
+	bcs	.L1147
+	.loc 4 261 0 is_stmt 1
+	cmp	w0, w1
+	bcs	.L1147
+	.loc 4 263 0
+	bl	FtlSysBlkNumInit
+.LVL1149:
+.L1147:
+	add	x19, x19, :lo12:.LANCHOR0
+	.loc 4 269 0 discriminator 1
+	adrp	x21, .LANCHOR3
+.LVL1150:
+	add	x22, x19, 168
+	add	x21, x21, :lo12:.LANCHOR3
+	.loc 4 173 0 discriminator 1
+	mov	w20, 0
+.LVL1151:
+.L1148:
+	.loc 4 268 0 discriminator 1
+	ldrh	w0, [x19, 34]
+	cmp	w20, w0
+	bcc	.L1149
+	.loc 4 275 0
+	mov	w0, 0
+.LVL1152:
+.L1132:
+	.loc 4 276 0
+	ldp	x19, x20, [sp, 16]
+.LVL1153:
+	ldp	x21, x22, [sp, 32]
+	ldp	x23, x24, [sp, 48]
+	ldp	x29, x30, [sp], 64
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1154:
+.L1135:
+	.cfi_restore_state
+	.loc 4 184 0 discriminator 2
+	sub	w20, w20, #1
+.LVL1155:
+	and	w20, w20, 65535
+.LVL1156:
+	b	.L1133
+.LVL1157:
+.L1145:
+	.loc 4 243 0
+	ldrh	w0, [x20, 136]
+	.loc 4 245 0
+	mov	w2, 1
+	mov	w1, w2
+	.loc 4 243 0
+	orr	w0, w21, w0, lsl 10
+	str	w0, [x23, 4]
+	.loc 4 244 0
+	ldr	x0, [x20, 2288]
+	str	x0, [x23, 8]
+	.loc 4 245 0
+	mov	x0, x23
+	bl	FlashReadPages
+.LVL1158:
+	.loc 4 247 0
+	ldr	w0, [x23]
+	cmn	w0, #1
+	beq	.L1143
+	.loc 4 247 0 is_stmt 0 discriminator 1
+	ldrh	w0, [x22]
+	cmp	w0, w24
+	beq	.L1144
+.L1143:
+	sub	w21, w21, #1
+.LVL1159:
+	sxth	w21, w21
+.LVL1160:
+	b	.L1142
+.LVL1161:
+.L1149:
+	.loc 4 269 0 is_stmt 1 discriminator 3
+	ldrh	w2, [x21, -248]
+	ldr	x0, [x19, 3368]
+	mul	w1, w2, w20
+	lsl	w2, w2, 2
+	.loc 4 268 0 discriminator 3
+	add	w20, w20, 1
+	.loc 4 269 0 discriminator 3
+	add	x1, x0, x1, lsl 2
+	ldr	x0, [x22], 8
+	bl	ftl_memcpy
+.LVL1162:
+	b	.L1148
+.LVL1163:
+.L1150:
+	.loc 4 218 0
+	mov	w0, -1
+	b	.L1132
+	.cfi_endproc
+.LFE168:
+	.size	FtlLoadBbt, .-FtlLoadBbt
+	.align	2
+	.global	FtlMakeBbt
+	.type	FtlMakeBbt, %function
+FtlMakeBbt:
+.LFB170:
+	.loc 4 317 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -96]!
+	.cfi_def_cfa_offset 96
+	.cfi_offset 29, -96
+	.cfi_offset 30, -88
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -80
+	.cfi_offset 20, -72
+	adrp	x19, .LANCHOR0
+	stp	x25, x26, [sp, 64]
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 25, -32
+	.cfi_offset 26, -24
+	.cfi_offset 21, -64
+	.cfi_offset 22, -56
+	mov	x21, x19
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -48
+	.cfi_offset 24, -40
+	.loc 4 327 0
+	mov	w24, 0
+.LVL1164:
+	.loc 4 317 0
+	stp	x27, x28, [sp, 80]
+	.cfi_offset 27, -16
+	.cfi_offset 28, -8
+	.loc 4 325 0
+	bl	FtlBbtMemInit
+.LVL1165:
+	.loc 4 326 0
+	bl	FtlLoadFactoryBbt
+.LVL1166:
+	.loc 4 357 0
+	adrp	x28, .LANCHOR3
+	add	x0, x19, :lo12:.LANCHOR0
+	add	x28, x28, :lo12:.LANCHOR3
+	add	x26, x0, 168
+	add	x25, x0, 148
+	.loc 4 327 0
+	mov	x19, x0
+	.loc 4 328 0
+	add	x20, x0, 3360
+.LVL1167:
+.L1163:
+	.loc 4 327 0 discriminator 1
+	ldrh	w0, [x19, 34]
+	cmp	w24, w0
+	bcc	.L1169
+	.loc 4 381 0 discriminator 1
+	add	x20, x21, :lo12:.LANCHOR0
+	mov	w19, 0
+.L1170:
+	ldrh	w0, [x20, 94]
+	cmp	w0, w19
+	bhi	.L1171
+	.loc 4 387 0
+	add	x20, x20, 136
+	ldrh	w19, [x20, 12]
+	.loc 4 396 0
+	mov	w22, 65535
+	.loc 4 387 0
+	sub	w19, w19, #1
+	and	w19, w19, 65535
+.L1172:
+	.loc 4 387 0 is_stmt 0 discriminator 1
+	ldrh	w0, [x20, 12]
+	sub	w0, w0, #48
+	cmp	w19, w0
+	ble	.L1176
+	.loc 4 389 0 is_stmt 1
+	mov	w0, w19
+	bl	FtlBbmIsBadBlock
+.LVL1168:
+	cmp	w0, 1
+	beq	.L1173
+	.loc 4 391 0
+	mov	w0, w19
+	bl	FlashTestBlk
+.LVL1169:
+	cbz	w0, .L1174
+	.loc 4 393 0
+	mov	w0, w19
+	bl	FtlBbmMapBadBlock
+.LVL1170:
+.L1173:
+	.loc 4 387 0 discriminator 2
+	sub	w19, w19, #1
+	and	w19, w19, 65535
+	b	.L1172
+.L1169:
+	.loc 4 328 0
+	ldr	x0, [x19, 2288]
+	.loc 4 331 0
+	mov	w2, 65535
+	.loc 4 329 0
+	ldr	x27, [x19, 3392]
+	.loc 4 331 0
+	ldrh	w1, [x25]
+	.loc 4 329 0
+	stp	x0, x27, [x20, 8]
+	.loc 4 331 0
+	cmp	w1, w2
+	beq	.L1164
+	.loc 4 333 0
+	ldrh	w23, [x19, 78]
+.LVL1171:
+	.loc 4 335 0
+	mov	w2, 1
+	.loc 4 333 0
+	madd	w23, w23, w24, w1
+.LVL1172:
+	.loc 4 335 0
+	mov	w1, w2
+	.loc 4 334 0
+	lsl	w0, w23, 10
+	str	w0, [x20, 4]
+	.loc 4 335 0
+	mov	x0, x20
+	bl	FlashReadPages
+.LVL1173:
+	.loc 4 336 0
+	ldr	x1, [x20, 8]
+	ldr	x0, [x26]
+	ldrh	w2, [x19, 78]
+	add	w2, w2, 7
+	lsr	w2, w2, 3
+	bl	ftl_memcpy
+.LVL1174:
+.L1165:
+	.loc 4 376 0 discriminator 2
+	mov	w0, w23
+	.loc 4 327 0 discriminator 2
+	add	w24, w24, 1
+	.loc 4 376 0 discriminator 2
+	bl	FtlBbmMapBadBlock
+.LVL1175:
+	add	x26, x26, 8
+	add	x25, x25, 2
+	b	.L1163
+.L1164:
+	.loc 4 340 0
+	mov	w1, w24
+	bl	FlashGetBadBlockList
+.LVL1176:
+	.loc 4 341 0
+	ldr	x0, [x20, 8]
+	ldr	x1, [x26]
+	bl	FtlBbt2Bitmap
+.LVL1177:
+	.loc 4 343 0
+	ldrh	w22, [x19, 78]
+.L1167:
+	.loc 4 347 0
+	sub	w22, w22, #1
+	and	w22, w22, 65535
+.L1166:
+	.loc 4 345 0
+	ldrh	w0, [x19, 78]
+	madd	w0, w24, w0, w22
+	bl	FtlBbmIsBadBlock
+.LVL1178:
+	cmp	w0, 1
+	beq	.L1167
+	.loc 4 350 0
+	ldr	x0, [x19, 3392]
+	mov	w2, 16
+	.loc 4 349 0
+	strh	w22, [x25]
+	.loc 4 350 0
+	mov	w1, 0
+	bl	ftl_memset
+.LVL1179:
+	.loc 4 351 0
+	ldr	x0, [x19, 2288]
+	mov	w2, 4096
+	mov	w1, 0
+	bl	ftl_memset
+.LVL1180:
+	.loc 4 353 0
+	str	wzr, [x27, 4]
+	.loc 4 352 0
+	mov	w0, -3872
+	strh	w0, [x27]
+	.loc 4 354 0
+	ldrh	w0, [x25]
+	strh	w0, [x27, 2]
+	.loc 4 355 0
+	ldrh	w23, [x19, 78]
+.LVL1181:
+	ldrh	w0, [x25]
+	.loc 4 357 0
+	ldr	x1, [x26]
+	ldrh	w2, [x28, -248]
+	.loc 4 355 0
+	madd	w23, w23, w24, w0
+.LVL1182:
+	.loc 4 357 0
+	lsl	w2, w2, 2
+	.loc 4 356 0
+	lsl	w0, w23, 10
+	str	w0, [x20, 4]
+	.loc 4 357 0
+	ldr	x0, [x20, 8]
+	bl	ftl_memcpy
+.LVL1183:
+	.loc 4 358 0
+	mov	w2, 1
+	mov	x0, x20
+	mov	w1, w2
+	bl	FlashEraseBlocks
+.LVL1184:
+	.loc 4 359 0
+	mov	w3, 1
+	mov	x0, x20
+	mov	w2, w3
+	mov	w1, w3
+	bl	FlashProgPages
+.LVL1185:
+	.loc 4 360 0
+	ldr	w0, [x20]
+	cmn	w0, #1
+	bne	.L1165
+	.loc 4 362 0
+	mov	w0, w23
+	bl	FtlBbmMapBadBlock
+.LVL1186:
+	.loc 4 363 0
+	b	.L1166
+.L1171:
+	.loc 4 383 0 discriminator 3
+	mov	w0, w19
+	.loc 4 381 0 discriminator 3
+	add	w19, w19, 1
+	.loc 4 383 0 discriminator 3
+	bl	FtlBbmMapBadBlock
+.LVL1187:
+	.loc 4 381 0 discriminator 3
+	and	w19, w19, 65535
+	b	.L1170
+.L1174:
+	.loc 4 396 0
+	ldrh	w0, [x20]
+	cmp	w0, w22
+	bne	.L1175
+	.loc 4 398 0
+	strh	w19, [x20]
+	b	.L1173
+.L1175:
+	.loc 4 402 0
+	strh	w19, [x20, 4]
+.L1176:
+	.loc 4 411 0
+	add	x21, x21, :lo12:.LANCHOR0
+	.loc 4 416 0
+	mov	w2, 2
+	.loc 4 414 0
+	ldr	x1, [x21, 3912]
+	ldrh	w0, [x21, 136]
+	.loc 4 413 0
+	str	wzr, [x21, 144]
+	.loc 4 411 0
+	strh	wzr, [x21, 138]
+	.loc 4 414 0
+	lsl	w0, w0, 10
+	str	w0, [x1, 4]
+	.loc 4 415 0
+	ldr	x0, [x21, 3912]
+	ldrh	w1, [x21, 140]
+	lsl	w1, w1, 10
+	str	w1, [x0, 36]
+	.loc 4 416 0
+	mov	w1, 1
+	bl	FlashEraseBlocks
+.LVL1188:
+	.loc 4 418 0
+	ldrh	w0, [x21, 136]
+	bl	FtlBbmMapBadBlock
+.LVL1189:
+	.loc 4 419 0
+	ldrh	w0, [x21, 140]
+	bl	FtlBbmMapBadBlock
+.LVL1190:
+	.loc 4 421 0
+	bl	FtlBbmTblFlush
+.LVL1191:
+	.loc 4 426 0
+	strh	wzr, [x21, 138]
+	.loc 4 422 0
+	ldr	w0, [x21, 144]
+	.loc 4 425 0
+	ldrh	w1, [x21, 140]
+	.loc 4 422 0
+	add	w0, w0, 1
+	str	w0, [x21, 144]
+	.loc 4 424 0
+	ldrh	w0, [x21, 136]
+	.loc 4 427 0
+	strh	w0, [x21, 140]
+	.loc 4 425 0
+	strh	w1, [x21, 136]
+	.loc 4 429 0
+	bl	FtlBbmTblFlush
+.LVL1192:
+	.loc 4 432 0
+	mov	w0, 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+	ldp	x23, x24, [sp, 48]
+.LVL1193:
+	ldp	x25, x26, [sp, 64]
+	ldp	x27, x28, [sp, 80]
+	ldp	x29, x30, [sp], 96
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 28
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE170:
+	.size	FtlMakeBbt, .-FtlMakeBbt
+	.align	2
+	.global	FtlVendorPartWrite
+	.type	FtlVendorPartWrite, %function
+FtlVendorPartWrite:
+.LFB202:
+	.loc 2 786 0
+	.cfi_startproc
+.LVL1194:
+	stp	x29, x30, [sp, -208]!
+	.cfi_def_cfa_offset 208
+	.cfi_offset 29, -208
+	.cfi_offset 30, -200
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -160
+	.cfi_offset 24, -152
+	.loc 2 794 0
+	adrp	x23, .LANCHOR0
+	.loc 2 786 0
+	stp	x25, x26, [sp, 64]
+	.cfi_offset 25, -144
+	.cfi_offset 26, -136
+	mov	x26, x2
+	stp	x27, x28, [sp, 80]
+	.loc 2 794 0
+	add	w2, w0, w1
+.LVL1195:
+	.cfi_offset 27, -128
+	.cfi_offset 28, -120
+	.loc 2 786 0
+	mov	w28, w0
+	.loc 2 794 0
+	add	x0, x23, :lo12:.LANCHOR0
+.LVL1196:
+	.loc 2 786 0
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -176
+	.cfi_offset 22, -168
+	mov	w21, w1
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -192
+	.cfi_offset 20, -184
+	.loc 2 794 0
+	ldrh	w1, [x0, 76]
+.LVL1197:
+	cmp	w2, w1
+	bhi	.L1190
+	.loc 2 791 0
+	ldrh	w22, [x0, 88]
+	.loc 2 812 0
+	adrp	x24, .LANCHOR3
+	add	x24, x24, :lo12:.LANCHOR3
+	.loc 2 806 0
+	add	x27, x29, 144
+	.loc 2 812 0
+	sub	x24, x24, #168
+	.loc 2 791 0
+	mov	w25, 0
+	lsr	w22, w28, w22
+.LVL1198:
+.L1184:
+	.loc 2 797 0
+	cbnz	w21, .L1189
+.L1182:
+	.loc 2 820 0
+	mov	w0, w25
+	ldp	x19, x20, [sp, 16]
+.LVL1199:
+	ldp	x21, x22, [sp, 32]
+.LVL1200:
+	ldp	x23, x24, [sp, 48]
+	ldp	x25, x26, [sp, 64]
+.LVL1201:
+	ldp	x27, x28, [sp, 80]
+.LVL1202:
+	ldp	x29, x30, [sp], 208
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 28
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1203:
+.L1189:
+	.cfi_restore_state
+	.loc 2 798 0
+	add	x2, x23, :lo12:.LANCHOR0
+	.loc 2 799 0
+	ldrh	w1, [x2, 38]
+	.loc 2 798 0
+	ldr	x0, [x2, 4072]
+	.loc 2 799 0
+	udiv	w20, w28, w1
+	.loc 2 798 0
+	ldr	w3, [x0, w22, uxtw 2]
+	.loc 2 802 0
+	and	w0, w21, 65535
+.LVL1204:
+	.loc 2 799 0
+	msub	w20, w20, w1, w28
+	.loc 2 800 0
+	sub	w19, w1, w20
+.LVL1205:
+	and	w19, w19, 65535
+.LVL1206:
+	.loc 2 802 0
+	cmp	w21, w19
+	csel	w19, w0, w19, cc
+.LVL1207:
+	.loc 2 803 0
+	cbz	w3, .L1186
+	.loc 2 803 0 is_stmt 0 discriminator 1
+	cmp	w19, w1
+	beq	.L1186
+	.loc 2 805 0 is_stmt 1
+	ldr	x0, [x2, 4000]
+	.loc 2 807 0
+	mov	w2, 1
+	.loc 2 806 0
+	stp	x0, x27, [x29, 120]
+	.loc 2 807 0
+	mov	w1, w2
+	.loc 2 804 0
+	str	w3, [x29, 116]
+	.loc 2 807 0
+	add	x0, x29, 112
+	bl	FlashReadPages
+.LVL1208:
+.L1187:
+	.loc 2 811 0
+	add	x4, x23, :lo12:.LANCHOR0
+	lsl	w3, w19, 9
+	lsl	w20, w20, 9
+	mov	w2, w3
+	asr	w20, w20, 2
+	mov	x1, x26
+	ldr	x0, [x4, 4000]
+	.loc 2 815 0
+	sub	w21, w21, w19
+	.loc 2 811 0
+	str	w3, [x29, 108]
+	.loc 2 816 0
+	add	w28, w28, w19
+	.loc 2 811 0
+	str	x4, [x29, 96]
+	add	x0, x0, x20, sxtw 2
+	bl	ftl_memcpy
+.LVL1209:
+	.loc 2 812 0
+	ldr	x4, [x29, 96]
+	mov	w1, w22
+	mov	x0, x24
+	.loc 2 814 0
+	add	w22, w22, 1
+	.loc 2 812 0
+	ldr	x2, [x4, 4000]
+	bl	FtlMapWritePage
+.LVL1210:
+	.loc 2 813 0
+	cmn	w0, #1
+	.loc 2 817 0
+	ldr	w3, [x29, 108]
+	.loc 2 813 0
+	csinv	w25, w25, wzr, ne
+	.loc 2 817 0
+	add	x26, x26, x3, sxtw
+	b	.L1184
+.LVL1211:
+.L1186:
+	.loc 2 809 0
+	add	x0, x23, :lo12:.LANCHOR0
+.LVL1212:
+	mov	w1, 0
+	ldrh	w2, [x0, 90]
+	ldr	x0, [x0, 4000]
+	bl	ftl_memset
+.LVL1213:
+	b	.L1187
+.LVL1214:
+.L1190:
+	.loc 2 795 0
+	mov	w25, -1
+	b	.L1182
+	.cfi_endproc
+.LFE202:
+	.size	FtlVendorPartWrite, .-FtlVendorPartWrite
+	.align	2
+	.global	Ftl_save_ext_data
+	.type	Ftl_save_ext_data, %function
+Ftl_save_ext_data:
+.LFB225:
+	.loc 2 2110 0
+	.cfi_startproc
+	.loc 2 2111 0
+	adrp	x0, .LANCHOR0
+	add	x0, x0, :lo12:.LANCHOR0
+	mov	w1, 19539
+	movk	w1, 0x4654, lsl 16
+	ldr	w3, [x0, 2712]
+	cmp	w3, w1
+	bne	.L1198
+	.loc 2 2110 0
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	add	x2, x0, 2712
+.LBB270:
+.LBB271:
+	.loc 2 2112 0
+	mov	w1, 64
+.LBE271:
+.LBE270:
+	.loc 2 2110 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+.LBB274:
+.LBB272:
+	.loc 2 2112 0
+	movk	w1, 0x5000, lsl 16
+.LBE272:
+.LBE274:
+	.loc 2 2110 0
+.LBB275:
+.LBB273:
+	.loc 2 2112 0
+	str	w1, [x2, 4]
+	.loc 2 2113 0
+	ldr	w1, [x0, 2548]
+	str	w1, [x2, 88]
+	.loc 2 2114 0
+	ldr	w1, [x0, 2552]
+	str	w1, [x2, 92]
+	.loc 2 2115 0
+	ldr	w1, [x0, 2544]
+	str	w1, [x2, 8]
+	.loc 2 2116 0
+	ldr	w1, [x0, 2532]
+	str	w1, [x2, 12]
+	.loc 2 2117 0
+	ldr	w1, [x0, 2524]
+	str	w1, [x2, 16]
+	.loc 2 2118 0
+	ldr	w1, [x0, 2540]
+	str	w1, [x2, 20]
+	.loc 2 2119 0
+	ldr	w1, [x0, 2568]
+	str	w1, [x2, 28]
+	.loc 2 2120 0
+	ldr	w1, [x0, 2576]
+	str	w1, [x2, 32]
+	.loc 2 2121 0
+	ldr	w1, [x0, 2528]
+	str	w1, [x2, 36]
+	.loc 2 2122 0
+	ldr	w1, [x0, 2536]
+	str	w1, [x2, 40]
+	.loc 2 2123 0
+	ldr	w1, [x0, 2580]
+	.loc 2 2124 0
+	ldr	w0, [x0, 2584]
+	stp	w1, w0, [x2, 44]
+	.loc 2 2125 0
+	mov	w1, 1
+	mov	w0, 0
+	bl	FtlVendorPartWrite
+.LVL1215:
+.LBE273:
+.LBE275:
+	.loc 2 2127 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+.L1198:
+	ret
+	.cfi_endproc
+.LFE225:
+	.size	Ftl_save_ext_data, .-Ftl_save_ext_data
+	.align	2
+	.global	FtlEctTblFlush
+	.type	FtlEctTblFlush, %function
+FtlEctTblFlush:
+.LFB204:
+	.loc 2 861 0
+	.cfi_startproc
+.LVL1216:
+	.loc 2 864 0
+	adrp	x1, .LANCHOR3
+	add	x1, x1, :lo12:.LANCHOR3
+	ldrh	w2, [x1, 56]
+	cmp	w2, 31
+	bhi	.L1205
+	.loc 2 865 0
+	add	w2, w2, 1
+	strh	w2, [x1, 56]
+	.loc 2 866 0
+	mov	w2, 1
+.LVL1217:
+.L1202:
+	adrp	x1, .LANCHOR0
+	.loc 2 868 0
+	cbnz	w0, .L1203
+	.loc 2 868 0 is_stmt 0 discriminator 1
+	add	x0, x1, :lo12:.LANCHOR0
+.LVL1218:
+	ldr	x0, [x0, 4024]
+	ldr	w3, [x0, 20]
+	ldr	w0, [x0, 16]
+	add	w2, w2, w3
+.LVL1219:
+	cmp	w0, w2
+	bcc	.L1207
+.LVL1220:
+.L1203:
+	.loc 2 870 0 is_stmt 1
+	add	x0, x1, :lo12:.LANCHOR0
+.LVL1221:
+	.loc 2 861 0
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 2 870 0
+	ldr	x1, [x0, 4024]
+	ldr	w2, [x1, 16]
+.LVL1222:
+	str	w2, [x1, 20]
+	.loc 2 871 0
+	mov	w2, 17221
+	movk	w2, 0x4254, lsl 16
+	str	w2, [x1]
+	.loc 2 872 0
+	ldr	x2, [x0, 4024]
+	ldrh	w1, [x0, 4008]
+	lsl	w3, w1, 9
+	.loc 2 874 0
+	str	wzr, [x2, 4]
+	.loc 2 872 0
+	str	w3, [x2, 12]
+	.loc 2 873 0
+	ldr	w3, [x2, 8]
+	add	w3, w3, 1
+	str	w3, [x2, 8]
+	.loc 2 875 0
+	ldr	x2, [x0, 4024]
+	mov	w0, 64
+	bl	FtlVendorPartWrite
+.LVL1223:
+	.loc 2 876 0
+	bl	Ftl_save_ext_data
+.LVL1224:
+	.loc 2 878 0
+	mov	w0, 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1225:
+.L1205:
+	.loc 2 862 0
+	mov	w2, 32
+.LVL1226:
+	b	.L1202
+.LVL1227:
+.L1207:
+	.loc 2 878 0
+	mov	w0, 0
+	ret
+	.cfi_endproc
+.LFE204:
+	.size	FtlEctTblFlush, .-FtlEctTblFlush
+	.align	2
+	.global	FtlVendorPartRead
+	.type	FtlVendorPartRead, %function
+FtlVendorPartRead:
+.LFB203:
+	.loc 2 823 0
+	.cfi_startproc
+.LVL1228:
+	stp	x29, x30, [sp, -192]!
+	.cfi_def_cfa_offset 192
+	.cfi_offset 29, -192
+	.cfi_offset 30, -184
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -176
+	.cfi_offset 20, -168
+	.loc 2 832 0
+	adrp	x20, .LANCHOR0
+	add	x20, x20, :lo12:.LANCHOR0
+	.loc 2 823 0
+	stp	x27, x28, [sp, 80]
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 27, -112
+	.cfi_offset 28, -104
+	.cfi_offset 21, -160
+	.cfi_offset 22, -152
+	mov	w28, w0
+	mov	w27, w1
+	stp	x23, x24, [sp, 48]
+	.loc 2 832 0
+	add	w1, w0, w1
+.LVL1229:
+	.loc 2 823 0
+	stp	x25, x26, [sp, 64]
+	.cfi_offset 23, -144
+	.cfi_offset 24, -136
+	.cfi_offset 25, -128
+	.cfi_offset 26, -120
+	.loc 2 832 0
+	ldrh	w0, [x20, 76]
+.LVL1230:
+	cmp	w1, w0
+	bhi	.L1217
+	.loc 2 828 0
+	ldrh	w3, [x20, 88]
+	mov	x23, x2
+	mov	w22, 0
+	.loc 2 846 0
+	mov	w25, -1
+	.loc 2 828 0
+	lsr	w24, w28, w3
+.LVL1231:
+.L1211:
+	.loc 2 834 0
+	cbnz	w27, .L1216
+.L1209:
+	.loc 2 857 0
+	mov	w0, w22
+	ldp	x19, x20, [sp, 16]
+.LVL1232:
+	ldp	x21, x22, [sp, 32]
+	ldp	x23, x24, [sp, 48]
+.LVL1233:
+	ldp	x25, x26, [sp, 64]
+	ldp	x27, x28, [sp, 80]
+.LVL1234:
+	ldp	x29, x30, [sp], 192
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 28
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1235:
+.L1216:
+	.cfi_restore_state
+	.loc 2 836 0
+	ldrh	w19, [x20, 38]
+.LVL1236:
+	.loc 2 835 0
+	ldr	x0, [x20, 4072]
+	.loc 2 836 0
+	udiv	w21, w28, w19
+	.loc 2 835 0
+	ldr	w1, [x0, w24, uxtw 2]
+	.loc 2 839 0
+	and	w0, w27, 65535
+.LVL1237:
+	.loc 2 836 0
+	msub	w21, w21, w19, w28
+	.loc 2 837 0
+	sub	w19, w19, w21
+	and	w19, w19, 65535
+.LVL1238:
+	.loc 2 839 0
+	cmp	w27, w19
+	csel	w19, w0, w19, cc
+	lsl	w26, w19, 9
+.LVL1239:
+	.loc 2 840 0
+	cbz	w1, .L1213
+	.loc 2 842 0
+	ldr	x0, [x20, 4000]
+	.loc 2 844 0
+	mov	w2, 1
+	.loc 2 842 0
+	str	x0, [x29, 104]
+	.loc 2 843 0
+	add	x0, x29, 128
+	.loc 2 841 0
+	str	w1, [x29, 100]
+	.loc 2 844 0
+	mov	w1, w2
+.LVL1240:
+	.loc 2 843 0
+	str	x0, [x29, 112]
+	.loc 2 844 0
+	add	x0, x29, 96
+	bl	FlashReadPages
+.LVL1241:
+	.loc 2 847 0
+	lsl	w21, w21, 9
+	.loc 2 845 0
+	ldr	w0, [x29, 96]
+	.loc 2 847 0
+	asr	w21, w21, 2
+	ldr	x1, [x20, 4000]
+	mov	w2, w26
+	.loc 2 846 0
+	cmn	w0, #1
+	.loc 2 847 0
+	mov	x0, x23
+	.loc 2 846 0
+	csel	w22, w22, w25, ne
+	.loc 2 847 0
+	add	x1, x1, x21, sxtw 2
+	bl	ftl_memcpy
+.LVL1242:
+.L1215:
+	.loc 2 851 0
+	add	w24, w24, 1
+	.loc 2 852 0
+	sub	w27, w27, w19
+	.loc 2 853 0
+	add	w28, w28, w19
+	.loc 2 854 0
+	add	x23, x23, x26, sxtw
+	b	.L1211
+.LVL1243:
+.L1213:
+	.loc 2 849 0
+	mov	w2, w26
+	mov	w1, 0
+.LVL1244:
+	mov	x0, x23
+.LVL1245:
+	bl	ftl_memset
+.LVL1246:
+	b	.L1215
+.LVL1247:
+.L1217:
+	.loc 2 833 0
+	mov	w22, -1
+	b	.L1209
+	.cfi_endproc
+.LFE203:
+	.size	FtlVendorPartRead, .-FtlVendorPartRead
+	.align	2
+	.global	FtlLoadEctTbl
+	.type	FtlLoadEctTbl, %function
+FtlLoadEctTbl:
+.LFB210:
+	.loc 2 1334 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	.loc 2 1335 0
+	mov	w0, 64
+	.loc 2 1334 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	str	x19, [sp, 16]
+	.cfi_offset 19, -16
+	.loc 2 1335 0
+	adrp	x19, .LANCHOR0
+	add	x19, x19, :lo12:.LANCHOR0
+	ldrh	w1, [x19, 4008]
+	ldr	x2, [x19, 4024]
+	bl	FtlVendorPartRead
+.LVL1248:
+	.loc 2 1336 0
+	ldr	x0, [x19, 4024]
+	ldr	w1, [x0]
+	mov	w0, 17221
+	movk	w0, 0x4254, lsl 16
+	cmp	w1, w0
+	beq	.L1220
+.LBB278:
+.LBB279:
+	.loc 2 1338 0
+	adrp	x1, .LC96
+	adrp	x0, .LC71
+	add	x1, x1, :lo12:.LC96
+	add	x0, x0, :lo12:.LC71
+	bl	printk
+.LVL1249:
+	.loc 2 1339 0
+	ldr	x0, [x19, 4024]
+	mov	w1, 0
+	ldrh	w2, [x19, 4008]
+	lsl	w2, w2, 9
+	bl	ftl_memset
+.LVL1250:
+.L1220:
+.LBE279:
+.LBE278:
+	.loc 2 1344 0
+	mov	w0, 0
+	ldr	x19, [sp, 16]
+	ldp	x29, x30, [sp], 32
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE210:
+	.size	FtlLoadEctTbl, .-FtlLoadEctTbl
+	.align	2
+	.global	Ftl_load_ext_data
+	.type	Ftl_load_ext_data, %function
+Ftl_load_ext_data:
+.LFB226:
+	.loc 2 2130 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -48]!
+	.cfi_def_cfa_offset 48
+	.cfi_offset 29, -48
+	.cfi_offset 30, -40
+	.loc 2 2131 0
+	mov	w1, 1
+	mov	w0, 0
+	.loc 2 2130 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -32
+	.cfi_offset 20, -24
+	.loc 2 2131 0
+	adrp	x19, .LANCHOR0
+	add	x20, x19, :lo12:.LANCHOR0
+	.loc 2 2130 0
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -16
+	.cfi_offset 22, -8
+	.loc 2 2131 0
+	add	x22, x20, 2712
+	.loc 2 2132 0
+	mov	w21, 19539
+	.loc 2 2131 0
+	mov	x2, x22
+	bl	FtlVendorPartRead
+.LVL1251:
+	.loc 2 2132 0
+	ldr	w0, [x20, 2712]
+	movk	w21, 0x4654, lsl 16
+	cmp	w0, w21
+	beq	.L1223
+	.loc 2 2133 0
+	mov	w2, 512
+	mov	w1, 0
+	mov	x0, x22
+	bl	ftl_memset
+.LVL1252:
+	.loc 2 2134 0
+	str	w21, [x20, 2712]
+.L1223:
+	.loc 2 2137 0
+	add	x0, x19, :lo12:.LANCHOR0
+	mov	w2, 19539
+	movk	w2, 0x4654, lsl 16
+	ldr	w3, [x0, 2712]
+	cmp	w3, w2
+	bne	.L1224
+	.loc 2 2138 0
+	ldr	w2, [x0, 2800]
+	str	w2, [x0, 2548]
+	.loc 2 2139 0
+	ldr	w2, [x0, 2804]
+	str	w2, [x0, 2552]
+	.loc 2 2140 0
+	ldr	w2, [x0, 2720]
+	str	w2, [x0, 2544]
+	.loc 2 2141 0
+	ldr	w2, [x0, 2724]
+	str	w2, [x0, 2532]
+	.loc 2 2142 0
+	ldr	w2, [x0, 2728]
+	str	w2, [x0, 2524]
+	.loc 2 2143 0
+	ldr	w2, [x0, 2732]
+	str	w2, [x0, 2540]
+	.loc 2 2144 0
+	ldr	w2, [x0, 2740]
+	str	w2, [x0, 2568]
+	.loc 2 2145 0
+	ldr	w2, [x0, 2744]
+	str	w2, [x0, 2576]
+	.loc 2 2146 0
+	ldr	w2, [x0, 2748]
+	str	w2, [x0, 2528]
+	.loc 2 2147 0
+	ldr	w2, [x0, 2752]
+	.loc 2 2149 0
+	ldr	w1, [x0, 2760]
+	.loc 2 2147 0
+	str	w2, [x0, 2536]
+	.loc 2 2148 0
+	ldr	w2, [x0, 2756]
+	.loc 2 2149 0
+	str	w1, [x0, 2584]
+	.loc 2 2148 0
+	str	w2, [x0, 2580]
+.L1224:
+	.loc 2 2152 0
+	add	x0, x19, :lo12:.LANCHOR0
+	ldr	w2, [x0, 2568]
+	ldrh	w1, [x0, 72]
+	ldr	w3, [x0, 2564]
+	madd	w1, w1, w3, w2
+	ldrh	w2, [x0, 20]
+	udiv	w1, w1, w2
+	str	w1, [x0, 2572]
+	.loc 2 2153 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+	ldp	x29, x30, [sp], 48
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE226:
+	.size	Ftl_load_ext_data, .-Ftl_load_ext_data
+	.align	2
+	.global	FtlVpcTblFlush
+	.type	FtlVpcTblFlush, %function
+FtlVpcTblFlush:
+.LFB208:
+	.loc 2 1004 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -80]!
+	.cfi_def_cfa_offset 80
+	.cfi_offset 29, -80
+	.cfi_offset 30, -72
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 19, -64
+	.cfi_offset 20, -56
+	.cfi_offset 21, -48
+	.cfi_offset 22, -40
+	.loc 2 1010 0
+	adrp	x22, .LANCHOR0
+	add	x19, x22, :lo12:.LANCHOR0
+	.loc 2 1004 0
+	stp	x23, x24, [sp, 48]
+	stp	x25, x26, [sp, 64]
+	.cfi_offset 23, -32
+	.cfi_offset 24, -24
+	.cfi_offset 25, -16
+	.cfi_offset 26, -8
+	.loc 2 1019 0
+	add	x20, x19, 2592
+	.loc 2 1010 0
+	add	x25, x19, 3360
+	.loc 2 1007 0
+	mov	w23, 0
+.LVL1253:
+	.loc 2 1011 0
+	ldr	x21, [x19, 3392]
+	.loc 2 1005 0
+	mov	w24, 65535
+.LVL1254:
+	.loc 2 1010 0
+	ldr	x0, [x19, 2288]
+	.loc 2 1013 0
+	ldrh	w1, [x19, 2648]
+	.loc 2 1010 0
+	str	x0, [x19, 3368]
+	.loc 2 1011 0
+	str	x21, [x19, 3376]
+	.loc 2 1013 0
+	strh	w1, [x21, 2]
+	.loc 2 1014 0
+	mov	w1, -3932
+	strh	w1, [x21]
+	.loc 2 1017 0
+	str	wzr, [x21, 12]
+	.loc 2 1015 0
+	ldr	w1, [x19, 2656]
+	.loc 2 1016 0
+	stp	w1, wzr, [x21, 4]
+	.loc 2 1019 0
+	mov	w1, 19539
+	movk	w1, 0x4654, lsl 16
+	str	w1, [x19, 2592]
+	.loc 2 1020 0
+	mov	w1, 64
+	.loc 2 1025 0
+	ldrb	w2, [x19, 2366]
+	.loc 2 1020 0
+	movk	w1, 0x5000, lsl 16
+	str	w1, [x19, 2596]
+	.loc 2 1024 0
+	ldrh	w1, [x19, 2360]
+	strh	w1, [x19, 2606]
+	.loc 2 1025 0
+	ldrh	w1, [x19, 2362]
+	.loc 2 1021 0
+	ldrh	w0, [x19, 2654]
+	strh	w0, [x19, 2600]
+	.loc 2 1022 0
+	ldrh	w0, [x19, 34]
+	.loc 2 1025 0
+	orr	w1, w2, w1, lsl 6
+	.loc 2 1022 0
+	strb	w0, [x19, 2602]
+	.loc 2 1025 0
+	strh	w1, [x19, 2608]
+	.loc 2 1028 0
+	ldrh	w1, [x19, 2408]
+	.loc 2 1029 0
+	ldrb	w2, [x19, 2414]
+	.loc 2 1028 0
+	strh	w1, [x19, 2610]
+	.loc 2 1029 0
+	ldrh	w1, [x19, 2410]
+	.loc 2 1026 0
+	ldrb	w0, [x19, 2368]
+	strb	w0, [x19, 2603]
+	.loc 2 1029 0
+	orr	w1, w2, w1, lsl 6
+	.loc 2 1030 0
+	ldrb	w0, [x19, 2416]
+	.loc 2 1029 0
+	strh	w1, [x19, 2612]
+	.loc 2 1030 0
+	strb	w0, [x19, 2604]
+	.loc 2 1032 0
+	ldrh	w1, [x19, 2456]
+	.loc 2 1034 0
+	ldrb	w0, [x19, 2464]
+	.loc 2 1033 0
+	ldrb	w2, [x19, 2462]
+	.loc 2 1032 0
+	strh	w1, [x19, 2614]
+	.loc 2 1034 0
+	strb	w0, [x19, 2605]
+	.loc 2 1033 0
+	ldrh	w1, [x19, 2458]
+	.loc 2 1036 0
+	ldr	w0, [x19, 2564]
+	str	w0, [x19, 2624]
+	.loc 2 1041 0
+	ldr	w0, [x19, 2556]
+	.loc 2 1033 0
+	orr	w1, w2, w1, lsl 6
+	.loc 2 1041 0
+	str	w0, [x19, 2632]
+	.loc 2 1042 0
+	ldr	w0, [x19, 2560]
+	.loc 2 1047 0
+	ldrh	w2, [x19, 90]
+	.loc 2 1042 0
+	str	w0, [x19, 2628]
+	.loc 2 1047 0
+	ldr	x0, [x19, 3368]
+	.loc 2 1033 0
+	strh	w1, [x19, 2616]
+	.loc 2 1047 0
+	mov	w1, 255
+	bl	ftl_memset
+.LVL1255:
+	.loc 2 1048 0
+	ldr	x0, [x19, 3368]
+	mov	x1, x20
+	mov	w2, 48
+	.loc 2 1053 0
+	mov	x20, x25
+	.loc 2 1075 0
+	adrp	x25, .LANCHOR1
+	add	x25, x25, :lo12:.LANCHOR1
+	add	x25, x25, 536
+	.loc 2 1048 0
+	bl	ftl_memcpy
+.LVL1256:
+	.loc 2 1049 0
+	ldr	x1, [x19, 2320]
+	ldrh	w2, [x19, 20]
+	ldr	x0, [x19, 3368]
+	lsl	w2, w2, 1
+	add	x0, x0, 48
+	bl	ftl_memcpy
+.LVL1257:
+	.loc 2 1050 0
+	ldrh	w0, [x19, 20]
+	ldr	x3, [x19, 3368]
+	ldr	x1, [x22, #:lo12:.LANCHOR0]
+	lsr	w2, w0, 3
+	ubfiz	x0, x0, 1, 16
+	add	x0, x0, 48
+	add	w2, w2, 4
+	and	x0, x0, -4
+	add	x0, x3, x0
+	bl	ftl_memcpy
+.LVL1258:
+	.loc 2 1051 0
+	mov	w0, 0
+	bl	FtlUpdateVaildLpn
+.LVL1259:
+.L1227:
+	.loc 2 1053 0
+	ldr	x0, [x19, 2288]
+	.loc 2 1056 0
+	mov	w3, 1
+	.loc 2 1053 0
+	str	x0, [x20, 8]
+	.loc 2 1056 0
+	mov	w2, w3
+	.loc 2 1054 0
+	ldr	x0, [x19, 3392]
+	.loc 2 1055 0
+	ldrh	w1, [x19, 2650]
+	.loc 2 1054 0
+	str	x0, [x20, 16]
+	.loc 2 1055 0
+	ldrh	w0, [x19, 2648]
+	orr	w0, w1, w0, lsl 10
+	.loc 2 1056 0
+	mov	w1, w3
+	.loc 2 1055 0
+	str	w0, [x20, 4]
+	.loc 2 1056 0
+	mov	x0, x20
+	bl	FlashProgPages
+.LVL1260:
+	.loc 2 1057 0
+	ldrh	w0, [x19, 84]
+	ldrh	w1, [x19, 2650]
+	sub	w0, w0, #1
+	cmp	w1, w0
+	blt	.L1228
+	.loc 2 1059 0
+	ldrh	w0, [x19, 2648]
+	.loc 2 1058 0
+	ldrh	w24, [x19, 2652]
+	.loc 2 1060 0
+	strh	wzr, [x19, 2650]
+	.loc 2 1059 0
+	strh	w0, [x19, 2652]
+	.loc 2 1061 0
+	bl	FtlFreeSysBlkQueueOut
+.LVL1261:
+	strh	w0, [x19, 2648]
+	.loc 2 1066 0
+	ldr	w1, [x19, 2556]
+	.loc 2 1070 0
+	mov	w3, 1
+	.loc 2 1066 0
+	str	w1, [x19, 2656]
+	add	w2, w1, 1
+	str	w2, [x19, 2556]
+	.loc 2 1067 0
+	ubfiz	w2, w0, 10, 16
+	str	w2, [x20, 4]
+	.loc 2 1069 0
+	strh	w0, [x21, 2]
+	.loc 2 1070 0
+	mov	w2, w3
+	.loc 2 1068 0
+	str	w1, [x21, 4]
+	.loc 2 1070 0
+	mov	x0, x20
+	mov	w1, w3
+	bl	FlashProgPages
+.LVL1262:
+.L1228:
+	.loc 2 1072 0
+	ldrh	w0, [x19, 2650]
+	.loc 2 1073 0
+	ldr	w1, [x20]
+	.loc 2 1072 0
+	add	w0, w0, 1
+	and	w0, w0, 65535
+	strh	w0, [x19, 2650]
+	.loc 2 1073 0
+	cmn	w1, #1
+	bne	.L1229
+	.loc 2 1075 0
+	cmp	w0, 1
+	bne	.L1230
+	.loc 2 1075 0 is_stmt 0 discriminator 1
+	adrp	x0, .LC1
+	mov	w2, 1075
+	mov	x1, x25
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1263:
+.L1230:
+	.loc 2 1076 0 is_stmt 1
+	ldrh	w0, [x19, 2650]
+	cmp	w0, 1
+	bne	.L1231
+	.loc 2 1077 0
+	ldrh	w0, [x19, 84]
+	sub	w0, w0, #1
+	strh	w0, [x19, 2650]
+.L1231:
+	.loc 2 1078 0
+	add	w23, w23, 1
+.LVL1264:
+	and	w23, w23, 65535
+.LVL1265:
+	.loc 2 1079 0
+	cmp	w23, 3
+	bls	.L1227
+	.loc 2 1080 0
+	add	x22, x22, :lo12:.LANCHOR0
+	adrp	x0, .LC97
+	mov	w2, w23
+	add	x0, x0, :lo12:.LC97
+	ldr	w1, [x22, 3364]
+	bl	printk
+.LVL1266:
+.L1233:
+	b	.L1233
+.L1229:
+	.loc 2 1086 0
+	cmp	w0, 1
+	beq	.L1227
+	.loc 2 1089 0
+	mov	w0, 65535
+	cmp	w24, w0
+	beq	.L1234
+	.loc 2 1090 0
+	mov	w1, 1
+	mov	w0, w24
+	bl	FtlFreeSysBlkQueueIn
+.LVL1267:
+.L1234:
+	.loc 2 1092 0
+	mov	w0, 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+	ldp	x23, x24, [sp, 48]
+.LVL1268:
+	ldp	x25, x26, [sp, 64]
+	ldp	x29, x30, [sp], 80
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE208:
+	.size	FtlVpcTblFlush, .-FtlVpcTblFlush
+	.align	2
+	.global	FtlVpcCheckAndModify
+	.type	FtlVpcCheckAndModify, %function
+FtlVpcCheckAndModify:
+.LFB228:
+	.loc 2 2192 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -80]!
+	.cfi_def_cfa_offset 80
+	.cfi_offset 29, -80
+	.cfi_offset 30, -72
+	.loc 2 2197 0
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC87
+	.loc 2 2192 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -64
+	.cfi_offset 20, -56
+	.loc 2 2198 0
+	adrp	x20, .LANCHOR0
+	add	x19, x20, :lo12:.LANCHOR0
+	.loc 2 2192 0
+	stp	x21, x22, [sp, 32]
+	.loc 2 2197 0
+	add	x1, x1, 552
+	add	x0, x0, :lo12:.LC87
+	.loc 2 2192 0
+	str	x23, [sp, 48]
+	.cfi_offset 21, -48
+	.cfi_offset 22, -40
+	.cfi_offset 23, -32
+	.loc 2 2197 0
+	bl	printk
+.LVL1269:
+	.loc 2 2198 0
+	ldr	x0, [x19, 4032]
+	.loc 2 2199 0
+	mov	w21, 0
+.LVL1270:
+	.loc 2 2198 0
+	ldrh	w2, [x19, 22]
+	mov	w1, 0
+	lsl	w2, w2, 1
+	bl	ftl_memset
+.LVL1271:
+.L1240:
+	.loc 2 2199 0 discriminator 1
+	ldr	w0, [x19, 2520]
+	cmp	w21, w0
+	bcc	.L1242
+	.loc 2 2209 0 discriminator 1
+	adrp	x22, .LC98
+	.loc 2 2206 0 discriminator 1
+	add	x20, x20, :lo12:.LANCHOR0
+	.loc 2 2209 0 discriminator 1
+	add	x22, x22, :lo12:.LC98
+	mov	w19, 0
+.LVL1272:
+	.loc 2 2207 0 discriminator 1
+	mov	w23, 65535
+.L1243:
+	.loc 2 2206 0 discriminator 1
+	ldrh	w0, [x20, 20]
+	cmp	w0, w19
+	bhi	.L1247
+	.loc 2 2218 0
+	ldp	x19, x20, [sp, 16]
+.LVL1273:
+	ldp	x21, x22, [sp, 32]
+.LVL1274:
+	ldr	x23, [sp, 48]
+	ldp	x29, x30, [sp], 80
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 23
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1275:
+.L1242:
+	.cfi_restore_state
+	.loc 2 2200 0
+	mov	w2, 0
+	add	x1, x29, 76
+	mov	w0, w21
+	bl	log2phys
+.LVL1276:
+	.loc 2 2201 0
+	ldr	w0, [x29, 76]
+	cmn	w0, #1
+	beq	.L1241
+	.loc 2 2202 0
+	lsr	w0, w0, 10
+	bl	P2V_block_in_plane
+.LVL1277:
+	.loc 2 2203 0
+	ldr	x2, [x19, 4032]
+	ubfiz	x0, x0, 1, 16
+	ldrh	w1, [x2, x0]
+	add	w1, w1, 1
+	strh	w1, [x2, x0]
+.L1241:
+	.loc 2 2199 0 discriminator 2
+	add	w21, w21, 1
+	b	.L1240
+.LVL1278:
+.L1247:
+	.loc 2 2207 0
+	ldr	x0, [x20, 2320]
+	ubfiz	x21, x19, 1, 16
+.LVL1279:
+	ldrh	w2, [x0, x21]
+	ldr	x0, [x20, 4032]
+	ldrh	w3, [x0, x21]
+	cmp	w2, w3
+	beq	.L1245
+	.loc 2 2207 0 is_stmt 0 discriminator 1
+	cmp	w2, w23
+	beq	.L1245
+	.loc 2 2209 0 is_stmt 1
+	mov	w1, w19
+	mov	x0, x22
+	bl	printk
+.LVL1280:
+	.loc 2 2210 0
+	ldrh	w0, [x20, 2360]
+	cmp	w0, w19
+	beq	.L1245
+	.loc 2 2210 0 is_stmt 0 discriminator 1
+	ldrh	w0, [x20, 2456]
+	cmp	w0, w19
+	beq	.L1245
+	.loc 2 2210 0 discriminator 2
+	ldrh	w0, [x20, 2408]
+	cmp	w0, w19
+	beq	.L1245
+	.loc 2 2211 0 is_stmt 1
+	ldr	x0, [x20, 4032]
+	ldrh	w1, [x0, x21]
+	ldr	x0, [x20, 2320]
+	strh	w1, [x0, x21]
+	.loc 2 2212 0
+	mov	w0, w19
+	bl	update_vpc_list
+.LVL1281:
+	.loc 2 2213 0
+	bl	l2p_flush
+.LVL1282:
+	.loc 2 2214 0
+	bl	FtlVpcTblFlush
+.LVL1283:
+.L1245:
+	.loc 2 2206 0 discriminator 2
+	add	w19, w19, 1
+.LVL1284:
+	and	w19, w19, 65535
+.LVL1285:
+	b	.L1243
+	.cfi_endproc
+.LFE228:
+	.size	FtlVpcCheckAndModify, .-FtlVpcCheckAndModify
+	.align	2
+	.global	allocate_new_data_superblock
+	.type	allocate_new_data_superblock, %function
+allocate_new_data_superblock:
+.LFB238:
+	.loc 2 2631 0
+	.cfi_startproc
+.LVL1286:
+	stp	x29, x30, [sp, -48]!
+	.cfi_def_cfa_offset 48
+	.cfi_offset 29, -48
+	.cfi_offset 30, -40
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -32
+	.cfi_offset 20, -24
+	.loc 2 2633 0
+	adrp	x19, .LANCHOR0
+	.loc 2 2631 0
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -16
+	.cfi_offset 22, -8
+	.loc 2 2631 0
+	mov	x22, x0
+	.loc 2 2632 0
+	ldrh	w21, [x0]
+.LVL1287:
+	.loc 2 2633 0
+	add	x0, x19, :lo12:.LANCHOR0
+.LVL1288:
+	ldrh	w0, [x0, 20]
+	cmp	w0, w21
+	bcs	.L1253
+	.loc 2 2633 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 2633
+	add	x1, x1, 576
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1289:
+.L1253:
+	.loc 2 2635 0 is_stmt 1
+	mov	w0, 65535
+	cmp	w21, w0
+	beq	.L1254
+	.loc 2 2636 0
+	add	x1, x19, :lo12:.LANCHOR0
+	ubfiz	x0, x21, 1, 16
+	ldr	x1, [x1, 2320]
+	ldrh	w0, [x1, x0]
+	cbz	w0, .L1255
+	.loc 2 2637 0
+	mov	w0, w21
+	bl	INSERT_DATA_LIST
+.LVL1290:
+.L1254:
+	.loc 2 2641 0
+	mov	w0, 1
+	.loc 2 2642 0
+	adrp	x1, .LANCHOR3
+	.loc 2 2641 0
+	strb	w0, [x22, 8]
+	.loc 2 2642 0
+	add	x0, x1, :lo12:.LANCHOR3
+	mov	w2, 65535
+	mov	x20, x1
+	ldrh	w0, [x0, -96]
+	cmp	w0, w2
+	beq	.L1256
+	.loc 2 2643 0
+	cmp	w21, w0
+	bne	.L1257
+	.loc 2 2643 0 is_stmt 0 discriminator 1
+	add	x19, x19, :lo12:.LANCHOR0
+	ubfiz	x1, x0, 1, 16
+	ldr	x2, [x19, 2320]
+	ldrh	w1, [x2, x1]
+	cbz	w1, .L1258
+.L1257:
+	.loc 2 2644 0 is_stmt 1
+	bl	update_vpc_list
+.LVL1291:
+.L1258:
+	.loc 2 2645 0
+	add	x1, x20, :lo12:.LANCHOR3
+	mov	w0, -1
+	strh	w0, [x1, -96]
+.L1256:
+	.loc 2 2647 0
+	mov	x0, x22
+	bl	allocate_data_superblock
+.LVL1292:
+	.loc 2 2648 0
+	bl	l2p_flush
+.LVL1293:
+	.loc 2 2649 0
+	mov	w0, 0
+	bl	FtlEctTblFlush
+.LVL1294:
+	.loc 2 2650 0
+	bl	FtlVpcTblFlush
+.LVL1295:
+	.loc 2 2652 0
+	mov	w0, 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+.LVL1296:
+	ldp	x29, x30, [sp], 48
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1297:
+.L1255:
+	.cfi_restore_state
+	.loc 2 2639 0
+	mov	w0, w21
+	bl	INSERT_FREE_LIST
+.LVL1298:
+	b	.L1254
+	.cfi_endproc
+.LFE238:
+	.size	allocate_new_data_superblock, .-allocate_new_data_superblock
+	.align	2
+	.global	FtlProgPages
+	.type	FtlProgPages, %function
+FtlProgPages:
+.LFB154:
+	.loc 3 902 0
+	.cfi_startproc
+.LVL1299:
+	stp	x29, x30, [sp, -96]!
+	.cfi_def_cfa_offset 96
+	.cfi_offset 29, -96
+	.cfi_offset 30, -88
+	.loc 3 909 0
+	mov	w2, 0
+.LVL1300:
+	.loc 3 902 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -80
+	.cfi_offset 20, -72
+	mov	x19, x3
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -64
+	.cfi_offset 22, -56
+	mov	w21, w1
+	stp	x23, x24, [sp, 48]
+	ubfiz	x21, x21, 5, 32
+	str	x25, [sp, 64]
+	.cfi_offset 23, -48
+	.cfi_offset 24, -40
+	.cfi_offset 25, -32
+	add	x21, x21, 4
+	add	x24, x0, x21
+	adrp	x22, .LANCHOR0
+	.loc 3 909 0
+	ldrb	w3, [x3, 9]
+.LVL1301:
+	.loc 3 931 0
+	adrp	x25, .LANCHOR1
+	.loc 3 915 0
+	add	x21, x22, :lo12:.LANCHOR0
+	.loc 3 931 0
+	add	x25, x25, :lo12:.LANCHOR1
+	add	x20, x0, 4
+	.loc 3 909 0
+	bl	FlashProgPages
+.LVL1302:
+.L1264:
+	.loc 3 911 0 discriminator 1
+	cmp	x20, x24
+	beq	.L1271
+	sub	x23, x20, #4
+	b	.L1272
+.LVL1303:
+.L1267:
+	.loc 3 913 0
+	ldr	w0, [x20]
+	lsr	w0, w0, 10
+	bl	P2V_block_in_plane
+.LVL1304:
+	.loc 3 914 0
+	ldrh	w1, [x19]
+	cmp	w1, w0, uxth
+	bne	.L1265
+	.loc 3 915 0
+	ldr	x2, [x21, 2320]
+	ubfiz	x1, x1, 1, 16
+	ldrh	w3, [x19, 4]
+	ldrh	w0, [x2, x1]
+	sub	w0, w0, w3
+	strh	w0, [x2, x1]
+	.loc 3 917 0
+	strb	wzr, [x19, 6]
+	.loc 3 916 0
+	ldrh	w0, [x21, 82]
+	strh	w0, [x19, 2]
+	.loc 3 918 0
+	strh	wzr, [x19, 4]
+.L1265:
+	.loc 3 920 0
+	ldrh	w0, [x19, 4]
+	cbnz	w0, .L1266
+	.loc 3 921 0
+	mov	x0, x19
+	bl	allocate_new_data_superblock
+.LVL1305:
+.L1266:
+	.loc 3 924 0
+	ldr	w0, [x21, 2808]
+	add	w0, w0, 1
+	str	w0, [x21, 2808]
+	.loc 3 925 0
+	ldr	w0, [x20]
+	lsr	w0, w0, 10
+	bl	FtlGcMarkBadPhyBlk
+.LVL1306:
+	.loc 3 926 0
+	mov	x0, x19
+	bl	get_new_active_ppa
+.LVL1307:
+	.loc 3 927 0
+	str	w0, [x20]
+	.loc 3 928 0
+	mov	w2, 0
+	.loc 3 926 0
+	str	w0, [x29, 92]
+	.loc 3 928 0
+	mov	w1, 1
+	ldrb	w3, [x19, 9]
+	mov	x0, x23
+	bl	FlashProgPages
+.LVL1308:
+.L1272:
+	.loc 3 912 0
+	ldr	w0, [x20, -4]
+	cmn	w0, #1
+	beq	.L1267
+	.loc 3 931 0
+	ldrb	w1, [x19, 6]
+	ldrh	w0, [x21, 12]
+	cmp	w1, w0
+	bcc	.L1268
+	.loc 3 931 0 is_stmt 0 discriminator 1
+	adrp	x0, .LC1
+	mov	w2, 931
+	add	x1, x25, 608
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1309:
+.L1268:
+	.loc 3 932 0 is_stmt 1
+	add	x1, x29, 96
+	ldr	w0, [x23, 4]
+	.loc 3 933 0
+	mov	w2, 1
+	.loc 3 932 0
+	str	w0, [x1, -4]!
+.LVL1310:
+	.loc 3 933 0
+	ldr	w0, [x23, 24]
+	bl	log2phys
+.LVL1311:
+	.loc 3 935 0
+	ldr	x0, [x23, 16]
+	ldr	w4, [x0, 12]
+.LVL1312:
+	.loc 3 937 0
+	lsr	w0, w4, 10
+	bl	P2V_block_in_plane
+.LVL1313:
+	and	w1, w0, 65535
+	mov	w23, w1
+	.loc 3 938 0
+	cmn	w4, #1
+	beq	.L1269
+	.loc 3 940 0
+	ldr	x2, [x21, 2320]
+	ubfiz	x0, x1, 1, 16
+	ldrh	w0, [x2, x0]
+	cbnz	w0, .L1270
+	.loc 3 941 0
+	adrp	x0, .LC99
+	mov	w2, 0
+	add	x0, x0, :lo12:.LC99
+	bl	printk
+.LVL1314:
+.L1270:
+	.loc 3 942 0
+	mov	w0, w23
+	bl	decrement_vpc_count
+.LVL1315:
+.L1269:
+	add	x20, x20, 32
+	b	.L1264
+.L1271:
+	.loc 3 946 0
+	add	x22, x22, :lo12:.LANCHOR0
+	ldrb	w1, [x19, 6]
+	ldrh	w0, [x22, 12]
+	cmp	w1, w0
+	bcc	.L1263
+	.loc 3 946 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 946
+	add	x1, x1, 608
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1316:
+.L1263:
+	.loc 3 947 0 is_stmt 1
+	ldp	x19, x20, [sp, 16]
+.LVL1317:
+	ldp	x21, x22, [sp, 32]
+	ldp	x23, x24, [sp, 48]
+	ldr	x25, [sp, 64]
+	ldp	x29, x30, [sp], 96
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 25
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE154:
+	.size	FtlProgPages, .-FtlProgPages
+	.align	2
+	.global	FtlCacheWriteBack
+	.type	FtlCacheWriteBack, %function
+FtlCacheWriteBack:
+.LFB155:
+	.loc 3 950 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	str	x19, [sp, 16]
+	.cfi_offset 19, -16
+	.loc 3 951 0
+	adrp	x19, .LANCHOR3
+	add	x19, x19, :lo12:.LANCHOR3
+	ldr	x0, [x19, -104]
+	cbz	x0, .L1279
+	.loc 3 952 0
+	ldr	x3, [x19, 64]
+	mov	w2, 0
+	mov	w1, 1
+	bl	FtlProgPages
+.LVL1318:
+	.loc 3 953 0
+	str	xzr, [x19, -104]
+.L1279:
+	.loc 3 956 0
+	mov	w0, 0
+	ldr	x19, [sp, 16]
+	ldp	x29, x30, [sp], 32
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE155:
+	.size	FtlCacheWriteBack, .-FtlCacheWriteBack
+	.align	2
+	.global	FtlSysFlush
+	.type	FtlSysFlush, %function
+FtlSysFlush:
+.LFB151:
+	.loc 3 797 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 3 798 0
+	bl	FtlCacheWriteBack
+.LVL1319:
+	.loc 3 799 0
+	bl	l2p_flush
+.LVL1320:
+	.loc 3 800 0
+	mov	w0, 1
+	bl	FtlEctTblFlush
+.LVL1321:
+	.loc 3 801 0
+	bl	FtlVpcTblFlush
+.LVL1322:
+	.loc 3 803 0
+	mov	w0, 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE151:
+	.size	FtlSysFlush, .-FtlSysFlush
+	.align	2
+	.global	sftl_deinit
+	.type	sftl_deinit, %function
+sftl_deinit:
+.LFB152:
+	.loc 3 806 0
+	.cfi_startproc
+	.loc 3 807 0
+	adrp	x0, .LANCHOR2
+	ldr	w0, [x0, #:lo12:.LANCHOR2]
+	cmp	w0, 1
+	bne	.L1289
+	.loc 3 806 0
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 3 808 0
+	bl	FtlSysFlush
+.LVL1323:
+	.loc 3 810 0
+	mov	w0, 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+.L1289:
+	mov	w0, 0
+	ret
+	.cfi_endproc
+.LFE152:
+	.size	sftl_deinit, .-sftl_deinit
+	.align	2
+	.global	FtlDiscard
+	.type	FtlDiscard, %function
+FtlDiscard:
+.LFB157:
+	.loc 3 1154 0
+	.cfi_startproc
+.LVL1324:
+	stp	x29, x30, [sp, -64]!
+	.cfi_def_cfa_offset 64
+	.cfi_offset 29, -64
+	.cfi_offset 30, -56
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -48
+	.cfi_offset 20, -40
+	.loc 3 1161 0
+	adrp	x20, .LANCHOR0
+	.loc 3 1154 0
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -32
+	.cfi_offset 22, -24
+	.loc 3 1161 0
+	add	x22, x20, :lo12:.LANCHOR0
+	.loc 3 1154 0
+	mov	w21, w0
+	mov	w19, w1
+	.loc 3 1161 0
+	add	w1, w0, w1
+.LVL1325:
+	ldr	w0, [x22, 120]
+.LVL1326:
+	cmp	w1, w0
+	bhi	.L1300
+	.loc 3 1164 0
+	cmp	w19, 31
+	bhi	.L1294
+.LVL1327:
+.L1308:
+	.loc 3 1197 0
+	mov	w0, 0
+.L1292:
+	.loc 3 1198 0
+	ldp	x19, x20, [sp, 16]
+.LVL1328:
+	ldp	x21, x22, [sp, 32]
+.LVL1329:
+	ldp	x29, x30, [sp], 64
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1330:
+.L1294:
+	.cfi_restore_state
+	.loc 3 1167 0
+	bl	FtlCacheWriteBack
+.LVL1331:
+	.loc 3 1169 0
+	ldrh	w1, [x22, 38]
+	udiv	w22, w21, w1
+.LVL1332:
+	.loc 3 1170 0
+	msub	w21, w1, w22, w21
+.LVL1333:
+	.loc 3 1171 0
+	ands	w21, w21, 65535
+.LVL1334:
+	beq	.L1295
+	.loc 3 1172 0
+	sub	w1, w1, w21
+	.loc 3 1173 0
+	add	w22, w22, 1
+	.loc 3 1172 0
+	cmp	w1, w19
+	csel	w1, w1, w19, ls
+	.loc 3 1174 0
+	sub	w19, w19, w1, uxth
+.L1295:
+	.loc 3 1181 0
+	adrp	x21, .LANCHOR3
+.LVL1335:
+	.loc 3 1178 0
+	add	x20, x20, :lo12:.LANCHOR0
+	.loc 3 1181 0
+	add	x21, x21, :lo12:.LANCHOR3
+	.loc 3 1177 0
+	mov	w0, -1
+	str	w0, [x29, 60]
+.LVL1336:
+.L1296:
+	.loc 3 1178 0
+	ldrh	w0, [x20, 38]
+	cmp	w19, w0
+	bcs	.L1298
+	.loc 3 1191 0
+	adrp	x0, .LANCHOR3
+	add	x0, x0, :lo12:.LANCHOR3
+	ldr	w1, [x0, 72]
+	cmp	w1, 32
+	bls	.L1308
+	.loc 3 1193 0
+	str	wzr, [x0, 72]
+	.loc 3 1194 0
+	bl	l2p_flush
+.LVL1337:
+	.loc 3 1195 0
+	bl	FtlVpcTblFlush
+.LVL1338:
+	b	.L1308
+.L1298:
+	.loc 3 1179 0
+	mov	w2, 0
+	add	x1, x29, 56
+	mov	w0, w22
+	bl	log2phys
+.LVL1339:
+	.loc 3 1180 0
+	ldr	w0, [x29, 56]
+	cmn	w0, #1
+	beq	.L1297
+	.loc 3 1181 0
+	ldr	w0, [x21, 72]
+	.loc 3 1183 0
+	mov	w2, 1
+	add	x1, x29, 60
+	.loc 3 1181 0
+	add	w0, w0, 1
+	str	w0, [x21, 72]
+	.loc 3 1182 0
+	ldr	w0, [x20, 2528]
+	add	w0, w0, 1
+	str	w0, [x20, 2528]
+	.loc 3 1183 0
+	mov	w0, w22
+	bl	log2phys
+.LVL1340:
+	.loc 3 1184 0
+	ldr	w0, [x29, 56]
+.LVL1341:
+	lsr	w0, w0, 10
+.LVL1342:
+	bl	P2V_block_in_plane
+.LVL1343:
+	.loc 3 1185 0
+	bl	decrement_vpc_count
+.LVL1344:
+.L1297:
+	.loc 3 1188 0
+	ldrh	w0, [x20, 38]
+	.loc 3 1187 0
+	add	w22, w22, 1
+	.loc 3 1188 0
+	sub	w19, w19, w0
+	b	.L1296
+.LVL1345:
+.L1300:
+	.loc 3 1162 0
+	mov	w0, -1
+	b	.L1292
+	.cfi_endproc
+.LFE157:
+	.size	FtlDiscard, .-FtlDiscard
+	.align	2
+	.global	FtlGcFreeTempBlock
+	.type	FtlGcFreeTempBlock, %function
+FtlGcFreeTempBlock:
+.LFB247:
+	.loc 5 112 0
+	.cfi_startproc
+.LVL1346:
+	stp	x29, x30, [sp, -96]!
+	.cfi_def_cfa_offset 96
+	.cfi_offset 29, -96
+	.cfi_offset 30, -88
+	.loc 5 119 0
+	mov	w3, 65535
+	.loc 5 112 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -80
+	.cfi_offset 20, -72
+	.loc 5 115 0
+	adrp	x19, .LANCHOR0
+	add	x2, x19, :lo12:.LANCHOR0
+	.loc 5 112 0
+	stp	x21, x22, [sp, 32]
+	stp	x23, x24, [sp, 48]
+	stp	x25, x26, [sp, 64]
+	.cfi_offset 21, -64
+	.cfi_offset 22, -56
+	.cfi_offset 23, -48
+	.cfi_offset 24, -40
+	.cfi_offset 25, -32
+	.cfi_offset 26, -24
+	.loc 5 119 0
+	ldrh	w20, [x2, 2456]
+	.loc 5 115 0
+	ldrh	w1, [x2, 82]
+.LVL1347:
+	.loc 5 119 0
+	cmp	w20, w3
+	bne	.L1310
+.LVL1348:
+.L1320:
+	.loc 5 153 0
+	add	x20, x19, :lo12:.LANCHOR0
+	.loc 5 152 0
+	adrp	x0, .LANCHOR3-88
+.LVL1349:
+	.loc 5 153 0
+	add	x21, x20, 2456
+	.loc 5 152 0
+	str	wzr, [x0, #:lo12:.LANCHOR3-88]
+	.loc 5 153 0
+	mov	w0, 65535
+	ldrh	w1, [x20, 2456]
+.LVL1350:
+	cmp	w1, w0
+	bne	.L1333
+.LVL1351:
+.L1336:
+	.loc 5 198 0
+	mov	w0, 0
+.L1309:
+	.loc 5 199 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+	ldp	x23, x24, [sp, 48]
+.LVL1352:
+	ldp	x25, x26, [sp, 64]
+	ldp	x29, x30, [sp], 96
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1353:
+.L1310:
+	.cfi_restore_state
+	.loc 5 121 0
+	cbz	w0, .L1313
+	.loc 5 123 0
+	adrp	x0, .LANCHOR2
+.LVL1354:
+	add	x0, x0, :lo12:.LANCHOR2
+	ldrh	w4, [x0, 4]
+	cmp	w4, w3
+	beq	.L1314
+.L1315:
+	.loc 5 122 0
+	mov	w1, 2
+.LVL1355:
+.L1313:
+	.loc 5 131 0
+	add	x21, x19, :lo12:.LANCHOR0
+	add	x0, x21, 2456
+.LVL1356:
+	bl	FtlGcScanTempBlk
+.LVL1357:
+	str	w0, [x29, 92]
+.LVL1358:
+	.loc 5 132 0
+	cmn	w0, #1
+	beq	.L1316
+	.loc 5 135 0
+	ldr	x1, [x21, 2296]
+	ubfiz	x20, x20, 1, 16
+	ldrh	w0, [x1, x20]
+	cmp	w0, 4
+	bls	.L1317
+	.loc 5 136 0
+	sub	w0, w0, #5
+	strh	w0, [x1, x20]
+	.loc 5 137 0
+	mov	w0, 1
+	bl	FtlEctTblFlush
+.LVL1359:
+.L1317:
+	.loc 5 139 0
+	adrp	x0, .LANCHOR3
+	add	x1, x0, :lo12:.LANCHOR3
+	mov	x20, x0
+	ldr	w1, [x1, -88]
+	cbnz	w1, .L1318
+	.loc 5 140 0
+	add	x19, x19, :lo12:.LANCHOR0
+	ldr	w0, [x19, 2808]
+	add	w0, w0, 1
+	str	w0, [x19, 2808]
+	.loc 5 141 0
+	ldr	w0, [x29, 92]
+	lsr	w0, w0, 10
+	bl	FtlBbmMapBadBlock
+.LVL1360:
+	.loc 5 142 0
+	bl	FtlBbmTblFlush
+.LVL1361:
+.L1318:
+	.loc 5 144 0
+	add	x0, x20, :lo12:.LANCHOR3
+	str	wzr, [x0, -88]
+.L1329:
+	.loc 5 149 0
+	mov	w0, 1
+	b	.L1309
+.LVL1362:
+.L1314:
+	.loc 5 124 0
+	strh	wzr, [x0, 4]
+	.loc 5 125 0
+	ldrh	w0, [x2, 2352]
+	cmp	w0, 17
+	bhi	.L1315
+	b	.L1313
+.LVL1363:
+.L1316:
+	.loc 5 148 0
+	adrp	x0, .LANCHOR2+4
+	ldrh	w1, [x0, #:lo12:.LANCHOR2+4]
+	mov	w0, 65535
+	cmp	w1, w0
+	bne	.L1329
+	b	.L1320
+.L1333:
+	.loc 5 160 0
+	bl	FtlCacheWriteBack
+.LVL1364:
+	.loc 5 162 0
+	ldrb	w0, [x21, 7]
+	ldrh	w2, [x20, 82]
+	ldrh	w1, [x20, 3296]
+	mul	w0, w0, w2
+	cmp	w1, w0
+	beq	.L1321
+	.loc 5 162 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 162
+	add	x1, x1, 624
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1365:
+.L1321:
+	.loc 5 163 0 is_stmt 1
+	add	x0, x19, :lo12:.LANCHOR0
+	.loc 5 168 0
+	adrp	x22, .LANCHOR1
+	add	x22, x22, :lo12:.LANCHOR1
+	adrp	x25, .LC1
+	add	x22, x22, 624
+	add	x25, x25, :lo12:.LC1
+	.loc 5 163 0
+	ldrb	w1, [x0, 2463]
+	.loc 5 165 0
+	mov	w20, 0
+.LVL1366:
+	.loc 5 163 0
+	ldrh	w4, [x0, 82]
+	ldr	x2, [x0, 2320]
+	ldrh	w3, [x0, 2456]
+	mul	w1, w1, w4
+	strh	w1, [x2, x3, lsl 1]
+	.loc 5 164 0
+	ldr	w2, [x0, 2544]
+	ldrh	w1, [x0, 3296]
+	add	w1, w1, w2
+	str	w1, [x0, 2544]
+.LVL1367:
+.L1322:
+	.loc 5 165 0 discriminator 1
+	add	x21, x19, :lo12:.LANCHOR0
+	ldrh	w0, [x21, 3296]
+	cmp	w0, w20
+	bhi	.L1326
+	.loc 5 181 0
+	mov	w0, -1
+	bl	decrement_vpc_count
+.LVL1368:
+	.loc 5 182 0
+	ldrh	w0, [x21, 2456]
+	ldr	x2, [x21, 2320]
+	ubfiz	x1, x0, 1, 16
+	ldrh	w1, [x2, x1]
+	cbz	w1, .L1327
+	.loc 5 183 0
+	bl	INSERT_DATA_LIST
+.LVL1369:
+.L1328:
+	.loc 5 186 0
+	add	x19, x19, :lo12:.LANCHOR0
+	mov	w20, -1
+.LVL1370:
+	.loc 5 187 0
+	strh	wzr, [x19, 3296]
+	.loc 5 186 0
+	strh	w20, [x19, 2456]
+	.loc 5 188 0
+	strh	wzr, [x19, 3284]
+	.loc 5 189 0
+	bl	l2p_flush
+.LVL1371:
+	.loc 5 190 0
+	bl	FtlVpcTblFlush
+.LVL1372:
+	.loc 5 191 0
+	ldrh	w0, [x19, 2640]
+	ldrh	w1, [x19, 2352]
+	add	w0, w0, w0, lsl 1
+	cmp	w1, w0, lsr 2
+	ble	.L1336
+	.loc 5 193 0
+	mov	w0, 20
+	.loc 5 192 0
+	strh	w20, [x19, 2664]
+	.loc 5 193 0
+	strh	w0, [x19, 3224]
+	b	.L1336
+.LVL1373:
+.L1326:
+	.loc 5 166 0
+	mov	w24, 12
+	ldr	x26, [x21, 3304]
+	.loc 5 168 0
+	ldr	w0, [x21, 2520]
+	.loc 5 166 0
+	umull	x24, w20, w24
+	add	x23, x26, x24
+	.loc 5 168 0
+	ldr	w1, [x23, 8]
+	cmp	w1, w0
+	bcc	.L1323
+	.loc 5 168 0 is_stmt 0 discriminator 1
+	mov	w2, 168
+	mov	x1, x22
+	mov	x0, x25
+	bl	printk
+.LVL1374:
+.L1323:
+	.loc 5 169 0 is_stmt 1
+	ldr	w0, [x23, 8]
+	add	x1, x29, 92
+	mov	w2, 0
+	bl	log2phys
+.LVL1375:
+	.loc 5 170 0
+	ldr	w0, [x26, x24]
+	ldr	w1, [x29, 92]
+	cmp	w0, w1
+	bne	.L1324
+	.loc 5 171 0
+	lsr	w0, w0, 10
+	bl	P2V_block_in_plane
+.LVL1376:
+	mov	w21, w0
+	.loc 5 172 0
+	ldr	w0, [x23, 8]
+	mov	w2, 1
+	add	x1, x23, 4
+	bl	log2phys
+.LVL1377:
+	.loc 5 173 0
+	mov	w0, w21
+.L1335:
+	.loc 5 177 0
+	bl	decrement_vpc_count
+.LVL1378:
+.L1325:
+	.loc 5 165 0 discriminator 2
+	add	w20, w20, 1
+.LVL1379:
+	and	w20, w20, 65535
+.LVL1380:
+	b	.L1322
+.L1324:
+	.loc 5 175 0
+	ldr	w0, [x23, 4]
+	cmp	w1, w0
+	beq	.L1325
+	.loc 5 177 0
+	add	x0, x19, :lo12:.LANCHOR0
+	ldrh	w0, [x0, 2456]
+	b	.L1335
+.L1327:
+	.loc 5 185 0
+	bl	INSERT_FREE_LIST
+.LVL1381:
+	b	.L1328
+	.cfi_endproc
+.LFE247:
+	.size	FtlGcFreeTempBlock, .-FtlGcFreeTempBlock
+	.align	2
+	.global	FtlGcPageRecovery
+	.type	FtlGcPageRecovery, %function
+FtlGcPageRecovery:
+.LFB250:
+	.loc 5 289 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -16
+	.cfi_offset 20, -8
+	.loc 5 290 0
+	adrp	x19, .LANCHOR0
+	add	x19, x19, :lo12:.LANCHOR0
+	add	x20, x19, 2456
+	mov	x0, x20
+	ldrh	w1, [x19, 82]
+	bl	FtlGcScanTempBlk
+.LVL1382:
+	.loc 5 291 0
+	ldrh	w1, [x19, 2458]
+	ldrh	w0, [x19, 82]
+	cmp	w1, w0
+	bcc	.L1337
+.LBB282:
+.LBB283:
+	.loc 5 293 0
+	adrp	x19, .LANCHOR3
+	add	x19, x19, :lo12:.LANCHOR3
+	sub	x0, x19, #240
+	bl	FtlMapBlkWriteDump_data
+.LVL1383:
+	.loc 5 294 0
+	mov	w0, 0
+	bl	FtlGcFreeTempBlock
+.LVL1384:
+	.loc 5 295 0
+	str	wzr, [x19, -88]
+.L1337:
+.LBE283:
+.LBE282:
+	.loc 5 297 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x29, x30, [sp], 32
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE250:
+	.size	FtlGcPageRecovery, .-FtlGcPageRecovery
+	.align	2
+	.global	FtlPowerLostRecovery
+	.type	FtlPowerLostRecovery, %function
+FtlPowerLostRecovery:
+.LFB222:
+	.loc 2 2032 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	.loc 2 2033 0
+	adrp	x0, .LANCHOR3-76
+	.loc 2 2032 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -16
+	.cfi_offset 20, -8
+	.loc 2 2035 0
+	adrp	x19, .LANCHOR0
+	add	x19, x19, :lo12:.LANCHOR0
+	.loc 2 2033 0
+	str	wzr, [x0, #:lo12:.LANCHOR3-76]
+	.loc 2 2035 0
+	add	x20, x19, 2360
+	.loc 2 2037 0
+	add	x19, x19, 2408
+	.loc 2 2035 0
+	mov	x0, x20
+	bl	FtlRecoverySuperblock
+.LVL1385:
+	.loc 2 2036 0
+	mov	x0, x20
+	bl	FtlSlcSuperblockCheck
+.LVL1386:
+	.loc 2 2037 0
+	mov	x0, x19
+	bl	FtlRecoverySuperblock
+.LVL1387:
+	.loc 2 2038 0
+	mov	x0, x19
+	bl	FtlSlcSuperblockCheck
+.LVL1388:
+	.loc 2 2039 0
+	bl	FtlGcPageRecovery
+.LVL1389:
+	.loc 2 2040 0
+	mov	w0, -1
+	bl	decrement_vpc_count
+.LVL1390:
+	.loc 2 2042 0
+	mov	w0, 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x29, x30, [sp], 32
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE222:
+	.size	FtlPowerLostRecovery, .-FtlPowerLostRecovery
+	.align	2
+	.global	Ftl_gc_temp_data_write_back
+	.type	Ftl_gc_temp_data_write_back, %function
+Ftl_gc_temp_data_write_back:
+.LFB252:
+	.loc 5 316 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	.loc 5 320 0
+	adrp	x11, .LANCHOR0
+	mov	w3, 0
+	mov	w2, 0
+	.loc 5 316 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	str	x19, [sp, 16]
+	.cfi_offset 19, -16
+	.loc 5 320 0
+	add	x19, x11, :lo12:.LANCHOR0
+	ldr	w1, [x19, 3240]
+	ldr	x0, [x19, 3976]
+	bl	FlashProgPages
+.LVL1391:
+	.loc 5 321 0
+	mov	w10, 0
+.LVL1392:
+.L1343:
+	.loc 5 321 0 is_stmt 0 discriminator 1
+	ldr	w1, [x19, 3240]
+	cmp	w10, w1
+	bcc	.L1346
+	.loc 5 335 0 is_stmt 1
+	ldr	x0, [x19, 3976]
+	bl	FtlGcBufFree
+.LVL1393:
+	.loc 5 336 0
+	str	wzr, [x19, 3240]
+	.loc 5 337 0
+	ldrh	w0, [x19, 2460]
+	cbnz	w0, .L1347
+	.loc 5 338 0
+	mov	w0, 1
+	bl	FtlGcFreeTempBlock
+.LVL1394:
+	b	.L1349
+.LVL1395:
+.L1346:
+	.loc 5 322 0
+	ldr	x0, [x19, 3976]
+	ubfiz	x1, x10, 5, 16
+	add	x3, x0, x1
+	ldr	w0, [x0, x1]
+	cmn	w0, #1
+	bne	.L1344
+	.loc 5 323 0
+	ldrh	w3, [x19, 2456]
+	ldr	x2, [x19, 2320]
+	strh	wzr, [x2, x3, lsl 1]
+	.loc 5 324 0
+	strh	w0, [x19, 2456]
+	.loc 5 325 0
+	ldr	w0, [x19, 2808]
+	add	w0, w0, 1
+	str	w0, [x19, 2808]
+	.loc 5 326 0
+	ldr	x0, [x19, 3976]
+	add	x0, x0, x1
+	ldr	w0, [x0, 4]
+	lsr	w0, w0, 10
+	bl	FtlBbmMapBadBlock
+.LVL1396:
+	.loc 5 327 0
+	bl	FtlBbmTblFlush
+.LVL1397:
+	.loc 5 328 0
+	bl	FtlGcPageVarInit
+.LVL1398:
+.L1349:
+	.loc 5 339 0
+	mov	w0, 1
+.L1342:
+	.loc 5 342 0
+	ldr	x19, [sp, 16]
+	ldp	x29, x30, [sp], 32
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1399:
+.L1344:
+	.cfi_restore_state
+	.loc 5 331 0 discriminator 2
+	ldr	x0, [x3, 16]
+.LVL1400:
+	.loc 5 332 0 discriminator 2
+	ldr	w1, [x3, 4]
+	ldp	w2, w0, [x0, 8]
+.LVL1401:
+	bl	FtlGcUpdatePage
+.LVL1402:
+	.loc 5 321 0 discriminator 2
+	add	w10, w10, 1
+.LVL1403:
+	and	w10, w10, 65535
+.LVL1404:
+	b	.L1343
+.LVL1405:
+.L1347:
+	.loc 5 341 0
+	mov	w0, 0
+	b	.L1342
+	.cfi_endproc
+.LFE252:
+	.size	Ftl_gc_temp_data_write_back, .-Ftl_gc_temp_data_write_back
+	.align	2
+	.global	Ftl_get_new_temp_ppa
+	.type	Ftl_get_new_temp_ppa, %function
+Ftl_get_new_temp_ppa:
+.LFB251:
+	.loc 5 300 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -16
+	.cfi_offset 20, -8
+	.loc 5 301 0
+	adrp	x19, .LANCHOR0
+	add	x0, x19, :lo12:.LANCHOR0
+	add	x1, x0, 2456
+	ldrh	w2, [x0, 2456]
+	mov	w0, 65535
+	cmp	w2, w0
+	beq	.L1351
+	.loc 5 301 0 is_stmt 0 discriminator 1
+	ldrh	w0, [x1, 4]
+	cbnz	w0, .L1352
+.L1351:
+	.loc 5 302 0 is_stmt 1
+	bl	FtlCacheWriteBack
+.LVL1406:
+	.loc 5 304 0
+	add	x20, x19, :lo12:.LANCHOR0
+	.loc 5 303 0
+	mov	w0, 0
+	bl	FtlGcFreeTempBlock
+.LVL1407:
+	.loc 5 304 0
+	add	x0, x20, 2456
+	strb	wzr, [x0, 8]
+	.loc 5 305 0
+	bl	allocate_data_superblock
+.LVL1408:
+	.loc 5 306 0
+	strh	wzr, [x20, 3284]
+	.loc 5 307 0
+	strh	wzr, [x20, 3296]
+	.loc 5 308 0
+	bl	l2p_flush
+.LVL1409:
+	.loc 5 309 0
+	mov	w0, 0
+	bl	FtlEctTblFlush
+.LVL1410:
+	.loc 5 310 0
+	bl	FtlVpcTblFlush
+.LVL1411:
+.L1352:
+	.loc 5 312 0
+	add	x0, x19, :lo12:.LANCHOR0
+	add	x0, x0, 2456
+	bl	get_new_active_ppa
+.LVL1412:
+	.loc 5 313 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x29, x30, [sp], 32
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE251:
+	.size	Ftl_get_new_temp_ppa, .-Ftl_get_new_temp_ppa
+	.align	2
+	.global	rk_ftl_garbage_collect
+	.type	rk_ftl_garbage_collect, %function
+rk_ftl_garbage_collect:
+.LFB258:
+	.loc 5 470 0
+	.cfi_startproc
+.LVL1413:
+	stp	x29, x30, [sp, -128]!
+	.cfi_def_cfa_offset 128
+	.cfi_offset 29, -128
+	.cfi_offset 30, -120
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -112
+	.cfi_offset 20, -104
+	.loc 5 478 0
+	adrp	x19, .LANCHOR0
+	add	x1, x19, :lo12:.LANCHOR0
+.LVL1414:
+	.loc 5 470 0
+	stp	x21, x22, [sp, 32]
+	stp	x23, x24, [sp, 48]
+	stp	x25, x26, [sp, 64]
+	stp	x27, x28, [sp, 80]
+	.cfi_offset 21, -96
+	.cfi_offset 22, -88
+	.cfi_offset 23, -80
+	.cfi_offset 24, -72
+	.cfi_offset 25, -64
+	.cfi_offset 26, -56
+	.cfi_offset 27, -48
+	.cfi_offset 28, -40
+	.loc 5 478 0
+	ldr	w2, [x1, 3952]
+	cbnz	w2, .L1426
+	.loc 5 481 0
+	ldrh	w2, [x1, 2336]
+	cmp	w2, 47
+	bls	.L1426
+	mov	w23, w0
+	.loc 5 485 0
+	adrp	x0, .LANCHOR2+4
+.LVL1415:
+	ldrh	w2, [x0, #:lo12:.LANCHOR2+4]
+	mov	w0, 65535
+	cmp	w2, w0
+	bne	.L1356
+.L1359:
+.LBB287:
+.LBB288:
+	.loc 5 489 0
+	add	x0, x19, :lo12:.LANCHOR0
+	mov	w2, 65535
+	ldrh	w1, [x0, 3314]
+	cmp	w1, w2
+	bne	.L1357
+.L1358:
+	.loc 5 496 0
+	add	x21, x19, :lo12:.LANCHOR0
+	.loc 5 497 0
+	mov	w20, 65535
+	.loc 5 496 0
+	ldr	w1, [x21, 3228]
+	.loc 5 497 0
+	ldrh	w0, [x21, 2664]
+	.loc 5 496 0
+	add	w1, w1, 1
+	add	w1, w1, w23, lsl 7
+	str	w1, [x21, 3228]
+	.loc 5 497 0
+	cmp	w0, w20
+	bne	.L1360
+	ldrh	w20, [x21, 2456]
+	cmp	w20, w0
+	bne	.L1429
+	ldrh	w22, [x21, 3312]
+	cmp	w22, w20
+	bne	.L1360
+	.loc 5 498 0
+	ldrh	w0, [x21, 2352]
+	mov	w2, 1024
+	cmp	w0, 24
+	mov	w0, 5120
+	csel	w0, w0, w2, cc
+	cmp	w1, w0
+	bls	.L1432
+.LBB289:
+	.loc 5 502 0
+	adrp	x0, .LANCHOR3+76
+	.loc 5 501 0
+	str	wzr, [x21, 3228]
+	.loc 5 502 0
+	strh	wzr, [x0, #:lo12:.LANCHOR3+76]
+	.loc 5 503 0
+	bl	GetSwlReplaceBlock
+.LVL1416:
+	and	w20, w0, 65535
+	.loc 5 504 0
+	cmp	w20, w22
+	bne	.L1433
+	.loc 5 505 0
+	ldrh	w1, [x21, 2352]
+	ldrh	w0, [x21, 3226]
+	cmp	w1, w0
+	bcs	.L1363
+	.loc 5 506 0
+	mov	w0, 64
+	bl	List_get_gc_head_node
+.LVL1417:
+	and	w0, w0, 65535
+.LVL1418:
+	.loc 5 507 0
+	cmp	w0, w20
+	beq	.L1365
+	.loc 5 508 0
+	ldr	x1, [x21, 2320]
+	ubfiz	x0, x0, 1, 16
+.LVL1419:
+	ldrh	w0, [x1, x0]
+	cmp	w0, 7
+	bhi	.L1366
+	.loc 5 509 0
+	mov	w0, 0
+	bl	List_get_gc_head_node
+.LVL1420:
+	and	w22, w0, 65535
+	.loc 5 510 0
+	mov	w0, 128
+	strh	w0, [x21, 3226]
+	.loc 5 520 0
+	cmp	w22, w20
+	beq	.L1365
+.L1362:
+	.loc 5 521 0
+	add	x0, x19, :lo12:.LANCHOR0
+	ubfiz	x1, x22, 1, 32
+	mov	w20, w22
+	ldr	x3, [x0, 2296]
+	ldr	x2, [x0, 2320]
+	ldrh	w5, [x0, 3224]
+	ldrh	w4, [x3, x1]
+	ldrh	w3, [x2, x1]
+	mov	w1, w22
+	ldrh	w2, [x0, 2352]
+	adrp	x0, .LC100
+	add	x0, x0, :lo12:.LC100
+	bl	printk
+.LVL1421:
+	b	.L1365
+.L1356:
+.LBE289:
+.LBE288:
+.LBE287:
+	.loc 5 485 0 discriminator 1
+	ldrh	w1, [x1, 2456]
+	cmp	w1, w0
+	beq	.L1359
+	.loc 5 486 0
+	mov	w0, 1
+	bl	FtlGcFreeTempBlock
+.LVL1422:
+	cbz	w0, .L1359
+	.loc 5 487 0
+	mov	w0, 1
+	b	.L1354
+.L1357:
+.LBB294:
+.LBB292:
+	.loc 5 489 0
+	ldrh	w3, [x0, 3312]
+	cmp	w3, w2
+	bne	.L1358
+	.loc 5 490 0
+	strh	w1, [x0, 3312]
+	.loc 5 491 0
+	mov	w1, -1
+	strh	w1, [x0, 3314]
+	b	.L1358
+.L1366:
+.LBB290:
+	.loc 5 512 0
+	mov	w0, 64
+.L1458:
+	.loc 5 516 0
+	strh	w0, [x21, 3226]
+.LVL1423:
+.L1365:
+	.loc 5 523 0
+	bl	FtlGcReFreshBadBlk
+.LVL1424:
+.L1360:
+.LBE290:
+	.loc 5 527 0
+	cmp	w23, 0
+	mov	w0, 65535
+	ccmp	w20, w0, 0, eq
+	bne	.L1368
+	.loc 5 528 0
+	add	x1, x19, :lo12:.LANCHOR0
+	ldrh	w0, [x1, 2352]
+	cmp	w0, 24
+	bhi	.L1434
+	.loc 5 530 0
+	cmp	w0, 16
+	ldrh	w21, [x1, 82]
+	bls	.L1370
+	.loc 5 531 0
+	lsr	w21, w21, 5
+.LVL1425:
+.L1369:
+	.loc 5 539 0
+	add	x1, x19, :lo12:.LANCHOR0
+	ldrh	w2, [x1, 3224]
+	cmp	w2, w0
+	bcs	.L1373
+	.loc 5 540 0
+	ldrh	w0, [x1, 2456]
+	mov	w2, 65535
+	cmp	w0, w2
+	bne	.L1374
+	ldrh	w2, [x1, 3312]
+	cmp	w2, w0
+	bne	.L1374
+	.loc 5 542 0
+	adrp	x0, .LANCHOR3+76
+	ldrh	w0, [x0, #:lo12:.LANCHOR3+76]
+	cbnz	w0, .L1375
+	ldr	w2, [x1, 2520]
+	ldr	w3, [x1, 2516]
+	add	w2, w2, w2, lsl 1
+	cmp	w3, w2, lsr 2
+	bcs	.L1376
+.L1375:
+	.loc 5 543 0
+	add	x2, x19, :lo12:.LANCHOR0
+	ldrh	w1, [x2, 2640]
+	add	w1, w1, w1, lsl 1
+	asr	w1, w1, 2
+	strh	w1, [x2, 3224]
+.L1377:
+	.loc 5 546 0
+	add	x19, x19, :lo12:.LANCHOR0
+	str	wzr, [x19, 3236]
+.LVL1426:
+.L1354:
+.LBE292:
+.LBE294:
+	.loc 5 758 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+.LVL1427:
+	ldp	x23, x24, [sp, 48]
+.LVL1428:
+	ldp	x25, x26, [sp, 64]
+.LVL1429:
+	ldp	x27, x28, [sp, 80]
+.LVL1430:
+	ldp	x29, x30, [sp], 128
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 28
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1431:
+.L1363:
+	.cfi_restore_state
+.LBB295:
+.LBB293:
+.LBB291:
+	.loc 5 516 0
+	mov	w0, 80
+	b	.L1458
+.L1433:
+	.loc 5 504 0
+	mov	w22, w20
+	b	.L1362
+.L1429:
+.LBE291:
+	.loc 5 473 0
+	mov	w20, w0
+	b	.L1360
+.L1432:
+	mov	w20, w22
+	b	.L1360
+.L1370:
+	.loc 5 532 0
+	cmp	w0, 12
+	bls	.L1371
+	.loc 5 533 0
+	lsr	w21, w21, 4
+.LVL1432:
+	b	.L1369
+.LVL1433:
+.L1371:
+	.loc 5 535 0
+	mov	w1, w21
+	cmp	w0, 9
+	lsr	w21, w21, 2
+	csel	w21, w21, w1, cs
+.LVL1434:
+	b	.L1369
+.LVL1435:
+.L1434:
+	.loc 5 529 0
+	mov	w21, 1
+.LVL1436:
+	b	.L1369
+.L1376:
+	.loc 5 545 0
+	mov	w2, 18
+	strh	w2, [x1, 3224]
+	b	.L1377
+.L1374:
+	.loc 5 549 0
+	add	x1, x19, :lo12:.LANCHOR0
+	ldrh	w0, [x1, 2640]
+	add	w0, w0, w0, lsl 1
+	asr	w0, w0, 2
+	strh	w0, [x1, 3224]
+.L1373:
+	.loc 5 551 0
+	add	x0, x19, :lo12:.LANCHOR0
+	ldrh	w0, [x0, 3316]
+	cbz	w0, .L1435
+	.loc 5 552 0
+	add	w21, w21, 32
+.LVL1437:
+	and	w21, w21, 65535
+.LVL1438:
+.L1435:
+	.loc 5 551 0
+	mov	w20, 65535
+.L1379:
+	.loc 5 597 0
+	add	x0, x19, :lo12:.LANCHOR0
+	mov	w2, 65535
+	ldrh	w1, [x0, 2664]
+	cmp	w1, w2
+	bne	.L1388
+	.loc 5 598 0
+	cmp	w20, w1
+	beq	.L1389
+	.loc 5 599 0
+	strh	w20, [x0, 2664]
+.L1390:
+	.loc 5 610 0
+	add	x5, x19, :lo12:.LANCHOR0
+	.loc 5 611 0
+	mov	w1, 65535
+	ldrh	w0, [x5, 2664]
+	.loc 5 610 0
+	strb	wzr, [x5, 2672]
+	.loc 5 611 0
+	cmp	w0, w1
+	beq	.L1388
+	.loc 5 612 0
+	bl	IsBlkInGcList
+.LVL1439:
+	cbz	w0, .L1393
+	.loc 5 613 0
+	mov	w0, -1
+	strh	w0, [x5, 2664]
+.L1393:
+	.loc 5 615 0
+	add	x22, x19, :lo12:.LANCHOR0
+	mov	w0, 65535
+	add	x23, x22, 2664
+.LVL1440:
+	ldrh	w1, [x22, 2664]
+	cmp	w1, w0
+	beq	.L1388
+	.loc 5 616 0
+	mov	x0, x23
+	bl	make_superblock
+.LVL1441:
+	.loc 5 619 0
+	adrp	x0, .LANCHOR3
+	add	x0, x0, :lo12:.LANCHOR3
+	.loc 5 620 0
+	ldrh	w2, [x22, 2664]
+	ldr	x1, [x22, 2320]
+	.loc 5 617 0
+	strh	wzr, [x22, 2666]
+	.loc 5 618 0
+	strb	wzr, [x22, 2670]
+	.loc 5 619 0
+	strh	wzr, [x0, 78]
+	.loc 5 620 0
+	ldrh	w1, [x1, x2, lsl 1]
+	strh	w1, [x0, 80]
+.LVL1442:
+.L1388:
+	.loc 5 625 0
+	add	x0, x19, :lo12:.LANCHOR0
+	ldrh	w1, [x0, 2664]
+	ldrh	w2, [x0, 2360]
+	cmp	w2, w1
+	beq	.L1394
+	ldrh	w0, [x0, 2408]
+	cmp	w0, w1
+	beq	.L1394
+	.loc 5 664 0
+	adrp	x24, .LANCHOR1
+	add	x24, x24, :lo12:.LANCHOR1
+	add	x24, x24, 648
+.LVL1443:
+.L1395:
+	.loc 5 631 0
+	add	x22, x19, :lo12:.LANCHOR0
+	mov	w0, 65535
+	ldrh	w23, [x22, 2664]
+.LVL1444:
+	cmp	w23, w0
+	bne	.L1396
+	.loc 5 645 0
+	mov	w25, 2
+	.loc 5 632 0
+	str	wzr, [x22, 3236]
+.L1397:
+	.loc 5 635 0
+	ldrh	w5, [x22, 3232]
+	mov	w0, w5
+	bl	List_get_gc_head_node
+.LVL1445:
+	and	w6, w0, 65535
+	strh	w6, [x22, 2664]
+	.loc 5 636 0
+	cmp	w6, w23
+	bne	.L1398
+	.loc 5 637 0
+	strh	wzr, [x22, 3232]
+	.loc 5 638 0
+	mov	w0, 8
+	b	.L1354
+.LVL1446:
+.L1368:
+	.loc 5 557 0
+	add	x5, x19, :lo12:.LANCHOR0
+	ldrh	w1, [x5, 2456]
+	cmp	w1, w0
+	bne	.L1438
+	ldrh	w0, [x5, 3312]
+	cmp	w0, w1
+	bne	.L1438
+	cmp	w20, w0
+	bne	.L1438
+	ldrh	w0, [x5, 2664]
+	cmp	w0, w20
+	beq	.L1380
+.L1438:
+	.loc 5 556 0
+	mov	w21, 1
+.LVL1447:
+	b	.L1379
+.LVL1448:
+.L1380:
+	.loc 5 560 0
+	ldrh	w7, [x5, 2352]
+	adrp	x21, .LANCHOR3
+	ldrh	w0, [x5, 3224]
+	.loc 5 558 0
+	str	wzr, [x5, 3236]
+	.loc 5 560 0
+	cmp	w0, w7
+	bcs	.L1381
+	.loc 5 561 0
+	add	x0, x21, :lo12:.LANCHOR3
+	ldrh	w0, [x0, 76]
+	cbnz	w0, .L1382
+	ldr	w0, [x5, 2520]
+	ldr	w1, [x5, 2516]
+	add	w0, w0, w0, lsl 1
+	cmp	w1, w0, lsr 2
+	bcs	.L1383
+.L1382:
+	.loc 5 562 0
+	add	x19, x19, :lo12:.LANCHOR0
+	ldrh	w0, [x19, 2640]
+	add	w0, w0, w0, lsl 1
+	asr	w0, w0, 2
+	strh	w0, [x19, 3224]
+.L1384:
+	.loc 5 566 0
+	bl	FtlReadRefresh
+.LVL1449:
+.L1459:
+	.loc 5 734 0
+	add	x21, x21, :lo12:.LANCHOR3
+	b	.L1460
+.LVL1450:
+.L1383:
+	.loc 5 564 0
+	mov	w0, 18
+	strh	w0, [x5, 3224]
+	b	.L1384
+.L1381:
+	.loc 5 572 0
+	add	x21, x21, :lo12:.LANCHOR3
+	ldrh	w0, [x21, 76]
+	cbnz	w0, .L1438
+	.loc 5 573 0
+	ldrh	w6, [x5, 2640]
+	add	w0, w6, w6, lsl 1
+	asr	w0, w0, 2
+	strh	w0, [x5, 3224]
+	.loc 5 574 0
+	mov	w0, 0
+	bl	List_get_gc_head_node
+.LVL1451:
+	.loc 5 575 0
+	ldr	x1, [x5, 2320]
+	ubfiz	x0, x0, 1, 16
+	ldrh	w2, [x5, 12]
+	ldrh	w1, [x1, x0]
+	ldrh	w0, [x5, 84]
+	mul	w0, w0, w2
+	mov	w2, 2
+	sdiv	w0, w0, w2
+	cmp	w1, w0
+	ble	.L1386
+	.loc 5 576 0
+	sub	w6, w6, #1
+	.loc 5 575 0
+	cmp	w7, w6
+	blt	.L1386
+	.loc 5 578 0
+	bl	FtlReadRefresh
+.LVL1452:
+.L1460:
+	.loc 5 734 0
+	ldrh	w0, [x21, 76]
+	b	.L1354
+.LVL1453:
+.L1386:
+	.loc 5 584 0
+	cbnz	w1, .L1438
+	.loc 5 586 0
+	add	x19, x19, :lo12:.LANCHOR0
+	.loc 5 585 0
+	mov	w0, -1
+	bl	decrement_vpc_count
+.LVL1454:
+	.loc 5 586 0
+	ldrh	w0, [x19, 2352]
+	add	w0, w0, 1
+	b	.L1354
+.LVL1455:
+.L1389:
+	.loc 5 600 0
+	ldrh	w1, [x0, 3312]
+	cmp	w1, w20
+	beq	.L1390
+	.loc 5 604 0
+	ldr	x2, [x0, 2320]
+	ubfiz	x1, x1, 1, 16
+	ldrh	w1, [x2, x1]
+	cbnz	w1, .L1391
+	.loc 5 605 0
+	mov	w1, -1
+	strh	w1, [x0, 3312]
+.L1391:
+	.loc 5 606 0
+	add	x0, x19, :lo12:.LANCHOR0
+	ldrh	w1, [x0, 3312]
+	strh	w1, [x0, 2664]
+	.loc 5 607 0
+	mov	w1, -1
+	strh	w1, [x0, 3312]
+	b	.L1390
+.L1394:
+	.loc 5 626 0
+	add	x19, x19, :lo12:.LANCHOR0
+	mov	w0, -1
+	strh	w0, [x19, 2664]
+.LVL1456:
+.L1461:
+	.loc 5 652 0
+	adrp	x0, .LANCHOR3+76
+	ldrh	w0, [x0, #:lo12:.LANCHOR3+76]
+	b	.L1354
+.LVL1457:
+.L1398:
+	.loc 5 640 0
+	mov	w0, w6
+	bl	IsBlkInGcList
+.LVL1458:
+	add	w5, w5, 1
+	cbz	w0, .L1399
+	.loc 5 641 0
+	strh	w5, [x22, 3232]
+	b	.L1397
+.L1399:
+	.loc 5 645 0
+	ldrh	w4, [x22, 12]
+	ubfiz	x1, x6, 1, 16
+	ldrh	w0, [x22, 82]
+	.loc 5 644 0
+	and	w5, w5, 65535
+	.loc 5 645 0
+	ldr	x2, [x22, 2320]
+	.loc 5 644 0
+	strh	w5, [x22, 3232]
+	.loc 5 645 0
+	mul	w0, w0, w4
+	ldrh	w3, [x2, x1]
+	sdiv	w4, w0, w25
+	cmp	w3, w4
+	bgt	.L1401
+	.loc 5 646 0
+	cmp	w5, 48
+	bls	.L1402
+	cmp	w3, 8
+	bls	.L1402
+	ldrh	w3, [x22, 3284]
+	cmp	w3, 35
+	bhi	.L1402
+.L1401:
+	.loc 5 647 0
+	strh	wzr, [x22, 3232]
+.L1402:
+	.loc 5 649 0
+	ldrh	w1, [x2, x1]
+	cmp	w0, w1
+	bgt	.L1403
+	cmp	w20, w23
+	bne	.L1403
+	.loc 5 650 0
+	add	x19, x19, :lo12:.LANCHOR0
+	mov	w0, -1
+	.loc 5 651 0
+	strh	wzr, [x19, 3232]
+	.loc 5 650 0
+	strh	w0, [x19, 2664]
+	b	.L1461
+.L1403:
+	.loc 5 655 0
+	cbnz	w1, .L1404
+	.loc 5 656 0
+	mov	w0, -1
+	bl	decrement_vpc_count
+.LVL1459:
+	.loc 5 657 0
+	ldrh	w0, [x22, 3232]
+	add	w0, w0, 1
+	strh	w0, [x22, 3232]
+	b	.L1397
+.L1404:
+	.loc 5 660 0
+	add	x0, x19, :lo12:.LANCHOR0
+	strb	wzr, [x0, 2672]
+	.loc 5 662 0
+	ldrh	w0, [x0, 2360]
+	cmp	w0, w6
+	bne	.L1405
+	adrp	x0, .LC1
+	mov	w2, 662
+	mov	x1, x24
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1460:
+.L1405:
+	.loc 5 663 0
+	add	x0, x19, :lo12:.LANCHOR0
+	ldrh	w1, [x0, 2664]
+	ldrh	w0, [x0, 2408]
+	cmp	w1, w0
+	bne	.L1406
+	adrp	x0, .LC1
+	mov	w2, 663
+	mov	x1, x24
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1461:
+.L1406:
+	.loc 5 664 0
+	add	x0, x19, :lo12:.LANCHOR0
+	ldrh	w1, [x0, 2664]
+	ldrh	w0, [x0, 2456]
+	cmp	w1, w0
+	bne	.L1407
+	adrp	x0, .LC1
+	mov	w2, 664
+	mov	x1, x24
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1462:
+.L1407:
+	.loc 5 665 0
+	add	x23, x19, :lo12:.LANCHOR0
+	add	x22, x23, 2664
+	mov	x0, x22
+	bl	make_superblock
+.LVL1463:
+	.loc 5 666 0
+	adrp	x0, .LANCHOR3
+	add	x0, x0, :lo12:.LANCHOR3
+	.loc 5 667 0
+	ldrh	w2, [x23, 2664]
+	ldr	x1, [x23, 2320]
+	.loc 5 666 0
+	strh	wzr, [x0, 78]
+	.loc 5 667 0
+	ldrh	w1, [x1, x2, lsl 1]
+	strh	w1, [x0, 80]
+	.loc 5 668 0
+	strh	wzr, [x23, 2666]
+	.loc 5 669 0
+	strb	wzr, [x23, 2670]
+.L1396:
+	.loc 5 675 0
+	bl	FtlReadRefresh
+.LVL1464:
+	.loc 5 678 0
+	add	x0, x19, :lo12:.LANCHOR0
+	mov	w1, 1
+	.loc 5 679 0
+	ldrh	w26, [x0, 82]
+	.loc 5 678 0
+	str	w1, [x0, 3952]
+	.loc 5 680 0
+	ldrh	w0, [x0, 2666]
+	add	w1, w0, w21
+	cmp	w1, w26
+	ble	.L1408
+	.loc 5 681 0
+	sub	w21, w26, w0
+.LVL1465:
+	and	w21, w21, 65535
+.LVL1466:
+.L1408:
+	.loc 5 693 0
+	mov	w25, 0
+.LVL1467:
+.L1409:
+	.loc 5 683 0
+	cmp	w21, w25, uxth
+	bls	.L1417
+	.loc 5 685 0
+	add	x0, x19, :lo12:.LANCHOR0
+	.loc 5 688 0
+	mov	w23, 0
+.LVL1468:
+	add	x3, x0, 2680
+	mov	w1, 0
+.LVL1469:
+	.loc 5 687 0
+	mov	w6, 65535
+	.loc 5 688 0
+	ldrh	w4, [x0, 2666]
+	.loc 5 685 0
+	ldrh	w7, [x0, 12]
+	.loc 5 688 0
+	add	w4, w4, w25
+	b	.L1418
+.LVL1470:
+.L1411:
+	.loc 5 686 0
+	ldrh	w2, [x3]
+	.loc 5 687 0
+	cmp	w2, w6
+	beq	.L1410
+	.loc 5 688 0
+	ldr	x5, [x0, 3272]
+	ubfiz	x8, x23, 5, 16
+	.loc 5 689 0
+	add	w23, w23, 1
+.LVL1471:
+	.loc 5 688 0
+	orr	w2, w4, w2, lsl 10
+.LVL1472:
+	add	x5, x5, x8
+	.loc 5 689 0
+	and	w23, w23, 65535
+.LVL1473:
+	.loc 5 688 0
+	str	w2, [x5, 4]
+.LVL1474:
+.L1410:
+	.loc 5 685 0
+	add	w1, w1, 1
+.LVL1475:
+	add	x3, x3, 2
+	and	w1, w1, 65535
+.LVL1476:
+.L1418:
+	cmp	w1, w7
+	bne	.L1411
+	.loc 5 693 0
+	add	x22, x19, :lo12:.LANCHOR0
+	mov	w1, w23
+.LVL1477:
+	mov	x27, 0
+	ldrb	w2, [x22, 2672]
+.LVL1478:
+	ldr	x0, [x22, 3272]
+	bl	FlashReadPages
+.LVL1479:
+	ubfiz	x0, x23, 5, 16
+	str	x0, [x29, 104]
+.LVL1480:
+.L1412:
+	.loc 5 695 0
+	ldr	x0, [x29, 104]
+	cmp	x27, x0
+	bne	.L1416
+	add	w25, w25, 1
+	b	.L1409
+.L1416:
+	.loc 5 696 0
+	ldr	x0, [x22, 3272]
+	add	x1, x0, x27
+	.loc 5 697 0
+	ldr	w0, [x0, x27]
+	cmn	w0, #1
+	beq	.L1413
+	.loc 5 696 0
+	ldr	x23, [x1, 16]
+.LVL1481:
+	.loc 5 697 0
+	mov	w0, 61589
+	ldrh	w1, [x23]
+	cmp	w1, w0
+	bne	.L1413
+	.loc 5 699 0
+	ldr	w28, [x23, 8]
+.LVL1482:
+	.loc 5 700 0
+	cmn	w28, #1
+	bne	.L1414
+	adrp	x0, .LC1
+	mov	w2, 700
+	mov	x1, x24
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1483:
+.L1414:
+	.loc 5 701 0
+	mov	w2, 0
+	add	x1, x29, 124
+	mov	w0, w28
+	bl	log2phys
+.LVL1484:
+	.loc 5 702 0
+	ldr	x0, [x22, 3272]
+	ldr	w1, [x29, 124]
+	add	x0, x0, x27
+	ldr	w2, [x0, 4]
+.LVL1485:
+	cmp	w2, w1
+	bne	.L1413
+	.loc 5 704 0
+	adrp	x28, .LANCHOR3
+.LVL1486:
+	add	x2, x28, :lo12:.LANCHOR3
+	.loc 5 705 0
+	ldr	w0, [x0, 24]
+	.loc 5 704 0
+	ldrh	w1, [x2, 78]
+	add	w1, w1, 1
+	strh	w1, [x2, 78]
+	.loc 5 705 0
+	ldr	x2, [x22, 3976]
+	ldr	w1, [x22, 3240]
+	add	x1, x2, x1, lsl 5
+	str	x1, [x29, 96]
+	str	w0, [x1, 24]
+	.loc 5 706 0
+	bl	Ftl_get_new_temp_ppa
+.LVL1487:
+	ldr	x1, [x29, 96]
+	str	w0, [x1, 4]
+	.loc 5 707 0
+	ldr	w0, [x22, 3240]
+	ldr	x1, [x22, 3976]
+	add	x0, x1, x0, lsl 5
+	ldr	x1, [x22, 3272]
+	add	x1, x1, x27
+	ldr	x2, [x1, 8]
+	str	x2, [x0, 8]
+	.loc 5 708 0
+	ldr	x1, [x1, 16]
+	str	x1, [x0, 16]
+	.loc 5 709 0
+	ldr	w0, [x29, 124]
+	.loc 5 716 0
+	mov	w1, 1
+.LVL1488:
+	.loc 5 709 0
+	str	w0, [x23, 12]
+	.loc 5 710 0
+	ldrh	w0, [x22, 2456]
+.LVL1489:
+	strh	w0, [x23, 2]
+	.loc 5 713 0
+	ldr	w0, [x22, 2560]
+	str	w0, [x23, 4]
+	.loc 5 715 0
+	ldr	w0, [x22, 3240]
+	add	w0, w0, 1
+	str	w0, [x22, 3240]
+	.loc 5 716 0
+	ldr	x0, [x22, 3272]
+	add	x0, x0, x27
+	bl	FtlGcBufAlloc
+.LVL1490:
+	.loc 5 717 0
+	ldrb	w1, [x22, 2463]
+	ldr	w0, [x22, 3240]
+	cmp	w1, w0
+	beq	.L1415
+	ldrh	w0, [x22, 2460]
+	cbnz	w0, .L1413
+.L1415:
+	.loc 5 718 0
+	bl	Ftl_gc_temp_data_write_back
+.LVL1491:
+	cbz	w0, .L1413
+	.loc 5 719 0
+	add	x19, x19, :lo12:.LANCHOR0
+	.loc 5 720 0
+	add	x28, x28, :lo12:.LANCHOR3
+	.loc 5 719 0
+	str	wzr, [x19, 3952]
+	.loc 5 720 0
+	ldrh	w0, [x28, 76]
+	b	.L1354
+.LVL1492:
+.L1413:
+	add	x27, x27, 32
+	b	.L1412
+.L1417:
+	.loc 5 727 0
+	add	x1, x19, :lo12:.LANCHOR0
+	ldrh	w0, [x1, 2666]
+	add	w21, w21, w0
+.LVL1493:
+	and	w21, w21, 65535
+	strh	w21, [x1, 2666]
+	.loc 5 729 0
+	cmp	w26, w21
+	adrp	x21, .LANCHOR3
+	bls	.L1419
+	add	x0, x21, :lo12:.LANCHOR3
+	ldrh	w1, [x0, 78]
+	ldrh	w0, [x0, 80]
+	cmp	w1, w0
+	bne	.L1420
+.L1419:
+	.loc 5 731 0
+	add	x22, x19, :lo12:.LANCHOR0
+	ldr	w0, [x22, 3240]
+	cbz	w0, .L1421
+	.loc 5 732 0
+	bl	Ftl_gc_temp_data_write_back
+.LVL1494:
+	cbz	w0, .L1421
+	.loc 5 733 0
+	str	wzr, [x22, 3952]
+	b	.L1459
+.L1421:
+	.loc 5 737 0
+	add	x0, x21, :lo12:.LANCHOR3
+	ldrh	w0, [x0, 78]
+	cbnz	w0, .L1422
+	add	x1, x19, :lo12:.LANCHOR0
+	ldrh	w0, [x1, 2664]
+	ldr	x2, [x1, 2320]
+	lsl	x0, x0, 1
+	ldrh	w3, [x2, x0]
+	cbz	w3, .L1422
+	.loc 5 739 0
+	strh	wzr, [x2, x0]
+	.loc 5 740 0
+	ldrh	w0, [x1, 2664]
+	bl	update_vpc_list
+.LVL1495:
+	.loc 5 741 0
+	bl	FtlCacheWriteBack
+.LVL1496:
+	.loc 5 742 0
+	bl	l2p_flush
+.LVL1497:
+	.loc 5 743 0
+	bl	FtlVpcTblFlush
+.LVL1498:
+.L1422:
+	.loc 5 745 0
+	add	x0, x19, :lo12:.LANCHOR0
+	mov	w1, -1
+	strh	w1, [x0, 2664]
+.L1420:
+	.loc 5 747 0
+	add	x1, x19, :lo12:.LANCHOR0
+	ldrh	w0, [x1, 2352]
+	cmp	w0, 2
+	bhi	.L1423
+	.loc 5 749 0
+	ldrh	w21, [x1, 82]
+.LVL1499:
+	b	.L1395
+.LVL1500:
+.L1423:
+	.loc 5 754 0
+	add	x21, x21, :lo12:.LANCHOR3
+	.loc 5 752 0
+	str	wzr, [x1, 3952]
+	.loc 5 754 0
+	ldrh	w1, [x21, 76]
+	.loc 5 755 0
+	cmp	w1, 0
+	csinc	w0, w1, w0, ne
+	b	.L1354
+.LVL1501:
+.L1426:
+.LBE293:
+.LBE295:
+	.loc 5 479 0
+	mov	w0, 0
+.LVL1502:
+	b	.L1354
+	.cfi_endproc
+.LFE258:
+	.size	rk_ftl_garbage_collect, .-rk_ftl_garbage_collect
+	.align	2
+	.global	sftl_gc
+	.type	sftl_gc, %function
+sftl_gc:
+.LFB259:
+	.loc 5 761 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	.loc 5 762 0
+	mov	w1, 1
+	mov	w0, w1
+	.loc 5 761 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 5 762 0
+	bl	rk_ftl_garbage_collect
+.LVL1503:
+	.loc 5 763 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE259:
+	.size	sftl_gc, .-sftl_gc
+	.align	2
+	.global	FtlRead
+	.type	FtlRead, %function
+FtlRead:
+.LFB153:
+	.loc 3 813 0
+	.cfi_startproc
+.LVL1504:
+	stp	x29, x30, [sp, -160]!
+	.cfi_def_cfa_offset 160
+	.cfi_offset 29, -160
+	.cfi_offset 30, -152
+	and	w0, w0, 255
+	.loc 3 823 0
+	cmp	w0, 16
+	.loc 3 813 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -144
+	.cfi_offset 20, -136
+	mov	w19, w1
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -112
+	.cfi_offset 24, -104
+	mov	x23, x3
+	stp	x27, x28, [sp, 80]
+	.cfi_offset 27, -80
+	.cfi_offset 28, -72
+	mov	w27, w2
+	stp	x21, x22, [sp, 32]
+	stp	x25, x26, [sp, 64]
+	.cfi_offset 21, -128
+	.cfi_offset 22, -120
+	.cfi_offset 25, -96
+	.cfi_offset 26, -88
+	.loc 3 823 0
+	bne	.L1465
+	.loc 3 824 0
+	mov	x2, x3
+	mov	w1, w27
+	add	w0, w19, 256
+.LVL1505:
+	bl	FtlVendorPartRead
+.LVL1506:
+	mov	w21, w0
+.LVL1507:
+.L1464:
+	.loc 3 900 0
+	mov	w0, w21
+	ldp	x19, x20, [sp, 16]
+.LVL1508:
+	ldp	x21, x22, [sp, 32]
+.LVL1509:
+	ldp	x23, x24, [sp, 48]
+.LVL1510:
+	ldp	x25, x26, [sp, 64]
+.LVL1511:
+	ldp	x27, x28, [sp, 80]
+.LVL1512:
+	ldp	x29, x30, [sp], 160
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 28
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1513:
+.L1465:
+	.cfi_restore_state
+	.loc 3 829 0
+	add	w0, w1, w2
+.LVL1514:
+	str	w0, [x29, 128]
+	adrp	x0, .LANCHOR0
+	add	x25, x0, :lo12:.LANCHOR0
+	add	w2, w1, w2
+	str	x0, [x29, 96]
+	ldr	w1, [x25, 120]
+	cmp	w2, w1
+	bhi	.L1485
+	.loc 3 829 0 is_stmt 0 discriminator 1
+	adrp	x0, .LANCHOR2
+	ldr	w21, [x0, #:lo12:.LANCHOR2]
+	cmn	w21, #1
+	beq	.L1464
+	.loc 3 832 0 is_stmt 1
+	bl	FtlCacheWriteBack
+.LVL1515:
+	.loc 3 839 0
+	mov	w28, 0
+.LVL1516:
+	.loc 3 834 0
+	ldrh	w0, [x25, 38]
+	.loc 3 835 0
+	add	w1, w19, w27
+	sub	w24, w1, #1
+	.loc 3 814 0
+	mov	w21, 0
+	.loc 3 827 0
+	stp	wzr, wzr, [x29, 132]
+	.loc 3 819 0
+	str	wzr, [x29, 140]
+	.loc 3 834 0
+	udiv	w26, w19, w0
+.LVL1517:
+	.loc 3 835 0
+	udiv	w24, w24, w0
+.LVL1518:
+	.loc 3 840 0
+	ldr	w0, [x25, 2524]
+	.loc 3 834 0
+	mov	w20, w26
+.LVL1519:
+	.loc 3 836 0
+	sub	w22, w24, w26
+	add	w22, w22, 1
+.LVL1520:
+	.loc 3 840 0
+	add	w0, w0, w22
+	str	w0, [x25, 2524]
+.LVL1521:
+.L1467:
+	.loc 3 841 0
+	cbnz	w22, .L1483
+	.loc 3 897 0
+	ldr	x0, [x29, 96]
+	add	x0, x0, :lo12:.LANCHOR0
+	ldrh	w1, [x0, 3316]
+	cbnz	w1, .L1484
+	.loc 3 897 0 is_stmt 0 discriminator 1
+	ldrh	w0, [x0, 2352]
+	cmp	w0, 31
+	bhi	.L1464
+.L1484:
+	.loc 3 898 0 is_stmt 1
+	mov	w1, 1
+	mov	w0, 0
+	bl	rk_ftl_garbage_collect
+.LVL1522:
+	b	.L1464
+.LVL1523:
+.L1483:
+	.loc 3 842 0
+	add	x1, x29, 156
+	mov	w2, 0
+	mov	w0, w20
+	bl	log2phys
+.LVL1524:
+	.loc 3 843 0
+	ldr	w1, [x29, 156]
+	cmn	w1, #1
+	bne	.L1468
+	mov	w5, 0
+.LVL1525:
+.L1469:
+	.loc 3 844 0 discriminator 1
+	ldrh	w0, [x25, 38]
+.LVL1526:
+	cmp	w5, w0
+	bcc	.L1471
+.LVL1527:
+.L1472:
+	.loc 3 871 0
+	add	w20, w20, 1
+	.loc 3 873 0
+	subs	w22, w22, #1
+	beq	.L1476
+	.loc 3 873 0 is_stmt 0 discriminator 1
+	ldrh	w0, [x25, 12]
+	cmp	w28, w0, lsl 2
+	bne	.L1467
+.L1476:
+	.loc 3 874 0 is_stmt 1
+	cbz	w28, .L1467
+	.loc 3 875 0
+	ldr	x0, [x25, 3968]
+	mov	w1, w28
+	mov	w2, 0
+	bl	FlashReadPages
+.LVL1528:
+	.loc 3 882 0
+	ldr	w0, [x29, 132]
+.LVL1529:
+	lsl	w0, w0, 9
+.LVL1530:
+	str	w0, [x29, 112]
+	.loc 3 879 0
+	ldr	w0, [x29, 140]
+.LVL1531:
+	lsl	w0, w0, 9
+.LVL1532:
+	str	x0, [x29, 120]
+	ldr	w0, [x29, 136]
+	lsl	w0, w0, 9
+	str	w0, [x29, 116]
+	ubfiz	x0, x28, 5, 32
+	mov	x28, 0
+.LVL1533:
+	str	x0, [x29, 104]
+.L1482:
+	.loc 3 877 0
+	ldr	x0, [x25, 3968]
+	add	x0, x0, x28
+	ldr	w1, [x0, 24]
+	cmp	w26, w1
+	bne	.L1478
+	.loc 3 878 0
+	ldr	x1, [x0, 8]
+	ldr	x0, [x25, 3944]
+	cmp	x1, x0
+	bne	.L1479
+	.loc 3 879 0
+	ldr	x0, [x29, 120]
+	ldr	w2, [x29, 116]
+	add	x1, x1, x0
+	mov	x0, x23
+.L1495:
+	.loc 3 882 0
+	bl	ftl_memcpy
+.LVL1534:
+.L1479:
+	.loc 3 884 0
+	ldr	x0, [x25, 3968]
+	add	x1, x0, x28
+	ldr	w2, [x0, x28]
+	cmn	w2, #1
+	bne	.L1480
+	.loc 3 885 0
+	ldr	w0, [x25, 2784]
+	.loc 3 886 0
+	mov	w21, w2
+	.loc 3 885 0
+	add	w0, w0, 1
+	str	w0, [x25, 2784]
+.L1480:
+	.loc 3 888 0
+	ldr	w0, [x1]
+	cmp	w0, 256
+	bne	.L1481
+.LBB296:
+	.loc 3 889 0
+	ldr	w0, [x1, 4]
+	lsr	w0, w0, 10
+	bl	P2V_block_in_plane
+.LVL1535:
+	.loc 3 890 0
+	bl	FtlGcRefreshBlock
+.LVL1536:
+.L1481:
+.LBE296:
+	.loc 3 876 0 discriminator 2
+	ldr	x0, [x29, 104]
+	add	x28, x28, 32
+	cmp	x0, x28
+	bne	.L1482
+	.loc 3 893 0
+	mov	w28, 0
+.LVL1537:
+	b	.L1467
+.LVL1538:
+.L1471:
+	.loc 3 845 0
+	madd	w0, w20, w0, w5
+.LVL1539:
+	.loc 3 846 0
+	cmp	w19, w0
+	bhi	.L1470
+	.loc 3 846 0 is_stmt 0 discriminator 1
+	ldr	w1, [x29, 128]
+	cmp	w1, w0
+	bls	.L1470
+	.loc 3 847 0 is_stmt 1
+	sub	w0, w0, w19
+.LVL1540:
+	str	w5, [x29, 120]
+	lsl	w0, w0, 9
+	mov	w2, 512
+	mov	w1, 0
+	add	x0, x23, x0
+	bl	ftl_memset
+.LVL1541:
+	ldr	w5, [x29, 120]
+.LVL1542:
+.L1470:
+	.loc 3 844 0 discriminator 2
+	add	w5, w5, 1
+	b	.L1469
+.LVL1543:
+.L1468:
+	.loc 3 850 0
+	ldr	x0, [x25, 3968]
+	ubfiz	x2, x28, 5, 32
+	.loc 3 851 0
+	cmp	w20, w26
+	.loc 3 850 0
+	add	x0, x0, x2
+	str	w1, [x0, 4]
+	ldrh	w0, [x25, 38]
+	.loc 3 851 0
+	bne	.L1473
+	.loc 3 852 0
+	ldr	x1, [x25, 3968]
+	ldr	x5, [x25, 3944]
+	add	x1, x1, x2
+	str	x5, [x1, 8]
+	.loc 3 853 0
+	udiv	w5, w19, w0
+	msub	w3, w5, w0, w19
+.LVL1544:
+	str	w3, [x29, 140]
+	.loc 3 854 0
+	sub	w5, w0, w3
+	cmp	w27, w5
+	csel	w3, w27, w5, ls
+.LVL1545:
+	str	w3, [x29, 136]
+	.loc 3 856 0
+	cmp	w3, w0
+	bne	.L1474
+	.loc 3 857 0
+	str	x23, [x1, 8]
+.LVL1546:
+.L1474:
+	.loc 3 866 0
+	ldr	x0, [x25, 3968]
+	ldr	x1, [x25, 3936]
+	add	x2, x0, x2
+	ldrh	w0, [x25, 92]
+	.loc 3 867 0
+	str	w20, [x2, 24]
+	.loc 3 866 0
+	mul	w0, w0, w28
+	.loc 3 868 0
+	add	w28, w28, 1
+	.loc 3 866 0
+	and	x0, x0, 4294967292
+	add	x0, x1, x0
+	str	x0, [x2, 16]
+	b	.L1472
+.LVL1547:
+.L1473:
+	.loc 3 858 0
+	cmp	w20, w24
+	bne	.L1475
+	.loc 3 859 0
+	ldr	x5, [x25, 3968]
+	ldr	x1, [x25, 3928]
+	add	x5, x5, x2
+	.loc 3 860 0
+	ldr	w3, [x29, 128]
+	.loc 3 859 0
+	str	x1, [x5, 8]
+	.loc 3 860 0
+	mul	w1, w20, w0
+	sub	w3, w3, w1
+.LVL1548:
+	str	w3, [x29, 132]
+	.loc 3 861 0
+	cmp	w0, w3
+	bne	.L1474
+	.loc 3 862 0
+	sub	w1, w1, w19
+	lsl	w1, w1, 9
+	add	x1, x23, x1
+	str	x1, [x5, 8]
+	b	.L1474
+.LVL1549:
+.L1475:
+	.loc 3 864 0
+	ldr	x1, [x25, 3968]
+	mul	w0, w0, w20
+	add	x1, x1, x2
+	sub	w0, w0, w19
+	lsl	w0, w0, 9
+	add	x0, x23, x0
+	str	x0, [x1, 8]
+	b	.L1474
+.LVL1550:
+.L1478:
+	.loc 3 880 0
+	cmp	w24, w1
+	bne	.L1479
+	.loc 3 881 0
+	ldr	x1, [x0, 8]
+	ldr	x0, [x25, 3928]
+	cmp	x1, x0
+	bne	.L1479
+	.loc 3 882 0
+	ldrh	w0, [x25, 38]
+	ldr	w2, [x29, 112]
+	mul	w0, w0, w24
+	sub	w0, w0, w19
+	lsl	w0, w0, 9
+	add	x0, x23, x0
+	b	.L1495
+.LVL1551:
+.L1485:
+	.loc 3 830 0
+	mov	w21, -1
+	b	.L1464
+	.cfi_endproc
+.LFE153:
+	.size	FtlRead, .-FtlRead
+	.align	2
+	.global	sftl_read
+	.type	sftl_read, %function
+sftl_read:
+.LFB158:
+	.loc 3 1201 0
+	.cfi_startproc
+.LVL1552:
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	.loc 3 1202 0
+	mov	x3, x2
+	mov	w2, w1
+.LVL1553:
+	mov	w1, w0
+.LVL1554:
+	.loc 3 1201 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 3 1202 0
+	mov	w0, 0
+.LVL1555:
+	.loc 3 1201 0
+	.loc 3 1202 0
+	bl	FtlRead
+.LVL1556:
+	.loc 3 1204 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE158:
+	.size	sftl_read, .-sftl_read
+	.align	2
+	.global	FtlWrite
+	.type	FtlWrite, %function
+FtlWrite:
+.LFB156:
+	.loc 3 959 0
+	.cfi_startproc
+.LVL1557:
+	stp	x29, x30, [sp, -224]!
+	.cfi_def_cfa_offset 224
+	.cfi_offset 29, -224
+	.cfi_offset 30, -216
+	and	w0, w0, 255
+	.loc 3 967 0
+	cmp	w0, 16
+	.loc 3 959 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -176
+	.cfi_offset 24, -168
+	mov	w23, w1
+	stp	x25, x26, [sp, 64]
+	.cfi_offset 25, -160
+	.cfi_offset 26, -152
+	mov	w26, w2
+	stp	x27, x28, [sp, 80]
+	.cfi_offset 27, -144
+	.cfi_offset 28, -136
+	mov	x27, x3
+	stp	x19, x20, [sp, 16]
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 19, -208
+	.cfi_offset 20, -200
+	.cfi_offset 21, -192
+	.cfi_offset 22, -184
+	.loc 3 967 0
+	bne	.L1499
+	.loc 3 968 0
+	mov	x2, x3
+	mov	w1, w26
+	add	w0, w23, 256
+.LVL1558:
+	bl	FtlVendorPartWrite
+.LVL1559:
+.L1498:
+	.loc 3 1150 0
+	ldp	x19, x20, [sp, 16]
+.LVL1560:
+	ldp	x21, x22, [sp, 32]
+.LVL1561:
+	ldp	x23, x24, [sp, 48]
+.LVL1562:
+	ldp	x25, x26, [sp, 64]
+.LVL1563:
+	ldp	x27, x28, [sp, 80]
+.LVL1564:
+	ldp	x29, x30, [sp], 224
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 27
+	.cfi_restore 28
+	.cfi_restore 25
+	.cfi_restore 26
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.LVL1565:
+.L1499:
+	.cfi_restore_state
+	.loc 3 971 0
+	add	w3, w1, w2
+	adrp	x20, .LANCHOR0
+	add	x2, x20, :lo12:.LANCHOR0
+	ldr	w0, [x2, 120]
+.LVL1566:
+	cmp	w3, w0
+	bhi	.L1541
+	.loc 3 971 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR2
+	str	x1, [x29, 136]
+	ldr	w0, [x1, #:lo12:.LANCHOR2]
+	cmn	w0, #1
+	beq	.L1498
+	.loc 3 975 0 is_stmt 1
+	ldrh	w1, [x2, 38]
+	.loc 3 974 0
+	adrp	x4, .LANCHOR3
+	.loc 3 976 0
+	sub	w3, w3, #1
+	.loc 3 974 0
+	add	x5, x4, :lo12:.LANCHOR3
+	mov	w0, 2048
+	str	x4, [x29, 104]
+	.loc 3 975 0
+	udiv	w22, w23, w1
+.LVL1567:
+	.loc 3 974 0
+	str	w0, [x5, 84]
+	.loc 3 976 0
+	udiv	w0, w3, w1
+.LVL1568:
+	.loc 3 980 0
+	ldr	x3, [x5, -104]
+	.loc 3 977 0
+	sub	w24, w0, w22
+	.loc 3 976 0
+	str	w0, [x29, 148]
+	.loc 3 979 0
+	ldr	w0, [x2, 2532]
+.LVL1569:
+	.loc 3 977 0
+	add	w25, w24, 1
+.LVL1570:
+	.loc 3 979 0
+	add	w0, w0, w25
+	str	w0, [x2, 2532]
+	.loc 3 980 0
+	cbz	x3, .L1501
+	.loc 3 981 0
+	ldr	w0, [x3, 24]
+	cmp	w22, w0
+	beq	.L1502
+	.loc 3 982 0
+	bl	FtlCacheWriteBack
+.LVL1571:
+.L1501:
+	.loc 3 1005 0
+	ldr	x0, [x29, 136]
+	add	x19, x20, :lo12:.LANCHOR0
+	add	x0, x0, :lo12:.LANCHOR2
+	ldr	w0, [x0, 8]
+	cbz	w0, .L1543
+	.loc 3 1005 0 is_stmt 0 discriminator 1
+	ldrh	w1, [x19, 2364]
+	add	x0, x19, 2360
+	.loc 3 1006 0 is_stmt 1 discriminator 1
+	add	x19, x19, 2408
+	cmp	w1, 0
+	csel	x19, x19, x0, eq
+.LVL1572:
+.L1504:
+	.loc 3 1009 0
+	adrp	x0, .LANCHOR1
+	mov	w21, w22
+.LVL1573:
+	add	x0, x0, :lo12:.LANCHOR1
+	add	x0, x0, 672
+	str	x0, [x29, 160]
+.LVL1574:
+.L1505:
+	.loc 3 1008 0
+	cbz	w25, .L1539
+	.loc 3 1009 0
+	add	x0, x20, :lo12:.LANCHOR0
+	ldrb	w1, [x19, 6]
+	ldrh	w0, [x0, 12]
+	cmp	w1, w0
+	bcc	.L1506
+	.loc 3 1009 0 is_stmt 0 discriminator 1
+	ldr	x1, [x29, 160]
+	adrp	x0, .LC1
+	mov	w2, 1009
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1575:
+.L1506:
+	.loc 3 1010 0 is_stmt 1
+	ldrh	w0, [x19, 4]
+	cbnz	w0, .L1507
+	.loc 3 1011 0
+	bl	FtlCacheWriteBack
+.LVL1576:
+	.loc 3 1013 0
+	add	x0, x20, :lo12:.LANCHOR0
+	add	x1, x0, 2360
+	cmp	x19, x1
+	bne	.L1508
+	.loc 3 1014 0
+	add	x0, x0, 2408
+	ldrh	w1, [x0, 4]
+	cbnz	w1, .L1509
+	.loc 3 1015 0
+	bl	allocate_new_data_superblock
+.LVL1577:
+	.loc 3 1016 0
+	ldr	x0, [x29, 136]
+	add	x0, x0, :lo12:.LANCHOR2
+	str	wzr, [x0, 8]
+.L1509:
+	.loc 3 1018 0
+	add	x19, x20, :lo12:.LANCHOR0
+.LVL1578:
+	add	x24, x19, 2360
+	.loc 3 1020 0
+	add	x19, x19, 2408
+	.loc 3 1018 0
+	mov	x0, x24
+	bl	allocate_new_data_superblock
+.LVL1579:
+	.loc 3 1019 0
+	ldr	x0, [x29, 136]
+	add	x0, x0, :lo12:.LANCHOR2
+	ldr	w0, [x0, 8]
+	.loc 3 1020 0
+	cmp	w0, 0
+	csel	x19, x19, x24, ne
+.LVL1580:
+.L1510:
+	.loc 3 1030 0
+	ldrh	w0, [x19, 4]
+	cbnz	w0, .L1507
+	.loc 3 1031 0
+	mov	x0, x19
+	bl	allocate_new_data_superblock
+.LVL1581:
+.L1507:
+	.loc 3 1040 0
+	ldrh	w0, [x19, 4]
+	.loc 3 1038 0
+	ldrb	w1, [x19, 7]
+	cmp	w0, w25
+	csel	w0, w0, w25, ls
+	lsl	w1, w1, 2
+	cmp	w0, w1
+	csel	w0, w0, w1, ls
+	str	w0, [x29, 132]
+	.loc 3 1042 0
+	add	x0, x20, :lo12:.LANCHOR0
+	ldrb	w1, [x19, 6]
+	ldrh	w0, [x0, 12]
+	cmp	w1, w0
+	bcc	.L1511
+	.loc 3 1042 0 is_stmt 0 discriminator 1
+	ldr	x1, [x29, 160]
+	adrp	x0, .LC1
+	mov	w2, 1042
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1582:
+.L1511:
+	.loc 3 1065 0 is_stmt 1 discriminator 1
+	str	xzr, [x29, 168]
+.L1512:
+	.loc 3 1043 0 discriminator 1
+	ldr	w1, [x29, 132]
+	ldr	w28, [x29, 168]
+.LVL1583:
+	cmp	w28, w1
+	bcc	.L1533
+	mov	x28, x1
+.L1513:
+	.loc 3 1124 0
+	ldr	x0, [x29, 104]
+	add	x0, x0, :lo12:.LANCHOR3
+	ldr	x0, [x0, -104]
+	cbz	x0, .L1534
+	.loc 3 1126 0
+	sub	w25, w25, #1
+.LVL1584:
+	.loc 3 1127 0
+	subs	w28, w28, #1
+	bne	.L1534
+.L1539:
+	.loc 3 1134 0
+	ldr	w0, [x29, 148]
+	.loc 3 1136 0
+	add	x20, x20, :lo12:.LANCHOR0
+.LVL1585:
+	.loc 3 1134 0
+	sub	w1, w0, w22
+	mov	w0, 0
+.LVL1586:
+	bl	rk_ftl_garbage_collect
+.LVL1587:
+	.loc 3 1136 0
+	ldrh	w0, [x20, 2352]
+	cmp	w0, 15
+	bhi	.L1536
+	.loc 3 1138 0
+	mov	w21, 65535
+.LVL1588:
+	.loc 3 1140 0
+	mov	w19, 128
+.LVL1589:
+.L1559:
+	.loc 3 1138 0
+	ldrh	w0, [x20, 2664]
+	cmp	w0, w21
+	bne	.L1540
+	.loc 3 1138 0 is_stmt 0 discriminator 1
+	ldrh	w0, [x20, 3312]
+	cmp	w0, w21
+	bne	.L1540
+	.loc 3 1139 0 is_stmt 1
+	mov	w0, 0
+	bl	List_get_gc_head_node
+.LVL1590:
+	bl	FtlGcRefreshBlock
+.LVL1591:
+.L1540:
+	.loc 3 1142 0
+	mov	w1, 1
+	.loc 3 1140 0
+	strh	w19, [x20, 3226]
+	.loc 3 1142 0
+	mov	w0, w1
+	.loc 3 1141 0
+	strh	w19, [x20, 3224]
+	.loc 3 1142 0
+	bl	rk_ftl_garbage_collect
+.LVL1592:
+	.loc 3 1143 0
+	mov	w1, 1
+	mov	w0, 0
+	bl	rk_ftl_garbage_collect
+.LVL1593:
+	.loc 3 1144 0
+	ldrh	w0, [x20, 2352]
+	cmp	w0, 8
+	bls	.L1559
+	b	.L1536
+.LVL1594:
+.L1502:
+	.loc 3 984 0
+	ldr	w0, [x2, 2536]
+	.loc 3 989 0
+	ldr	x3, [x3, 8]
+	.loc 3 984 0
+	add	w0, w0, 1
+	str	w0, [x2, 2536]
+	.loc 3 985 0
+	msub	w0, w22, w1, w23
+	.loc 3 986 0
+	sub	w1, w1, w0
+	cmp	w26, w1
+	.loc 3 989 0
+	lsl	w0, w0, 9
+	csel	w19, w26, w1, ls
+	add	x0, x3, x0
+	lsl	w21, w19, 9
+	mov	x1, x27
+	mov	w2, w21
+	bl	ftl_memcpy
+.LVL1595:
+	.loc 3 991 0
+	cbnz	w24, .L1503
+.LVL1596:
+.L1536:
+	.loc 3 992 0
+	mov	w0, 0
+	b	.L1498
+.LVL1597:
+.L1503:
+	.loc 3 993 0
+	sub	w26, w26, w19
+	.loc 3 994 0
+	add	w23, w23, w19
+	.loc 3 995 0
+	add	x27, x27, x21
+	.loc 3 996 0
+	add	w22, w22, 1
+	.loc 3 997 0
+	bl	FtlCacheWriteBack
+.LVL1598:
+	mov	w25, w24
+	b	.L1501
+.L1543:
+	.loc 3 1003 0
+	add	x19, x19, 2360
+.LVL1599:
+	b	.L1504
+.LVL1600:
+.L1508:
+	.loc 3 1024 0
+	ldr	x0, [x29, 136]
+	add	x0, x0, :lo12:.LANCHOR2
+	str	wzr, [x0, 8]
+	.loc 3 1025 0
+	ldrh	w0, [x1, 4]
+	cbnz	w0, .L1546
+	.loc 3 1026 0
+	mov	x0, x19
+	bl	allocate_new_data_superblock
+.LVL1601:
+	b	.L1510
+.L1546:
+	mov	x19, x1
+	b	.L1507
+.LVL1602:
+.L1533:
+	.loc 3 1044 0
+	ldrh	w0, [x19, 4]
+	cbz	w0, .L1513
+	.loc 3 1048 0
+	add	x1, x29, 188
+	mov	w2, 0
+	mov	w0, w21
+	bl	log2phys
+.LVL1603:
+	.loc 3 1049 0
+	mov	x0, x19
+	bl	get_new_active_ppa
+.LVL1604:
+	.loc 3 1051 0
+	add	x3, x20, :lo12:.LANCHOR0
+	ldr	x1, [x29, 168]
+	.loc 3 1052 0
+	str	x3, [x29, 152]
+	lsl	x24, x1, 5
+	.loc 3 1051 0
+	ldr	x1, [x3, 3984]
+	.loc 3 1052 0
+	ldrh	w2, [x3, 92]
+	.loc 3 1051 0
+	add	x1, x1, x24
+	str	w0, [x1, 4]
+.LVL1605:
+	.loc 3 1052 0
+	mul	w28, w28, w2
+.LVL1606:
+	ldr	x0, [x3, 3984]
+	and	x1, x28, 4294967292
+	str	x1, [x29, 120]
+	add	x0, x0, x24
+	ldr	x1, [x3, 3936]
+	ldr	x3, [x29, 120]
+	str	x1, [x29, 112]
+	add	x28, x1, x3
+	.loc 3 1053 0
+	str	w21, [x0, 24]
+	.loc 3 1052 0
+	str	x28, [x0, 16]
+	.loc 3 1056 0
+	mov	w1, 0
+	mov	x0, x28
+	bl	ftl_memset
+.LVL1607:
+	.loc 3 1058 0
+	ldr	w0, [x29, 148]
+	cmp	w21, w22
+	ldr	x3, [x29, 152]
+.LVL1608:
+	ccmp	w21, w0, 4, ne
+	bne	.L1514
+	.loc 3 1059 0
+	cmp	w21, w22
+	bne	.L1515
+	.loc 3 1060 0
+	ldrh	w2, [x3, 38]
+	udiv	w0, w23, w2
+.LVL1609:
+	msub	w0, w0, w2, w23
+	str	w0, [x29, 144]
+	.loc 3 1061 0
+	sub	w2, w2, w0
+	cmp	w2, w26
+	csel	w0, w2, w26, ls
+	str	w0, [x29, 152]
+.L1516:
+	.loc 3 1069 0
+	add	x0, x20, :lo12:.LANCHOR0
+	ldr	w2, [x29, 152]
+	ldrh	w1, [x0, 38]
+	cmp	w2, w1
+	bne	.L1517
+	.loc 3 1071 0
+	ldr	x0, [x0, 3984]
+	.loc 3 1070 0
+	cmp	w21, w22
+	.loc 3 1071 0
+	add	x24, x0, x24
+	.loc 3 1070 0
+	bne	.L1518
+	.loc 3 1071 0
+	str	x27, [x24, 8]
+.LVL1610:
+.L1519:
+	.loc 3 1116 0
+	add	x0, x20, :lo12:.LANCHOR0
+.LVL1611:
+	ldrb	w1, [x19, 6]
+	ldrh	w0, [x0, 12]
+	cmp	w1, w0
+	bcc	.L1530
+	.loc 3 1116 0 is_stmt 0 discriminator 1
+	ldr	x1, [x29, 160]
+	adrp	x0, .LC1
+	mov	w2, 1116
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1612:
+.L1530:
+	.loc 3 1117 0 is_stmt 1
+	ldp	x1, x2, [x29, 112]
+	mov	w0, -3947
+	strh	w0, [x1, x2]
+	.loc 3 1118 0
+	add	x1, x20, :lo12:.LANCHOR0
+	ldr	w0, [x1, 2560]
+	.loc 3 1119 0
+	stp	w0, w21, [x28, 4]
+	.loc 3 1122 0
+	add	w21, w21, 1
+	.loc 3 1118 0
+	add	w0, w0, 1
+	cmn	w0, #1
+	csel	w0, w0, wzr, ne
+	str	w0, [x1, 2560]
+	.loc 3 1120 0
+	ldr	w0, [x29, 188]
+.LVL1613:
+	str	w0, [x28, 12]
+	.loc 3 1121 0
+	ldrh	w0, [x19]
+.LVL1614:
+	strh	w0, [x28, 2]
+	ldr	x0, [x29, 168]
+	add	x0, x0, 1
+	str	x0, [x29, 168]
+	b	.L1512
+.LVL1615:
+.L1515:
+	.loc 3 1066 0
+	ldrh	w0, [x3, 38]
+.LVL1616:
+	add	w2, w23, w26
+	.loc 3 1065 0
+	str	wzr, [x29, 144]
+	.loc 3 1066 0
+	msub	w2, w21, w0, w2
+	and	w0, w2, 65535
+	str	w0, [x29, 152]
+	b	.L1516
+.L1518:
+	.loc 3 1073 0
+	ldr	w0, [x29, 152]
+.L1562:
+	.loc 3 1114 0
+	mul	w0, w0, w21
+	sub	w0, w0, w23
+	lsl	w0, w0, 9
+	add	x0, x27, x0
+	str	x0, [x24, 8]
+	b	.L1519
+.L1517:
+	.loc 3 1077 0
+	ldr	x1, [x0, 3984]
+	.loc 3 1076 0
+	cmp	w21, w22
+	.loc 3 1077 0
+	add	x1, x1, x24
+	.loc 3 1076 0
+	bne	.L1520
+	.loc 3 1077 0
+	ldr	x0, [x0, 3944]
+.L1561:
+	.loc 3 1079 0
+	str	x0, [x1, 8]
+	.loc 3 1081 0
+	ldr	w0, [x29, 188]
+	cmn	w0, #1
+	beq	.L1522
+.LBB297:
+	.loc 3 1085 0
+	add	x3, x20, :lo12:.LANCHOR0
+	.loc 3 1083 0
+	str	w0, [x29, 196]
+	.loc 3 1084 0
+	str	w21, [x29, 216]
+	.loc 3 1087 0
+	mov	w2, 0
+	.loc 3 1085 0
+	str	x3, [x29, 96]
+	ldr	x0, [x3, 3984]
+	add	x0, x0, x24
+	.loc 3 1086 0
+	ldp	x1, x0, [x0, 8]
+	stp	x1, x0, [x29, 200]
+	.loc 3 1087 0
+	mov	w1, 1
+	add	x0, x29, 192
+	bl	FlashReadPages
+.LVL1617:
+	.loc 3 1088 0
+	ldr	w0, [x29, 192]
+	ldr	x3, [x29, 96]
+	cmn	w0, #1
+	bne	.L1523
+	.loc 3 1089 0
+	ldr	w0, [x3, 2784]
+	add	w0, w0, 1
+	str	w0, [x3, 2784]
+.L1526:
+	ldr	w0, [x29, 152]
+.LBE297:
+	.loc 3 1101 0
+	cmp	w21, w22
+	lsl	w2, w0, 9
+	.loc 3 1102 0
+	add	x0, x20, :lo12:.LANCHOR0
+	.loc 3 1101 0
+	bne	.L1527
+	.loc 3 1102 0
+	ldr	x1, [x0, 3984]
+	ldr	w0, [x29, 144]
+	add	x1, x1, x24
+	lsl	w0, w0, 9
+	ldr	x3, [x1, 8]
+	mov	x1, x27
+	add	x0, x3, x0
+	bl	ftl_memcpy
+.LVL1618:
+	.loc 3 1106 0
+	ldr	w0, [x29, 148]
+.LVL1619:
+	cmp	w21, w0
+	bne	.L1519
+.L1528:
+	.loc 3 1107 0
+	ldrh	w0, [x19, 4]
+.LVL1620:
+	cbz	w0, .L1519
+	.loc 3 1108 0
+	ldr	x0, [x29, 104]
+	add	x1, x0, :lo12:.LANCHOR3
+	add	x0, x20, :lo12:.LANCHOR0
+	ldr	x0, [x0, 3984]
+	.loc 3 1109 0
+	str	x19, [x1, 64]
+	.loc 3 1108 0
+	add	x24, x0, x24
+	str	x24, [x1, -104]
+	b	.L1519
+.L1520:
+	.loc 3 1079 0
+	ldr	x0, [x0, 3928]
+	b	.L1561
+.L1523:
+.LBB298:
+	.loc 3 1091 0
+	ldr	w0, [x28, 8]
+	cmp	w21, w0
+	beq	.L1525
+	.loc 3 1092 0
+	ldr	w0, [x3, 2784]
+	.loc 3 1093 0
+	mov	w2, w21
+	.loc 3 1092 0
+	add	w0, w0, 1
+	str	w0, [x3, 2784]
+	.loc 3 1093 0
+	adrp	x0, .LC101
+	add	x0, x0, :lo12:.LC101
+	ldr	w1, [x28, 8]
+	bl	printk
+.LVL1621:
+.L1525:
+	.loc 3 1095 0
+	ldr	w0, [x28, 8]
+	cmp	w21, w0
+	beq	.L1526
+	.loc 3 1095 0 is_stmt 0 discriminator 1
+	ldr	x1, [x29, 160]
+	mov	w2, 1095
+	adrp	x0, .LC1
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1622:
+	b	.L1526
+.L1522:
+.LBE298:
+	.loc 3 1098 0 is_stmt 1
+	add	x1, x20, :lo12:.LANCHOR0
+	ldr	x0, [x1, 3984]
+	ldrh	w2, [x1, 90]
+	mov	w1, 0
+	add	x0, x0, x24
+	ldr	x0, [x0, 8]
+	bl	ftl_memset
+.LVL1623:
+	b	.L1526
+.L1527:
+	.loc 3 1104 0
+	ldrh	w1, [x0, 38]
+	ldr	x0, [x0, 3984]
+	add	x0, x0, x24
+	mul	w1, w1, w21
+	ldr	x0, [x0, 8]
+	sub	w1, w1, w23
+	lsl	w1, w1, 9
+	add	x1, x27, x1
+	bl	ftl_memcpy
+.LVL1624:
+	b	.L1528
+.LVL1625:
+.L1514:
+	.loc 3 1114 0
+	ldr	x0, [x3, 3984]
+.LVL1626:
+	add	x24, x0, x24
+	ldrh	w0, [x3, 38]
+	b	.L1562
+.LVL1627:
+.L1534:
+	.loc 3 1130 0
+	add	x0, x20, :lo12:.LANCHOR0
+	mov	x3, x19
+	mov	w2, 0
+	mov	w1, w28
+	ldr	x0, [x0, 3984]
+	bl	FtlProgPages
+.LVL1628:
+	.loc 3 1131 0
+	cmp	w25, w28
+	bcs	.L1537
+	.loc 3 1131 0 is_stmt 0 discriminator 1
+	ldr	x1, [x29, 160]
+	adrp	x0, .LC1
+	mov	w2, 1131
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1629:
+.L1537:
+	.loc 3 1132 0 is_stmt 1
+	sub	w25, w25, w28
+	b	.L1505
+.LVL1630:
+.L1541:
+	.loc 3 972 0
+	mov	w0, -1
+	b	.L1498
+	.cfi_endproc
+.LFE156:
+	.size	FtlWrite, .-FtlWrite
+	.align	2
+	.global	sftl_write
+	.type	sftl_write, %function
+sftl_write:
+.LFB159:
+	.loc 3 1207 0
+	.cfi_startproc
+.LVL1631:
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	.loc 3 1208 0
+	mov	x3, x2
+	mov	w2, w1
+.LVL1632:
+	mov	w1, w0
+.LVL1633:
+	.loc 3 1207 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 3 1208 0
+	mov	w0, 0
+.LVL1634:
+	.loc 3 1207 0
+	.loc 3 1208 0
+	bl	FtlWrite
+.LVL1635:
+	.loc 3 1209 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE159:
+	.size	sftl_write, .-sftl_write
+	.align	2
+	.global	FtlLoadSysInfo
+	.type	FtlLoadSysInfo, %function
+FtlLoadSysInfo:
+.LFB213:
+	.loc 2 1360 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -64]!
+	.cfi_def_cfa_offset 64
+	.cfi_offset 29, -64
+	.cfi_offset 30, -56
+	.loc 2 1368 0
+	mov	w1, 0
+	.loc 2 1360 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -48
+	.cfi_offset 20, -40
+	.loc 2 1365 0
+	adrp	x20, .LANCHOR0
+	add	x19, x20, :lo12:.LANCHOR0
+	.loc 2 1360 0
+	stp	x21, x22, [sp, 32]
+	.cfi_offset 21, -32
+	.cfi_offset 22, -24
+	.loc 2 1365 0
+	add	x21, x19, 3360
+	.loc 2 1360 0
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -16
+	.cfi_offset 24, -8
+	.loc 2 1365 0
+	ldr	x0, [x19, 2288]
+	str	x0, [x21, 8]
+	.loc 2 1366 0
+	ldr	x0, [x19, 3392]
+	str	x0, [x21, 16]
+	.loc 2 1368 0
+	ldr	x0, [x19, 2320]
+	ldrh	w2, [x19, 20]
+	lsl	w2, w2, 1
+	bl	ftl_memset
+.LVL1636:
+	.loc 2 1369 0
+	ldrh	w0, [x19, 2648]
+	mov	w1, 65535
+	cmp	w0, w1
+	bne	.L1566
+.LVL1637:
+.L1574:
+	.loc 2 1370 0
+	mov	w0, -1
+.L1565:
+	.loc 2 1463 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+.LVL1638:
+	ldp	x23, x24, [sp, 48]
+	ldp	x29, x30, [sp], 64
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.L1566:
+	.cfi_restore_state
+	add	x23, x19, 2648
+	.loc 2 1372 0
+	mov	w1, 1
+	bl	FtlGetLastWrittenPage
+.LVL1639:
+	sxth	w22, w0
+.LVL1640:
+	.loc 2 1373 0
+	add	w0, w0, 1
+	.loc 2 1382 0
+	mov	w24, 61604
+	.loc 2 1373 0
+	strh	w0, [x23, 2]
+	.loc 2 1381 0
+	mov	w23, 19539
+	movk	w23, 0x4654, lsl 16
+.L1568:
+	.loc 2 1375 0
+	tbz	w22, #31, .L1571
+	.loc 2 1388 0
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 1388
+	add	x1, x1, 688
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1641:
+.L1570:
+	.loc 2 1390 0
+	add	x1, x20, :lo12:.LANCHOR0
+	ldrh	w0, [x1, 20]
+	ldrh	w1, [x1, 90]
+	add	x0, x0, 24
+	cmp	x1, x0, lsl 1
+	bcs	.L1573
+	.loc 2 1390 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 1390
+	add	x1, x1, 688
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1642:
+.L1573:
+	.loc 2 1392 0 is_stmt 1
+	add	x19, x20, :lo12:.LANCHOR0
+	mov	w2, 48
+	add	x21, x19, 2592
+	mov	x0, x21
+	ldr	x1, [x19, 3368]
+	bl	ftl_memcpy
+.LVL1643:
+	.loc 2 1393 0
+	ldr	x0, [x19, 2320]
+	ldrh	w2, [x19, 20]
+	ldr	x1, [x19, 3368]
+	lsl	w2, w2, 1
+	add	x1, x1, 48
+	bl	ftl_memcpy
+.LVL1644:
+	.loc 2 1394 0
+	ldrh	w1, [x19, 20]
+	ldr	x0, [x19, 3368]
+	lsr	w2, w1, 3
+	ubfiz	x1, x1, 1, 16
+	add	x1, x1, 48
+	add	w2, w2, 4
+	and	x1, x1, -4
+	add	x1, x0, x1
+	ldr	x0, [x20, #:lo12:.LANCHOR0]
+	bl	ftl_memcpy
+.LVL1645:
+	.loc 2 1396 0
+	ldr	w1, [x19, 2592]
+	mov	w0, 19539
+	movk	w0, 0x4654, lsl 16
+	cmp	w1, w0
+	bne	.L1574
+	.loc 2 1399 0
+	ldrh	w1, [x19, 2600]
+	.loc 2 1400 0
+	ldrb	w2, [x19, 2602]
+	ldrh	w0, [x19, 34]
+	.loc 2 1399 0
+	strh	w1, [x19, 2654]
+	.loc 2 1400 0
+	cmp	w2, w0
+	bne	.L1574
+	.loc 2 1403 0
+	adrp	x0, .LANCHOR3+88
+	.loc 2 1405 0
+	ldrh	w2, [x19, 38]
+	.loc 2 1406 0
+	ldrh	w3, [x19, 12]
+	.loc 2 1403 0
+	str	w1, [x0, #:lo12:.LANCHOR3+88]
+	.loc 2 1404 0
+	ldrh	w0, [x19, 82]
+	mul	w0, w0, w1
+	str	w0, [x19, 2520]
+	.loc 2 1405 0
+	mul	w0, w2, w0
+	.loc 2 1406 0
+	ldr	w2, [x19, 24]
+	.loc 2 1405 0
+	str	w0, [x19, 120]
+	.loc 2 1406 0
+	ldrh	w0, [x19, 142]
+	.loc 2 1412 0
+	cmp	w1, w2
+	.loc 2 1406 0
+	sub	w0, w2, w0
+	sub	w0, w0, w1
+	udiv	w0, w0, w3
+	strh	w0, [x19, 2640]
+	.loc 2 1412 0
+	bls	.L1575
+	.loc 2 1412 0 is_stmt 0 discriminator 1
+	adrp	x1, .LANCHOR1
+	add	x1, x1, :lo12:.LANCHOR1
+	adrp	x0, .LC1
+	mov	w2, 1412
+	add	x1, x1, 688
+	add	x0, x0, :lo12:.LC1
+	bl	printk
+.LVL1646:
+.L1575:
+	.loc 2 1414 0 is_stmt 1
+	add	x0, x20, :lo12:.LANCHOR0
+	.loc 2 1419 0
+	mov	w3, -1
+	.loc 2 1415 0
+	ldrh	w2, [x0, 2608]
+	.loc 2 1414 0
+	ldrh	w4, [x0, 2606]
+	strh	w4, [x0, 2360]
+	.loc 2 1415 0
+	lsr	w5, w2, 6
+	.loc 2 1416 0
+	and	w2, w2, 63
+	strb	w2, [x0, 2366]
+	.loc 2 1417 0
+	ldrb	w2, [x0, 2603]
+	strb	w2, [x0, 2368]
+	.loc 2 1424 0
+	ldrh	w2, [x0, 2610]
+	strh	w2, [x0, 2408]
+	.loc 2 1425 0
+	ldrh	w2, [x0, 2612]
+	.loc 2 1415 0
+	strh	w5, [x0, 2362]
+	.loc 2 1419 0
+	strh	w3, [x0, 2664]
+	.loc 2 1425 0
+	lsr	w5, w2, 6
+	.loc 2 1426 0
+	and	w2, w2, 63
+	strb	w2, [x0, 2414]
+	.loc 2 1427 0
+	ldrb	w2, [x0, 2604]
+	strb	w2, [x0, 2416]
+	.loc 2 1429 0
+	ldrh	w2, [x0, 2614]
+	strh	w2, [x0, 2456]
+	.loc 2 1430 0
+	ldrh	w2, [x0, 2616]
+	.loc 2 1425 0
+	strh	w5, [x0, 2410]
+	.loc 2 1420 0
+	strh	wzr, [x0, 2666]
+	.loc 2 1430 0
+	lsr	w5, w2, 6
+	.loc 2 1431 0
+	and	w2, w2, 63
+	strb	w2, [x0, 2462]
+	.loc 2 1432 0
+	ldrb	w2, [x0, 2605]
+	strb	w2, [x0, 2464]
+	.loc 2 1439 0
+	ldr	w2, [x0, 2624]
+	str	w2, [x0, 2564]
+	.loc 2 1421 0
+	strb	wzr, [x0, 2670]
+	.loc 2 1422 0
+	strb	wzr, [x0, 2672]
+	.loc 2 1430 0
+	strh	w5, [x0, 2458]
+	.loc 2 1436 0
+	str	wzr, [x0, 2524]
+	.loc 2 1435 0
+	str	wzr, [x0, 2532]
+	.loc 2 1437 0
+	str	wzr, [x0, 2540]
+	.loc 2 1434 0
+	str	wzr, [x0, 2544]
+	.loc 2 1440 0
+	str	wzr, [x0, 2568]
+	.loc 2 1441 0
+	str	wzr, [x0, 2580]
+	.loc 2 1444 0
+	ldr	w2, [x0, 2556]
+	ldr	w1, [x0, 2632]
+	.loc 2 1442 0
+	str	wzr, [x0, 2536]
+	.loc 2 1444 0
+	cmp	w1, w2
+	bls	.L1576
+	.loc 2 1445 0
+	str	w1, [x0, 2556]
+.L1576:
+	.loc 2 1447 0
+	add	x0, x20, :lo12:.LANCHOR0
+	ldr	w2, [x0, 2560]
+	ldr	w1, [x0, 2628]
+	cmp	w1, w2
+	bls	.L1577
+	.loc 2 1448 0
+	str	w1, [x0, 2560]
+.L1577:
+	.loc 2 1450 0
+	mov	w0, 65535
+	cmp	w4, w0
+	beq	.L1578
+	.loc 2 1451 0
+	add	x0, x20, :lo12:.LANCHOR0
+	add	x0, x0, 2360
+	bl	make_superblock
+.LVL1647:
+.L1578:
+	.loc 2 1453 0
+	add	x1, x20, :lo12:.LANCHOR0
+	add	x0, x1, 2408
+	ldrh	w2, [x1, 2408]
+	mov	w1, 65535
+	cmp	w2, w1
+	beq	.L1579
+	.loc 2 1454 0
+	bl	make_superblock
+.LVL1648:
+.L1579:
+	.loc 2 1456 0
+	add	x1, x20, :lo12:.LANCHOR0
+	add	x0, x1, 2456
+	ldrh	w2, [x1, 2456]
+	mov	w1, 65535
+	cmp	w2, w1
+	beq	.L1580
+	.loc 2 1457 0
+	bl	make_superblock
+.LVL1649:
+.L1580:
+	.loc 2 1459 0
+	add	x20, x20, :lo12:.LANCHOR0
+	mov	w1, 65535
+	add	x0, x20, 2664
+	ldrh	w2, [x20, 2664]
+	cmp	w2, w1
+	beq	.L1581
+	.loc 2 1460 0
+	bl	make_superblock
+.LVL1650:
+.L1581:
+	.loc 2 1462 0
+	mov	w0, 0
+	b	.L1565
+.L1571:
+	.loc 2 1376 0
+	ldrh	w0, [x19, 2648]
+	.loc 2 1378 0
+	mov	w2, 1
+	mov	w1, w2
+	.loc 2 1376 0
+	orr	w0, w22, w0, lsl 10
+	str	w0, [x21, 4]
+	.loc 2 1377 0
+	ldr	x0, [x19, 2288]
+	str	x0, [x21, 8]
+	.loc 2 1378 0
+	mov	x0, x21
+	bl	FlashReadPages
+.LVL1651:
+	.loc 2 1381 0
+	ldr	w0, [x21]
+	cmn	w0, #1
+	beq	.L1569
+	.loc 2 1382 0 discriminator 1
+	ldr	x0, [x19, 2288]
+	.loc 2 1381 0 discriminator 1
+	ldr	w0, [x0]
+	cmp	w0, w23
+	bne	.L1569
+	.loc 2 1383 0
+	ldr	x0, [x19, 3392]
+	ldrh	w0, [x0]
+	.loc 2 1382 0
+	cmp	w0, w24
+	beq	.L1570
+.L1569:
+	sub	w22, w22, #1
+.LVL1652:
+	sxth	w22, w22
+.LVL1653:
+	b	.L1568
+	.cfi_endproc
+.LFE213:
+	.size	FtlLoadSysInfo, .-FtlLoadSysInfo
+	.align	2
+	.global	FtlSysBlkInit
+	.type	FtlSysBlkInit, %function
+FtlSysBlkInit:
+.LFB231:
+	.loc 2 2306 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -64]!
+	.cfi_def_cfa_offset 64
+	.cfi_offset 29, -64
+	.cfi_offset 30, -56
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -48
+	.cfi_offset 20, -40
+	.loc 2 2312 0
+	adrp	x20, .LANCHOR0
+	.loc 2 2306 0
+	stp	x21, x22, [sp, 32]
+	.loc 2 2312 0
+	add	x19, x20, :lo12:.LANCHOR0
+	.cfi_offset 21, -32
+	.cfi_offset 22, -24
+	.loc 2 2310 0
+	adrp	x21, .LANCHOR3
+	add	x0, x21, :lo12:.LANCHOR3
+	.loc 2 2306 0
+	stp	x23, x24, [sp, 48]
+	.cfi_offset 23, -16
+	.cfi_offset 24, -8
+	.loc 2 2310 0
+	strh	wzr, [x0, -80]
+	.loc 2 2312 0
+	ldrh	w0, [x19, 16]
+	bl	FtlFreeSysBlkQueueInit
+.LVL1654:
+	.loc 2 2313 0
+	bl	FtlScanSysBlk
+.LVL1655:
+	.loc 2 2314 0
+	ldrh	w1, [x19, 2648]
+	mov	w0, 65535
+	cmp	w1, w0
+	bne	.L1588
+.L1590:
+	.loc 2 2315 0
+	mov	w24, -1
+.L1587:
+	.loc 2 2398 0
+	mov	w0, w24
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+	ldp	x23, x24, [sp, 48]
+	ldp	x29, x30, [sp], 64
+	.cfi_remember_state
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 23
+	.cfi_restore 24
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+.L1588:
+	.cfi_restore_state
+	.loc 2 2317 0
+	bl	FtlLoadSysInfo
+.LVL1656:
+	mov	w24, w0
+	cbnz	w0, .L1590
+	.loc 2 2320 0
+	bl	FtlLoadMapInfo
+.LVL1657:
+	.loc 2 2321 0
+	bl	FtlLoadVonderInfo
+.LVL1658:
+	.loc 2 2322 0
+	bl	Ftl_load_ext_data
+.LVL1659:
+	.loc 2 2324 0
+	bl	FtlLoadEctTbl
+.LVL1660:
+	.loc 2 2325 0
+	bl	FtlFreeSysBLkSort
+.LVL1661:
+	.loc 2 2327 0
+	bl	SupperBlkListInit
+.LVL1662:
+	.loc 2 2328 0
+	bl	FtlPowerLostRecovery
+.LVL1663:
+	.loc 2 2330 0
+	mov	w0, 1
+	bl	FtlUpdateVaildLpn
+.LVL1664:
+	ldr	x1, [x19, 2504]
+.LBB302:
+.LBB303:
+	.loc 2 2332 0
+	mov	w0, 0
+.LVL1665:
+	ldrh	w3, [x19, 118]
+	add	x1, x1, 4
+.L1591:
+	cmp	w0, w3
+	bge	.L1596
+	.loc 2 2333 0
+	ldr	w2, [x1], 16
+	tbz	w2, #31, .L1592
+.L1596:
+	.loc 2 2336 0
+	add	x1, x20, :lo12:.LANCHOR0
+	.loc 2 2338 0
+	cmp	w0, w3
+	.loc 2 2336 0
+	ldrh	w2, [x1, 2620]
+	add	w2, w2, 1
+	strh	w2, [x1, 2620]
+	.loc 2 2338 0
+	bge	.L1602
+.L1593:
+	.loc 2 2339 0
+	add	x19, x20, :lo12:.LANCHOR0
+	.loc 2 2359 0
+	add	x21, x21, :lo12:.LANCHOR3
+	.loc 2 2339 0
+	add	x23, x19, 2360
+	.loc 2 2340 0
+	add	x22, x19, 2408
+	.loc 2 2339 0
+	mov	x0, x23
+.LVL1666:
+	bl	FtlSuperblockPowerLostFix
+.LVL1667:
+	.loc 2 2340 0
+	mov	x0, x22
+	bl	FtlSuperblockPowerLostFix
+.LVL1668:
+.LBB304:
+	.loc 2 2346 0
+	ldrh	w0, [x19, 2360]
+	ldr	x2, [x19, 2320]
+	ldrh	w3, [x19, 2364]
+	lsl	x0, x0, 1
+	ldrh	w1, [x2, x0]
+	sub	w1, w1, w3
+	strh	w1, [x2, x0]
+	.loc 2 2348 0
+	strb	wzr, [x19, 2366]
+	.loc 2 2347 0
+	ldrh	w0, [x19, 82]
+	strh	w0, [x19, 2362]
+	.loc 2 2352 0
+	ldrh	w0, [x19, 2408]
+	ldr	x2, [x19, 2320]
+	.loc 2 2349 0
+	strh	wzr, [x19, 2364]
+	.loc 2 2352 0
+	lsl	x0, x0, 1
+	ldrh	w3, [x19, 2412]
+	ldrh	w1, [x2, x0]
+	sub	w1, w1, w3
+	strh	w1, [x2, x0]
+	.loc 2 2354 0
+	strb	wzr, [x19, 2414]
+	.loc 2 2353 0
+	ldrh	w0, [x19, 82]
+	strh	w0, [x19, 2410]
+.LBE304:
+	.loc 2 2359 0
+	sub	x0, x21, #240
+.LBB305:
+	.loc 2 2355 0
+	strh	wzr, [x19, 2412]
+.LBE305:
+	.loc 2 2359 0
+	bl	FtlMapBlkWriteDump_data
+.LVL1669:
+	.loc 2 2360 0
+	sub	x0, x21, #168
+	bl	FtlMapBlkWriteDump_data
+.LVL1670:
+	.loc 2 2372 0
+	ldrh	w0, [x19, 2622]
+	add	w0, w0, 1
+	strh	w0, [x19, 2622]
+	.loc 2 2373 0
+	bl	l2p_flush
+.LVL1671:
+	.loc 2 2374 0
+	bl	FtlVpcTblFlush
+.LVL1672:
+	.loc 2 2375 0
+	bl	FtlVpcTblFlush
+.LVL1673:
+	b	.L1597
+.LVL1674:
+.L1592:
+	.loc 2 2332 0
+	add	w0, w0, 1
+	b	.L1591
+.L1602:
+	.loc 2 2338 0
+	add	x0, x21, :lo12:.LANCHOR3
+.LVL1675:
+	ldrh	w0, [x0, -80]
+	cbnz	w0, .L1593
+.L1597:
+	.loc 2 2379 0
+	add	x19, x20, :lo12:.LANCHOR0
+	mov	w1, 65535
+	add	x22, x19, 2360
+	ldrh	w0, [x19, 2360]
+	cmp	w0, w1
+	beq	.L1598
+	ldrh	w1, [x19, 2364]
+	cbnz	w1, .L1598
+	.loc 2 2380 0
+	ldrh	w1, [x19, 2412]
+	.loc 2 2381 0
+	add	x21, x19, 2408
+	.loc 2 2380 0
+	cbnz	w1, .L1598
+	.loc 2 2382 0
+	bl	FtlGcRefreshBlock
+.LVL1676:
+	.loc 2 2383 0
+	ldrh	w0, [x19, 2408]
+	bl	FtlGcRefreshBlock
+.LVL1677:
+	.loc 2 2384 0
+	mov	x0, x22
+	bl	allocate_new_data_superblock
+.LVL1678:
+	.loc 2 2385 0
+	mov	x0, x21
+	bl	allocate_new_data_superblock
+.LVL1679:
+.L1598:
+	.loc 2 2390 0
+	add	x20, x20, :lo12:.LANCHOR0
+	ldrh	w0, [x20, 2620]
+	tst	x0, 31
+	bne	.L1587
+	.loc 2 2391 0
+	bl	FtlVpcCheckAndModify
+.LVL1680:
+	b	.L1587
+.LBE303:
+.LBE302:
+	.cfi_endproc
+.LFE231:
+	.size	FtlSysBlkInit, .-FtlSysBlkInit
+	.align	2
+	.global	ftl_low_format
+	.type	ftl_low_format, %function
+ftl_low_format:
+.LFB149:
+	.loc 3 623 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -64]!
+	.cfi_def_cfa_offset 64
+	.cfi_offset 29, -64
+	.cfi_offset 30, -56
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -48
+	.cfi_offset 20, -40
+	.loc 3 629 0
+	adrp	x20, .LANCHOR0
+	add	x0, x20, :lo12:.LANCHOR0
+	.loc 3 623 0
+	stp	x21, x22, [sp, 32]
+	str	x23, [sp, 48]
+	.cfi_offset 21, -32
+	.cfi_offset 22, -24
+	.cfi_offset 23, -16
+	.loc 3 629 0
+	str	wzr, [x0, 2556]
+	.loc 3 630 0
+	str	wzr, [x0, 2560]
+	.loc 3 631 0
+	ldrh	w0, [x0, 16]
+	bl	FtlFreeSysBlkQueueInit
+.LVL1681:
+	.loc 3 632 0
+	bl	FtlLoadBbt
+.LVL1682:
+	cbz	w0, .L1605
+	.loc 3 633 0
+	bl	FtlMakeBbt
+.LVL1683:
+.L1605:
+	.loc 3 637 0 discriminator 1
+	mov	w4, 23752
+	.loc 3 635 0 discriminator 1
+	add	x1, x20, :lo12:.LANCHOR0
+	.loc 3 623 0 discriminator 1
+	mov	w0, 0
+.LVL1684:
+	.loc 3 637 0 discriminator 1
+	movk	w4, 0xa0f, lsl 16
+.L1606:
+	.loc 3 635 0 discriminator 1
+	ldrh	w2, [x1, 38]
+	cmp	w0, w2, lsl 7
+	blt	.L1607
+	.loc 3 642 0
+	ldrh	w21, [x1, 20]
+	add	x22, x20, :lo12:.LANCHOR0
+	.loc 3 641 0
+	mov	w19, 0
+.LVL1685:
+.L1608:
+	.loc 3 642 0 discriminator 1
+	ldrh	w0, [x22, 22]
+.LVL1686:
+	cmp	w0, w21
+	bhi	.L1609
+	.loc 3 645 0
+	ldrh	w0, [x22, 12]
+	sub	w1, w19, #3
+	cmp	w1, w0, lsl 1
+	bge	.L1610
+.L1614:
+	.loc 3 656 0
+	add	x19, x20, :lo12:.LANCHOR0
+.LVL1687:
+	.loc 3 641 0
+	mov	w21, 0
+.LVL1688:
+	mov	w22, 0
+.L1611:
+	.loc 3 656 0 discriminator 1
+	ldrh	w0, [x19, 20]
+	cmp	w0, w22
+	bhi	.L1615
+	.loc 3 661 0
+	ldrh	w2, [x19, 12]
+	ldr	w1, [x19, 24]
+	.loc 3 658 0
+	ldrh	w0, [x19, 22]
+	str	w0, [x19, 3920]
+	.loc 3 661 0
+	udiv	w4, w1, w2
+	.loc 3 662 0
+	ubfx	x3, x4, 5, 16
+	.loc 3 661 0
+	str	w4, [x19, 2520]
+	.loc 3 662 0
+	add	w0, w3, 36
+	strh	w0, [x19, 2640]
+	.loc 3 663 0
+	mov	w0, 24
+	mul	w0, w2, w0
+	cmp	w21, w0
+	ble	.L1616
+	.loc 3 664 0
+	sub	w1, w1, w21
+	udiv	w1, w1, w2
+	str	w1, [x19, 2520]
+	.loc 3 665 0
+	lsr	w1, w1, 5
+	add	w1, w1, 24
+	strh	w1, [x19, 2640]
+.L1616:
+	.loc 3 668 0
+	add	x0, x20, :lo12:.LANCHOR0
+	ldrh	w1, [x0, 74]
+	cbz	w1, .L1618
+	.loc 3 669 0
+	ldrh	w5, [x0, 2640]
+	add	w5, w5, w1, lsr 1
+	strh	w5, [x0, 2640]
+	.loc 3 670 0
+	mul	w5, w1, w2
+	cmp	w21, w5
+	bge	.L1618
+	.loc 3 672 0
+	add	w1, w1, 32
+	.loc 3 671 0
+	str	w4, [x0, 2520]
+	.loc 3 672 0
+	add	w1, w3, w1
+	strh	w1, [x0, 2640]
+.L1618:
+	.loc 3 677 0
+	add	x19, x20, :lo12:.LANCHOR0
+	adrp	x22, .LANCHOR3
+	.loc 3 694 0
+	add	x21, x19, 2360
+.LVL1689:
+	.loc 3 689 0
+	mov	w23, -1
+	.loc 3 677 0
+	ldrh	w1, [x19, 2640]
+	ldr	w0, [x19, 2520]
+	sub	w0, w0, w1
+	add	x1, x22, :lo12:.LANCHOR3
+	mul	w0, w0, w2
+	str	w0, [x1, 88]
+	.loc 3 678 0
+	ldrh	w1, [x19, 82]
+	mul	w0, w1, w0
+	.loc 3 679 0
+	ldrh	w1, [x19, 38]
+	.loc 3 678 0
+	str	w0, [x19, 2520]
+	.loc 3 679 0
+	mul	w0, w1, w0
+	str	w0, [x19, 120]
+	.loc 3 684 0
+	bl	FtlBbmTblFlush
+.LVL1690:
+	.loc 3 687 0
+	ldr	x0, [x19, 2320]
+	mov	w1, 0
+	ldrh	w2, [x19, 22]
+	lsl	w2, w2, 1
+	bl	ftl_memset
+.LVL1691:
+	.loc 3 697 0
+	mov	w0, 1
+	strb	w0, [x21, 8]
+	.loc 3 698 0
+	ldr	x0, [x20, #:lo12:.LANCHOR0]
+	mov	w1, 255
+	ldrh	w2, [x19, 20]
+	.loc 3 689 0
+	strh	w23, [x19, 2664]
+	.loc 3 690 0
+	strh	wzr, [x19, 2666]
+	.loc 3 691 0
+	strb	wzr, [x19, 2670]
+	.loc 3 698 0
+	lsr	w2, w2, 3
+	.loc 3 692 0
+	strb	wzr, [x19, 2672]
+	.loc 3 694 0
+	strh	wzr, [x21, 2]
+	.loc 3 695 0
+	strb	wzr, [x21, 6]
+	.loc 3 696 0
+	strh	wzr, [x19, 2360]
+	.loc 3 688 0
+	str	wzr, [x19, 2516]
+	.loc 3 698 0
+	bl	ftl_memset
+.LVL1692:
+.L1620:
+	.loc 3 701 0
+	mov	x0, x21
+	bl	make_superblock
+.LVL1693:
+	.loc 3 702 0
+	ldrb	w1, [x21, 7]
+	ldrh	w0, [x21]
+	cbnz	w1, .L1621
+	.loc 3 705 0
+	ldr	x1, [x19, 2320]
+	ubfiz	x0, x0, 1, 16
+	strh	w23, [x1, x0]
+	.loc 3 706 0
+	ldrh	w0, [x21]
+	add	w0, w0, 1
+	strh	w0, [x21]
+	.loc 3 707 0
+	b	.L1620
+.LVL1694:
+.L1607:
+	.loc 3 636 0 discriminator 3
+	ldr	x5, [x1, 3944]
+	ubfiz	x3, x0, 2, 16
+	mvn	w2, w0
+	orr	w2, w0, w2, lsl 16
+	.loc 3 635 0 discriminator 3
+	add	w0, w0, 1
+.LVL1695:
+	and	w0, w0, 65535
+.LVL1696:
+	.loc 3 636 0 discriminator 3
+	str	w2, [x5, x3]
+	.loc 3 637 0 discriminator 3
+	ldr	x2, [x1, 3928]
+	str	w4, [x2, x3]
+	b	.L1606
+.LVL1697:
+.L1609:
+	.loc 3 643 0 discriminator 3
+	mov	w0, w21
+	mov	w1, 1
+	.loc 3 642 0 discriminator 3
+	add	w21, w21, 1
+	.loc 3 643 0 discriminator 3
+	bl	FtlLowFormatEraseBlock
+.LVL1698:
+	add	w19, w19, w0
+.LVL1699:
+	.loc 3 642 0 discriminator 3
+	and	w21, w21, 65535
+	.loc 3 643 0 discriminator 3
+	and	w19, w19, 65535
+.LVL1700:
+	b	.L1608
+.L1610:
+	.loc 3 647 0
+	udiv	w0, w19, w0
+	ldr	w19, [x22, 112]
+.LVL1701:
+	.loc 3 650 0
+	add	x21, x20, :lo12:.LANCHOR0
+	.loc 3 647 0
+	add	w0, w0, w19
+	bl	FtlSysBlkNumInit
+.LVL1702:
+	.loc 3 648 0
+	ldrh	w0, [x22, 16]
+	bl	FtlFreeSysBlkQueueInit
+.LVL1703:
+	.loc 3 650 0
+	ldrh	w19, [x22, 20]
+.L1612:
+	.loc 3 650 0 is_stmt 0 discriminator 1
+	ldrh	w0, [x21, 22]
+	cmp	w0, w19
+	bls	.L1614
+	.loc 3 651 0 is_stmt 1 discriminator 3
+	mov	w0, w19
+	.loc 3 650 0 discriminator 3
+	add	w19, w19, 1
+	.loc 3 651 0 discriminator 3
+	mov	w1, 1
+	.loc 3 650 0 discriminator 3
+	and	w19, w19, 65535
+	.loc 3 651 0 discriminator 3
+	bl	FtlLowFormatEraseBlock
+.LVL1704:
+	b	.L1612
+.LVL1705:
+.L1615:
+	.loc 3 657 0 discriminator 3
+	mov	w0, w22
+	mov	w1, 0
+	.loc 3 656 0 discriminator 3
+	add	w22, w22, 1
+	.loc 3 657 0 discriminator 3
+	bl	FtlLowFormatEraseBlock
+.LVL1706:
+	add	w21, w21, w0
+.LVL1707:
+	.loc 3 656 0 discriminator 3
+	and	w22, w22, 65535
+	.loc 3 657 0 discriminator 3
+	and	w21, w21, 65535
+.LVL1708:
+	b	.L1611
+.LVL1709:
+.L1621:
+	.loc 3 709 0
+	ldr	w1, [x19, 2556]
+	.loc 3 710 0
+	ubfiz	x0, x0, 1, 16
+	.loc 3 709 0
+	str	w1, [x21, 12]
+	add	w1, w1, 1
+	str	w1, [x19, 2556]
+	.loc 3 710 0
+	ldr	x1, [x19, 2320]
+	ldrh	w2, [x21, 4]
+	strh	w2, [x1, x0]
+	.loc 3 712 0
+	add	x0, x19, 2408
+	strh	wzr, [x19, 2410]
+	.loc 3 714 0
+	ldrh	w1, [x21]
+	.loc 3 721 0
+	mov	w21, -1
+	.loc 3 713 0
+	strb	wzr, [x19, 2414]
+	.loc 3 714 0
+	add	w1, w1, 1
+	strh	w1, [x19, 2408]
+	.loc 3 715 0
+	mov	w1, 1
+	strb	w1, [x19, 2416]
+	.loc 3 717 0
+	add	x19, x20, :lo12:.LANCHOR0
+	mov	x20, x0
+.L1622:
+	mov	x0, x20
+	bl	make_superblock
+.LVL1710:
+	.loc 3 718 0
+	ldrb	w1, [x20, 7]
+	ldrh	w0, [x20]
+	cbnz	w1, .L1623
+	.loc 3 721 0
+	ldr	x1, [x19, 2320]
+	ubfiz	x0, x0, 1, 16
+	strh	w21, [x1, x0]
+	.loc 3 722 0
+	ldrh	w0, [x20]
+	add	w0, w0, 1
+	strh	w0, [x20]
+	.loc 3 723 0
+	b	.L1622
+.L1623:
+	.loc 3 725 0
+	ldr	w1, [x19, 2556]
+	.loc 3 726 0
+	ubfiz	x0, x0, 1, 16
+	.loc 3 725 0
+	str	w1, [x20, 12]
+	.loc 3 727 0
+	mov	w4, -1
+	.loc 3 725 0
+	add	w1, w1, 1
+	str	w1, [x19, 2556]
+	.loc 3 726 0
+	ldr	x1, [x19, 2320]
+	.loc 3 733 0
+	add	x22, x22, :lo12:.LANCHOR3
+	.loc 3 726 0
+	ldrh	w2, [x20, 4]
+	strh	w2, [x1, x0]
+	.loc 3 727 0
+	strh	w4, [x19, 2456]
+	.loc 3 730 0
+	bl	FtlFreeSysBlkQueueOut
+.LVL1711:
+	strh	w0, [x19, 2648]
+	.loc 3 733 0
+	ldr	w0, [x22, 88]
+	strh	w0, [x19, 2654]
+	.loc 3 734 0
+	ldr	w0, [x19, 2556]
+	str	w0, [x19, 2656]
+	add	w0, w0, 1
+	.loc 3 732 0
+	strh	w4, [x19, 2652]
+	.loc 3 731 0
+	strh	wzr, [x19, 2650]
+	.loc 3 734 0
+	str	w0, [x19, 2556]
+	.loc 3 735 0
+	bl	FtlVpcTblFlush
+.LVL1712:
+	.loc 3 736 0
+	bl	FtlSysBlkInit
+.LVL1713:
+	cbnz	w0, .L1624
+	.loc 3 737 0
+	adrp	x0, .LANCHOR2
+	mov	w1, 1
+	str	w1, [x0, #:lo12:.LANCHOR2]
+.L1624:
+	.loc 3 739 0
+	mov	w0, 0
+	ldr	x23, [sp, 48]
+	ldp	x19, x20, [sp, 16]
+	ldp	x21, x22, [sp, 32]
+	ldp	x29, x30, [sp], 64
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 23
+	.cfi_restore 21
+	.cfi_restore 22
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE149:
+	.size	ftl_low_format, .-ftl_low_format
+	.align	2
+	.global	sftl_init
+	.type	sftl_init, %function
+sftl_init:
+.LFB150:
+	.loc 3 743 0
+	.cfi_startproc
+	stp	x29, x30, [sp, -32]!
+	.cfi_def_cfa_offset 32
+	.cfi_offset 29, -32
+	.cfi_offset 30, -24
+	.loc 3 749 0
+	adrp	x1, .LC70
+	add	x1, x1, :lo12:.LC70
+	.loc 3 746 0
+	mov	w0, -1
+	.loc 3 743 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	stp	x19, x20, [sp, 16]
+	.cfi_offset 19, -16
+	.cfi_offset 20, -8
+	.loc 3 746 0
+	adrp	x20, .LANCHOR2
+	.loc 3 753 0
+	adrp	x19, .LANCHOR0
+	add	x19, x19, :lo12:.LANCHOR0
+	.loc 3 746 0
+	str	w0, [x20, #:lo12:.LANCHOR2]
+	.loc 3 749 0
+	adrp	x0, .LC71
+	add	x0, x0, :lo12:.LC71
+	bl	printk
+.LVL1714:
+	.loc 3 750 0
+	adrp	x0, g_nand_phy_info
+	add	x0, x0, :lo12:g_nand_phy_info
+	bl	FtlConstantsInit
+.LVL1715:
+	.loc 3 751 0
+	bl	FtlMemInit
+.LVL1716:
+	.loc 3 752 0
+	bl	FtlVariablesInit
+.LVL1717:
+	.loc 3 753 0
+	ldrh	w0, [x19, 16]
+	bl	FtlFreeSysBlkQueueInit
+.LVL1718:
+	.loc 3 756 0
+	bl	FtlLoadBbt
+.LVL1719:
+	cbnz	w0, .L1633
+	.loc 3 767 0
+	bl	FtlSysBlkInit
+.LVL1720:
+	cbnz	w0, .L1633
+	.loc 3 779 0
+	mov	w0, 1
+	str	w0, [x20, #:lo12:.LANCHOR2]
+	.loc 3 783 0
+	ldrh	w0, [x19, 2352]
+	cmp	w0, 15
+	bhi	.L1633
+	mov	w19, 8129
+.L1632:
+.LBB306:
+	.loc 3 786 0 discriminator 3
+	mov	w1, 1
+	mov	w0, 0
+	bl	rk_ftl_garbage_collect
+.LVL1721:
+	.loc 3 785 0 discriminator 3
+	subs	w19, w19, #1
+	bne	.L1632
+.L1633:
+.LBE306:
+	.loc 3 794 0
+	mov	w0, 0
+	ldp	x19, x20, [sp, 16]
+	ldp	x29, x30, [sp], 32
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_restore 19
+	.cfi_restore 20
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE150:
+	.size	sftl_init, .-sftl_init
+	.align	2
+	.global	ftl_memcmp
+	.type	ftl_memcmp, %function
+ftl_memcmp:
+.LFB268:
+	.loc 1 211 0
+	.cfi_startproc
+.LVL1722:
+	stp	x29, x30, [sp, -16]!
+	.cfi_def_cfa_offset 16
+	.cfi_offset 29, -16
+	.cfi_offset 30, -8
+	.loc 1 212 0
+	uxtw	x2, w2
+.LVL1723:
+	.loc 1 211 0
+	add	x29, sp, 0
+	.cfi_def_cfa_register 29
+	.loc 1 212 0
+	bl	memcmp
+.LVL1724:
+	.loc 1 213 0
+	ldp	x29, x30, [sp], 16
+	.cfi_restore 30
+	.cfi_restore 29
+	.cfi_def_cfa 31, 0
+	ret
+	.cfi_endproc
+.LFE268:
+	.size	ftl_memcmp, .-ftl_memcmp
+	.global	ftl_temp_buf
+	.global	gc_ink_free_return_value
+	.global	check_vpc_table
+	.global	FtlUpdateVaildLpnCount
+	.global	g_ect_tbl_power_up_flush
+	.global	power_up_flag
+	.global	gFtlInitStatus
+	.global	DeviceCapacity
+	.global	g_power_lost_recovery_flag
+	.global	c_mlc_erase_count_value
+	.global	g_recovery_ppa_tbl
+	.global	g_recovery_page_min_ver
+	.global	g_recovery_page_num
+	.global	g_cur_erase_blk
+	.global	g_gc_skip_write_count
+	.global	g_gc_head_data_block_count
+	.global	g_gc_head_data_block
+	.global	g_ftl_nand_free_count
+	.global	g_in_swl_replace
+	.global	g_in_gc_progress
+	.global	g_max_erase_count
+	.global	g_totle_sys_slc_erase_count
+	.global	g_totle_slc_erase_count
+	.global	g_min_erase_count
+	.global	g_totle_avg_erase_count
+	.global	g_totle_mlc_erase_count
+	.global	g_totle_l2p_write_count
+	.global	g_totle_cache_write_count
+	.global	g_tmp_data_superblock_id
+	.global	g_totle_read_page_count
+	.global	g_totle_discard_page_count
+	.global	g_totle_read_sector
+	.global	g_totle_write_sector
+	.global	g_totle_write_page_count
+	.global	g_totle_gc_page_count
+	.global	g_gc_blk_index
+	.global	g_gc_merge_free_blk_threshold
+	.global	g_gc_free_blk_threshold
+	.global	g_gc_bad_block_temp_tbl
+	.global	g_gc_bad_block_gc_index
+	.global	g_gc_bad_block_temp_num
+	.global	g_gc_next_blk_1
+	.global	g_gc_next_blk
+	.global	g_gc_cur_blk_max_valid_pages
+	.global	g_gc_cur_blk_valid_pages
+	.global	g_gc_page_offset
+	.global	g_gc_blk_num
+	.global	p_gc_blk_tbl
+	.global	p_gc_page_info
+	.global	g_sys_ext_data
+	.global	g_sys_save_data
+	.global	gp_last_act_superblock
+	.global	g_gc_superblock
+	.global	g_gc_temp_superblock
+	.global	g_buffer_superblock
+	.global	g_active_superblock
+	.global	g_num_data_superblocks
+	.global	g_num_free_superblocks
+	.global	p_data_block_list_tail
+	.global	p_data_block_list_head
+	.global	p_free_data_block_list_head
+	.global	p_data_block_list_table
+	.global	g_l2p_last_update_region_id
+	.global	p_l2p_map_buf
+	.global	p_l2p_ram_map
+	.global	g_totle_vendor_block
+	.global	p_vendor_region_ppn_table
+	.global	p_vendor_block_ver_table
+	.global	p_vendor_block_valid_page_count
+	.global	p_vendor_block_table
+	.global	g_totle_map_block
+	.global	p_map_region_ppn_table
+	.global	p_map_block_ver_table
+	.global	p_map_block_valid_page_count
+	.global	p_map_block_table
+	.global	p_blk_mode_table
+	.global	p_valid_page_count_check_table
+	.global	p_valid_page_count_table
+	.global	g_totle_swl_count
+	.global	p_swl_mul_table
+	.global	p_erase_count_table
+	.global	g_ect_tbl_info_size
+	.global	gp_ect_tbl_info
+	.global	g_gc_num_req
+	.global	c_gc_page_buf_num
+	.global	gp_gc_page_buf_info
+	.global	p_gc_data_buf
+	.global	p_gc_spare_buf
+	.global	p_io_spare_buf
+	.global	p_io_data_buf_1
+	.global	p_io_data_buf_0
+	.global	p_sys_spare_buf
+	.global	p_vendor_data_buf
+	.global	p_sys_data_buf_1
+	.global	p_sys_data_buf
+	.global	p_plane_order_table
+	.global	g_req_cache
+	.global	req_gc_dst
+	.global	req_gc
+	.global	req_erase
+	.global	req_prgm
+	.global	req_read
+	.global	req_sys
+	.global	gVendorBlkInfo
+	.global	gL2pMapInfo
+	.global	gSysFreeQueue
+	.global	gSysInfo
+	.global	gBbtInfo
+	.global	g_MaxLbn
+	.global	g_VaildLpn
+	.global	g_MaxLpn
+	.global	g_MaxLbaSector
+	.global	g_GlobalDataVersion
+	.global	g_GlobalSysVersion
+	.global	ftl_gc_temp_power_lost_recovery_flag
+	.global	c_ftl_nand_max_data_blks
+	.global	c_ftl_nand_data_op_blks_per_plane
+	.global	c_ftl_nand_data_blks_per_plane
+	.global	c_ftl_nand_max_sys_blks
+	.global	c_ftl_nand_init_sys_blks_per_plane
+	.global	c_ftl_nand_sys_blks_per_plane
+	.global	c_ftl_vendor_part_size
+	.global	c_ftl_nand_max_vendor_blks
+	.global	c_ftl_nand_max_map_blks
+	.global	c_ftl_nand_map_blks_per_plane
+	.global	c_ftl_nand_vendor_region_num
+	.global	c_ftl_nand_l2pmap_ram_region_num
+	.global	c_ftl_nand_map_region_num
+	.global	c_ftl_nand_totle_phy_blks
+	.global	c_ftl_nand_reserved_blks
+	.global	c_ftl_nand_byte_pre_oob
+	.global	c_ftl_nand_byte_pre_page
+	.global	c_ftl_nand_sec_pre_page_shift
+	.global	c_ftl_nand_sec_pre_page
+	.global	c_ftl_nand_page_pre_super_blk
+	.global	c_ftl_nand_page_pre_slc_blk
+	.global	c_ftl_nand_page_pre_blk
+	.global	c_ftl_nand_bbm_buf_size
+	.global	c_ftl_nand_ext_blk_pre_plane
+	.global	c_ftl_nand_blk_pre_plane
+	.global	c_ftl_nand_planes_num
+	.global	c_ftl_nand_blks_per_die_shift
+	.global	c_ftl_nand_blks_per_die
+	.global	c_ftl_nand_planes_per_die
+	.global	c_ftl_nand_die_num
+	.global	c_ftl_nand_type
+	.section	.rodata
+	.align	3
+	.set	.LANCHOR1,. + 0
+	.type	__func__.3775, %object
+	.size	__func__.3775, 17
+__func__.3775:
+	.string	"INSERT_DATA_LIST"
+	.zero	7
+	.type	__func__.3770, %object
+	.size	__func__.3770, 17
+__func__.3770:
+	.string	"INSERT_FREE_LIST"
+	.zero	7
+	.type	__func__.3805, %object
+	.size	__func__.3805, 17
+__func__.3805:
+	.string	"List_remove_node"
+	.zero	7
+	.type	__func__.3837, %object
+	.size	__func__.3837, 22
+__func__.3837:
+	.string	"List_update_data_list"
+	.zero	2
+	.type	__func__.3878, %object
+	.size	__func__.3878, 26
+__func__.3878:
+	.string	"ftl_map_blk_alloc_new_blk"
+	.zero	6
+	.type	__func__.3942, %object
+	.size	__func__.3942, 22
+__func__.3942:
+	.string	"select_l2p_ram_region"
+	.zero	2
+	.type	__func__.4265, %object
+	.size	__func__.4265, 16
+__func__.4265:
+	.string	"make_superblock"
+	.type	__func__.4439, %object
+	.size	__func__.4439, 19
+__func__.4439:
+	.string	"get_new_active_ppa"
+	.zero	5
+	.type	__func__.4679, %object
+	.size	__func__.4679, 15
+__func__.4679:
+	.string	"FlashReadPages"
+	.zero	1
+	.type	__func__.4696, %object
+	.size	__func__.4696, 15
+__func__.4696:
+	.string	"FlashProgPages"
+	.zero	1
+	.type	__func__.3388, %object
+	.size	__func__.3388, 11
+__func__.3388:
+	.string	"FtlMemInit"
+	.zero	5
+	.type	__func__.3604, %object
+	.size	__func__.3604, 14
+__func__.3604:
+	.string	"FtlBbt2Bitmap"
+	.zero	2
+	.type	__func__.3846, %object
+	.size	__func__.3846, 16
+__func__.3846:
+	.string	"load_l2p_region"
+	.type	__func__.3903, %object
+	.size	__func__.3903, 31
+__func__.3903:
+	.string	"Ftl_write_map_blk_to_last_page"
+	.zero	1
+	.type	__func__.3917, %object
+	.size	__func__.3917, 16
+__func__.3917:
+	.string	"FtlMapWritePage"
+	.type	__func__.3889, %object
+	.size	__func__.3889, 15
+__func__.3889:
+	.string	"ftl_map_blk_gc"
+	.zero	1
+	.type	__func__.3959, %object
+	.size	__func__.3959, 9
+__func__.3959:
+	.string	"log2phys"
+	.zero	7
+	.type	__func__.4174, %object
+	.size	__func__.4174, 16
+__func__.4174:
+	.string	"FtlReUsePrevPpa"
+	.type	__func__.4054, %object
+	.size	__func__.4054, 14
+__func__.4054:
+	.string	"FtlScanSysBlk"
+	.zero	2
+	.type	__func__.4286, %object
+	.size	__func__.4286, 18
+__func__.4286:
+	.string	"SupperBlkListInit"
+	.zero	6
+	.type	__func__.4327, %object
+	.size	__func__.4327, 14
+__func__.4327:
+	.string	"ftl_check_vpc"
+	.zero	2
+	.type	__func__.4411, %object
+	.size	__func__.4411, 25
+__func__.4411:
+	.string	"allocate_data_superblock"
+	.zero	7
+	.type	__func__.4452, %object
+	.size	__func__.4452, 16
+__func__.4452:
+	.string	"update_vpc_list"
+	.type	__func__.4459, %object
+	.size	__func__.4459, 20
+__func__.4459:
+	.string	"decrement_vpc_count"
+	.zero	4
+	.type	__func__.4208, %object
+	.size	__func__.4208, 22
+__func__.4208:
+	.string	"FtlRecoverySuperblock"
+	.zero	2
+	.type	__func__.3647, %object
+	.size	__func__.3647, 11
+__func__.3647:
+	.string	"FtlLoadBbt"
+	.zero	5
+	.type	__func__.4032, %object
+	.size	__func__.4032, 15
+__func__.4032:
+	.string	"FtlVpcTblFlush"
+	.zero	1
+	.type	__func__.4311, %object
+	.size	__func__.4311, 21
+__func__.4311:
+	.string	"FtlVpcCheckAndModify"
+	.zero	3
+	.type	__func__.4432, %object
+	.size	__func__.4432, 29
+__func__.4432:
+	.string	"allocate_new_data_superblock"
+	.zero	3
+	.type	__func__.3512, %object
+	.size	__func__.3512, 13
+__func__.3512:
+	.string	"FtlProgPages"
+	.zero	3
+	.type	__func__.4529, %object
+	.size	__func__.4529, 19
+__func__.4529:
+	.string	"FtlGcFreeTempBlock"
+	.zero	5
+	.type	__func__.4635, %object
+	.size	__func__.4635, 23
+__func__.4635:
+	.string	"rk_ftl_garbage_collect"
+	.zero	1
+	.type	__func__.3540, %object
+	.size	__func__.3540, 9
+__func__.3540:
+	.string	"FtlWrite"
+	.zero	7
+	.type	__func__.4111, %object
+	.size	__func__.4111, 15
+__func__.4111:
+	.string	"FtlLoadSysInfo"
+	.data
+	.align	2
+	.set	.LANCHOR2,. + 0
+	.type	gFtlInitStatus, %object
+	.size	gFtlInitStatus, 4
+gFtlInitStatus:
+	.word	-1
+	.type	ftl_gc_temp_block_bops_scan_page_addr, %object
+	.size	ftl_gc_temp_block_bops_scan_page_addr, 2
+ftl_gc_temp_block_bops_scan_page_addr:
+	.hword	-1
+	.zero	2
+	.type	power_up_flag, %object
+	.size	power_up_flag, 4
+power_up_flag:
+	.word	1
+	.bss
+	.align	3
+	.set	.LANCHOR0,. + 0
+	.set	.LANCHOR3,. + 4352
+	.type	p_blk_mode_table, %object
+	.size	p_blk_mode_table, 8
+p_blk_mode_table:
+	.zero	8
+	.type	c_ftl_nand_sys_blks_per_plane, %object
+	.size	c_ftl_nand_sys_blks_per_plane, 4
+c_ftl_nand_sys_blks_per_plane:
+	.zero	4
+	.type	c_ftl_nand_planes_num, %object
+	.size	c_ftl_nand_planes_num, 2
+c_ftl_nand_planes_num:
+	.zero	2
+	.zero	2
+	.type	c_ftl_nand_max_sys_blks, %object
+	.size	c_ftl_nand_max_sys_blks, 4
+c_ftl_nand_max_sys_blks:
+	.zero	4
+	.type	c_ftl_nand_data_blks_per_plane, %object
+	.size	c_ftl_nand_data_blks_per_plane, 2
+c_ftl_nand_data_blks_per_plane:
+	.zero	2
+	.type	c_ftl_nand_blk_pre_plane, %object
+	.size	c_ftl_nand_blk_pre_plane, 2
+c_ftl_nand_blk_pre_plane:
+	.zero	2
+	.type	c_ftl_nand_max_data_blks, %object
+	.size	c_ftl_nand_max_data_blks, 4
+c_ftl_nand_max_data_blks:
+	.zero	4
+	.type	c_ftl_nand_totle_phy_blks, %object
+	.size	c_ftl_nand_totle_phy_blks, 4
+c_ftl_nand_totle_phy_blks:
+	.zero	4
+	.type	c_ftl_nand_type, %object
+	.size	c_ftl_nand_type, 2
+c_ftl_nand_type:
+	.zero	2
+	.type	c_ftl_nand_die_num, %object
+	.size	c_ftl_nand_die_num, 2
+c_ftl_nand_die_num:
+	.zero	2
+	.type	c_ftl_nand_planes_per_die, %object
+	.size	c_ftl_nand_planes_per_die, 2
+c_ftl_nand_planes_per_die:
+	.zero	2
+	.type	c_ftl_nand_sec_pre_page, %object
+	.size	c_ftl_nand_sec_pre_page, 2
+c_ftl_nand_sec_pre_page:
+	.zero	2
+	.type	p_plane_order_table, %object
+	.size	p_plane_order_table, 32
+p_plane_order_table:
+	.zero	32
+	.type	c_mlc_erase_count_value, %object
+	.size	c_mlc_erase_count_value, 2
+c_mlc_erase_count_value:
+	.zero	2
+	.type	c_ftl_nand_ext_blk_pre_plane, %object
+	.size	c_ftl_nand_ext_blk_pre_plane, 2
+c_ftl_nand_ext_blk_pre_plane:
+	.zero	2
+	.type	c_ftl_vendor_part_size, %object
+	.size	c_ftl_vendor_part_size, 2
+c_ftl_vendor_part_size:
+	.zero	2
+	.type	c_ftl_nand_blks_per_die, %object
+	.size	c_ftl_nand_blks_per_die, 2
+c_ftl_nand_blks_per_die:
+	.zero	2
+	.type	c_ftl_nand_blks_per_die_shift, %object
+	.size	c_ftl_nand_blks_per_die_shift, 2
+c_ftl_nand_blks_per_die_shift:
+	.zero	2
+	.type	c_ftl_nand_page_pre_blk, %object
+	.size	c_ftl_nand_page_pre_blk, 2
+c_ftl_nand_page_pre_blk:
+	.zero	2
+	.type	c_ftl_nand_page_pre_slc_blk, %object
+	.size	c_ftl_nand_page_pre_slc_blk, 2
+c_ftl_nand_page_pre_slc_blk:
+	.zero	2
+	.type	c_ftl_nand_page_pre_super_blk, %object
+	.size	c_ftl_nand_page_pre_super_blk, 2
+c_ftl_nand_page_pre_super_blk:
+	.zero	2
+	.type	c_ftl_nand_sec_pre_page_shift, %object
+	.size	c_ftl_nand_sec_pre_page_shift, 2
+c_ftl_nand_sec_pre_page_shift:
+	.zero	2
+	.type	c_ftl_nand_byte_pre_page, %object
+	.size	c_ftl_nand_byte_pre_page, 2
+c_ftl_nand_byte_pre_page:
+	.zero	2
+	.type	c_ftl_nand_byte_pre_oob, %object
+	.size	c_ftl_nand_byte_pre_oob, 2
+c_ftl_nand_byte_pre_oob:
+	.zero	2
+	.type	c_ftl_nand_reserved_blks, %object
+	.size	c_ftl_nand_reserved_blks, 2
+c_ftl_nand_reserved_blks:
+	.zero	2
+	.type	DeviceCapacity, %object
+	.size	DeviceCapacity, 4
+DeviceCapacity:
+	.zero	4
+	.type	c_ftl_nand_max_vendor_blks, %object
+	.size	c_ftl_nand_max_vendor_blks, 2
+c_ftl_nand_max_vendor_blks:
+	.zero	2
+	.type	c_ftl_nand_vendor_region_num, %object
+	.size	c_ftl_nand_vendor_region_num, 2
+c_ftl_nand_vendor_region_num:
+	.zero	2
+	.type	c_ftl_nand_map_blks_per_plane, %object
+	.size	c_ftl_nand_map_blks_per_plane, 2
+c_ftl_nand_map_blks_per_plane:
+	.zero	2
+	.zero	2
+	.type	c_ftl_nand_max_map_blks, %object
+	.size	c_ftl_nand_max_map_blks, 4
+c_ftl_nand_max_map_blks:
+	.zero	4
+	.type	c_ftl_nand_init_sys_blks_per_plane, %object
+	.size	c_ftl_nand_init_sys_blks_per_plane, 4
+c_ftl_nand_init_sys_blks_per_plane:
+	.zero	4
+	.type	c_ftl_nand_map_region_num, %object
+	.size	c_ftl_nand_map_region_num, 2
+c_ftl_nand_map_region_num:
+	.zero	2
+	.type	c_ftl_nand_l2pmap_ram_region_num, %object
+	.size	c_ftl_nand_l2pmap_ram_region_num, 2
+c_ftl_nand_l2pmap_ram_region_num:
+	.zero	2
+	.type	g_MaxLbaSector, %object
+	.size	g_MaxLbaSector, 4
+g_MaxLbaSector:
+	.zero	4
+	.type	g_totle_vendor_block, %object
+	.size	g_totle_vendor_block, 2
+g_totle_vendor_block:
+	.zero	2
+	.zero	2
+	.type	p_vendor_block_table, %object
+	.size	p_vendor_block_table, 8
+p_vendor_block_table:
+	.zero	8
+	.type	gBbtInfo, %object
+	.size	gBbtInfo, 96
+gBbtInfo:
+	.zero	96
+	.type	gSysFreeQueue, %object
+	.size	gSysFreeQueue, 2056
+gSysFreeQueue:
+	.zero	2056
+	.type	p_sys_data_buf, %object
+	.size	p_sys_data_buf, 8
+p_sys_data_buf:
+	.zero	8
+	.type	p_erase_count_table, %object
+	.size	p_erase_count_table, 8
+p_erase_count_table:
+	.zero	8
+	.type	p_data_block_list_table, %object
+	.size	p_data_block_list_table, 8
+p_data_block_list_table:
+	.zero	8
+	.type	p_data_block_list_head, %object
+	.size	p_data_block_list_head, 8
+p_data_block_list_head:
+	.zero	8
+	.type	p_valid_page_count_table, %object
+	.size	p_valid_page_count_table, 8
+p_valid_page_count_table:
+	.zero	8
+	.type	p_data_block_list_tail, %object
+	.size	p_data_block_list_tail, 8
+p_data_block_list_tail:
+	.zero	8
+	.type	g_num_data_superblocks, %object
+	.size	g_num_data_superblocks, 2
+g_num_data_superblocks:
+	.zero	2
+	.zero	6
+	.type	p_free_data_block_list_head, %object
+	.size	p_free_data_block_list_head, 8
+p_free_data_block_list_head:
+	.zero	8
+	.type	g_num_free_superblocks, %object
+	.size	g_num_free_superblocks, 2
+g_num_free_superblocks:
+	.zero	2
+	.zero	6
+	.type	g_active_superblock, %object
+	.size	g_active_superblock, 48
+g_active_superblock:
+	.zero	48
+	.type	g_buffer_superblock, %object
+	.size	g_buffer_superblock, 48
+g_buffer_superblock:
+	.zero	48
+	.type	g_gc_temp_superblock, %object
+	.size	g_gc_temp_superblock, 48
+g_gc_temp_superblock:
+	.zero	48
+	.type	p_l2p_ram_map, %object
+	.size	p_l2p_ram_map, 8
+p_l2p_ram_map:
+	.zero	8
+	.type	g_l2p_last_update_region_id, %object
+	.size	g_l2p_last_update_region_id, 2
+g_l2p_last_update_region_id:
+	.zero	2
+	.type	FtlUpdateVaildLpnCount, %object
+	.size	FtlUpdateVaildLpnCount, 2
+FtlUpdateVaildLpnCount:
+	.zero	2
+	.type	g_VaildLpn, %object
+	.size	g_VaildLpn, 4
+g_VaildLpn:
+	.zero	4
+	.type	g_MaxLpn, %object
+	.size	g_MaxLpn, 4
+g_MaxLpn:
+	.zero	4
+	.type	g_totle_read_page_count, %object
+	.size	g_totle_read_page_count, 4
+g_totle_read_page_count:
+	.zero	4
+	.type	g_totle_discard_page_count, %object
+	.size	g_totle_discard_page_count, 4
+g_totle_discard_page_count:
+	.zero	4
+	.type	g_totle_write_page_count, %object
+	.size	g_totle_write_page_count, 4
+g_totle_write_page_count:
+	.zero	4
+	.type	g_totle_cache_write_count, %object
+	.size	g_totle_cache_write_count, 4
+g_totle_cache_write_count:
+	.zero	4
+	.type	g_totle_l2p_write_count, %object
+	.size	g_totle_l2p_write_count, 4
+g_totle_l2p_write_count:
+	.zero	4
+	.type	g_totle_gc_page_count, %object
+	.size	g_totle_gc_page_count, 4
+g_totle_gc_page_count:
+	.zero	4
+	.type	g_totle_write_sector, %object
+	.size	g_totle_write_sector, 4
+g_totle_write_sector:
+	.zero	4
+	.type	g_totle_read_sector, %object
+	.size	g_totle_read_sector, 4
+g_totle_read_sector:
+	.zero	4
+	.type	g_GlobalSysVersion, %object
+	.size	g_GlobalSysVersion, 4
+g_GlobalSysVersion:
+	.zero	4
+	.type	g_GlobalDataVersion, %object
+	.size	g_GlobalDataVersion, 4
+g_GlobalDataVersion:
+	.zero	4
+	.type	g_totle_mlc_erase_count, %object
+	.size	g_totle_mlc_erase_count, 4
+g_totle_mlc_erase_count:
+	.zero	4
+	.type	g_totle_slc_erase_count, %object
+	.size	g_totle_slc_erase_count, 4
+g_totle_slc_erase_count:
+	.zero	4
+	.type	g_totle_avg_erase_count, %object
+	.size	g_totle_avg_erase_count, 4
+g_totle_avg_erase_count:
+	.zero	4
+	.type	g_totle_sys_slc_erase_count, %object
+	.size	g_totle_sys_slc_erase_count, 4
+g_totle_sys_slc_erase_count:
+	.zero	4
+	.type	g_max_erase_count, %object
+	.size	g_max_erase_count, 4
+g_max_erase_count:
+	.zero	4
+	.type	g_min_erase_count, %object
+	.size	g_min_erase_count, 4
+g_min_erase_count:
+	.zero	4
+	.zero	4
+	.type	g_sys_save_data, %object
+	.size	g_sys_save_data, 48
+g_sys_save_data:
+	.zero	48
+	.type	c_ftl_nand_data_op_blks_per_plane, %object
+	.size	c_ftl_nand_data_op_blks_per_plane, 2
+c_ftl_nand_data_op_blks_per_plane:
+	.zero	2
+	.zero	6
+	.type	gSysInfo, %object
+	.size	gSysInfo, 12
+gSysInfo:
+	.zero	12
+	.zero	4
+	.type	g_gc_superblock, %object
+	.size	g_gc_superblock, 48
+g_gc_superblock:
+	.zero	48
+	.type	g_sys_ext_data, %object
+	.size	g_sys_ext_data, 512
+g_sys_ext_data:
+	.zero	512
+	.type	g_gc_free_blk_threshold, %object
+	.size	g_gc_free_blk_threshold, 2
+g_gc_free_blk_threshold:
+	.zero	2
+	.type	g_gc_merge_free_blk_threshold, %object
+	.size	g_gc_merge_free_blk_threshold, 2
+g_gc_merge_free_blk_threshold:
+	.zero	2
+	.type	g_gc_skip_write_count, %object
+	.size	g_gc_skip_write_count, 4
+g_gc_skip_write_count:
+	.zero	4
+	.type	g_gc_blk_index, %object
+	.size	g_gc_blk_index, 2
+g_gc_blk_index:
+	.zero	2
+	.zero	2
+	.type	g_in_swl_replace, %object
+	.size	g_in_swl_replace, 4
+g_in_swl_replace:
+	.zero	4
+	.type	g_gc_num_req, %object
+	.size	g_gc_num_req, 4
+g_gc_num_req:
+	.zero	4
+	.zero	4
+	.type	gp_gc_page_buf_info, %object
+	.size	gp_gc_page_buf_info, 8
+gp_gc_page_buf_info:
+	.zero	8
+	.type	p_gc_data_buf, %object
+	.size	p_gc_data_buf, 8
+p_gc_data_buf:
+	.zero	8
+	.type	p_gc_spare_buf, %object
+	.size	p_gc_spare_buf, 8
+p_gc_spare_buf:
+	.zero	8
+	.type	req_gc, %object
+	.size	req_gc, 8
+req_gc:
+	.zero	8
+	.type	c_gc_page_buf_num, %object
+	.size	c_gc_page_buf_num, 4
+c_gc_page_buf_num:
+	.zero	4
+	.type	g_gc_blk_num, %object
+	.size	g_gc_blk_num, 2
+g_gc_blk_num:
+	.zero	2
+	.zero	2
+	.type	p_gc_blk_tbl, %object
+	.size	p_gc_blk_tbl, 8
+p_gc_blk_tbl:
+	.zero	8
+	.type	g_gc_page_offset, %object
+	.size	g_gc_page_offset, 2
+g_gc_page_offset:
+	.zero	2
+	.zero	6
+	.type	p_gc_page_info, %object
+	.size	p_gc_page_info, 8
+p_gc_page_info:
+	.zero	8
+	.type	g_gc_next_blk, %object
+	.size	g_gc_next_blk, 2
+g_gc_next_blk:
+	.zero	2
+	.type	g_gc_next_blk_1, %object
+	.size	g_gc_next_blk_1, 2
+g_gc_next_blk_1:
+	.zero	2
+	.type	g_gc_bad_block_temp_num, %object
+	.size	g_gc_bad_block_temp_num, 2
+g_gc_bad_block_temp_num:
+	.zero	2
+	.zero	2
+	.type	g_gc_bad_block_temp_tbl, %object
+	.size	g_gc_bad_block_temp_tbl, 34
+g_gc_bad_block_temp_tbl:
+	.zero	34
+	.type	g_gc_bad_block_gc_index, %object
+	.size	g_gc_bad_block_gc_index, 2
+g_gc_bad_block_gc_index:
+	.zero	2
+	.zero	4
+	.type	req_sys, %object
+	.size	req_sys, 32
+req_sys:
+	.zero	32
+	.type	p_sys_spare_buf, %object
+	.size	p_sys_spare_buf, 8
+p_sys_spare_buf:
+	.zero	8
+	.type	check_spare_buf, %object
+	.size	check_spare_buf, 512
+check_spare_buf:
+	.zero	512
+	.type	req_erase, %object
+	.size	req_erase, 8
+req_erase:
+	.zero	8
+	.type	g_cur_erase_blk, %object
+	.size	g_cur_erase_blk, 4
+g_cur_erase_blk:
+	.zero	4
+	.zero	4
+	.type	p_io_data_buf_1, %object
+	.size	p_io_data_buf_1, 8
+p_io_data_buf_1:
+	.zero	8
+	.type	p_io_spare_buf, %object
+	.size	p_io_spare_buf, 8
+p_io_spare_buf:
+	.zero	8
+	.type	p_io_data_buf_0, %object
+	.size	p_io_data_buf_0, 8
+p_io_data_buf_0:
+	.zero	8
+	.type	g_in_gc_progress, %object
+	.size	g_in_gc_progress, 4
+g_in_gc_progress:
+	.zero	4
+	.type	g_gc_head_data_block, %object
+	.size	g_gc_head_data_block, 4
+g_gc_head_data_block:
+	.zero	4
+	.type	g_gc_head_data_block_count, %object
+	.size	g_gc_head_data_block_count, 4
+g_gc_head_data_block_count:
+	.zero	4
+	.zero	4
+	.type	req_read, %object
+	.size	req_read, 8
+req_read:
+	.zero	8
+	.type	req_gc_dst, %object
+	.size	req_gc_dst, 8
+req_gc_dst:
+	.zero	8
+	.type	req_prgm, %object
+	.size	req_prgm, 8
+req_prgm:
+	.zero	8
+	.type	p_sys_data_buf_1, %object
+	.size	p_sys_data_buf_1, 8
+p_sys_data_buf_1:
+	.zero	8
+	.type	p_vendor_data_buf, %object
+	.size	p_vendor_data_buf, 8
+p_vendor_data_buf:
+	.zero	8
+	.type	g_ect_tbl_info_size, %object
+	.size	g_ect_tbl_info_size, 2
+g_ect_tbl_info_size:
+	.zero	2
+	.zero	6
+	.type	p_swl_mul_table, %object
+	.size	p_swl_mul_table, 8
+p_swl_mul_table:
+	.zero	8
+	.type	gp_ect_tbl_info, %object
+	.size	gp_ect_tbl_info, 8
+gp_ect_tbl_info:
+	.zero	8
+	.type	p_valid_page_count_check_table, %object
+	.size	p_valid_page_count_check_table, 8
+p_valid_page_count_check_table:
+	.zero	8
+	.type	p_map_block_table, %object
+	.size	p_map_block_table, 8
+p_map_block_table:
+	.zero	8
+	.type	p_map_block_valid_page_count, %object
+	.size	p_map_block_valid_page_count, 8
+p_map_block_valid_page_count:
+	.zero	8
+	.type	p_vendor_block_valid_page_count, %object
+	.size	p_vendor_block_valid_page_count, 8
+p_vendor_block_valid_page_count:
+	.zero	8
+	.type	p_vendor_block_ver_table, %object
+	.size	p_vendor_block_ver_table, 8
+p_vendor_block_ver_table:
+	.zero	8
+	.type	p_vendor_region_ppn_table, %object
+	.size	p_vendor_region_ppn_table, 8
+p_vendor_region_ppn_table:
+	.zero	8
+	.type	p_map_region_ppn_table, %object
+	.size	p_map_region_ppn_table, 8
+p_map_region_ppn_table:
+	.zero	8
+	.type	p_map_block_ver_table, %object
+	.size	p_map_block_ver_table, 8
+p_map_block_ver_table:
+	.zero	8
+	.type	p_l2p_map_buf, %object
+	.size	p_l2p_map_buf, 8
+p_l2p_map_buf:
+	.zero	8
+	.type	c_ftl_nand_bbm_buf_size, %object
+	.size	c_ftl_nand_bbm_buf_size, 2
+c_ftl_nand_bbm_buf_size:
+	.zero	2
+	.zero	6
+	.type	gL2pMapInfo, %object
+	.size	gL2pMapInfo, 64
+gL2pMapInfo:
+	.zero	64
+	.type	g_totle_map_block, %object
+	.size	g_totle_map_block, 2
+g_totle_map_block:
+	.zero	2
+	.zero	6
+	.type	gVendorBlkInfo, %object
+	.size	gVendorBlkInfo, 64
+gVendorBlkInfo:
+	.zero	64
+	.type	g_req_cache, %object
+	.size	g_req_cache, 8
+g_req_cache:
+	.zero	8
+	.type	g_tmp_data_superblock_id, %object
+	.size	g_tmp_data_superblock_id, 2
+g_tmp_data_superblock_id:
+	.zero	2
+	.zero	2
+	.type	g_totle_swl_count, %object
+	.size	g_totle_swl_count, 4
+g_totle_swl_count:
+	.zero	4
+	.type	ftl_gc_temp_power_lost_recovery_flag, %object
+	.size	ftl_gc_temp_power_lost_recovery_flag, 4
+ftl_gc_temp_power_lost_recovery_flag:
+	.zero	4
+	.type	g_recovery_page_min_ver, %object
+	.size	g_recovery_page_min_ver, 4
+g_recovery_page_min_ver:
+	.zero	4
+	.type	g_power_lost_recovery_flag, %object
+	.size	g_power_lost_recovery_flag, 2
+g_power_lost_recovery_flag:
+	.zero	2
+	.zero	2
+	.type	g_recovery_page_num, %object
+	.size	g_recovery_page_num, 4
+g_recovery_page_num:
+	.zero	4
+	.type	g_recovery_ppa_tbl, %object
+	.size	g_recovery_ppa_tbl, 128
+g_recovery_ppa_tbl:
+	.zero	128
+	.type	g_ect_tbl_power_up_flush, %object
+	.size	g_ect_tbl_power_up_flush, 2
+g_ect_tbl_power_up_flush:
+	.zero	2
+	.zero	6
+	.type	gp_last_act_superblock, %object
+	.size	gp_last_act_superblock, 8
+gp_last_act_superblock:
+	.zero	8
+	.type	gc_discard_updated, %object
+	.size	gc_discard_updated, 4
+gc_discard_updated:
+	.zero	4
+	.type	gc_ink_free_return_value, %object
+	.size	gc_ink_free_return_value, 2
+gc_ink_free_return_value:
+	.zero	2
+	.type	g_gc_cur_blk_valid_pages, %object
+	.size	g_gc_cur_blk_valid_pages, 2
+g_gc_cur_blk_valid_pages:
+	.zero	2
+	.type	g_gc_cur_blk_max_valid_pages, %object
+	.size	g_gc_cur_blk_max_valid_pages, 2
+g_gc_cur_blk_max_valid_pages:
+	.zero	2
+	.zero	2
+	.type	g_ftl_nand_free_count, %object
+	.size	g_ftl_nand_free_count, 4
+g_ftl_nand_free_count:
+	.zero	4
+	.type	g_MaxLbn, %object
+	.size	g_MaxLbn, 4
+g_MaxLbn:
+	.zero	4
+	.zero	4
+	.type	ftl_temp_buf, %object
+	.size	ftl_temp_buf, 4096
+ftl_temp_buf:
+	.zero	4096
+	.type	check_buf, %object
+	.size	check_buf, 4096
+check_buf:
+	.zero	4096
+	.type	check_vpc_table, %object
+	.size	check_vpc_table, 16384
+check_vpc_table:
+	.zero	16384
+	.section	.rodata.str1.1,"aMS",@progbits,1
+.LC0:
+	.string	"phyBlk = 0x%x die = %d block_in_die = 0x%x 0x%8x\n"
+.LC1:
+	.string	"\n!!!!! error @ func:%s - line:%d\n"
+.LC2:
+	.string	"FLASH INFO:\n"
+.LC3:
+	.string	"Device Capacity: %d MB\n"
+.LC4:
+	.string	"FTL INFO:\n"
+.LC5:
+	.string	"g_MaxLpn = 0x%x\n"
+.LC6:
+	.string	"g_VaildLpn = 0x%x\n"
+.LC7:
+	.string	"read_page_count = 0x%x\n"
+.LC8:
+	.string	"discard_page_count = 0x%x\n"
+.LC9:
+	.string	"write_page_count = 0x%x\n"
+.LC10:
+	.string	"cache_write_count = 0x%x\n"
+.LC11:
+	.string	"l2p_write_count = 0x%x\n"
+.LC12:
+	.string	"gc_page_count = 0x%x\n"
+.LC13:
+	.string	"totle_write = %d MB\n"
+.LC14:
+	.string	"totle_read = %d MB\n"
+.LC15:
+	.string	"GSV = 0x%x\n"
+.LC16:
+	.string	"GDV = 0x%x\n"
+.LC17:
+	.string	"bad blk num = %d\n"
+.LC18:
+	.string	"free_superblocks = 0x%x\n"
+.LC19:
+	.string	"mlc_EC = 0x%x\n"
+.LC20:
+	.string	"slc_EC = 0x%x\n"
+.LC21:
+	.string	"avg_EC = 0x%x\n"
+.LC22:
+	.string	"sys_EC = 0x%x\n"
+.LC23:
+	.string	"max_EC = 0x%x\n"
+.LC24:
+	.string	"min_EC = 0x%x\n"
+.LC25:
+	.string	"PLT = 0x%x\n"
+.LC26:
+	.string	"POT = 0x%x\n"
+.LC27:
+	.string	"MaxSector = 0x%x\n"
+.LC28:
+	.string	"init_sys_blks_pp = 0x%x\n"
+.LC29:
+	.string	"sys_blks_pp = 0x%x\n"
+.LC30:
+	.string	"free sysblock = 0x%x\n"
+.LC31:
+	.string	"data_blks_pp = 0x%x\n"
+.LC32:
+	.string	"data_op_blks_pp = 0x%x\n"
+.LC33:
+	.string	"max_data_blks = 0x%x\n"
+.LC34:
+	.string	"Sys.id = 0x%x\n"
+.LC35:
+	.string	"Bbt.id = 0x%x\n"
+.LC36:
+	.string	"ACT.page = 0x%x\n"
+.LC37:
+	.string	"ACT.plane = 0x%x\n"
+.LC38:
+	.string	"ACT.id = 0x%x\n"
+.LC39:
+	.string	"ACT.mode = 0x%x\n"
+.LC40:
+	.string	"ACT.a_pages = 0x%x\n"
+.LC41:
+	.string	"ACT VPC = 0x%x\n"
+.LC42:
+	.string	"BUF.page = 0x%x\n"
+.LC43:
+	.string	"BUF.plane = 0x%x\n"
+.LC44:
+	.string	"BUF.id = 0x%x\n"
+.LC45:
+	.string	"BUF.mode = 0x%x\n"
+.LC46:
+	.string	"BUF.a_pages = 0x%x\n"
+.LC47:
+	.string	"BUF VPC = 0x%x\n"
+.LC48:
+	.string	"TMP.page = 0x%x\n"
+.LC49:
+	.string	"TMP.plane = 0x%x\n"
+.LC50:
+	.string	"TMP.id = 0x%x\n"
+.LC51:
+	.string	"TMP.mode = 0x%x\n"
+.LC52:
+	.string	"TMP.a_pages = 0x%x\n"
+.LC53:
+	.string	"GC.page = 0x%x\n"
+.LC54:
+	.string	"GC.plane = 0x%x\n"
+.LC55:
+	.string	"GC.id = 0x%x\n"
+.LC56:
+	.string	"GC.mode = 0x%x\n"
+.LC57:
+	.string	"GC.a_pages = 0x%x\n"
+.LC58:
+	.string	"WR_CHK = %x %x %x\n"
+.LC59:
+	.string	"Read Err Cnt = 0x%x\n"
+.LC60:
+	.string	"Prog Err Cnt = 0x%x\n"
+.LC61:
+	.string	"gc_free_blk_th= 0x%x\n"
+.LC62:
+	.string	"gc_merge_free_blk_th= 0x%x\n"
+.LC63:
+	.string	"gc_skip_write_count= 0x%x\n"
+.LC64:
+	.string	"gc_blk_index= 0x%x\n"
+.LC65:
+	.string	"free min EC= 0x%x\n"
+.LC66:
+	.string	"free max EC= 0x%x\n"
+.LC67:
+	.string	"GC__SB VPC = 0x%x\n"
+.LC68:
+	.string	"%d. [0x%x]=0x%x 0x%x  0x%x\n"
+.LC69:
+	.string	"free %d. [0x%x] 0x%x  0x%x\n"
+.LC70:
+	.string	"SFTL version: 5.0.43 20180116"
+.LC71:
+	.string	"%s\n"
+.LC72:
+	.string	"swblk %x ,avg = %x max= %x vpc= %x,ec=%x ,max ec=%x\n"
+.LC73:
+	.string	"FtlGcRefreshBlock  0x%x\n"
+.LC74:
+	.string	"FtlGcMarkBadPhyBlk %d 0x%x\n"
+.LC75:
+	.string	"prog read error: = %x\n"
+.LC76:
+	.string	"prog read s error: = %x %x %x\n"
+.LC77:
+	.string	"prog read d error: = %x %x %x\n"
+.LC78:
+	.string	"%s error allocating memory. return -1\n"
+.LC79:
+	.string	"region_id = %x phyAddr = %x\n"
+.LC80:
+	.string	"spare:"
+.LC81:
+	.string	"map_ppn:"
+.LC82:
+	.string	"FtlMapWritePage error = %x \n"
+.LC83:
+	.string	"FtlMapWritePage error = %x error count = %d\n"
+.LC84:
+	.string	"ftl_scan_all_data = %x\n"
+.LC85:
+	.string	"scan lpa = %x ppa= %x\n"
+.LC86:
+	.string	"lba = %x,addr= %x,spare= %x %x %x %x data=%x %x\n"
+.LC87:
+	.string	"...%s enter...\n"
+.LC88:
+	.string	"FtlCheckVpc2 %x = %x  %x\n"
+.LC89:
+	.string	"free blk vpc error %x = %x  %x\n"
+.LC90:
+	.string	"FtlBbmTblFlush id=%x,page=%x,previd=%x cnt=%d\n"
+.LC91:
+	.string	"FtlBbmTblFlush error:%x\n"
+.LC92:
+	.string	"FtlBbmTblFlush error = %x error count = %d\n"
+.LC93:
+	.string	"FtlGcFreeBadSuperBlk 0x%x\n"
+.LC94:
+	.string	"decrement_vpc_count %x = %d\n"
+.LC95:
+	.string	"spuer block %x vpn is 0\n "
+.LC96:
+	.string	"no ect"
+.LC97:
+	.string	"FtlVpcTblFlush error = %x error count = %d\n"
+.LC98:
+	.string	"FtlCheckVpc %x = %x  %x\n"
+.LC99:
+	.string	"Ftlwrite decrement_vpc_count %x = %d\n"
+.LC100:
+	.string	"SWL %x, FSB = %x vpc= %x,ec=%x th=%x\n"
+.LC101:
+	.string	"FtlWrite: lpa error:%x %x\n"
+	.text
+.Letext0:
+	.file 6 "include/asm-generic/int-ll64.h"
+	.file 7 "include/linux/types.h"
+	.file 8 "include/linux/init.h"
+	.file 9 "./arch/arm64/include/asm/cachetype.h"
+	.file 10 "include/linux/printk.h"
+	.file 11 "include/linux/kernel.h"
+	.file 12 "drivers/rkflash/rksftl/sftl_inc.h"
+	.file 13 "drivers/rkflash/rksftl/flash_com.h"
+	.file 14 "drivers/rkflash/rksftl/sftl_struct.h"
+	.file 15 "drivers/rkflash/rksftl/sftl_global.h"
+	.file 16 "./arch/arm64/include/asm/string.h"
+	.file 17 "drivers/rkflash/rksftl/typedef.h"
+	.file 18 "<built-in>"
+	.section	.debug_info,"",@progbits
+.Ldebug_info0:
+	.4byte	0x74f1
+	.2byte	0x4
+	.4byte	.Ldebug_abbrev0
+	.byte	0x8
+	.uleb128 0x1
+	.4byte	.LASF660
+	.byte	0x1
+	.4byte	.LASF661
+	.4byte	.LASF662
+	.8byte	.Ltext0
+	.8byte	.Letext0-.Ltext0
+	.4byte	.Ldebug_line0
+	.uleb128 0x2
+	.byte	0x8
+	.uleb128 0x3
+	.byte	0x4
+	.byte	0x5
+	.string	"int"
+	.uleb128 0x4
+	.byte	0x8
+	.byte	0x7
+	.4byte	.LASF0
+	.uleb128 0x4
+	.byte	0x8
+	.byte	0x7
+	.4byte	.LASF1
+	.uleb128 0x4
+	.byte	0x1
+	.byte	0x8
+	.4byte	.LASF2
+	.uleb128 0x5
+	.4byte	0x44
+	.uleb128 0x4
+	.byte	0x4
+	.byte	0x7
+	.4byte	.LASF3
+	.uleb128 0x4
+	.byte	0x1
+	.byte	0x6
+	.4byte	.LASF4
+	.uleb128 0x4
+	.byte	0x1
+	.byte	0x8
+	.4byte	.LASF5
+	.uleb128 0x4
+	.byte	0x2
+	.byte	0x5
+	.4byte	.LASF6
+	.uleb128 0x4
+	.byte	0x2
+	.byte	0x7
+	.4byte	.LASF7
+	.uleb128 0x4
+	.byte	0x8
+	.byte	0x5
+	.4byte	.LASF8
+	.uleb128 0x4
+	.byte	0x8
+	.byte	0x7
+	.4byte	.LASF9
+	.uleb128 0x6
+	.string	"u8"
+	.byte	0x6
+	.byte	0x10
+	.4byte	0x5e
+	.uleb128 0x6
+	.string	"u16"
+	.byte	0x6
+	.byte	0x13
+	.4byte	0x6c
+	.uleb128 0x6
+	.string	"s32"
+	.byte	0x6
+	.byte	0x15
+	.4byte	0x2f
+	.uleb128 0x6
+	.string	"u32"
+	.byte	0x6
+	.byte	0x16
+	.4byte	0x50
+	.uleb128 0x4
+	.byte	0x8
+	.byte	0x5
+	.4byte	.LASF10
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x44
+	.uleb128 0x8
+	.4byte	.LASF11
+	.byte	0x7
+	.byte	0x1d
+	.4byte	0xc4
+	.uleb128 0x4
+	.byte	0x1
+	.byte	0x2
+	.4byte	.LASF12
+	.uleb128 0x8
+	.4byte	.LASF13
+	.byte	0x8
+	.byte	0x83
+	.4byte	0xd6
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0xdc
+	.uleb128 0x9
+	.4byte	0x2f
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0xe7
+	.uleb128 0xa
+	.uleb128 0xb
+	.4byte	0xcb
+	.4byte	0xf3
+	.uleb128 0xc
+	.byte	0
+	.uleb128 0xd
+	.4byte	.LASF14
+	.byte	0x8
+	.byte	0x86
+	.4byte	0xe8
+	.uleb128 0xd
+	.4byte	.LASF15
+	.byte	0x8
+	.byte	0x86
+	.4byte	0xe8
+	.uleb128 0xd
+	.4byte	.LASF16
+	.byte	0x8
+	.byte	0x87
+	.4byte	0xe8
+	.uleb128 0xd
+	.4byte	.LASF17
+	.byte	0x8
+	.byte	0x87
+	.4byte	0xe8
+	.uleb128 0xb
+	.4byte	0x44
+	.4byte	0x12a
+	.uleb128 0xc
+	.byte	0
+	.uleb128 0xd
+	.4byte	.LASF18
+	.byte	0x8
+	.byte	0x8e
+	.4byte	0x11f
+	.uleb128 0xd
+	.4byte	.LASF19
+	.byte	0x8
+	.byte	0x8f
+	.4byte	0xb3
+	.uleb128 0xd
+	.4byte	.LASF20
+	.byte	0x8
+	.byte	0x90
+	.4byte	0x50
+	.uleb128 0xd
+	.4byte	.LASF21
+	.byte	0x8
+	.byte	0x9c
+	.4byte	0xe1
+	.uleb128 0xd
+	.4byte	.LASF22
+	.byte	0x8
+	.byte	0x9e
+	.4byte	0xb9
+	.uleb128 0xd
+	.4byte	.LASF23
+	.byte	0x9
+	.byte	0x28
+	.4byte	0x36
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x177
+	.uleb128 0xc
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x16c
+	.uleb128 0xd
+	.4byte	.LASF24
+	.byte	0xa
+	.byte	0xa
+	.4byte	0x177
+	.uleb128 0xd
+	.4byte	.LASF25
+	.byte	0xa
+	.byte	0xb
+	.4byte	0x177
+	.uleb128 0xb
+	.4byte	0x2f
+	.4byte	0x19d
+	.uleb128 0xc
+	.byte	0
+	.uleb128 0xd
+	.4byte	.LASF26
+	.byte	0xa
+	.byte	0x2e
+	.4byte	0x192
+	.uleb128 0xd
+	.4byte	.LASF27
+	.byte	0xa
+	.byte	0x9f
+	.4byte	0x2f
+	.uleb128 0xd
+	.4byte	.LASF28
+	.byte	0xa
+	.byte	0xa0
+	.4byte	0x2f
+	.uleb128 0xd
+	.4byte	.LASF29
+	.byte	0xa
+	.byte	0xa1
+	.4byte	0x2f
+	.uleb128 0xe
+	.4byte	.LASF31
+	.uleb128 0x5
+	.4byte	0x1c9
+	.uleb128 0xf
+	.4byte	.LASF30
+	.byte	0xa
+	.2byte	0x1a4
+	.4byte	0x1ce
+	.uleb128 0xe
+	.4byte	.LASF32
+	.uleb128 0xf
+	.4byte	.LASF33
+	.byte	0xb
+	.2byte	0x104
+	.4byte	0x1df
+	.uleb128 0x10
+	.4byte	0xac
+	.4byte	0x1ff
+	.uleb128 0x11
+	.4byte	0x2f
+	.byte	0
+	.uleb128 0xf
+	.4byte	.LASF34
+	.byte	0xb
+	.2byte	0x105
+	.4byte	0x20b
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x1f0
+	.uleb128 0xf
+	.4byte	.LASF35
+	.byte	0xb
+	.2byte	0x1bf
+	.4byte	0x2f
+	.uleb128 0xf
+	.4byte	.LASF36
+	.byte	0xb
+	.2byte	0x1c0
+	.4byte	0x2f
+	.uleb128 0xf
+	.4byte	.LASF37
+	.byte	0xb
+	.2byte	0x1c1
+	.4byte	0x2f
+	.uleb128 0xf
+	.4byte	.LASF38
+	.byte	0xb
+	.2byte	0x1c2
+	.4byte	0x2f
+	.uleb128 0xf
+	.4byte	.LASF39
+	.byte	0xb
+	.2byte	0x1c3
+	.4byte	0x2f
+	.uleb128 0xf
+	.4byte	.LASF40
+	.byte	0xb
+	.2byte	0x1c4
+	.4byte	0x2f
+	.uleb128 0xf
+	.4byte	.LASF41
+	.byte	0xb
+	.2byte	0x1c5
+	.4byte	0x2f
+	.uleb128 0xf
+	.4byte	.LASF42
+	.byte	0xb
+	.2byte	0x1c7
+	.4byte	0xb9
+	.uleb128 0xf
+	.4byte	.LASF43
+	.byte	0xb
+	.2byte	0x1da
+	.4byte	0x2f
+	.uleb128 0xf
+	.4byte	.LASF44
+	.byte	0xb
+	.2byte	0x1dc
+	.4byte	0xb9
+	.uleb128 0x12
+	.4byte	.LASF663
+	.byte	0x4
+	.4byte	0x50
+	.byte	0xb
+	.2byte	0x1df
+	.4byte	0x2b9
+	.uleb128 0x13
+	.4byte	.LASF45
+	.byte	0
+	.uleb128 0x13
+	.4byte	.LASF46
+	.byte	0x1
+	.uleb128 0x13
+	.4byte	.LASF47
+	.byte	0x2
+	.uleb128 0x13
+	.4byte	.LASF48
+	.byte	0x3
+	.uleb128 0x13
+	.4byte	.LASF49
+	.byte	0x4
+	.byte	0
+	.uleb128 0xf
+	.4byte	.LASF50
+	.byte	0xb
+	.2byte	0x1e5
+	.4byte	0x289
+	.uleb128 0xf
+	.4byte	.LASF51
+	.byte	0xb
+	.2byte	0x1f8
+	.4byte	0x177
+	.uleb128 0xf
+	.4byte	.LASF52
+	.byte	0xb
+	.2byte	0x203
+	.4byte	0x177
+	.uleb128 0x8
+	.4byte	.LASF53
+	.byte	0xc
+	.byte	0x9
+	.4byte	0x5e
+	.uleb128 0x8
+	.4byte	.LASF54
+	.byte	0xc
+	.byte	0xa
+	.4byte	0x6c
+	.uleb128 0x8
+	.4byte	.LASF55
+	.byte	0xc
+	.byte	0xb
+	.4byte	0x50
+	.uleb128 0x8
+	.4byte	.LASF56
+	.byte	0xc
+	.byte	0xc
+	.4byte	0x2f
+	.uleb128 0x8
+	.4byte	.LASF57
+	.byte	0xc
+	.byte	0xd
+	.4byte	0x65
+	.uleb128 0x14
+	.4byte	.LASF62
+	.byte	0x20
+	.byte	0xd
+	.byte	0x22
+	.4byte	0x35d
+	.uleb128 0x15
+	.4byte	.LASF58
+	.byte	0xd
+	.byte	0x23
+	.4byte	0xa1
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF59
+	.byte	0xd
+	.byte	0x24
+	.4byte	0xa1
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF60
+	.byte	0xd
+	.byte	0x25
+	.4byte	0x35d
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF61
+	.byte	0xd
+	.byte	0x26
+	.4byte	0x35d
+	.byte	0x10
+	.uleb128 0x16
+	.string	"lpa"
+	.byte	0xd
+	.byte	0x27
+	.4byte	0xa1
+	.byte	0x18
+	.byte	0
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0xa1
+	.uleb128 0x14
+	.4byte	.LASF63
+	.byte	0x18
+	.byte	0xd
+	.byte	0x2a
+	.4byte	0x400
+	.uleb128 0x15
+	.4byte	.LASF64
+	.byte	0xd
+	.byte	0x2b
+	.4byte	0x8b
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF65
+	.byte	0xd
+	.byte	0x2c
+	.4byte	0x8b
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF66
+	.byte	0xd
+	.byte	0x2d
+	.4byte	0x8b
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF67
+	.byte	0xd
+	.byte	0x2e
+	.4byte	0x8b
+	.byte	0x6
+	.uleb128 0x15
+	.4byte	.LASF68
+	.byte	0xd
+	.byte	0x2f
+	.4byte	0x8b
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF69
+	.byte	0xd
+	.byte	0x30
+	.4byte	0x8b
+	.byte	0xa
+	.uleb128 0x15
+	.4byte	.LASF70
+	.byte	0xd
+	.byte	0x31
+	.4byte	0x8b
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF71
+	.byte	0xd
+	.byte	0x32
+	.4byte	0x8b
+	.byte	0xe
+	.uleb128 0x15
+	.4byte	.LASF72
+	.byte	0xd
+	.byte	0x33
+	.4byte	0x8b
+	.byte	0x10
+	.uleb128 0x15
+	.4byte	.LASF73
+	.byte	0xd
+	.byte	0x34
+	.4byte	0x8b
+	.byte	0x12
+	.uleb128 0x15
+	.4byte	.LASF74
+	.byte	0xd
+	.byte	0x35
+	.4byte	0x8b
+	.byte	0x14
+	.uleb128 0x15
+	.4byte	.LASF75
+	.byte	0xd
+	.byte	0x36
+	.4byte	0x81
+	.byte	0x16
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x363
+	.uleb128 0x14
+	.4byte	.LASF76
+	.byte	0x20
+	.byte	0xd
+	.byte	0x39
+	.4byte	0x442
+	.uleb128 0x15
+	.4byte	.LASF77
+	.byte	0xd
+	.byte	0x3a
+	.4byte	0x45c
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF78
+	.byte	0xd
+	.byte	0x3b
+	.4byte	0x476
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF79
+	.byte	0xd
+	.byte	0x3c
+	.4byte	0x49a
+	.byte	0x10
+	.uleb128 0x15
+	.4byte	.LASF80
+	.byte	0xd
+	.byte	0x3d
+	.4byte	0x49a
+	.byte	0x18
+	.byte	0
+	.uleb128 0x10
+	.4byte	0x96
+	.4byte	0x456
+	.uleb128 0x11
+	.4byte	0x456
+	.uleb128 0x11
+	.4byte	0xa1
+	.byte	0
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x8b
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x442
+	.uleb128 0x10
+	.4byte	0xa1
+	.4byte	0x476
+	.uleb128 0x11
+	.4byte	0x81
+	.uleb128 0x11
+	.4byte	0xa1
+	.byte	0
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x462
+	.uleb128 0x10
+	.4byte	0xa1
+	.4byte	0x49a
+	.uleb128 0x11
+	.4byte	0x81
+	.uleb128 0x11
+	.4byte	0xa1
+	.uleb128 0x11
+	.4byte	0x35d
+	.uleb128 0x11
+	.4byte	0x35d
+	.byte	0
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x47c
+	.uleb128 0x14
+	.4byte	.LASF81
+	.byte	0x60
+	.byte	0xe
+	.byte	0x2b
+	.4byte	0x500
+	.uleb128 0x16
+	.string	"id"
+	.byte	0xe
+	.byte	0x2d
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF82
+	.byte	0xe
+	.byte	0x2e
+	.4byte	0x2e8
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF83
+	.byte	0xe
+	.byte	0x2f
+	.4byte	0x2e8
+	.byte	0x4
+	.uleb128 0x16
+	.string	"cnt"
+	.byte	0xe
+	.byte	0x30
+	.4byte	0x2e8
+	.byte	0x6
+	.uleb128 0x15
+	.4byte	.LASF84
+	.byte	0xe
+	.byte	0x31
+	.4byte	0x2f3
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF85
+	.byte	0xe
+	.byte	0x32
+	.4byte	0x500
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF86
+	.byte	0xe
+	.byte	0x33
+	.4byte	0x510
+	.byte	0x20
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x2e8
+	.4byte	0x510
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x7
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x520
+	.4byte	0x520
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x7
+	.byte	0
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x2f3
+	.uleb128 0x14
+	.4byte	.LASF87
+	.byte	0xc
+	.byte	0xe
+	.byte	0x3f
+	.4byte	0x56e
+	.uleb128 0x16
+	.string	"id"
+	.byte	0xe
+	.byte	0x41
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF82
+	.byte	0xe
+	.byte	0x42
+	.4byte	0x2e8
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF83
+	.byte	0xe
+	.byte	0x43
+	.4byte	0x2e8
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF88
+	.byte	0xe
+	.byte	0x44
+	.4byte	0x2e8
+	.byte	0x6
+	.uleb128 0x15
+	.4byte	.LASF84
+	.byte	0xe
+	.byte	0x45
+	.4byte	0x2f3
+	.byte	0x8
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF89
+	.byte	0x40
+	.byte	0xe
+	.byte	0x48
+	.4byte	0x617
+	.uleb128 0x15
+	.4byte	.LASF90
+	.byte	0xe
+	.byte	0x4a
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF82
+	.byte	0xe
+	.byte	0x4b
+	.4byte	0x2e8
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF91
+	.byte	0xe
+	.byte	0x4d
+	.4byte	0x2e8
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF92
+	.byte	0xe
+	.byte	0x4e
+	.4byte	0x2e8
+	.byte	0x6
+	.uleb128 0x15
+	.4byte	.LASF93
+	.byte	0xe
+	.byte	0x50
+	.4byte	0x2e8
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF94
+	.byte	0xe
+	.byte	0x51
+	.4byte	0x2e8
+	.byte	0xa
+	.uleb128 0x15
+	.4byte	.LASF95
+	.byte	0xe
+	.byte	0x53
+	.4byte	0x617
+	.byte	0x10
+	.uleb128 0x15
+	.4byte	.LASF96
+	.byte	0xe
+	.byte	0x54
+	.4byte	0x520
+	.byte	0x18
+	.uleb128 0x15
+	.4byte	.LASF97
+	.byte	0xe
+	.byte	0x55
+	.4byte	0x617
+	.byte	0x20
+	.uleb128 0x15
+	.4byte	.LASF98
+	.byte	0xe
+	.byte	0x56
+	.4byte	0x520
+	.byte	0x28
+	.uleb128 0x15
+	.4byte	.LASF84
+	.byte	0xe
+	.byte	0x58
+	.4byte	0x2f3
+	.byte	0x30
+	.uleb128 0x15
+	.4byte	.LASF99
+	.byte	0xe
+	.byte	0x59
+	.4byte	0x2f3
+	.byte	0x34
+	.uleb128 0x15
+	.4byte	.LASF100
+	.byte	0xe
+	.byte	0x5a
+	.4byte	0x2f3
+	.byte	0x38
+	.byte	0
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x2e8
+	.uleb128 0x14
+	.4byte	.LASF101
+	.byte	0x10
+	.byte	0xe
+	.byte	0x5d
+	.4byte	0x65a
+	.uleb128 0x15
+	.4byte	.LASF102
+	.byte	0xe
+	.byte	0x5f
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF103
+	.byte	0xe
+	.byte	0x60
+	.4byte	0x2e8
+	.byte	0x2
+	.uleb128 0x16
+	.string	"hit"
+	.byte	0xe
+	.byte	0x61
+	.4byte	0x2f3
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF104
+	.byte	0xe
+	.byte	0x62
+	.4byte	0x520
+	.byte	0x8
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF105
+	.byte	0x24
+	.byte	0xe
+	.byte	0x65
+	.4byte	0x6c7
+	.uleb128 0x15
+	.4byte	.LASF91
+	.byte	0xe
+	.byte	0x67
+	.4byte	0x2f3
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF106
+	.byte	0xe
+	.byte	0x68
+	.4byte	0x2f3
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF84
+	.byte	0xe
+	.byte	0x69
+	.4byte	0x2f3
+	.byte	0x8
+	.uleb128 0x16
+	.string	"len"
+	.byte	0xe
+	.byte	0x6a
+	.4byte	0x2f3
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF107
+	.byte	0xe
+	.byte	0x6b
+	.4byte	0x2f3
+	.byte	0x10
+	.uleb128 0x15
+	.4byte	.LASF108
+	.byte	0xe
+	.byte	0x6c
+	.4byte	0x2f3
+	.byte	0x14
+	.uleb128 0x15
+	.4byte	.LASF109
+	.byte	0xe
+	.byte	0x6d
+	.4byte	0x6c7
+	.byte	0x18
+	.uleb128 0x16
+	.string	"tbl"
+	.byte	0xe
+	.byte	0x6e
+	.4byte	0x6d7
+	.byte	0x20
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x2f3
+	.4byte	0x6d7
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x1
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x2e8
+	.4byte	0x6e7
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x1
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF110
+	.byte	0x10
+	.byte	0xe
+	.byte	0x72
+	.4byte	0x747
+	.uleb128 0x15
+	.4byte	.LASF91
+	.byte	0xe
+	.byte	0x74
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x16
+	.string	"id"
+	.byte	0xe
+	.byte	0x75
+	.4byte	0x2e8
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF84
+	.byte	0xe
+	.byte	0x76
+	.4byte	0x2f3
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF83
+	.byte	0xe
+	.byte	0x77
+	.4byte	0x2e8
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF111
+	.byte	0xe
+	.byte	0x78
+	.4byte	0x2e8
+	.byte	0xa
+	.uleb128 0x15
+	.4byte	.LASF112
+	.byte	0xe
+	.byte	0x79
+	.4byte	0x2e8
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF109
+	.byte	0xe
+	.byte	0x7a
+	.4byte	0x747
+	.byte	0xe
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x2dd
+	.4byte	0x757
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x1
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF113
+	.byte	0x10
+	.byte	0xe
+	.byte	0x7d
+	.4byte	0x79f
+	.uleb128 0x15
+	.4byte	.LASF91
+	.byte	0xe
+	.byte	0x7f
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x16
+	.string	"id"
+	.byte	0xe
+	.byte	0x80
+	.4byte	0x2e8
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF84
+	.byte	0xe
+	.byte	0x81
+	.4byte	0x2f3
+	.byte	0x4
+	.uleb128 0x16
+	.string	"lpa"
+	.byte	0xe
+	.byte	0x82
+	.4byte	0x2f3
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF114
+	.byte	0xe
+	.byte	0x83
+	.4byte	0x2f3
+	.byte	0xc
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF115
+	.byte	0x10
+	.byte	0xe
+	.byte	0x8f
+	.4byte	0x7e7
+	.uleb128 0x15
+	.4byte	.LASF91
+	.byte	0xe
+	.byte	0x91
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x16
+	.string	"id"
+	.byte	0xe
+	.byte	0x92
+	.4byte	0x2e8
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF84
+	.byte	0xe
+	.byte	0x93
+	.4byte	0x2f3
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF116
+	.byte	0xe
+	.byte	0x94
+	.4byte	0x2e8
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF109
+	.byte	0xe
+	.byte	0x95
+	.4byte	0x7e7
+	.byte	0xa
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x2dd
+	.4byte	0x7f7
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x5
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF117
+	.byte	0x10
+	.byte	0xe
+	.byte	0x98
+	.4byte	0x83f
+	.uleb128 0x15
+	.4byte	.LASF91
+	.byte	0xe
+	.byte	0x9a
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x16
+	.string	"id"
+	.byte	0xe
+	.byte	0x9b
+	.4byte	0x2e8
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF84
+	.byte	0xe
+	.byte	0x9c
+	.4byte	0x2f3
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF118
+	.byte	0xe
+	.byte	0x9d
+	.4byte	0x2f3
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF119
+	.byte	0xe
+	.byte	0x9e
+	.4byte	0x2f3
+	.byte	0xc
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF120
+	.byte	0x30
+	.byte	0xe
+	.byte	0xa1
+	.4byte	0x93c
+	.uleb128 0x16
+	.string	"tag"
+	.byte	0xe
+	.byte	0xa3
+	.4byte	0x2f3
+	.byte	0
+	.uleb128 0x16
+	.string	"ver"
+	.byte	0xe
+	.byte	0xa4
+	.4byte	0x2f3
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF88
+	.byte	0xe
+	.byte	0xa6
+	.4byte	0x2e8
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF121
+	.byte	0xe
+	.byte	0xa7
+	.4byte	0x2dd
+	.byte	0xa
+	.uleb128 0x15
+	.4byte	.LASF122
+	.byte	0xe
+	.byte	0xa8
+	.4byte	0x2dd
+	.byte	0xb
+	.uleb128 0x15
+	.4byte	.LASF123
+	.byte	0xe
+	.byte	0xa9
+	.4byte	0x2dd
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF124
+	.byte	0xe
+	.byte	0xaa
+	.4byte	0x2dd
+	.byte	0xd
+	.uleb128 0x15
+	.4byte	.LASF125
+	.byte	0xe
+	.byte	0xab
+	.4byte	0x2e8
+	.byte	0xe
+	.uleb128 0x15
+	.4byte	.LASF126
+	.byte	0xe
+	.byte	0xad
+	.4byte	0x2e8
+	.byte	0x10
+	.uleb128 0x15
+	.4byte	.LASF127
+	.byte	0xe
+	.byte	0xae
+	.4byte	0x2e8
+	.byte	0x12
+	.uleb128 0x15
+	.4byte	.LASF128
+	.byte	0xe
+	.byte	0xaf
+	.4byte	0x2e8
+	.byte	0x14
+	.uleb128 0x15
+	.4byte	.LASF129
+	.byte	0xe
+	.byte	0xb0
+	.4byte	0x2e8
+	.byte	0x16
+	.uleb128 0x15
+	.4byte	.LASF130
+	.byte	0xe
+	.byte	0xb2
+	.4byte	0x2e8
+	.byte	0x18
+	.uleb128 0x15
+	.4byte	.LASF131
+	.byte	0xe
+	.byte	0xb3
+	.4byte	0x2e8
+	.byte	0x1a
+	.uleb128 0x15
+	.4byte	.LASF132
+	.byte	0xe
+	.byte	0xb4
+	.4byte	0x2e8
+	.byte	0x1c
+	.uleb128 0x15
+	.4byte	.LASF133
+	.byte	0xe
+	.byte	0xb5
+	.4byte	0x2e8
+	.byte	0x1e
+	.uleb128 0x15
+	.4byte	.LASF134
+	.byte	0xe
+	.byte	0xb7
+	.4byte	0x2f3
+	.byte	0x20
+	.uleb128 0x15
+	.4byte	.LASF135
+	.byte	0xe
+	.byte	0xb8
+	.4byte	0x2f3
+	.byte	0x24
+	.uleb128 0x15
+	.4byte	.LASF136
+	.byte	0xe
+	.byte	0xb9
+	.4byte	0x2f3
+	.byte	0x28
+	.uleb128 0x15
+	.4byte	.LASF109
+	.byte	0xe
+	.byte	0xba
+	.4byte	0x6d7
+	.byte	0x2c
+	.byte	0
+	.uleb128 0x18
+	.4byte	.LASF137
+	.2byte	0x200
+	.byte	0xe
+	.byte	0xbe
+	.4byte	0xa82
+	.uleb128 0x16
+	.string	"tag"
+	.byte	0xe
+	.byte	0xc0
+	.4byte	0x2f3
+	.byte	0
+	.uleb128 0x16
+	.string	"ver"
+	.byte	0xe
+	.byte	0xc1
+	.4byte	0x2f3
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF138
+	.byte	0xe
+	.byte	0xc3
+	.4byte	0x2f3
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF139
+	.byte	0xe
+	.byte	0xc4
+	.4byte	0x2f3
+	.byte	0xc
+	.uleb128 0x15
+	.4byte	.LASF140
+	.byte	0xe
+	.byte	0xc5
+	.4byte	0x2f3
+	.byte	0x10
+	.uleb128 0x15
+	.4byte	.LASF141
+	.byte	0xe
+	.byte	0xc6
+	.4byte	0x2f3
+	.byte	0x14
+	.uleb128 0x15
+	.4byte	.LASF134
+	.byte	0xe
+	.byte	0xc8
+	.4byte	0x2f3
+	.byte	0x18
+	.uleb128 0x15
+	.4byte	.LASF142
+	.byte	0xe
+	.byte	0xc9
+	.4byte	0x2f3
+	.byte	0x1c
+	.uleb128 0x15
+	.4byte	.LASF143
+	.byte	0xe
+	.byte	0xca
+	.4byte	0x2f3
+	.byte	0x20
+	.uleb128 0x15
+	.4byte	.LASF144
+	.byte	0xe
+	.byte	0xcb
+	.4byte	0x2f3
+	.byte	0x24
+	.uleb128 0x15
+	.4byte	.LASF131
+	.byte	0xe
+	.byte	0xcd
+	.4byte	0x2f3
+	.byte	0x28
+	.uleb128 0x15
+	.4byte	.LASF145
+	.byte	0xe
+	.byte	0xce
+	.4byte	0x2f3
+	.byte	0x2c
+	.uleb128 0x15
+	.4byte	.LASF146
+	.byte	0xe
+	.byte	0xcf
+	.4byte	0x2f3
+	.byte	0x30
+	.uleb128 0x15
+	.4byte	.LASF147
+	.byte	0xe
+	.byte	0xd0
+	.4byte	0x2f3
+	.byte	0x34
+	.uleb128 0x15
+	.4byte	.LASF148
+	.byte	0xe
+	.byte	0xd2
+	.4byte	0x2f3
+	.byte	0x38
+	.uleb128 0x15
+	.4byte	.LASF149
+	.byte	0xe
+	.byte	0xd3
+	.4byte	0x2f3
+	.byte	0x3c
+	.uleb128 0x15
+	.4byte	.LASF150
+	.byte	0xe
+	.byte	0xd4
+	.4byte	0x2f3
+	.byte	0x40
+	.uleb128 0x15
+	.4byte	.LASF151
+	.byte	0xe
+	.byte	0xd5
+	.4byte	0x2f3
+	.byte	0x44
+	.uleb128 0x15
+	.4byte	.LASF152
+	.byte	0xe
+	.byte	0xd7
+	.4byte	0x2f3
+	.byte	0x48
+	.uleb128 0x15
+	.4byte	.LASF153
+	.byte	0xe
+	.byte	0xd8
+	.4byte	0x2f3
+	.byte	0x4c
+	.uleb128 0x15
+	.4byte	.LASF154
+	.byte	0xe
+	.byte	0xd9
+	.4byte	0x2f3
+	.byte	0x50
+	.uleb128 0x15
+	.4byte	.LASF155
+	.byte	0xe
+	.byte	0xda
+	.4byte	0x2f3
+	.byte	0x54
+	.uleb128 0x15
+	.4byte	.LASF156
+	.byte	0xe
+	.byte	0xdc
+	.4byte	0x2f3
+	.byte	0x58
+	.uleb128 0x15
+	.4byte	.LASF157
+	.byte	0xe
+	.byte	0xdd
+	.4byte	0x2f3
+	.byte	0x5c
+	.uleb128 0x15
+	.4byte	.LASF158
+	.byte	0xe
+	.byte	0xde
+	.4byte	0x2f3
+	.byte	0x60
+	.uleb128 0x15
+	.4byte	.LASF109
+	.byte	0xe
+	.byte	0xe0
+	.4byte	0xa82
+	.byte	0x64
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x2f3
+	.4byte	0xa92
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x66
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF159
+	.byte	0x6
+	.byte	0xe
+	.byte	0xe4
+	.4byte	0xac3
+	.uleb128 0x15
+	.4byte	.LASF160
+	.byte	0xe
+	.byte	0xe6
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF161
+	.byte	0xe
+	.byte	0xe7
+	.4byte	0x2e8
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF162
+	.byte	0xe
+	.byte	0xe8
+	.4byte	0x2e8
+	.byte	0x4
+	.byte	0
+	.uleb128 0x18
+	.4byte	.LASF163
+	.2byte	0x808
+	.byte	0xe
+	.byte	0xeb
+	.4byte	0xb0d
+	.uleb128 0x16
+	.string	"max"
+	.byte	0xe
+	.byte	0xed
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF164
+	.byte	0xe
+	.byte	0xee
+	.4byte	0x2e8
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF165
+	.byte	0xe
+	.byte	0xef
+	.4byte	0x2e8
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF111
+	.byte	0xe
+	.byte	0xf0
+	.4byte	0x2e8
+	.byte	0x6
+	.uleb128 0x16
+	.string	"arr"
+	.byte	0xe
+	.byte	0xf1
+	.4byte	0xb0d
+	.byte	0x8
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x2e8
+	.4byte	0xb1e
+	.uleb128 0x19
+	.4byte	0x3d
+	.2byte	0x3ff
+	.byte	0
+	.uleb128 0x14
+	.4byte	.LASF166
+	.byte	0x30
+	.byte	0xe
+	.byte	0xf5
+	.4byte	0xbb0
+	.uleb128 0x16
+	.string	"id"
+	.byte	0xe
+	.byte	0xf7
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x15
+	.4byte	.LASF167
+	.byte	0xe
+	.byte	0xf8
+	.4byte	0x2e8
+	.byte	0x2
+	.uleb128 0x15
+	.4byte	.LASF168
+	.byte	0xe
+	.byte	0xf9
+	.4byte	0x2e8
+	.byte	0x4
+	.uleb128 0x15
+	.4byte	.LASF169
+	.byte	0xe
+	.byte	0xfa
+	.4byte	0x2dd
+	.byte	0x6
+	.uleb128 0x15
+	.4byte	.LASF170
+	.byte	0xe
+	.byte	0xfb
+	.4byte	0x2dd
+	.byte	0x7
+	.uleb128 0x15
+	.4byte	.LASF171
+	.byte	0xe
+	.byte	0xfc
+	.4byte	0x2dd
+	.byte	0x8
+	.uleb128 0x15
+	.4byte	.LASF172
+	.byte	0xe
+	.byte	0xfd
+	.4byte	0x2dd
+	.byte	0x9
+	.uleb128 0x15
+	.4byte	.LASF173
+	.byte	0xe
+	.byte	0xfe
+	.4byte	0x2dd
+	.byte	0xa
+	.uleb128 0x15
+	.4byte	.LASF174
+	.byte	0xe
+	.byte	0xff
+	.4byte	0x2dd
+	.byte	0xb
+	.uleb128 0x1a
+	.4byte	.LASF84
+	.byte	0xe
+	.2byte	0x100
+	.4byte	0x2f3
+	.byte	0xc
+	.uleb128 0x1a
+	.4byte	.LASF175
+	.byte	0xe
+	.2byte	0x101
+	.4byte	0xbb0
+	.byte	0x10
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x2e8
+	.4byte	0xbc0
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0xf
+	.byte	0
+	.uleb128 0x1b
+	.4byte	.LASF176
+	.byte	0xc
+	.byte	0xe
+	.2byte	0x105
+	.4byte	0xbf5
+	.uleb128 0x1a
+	.4byte	.LASF177
+	.byte	0xe
+	.2byte	0x107
+	.4byte	0x2f3
+	.byte	0
+	.uleb128 0x1a
+	.4byte	.LASF178
+	.byte	0xe
+	.2byte	0x108
+	.4byte	0x2f3
+	.byte	0x4
+	.uleb128 0x1c
+	.string	"lpa"
+	.byte	0xe
+	.2byte	0x109
+	.4byte	0x2f3
+	.byte	0x8
+	.byte	0
+	.uleb128 0x1b
+	.4byte	.LASF179
+	.byte	0x18
+	.byte	0xe
+	.2byte	0x10c
+	.4byte	0xc2a
+	.uleb128 0x1a
+	.4byte	.LASF60
+	.byte	0xe
+	.2byte	0x10e
+	.4byte	0x520
+	.byte	0
+	.uleb128 0x1a
+	.4byte	.LASF61
+	.byte	0xe
+	.2byte	0x10f
+	.4byte	0x520
+	.byte	0x8
+	.uleb128 0x1a
+	.4byte	.LASF180
+	.byte	0xe
+	.2byte	0x110
+	.4byte	0x2f3
+	.byte	0x10
+	.byte	0
+	.uleb128 0x1d
+	.4byte	.LASF181
+	.byte	0xf
+	.byte	0x12
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_type
+	.uleb128 0x1d
+	.4byte	.LASF182
+	.byte	0xf
+	.byte	0x13
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_die_num
+	.uleb128 0x1d
+	.4byte	.LASF183
+	.byte	0xf
+	.byte	0x14
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_planes_per_die
+	.uleb128 0x1d
+	.4byte	.LASF184
+	.byte	0xf
+	.byte	0x15
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_blks_per_die
+	.uleb128 0x1d
+	.4byte	.LASF185
+	.byte	0xf
+	.byte	0x16
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_blks_per_die_shift
+	.uleb128 0x1d
+	.4byte	.LASF186
+	.byte	0xf
+	.byte	0x17
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_planes_num
+	.uleb128 0x1d
+	.4byte	.LASF187
+	.byte	0xf
+	.byte	0x18
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_blk_pre_plane
+	.uleb128 0x1d
+	.4byte	.LASF188
+	.byte	0xf
+	.byte	0x19
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_ext_blk_pre_plane
+	.uleb128 0x1d
+	.4byte	.LASF189
+	.byte	0xf
+	.byte	0x1a
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_bbm_buf_size
+	.uleb128 0x1d
+	.4byte	.LASF190
+	.byte	0xf
+	.byte	0x1c
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_page_pre_blk
+	.uleb128 0x1d
+	.4byte	.LASF191
+	.byte	0xf
+	.byte	0x1d
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_page_pre_slc_blk
+	.uleb128 0x1d
+	.4byte	.LASF192
+	.byte	0xf
+	.byte	0x1e
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_page_pre_super_blk
+	.uleb128 0x1d
+	.4byte	.LASF193
+	.byte	0xf
+	.byte	0x1f
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_sec_pre_page
+	.uleb128 0x1d
+	.4byte	.LASF194
+	.byte	0xf
+	.byte	0x20
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_sec_pre_page_shift
+	.uleb128 0x1d
+	.4byte	.LASF195
+	.byte	0xf
+	.byte	0x24
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_byte_pre_page
+	.uleb128 0x1d
+	.4byte	.LASF196
+	.byte	0xf
+	.byte	0x25
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_byte_pre_oob
+	.uleb128 0x1d
+	.4byte	.LASF197
+	.byte	0xf
+	.byte	0x26
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_reserved_blks
+	.uleb128 0x1d
+	.4byte	.LASF198
+	.byte	0xf
+	.byte	0x27
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_totle_phy_blks
+	.uleb128 0x1d
+	.4byte	.LASF199
+	.byte	0xf
+	.byte	0x29
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_map_region_num
+	.uleb128 0x1d
+	.4byte	.LASF200
+	.byte	0xf
+	.byte	0x2a
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_l2pmap_ram_region_num
+	.uleb128 0x1d
+	.4byte	.LASF201
+	.byte	0xf
+	.byte	0x2c
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_vendor_region_num
+	.uleb128 0x1d
+	.4byte	.LASF202
+	.byte	0xf
+	.byte	0x2e
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_map_blks_per_plane
+	.uleb128 0x1d
+	.4byte	.LASF203
+	.byte	0xf
+	.byte	0x2f
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_max_map_blks
+	.uleb128 0x1d
+	.4byte	.LASF204
+	.byte	0xf
+	.byte	0x30
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_max_vendor_blks
+	.uleb128 0x1d
+	.4byte	.LASF205
+	.byte	0xf
+	.byte	0x31
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_vendor_part_size
+	.uleb128 0x1d
+	.4byte	.LASF206
+	.byte	0xf
+	.byte	0x32
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_sys_blks_per_plane
+	.uleb128 0x1d
+	.4byte	.LASF207
+	.byte	0xf
+	.byte	0x33
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_init_sys_blks_per_plane
+	.uleb128 0x1d
+	.4byte	.LASF208
+	.byte	0xf
+	.byte	0x34
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_max_sys_blks
+	.uleb128 0x1d
+	.4byte	.LASF209
+	.byte	0xf
+	.byte	0x35
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_data_blks_per_plane
+	.uleb128 0x1d
+	.4byte	.LASF210
+	.byte	0xf
+	.byte	0x36
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_data_op_blks_per_plane
+	.uleb128 0x1d
+	.4byte	.LASF211
+	.byte	0xf
+	.byte	0x37
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_ftl_nand_max_data_blks
+	.uleb128 0x1d
+	.4byte	.LASF212
+	.byte	0xf
+	.byte	0x38
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	ftl_gc_temp_power_lost_recovery_flag
+	.uleb128 0x1d
+	.4byte	.LASF213
+	.byte	0xf
+	.byte	0x3a
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_GlobalSysVersion
+	.uleb128 0x1d
+	.4byte	.LASF214
+	.byte	0xf
+	.byte	0x3b
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_GlobalDataVersion
+	.uleb128 0x1d
+	.4byte	.LASF215
+	.byte	0xf
+	.byte	0x3c
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_MaxLbaSector
+	.uleb128 0x1d
+	.4byte	.LASF216
+	.byte	0xf
+	.byte	0x3d
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_MaxLpn
+	.uleb128 0x1d
+	.4byte	.LASF217
+	.byte	0xf
+	.byte	0x3e
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_VaildLpn
+	.uleb128 0x1d
+	.4byte	.LASF218
+	.byte	0xf
+	.byte	0x3f
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_MaxLbn
+	.uleb128 0x1d
+	.4byte	.LASF219
+	.byte	0xf
+	.byte	0x41
+	.4byte	0x4a0
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	gBbtInfo
+	.uleb128 0x1d
+	.4byte	.LASF220
+	.byte	0xf
+	.byte	0x42
+	.4byte	0x526
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	gSysInfo
+	.uleb128 0x1d
+	.4byte	.LASF221
+	.byte	0xf
+	.byte	0x43
+	.4byte	0xac3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	gSysFreeQueue
+	.uleb128 0x1d
+	.4byte	.LASF222
+	.byte	0xf
+	.byte	0x44
+	.4byte	0x56e
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	gL2pMapInfo
+	.uleb128 0x1d
+	.4byte	.LASF223
+	.byte	0xf
+	.byte	0x45
+	.4byte	0x56e
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	gVendorBlkInfo
+	.uleb128 0x1d
+	.4byte	.LASF224
+	.byte	0xf
+	.byte	0x46
+	.4byte	0x314
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	req_sys
+	.uleb128 0x1d
+	.4byte	.LASF225
+	.byte	0xf
+	.byte	0x47
+	.4byte	0xfdb
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	req_read
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x314
+	.uleb128 0x1d
+	.4byte	.LASF226
+	.byte	0xf
+	.byte	0x48
+	.4byte	0xfdb
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	req_prgm
+	.uleb128 0x1d
+	.4byte	.LASF227
+	.byte	0xf
+	.byte	0x49
+	.4byte	0xfdb
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	req_erase
+	.uleb128 0x1d
+	.4byte	.LASF228
+	.byte	0xf
+	.byte	0x4a
+	.4byte	0xfdb
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	req_gc
+	.uleb128 0x1d
+	.4byte	.LASF229
+	.byte	0xf
+	.byte	0x4b
+	.4byte	0xfdb
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	req_gc_dst
+	.uleb128 0x1d
+	.4byte	.LASF230
+	.byte	0xf
+	.byte	0x4d
+	.4byte	0xfdb
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_req_cache
+	.uleb128 0xb
+	.4byte	0x2dd
+	.4byte	0x105a
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x1f
+	.byte	0
+	.uleb128 0x1d
+	.4byte	.LASF231
+	.byte	0xf
+	.byte	0x4f
+	.4byte	0x104a
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_plane_order_table
+	.uleb128 0x1d
+	.4byte	.LASF232
+	.byte	0xf
+	.byte	0x51
+	.4byte	0x520
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_sys_data_buf
+	.uleb128 0x1d
+	.4byte	.LASF233
+	.byte	0xf
+	.byte	0x52
+	.4byte	0x520
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_sys_data_buf_1
+	.uleb128 0x1d
+	.4byte	.LASF234
+	.byte	0xf
+	.byte	0x53
+	.4byte	0x520
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_vendor_data_buf
+	.uleb128 0x1d
+	.4byte	.LASF235
+	.byte	0xf
+	.byte	0x54
+	.4byte	0x520
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_sys_spare_buf
+	.uleb128 0x1d
+	.4byte	.LASF236
+	.byte	0xf
+	.byte	0x55
+	.4byte	0x520
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_io_data_buf_0
+	.uleb128 0x1d
+	.4byte	.LASF237
+	.byte	0xf
+	.byte	0x56
+	.4byte	0x520
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_io_data_buf_1
+	.uleb128 0x1d
+	.4byte	.LASF238
+	.byte	0xf
+	.byte	0x57
+	.4byte	0x520
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_io_spare_buf
+	.uleb128 0x1d
+	.4byte	.LASF239
+	.byte	0xf
+	.byte	0x58
+	.4byte	0x520
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_gc_spare_buf
+	.uleb128 0x1d
+	.4byte	.LASF240
+	.byte	0xf
+	.byte	0x59
+	.4byte	0x520
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_gc_data_buf
+	.uleb128 0x1d
+	.4byte	.LASF241
+	.byte	0xf
+	.byte	0x5a
+	.4byte	0x1141
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	gp_gc_page_buf_info
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0xbf5
+	.uleb128 0x1d
+	.4byte	.LASF242
+	.byte	0xf
+	.byte	0x5b
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_gc_page_buf_num
+	.uleb128 0x1d
+	.4byte	.LASF243
+	.byte	0xf
+	.byte	0x5c
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_num_req
+	.uleb128 0x1d
+	.4byte	.LASF244
+	.byte	0xf
+	.byte	0x5d
+	.4byte	0x1186
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	gp_ect_tbl_info
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x65a
+	.uleb128 0x1d
+	.4byte	.LASF245
+	.byte	0xf
+	.byte	0x5e
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_ect_tbl_info_size
+	.uleb128 0x1d
+	.4byte	.LASF246
+	.byte	0xf
+	.byte	0x5f
+	.4byte	0x617
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_erase_count_table
+	.uleb128 0x1d
+	.4byte	.LASF247
+	.byte	0xf
+	.byte	0x61
+	.4byte	0x617
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_swl_mul_table
+	.uleb128 0x1d
+	.4byte	.LASF248
+	.byte	0xf
+	.byte	0x62
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_totle_swl_count
+	.uleb128 0x1d
+	.4byte	.LASF249
+	.byte	0xf
+	.byte	0x63
+	.4byte	0x617
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_valid_page_count_table
+	.uleb128 0x1d
+	.4byte	.LASF250
+	.byte	0xf
+	.byte	0x64
+	.4byte	0x617
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_valid_page_count_check_table
+	.uleb128 0x1d
+	.4byte	.LASF251
+	.byte	0xf
+	.byte	0x65
+	.4byte	0x520
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_blk_mode_table
+	.uleb128 0x1d
+	.4byte	.LASF252
+	.byte	0xf
+	.byte	0x67
+	.4byte	0x617
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_map_block_table
+	.uleb128 0x1d
+	.4byte	.LASF253
+	.byte	0xf
+	.byte	0x68
+	.4byte	0x617
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_map_block_valid_page_count
+	.uleb128 0x1d
+	.4byte	.LASF254
+	.byte	0xf
+	.byte	0x69
+	.4byte	0x520
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_map_block_ver_table
+	.uleb128 0x1d
+	.4byte	.LASF255
+	.byte	0xf
+	.byte	0x6a
+	.4byte	0x520
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_map_region_ppn_table
+	.uleb128 0x1d
+	.4byte	.LASF256
+	.byte	0xf
+	.byte	0x6b
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_totle_map_block
+	.uleb128 0x1d
+	.4byte	.LASF257
+	.byte	0xf
+	.byte	0x6d
+	.4byte	0x617
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_vendor_block_table
+	.uleb128 0x1d
+	.4byte	.LASF258
+	.byte	0xf
+	.byte	0x6e
+	.4byte	0x617
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_vendor_block_valid_page_count
+	.uleb128 0x1d
+	.4byte	.LASF259
+	.byte	0xf
+	.byte	0x6f
+	.4byte	0x520
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_vendor_block_ver_table
+	.uleb128 0x1d
+	.4byte	.LASF260
+	.byte	0xf
+	.byte	0x70
+	.4byte	0x520
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_vendor_region_ppn_table
+	.uleb128 0x1d
+	.4byte	.LASF261
+	.byte	0xf
+	.byte	0x71
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_totle_vendor_block
+	.uleb128 0x1d
+	.4byte	.LASF262
+	.byte	0xf
+	.byte	0x73
+	.4byte	0x1306
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_l2p_ram_map
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x61d
+	.uleb128 0x1d
+	.4byte	.LASF263
+	.byte	0xf
+	.byte	0x74
+	.4byte	0x520
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_l2p_map_buf
+	.uleb128 0x1d
+	.4byte	.LASF264
+	.byte	0xf
+	.byte	0x75
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_l2p_last_update_region_id
+	.uleb128 0x1d
+	.4byte	.LASF265
+	.byte	0xf
+	.byte	0x7c
+	.4byte	0x134b
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_data_block_list_table
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0xa92
+	.uleb128 0x1d
+	.4byte	.LASF266
+	.byte	0xf
+	.byte	0x7d
+	.4byte	0x134b
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_free_data_block_list_head
+	.uleb128 0x1d
+	.4byte	.LASF267
+	.byte	0xf
+	.byte	0x7f
+	.4byte	0x134b
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_data_block_list_head
+	.uleb128 0x1d
+	.4byte	.LASF268
+	.byte	0xf
+	.byte	0x80
+	.4byte	0x134b
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_data_block_list_tail
+	.uleb128 0x1d
+	.4byte	.LASF269
+	.byte	0xf
+	.byte	0x81
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_num_free_superblocks
+	.uleb128 0x1d
+	.4byte	.LASF270
+	.byte	0xf
+	.byte	0x82
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_num_data_superblocks
+	.uleb128 0x1d
+	.4byte	.LASF271
+	.byte	0xf
+	.byte	0x83
+	.4byte	0xb1e
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_active_superblock
+	.uleb128 0x1d
+	.4byte	.LASF272
+	.byte	0xf
+	.byte	0x84
+	.4byte	0xb1e
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_buffer_superblock
+	.uleb128 0x1d
+	.4byte	.LASF273
+	.byte	0xf
+	.byte	0x85
+	.4byte	0xb1e
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_temp_superblock
+	.uleb128 0x1d
+	.4byte	.LASF274
+	.byte	0xf
+	.byte	0x86
+	.4byte	0xb1e
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_superblock
+	.uleb128 0x1d
+	.4byte	.LASF275
+	.byte	0xf
+	.byte	0x87
+	.4byte	0x1423
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	gp_last_act_superblock
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0xb1e
+	.uleb128 0x1d
+	.4byte	.LASF276
+	.byte	0xf
+	.byte	0x88
+	.4byte	0x83f
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_sys_save_data
+	.uleb128 0x1d
+	.4byte	.LASF277
+	.byte	0xf
+	.byte	0x89
+	.4byte	0x93c
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_sys_ext_data
+	.uleb128 0x1d
+	.4byte	.LASF278
+	.byte	0xf
+	.byte	0x8b
+	.4byte	0x1468
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_gc_page_info
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0xbc0
+	.uleb128 0x1d
+	.4byte	.LASF279
+	.byte	0xf
+	.byte	0x8c
+	.4byte	0x617
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	p_gc_blk_tbl
+	.uleb128 0x1d
+	.4byte	.LASF280
+	.byte	0xf
+	.byte	0x8d
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_blk_num
+	.uleb128 0x1d
+	.4byte	.LASF281
+	.byte	0xf
+	.byte	0x8e
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_page_offset
+	.uleb128 0x1d
+	.4byte	.LASF282
+	.byte	0xf
+	.byte	0x8f
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_cur_blk_valid_pages
+	.uleb128 0x1d
+	.4byte	.LASF283
+	.byte	0xf
+	.byte	0x90
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_cur_blk_max_valid_pages
+	.uleb128 0x1d
+	.4byte	.LASF284
+	.byte	0xf
+	.byte	0x91
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_next_blk
+	.uleb128 0x1d
+	.4byte	.LASF285
+	.byte	0xf
+	.byte	0x92
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_next_blk_1
+	.uleb128 0x1d
+	.4byte	.LASF286
+	.byte	0xf
+	.byte	0x93
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_bad_block_temp_num
+	.uleb128 0x1d
+	.4byte	.LASF287
+	.byte	0xf
+	.byte	0x94
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_bad_block_gc_index
+	.uleb128 0xb
+	.4byte	0x2e8
+	.4byte	0x153b
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x10
+	.byte	0
+	.uleb128 0x1d
+	.4byte	.LASF288
+	.byte	0xf
+	.byte	0x95
+	.4byte	0x152b
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_bad_block_temp_tbl
+	.uleb128 0x1d
+	.4byte	.LASF289
+	.byte	0xf
+	.byte	0x97
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_free_blk_threshold
+	.uleb128 0x1d
+	.4byte	.LASF290
+	.byte	0xf
+	.byte	0x98
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_merge_free_blk_threshold
+	.uleb128 0x1d
+	.4byte	.LASF291
+	.byte	0xf
+	.byte	0x99
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_blk_index
+	.uleb128 0x1d
+	.4byte	.LASF292
+	.byte	0xf
+	.byte	0x9b
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_totle_gc_page_count
+	.uleb128 0x1d
+	.4byte	.LASF293
+	.byte	0xf
+	.byte	0x9c
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_totle_write_page_count
+	.uleb128 0x1d
+	.4byte	.LASF294
+	.byte	0xf
+	.byte	0x9d
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_totle_write_sector
+	.uleb128 0x1d
+	.4byte	.LASF295
+	.byte	0xf
+	.byte	0x9e
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_totle_read_sector
+	.uleb128 0x1d
+	.4byte	.LASF296
+	.byte	0xf
+	.byte	0xa0
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_totle_discard_page_count
+	.uleb128 0x1d
+	.4byte	.LASF297
+	.byte	0xf
+	.byte	0xa1
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_totle_read_page_count
+	.uleb128 0x1d
+	.4byte	.LASF298
+	.byte	0xf
+	.byte	0xa2
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_tmp_data_superblock_id
+	.uleb128 0x1d
+	.4byte	.LASF299
+	.byte	0xf
+	.byte	0xa3
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_totle_cache_write_count
+	.uleb128 0x1d
+	.4byte	.LASF300
+	.byte	0xf
+	.byte	0xa4
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_totle_l2p_write_count
+	.uleb128 0x1d
+	.4byte	.LASF301
+	.byte	0xf
+	.byte	0xa6
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_totle_mlc_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF302
+	.byte	0xf
+	.byte	0xa7
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_totle_avg_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF303
+	.byte	0xf
+	.byte	0xa8
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_min_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF304
+	.byte	0xf
+	.byte	0xa9
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_totle_slc_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF305
+	.byte	0xf
+	.byte	0xaa
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_totle_sys_slc_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF306
+	.byte	0xf
+	.byte	0xab
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_max_erase_count
+	.uleb128 0x1d
+	.4byte	.LASF307
+	.byte	0xf
+	.byte	0xac
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_in_gc_progress
+	.uleb128 0x1d
+	.4byte	.LASF308
+	.byte	0xf
+	.byte	0xad
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_in_swl_replace
+	.uleb128 0x1d
+	.4byte	.LASF309
+	.byte	0xf
+	.byte	0xae
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_ftl_nand_free_count
+	.uleb128 0x1d
+	.4byte	.LASF310
+	.byte	0xf
+	.byte	0xaf
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_head_data_block
+	.uleb128 0x1d
+	.4byte	.LASF311
+	.byte	0xf
+	.byte	0xb0
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_head_data_block_count
+	.uleb128 0x1d
+	.4byte	.LASF312
+	.byte	0xf
+	.byte	0xb1
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_gc_skip_write_count
+	.uleb128 0x1d
+	.4byte	.LASF313
+	.byte	0xf
+	.byte	0xb2
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_cur_erase_blk
+	.uleb128 0x1d
+	.4byte	.LASF314
+	.byte	0xf
+	.byte	0xb4
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_recovery_page_num
+	.uleb128 0x1d
+	.4byte	.LASF315
+	.byte	0xf
+	.byte	0xb5
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_recovery_page_min_ver
+	.uleb128 0xb
+	.4byte	0x2f3
+	.4byte	0x1797
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x1f
+	.byte	0
+	.uleb128 0x1d
+	.4byte	.LASF316
+	.byte	0xf
+	.byte	0xb6
+	.4byte	0x1787
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_recovery_ppa_tbl
+	.uleb128 0x1d
+	.4byte	.LASF317
+	.byte	0xf
+	.byte	0xb7
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	c_mlc_erase_count_value
+	.uleb128 0x1d
+	.4byte	.LASF318
+	.byte	0xf
+	.byte	0xb8
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_power_lost_recovery_flag
+	.uleb128 0xd
+	.4byte	.LASF319
+	.byte	0xc
+	.byte	0x14
+	.4byte	0x363
+	.uleb128 0xd
+	.4byte	.LASF320
+	.byte	0xc
+	.byte	0x15
+	.4byte	0x363
+	.uleb128 0xd
+	.4byte	.LASF321
+	.byte	0xc
+	.byte	0x16
+	.4byte	0x405
+	.uleb128 0xb
+	.4byte	0xa1
+	.4byte	0x1808
+	.uleb128 0x19
+	.4byte	0x3d
+	.2byte	0x3ff
+	.byte	0
+	.uleb128 0xd
+	.4byte	.LASF322
+	.byte	0xc
+	.byte	0x17
+	.4byte	0x17f7
+	.uleb128 0x1d
+	.4byte	.LASF323
+	.byte	0x3
+	.byte	0x5
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	DeviceCapacity
+	.uleb128 0x1d
+	.4byte	.LASF324
+	.byte	0x3
+	.byte	0x6
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	gFtlInitStatus
+	.uleb128 0xd
+	.4byte	.LASF325
+	.byte	0x3
+	.byte	0x6d
+	.4byte	0x2f3
+	.uleb128 0xd
+	.4byte	.LASF326
+	.byte	0x3
+	.byte	0x6e
+	.4byte	0x2f3
+	.uleb128 0xd
+	.4byte	.LASF327
+	.byte	0x3
+	.byte	0x6f
+	.4byte	0x2f3
+	.uleb128 0xd
+	.4byte	.LASF328
+	.byte	0x3
+	.byte	0x70
+	.4byte	0x2f3
+	.uleb128 0x1e
+	.4byte	.LASF329
+	.byte	0x3
+	.2byte	0x3bd
+	.4byte	0x2f
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	power_up_flag
+	.uleb128 0x1f
+	.4byte	.LASF333
+	.byte	0x3
+	.2byte	0x480
+	.4byte	0x2f3
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	gc_discard_updated
+	.uleb128 0x1e
+	.4byte	.LASF330
+	.byte	0x2
+	.2byte	0x35b
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	g_ect_tbl_power_up_flush
+	.uleb128 0x1e
+	.4byte	.LASF331
+	.byte	0x2
+	.2byte	0x370
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	FtlUpdateVaildLpnCount
+	.uleb128 0xb
+	.4byte	0x2e8
+	.4byte	0x18d2
+	.uleb128 0x19
+	.4byte	0x3d
+	.2byte	0x1fff
+	.byte	0
+	.uleb128 0x1e
+	.4byte	.LASF332
+	.byte	0x2
+	.2byte	0x8ad
+	.4byte	0x18c1
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	check_vpc_table
+	.uleb128 0x20
+	.4byte	.LASF334
+	.byte	0x5
+	.byte	0x6d
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	ftl_gc_temp_block_bops_scan_page_addr
+	.uleb128 0x1e
+	.4byte	.LASF335
+	.byte	0x5
+	.2byte	0x1d4
+	.4byte	0x2e8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	gc_ink_free_return_value
+	.uleb128 0x20
+	.4byte	.LASF336
+	.byte	0x1
+	.byte	0xe
+	.4byte	0x17f7
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	check_buf
+	.uleb128 0x21
+	.4byte	0x1808
+	.byte	0x1
+	.byte	0xf
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	ftl_temp_buf
+	.uleb128 0xb
+	.4byte	0xa1
+	.4byte	0x1949
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x7f
+	.byte	0
+	.uleb128 0x20
+	.4byte	.LASF337
+	.byte	0x1
+	.byte	0x10
+	.4byte	0x1939
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	check_spare_buf
+	.uleb128 0x22
+	.4byte	.LASF340
+	.byte	0x1
+	.byte	0xd2
+	.4byte	0x2f
+	.8byte	.LFB268
+	.8byte	.LFE268-.LFB268
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x19ba
+	.uleb128 0x23
+	.4byte	.LASF338
+	.byte	0x1
+	.byte	0xd2
+	.4byte	0x2d
+	.4byte	.LLST334
+	.uleb128 0x23
+	.4byte	.LASF339
+	.byte	0x1
+	.byte	0xd2
+	.4byte	0x2d
+	.4byte	.LLST335
+	.uleb128 0x23
+	.4byte	.LASF111
+	.byte	0x1
+	.byte	0xd2
+	.4byte	0x50
+	.4byte	.LLST336
+	.uleb128 0x24
+	.8byte	.LVL1724
+	.4byte	0x7499
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF341
+	.byte	0x1
+	.byte	0xcd
+	.4byte	0x2d
+	.8byte	.LFB267
+	.8byte	.LFE267-.LFB267
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1a16
+	.uleb128 0x23
+	.4byte	.LASF342
+	.byte	0x1
+	.byte	0xcd
+	.4byte	0x2d
+	.4byte	.LLST202
+	.uleb128 0x23
+	.4byte	.LASF343
+	.byte	0x1
+	.byte	0xcd
+	.4byte	0x1a16
+	.4byte	.LLST203
+	.uleb128 0x23
+	.4byte	.LASF344
+	.byte	0x1
+	.byte	0xcd
+	.4byte	0x50
+	.4byte	.LLST204
+	.uleb128 0x24
+	.8byte	.LVL905
+	.4byte	0x74a4
+	.byte	0
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x1a1c
+	.uleb128 0x25
+	.uleb128 0x22
+	.4byte	.LASF345
+	.byte	0x1
+	.byte	0xc8
+	.4byte	0x2d
+	.8byte	.LFB266
+	.8byte	.LFE266-.LFB266
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1a73
+	.uleb128 0x26
+	.string	"s"
+	.byte	0x1
+	.byte	0xc8
+	.4byte	0x2d
+	.4byte	.LLST116
+	.uleb128 0x26
+	.string	"c"
+	.byte	0x1
+	.byte	0xc8
+	.4byte	0x2f
+	.4byte	.LLST117
+	.uleb128 0x26
+	.string	"n"
+	.byte	0x1
+	.byte	0xc8
+	.4byte	0x50
+	.4byte	.LLST118
+	.uleb128 0x24
+	.8byte	.LVL489
+	.4byte	0x74ad
+	.byte	0
+	.uleb128 0x27
+	.4byte	.LASF346
+	.byte	0x1
+	.byte	0xb6
+	.4byte	0x96
+	.8byte	.LFB265
+	.8byte	.LFE265-.LFB265
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1ae5
+	.uleb128 0x23
+	.4byte	.LASF347
+	.byte	0x1
+	.byte	0xb6
+	.4byte	0x456
+	.4byte	.LLST199
+	.uleb128 0x26
+	.string	"die"
+	.byte	0x1
+	.byte	0xb6
+	.4byte	0xa1
+	.4byte	.LLST200
+	.uleb128 0x28
+	.4byte	.LASF111
+	.byte	0x1
+	.byte	0xb8
+	.4byte	0x8b
+	.4byte	.LLST201
+	.uleb128 0x29
+	.string	"i"
+	.byte	0x1
+	.byte	0xb8
+	.4byte	0x8b
+	.uleb128 0x24
+	.8byte	.LVL894
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL898
+	.4byte	0x1a1d
+	.byte	0
+	.uleb128 0x2a
+	.4byte	.LASF367
+	.byte	0x1
+	.byte	0x9b
+	.4byte	0x2fe
+	.byte	0x1
+	.4byte	0x1b29
+	.uleb128 0x2b
+	.4byte	.LASF360
+	.byte	0x1
+	.byte	0x9b
+	.4byte	0x2e8
+	.uleb128 0x29
+	.string	"sts"
+	.byte	0x1
+	.byte	0x9d
+	.4byte	0x2fe
+	.uleb128 0x2c
+	.4byte	.LASF348
+	.byte	0x1
+	.byte	0x9e
+	.4byte	0x1b29
+	.uleb128 0x29
+	.string	"req"
+	.byte	0x1
+	.byte	0x9f
+	.4byte	0x314
+	.uleb128 0x2d
+	.string	"out"
+	.byte	0x1
+	.byte	0xb1
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x2f3
+	.4byte	0x1b39
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0xf
+	.byte	0
+	.uleb128 0x27
+	.4byte	.LASF349
+	.byte	0x1
+	.byte	0x85
+	.4byte	0x96
+	.8byte	.LFB263
+	.8byte	.LFE263-.LFB263
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1bdb
+	.uleb128 0x23
+	.4byte	.LASF350
+	.byte	0x1
+	.byte	0x85
+	.4byte	0x2d
+	.4byte	.LLST102
+	.uleb128 0x23
+	.4byte	.LASF351
+	.byte	0x1
+	.byte	0x85
+	.4byte	0xa1
+	.4byte	.LLST103
+	.uleb128 0x23
+	.4byte	.LASF352
+	.byte	0x1
+	.byte	0x85
+	.4byte	0xa1
+	.4byte	.LLST104
+	.uleb128 0x29
+	.string	"i"
+	.byte	0x1
+	.byte	0x87
+	.4byte	0xa1
+	.uleb128 0x29
+	.string	"cs"
+	.byte	0x1
+	.byte	0x87
+	.4byte	0xa1
+	.uleb128 0x2c
+	.4byte	.LASF58
+	.byte	0x1
+	.byte	0x87
+	.4byte	0xa1
+	.uleb128 0x20
+	.4byte	.LASF353
+	.byte	0x1
+	.byte	0x87
+	.4byte	0xa1
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 44
+	.uleb128 0x29
+	.string	"req"
+	.byte	0x1
+	.byte	0x88
+	.4byte	0xfdb
+	.uleb128 0x28
+	.4byte	.LASF354
+	.byte	0x1
+	.byte	0x89
+	.4byte	0xa1
+	.4byte	.LLST105
+	.uleb128 0x24
+	.8byte	.LVL429
+	.4byte	0x67ad
+	.byte	0
+	.uleb128 0x27
+	.4byte	.LASF355
+	.byte	0x1
+	.byte	0x49
+	.4byte	0x96
+	.8byte	.LFB262
+	.8byte	.LFE262-.LFB262
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1cf8
+	.uleb128 0x23
+	.4byte	.LASF350
+	.byte	0x1
+	.byte	0x49
+	.4byte	0x2d
+	.4byte	.LLST97
+	.uleb128 0x23
+	.4byte	.LASF352
+	.byte	0x1
+	.byte	0x49
+	.4byte	0xa1
+	.4byte	.LLST98
+	.uleb128 0x23
+	.4byte	.LASF351
+	.byte	0x1
+	.byte	0x49
+	.4byte	0xa1
+	.4byte	.LLST99
+	.uleb128 0x23
+	.4byte	.LASF356
+	.byte	0x1
+	.byte	0x49
+	.4byte	0xa1
+	.4byte	.LLST100
+	.uleb128 0x29
+	.string	"i"
+	.byte	0x1
+	.byte	0x4b
+	.4byte	0xa1
+	.uleb128 0x29
+	.string	"cs"
+	.byte	0x1
+	.byte	0x4b
+	.4byte	0xa1
+	.uleb128 0x2c
+	.4byte	.LASF58
+	.byte	0x1
+	.byte	0x4b
+	.4byte	0xa1
+	.uleb128 0x20
+	.4byte	.LASF353
+	.byte	0x1
+	.byte	0x4b
+	.4byte	0xa1
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 44
+	.uleb128 0x28
+	.4byte	.LASF354
+	.byte	0x1
+	.byte	0x4c
+	.4byte	0xa1
+	.4byte	.LLST101
+	.uleb128 0x29
+	.string	"req"
+	.byte	0x1
+	.byte	0x4d
+	.4byte	0xfdb
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x1d08
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.4696
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0xc0
+	.4byte	0x1cdd
+	.uleb128 0x20
+	.4byte	.LASF358
+	.byte	0x1
+	.byte	0x68
+	.4byte	0x314
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -32
+	.uleb128 0x24
+	.8byte	.LVL416
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL417
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL418
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL419
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL412
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL413
+	.4byte	0x67ad
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x1d08
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0xe
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x1cf8
+	.uleb128 0x27
+	.4byte	.LASF359
+	.byte	0x1
+	.byte	0x2b
+	.4byte	0x96
+	.8byte	.LFB261
+	.8byte	.LFE261-.LFB261
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1dcf
+	.uleb128 0x23
+	.4byte	.LASF350
+	.byte	0x1
+	.byte	0x2b
+	.4byte	0x2d
+	.4byte	.LLST86
+	.uleb128 0x23
+	.4byte	.LASF352
+	.byte	0x1
+	.byte	0x2b
+	.4byte	0xa1
+	.4byte	.LLST87
+	.uleb128 0x23
+	.4byte	.LASF351
+	.byte	0x1
+	.byte	0x2b
+	.4byte	0xa1
+	.4byte	.LLST88
+	.uleb128 0x29
+	.string	"i"
+	.byte	0x1
+	.byte	0x2d
+	.4byte	0xa1
+	.uleb128 0x29
+	.string	"cs"
+	.byte	0x1
+	.byte	0x2d
+	.4byte	0xa1
+	.uleb128 0x2c
+	.4byte	.LASF58
+	.byte	0x1
+	.byte	0x2d
+	.4byte	0xa1
+	.uleb128 0x20
+	.4byte	.LASF353
+	.byte	0x1
+	.byte	0x2d
+	.4byte	0xa1
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 60
+	.uleb128 0x28
+	.4byte	.LASF354
+	.byte	0x1
+	.byte	0x2e
+	.4byte	0xa1
+	.4byte	.LLST89
+	.uleb128 0x29
+	.string	"req"
+	.byte	0x1
+	.byte	0x2f
+	.4byte	0xfdb
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x1d08
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.4679
+	.uleb128 0x24
+	.8byte	.LVL373
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL374
+	.4byte	0x67ad
+	.byte	0
+	.uleb128 0x30
+	.4byte	.LASF664
+	.byte	0x1
+	.byte	0x11
+	.4byte	0xa1
+	.byte	0x1
+	.4byte	0x1e4e
+	.uleb128 0x31
+	.string	"req"
+	.byte	0x1
+	.byte	0x11
+	.4byte	0xfdb
+	.uleb128 0x2b
+	.4byte	.LASF353
+	.byte	0x1
+	.byte	0x11
+	.4byte	0x35d
+	.uleb128 0x2b
+	.4byte	.LASF361
+	.byte	0x1
+	.byte	0x11
+	.4byte	0x35d
+	.uleb128 0x2c
+	.4byte	.LASF362
+	.byte	0x1
+	.byte	0x13
+	.4byte	0x8b
+	.uleb128 0x2c
+	.4byte	.LASF363
+	.byte	0x1
+	.byte	0x13
+	.4byte	0x8b
+	.uleb128 0x2c
+	.4byte	.LASF68
+	.byte	0x1
+	.byte	0x14
+	.4byte	0x8b
+	.uleb128 0x2c
+	.4byte	.LASF69
+	.byte	0x1
+	.byte	0x14
+	.4byte	0x8b
+	.uleb128 0x2c
+	.4byte	.LASF364
+	.byte	0x1
+	.byte	0x15
+	.4byte	0xa1
+	.uleb128 0x2c
+	.4byte	.LASF59
+	.byte	0x1
+	.byte	0x16
+	.4byte	0xa1
+	.uleb128 0x2c
+	.4byte	.LASF365
+	.byte	0x1
+	.byte	0x17
+	.4byte	0xa1
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF366
+	.byte	0x5
+	.2byte	0x2f8
+	.4byte	0xa1
+	.8byte	.LFB259
+	.8byte	.LFE259-.LFB259
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x1e7e
+	.uleb128 0x24
+	.8byte	.LVL1503
+	.4byte	0x1e7e
+	.byte	0
+	.uleb128 0x33
+	.4byte	.LASF368
+	.byte	0x5
+	.2byte	0x1d5
+	.4byte	0x2f
+	.byte	0x1
+	.4byte	0x1f4b
+	.uleb128 0x34
+	.4byte	.LASF369
+	.byte	0x5
+	.2byte	0x1d5
+	.4byte	0x2f3
+	.uleb128 0x34
+	.4byte	.LASF370
+	.byte	0x5
+	.2byte	0x1d5
+	.4byte	0x2f3
+	.uleb128 0x35
+	.4byte	.LASF371
+	.byte	0x5
+	.2byte	0x1d7
+	.4byte	0x2e8
+	.uleb128 0x36
+	.string	"lpa"
+	.byte	0x5
+	.2byte	0x1d8
+	.4byte	0x2f3
+	.uleb128 0x36
+	.string	"ppa"
+	.byte	0x5
+	.2byte	0x1d8
+	.4byte	0x2f3
+	.uleb128 0x35
+	.4byte	.LASF372
+	.byte	0x5
+	.2byte	0x1d9
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF82
+	.byte	0x5
+	.2byte	0x1da
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF373
+	.byte	0x5
+	.2byte	0x1da
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF374
+	.byte	0x5
+	.2byte	0x1da
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF375
+	.byte	0x5
+	.2byte	0x1da
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF376
+	.byte	0x5
+	.2byte	0x1db
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF377
+	.byte	0x5
+	.2byte	0x1dc
+	.4byte	0x1f4b
+	.uleb128 0x37
+	.4byte	.LASF378
+	.byte	0x5
+	.2byte	0x276
+	.uleb128 0x37
+	.4byte	.LASF379
+	.byte	0x5
+	.2byte	0x279
+	.uleb128 0x38
+	.4byte	.LASF357
+	.4byte	0x1f61
+	.4byte	.LASF368
+	.uleb128 0x39
+	.uleb128 0x35
+	.4byte	.LASF380
+	.byte	0x5
+	.2byte	0x1f3
+	.4byte	0x2e8
+	.byte	0
+	.byte	0
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x757
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x1f61
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x16
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x1f51
+	.uleb128 0x33
+	.4byte	.LASF381
+	.byte	0x5
+	.2byte	0x1a2
+	.4byte	0x2f
+	.byte	0x1
+	.4byte	0x1fc6
+	.uleb128 0x36
+	.string	"ret"
+	.byte	0x5
+	.2byte	0x1a4
+	.4byte	0x2f
+	.uleb128 0x36
+	.string	"i"
+	.byte	0x5
+	.2byte	0x1a5
+	.4byte	0x2f
+	.uleb128 0x36
+	.string	"ppa"
+	.byte	0x5
+	.2byte	0x1a6
+	.4byte	0x2f3
+	.uleb128 0x35
+	.4byte	.LASF348
+	.byte	0x5
+	.2byte	0x1a7
+	.4byte	0x1b29
+	.uleb128 0x3a
+	.4byte	0x1fb7
+	.uleb128 0x35
+	.4byte	.LASF382
+	.byte	0x5
+	.2byte	0x1b1
+	.4byte	0x314
+	.byte	0
+	.uleb128 0x39
+	.uleb128 0x35
+	.4byte	.LASF383
+	.byte	0x5
+	.2byte	0x1c6
+	.4byte	0x2f3
+	.byte	0
+	.byte	0
+	.uleb128 0x33
+	.4byte	.LASF384
+	.byte	0x5
+	.2byte	0x185
+	.4byte	0x2f
+	.byte	0x1
+	.4byte	0x2010
+	.uleb128 0x34
+	.4byte	.LASF385
+	.byte	0x5
+	.2byte	0x185
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF373
+	.byte	0x5
+	.2byte	0x187
+	.4byte	0x2e8
+	.uleb128 0x36
+	.string	"i"
+	.byte	0x5
+	.2byte	0x188
+	.4byte	0x2e8
+	.uleb128 0x36
+	.string	"j"
+	.byte	0x5
+	.2byte	0x188
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF175
+	.byte	0x5
+	.2byte	0x189
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF494
+	.byte	0x5
+	.2byte	0x17a
+	.4byte	0x2f
+	.byte	0x1
+	.uleb128 0x32
+	.4byte	.LASF386
+	.byte	0x5
+	.2byte	0x166
+	.4byte	0x2f
+	.8byte	.LFB254
+	.8byte	.LFE254-.LFB254
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x208d
+	.uleb128 0x3c
+	.4byte	.LASF175
+	.byte	0x5
+	.2byte	0x166
+	.4byte	0x2e8
+	.4byte	.LLST85
+	.uleb128 0x36
+	.string	"i"
+	.byte	0x5
+	.2byte	0x168
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF387
+	.byte	0x5
+	.2byte	0x169
+	.4byte	0x2e8
+	.uleb128 0x24
+	.8byte	.LVL359
+	.4byte	0x4d4b
+	.uleb128 0x24
+	.8byte	.LVL360
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL361
+	.4byte	0x208d
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF388
+	.byte	0x5
+	.2byte	0x158
+	.4byte	0x2f
+	.8byte	.LFB253
+	.8byte	.LFE253-.LFB253
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x20cd
+	.uleb128 0x3c
+	.4byte	.LASF389
+	.byte	0x5
+	.2byte	0x158
+	.4byte	0x2e8
+	.4byte	.LLST84
+	.uleb128 0x24
+	.8byte	.LVL354
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF390
+	.byte	0x5
+	.2byte	0x13b
+	.4byte	0x2f3
+	.8byte	.LFB252
+	.8byte	.LFE252-.LFB252
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2169
+	.uleb128 0x3d
+	.string	"i"
+	.byte	0x5
+	.2byte	0x13d
+	.4byte	0x2e8
+	.4byte	.LLST285
+	.uleb128 0x3e
+	.4byte	.LASF377
+	.byte	0x5
+	.2byte	0x13e
+	.4byte	0x1f4b
+	.4byte	.LLST286
+	.uleb128 0x24
+	.8byte	.LVL1391
+	.4byte	0x1bdb
+	.uleb128 0x24
+	.8byte	.LVL1393
+	.4byte	0x25f1
+	.uleb128 0x24
+	.8byte	.LVL1394
+	.4byte	0x2378
+	.uleb128 0x24
+	.8byte	.LVL1396
+	.4byte	0x5333
+	.uleb128 0x24
+	.8byte	.LVL1397
+	.4byte	0x5179
+	.uleb128 0x24
+	.8byte	.LVL1398
+	.4byte	0x2333
+	.uleb128 0x24
+	.8byte	.LVL1402
+	.4byte	0x24f1
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF391
+	.byte	0x5
+	.2byte	0x12b
+	.4byte	0x2f3
+	.8byte	.LFB251
+	.8byte	.LFE251-.LFB251
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x21e7
+	.uleb128 0x24
+	.8byte	.LVL1406
+	.4byte	0x5815
+	.uleb128 0x24
+	.8byte	.LVL1407
+	.4byte	0x2378
+	.uleb128 0x24
+	.8byte	.LVL1408
+	.4byte	0x28b2
+	.uleb128 0x24
+	.8byte	.LVL1409
+	.4byte	0x40b4
+	.uleb128 0x24
+	.8byte	.LVL1410
+	.4byte	0x3d8f
+	.uleb128 0x24
+	.8byte	.LVL1411
+	.4byte	0x3b9a
+	.uleb128 0x24
+	.8byte	.LVL1412
+	.4byte	0x2747
+	.byte	0
+	.uleb128 0x3f
+	.4byte	.LASF450
+	.byte	0x5
+	.2byte	0x120
+	.byte	0x1
+	.uleb128 0x22
+	.4byte	.LASF392
+	.byte	0x5
+	.byte	0xd2
+	.4byte	0x2f3
+	.8byte	.LFB249
+	.8byte	.LFE249-.LFB249
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2333
+	.uleb128 0x23
+	.4byte	.LASF393
+	.byte	0x5
+	.byte	0xd2
+	.4byte	0x1423
+	.4byte	.LLST189
+	.uleb128 0x23
+	.4byte	.LASF394
+	.byte	0x5
+	.byte	0xd2
+	.4byte	0x2f3
+	.4byte	.LLST190
+	.uleb128 0x28
+	.4byte	.LASF375
+	.byte	0x5
+	.byte	0xd4
+	.4byte	0x2e8
+	.4byte	.LLST191
+	.uleb128 0x28
+	.4byte	.LASF352
+	.byte	0x5
+	.byte	0xd5
+	.4byte	0x2e8
+	.4byte	.LLST192
+	.uleb128 0x29
+	.string	"req"
+	.byte	0x5
+	.byte	0xd5
+	.4byte	0x2e8
+	.uleb128 0x2c
+	.4byte	.LASF373
+	.byte	0x5
+	.byte	0xd6
+	.4byte	0x2e8
+	.uleb128 0x28
+	.4byte	.LASF169
+	.byte	0x5
+	.byte	0xd6
+	.4byte	0x2e8
+	.4byte	.LLST193
+	.uleb128 0x28
+	.4byte	.LASF167
+	.byte	0x5
+	.byte	0xd6
+	.4byte	0x2e8
+	.4byte	.LLST194
+	.uleb128 0x28
+	.4byte	.LASF395
+	.byte	0x5
+	.byte	0xd7
+	.4byte	0x2f3
+	.4byte	.LLST195
+	.uleb128 0x28
+	.4byte	.LASF396
+	.byte	0x5
+	.byte	0xd8
+	.4byte	0x2f3
+	.4byte	.LLST196
+	.uleb128 0x2c
+	.4byte	.LASF397
+	.byte	0x5
+	.byte	0xd9
+	.4byte	0x2f3
+	.uleb128 0x28
+	.4byte	.LASF377
+	.byte	0x5
+	.byte	0xda
+	.4byte	0x1f4b
+	.4byte	.LLST197
+	.uleb128 0x40
+	.4byte	.LASF398
+	.byte	0x5
+	.byte	0xe1
+	.uleb128 0x40
+	.4byte	.LASF399
+	.byte	0x5
+	.byte	0xe5
+	.uleb128 0x41
+	.4byte	.LASF468
+	.byte	0x5
+	.2byte	0x117
+	.8byte	.L859
+	.uleb128 0x24
+	.8byte	.LVL849
+	.4byte	0x2333
+	.uleb128 0x24
+	.8byte	.LVL856
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL867
+	.4byte	0x4d87
+	.uleb128 0x24
+	.8byte	.LVL871
+	.4byte	0x36a2
+	.uleb128 0x24
+	.8byte	.LVL874
+	.4byte	0x24f1
+	.uleb128 0x24
+	.8byte	.LVL876
+	.4byte	0x49d2
+	.uleb128 0x24
+	.8byte	.LVL877
+	.4byte	0x2333
+	.byte	0
+	.uleb128 0x42
+	.4byte	.LASF406
+	.byte	0x5
+	.byte	0xc9
+	.8byte	.LFB248
+	.8byte	.LFE248-.LFB248
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2378
+	.uleb128 0x24
+	.8byte	.LVL843
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL844
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL845
+	.4byte	0x2645
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF400
+	.byte	0x5
+	.byte	0x6f
+	.4byte	0x2f
+	.8byte	.LFB247
+	.8byte	.LFE247-.LFB247
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x24dc
+	.uleb128 0x23
+	.4byte	.LASF401
+	.byte	0x5
+	.byte	0x6f
+	.4byte	0x2f
+	.4byte	.LLST280
+	.uleb128 0x43
+	.string	"i"
+	.byte	0x5
+	.byte	0x71
+	.4byte	0x2e8
+	.4byte	.LLST281
+	.uleb128 0x2c
+	.4byte	.LASF402
+	.byte	0x5
+	.byte	0x71
+	.4byte	0x2e8
+	.uleb128 0x28
+	.4byte	.LASF403
+	.byte	0x5
+	.byte	0x72
+	.4byte	0x2f3
+	.4byte	.LLST282
+	.uleb128 0x28
+	.4byte	.LASF404
+	.byte	0x5
+	.byte	0x73
+	.4byte	0x2f3
+	.4byte	.LLST283
+	.uleb128 0x2c
+	.4byte	.LASF393
+	.byte	0x5
+	.byte	0x74
+	.4byte	0x1423
+	.uleb128 0x28
+	.4byte	.LASF405
+	.byte	0x5
+	.byte	0x75
+	.4byte	0x1468
+	.4byte	.LLST284
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x24ec
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.4529
+	.uleb128 0x24
+	.8byte	.LVL1357
+	.4byte	0x21f0
+	.uleb128 0x24
+	.8byte	.LVL1359
+	.4byte	0x3d8f
+	.uleb128 0x24
+	.8byte	.LVL1360
+	.4byte	0x5333
+	.uleb128 0x24
+	.8byte	.LVL1361
+	.4byte	0x5179
+	.uleb128 0x24
+	.8byte	.LVL1364
+	.4byte	0x5815
+	.uleb128 0x24
+	.8byte	.LVL1365
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1368
+	.4byte	0x266c
+	.uleb128 0x24
+	.8byte	.LVL1369
+	.4byte	0x49ad
+	.uleb128 0x24
+	.8byte	.LVL1371
+	.4byte	0x40b4
+	.uleb128 0x24
+	.8byte	.LVL1372
+	.4byte	0x3b9a
+	.uleb128 0x24
+	.8byte	.LVL1374
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1375
+	.4byte	0x3fc5
+	.uleb128 0x24
+	.8byte	.LVL1376
+	.4byte	0x4d4b
+	.uleb128 0x24
+	.8byte	.LVL1377
+	.4byte	0x3fc5
+	.uleb128 0x24
+	.8byte	.LVL1378
+	.4byte	0x266c
+	.uleb128 0x24
+	.8byte	.LVL1381
+	.4byte	0x49d2
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x24ec
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x12
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x24dc
+	.uleb128 0x42
+	.4byte	.LASF407
+	.byte	0x5
+	.byte	0x54
+	.8byte	.LFB246
+	.8byte	.LFE246-.LFB246
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2563
+	.uleb128 0x23
+	.4byte	.LASF408
+	.byte	0x5
+	.byte	0x54
+	.4byte	0x2f3
+	.4byte	.LLST80
+	.uleb128 0x23
+	.4byte	.LASF178
+	.byte	0x5
+	.byte	0x54
+	.4byte	0x2f3
+	.4byte	.LLST81
+	.uleb128 0x26
+	.string	"lpa"
+	.byte	0x5
+	.byte	0x54
+	.4byte	0x2f3
+	.4byte	.LLST82
+	.uleb128 0x20
+	.4byte	.LASF409
+	.byte	0x5
+	.byte	0x56
+	.4byte	0x2e8
+	.uleb128 0x1
+	.byte	0x59
+	.uleb128 0x43
+	.string	"i"
+	.byte	0x5
+	.byte	0x57
+	.4byte	0x2e8
+	.4byte	.LLST83
+	.uleb128 0x24
+	.8byte	.LVL347
+	.4byte	0x4d4b
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF410
+	.byte	0x5
+	.byte	0x49
+	.4byte	0x2f3
+	.8byte	.LFB245
+	.8byte	.LFE245-.LFB245
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x259d
+	.uleb128 0x26
+	.string	"blk"
+	.byte	0x5
+	.byte	0x49
+	.4byte	0x2e8
+	.4byte	.LLST79
+	.uleb128 0x29
+	.string	"i"
+	.byte	0x5
+	.byte	0x4b
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x42
+	.4byte	.LASF411
+	.byte	0x5
+	.byte	0x38
+	.8byte	.LFB244
+	.8byte	.LFE244-.LFB244
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x25f1
+	.uleb128 0x44
+	.string	"req"
+	.byte	0x5
+	.byte	0x38
+	.4byte	0xfdb
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x45
+	.4byte	.LASF412
+	.byte	0x5
+	.byte	0x38
+	.4byte	0x2f3
+	.uleb128 0x1
+	.byte	0x51
+	.uleb128 0x43
+	.string	"i"
+	.byte	0x5
+	.byte	0x3a
+	.4byte	0x2e8
+	.4byte	.LLST77
+	.uleb128 0x28
+	.4byte	.LASF413
+	.byte	0x5
+	.byte	0x3b
+	.4byte	0x2e8
+	.4byte	.LLST78
+	.byte	0
+	.uleb128 0x42
+	.4byte	.LASF414
+	.byte	0x5
+	.byte	0x29
+	.8byte	.LFB243
+	.8byte	.LFE243-.LFB243
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2645
+	.uleb128 0x44
+	.string	"req"
+	.byte	0x5
+	.byte	0x29
+	.4byte	0xfdb
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x45
+	.4byte	.LASF412
+	.byte	0x5
+	.byte	0x29
+	.4byte	0x2f3
+	.uleb128 0x1
+	.byte	0x51
+	.uleb128 0x43
+	.string	"i"
+	.byte	0x5
+	.byte	0x2b
+	.4byte	0x2e8
+	.4byte	.LLST75
+	.uleb128 0x28
+	.4byte	.LASF413
+	.byte	0x5
+	.byte	0x2c
+	.4byte	0x2e8
+	.4byte	.LLST76
+	.byte	0
+	.uleb128 0x42
+	.4byte	.LASF415
+	.byte	0x5
+	.byte	0x15
+	.8byte	.LFB242
+	.8byte	.LFE242-.LFB242
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x266c
+	.uleb128 0x29
+	.string	"i"
+	.byte	0x5
+	.byte	0x17
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF416
+	.byte	0x2
+	.2byte	0xa93
+	.4byte	0x2f
+	.8byte	.LFB241
+	.8byte	.LFE241-.LFB241
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x26f2
+	.uleb128 0x3c
+	.4byte	.LASF402
+	.byte	0x2
+	.2byte	0xa93
+	.4byte	0x2e8
+	.4byte	.LLST220
+	.uleb128 0x36
+	.string	"ret"
+	.byte	0x2
+	.2byte	0xa95
+	.4byte	0x2f
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x2702
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.4459
+	.uleb128 0x24
+	.8byte	.LVL998
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1001
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1002
+	.4byte	0x2707
+	.uleb128 0x24
+	.8byte	.LVL1003
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x2702
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x13
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x26f2
+	.uleb128 0x33
+	.4byte	.LASF417
+	.byte	0x2
+	.2byte	0xa7e
+	.4byte	0x2f
+	.byte	0x1
+	.4byte	0x2732
+	.uleb128 0x34
+	.4byte	.LASF402
+	.byte	0x2
+	.2byte	0xa7e
+	.4byte	0x2e8
+	.uleb128 0x38
+	.4byte	.LASF357
+	.4byte	0x2742
+	.4byte	.LASF417
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x2742
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0xf
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x2732
+	.uleb128 0x32
+	.4byte	.LASF418
+	.byte	0x2
+	.2byte	0xa5e
+	.4byte	0x2f3
+	.8byte	.LFB239
+	.8byte	.LFE239-.LFB239
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x27df
+	.uleb128 0x3c
+	.4byte	.LASF419
+	.byte	0x2
+	.2byte	0xa5e
+	.4byte	0x1423
+	.4byte	.LLST73
+	.uleb128 0x3e
+	.4byte	.LASF375
+	.byte	0x2
+	.2byte	0xa60
+	.4byte	0x2e8
+	.4byte	.LLST74
+	.uleb128 0x1f
+	.4byte	.LASF420
+	.byte	0x2
+	.2byte	0xa61
+	.4byte	0x2f3
+	.uleb128 0x1
+	.byte	0x65
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x24ec
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.4439
+	.uleb128 0x24
+	.8byte	.LVL315
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL316
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL317
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL320
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF421
+	.byte	0x2
+	.2byte	0xa46
+	.4byte	0x2f
+	.8byte	.LFB238
+	.8byte	.LFE238-.LFB238
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x289d
+	.uleb128 0x3c
+	.4byte	.LASF419
+	.byte	0x2
+	.2byte	0xa46
+	.4byte	0x1423
+	.4byte	.LLST266
+	.uleb128 0x3e
+	.4byte	.LASF402
+	.byte	0x2
+	.2byte	0xa48
+	.4byte	0x2e8
+	.4byte	.LLST267
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x28ad
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.4432
+	.uleb128 0x24
+	.8byte	.LVL1289
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1290
+	.4byte	0x49ad
+	.uleb128 0x24
+	.8byte	.LVL1291
+	.4byte	0x2707
+	.uleb128 0x24
+	.8byte	.LVL1292
+	.4byte	0x28b2
+	.uleb128 0x24
+	.8byte	.LVL1293
+	.4byte	0x40b4
+	.uleb128 0x24
+	.8byte	.LVL1294
+	.4byte	0x3d8f
+	.uleb128 0x24
+	.8byte	.LVL1295
+	.4byte	0x3b9a
+	.uleb128 0x24
+	.8byte	.LVL1298
+	.4byte	0x49d2
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x28ad
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x1c
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x289d
+	.uleb128 0x32
+	.4byte	.LASF422
+	.byte	0x2
+	.2byte	0x9e2
+	.4byte	0x2f
+	.8byte	.LFB237
+	.8byte	.LFE237-.LFB237
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2a64
+	.uleb128 0x46
+	.string	"p"
+	.byte	0x2
+	.2byte	0x9e2
+	.4byte	0x1423
+	.4byte	.LLST209
+	.uleb128 0x3e
+	.4byte	.LASF423
+	.byte	0x2
+	.2byte	0x9e4
+	.4byte	0x2e8
+	.4byte	.LLST210
+	.uleb128 0x35
+	.4byte	.LASF373
+	.byte	0x2
+	.2byte	0x9e5
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF352
+	.byte	0x2
+	.2byte	0x9e5
+	.4byte	0x2e8
+	.4byte	.LLST211
+	.uleb128 0x36
+	.string	"n"
+	.byte	0x2
+	.2byte	0x9e5
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF375
+	.byte	0x2
+	.2byte	0x9e5
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF424
+	.byte	0x2
+	.2byte	0x9e6
+	.4byte	0x2f
+	.4byte	.LLST212
+	.uleb128 0x3e
+	.4byte	.LASF425
+	.byte	0x2
+	.2byte	0x9e7
+	.4byte	0x2e8
+	.4byte	.LLST213
+	.uleb128 0x37
+	.4byte	.LASF426
+	.byte	0x2
+	.2byte	0x9e8
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x2a74
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.4411
+	.uleb128 0x47
+	.4byte	0x3a1f
+	.8byte	.LBB242
+	.8byte	.LBE242-.LBB242
+	.byte	0x2
+	.2byte	0xa18
+	.4byte	0x2993
+	.uleb128 0x48
+	.4byte	0x3a38
+	.uleb128 0x48
+	.4byte	0x3a2c
+	.uleb128 0x24
+	.8byte	.LVL955
+	.4byte	0x680b
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL927
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL931
+	.4byte	0x479c
+	.uleb128 0x24
+	.8byte	.LVL932
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL933
+	.4byte	0x309d
+	.uleb128 0x24
+	.8byte	.LVL934
+	.4byte	0x49ad
+	.uleb128 0x24
+	.8byte	.LVL935
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL938
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL939
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL940
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL943
+	.4byte	0x3a1f
+	.uleb128 0x24
+	.8byte	.LVL946
+	.4byte	0x1b39
+	.uleb128 0x24
+	.8byte	.LVL948
+	.4byte	0x2bd7
+	.uleb128 0x24
+	.8byte	.LVL949
+	.4byte	0x5179
+	.uleb128 0x24
+	.8byte	.LVL951
+	.4byte	0x49ad
+	.uleb128 0x24
+	.8byte	.LVL958
+	.4byte	0x5333
+	.uleb128 0x24
+	.8byte	.LVL961
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x2a74
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x18
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x2a64
+	.uleb128 0x33
+	.4byte	.LASF427
+	.byte	0x2
+	.2byte	0x9d9
+	.4byte	0x2f
+	.byte	0x1
+	.4byte	0x2a97
+	.uleb128 0x34
+	.4byte	.LASF402
+	.byte	0x2
+	.2byte	0x9d9
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF428
+	.byte	0x2
+	.2byte	0x98e
+	.4byte	0x2e8
+	.8byte	.LFB235
+	.8byte	.LFE235-.LFB235
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2b47
+	.uleb128 0x3e
+	.4byte	.LASF429
+	.byte	0x2
+	.2byte	0x990
+	.4byte	0x2e8
+	.4byte	.LLST67
+	.uleb128 0x35
+	.4byte	.LASF430
+	.byte	0x2
+	.2byte	0x991
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF431
+	.byte	0x2
+	.2byte	0x992
+	.4byte	0x2e8
+	.4byte	.LLST68
+	.uleb128 0x3e
+	.4byte	.LASF432
+	.byte	0x2
+	.2byte	0x993
+	.4byte	0x134b
+	.4byte	.LLST69
+	.uleb128 0x3e
+	.4byte	.LASF433
+	.byte	0x2
+	.2byte	0x994
+	.4byte	0x2e8
+	.4byte	.LLST70
+	.uleb128 0x3e
+	.4byte	.LASF434
+	.byte	0x2
+	.2byte	0x995
+	.4byte	0x2e8
+	.4byte	.LLST71
+	.uleb128 0x36
+	.string	"i"
+	.byte	0x2
+	.2byte	0x996
+	.4byte	0x2f3
+	.uleb128 0x24
+	.8byte	.LVL293
+	.4byte	0x2b47
+	.uleb128 0x24
+	.8byte	.LVL300
+	.4byte	0x2ba4
+	.uleb128 0x24
+	.8byte	.LVL305
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF435
+	.byte	0x2
+	.2byte	0x979
+	.4byte	0x2e8
+	.8byte	.LFB234
+	.8byte	.LFE234-.LFB234
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2ba4
+	.uleb128 0x3c
+	.4byte	.LASF90
+	.byte	0x2
+	.2byte	0x979
+	.4byte	0x2e8
+	.4byte	.LLST60
+	.uleb128 0x3e
+	.4byte	.LASF436
+	.byte	0x2
+	.2byte	0x97b
+	.4byte	0x2e8
+	.4byte	.LLST61
+	.uleb128 0x35
+	.4byte	.LASF389
+	.byte	0x2
+	.2byte	0x97c
+	.4byte	0x2e8
+	.uleb128 0x3d
+	.string	"i"
+	.byte	0x2
+	.2byte	0x97d
+	.4byte	0x2e8
+	.4byte	.LLST62
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF437
+	.byte	0x2
+	.2byte	0x970
+	.4byte	0x2e8
+	.8byte	.LFB233
+	.8byte	.LFE233-.LFB233
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2bd7
+	.uleb128 0x3e
+	.4byte	.LASF431
+	.byte	0x2
+	.2byte	0x972
+	.4byte	0x2e8
+	.4byte	.LLST59
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF438
+	.byte	0x2
+	.2byte	0x960
+	.4byte	0x2f
+	.8byte	.LFB232
+	.8byte	.LFE232-.LFB232
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2c48
+	.uleb128 0x3c
+	.4byte	.LASF402
+	.byte	0x2
+	.2byte	0x960
+	.4byte	0x2e8
+	.4byte	.LLST58
+	.uleb128 0x35
+	.4byte	.LASF373
+	.byte	0x2
+	.2byte	0x962
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF375
+	.byte	0x2
+	.2byte	0x962
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF162
+	.byte	0x2
+	.2byte	0x963
+	.4byte	0x2e8
+	.uleb128 0x24
+	.8byte	.LVL187
+	.4byte	0x4dc3
+	.uleb128 0x24
+	.8byte	.LVL188
+	.4byte	0x52d4
+	.byte	0
+	.uleb128 0x33
+	.4byte	.LASF439
+	.byte	0x2
+	.2byte	0x901
+	.4byte	0x2f
+	.byte	0x1
+	.4byte	0x2c72
+	.uleb128 0x36
+	.string	"i"
+	.byte	0x2
+	.2byte	0x903
+	.4byte	0x2f
+	.uleb128 0x39
+	.uleb128 0x35
+	.4byte	.LASF393
+	.byte	0x2
+	.2byte	0x928
+	.4byte	0x1423
+	.byte	0
+	.byte	0
+	.uleb128 0x49
+	.4byte	.LASF440
+	.byte	0x2
+	.2byte	0x8e2
+	.8byte	.LFB230
+	.8byte	.LFE230-.LFB230
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2cfb
+	.uleb128 0x3d
+	.string	"i"
+	.byte	0x2
+	.2byte	0x8e4
+	.4byte	0x2f
+	.4byte	.LLST163
+	.uleb128 0x4a
+	.string	"ppa"
+	.byte	0x2
+	.2byte	0x8e5
+	.4byte	0x2f3
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 44
+	.uleb128 0x35
+	.4byte	.LASF441
+	.byte	0x2
+	.2byte	0x8e6
+	.4byte	0x1f4b
+	.uleb128 0x24
+	.8byte	.LVL694
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL697
+	.4byte	0x3fc5
+	.uleb128 0x24
+	.8byte	.LVL698
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL699
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL700
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0x49
+	.4byte	.LASF442
+	.byte	0x2
+	.2byte	0x8ae
+	.8byte	.LFB229
+	.8byte	.LFE229-.LFB229
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2de8
+	.uleb128 0x36
+	.string	"i"
+	.byte	0x2
+	.2byte	0x8b0
+	.4byte	0x2e8
+	.uleb128 0x3d
+	.string	"lpn"
+	.byte	0x2
+	.2byte	0x8b1
+	.4byte	0x2f3
+	.4byte	.LLST186
+	.uleb128 0x1f
+	.4byte	.LASF443
+	.byte	0x2
+	.2byte	0x8b2
+	.4byte	0x2f3
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 92
+	.uleb128 0x36
+	.string	"blk"
+	.byte	0x2
+	.2byte	0x8b3
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF444
+	.byte	0x2
+	.2byte	0x8b4
+	.4byte	0x2e8
+	.4byte	.LLST187
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x2df8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.4327
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x170
+	.4byte	0x2d99
+	.uleb128 0x3e
+	.4byte	.LASF90
+	.byte	0x2
+	.2byte	0x8d1
+	.4byte	0x2e8
+	.4byte	.LLST188
+	.uleb128 0x24
+	.8byte	.LVL842
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL828
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL829
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL833
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL837
+	.4byte	0x3fc5
+	.uleb128 0x24
+	.8byte	.LVL838
+	.4byte	0x4d4b
+	.uleb128 0x24
+	.8byte	.LVL840
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x2df8
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0xd
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x2de8
+	.uleb128 0x49
+	.4byte	.LASF445
+	.byte	0x2
+	.2byte	0x88f
+	.8byte	.LFB228
+	.8byte	.LFE228-.LFB228
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2ed0
+	.uleb128 0x3d
+	.string	"i"
+	.byte	0x2
+	.2byte	0x891
+	.4byte	0x2e8
+	.4byte	.LLST264
+	.uleb128 0x3d
+	.string	"lpn"
+	.byte	0x2
+	.2byte	0x892
+	.4byte	0x2f3
+	.4byte	.LLST265
+	.uleb128 0x1f
+	.4byte	.LASF443
+	.byte	0x2
+	.2byte	0x893
+	.4byte	0x2f3
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 44
+	.uleb128 0x36
+	.string	"blk"
+	.byte	0x2
+	.2byte	0x894
+	.4byte	0x2e8
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x2ee0
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.4311
+	.uleb128 0x24
+	.8byte	.LVL1269
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1271
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL1276
+	.4byte	0x3fc5
+	.uleb128 0x24
+	.8byte	.LVL1277
+	.4byte	0x4d4b
+	.uleb128 0x24
+	.8byte	.LVL1280
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1281
+	.4byte	0x2707
+	.uleb128 0x24
+	.8byte	.LVL1282
+	.4byte	0x40b4
+	.uleb128 0x24
+	.8byte	.LVL1283
+	.4byte	0x3b9a
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x2ee0
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x14
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x2ed0
+	.uleb128 0x49
+	.4byte	.LASF446
+	.byte	0x2
+	.2byte	0x86b
+	.8byte	.LFB227
+	.8byte	.LFE227-.LFB227
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2f6e
+	.uleb128 0x3c
+	.4byte	.LASF393
+	.byte	0x2
+	.2byte	0x86b
+	.4byte	0x1423
+	.4byte	.LLST242
+	.uleb128 0x1f
+	.4byte	.LASF447
+	.byte	0x2
+	.2byte	0x86d
+	.4byte	0x314
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -32
+	.uleb128 0x35
+	.4byte	.LASF377
+	.byte	0x2
+	.2byte	0x86e
+	.4byte	0x1f4b
+	.uleb128 0x35
+	.4byte	.LASF448
+	.byte	0x2
+	.2byte	0x86f
+	.4byte	0x2f
+	.uleb128 0x35
+	.4byte	.LASF171
+	.byte	0x2
+	.2byte	0x870
+	.4byte	0x2f3
+	.uleb128 0x24
+	.8byte	.LVL1137
+	.4byte	0x2747
+	.uleb128 0x24
+	.8byte	.LVL1138
+	.4byte	0x1bdb
+	.uleb128 0x24
+	.8byte	.LVL1139
+	.4byte	0x266c
+	.byte	0
+	.uleb128 0x49
+	.4byte	.LASF449
+	.byte	0x2
+	.2byte	0x851
+	.8byte	.LFB226
+	.8byte	.LFE226-.LFB226
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x2fa7
+	.uleb128 0x24
+	.8byte	.LVL1251
+	.4byte	0x3dec
+	.uleb128 0x24
+	.8byte	.LVL1252
+	.4byte	0x1a1d
+	.byte	0
+	.uleb128 0x3f
+	.4byte	.LASF451
+	.byte	0x2
+	.2byte	0x83d
+	.byte	0x1
+	.uleb128 0x32
+	.4byte	.LASF452
+	.byte	0x2
+	.2byte	0x812
+	.4byte	0x2f
+	.8byte	.LFB224
+	.8byte	.LFE224-.LFB224
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3088
+	.uleb128 0x3e
+	.4byte	.LASF429
+	.byte	0x2
+	.2byte	0x814
+	.4byte	0x2e8
+	.4byte	.LLST183
+	.uleb128 0x35
+	.4byte	.LASF373
+	.byte	0x2
+	.2byte	0x814
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF375
+	.byte	0x2
+	.2byte	0x814
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF162
+	.byte	0x2
+	.2byte	0x814
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF453
+	.byte	0x2
+	.2byte	0x815
+	.4byte	0x2e8
+	.4byte	.LLST184
+	.uleb128 0x3e
+	.4byte	.LASF454
+	.byte	0x2
+	.2byte	0x815
+	.4byte	0x2e8
+	.4byte	.LLST185
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x3098
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.4286
+	.uleb128 0x24
+	.8byte	.LVL812
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL813
+	.4byte	0x4dc3
+	.uleb128 0x24
+	.8byte	.LVL814
+	.4byte	0x52d4
+	.uleb128 0x24
+	.8byte	.LVL817
+	.4byte	0x49d2
+	.uleb128 0x24
+	.8byte	.LVL822
+	.4byte	0x49ad
+	.uleb128 0x24
+	.8byte	.LVL824
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x3098
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x11
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x3088
+	.uleb128 0x32
+	.4byte	.LASF455
+	.byte	0x2
+	.2byte	0x7fc
+	.4byte	0x2f
+	.8byte	.LFB223
+	.8byte	.LFE223-.LFB223
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3120
+	.uleb128 0x46
+	.string	"p"
+	.byte	0x2
+	.2byte	0x7fc
+	.4byte	0x1423
+	.4byte	.LLST57
+	.uleb128 0x35
+	.4byte	.LASF373
+	.byte	0x2
+	.2byte	0x7fe
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF375
+	.byte	0x2
+	.2byte	0x7fe
+	.4byte	0x2e8
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x2742
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.4265
+	.uleb128 0x24
+	.8byte	.LVL178
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL181
+	.4byte	0x4dc3
+	.uleb128 0x24
+	.8byte	.LVL182
+	.4byte	0x52d4
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF456
+	.byte	0x2
+	.2byte	0x7ef
+	.4byte	0x2f
+	.8byte	.LFB222
+	.8byte	.LFE222-.LFB222
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3191
+	.uleb128 0x24
+	.8byte	.LVL1385
+	.4byte	0x31b7
+	.uleb128 0x24
+	.8byte	.LVL1386
+	.4byte	0x3191
+	.uleb128 0x24
+	.8byte	.LVL1387
+	.4byte	0x31b7
+	.uleb128 0x24
+	.8byte	.LVL1388
+	.4byte	0x3191
+	.uleb128 0x24
+	.8byte	.LVL1389
+	.4byte	0x21e7
+	.uleb128 0x24
+	.8byte	.LVL1390
+	.4byte	0x266c
+	.byte	0
+	.uleb128 0x4b
+	.4byte	.LASF492
+	.byte	0x2
+	.2byte	0x7dc
+	.byte	0x1
+	.4byte	0x31b7
+	.uleb128 0x34
+	.4byte	.LASF419
+	.byte	0x2
+	.2byte	0x7dc
+	.4byte	0x1423
+	.uleb128 0x35
+	.4byte	.LASF375
+	.byte	0x2
+	.2byte	0x7de
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF457
+	.byte	0x2
+	.2byte	0x677
+	.4byte	0x2f
+	.8byte	.LFB220
+	.8byte	.LFE220-.LFB220
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x35b2
+	.uleb128 0x3c
+	.4byte	.LASF393
+	.byte	0x2
+	.2byte	0x677
+	.4byte	0x1423
+	.4byte	.LLST225
+	.uleb128 0x3e
+	.4byte	.LASF458
+	.byte	0x2
+	.2byte	0x679
+	.4byte	0x2e8
+	.4byte	.LLST226
+	.uleb128 0x3e
+	.4byte	.LASF459
+	.byte	0x2
+	.2byte	0x679
+	.4byte	0x2e8
+	.4byte	.LLST227
+	.uleb128 0x35
+	.4byte	.LASF373
+	.byte	0x2
+	.2byte	0x67a
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF169
+	.byte	0x2
+	.2byte	0x67a
+	.4byte	0x2e8
+	.4byte	.LLST228
+	.uleb128 0x35
+	.4byte	.LASF167
+	.byte	0x2
+	.2byte	0x67a
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF460
+	.byte	0x2
+	.2byte	0x67b
+	.4byte	0x2e8
+	.4byte	.LLST229
+	.uleb128 0x3e
+	.4byte	.LASF461
+	.byte	0x2
+	.2byte	0x67b
+	.4byte	0x2e8
+	.4byte	.LLST230
+	.uleb128 0x35
+	.4byte	.LASF375
+	.byte	0x2
+	.2byte	0x67c
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF462
+	.byte	0x2
+	.2byte	0x67d
+	.4byte	0x2f
+	.4byte	.LLST231
+	.uleb128 0x35
+	.4byte	.LASF463
+	.byte	0x2
+	.2byte	0x67d
+	.4byte	0x2f
+	.uleb128 0x35
+	.4byte	.LASF352
+	.byte	0x2
+	.2byte	0x67e
+	.4byte	0x2e8
+	.uleb128 0x3d
+	.string	"n"
+	.byte	0x2
+	.2byte	0x67e
+	.4byte	0x2e8
+	.4byte	.LLST232
+	.uleb128 0x36
+	.string	"req"
+	.byte	0x2
+	.2byte	0x67e
+	.4byte	0x2e8
+	.uleb128 0x3d
+	.string	"lpa"
+	.byte	0x2
+	.2byte	0x67f
+	.4byte	0x2f3
+	.4byte	.LLST233
+	.uleb128 0x3e
+	.4byte	.LASF443
+	.byte	0x2
+	.2byte	0x67f
+	.4byte	0x2f3
+	.4byte	.LLST234
+	.uleb128 0x3e
+	.4byte	.LASF403
+	.byte	0x2
+	.2byte	0x67f
+	.4byte	0x2f3
+	.4byte	.LLST235
+	.uleb128 0x3e
+	.4byte	.LASF395
+	.byte	0x2
+	.2byte	0x67f
+	.4byte	0x2f3
+	.4byte	.LLST236
+	.uleb128 0x3e
+	.4byte	.LASF409
+	.byte	0x2
+	.2byte	0x680
+	.4byte	0x2e8
+	.4byte	.LLST237
+	.uleb128 0x3e
+	.4byte	.LASF464
+	.byte	0x2
+	.2byte	0x680
+	.4byte	0x2e8
+	.4byte	.LLST238
+	.uleb128 0x3e
+	.4byte	.LASF465
+	.byte	0x2
+	.2byte	0x681
+	.4byte	0x2f3
+	.4byte	.LLST239
+	.uleb128 0x35
+	.4byte	.LASF466
+	.byte	0x2
+	.2byte	0x682
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF377
+	.byte	0x2
+	.2byte	0x683
+	.4byte	0x1f4b
+	.uleb128 0x35
+	.4byte	.LASF467
+	.byte	0x2
+	.2byte	0x684
+	.4byte	0x2f3
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x35c2
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.4208
+	.uleb128 0x41
+	.4byte	.LASF469
+	.byte	0x2
+	.2byte	0x713
+	.8byte	.L1016
+	.uleb128 0x41
+	.4byte	.LASF399
+	.byte	0x2
+	.2byte	0x71b
+	.8byte	.L1028
+	.uleb128 0x41
+	.4byte	.LASF470
+	.byte	0x2
+	.2byte	0x7ce
+	.8byte	.L1034
+	.uleb128 0x37
+	.4byte	.LASF471
+	.byte	0x2
+	.2byte	0x7d8
+	.uleb128 0x4c
+	.8byte	.LBB263
+	.8byte	.LBE263-.LBB263
+	.4byte	0x33b9
+	.uleb128 0x35
+	.4byte	.LASF472
+	.byte	0x2
+	.2byte	0x6eb
+	.4byte	0x2f3
+	.uleb128 0x35
+	.4byte	.LASF473
+	.byte	0x2
+	.2byte	0x6ec
+	.4byte	0x2f3
+	.uleb128 0x24
+	.8byte	.LVL1071
+	.4byte	0x1d0d
+	.byte	0
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x210
+	.4byte	0x344b
+	.uleb128 0x3e
+	.4byte	.LASF474
+	.byte	0x2
+	.2byte	0x746
+	.4byte	0x2f3
+	.4byte	.LLST240
+	.uleb128 0x3e
+	.4byte	.LASF475
+	.byte	0x2
+	.2byte	0x747
+	.4byte	0x2f3
+	.4byte	.LLST241
+	.uleb128 0x24
+	.8byte	.LVL1096
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL1098
+	.4byte	0x266c
+	.uleb128 0x24
+	.8byte	.LVL1107
+	.4byte	0x3fc5
+	.uleb128 0x24
+	.8byte	.LVL1110
+	.4byte	0x4cfe
+	.uleb128 0x24
+	.8byte	.LVL1112
+	.4byte	0x35c7
+	.uleb128 0x24
+	.8byte	.LVL1113
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL1115
+	.4byte	0x4cfe
+	.uleb128 0x24
+	.8byte	.LVL1116
+	.4byte	0x4cfe
+	.byte	0
+	.uleb128 0x4c
+	.8byte	.LBB267
+	.8byte	.LBE267-.LBB267
+	.4byte	0x34a0
+	.uleb128 0x35
+	.4byte	.LASF476
+	.byte	0x2
+	.2byte	0x785
+	.4byte	0x2f3
+	.uleb128 0x35
+	.4byte	.LASF475
+	.byte	0x2
+	.2byte	0x786
+	.4byte	0x2f3
+	.uleb128 0x24
+	.8byte	.LVL1123
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL1124
+	.4byte	0x4cfe
+	.uleb128 0x24
+	.8byte	.LVL1125
+	.4byte	0x3fc5
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL1039
+	.4byte	0x4c53
+	.uleb128 0x24
+	.8byte	.LVL1041
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL1045
+	.4byte	0x4d87
+	.uleb128 0x24
+	.8byte	.LVL1050
+	.4byte	0x36a2
+	.uleb128 0x24
+	.8byte	.LVL1054
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1057
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1060
+	.4byte	0x4cfe
+	.uleb128 0x24
+	.8byte	.LVL1073
+	.4byte	0x3ce5
+	.uleb128 0x24
+	.8byte	.LVL1077
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL1082
+	.4byte	0x4d87
+	.uleb128 0x24
+	.8byte	.LVL1087
+	.4byte	0x266c
+	.uleb128 0x24
+	.8byte	.LVL1090
+	.4byte	0x4cfe
+	.uleb128 0x24
+	.8byte	.LVL1091
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1094
+	.4byte	0x3fc5
+	.uleb128 0x24
+	.8byte	.LVL1095
+	.4byte	0x4cfe
+	.uleb128 0x24
+	.8byte	.LVL1100
+	.4byte	0x4d4b
+	.uleb128 0x24
+	.8byte	.LVL1104
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1119
+	.4byte	0x3fc5
+	.uleb128 0x24
+	.8byte	.LVL1120
+	.4byte	0x4d4b
+	.uleb128 0x24
+	.8byte	.LVL1127
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1131
+	.4byte	0x266c
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x35c2
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x15
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x35b2
+	.uleb128 0x49
+	.4byte	.LASF477
+	.byte	0x2
+	.2byte	0x65b
+	.8byte	.LFB219
+	.8byte	.LFE219-.LFB219
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x36a2
+	.uleb128 0x46
+	.string	"lpa"
+	.byte	0x2
+	.2byte	0x65b
+	.4byte	0x2f3
+	.4byte	.LLST157
+	.uleb128 0x3c
+	.4byte	.LASF443
+	.byte	0x2
+	.2byte	0x65b
+	.4byte	0x2f3
+	.4byte	.LLST158
+	.uleb128 0x3e
+	.4byte	.LASF409
+	.byte	0x2
+	.2byte	0x65d
+	.4byte	0x2e8
+	.4byte	.LLST159
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x2742
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.4174
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0xf0
+	.4byte	0x3687
+	.uleb128 0x3d
+	.string	"i"
+	.byte	0x2
+	.2byte	0x661
+	.4byte	0x2e8
+	.4byte	.LLST160
+	.uleb128 0x3e
+	.4byte	.LASF389
+	.byte	0x2
+	.2byte	0x662
+	.4byte	0x2e8
+	.4byte	.LLST161
+	.uleb128 0x3e
+	.4byte	.LASF90
+	.byte	0x2
+	.2byte	0x663
+	.4byte	0x2e8
+	.4byte	.LLST162
+	.uleb128 0x24
+	.8byte	.LVL677
+	.4byte	0x480c
+	.uleb128 0x24
+	.8byte	.LVL678
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL679
+	.4byte	0x49ad
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL670
+	.4byte	0x4d4b
+	.uleb128 0x24
+	.8byte	.LVL683
+	.4byte	0x3fc5
+	.byte	0
+	.uleb128 0x49
+	.4byte	.LASF478
+	.byte	0x2
+	.2byte	0x647
+	.8byte	.LFB218
+	.8byte	.LFE218-.LFB218
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x36fb
+	.uleb128 0x4d
+	.4byte	.LASF393
+	.byte	0x2
+	.2byte	0x647
+	.4byte	0x1423
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x3c
+	.4byte	.LASF167
+	.byte	0x2
+	.2byte	0x647
+	.4byte	0x2e8
+	.4byte	.LLST55
+	.uleb128 0x3c
+	.4byte	.LASF169
+	.byte	0x2
+	.2byte	0x647
+	.4byte	0x2e8
+	.4byte	.LLST56
+	.uleb128 0x35
+	.4byte	.LASF373
+	.byte	0x2
+	.2byte	0x649
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF479
+	.byte	0x2
+	.2byte	0x63e
+	.4byte	0x2f
+	.8byte	.LFB217
+	.8byte	.LFE217-.LFB217
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3738
+	.uleb128 0x24
+	.8byte	.LVL800
+	.4byte	0x3738
+	.uleb128 0x24
+	.8byte	.LVL801
+	.4byte	0x37b1
+	.byte	0
+	.uleb128 0x49
+	.4byte	.LASF480
+	.byte	0x2
+	.2byte	0x627
+	.8byte	.LFB216
+	.8byte	.LFE216-.LFB216
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3781
+	.uleb128 0x3e
+	.4byte	.LASF116
+	.byte	0x2
+	.2byte	0x629
+	.4byte	0x2e8
+	.4byte	.LLST182
+	.uleb128 0x24
+	.8byte	.LVL793
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL794
+	.4byte	0x1a1d
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF481
+	.byte	0x2
+	.2byte	0x617
+	.4byte	0x2f
+	.8byte	.LFB215
+	.8byte	.LFE215-.LFB215
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x37b1
+	.uleb128 0x24
+	.8byte	.LVL792
+	.4byte	0x37b1
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF482
+	.byte	0x2
+	.2byte	0x5b9
+	.4byte	0x2f
+	.8byte	.LFB214
+	.8byte	.LFE214-.LFB214
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x38f1
+	.uleb128 0x3c
+	.4byte	.LASF483
+	.byte	0x2
+	.2byte	0x5b9
+	.4byte	0x38f1
+	.4byte	.LLST173
+	.uleb128 0x3e
+	.4byte	.LASF484
+	.byte	0x2
+	.2byte	0x5bb
+	.4byte	0x309
+	.4byte	.LLST174
+	.uleb128 0x35
+	.4byte	.LASF82
+	.byte	0x2
+	.2byte	0x5bb
+	.4byte	0x309
+	.uleb128 0x3e
+	.4byte	.LASF485
+	.byte	0x2
+	.2byte	0x5bc
+	.4byte	0x309
+	.4byte	.LLST175
+	.uleb128 0x3e
+	.4byte	.LASF116
+	.byte	0x2
+	.2byte	0x5bd
+	.4byte	0x2e8
+	.4byte	.LLST176
+	.uleb128 0x3e
+	.4byte	.LASF486
+	.byte	0x2
+	.2byte	0x5be
+	.4byte	0x520
+	.4byte	.LLST177
+	.uleb128 0x3e
+	.4byte	.LASF95
+	.byte	0x2
+	.2byte	0x5bf
+	.4byte	0x617
+	.4byte	.LLST178
+	.uleb128 0x3e
+	.4byte	.LASF96
+	.byte	0x2
+	.2byte	0x5c0
+	.4byte	0x520
+	.4byte	.LLST179
+	.uleb128 0x3e
+	.4byte	.LASF92
+	.byte	0x2
+	.2byte	0x5c1
+	.4byte	0x2e8
+	.4byte	.LLST180
+	.uleb128 0x3e
+	.4byte	.LASF487
+	.byte	0x2
+	.2byte	0x5c2
+	.4byte	0x2e8
+	.4byte	.LLST181
+	.uleb128 0x35
+	.4byte	.LASF488
+	.byte	0x2
+	.2byte	0x5c3
+	.4byte	0x38f7
+	.uleb128 0x24
+	.8byte	.LVL752
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL760
+	.4byte	0x4c53
+	.uleb128 0x24
+	.8byte	.LVL766
+	.4byte	0x44ee
+	.uleb128 0x24
+	.8byte	.LVL767
+	.4byte	0x4496
+	.uleb128 0x24
+	.8byte	.LVL768
+	.4byte	0x439d
+	.uleb128 0x24
+	.8byte	.LVL769
+	.4byte	0x439d
+	.uleb128 0x24
+	.8byte	.LVL777
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL781
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL784
+	.4byte	0x1d0d
+	.byte	0
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x56e
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x79f
+	.uleb128 0x32
+	.4byte	.LASF489
+	.byte	0x2
+	.2byte	0x54f
+	.4byte	0x2f
+	.8byte	.LFB213
+	.8byte	.LFE213-.LFB213
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x39ec
+	.uleb128 0x3e
+	.4byte	.LASF485
+	.byte	0x2
+	.2byte	0x551
+	.4byte	0x309
+	.4byte	.LLST329
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x1d08
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.4111
+	.uleb128 0x24
+	.8byte	.LVL1636
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL1639
+	.4byte	0x4c53
+	.uleb128 0x24
+	.8byte	.LVL1641
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1642
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1643
+	.4byte	0x19ba
+	.uleb128 0x24
+	.8byte	.LVL1644
+	.4byte	0x19ba
+	.uleb128 0x24
+	.8byte	.LVL1645
+	.4byte	0x19ba
+	.uleb128 0x24
+	.8byte	.LVL1646
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1647
+	.4byte	0x309d
+	.uleb128 0x24
+	.8byte	.LVL1648
+	.4byte	0x309d
+	.uleb128 0x24
+	.8byte	.LVL1649
+	.4byte	0x309d
+	.uleb128 0x24
+	.8byte	.LVL1650
+	.4byte	0x309d
+	.uleb128 0x24
+	.8byte	.LVL1651
+	.4byte	0x1d0d
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF490
+	.byte	0x2
+	.2byte	0x54a
+	.4byte	0x2f
+	.8byte	.LFB212
+	.8byte	.LFE212-.LFB212
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3a1f
+	.uleb128 0x3c
+	.4byte	.LASF491
+	.byte	0x2
+	.2byte	0x54a
+	.4byte	0x2e8
+	.4byte	.LLST54
+	.byte	0
+	.uleb128 0x4b
+	.4byte	.LASF493
+	.byte	0x2
+	.2byte	0x542
+	.byte	0x1
+	.4byte	0x3a45
+	.uleb128 0x34
+	.4byte	.LASF491
+	.byte	0x2
+	.2byte	0x542
+	.4byte	0x2e8
+	.uleb128 0x34
+	.4byte	.LASF369
+	.byte	0x2
+	.2byte	0x542
+	.4byte	0x2f
+	.byte	0
+	.uleb128 0x3b
+	.4byte	.LASF495
+	.byte	0x2
+	.2byte	0x535
+	.4byte	0x2f
+	.byte	0x1
+	.uleb128 0x32
+	.4byte	.LASF496
+	.byte	0x2
+	.2byte	0x446
+	.4byte	0x2f
+	.8byte	.LFB209
+	.8byte	.LFE209-.LFB209
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3b9a
+	.uleb128 0x35
+	.4byte	.LASF373
+	.byte	0x2
+	.2byte	0x448
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF497
+	.byte	0x2
+	.2byte	0x448
+	.4byte	0x2e8
+	.4byte	.LLST170
+	.uleb128 0x35
+	.4byte	.LASF175
+	.byte	0x2
+	.2byte	0x449
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF352
+	.byte	0x2
+	.2byte	0x449
+	.4byte	0x2e8
+	.4byte	.LLST171
+	.uleb128 0x36
+	.string	"i"
+	.byte	0x2
+	.2byte	0x44a
+	.4byte	0x309
+	.uleb128 0x36
+	.string	"j"
+	.byte	0x2
+	.2byte	0x44a
+	.4byte	0x309
+	.uleb128 0x3e
+	.4byte	.LASF498
+	.byte	0x2
+	.2byte	0x44b
+	.4byte	0x38f7
+	.4byte	.LLST172
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x2df8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.4054
+	.uleb128 0x24
+	.8byte	.LVL720
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL721
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL722
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL723
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL724
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL726
+	.4byte	0x4dc3
+	.uleb128 0x24
+	.8byte	.LVL727
+	.4byte	0x52d4
+	.uleb128 0x24
+	.8byte	.LVL733
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL734
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL735
+	.4byte	0x4b47
+	.uleb128 0x24
+	.8byte	.LVL736
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL737
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL738
+	.4byte	0x4b47
+	.uleb128 0x24
+	.8byte	.LVL740
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF499
+	.byte	0x2
+	.2byte	0x3eb
+	.4byte	0x2f
+	.8byte	.LFB208
+	.8byte	.LFE208-.LFB208
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3c93
+	.uleb128 0x3e
+	.4byte	.LASF83
+	.byte	0x2
+	.2byte	0x3ed
+	.4byte	0x2e8
+	.4byte	.LLST262
+	.uleb128 0x35
+	.4byte	.LASF500
+	.byte	0x2
+	.2byte	0x3ee
+	.4byte	0x3c93
+	.uleb128 0x3e
+	.4byte	.LASF501
+	.byte	0x2
+	.2byte	0x3ef
+	.4byte	0x2e8
+	.4byte	.LLST263
+	.uleb128 0x37
+	.4byte	.LASF502
+	.byte	0x2
+	.2byte	0x41c
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x1d08
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.4032
+	.uleb128 0x24
+	.8byte	.LVL1255
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL1256
+	.4byte	0x19ba
+	.uleb128 0x24
+	.8byte	.LVL1257
+	.4byte	0x19ba
+	.uleb128 0x24
+	.8byte	.LVL1258
+	.4byte	0x19ba
+	.uleb128 0x24
+	.8byte	.LVL1259
+	.4byte	0x3d6b
+	.uleb128 0x24
+	.8byte	.LVL1260
+	.4byte	0x1bdb
+	.uleb128 0x24
+	.8byte	.LVL1261
+	.4byte	0x49f7
+	.uleb128 0x24
+	.8byte	.LVL1262
+	.4byte	0x1bdb
+	.uleb128 0x24
+	.8byte	.LVL1263
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1266
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1267
+	.4byte	0x4b47
+	.byte	0
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x7f7
+	.uleb128 0x4b
+	.4byte	.LASF503
+	.byte	0x2
+	.2byte	0x3b2
+	.byte	0x1
+	.4byte	0x3ce5
+	.uleb128 0x39
+	.uleb128 0x36
+	.string	"lpa"
+	.byte	0x2
+	.2byte	0x3b7
+	.4byte	0x2f3
+	.uleb128 0x36
+	.string	"ppa"
+	.byte	0x2
+	.2byte	0x3b8
+	.4byte	0x2f3
+	.uleb128 0x35
+	.4byte	.LASF504
+	.byte	0x2
+	.2byte	0x3b9
+	.4byte	0x2f3
+	.uleb128 0x35
+	.4byte	.LASF447
+	.byte	0x2
+	.2byte	0x3ba
+	.4byte	0x314
+	.uleb128 0x35
+	.4byte	.LASF377
+	.byte	0x2
+	.2byte	0x3bb
+	.4byte	0x1f4b
+	.byte	0
+	.byte	0
+	.uleb128 0x49
+	.4byte	.LASF505
+	.byte	0x2
+	.2byte	0x380
+	.8byte	.LFB206
+	.8byte	.LFE206-.LFB206
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3d6b
+	.uleb128 0x3c
+	.4byte	.LASF483
+	.byte	0x2
+	.2byte	0x380
+	.4byte	0x38f1
+	.4byte	.LLST166
+	.uleb128 0x3d
+	.string	"ppa"
+	.byte	0x2
+	.2byte	0x382
+	.4byte	0x2f3
+	.4byte	.LLST167
+	.uleb128 0x3e
+	.4byte	.LASF102
+	.byte	0x2
+	.2byte	0x383
+	.4byte	0x2e8
+	.4byte	.LLST168
+	.uleb128 0x3e
+	.4byte	.LASF486
+	.byte	0x2
+	.2byte	0x384
+	.4byte	0x520
+	.4byte	.LLST169
+	.uleb128 0x24
+	.8byte	.LVL714
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL715
+	.4byte	0x41b4
+	.uleb128 0x24
+	.8byte	.LVL718
+	.4byte	0x1a1d
+	.byte	0
+	.uleb128 0x4b
+	.4byte	.LASF506
+	.byte	0x2
+	.2byte	0x371
+	.byte	0x1
+	.4byte	0x3d8f
+	.uleb128 0x34
+	.4byte	.LASF180
+	.byte	0x2
+	.2byte	0x371
+	.4byte	0x2f3
+	.uleb128 0x36
+	.string	"i"
+	.byte	0x2
+	.2byte	0x373
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF507
+	.byte	0x2
+	.2byte	0x35c
+	.4byte	0x2f
+	.8byte	.LFB204
+	.8byte	.LFE204-.LFB204
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3dec
+	.uleb128 0x3c
+	.4byte	.LASF508
+	.byte	0x2
+	.2byte	0x35c
+	.4byte	0x2f3
+	.4byte	.LLST254
+	.uleb128 0x3e
+	.4byte	.LASF509
+	.byte	0x2
+	.2byte	0x35e
+	.4byte	0x2f3
+	.4byte	.LLST255
+	.uleb128 0x24
+	.8byte	.LVL1223
+	.4byte	0x3ed5
+	.uleb128 0x24
+	.8byte	.LVL1224
+	.4byte	0x2fa7
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF510
+	.byte	0x2
+	.2byte	0x336
+	.4byte	0x2f3
+	.8byte	.LFB203
+	.8byte	.LFE203-.LFB203
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3ecf
+	.uleb128 0x3c
+	.4byte	.LASF511
+	.byte	0x2
+	.2byte	0x336
+	.4byte	0x2f3
+	.4byte	.LLST256
+	.uleb128 0x3c
+	.4byte	.LASF512
+	.byte	0x2
+	.2byte	0x336
+	.4byte	0x2f3
+	.4byte	.LLST257
+	.uleb128 0x3c
+	.4byte	.LASF513
+	.byte	0x2
+	.2byte	0x336
+	.4byte	0x3ecf
+	.4byte	.LLST258
+	.uleb128 0x3d
+	.string	"len"
+	.byte	0x2
+	.2byte	0x338
+	.4byte	0x2e8
+	.4byte	.LLST259
+	.uleb128 0x35
+	.4byte	.LASF514
+	.byte	0x2
+	.2byte	0x338
+	.4byte	0x2e8
+	.uleb128 0x3d
+	.string	"ppn"
+	.byte	0x2
+	.2byte	0x339
+	.4byte	0x2f3
+	.4byte	.LLST260
+	.uleb128 0x1f
+	.4byte	.LASF515
+	.byte	0x2
+	.2byte	0x33a
+	.4byte	0x2f3
+	.uleb128 0x1
+	.byte	0x66
+	.uleb128 0x4a
+	.string	"req"
+	.byte	0x2
+	.2byte	0x33b
+	.4byte	0x314
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -96
+	.uleb128 0x3e
+	.4byte	.LASF516
+	.byte	0x2
+	.2byte	0x33c
+	.4byte	0x2f3
+	.4byte	.LLST261
+	.uleb128 0x1f
+	.4byte	.LASF348
+	.byte	0x2
+	.2byte	0x33d
+	.4byte	0x1b29
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -64
+	.uleb128 0x24
+	.8byte	.LVL1241
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL1242
+	.4byte	0x19ba
+	.uleb128 0x24
+	.8byte	.LVL1246
+	.4byte	0x1a1d
+	.byte	0
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x2dd
+	.uleb128 0x32
+	.4byte	.LASF517
+	.byte	0x2
+	.2byte	0x311
+	.4byte	0x2f3
+	.8byte	.LFB202
+	.8byte	.LFE202-.LFB202
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x3fc5
+	.uleb128 0x3c
+	.4byte	.LASF511
+	.byte	0x2
+	.2byte	0x311
+	.4byte	0x2f3
+	.4byte	.LLST248
+	.uleb128 0x3c
+	.4byte	.LASF512
+	.byte	0x2
+	.2byte	0x311
+	.4byte	0x2f3
+	.4byte	.LLST249
+	.uleb128 0x3c
+	.4byte	.LASF513
+	.byte	0x2
+	.2byte	0x311
+	.4byte	0x3ecf
+	.4byte	.LLST250
+	.uleb128 0x3d
+	.string	"len"
+	.byte	0x2
+	.2byte	0x313
+	.4byte	0x2e8
+	.4byte	.LLST251
+	.uleb128 0x35
+	.4byte	.LASF514
+	.byte	0x2
+	.2byte	0x313
+	.4byte	0x2e8
+	.uleb128 0x3d
+	.string	"ppn"
+	.byte	0x2
+	.2byte	0x314
+	.4byte	0x2f3
+	.4byte	.LLST252
+	.uleb128 0x1f
+	.4byte	.LASF515
+	.byte	0x2
+	.2byte	0x315
+	.4byte	0x2f3
+	.uleb128 0x1
+	.byte	0x69
+	.uleb128 0x4a
+	.string	"req"
+	.byte	0x2
+	.2byte	0x316
+	.4byte	0x314
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -96
+	.uleb128 0x3e
+	.4byte	.LASF516
+	.byte	0x2
+	.2byte	0x317
+	.4byte	0x2f3
+	.4byte	.LLST253
+	.uleb128 0x1f
+	.4byte	.LASF348
+	.byte	0x2
+	.2byte	0x318
+	.4byte	0x1b29
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -64
+	.uleb128 0x24
+	.8byte	.LVL1208
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL1209
+	.4byte	0x19ba
+	.uleb128 0x24
+	.8byte	.LVL1210
+	.4byte	0x41b4
+	.uleb128 0x24
+	.8byte	.LVL1213
+	.4byte	0x1a1d
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF518
+	.byte	0x2
+	.2byte	0x2f0
+	.4byte	0x2f
+	.8byte	.LFB201
+	.8byte	.LFE201-.LFB201
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x409f
+	.uleb128 0x46
+	.string	"lpn"
+	.byte	0x2
+	.2byte	0x2f0
+	.4byte	0x2f3
+	.4byte	.LLST151
+	.uleb128 0x46
+	.string	"ppn"
+	.byte	0x2
+	.2byte	0x2f0
+	.4byte	0x520
+	.4byte	.LLST152
+	.uleb128 0x3c
+	.4byte	.LASF519
+	.byte	0x2
+	.2byte	0x2f0
+	.4byte	0x2f
+	.4byte	.LLST153
+	.uleb128 0x3e
+	.4byte	.LASF520
+	.byte	0x2
+	.2byte	0x2f2
+	.4byte	0x2e8
+	.4byte	.LLST154
+	.uleb128 0x3e
+	.4byte	.LASF521
+	.byte	0x2
+	.2byte	0x2f2
+	.4byte	0x2e8
+	.4byte	.LLST155
+	.uleb128 0x3e
+	.4byte	.LASF522
+	.byte	0x2
+	.2byte	0x2f2
+	.4byte	0x2e8
+	.4byte	.LLST156
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x40af
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.3959
+	.uleb128 0x41
+	.4byte	.LASF523
+	.byte	0x2
+	.2byte	0x2fb
+	.8byte	.L638
+	.uleb128 0x24
+	.8byte	.LVL652
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL656
+	.4byte	0x40ff
+	.uleb128 0x24
+	.8byte	.LVL659
+	.4byte	0x4168
+	.uleb128 0x24
+	.8byte	.LVL660
+	.4byte	0x45b7
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x40af
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x8
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x409f
+	.uleb128 0x32
+	.4byte	.LASF524
+	.byte	0x2
+	.2byte	0x2e3
+	.4byte	0x2f
+	.8byte	.LFB200
+	.8byte	.LFE200-.LFB200
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x40ff
+	.uleb128 0x3d
+	.string	"i"
+	.byte	0x2
+	.2byte	0x2e5
+	.4byte	0x2e8
+	.4byte	.LLST224
+	.uleb128 0x24
+	.8byte	.LVL1019
+	.4byte	0x3c99
+	.uleb128 0x24
+	.8byte	.LVL1022
+	.4byte	0x4168
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF525
+	.byte	0x2
+	.2byte	0x2bb
+	.4byte	0x2e8
+	.8byte	.LFB199
+	.8byte	.LFE199-.LFB199
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4168
+	.uleb128 0x36
+	.string	"i"
+	.byte	0x2
+	.2byte	0x2bd
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF526
+	.byte	0x2
+	.2byte	0x2be
+	.4byte	0x2e8
+	.4byte	.LLST50
+	.uleb128 0x35
+	.4byte	.LASF527
+	.byte	0x2
+	.2byte	0x2bf
+	.4byte	0x2f3
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x35c2
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.3942
+	.uleb128 0x24
+	.8byte	.LVL159
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF528
+	.byte	0x2
+	.2byte	0x2b1
+	.4byte	0x2f
+	.8byte	.LFB198
+	.8byte	.LFE198-.LFB198
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x41b4
+	.uleb128 0x3c
+	.4byte	.LASF520
+	.byte	0x2
+	.2byte	0x2b1
+	.4byte	0x2e8
+	.4byte	.LLST150
+	.uleb128 0x35
+	.4byte	.LASF102
+	.byte	0x2
+	.2byte	0x2b3
+	.4byte	0x2f3
+	.uleb128 0x24
+	.8byte	.LVL646
+	.4byte	0x41b4
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF529
+	.byte	0x2
+	.2byte	0x276
+	.4byte	0x2f
+	.8byte	.LFB197
+	.8byte	.LFE197-.LFB197
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x42a9
+	.uleb128 0x3c
+	.4byte	.LASF483
+	.byte	0x2
+	.2byte	0x276
+	.4byte	0x38f1
+	.4byte	.LLST140
+	.uleb128 0x3c
+	.4byte	.LASF102
+	.byte	0x2
+	.2byte	0x276
+	.4byte	0x2f3
+	.4byte	.LLST141
+	.uleb128 0x3c
+	.4byte	.LASF513
+	.byte	0x2
+	.2byte	0x276
+	.4byte	0x520
+	.4byte	.LLST142
+	.uleb128 0x35
+	.4byte	.LASF175
+	.byte	0x2
+	.2byte	0x278
+	.4byte	0x2f3
+	.uleb128 0x3e
+	.4byte	.LASF488
+	.byte	0x2
+	.2byte	0x279
+	.4byte	0x38f7
+	.4byte	.LLST143
+	.uleb128 0x3e
+	.4byte	.LASF501
+	.byte	0x2
+	.2byte	0x27a
+	.4byte	0x2e8
+	.4byte	.LLST144
+	.uleb128 0x37
+	.4byte	.LASF530
+	.byte	0x2
+	.2byte	0x27c
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x2742
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.3917
+	.uleb128 0x24
+	.8byte	.LVL610
+	.4byte	0x42a9
+	.uleb128 0x24
+	.8byte	.LVL611
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL612
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL613
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL616
+	.4byte	0x1bdb
+	.uleb128 0x24
+	.8byte	.LVL619
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL620
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF531
+	.byte	0x2
+	.2byte	0x246
+	.4byte	0x2f
+	.8byte	.LFB196
+	.8byte	.LFE196-.LFB196
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4388
+	.uleb128 0x3c
+	.4byte	.LASF483
+	.byte	0x2
+	.2byte	0x246
+	.4byte	0x38f1
+	.4byte	.LLST135
+	.uleb128 0x35
+	.4byte	.LASF175
+	.byte	0x2
+	.2byte	0x248
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF116
+	.byte	0x2
+	.2byte	0x248
+	.4byte	0x2e8
+	.4byte	.LLST136
+	.uleb128 0x3e
+	.4byte	.LASF532
+	.byte	0x2
+	.2byte	0x249
+	.4byte	0x2e8
+	.4byte	.LLST137
+	.uleb128 0x3e
+	.4byte	.LASF533
+	.byte	0x2
+	.2byte	0x24a
+	.4byte	0x617
+	.4byte	.LLST138
+	.uleb128 0x3e
+	.4byte	.LASF486
+	.byte	0x2
+	.2byte	0x24b
+	.4byte	0x520
+	.4byte	.LLST139
+	.uleb128 0x35
+	.4byte	.LASF488
+	.byte	0x2
+	.2byte	0x24c
+	.4byte	0x38f7
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x4398
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.3903
+	.uleb128 0x24
+	.8byte	.LVL588
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL589
+	.4byte	0x49f7
+	.uleb128 0x24
+	.8byte	.LVL596
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL601
+	.4byte	0x1bdb
+	.uleb128 0x24
+	.8byte	.LVL602
+	.4byte	0x439d
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x4398
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x1e
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x4388
+	.uleb128 0x32
+	.4byte	.LASF534
+	.byte	0x2
+	.2byte	0x218
+	.4byte	0x2f
+	.8byte	.LFB195
+	.8byte	.LFE195-.LFB195
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4496
+	.uleb128 0x3c
+	.4byte	.LASF483
+	.byte	0x2
+	.2byte	0x218
+	.4byte	0x38f1
+	.4byte	.LLST145
+	.uleb128 0x3e
+	.4byte	.LASF535
+	.byte	0x2
+	.2byte	0x21a
+	.4byte	0x2e8
+	.4byte	.LLST146
+	.uleb128 0x35
+	.4byte	.LASF536
+	.byte	0x2
+	.2byte	0x21b
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF116
+	.byte	0x2
+	.2byte	0x21c
+	.4byte	0x2e8
+	.4byte	.LLST147
+	.uleb128 0x3e
+	.4byte	.LASF533
+	.byte	0x2
+	.2byte	0x21d
+	.4byte	0x617
+	.4byte	.LLST148
+	.uleb128 0x3e
+	.4byte	.LASF486
+	.byte	0x2
+	.2byte	0x21e
+	.4byte	0x520
+	.4byte	.LLST149
+	.uleb128 0x35
+	.4byte	.LASF488
+	.byte	0x2
+	.2byte	0x21f
+	.4byte	0x38f7
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x1d08
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.3889
+	.uleb128 0x24
+	.8byte	.LVL628
+	.4byte	0x44ee
+	.uleb128 0x24
+	.8byte	.LVL630
+	.4byte	0x4496
+	.uleb128 0x24
+	.8byte	.LVL632
+	.4byte	0x4b47
+	.uleb128 0x24
+	.8byte	.LVL634
+	.4byte	0x4496
+	.uleb128 0x24
+	.8byte	.LVL639
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL640
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL643
+	.4byte	0x41b4
+	.byte	0
+	.uleb128 0x33
+	.4byte	.LASF537
+	.byte	0x2
+	.2byte	0x203
+	.4byte	0x2f
+	.byte	0x1
+	.4byte	0x44d9
+	.uleb128 0x34
+	.4byte	.LASF483
+	.byte	0x2
+	.2byte	0x203
+	.4byte	0x38f1
+	.uleb128 0x35
+	.4byte	.LASF538
+	.byte	0x2
+	.2byte	0x205
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF533
+	.byte	0x2
+	.2byte	0x206
+	.4byte	0x617
+	.uleb128 0x38
+	.4byte	.LASF357
+	.4byte	0x44e9
+	.4byte	.LASF537
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x44e9
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x19
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x44d9
+	.uleb128 0x32
+	.4byte	.LASF539
+	.byte	0x2
+	.2byte	0x1db
+	.4byte	0x2f
+	.8byte	.LFB193
+	.8byte	.LFE193-.LFB193
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x45b7
+	.uleb128 0x3c
+	.4byte	.LASF483
+	.byte	0x2
+	.2byte	0x1db
+	.4byte	0x38f1
+	.4byte	.LLST127
+	.uleb128 0x3e
+	.4byte	.LASF533
+	.byte	0x2
+	.2byte	0x1dd
+	.4byte	0x617
+	.4byte	.LLST128
+	.uleb128 0x3e
+	.4byte	.LASF486
+	.byte	0x2
+	.2byte	0x1de
+	.4byte	0x520
+	.4byte	.LLST129
+	.uleb128 0x3e
+	.4byte	.LASF540
+	.byte	0x2
+	.2byte	0x1df
+	.4byte	0x617
+	.4byte	.LLST130
+	.uleb128 0x3e
+	.4byte	.LASF175
+	.byte	0x2
+	.2byte	0x1e0
+	.4byte	0x2e8
+	.4byte	.LLST131
+	.uleb128 0x3e
+	.4byte	.LASF116
+	.byte	0x2
+	.2byte	0x1e0
+	.4byte	0x2e8
+	.4byte	.LLST132
+	.uleb128 0x35
+	.4byte	.LASF538
+	.byte	0x2
+	.2byte	0x1e1
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF541
+	.byte	0x2
+	.2byte	0x1e2
+	.4byte	0x2e8
+	.4byte	.LLST133
+	.uleb128 0x3e
+	.4byte	.LASF536
+	.byte	0x2
+	.2byte	0x1e3
+	.4byte	0x2e8
+	.4byte	.LLST134
+	.uleb128 0x24
+	.8byte	.LVL567
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL583
+	.4byte	0x4b47
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF542
+	.byte	0x2
+	.2byte	0x1b9
+	.4byte	0x2f
+	.8byte	.LFB192
+	.8byte	.LFE192-.LFB192
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4688
+	.uleb128 0x3c
+	.4byte	.LASF102
+	.byte	0x2
+	.2byte	0x1b9
+	.4byte	0x2e8
+	.4byte	.LLST123
+	.uleb128 0x3c
+	.4byte	.LASF520
+	.byte	0x2
+	.2byte	0x1b9
+	.4byte	0x2e8
+	.4byte	.LLST124
+	.uleb128 0x3e
+	.4byte	.LASF488
+	.byte	0x2
+	.2byte	0x1bb
+	.4byte	0x38f7
+	.4byte	.LLST125
+	.uleb128 0x3e
+	.4byte	.LASF543
+	.byte	0x2
+	.2byte	0x1bc
+	.4byte	0x2f3
+	.4byte	.LLST126
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x2742
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.3846
+	.uleb128 0x24
+	.8byte	.LVL545
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL550
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL557
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL559
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL560
+	.4byte	0x74c3
+	.uleb128 0x24
+	.8byte	.LVL561
+	.4byte	0x74c3
+	.uleb128 0x24
+	.8byte	.LVL562
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0x33
+	.4byte	.LASF544
+	.byte	0x2
+	.2byte	0x193
+	.4byte	0x2f
+	.byte	0x1
+	.4byte	0x4707
+	.uleb128 0x34
+	.4byte	.LASF429
+	.byte	0x2
+	.2byte	0x193
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF545
+	.byte	0x2
+	.2byte	0x195
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF546
+	.byte	0x2
+	.2byte	0x196
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF547
+	.byte	0x2
+	.2byte	0x197
+	.4byte	0x2f3
+	.uleb128 0x35
+	.4byte	.LASF548
+	.byte	0x2
+	.2byte	0x199
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF549
+	.byte	0x2
+	.2byte	0x19a
+	.4byte	0x2f3
+	.uleb128 0x35
+	.4byte	.LASF432
+	.byte	0x2
+	.2byte	0x19b
+	.4byte	0x134b
+	.uleb128 0x35
+	.4byte	.LASF550
+	.byte	0x2
+	.2byte	0x19b
+	.4byte	0x134b
+	.uleb128 0x38
+	.4byte	.LASF357
+	.4byte	0x35c2
+	.4byte	.LASF544
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF551
+	.byte	0x2
+	.2byte	0x17f
+	.4byte	0x2f
+	.8byte	.LFB190
+	.8byte	.LFE190-.LFB190
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4756
+	.uleb128 0x3c
+	.4byte	.LASF90
+	.byte	0x2
+	.2byte	0x17f
+	.4byte	0x2e8
+	.4byte	.LLST42
+	.uleb128 0x35
+	.4byte	.LASF429
+	.byte	0x2
+	.2byte	0x181
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF432
+	.byte	0x2
+	.2byte	0x182
+	.4byte	0x134b
+	.4byte	.LLST43
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF552
+	.byte	0x2
+	.2byte	0x17a
+	.4byte	0x2f
+	.8byte	.LFB189
+	.8byte	.LFE189-.LFB189
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4796
+	.uleb128 0x3c
+	.4byte	.LASF553
+	.byte	0x2
+	.2byte	0x17a
+	.4byte	0x4796
+	.4byte	.LLST41
+	.uleb128 0x24
+	.8byte	.LVL127
+	.4byte	0x479c
+	.byte	0
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x134b
+	.uleb128 0x32
+	.4byte	.LASF554
+	.byte	0x2
+	.2byte	0x167
+	.4byte	0x2f
+	.8byte	.LFB188
+	.8byte	.LFE188-.LFB188
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x480c
+	.uleb128 0x3c
+	.4byte	.LASF553
+	.byte	0x2
+	.2byte	0x167
+	.4byte	0x4796
+	.4byte	.LLST37
+	.uleb128 0x3c
+	.4byte	.LASF90
+	.byte	0x2
+	.2byte	0x167
+	.4byte	0x2e8
+	.4byte	.LLST38
+	.uleb128 0x3e
+	.4byte	.LASF429
+	.byte	0x2
+	.2byte	0x169
+	.4byte	0x2e8
+	.4byte	.LLST39
+	.uleb128 0x3e
+	.4byte	.LASF432
+	.byte	0x2
+	.2byte	0x16a
+	.4byte	0x134b
+	.4byte	.LLST40
+	.uleb128 0x24
+	.8byte	.LVL120
+	.4byte	0x480c
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF555
+	.byte	0x2
+	.2byte	0x14c
+	.4byte	0x2f
+	.8byte	.LFB187
+	.8byte	.LFE187-.LFB187
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x488b
+	.uleb128 0x3c
+	.4byte	.LASF553
+	.byte	0x2
+	.2byte	0x14c
+	.4byte	0x4796
+	.4byte	.LLST34
+	.uleb128 0x3c
+	.4byte	.LASF429
+	.byte	0x2
+	.2byte	0x14c
+	.4byte	0x2e8
+	.4byte	.LLST35
+	.uleb128 0x3e
+	.4byte	.LASF432
+	.byte	0x2
+	.2byte	0x14e
+	.4byte	0x134b
+	.4byte	.LLST36
+	.uleb128 0x35
+	.4byte	.LASF556
+	.byte	0x2
+	.2byte	0x14e
+	.4byte	0x134b
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x489b
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.3805
+	.uleb128 0x24
+	.8byte	.LVL111
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x489b
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0x10
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x488b
+	.uleb128 0x32
+	.4byte	.LASF557
+	.byte	0x2
+	.2byte	0x11b
+	.4byte	0x2f
+	.8byte	.LFB186
+	.8byte	.LFE186-.LFB186
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4919
+	.uleb128 0x3c
+	.4byte	.LASF429
+	.byte	0x2
+	.2byte	0x11b
+	.4byte	0x2e8
+	.4byte	.LLST30
+	.uleb128 0x3e
+	.4byte	.LASF432
+	.byte	0x2
+	.2byte	0x11d
+	.4byte	0x134b
+	.4byte	.LLST31
+	.uleb128 0x1f
+	.4byte	.LASF556
+	.byte	0x2
+	.2byte	0x11d
+	.4byte	0x134b
+	.uleb128 0x1
+	.byte	0x51
+	.uleb128 0x3e
+	.4byte	.LASF558
+	.byte	0x2
+	.2byte	0x11e
+	.4byte	0x2e8
+	.4byte	.LLST32
+	.uleb128 0x35
+	.4byte	.LASF559
+	.byte	0x2
+	.2byte	0x11f
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF560
+	.byte	0x2
+	.2byte	0x120
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF561
+	.byte	0x2
+	.byte	0xd8
+	.4byte	0x2f
+	.8byte	.LFB185
+	.8byte	.LFE185-.LFB185
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x49ad
+	.uleb128 0x23
+	.4byte	.LASF429
+	.byte	0x2
+	.byte	0xd8
+	.4byte	0x2e8
+	.4byte	.LLST23
+	.uleb128 0x28
+	.4byte	.LASF432
+	.byte	0x2
+	.byte	0xda
+	.4byte	0x134b
+	.4byte	.LLST24
+	.uleb128 0x20
+	.4byte	.LASF556
+	.byte	0x2
+	.byte	0xda
+	.4byte	0x134b
+	.uleb128 0x1
+	.byte	0x51
+	.uleb128 0x28
+	.4byte	.LASF562
+	.byte	0x2
+	.byte	0xdb
+	.4byte	0x2e8
+	.4byte	.LLST25
+	.uleb128 0x28
+	.4byte	.LASF563
+	.byte	0x2
+	.byte	0xdc
+	.4byte	0x2e8
+	.4byte	.LLST26
+	.uleb128 0x28
+	.4byte	.LASF547
+	.byte	0x2
+	.byte	0xdd
+	.4byte	0x2f3
+	.4byte	.LLST27
+	.uleb128 0x28
+	.4byte	.LASF564
+	.byte	0x2
+	.byte	0xde
+	.4byte	0x2f3
+	.4byte	.LLST28
+	.uleb128 0x2c
+	.4byte	.LASF560
+	.byte	0x2
+	.byte	0xdf
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x4e
+	.4byte	.LASF565
+	.byte	0x2
+	.byte	0xb9
+	.byte	0x1
+	.4byte	0x49d2
+	.uleb128 0x2b
+	.4byte	.LASF429
+	.byte	0x2
+	.byte	0xb9
+	.4byte	0x2e8
+	.uleb128 0x38
+	.4byte	.LASF357
+	.4byte	0x489b
+	.4byte	.LASF565
+	.byte	0
+	.uleb128 0x4e
+	.4byte	.LASF566
+	.byte	0x2
+	.byte	0xb2
+	.byte	0x1
+	.4byte	0x49f7
+	.uleb128 0x2b
+	.4byte	.LASF429
+	.byte	0x2
+	.byte	0xb2
+	.4byte	0x2e8
+	.uleb128 0x38
+	.4byte	.LASF357
+	.4byte	0x489b
+	.4byte	.LASF566
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF567
+	.byte	0x2
+	.byte	0xa4
+	.4byte	0x2e8
+	.8byte	.LFB182
+	.8byte	.LFE182-.LFB182
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4a5e
+	.uleb128 0x43
+	.string	"tmp"
+	.byte	0x2
+	.byte	0xa6
+	.4byte	0x2e8
+	.4byte	.LLST22
+	.uleb128 0x4c
+	.8byte	.LBB174
+	.8byte	.LBE174-.LBB174
+	.4byte	0x4a46
+	.uleb128 0x29
+	.string	"Q"
+	.byte	0x2
+	.byte	0xa9
+	.4byte	0x4a5e
+	.byte	0
+	.uleb128 0x4f
+	.4byte	0x4c00
+	.8byte	.LBB172
+	.8byte	.LBE172-.LBB172
+	.byte	0x2
+	.byte	0xa8
+	.byte	0
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0xac3
+	.uleb128 0x22
+	.4byte	.LASF568
+	.byte	0x2
+	.byte	0x92
+	.4byte	0x2f
+	.8byte	.LFB181
+	.8byte	.LFE181-.LFB181
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4ac9
+	.uleb128 0x26
+	.string	"blk"
+	.byte	0x2
+	.byte	0x92
+	.4byte	0x2e8
+	.4byte	.LLST21
+	.uleb128 0x50
+	.string	"ret"
+	.byte	0x2
+	.byte	0x94
+	.4byte	0x2f
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x50
+	.string	"i"
+	.byte	0x2
+	.byte	0x95
+	.4byte	0x2f3
+	.uleb128 0x1
+	.byte	0x53
+	.uleb128 0x29
+	.string	"Q"
+	.byte	0x2
+	.byte	0x96
+	.4byte	0x4a5e
+	.uleb128 0x51
+	.4byte	0x4bf4
+	.8byte	.LBB168
+	.4byte	.Ldebug_ranges0+0x30
+	.byte	0x2
+	.byte	0x98
+	.byte	0
+	.uleb128 0x42
+	.4byte	.LASF569
+	.byte	0x2
+	.byte	0x73
+	.8byte	.LFB180
+	.8byte	.LFE180-.LFB180
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4b47
+	.uleb128 0x29
+	.string	"i"
+	.byte	0x2
+	.byte	0x75
+	.4byte	0x2e8
+	.uleb128 0x43
+	.string	"tmp"
+	.byte	0x2
+	.byte	0x75
+	.4byte	0x2e8
+	.4byte	.LLST18
+	.uleb128 0x29
+	.string	"j"
+	.byte	0x2
+	.byte	0x75
+	.4byte	0x2e8
+	.uleb128 0x28
+	.4byte	.LASF380
+	.byte	0x2
+	.byte	0x76
+	.4byte	0x2e8
+	.4byte	.LLST19
+	.uleb128 0x2c
+	.4byte	.LASF570
+	.byte	0x2
+	.byte	0x77
+	.4byte	0x2e8
+	.uleb128 0x28
+	.4byte	.LASF571
+	.byte	0x2
+	.byte	0x78
+	.4byte	0x2f3
+	.4byte	.LLST20
+	.uleb128 0x29
+	.string	"Q"
+	.byte	0x2
+	.byte	0x79
+	.4byte	0x4a5e
+	.uleb128 0x24
+	.8byte	.LVL56
+	.4byte	0x4d4b
+	.byte	0
+	.uleb128 0x42
+	.4byte	.LASF572
+	.byte	0x2
+	.byte	0x61
+	.8byte	.LFB179
+	.8byte	.LFE179-.LFB179
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4bf4
+	.uleb128 0x26
+	.string	"blk"
+	.byte	0x2
+	.byte	0x61
+	.4byte	0x2e8
+	.4byte	.LLST106
+	.uleb128 0x23
+	.4byte	.LASF573
+	.byte	0x2
+	.byte	0x61
+	.4byte	0x2e8
+	.4byte	.LLST107
+	.uleb128 0x4c
+	.8byte	.LBB217
+	.8byte	.LBE217-.LBB217
+	.4byte	0x4bdc
+	.uleb128 0x29
+	.string	"Q"
+	.byte	0x2
+	.byte	0x64
+	.4byte	0x4a5e
+	.uleb128 0x52
+	.8byte	.LBB218
+	.8byte	.LBE218-.LBB218
+	.uleb128 0x28
+	.4byte	.LASF574
+	.byte	0x2
+	.byte	0x66
+	.4byte	0x2e8
+	.4byte	.LLST108
+	.uleb128 0x24
+	.8byte	.LVL434
+	.4byte	0x4d4b
+	.uleb128 0x24
+	.8byte	.LVL436
+	.4byte	0x1b39
+	.byte	0
+	.byte	0
+	.uleb128 0x4f
+	.4byte	0x4bf4
+	.8byte	.LBB215
+	.8byte	.LBE215-.LBB215
+	.byte	0x2
+	.byte	0x63
+	.byte	0
+	.uleb128 0x53
+	.4byte	.LASF575
+	.byte	0x2
+	.byte	0x5c
+	.4byte	0x2e8
+	.byte	0x1
+	.uleb128 0x53
+	.4byte	.LASF576
+	.byte	0x2
+	.byte	0x57
+	.4byte	0x2e8
+	.byte	0x1
+	.uleb128 0x22
+	.4byte	.LASF577
+	.byte	0x2
+	.byte	0x4b
+	.4byte	0x2e8
+	.8byte	.LFB176
+	.8byte	.LFE176-.LFB176
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4c53
+	.uleb128 0x26
+	.string	"max"
+	.byte	0x2
+	.byte	0x4b
+	.4byte	0x2e8
+	.4byte	.LLST122
+	.uleb128 0x29
+	.string	"Q"
+	.byte	0x2
+	.byte	0x4d
+	.4byte	0x4a5e
+	.uleb128 0x24
+	.8byte	.LVL541
+	.4byte	0x1a1d
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF578
+	.byte	0x2
+	.byte	0x2e
+	.4byte	0x2f
+	.8byte	.LFB175
+	.8byte	.LFE175-.LFB175
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4cfe
+	.uleb128 0x23
+	.4byte	.LASF175
+	.byte	0x2
+	.byte	0x2e
+	.4byte	0x2f3
+	.4byte	.LLST93
+	.uleb128 0x23
+	.4byte	.LASF351
+	.byte	0x2
+	.byte	0x2e
+	.4byte	0x2f
+	.4byte	.LLST94
+	.uleb128 0x50
+	.string	"req"
+	.byte	0x2
+	.byte	0x30
+	.4byte	0x314
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -96
+	.uleb128 0x43
+	.string	"low"
+	.byte	0x2
+	.byte	0x31
+	.4byte	0x309
+	.4byte	.LLST95
+	.uleb128 0x28
+	.4byte	.LASF579
+	.byte	0x2
+	.byte	0x31
+	.4byte	0x309
+	.4byte	.LLST96
+	.uleb128 0x29
+	.string	"mid"
+	.byte	0x2
+	.byte	0x31
+	.4byte	0x309
+	.uleb128 0x20
+	.4byte	.LASF580
+	.byte	0x2
+	.byte	0x32
+	.4byte	0x1b29
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -64
+	.uleb128 0x2c
+	.4byte	.LASF581
+	.byte	0x2
+	.byte	0x33
+	.4byte	0x2e8
+	.uleb128 0x24
+	.8byte	.LVL393
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL400
+	.4byte	0x1d0d
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF582
+	.byte	0x2
+	.byte	0x1e
+	.4byte	0x2f3
+	.8byte	.LFB174
+	.8byte	.LFE174-.LFB174
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4d4b
+	.uleb128 0x23
+	.4byte	.LASF583
+	.byte	0x2
+	.byte	0x1e
+	.4byte	0x2f3
+	.4byte	.LLST16
+	.uleb128 0x23
+	.4byte	.LASF584
+	.byte	0x2
+	.byte	0x1e
+	.4byte	0x2f3
+	.4byte	.LLST17
+	.uleb128 0x50
+	.string	"ret"
+	.byte	0x2
+	.byte	0x20
+	.4byte	0x2f3
+	.uleb128 0x1
+	.byte	0x50
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF585
+	.byte	0x2
+	.byte	0x14
+	.4byte	0x2e8
+	.8byte	.LFB173
+	.8byte	.LFE173-.LFB173
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4d87
+	.uleb128 0x23
+	.4byte	.LASF375
+	.byte	0x2
+	.byte	0x14
+	.4byte	0x2e8
+	.4byte	.LLST15
+	.uleb128 0x2c
+	.4byte	.LASF497
+	.byte	0x2
+	.byte	0x16
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF586
+	.byte	0x2
+	.byte	0xc
+	.4byte	0x2e8
+	.8byte	.LFB172
+	.8byte	.LFE172-.LFB172
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4dc3
+	.uleb128 0x23
+	.4byte	.LASF375
+	.byte	0x2
+	.byte	0xc
+	.4byte	0x2e8
+	.4byte	.LLST14
+	.uleb128 0x2c
+	.4byte	.LASF373
+	.byte	0x2
+	.byte	0xe
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF587
+	.byte	0x2
+	.byte	0x4
+	.4byte	0x2e8
+	.8byte	.LFB171
+	.8byte	.LFE171-.LFB171
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4e0c
+	.uleb128 0x23
+	.4byte	.LASF373
+	.byte	0x2
+	.byte	0x4
+	.4byte	0x2e8
+	.4byte	.LLST13
+	.uleb128 0x45
+	.4byte	.LASF497
+	.byte	0x2
+	.byte	0x4
+	.4byte	0x2e8
+	.uleb128 0x1
+	.byte	0x51
+	.uleb128 0x2c
+	.4byte	.LASF389
+	.byte	0x2
+	.byte	0x6
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF588
+	.byte	0x4
+	.2byte	0x13c
+	.4byte	0x2fe
+	.8byte	.LFB170
+	.8byte	.LFE170-.LFB170
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x4f9a
+	.uleb128 0x3d
+	.string	"die"
+	.byte	0x4
+	.2byte	0x13e
+	.4byte	0x2f3
+	.4byte	.LLST246
+	.uleb128 0x36
+	.string	"blk"
+	.byte	0x4
+	.2byte	0x13f
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF360
+	.byte	0x4
+	.2byte	0x140
+	.4byte	0x2f3
+	.4byte	.LLST247
+	.uleb128 0x35
+	.4byte	.LASF589
+	.byte	0x4
+	.2byte	0x142
+	.4byte	0x4f9a
+	.uleb128 0x37
+	.4byte	.LASF590
+	.byte	0x4
+	.2byte	0x158
+	.uleb128 0x24
+	.8byte	.LVL1165
+	.4byte	0x514e
+	.uleb128 0x24
+	.8byte	.LVL1166
+	.4byte	0x4fa0
+	.uleb128 0x24
+	.8byte	.LVL1168
+	.4byte	0x52d4
+	.uleb128 0x24
+	.8byte	.LVL1169
+	.4byte	0x1ae5
+	.uleb128 0x24
+	.8byte	.LVL1170
+	.4byte	0x5333
+	.uleb128 0x24
+	.8byte	.LVL1173
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL1174
+	.4byte	0x19ba
+	.uleb128 0x24
+	.8byte	.LVL1175
+	.4byte	0x5333
+	.uleb128 0x24
+	.8byte	.LVL1176
+	.4byte	0x1a73
+	.uleb128 0x24
+	.8byte	.LVL1177
+	.4byte	0x525a
+	.uleb128 0x24
+	.8byte	.LVL1178
+	.4byte	0x52d4
+	.uleb128 0x24
+	.8byte	.LVL1179
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL1180
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL1183
+	.4byte	0x19ba
+	.uleb128 0x24
+	.8byte	.LVL1184
+	.4byte	0x1b39
+	.uleb128 0x24
+	.8byte	.LVL1185
+	.4byte	0x1bdb
+	.uleb128 0x24
+	.8byte	.LVL1186
+	.4byte	0x5333
+	.uleb128 0x24
+	.8byte	.LVL1187
+	.4byte	0x5333
+	.uleb128 0x24
+	.8byte	.LVL1188
+	.4byte	0x1b39
+	.uleb128 0x24
+	.8byte	.LVL1189
+	.4byte	0x5333
+	.uleb128 0x24
+	.8byte	.LVL1190
+	.4byte	0x5333
+	.uleb128 0x24
+	.8byte	.LVL1191
+	.4byte	0x5179
+	.uleb128 0x24
+	.8byte	.LVL1192
+	.4byte	0x5179
+	.byte	0
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x6e7
+	.uleb128 0x32
+	.4byte	.LASF591
+	.byte	0x4
+	.2byte	0x116
+	.4byte	0x2f
+	.8byte	.LFB169
+	.8byte	.LFE169-.LFB169
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x500c
+	.uleb128 0x3d
+	.string	"die"
+	.byte	0x4
+	.2byte	0x118
+	.4byte	0x2f3
+	.4byte	.LLST90
+	.uleb128 0x3d
+	.string	"blk"
+	.byte	0x4
+	.2byte	0x119
+	.4byte	0x2e8
+	.4byte	.LLST91
+	.uleb128 0x3e
+	.4byte	.LASF592
+	.byte	0x4
+	.2byte	0x11a
+	.4byte	0x2f3
+	.4byte	.LLST92
+	.uleb128 0x35
+	.4byte	.LASF589
+	.byte	0x4
+	.2byte	0x11b
+	.4byte	0x4f9a
+	.uleb128 0x24
+	.8byte	.LVL388
+	.4byte	0x1d0d
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF593
+	.byte	0x4
+	.byte	0xac
+	.4byte	0x2f
+	.8byte	.LFB168
+	.8byte	.LFE168-.LFB168
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x50ec
+	.uleb128 0x43
+	.string	"i"
+	.byte	0x4
+	.byte	0xae
+	.4byte	0x2f3
+	.4byte	.LLST243
+	.uleb128 0x43
+	.string	"blk"
+	.byte	0x4
+	.byte	0xaf
+	.4byte	0x2e8
+	.4byte	.LLST244
+	.uleb128 0x28
+	.4byte	.LASF485
+	.byte	0x4
+	.byte	0xb0
+	.4byte	0x309
+	.4byte	.LLST245
+	.uleb128 0x2c
+	.4byte	.LASF589
+	.byte	0x4
+	.byte	0xb1
+	.4byte	0x4f9a
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x50fc
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.3647
+	.uleb128 0x24
+	.8byte	.LVL1140
+	.4byte	0x514e
+	.uleb128 0x24
+	.8byte	.LVL1142
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL1143
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL1144
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL1146
+	.4byte	0x4c53
+	.uleb128 0x24
+	.8byte	.LVL1148
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1149
+	.4byte	0x629d
+	.uleb128 0x24
+	.8byte	.LVL1158
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL1162
+	.4byte	0x19ba
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x50fc
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0xa
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x50ec
+	.uleb128 0x22
+	.4byte	.LASF594
+	.byte	0x4
+	.byte	0x9c
+	.4byte	0x2e8
+	.8byte	.LFB167
+	.8byte	.LFE167-.LFB167
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x514e
+	.uleb128 0x43
+	.string	"blk"
+	.byte	0x4
+	.byte	0x9e
+	.4byte	0x2e8
+	.4byte	.LLST11
+	.uleb128 0x28
+	.4byte	.LASF595
+	.byte	0x4
+	.byte	0x9f
+	.4byte	0x2e8
+	.4byte	.LLST12
+	.uleb128 0x24
+	.8byte	.LVL36
+	.4byte	0x52d4
+	.byte	0
+	.uleb128 0x42
+	.4byte	.LASF596
+	.byte	0x4
+	.byte	0x94
+	.8byte	.LFB166
+	.8byte	.LFE166-.LFB166
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5179
+	.uleb128 0x24
+	.8byte	.LVL538
+	.4byte	0x1a1d
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF597
+	.byte	0x4
+	.byte	0x4f
+	.4byte	0x2f
+	.8byte	.LFB165
+	.8byte	.LFE165-.LFB165
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x525a
+	.uleb128 0x43
+	.string	"i"
+	.byte	0x4
+	.byte	0x51
+	.4byte	0x2f
+	.4byte	.LLST205
+	.uleb128 0x28
+	.4byte	.LASF598
+	.byte	0x4
+	.byte	0x52
+	.4byte	0x2f
+	.4byte	.LLST206
+	.uleb128 0x28
+	.4byte	.LASF589
+	.byte	0x4
+	.byte	0x53
+	.4byte	0x4f9a
+	.4byte	.LLST207
+	.uleb128 0x28
+	.4byte	.LASF501
+	.byte	0x4
+	.byte	0x54
+	.4byte	0x2e8
+	.4byte	.LLST208
+	.uleb128 0x40
+	.4byte	.LASF599
+	.byte	0x4
+	.byte	0x67
+	.uleb128 0x54
+	.4byte	.LASF357
+	.4byte	0x1d08
+	.uleb128 0x24
+	.8byte	.LVL907
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL909
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL912
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL913
+	.4byte	0x1bdb
+	.uleb128 0x24
+	.8byte	.LVL914
+	.4byte	0x1b39
+	.uleb128 0x24
+	.8byte	.LVL915
+	.4byte	0x1bdb
+	.uleb128 0x24
+	.8byte	.LVL918
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL919
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL921
+	.4byte	0x19ba
+	.byte	0
+	.uleb128 0x42
+	.4byte	.LASF600
+	.byte	0x4
+	.byte	0x41
+	.8byte	.LFB164
+	.8byte	.LFE164-.LFB164
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x52cc
+	.uleb128 0x23
+	.4byte	.LASF533
+	.byte	0x4
+	.byte	0x41
+	.4byte	0x617
+	.4byte	.LLST120
+	.uleb128 0x23
+	.4byte	.LASF601
+	.byte	0x4
+	.byte	0x41
+	.4byte	0x520
+	.4byte	.LLST121
+	.uleb128 0x29
+	.string	"i"
+	.byte	0x4
+	.byte	0x43
+	.4byte	0x2f3
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x2df8
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.3604
+	.uleb128 0x24
+	.8byte	.LVL535
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL536
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0x55
+	.4byte	.LASF602
+	.byte	0x4
+	.byte	0x26
+	.byte	0x1
+	.uleb128 0x22
+	.4byte	.LASF603
+	.byte	0x4
+	.byte	0x17
+	.4byte	0x2f
+	.8byte	.LFB162
+	.8byte	.LFE162-.LFB162
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5333
+	.uleb128 0x23
+	.4byte	.LASF175
+	.byte	0x4
+	.byte	0x17
+	.4byte	0x2e8
+	.4byte	.LLST9
+	.uleb128 0x29
+	.string	"die"
+	.byte	0x4
+	.byte	0x19
+	.4byte	0x2f3
+	.uleb128 0x29
+	.string	"i"
+	.byte	0x4
+	.byte	0x1a
+	.4byte	0x2f3
+	.uleb128 0x2c
+	.4byte	.LASF601
+	.byte	0x4
+	.byte	0x1b
+	.4byte	0x520
+	.uleb128 0x28
+	.4byte	.LASF365
+	.byte	0x4
+	.byte	0x1c
+	.4byte	0x2e8
+	.4byte	.LLST10
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF604
+	.byte	0x4
+	.byte	0x4
+	.4byte	0x2f
+	.8byte	.LFB161
+	.8byte	.LFE161-.LFB161
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5396
+	.uleb128 0x23
+	.4byte	.LASF175
+	.byte	0x4
+	.byte	0x4
+	.4byte	0x2e8
+	.4byte	.LLST7
+	.uleb128 0x43
+	.string	"die"
+	.byte	0x4
+	.byte	0x6
+	.4byte	0x2f3
+	.4byte	.LLST8
+	.uleb128 0x2c
+	.4byte	.LASF601
+	.byte	0x4
+	.byte	0x7
+	.4byte	0x520
+	.uleb128 0x2c
+	.4byte	.LASF365
+	.byte	0x4
+	.byte	0x8
+	.4byte	0x2e8
+	.uleb128 0x24
+	.8byte	.LVL29
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0x56
+	.4byte	.LASF665
+	.byte	0x3
+	.2byte	0x4bb
+	.4byte	0x2f3
+	.8byte	.LFB160
+	.8byte	.LFE160-.LFB160
+	.uleb128 0x1
+	.byte	0x9c
+	.uleb128 0x32
+	.4byte	.LASF605
+	.byte	0x3
+	.2byte	0x4b6
+	.4byte	0x2f
+	.8byte	.LFB159
+	.8byte	.LFE159-.LFB159
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5414
+	.uleb128 0x3c
+	.4byte	.LASF90
+	.byte	0x3
+	.2byte	0x4b6
+	.4byte	0xa1
+	.4byte	.LLST326
+	.uleb128 0x3c
+	.4byte	.LASF111
+	.byte	0x3
+	.2byte	0x4b6
+	.4byte	0xa1
+	.4byte	.LLST327
+	.uleb128 0x46
+	.string	"buf"
+	.byte	0x3
+	.2byte	0x4b6
+	.4byte	0x5414
+	.4byte	.LLST328
+	.uleb128 0x24
+	.8byte	.LVL1635
+	.4byte	0x5570
+	.byte	0
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x81
+	.uleb128 0x32
+	.4byte	.LASF606
+	.byte	0x3
+	.2byte	0x4b0
+	.4byte	0x2f
+	.8byte	.LFB158
+	.8byte	.LFE158-.LFB158
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x547a
+	.uleb128 0x3c
+	.4byte	.LASF90
+	.byte	0x3
+	.2byte	0x4b0
+	.4byte	0xa1
+	.4byte	.LLST312
+	.uleb128 0x3c
+	.4byte	.LASF111
+	.byte	0x3
+	.2byte	0x4b0
+	.4byte	0xa1
+	.4byte	.LLST313
+	.uleb128 0x46
+	.string	"buf"
+	.byte	0x3
+	.2byte	0x4b0
+	.4byte	0x5414
+	.4byte	.LLST314
+	.uleb128 0x24
+	.8byte	.LVL1556
+	.4byte	0x59b6
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF607
+	.byte	0x3
+	.2byte	0x481
+	.4byte	0x2f
+	.8byte	.LFB157
+	.8byte	.LFE157-.LFB157
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5570
+	.uleb128 0x3c
+	.4byte	.LASF511
+	.byte	0x3
+	.2byte	0x481
+	.4byte	0x2f3
+	.4byte	.LLST274
+	.uleb128 0x3c
+	.4byte	.LASF512
+	.byte	0x3
+	.2byte	0x481
+	.4byte	0x2f3
+	.4byte	.LLST275
+	.uleb128 0x3e
+	.4byte	.LASF514
+	.byte	0x3
+	.2byte	0x483
+	.4byte	0x2e8
+	.4byte	.LLST276
+	.uleb128 0x36
+	.string	"tmp"
+	.byte	0x3
+	.2byte	0x484
+	.4byte	0x2e8
+	.uleb128 0x3d
+	.string	"lpa"
+	.byte	0x3
+	.2byte	0x485
+	.4byte	0x2f3
+	.4byte	.LLST277
+	.uleb128 0x3e
+	.4byte	.LASF443
+	.byte	0x3
+	.2byte	0x486
+	.4byte	0x2f3
+	.4byte	.LLST278
+	.uleb128 0x3e
+	.4byte	.LASF420
+	.byte	0x3
+	.2byte	0x486
+	.4byte	0x2f3
+	.4byte	.LLST279
+	.uleb128 0x35
+	.4byte	.LASF409
+	.byte	0x3
+	.2byte	0x487
+	.4byte	0x2e8
+	.uleb128 0x24
+	.8byte	.LVL1331
+	.4byte	0x5815
+	.uleb128 0x24
+	.8byte	.LVL1337
+	.4byte	0x40b4
+	.uleb128 0x24
+	.8byte	.LVL1338
+	.4byte	0x3b9a
+	.uleb128 0x24
+	.8byte	.LVL1339
+	.4byte	0x3fc5
+	.uleb128 0x24
+	.8byte	.LVL1340
+	.4byte	0x3fc5
+	.uleb128 0x24
+	.8byte	.LVL1343
+	.4byte	0x4d4b
+	.uleb128 0x24
+	.8byte	.LVL1344
+	.4byte	0x266c
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF608
+	.byte	0x3
+	.2byte	0x3be
+	.4byte	0x2f
+	.8byte	.LFB156
+	.8byte	.LFE156-.LFB156
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5815
+	.uleb128 0x46
+	.string	"LUN"
+	.byte	0x3
+	.2byte	0x3be
+	.4byte	0x2dd
+	.4byte	.LLST315
+	.uleb128 0x3c
+	.4byte	.LASF511
+	.byte	0x3
+	.2byte	0x3be
+	.4byte	0x2f3
+	.4byte	.LLST316
+	.uleb128 0x3c
+	.4byte	.LASF512
+	.byte	0x3
+	.2byte	0x3be
+	.4byte	0x2f3
+	.4byte	.LLST317
+	.uleb128 0x3c
+	.4byte	.LASF513
+	.byte	0x3
+	.2byte	0x3be
+	.4byte	0x3ecf
+	.4byte	.LLST318
+	.uleb128 0x35
+	.4byte	.LASF377
+	.byte	0x3
+	.2byte	0x3c0
+	.4byte	0x1f4b
+	.uleb128 0x3d
+	.string	"lpa"
+	.byte	0x3
+	.2byte	0x3c1
+	.4byte	0x2f3
+	.4byte	.LLST319
+	.uleb128 0x3e
+	.4byte	.LASF609
+	.byte	0x3
+	.2byte	0x3c1
+	.4byte	0x2f3
+	.4byte	.LLST320
+	.uleb128 0x3e
+	.4byte	.LASF610
+	.byte	0x3
+	.2byte	0x3c1
+	.4byte	0x2f3
+	.4byte	.LLST321
+	.uleb128 0x3e
+	.4byte	.LASF443
+	.byte	0x3
+	.2byte	0x3c2
+	.4byte	0x2f3
+	.4byte	.LLST322
+	.uleb128 0x36
+	.string	"ppa"
+	.byte	0x3
+	.2byte	0x3c2
+	.4byte	0x2f3
+	.uleb128 0x3d
+	.string	"i"
+	.byte	0x3
+	.2byte	0x3c3
+	.4byte	0x2f3
+	.4byte	.LLST323
+	.uleb128 0x3e
+	.4byte	.LASF611
+	.byte	0x3
+	.2byte	0x3c3
+	.4byte	0x2f3
+	.4byte	.LLST324
+	.uleb128 0x35
+	.4byte	.LASF374
+	.byte	0x3
+	.2byte	0x3c3
+	.4byte	0x2f3
+	.uleb128 0x35
+	.4byte	.LASF612
+	.byte	0x3
+	.2byte	0x3c4
+	.4byte	0x2f3
+	.uleb128 0x35
+	.4byte	.LASF613
+	.byte	0x3
+	.2byte	0x3c4
+	.4byte	0x2f3
+	.uleb128 0x3e
+	.4byte	.LASF419
+	.byte	0x3
+	.2byte	0x3c5
+	.4byte	0x1423
+	.4byte	.LLST325
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x40af
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.3540
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x2d0
+	.4byte	0x56cf
+	.uleb128 0x1f
+	.4byte	.LASF382
+	.byte	0x3
+	.2byte	0x43a
+	.4byte	0x314
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -32
+	.uleb128 0x24
+	.8byte	.LVL1617
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL1621
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1622
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL1559
+	.4byte	0x3ed5
+	.uleb128 0x24
+	.8byte	.LVL1571
+	.4byte	0x5815
+	.uleb128 0x24
+	.8byte	.LVL1575
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1576
+	.4byte	0x5815
+	.uleb128 0x24
+	.8byte	.LVL1577
+	.4byte	0x27df
+	.uleb128 0x24
+	.8byte	.LVL1579
+	.4byte	0x27df
+	.uleb128 0x24
+	.8byte	.LVL1581
+	.4byte	0x27df
+	.uleb128 0x24
+	.8byte	.LVL1582
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1587
+	.4byte	0x1e7e
+	.uleb128 0x24
+	.8byte	.LVL1590
+	.4byte	0x4707
+	.uleb128 0x24
+	.8byte	.LVL1591
+	.4byte	0x208d
+	.uleb128 0x24
+	.8byte	.LVL1592
+	.4byte	0x1e7e
+	.uleb128 0x24
+	.8byte	.LVL1593
+	.4byte	0x1e7e
+	.uleb128 0x24
+	.8byte	.LVL1595
+	.4byte	0x19ba
+	.uleb128 0x24
+	.8byte	.LVL1598
+	.4byte	0x5815
+	.uleb128 0x24
+	.8byte	.LVL1601
+	.4byte	0x27df
+	.uleb128 0x24
+	.8byte	.LVL1603
+	.4byte	0x3fc5
+	.uleb128 0x24
+	.8byte	.LVL1604
+	.4byte	0x2747
+	.uleb128 0x24
+	.8byte	.LVL1607
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL1612
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1618
+	.4byte	0x19ba
+	.uleb128 0x24
+	.8byte	.LVL1623
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL1624
+	.4byte	0x19ba
+	.uleb128 0x24
+	.8byte	.LVL1628
+	.4byte	0x5845
+	.uleb128 0x24
+	.8byte	.LVL1629
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF614
+	.byte	0x3
+	.2byte	0x3b5
+	.4byte	0x2f
+	.8byte	.LFB155
+	.8byte	.LFE155-.LFB155
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5845
+	.uleb128 0x24
+	.8byte	.LVL1318
+	.4byte	0x5845
+	.byte	0
+	.uleb128 0x49
+	.4byte	.LASF615
+	.byte	0x3
+	.2byte	0x385
+	.8byte	.LFB154
+	.8byte	.LFE154-.LFB154
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x59a1
+	.uleb128 0x46
+	.string	"req"
+	.byte	0x3
+	.2byte	0x385
+	.4byte	0xfdb
+	.4byte	.LLST268
+	.uleb128 0x3c
+	.4byte	.LASF374
+	.byte	0x3
+	.2byte	0x385
+	.4byte	0x2f3
+	.4byte	.LLST269
+	.uleb128 0x3c
+	.4byte	.LASF616
+	.byte	0x3
+	.2byte	0x385
+	.4byte	0x2f3
+	.4byte	.LLST270
+	.uleb128 0x3c
+	.4byte	.LASF419
+	.byte	0x3
+	.2byte	0x385
+	.4byte	0x1423
+	.4byte	.LLST271
+	.uleb128 0x36
+	.string	"i"
+	.byte	0x3
+	.2byte	0x387
+	.4byte	0x2f3
+	.uleb128 0x3d
+	.string	"ppa"
+	.byte	0x3
+	.2byte	0x388
+	.4byte	0x2f3
+	.4byte	.LLST272
+	.uleb128 0x3e
+	.4byte	.LASF443
+	.byte	0x3
+	.2byte	0x388
+	.4byte	0x2f3
+	.4byte	.LLST273
+	.uleb128 0x35
+	.4byte	.LASF402
+	.byte	0x3
+	.2byte	0x389
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF377
+	.byte	0x3
+	.2byte	0x38a
+	.4byte	0x1f4b
+	.uleb128 0x35
+	.4byte	.LASF467
+	.byte	0x3
+	.2byte	0x38b
+	.4byte	0x2f3
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x59b1
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.3512
+	.uleb128 0x24
+	.8byte	.LVL1302
+	.4byte	0x1bdb
+	.uleb128 0x24
+	.8byte	.LVL1304
+	.4byte	0x4d4b
+	.uleb128 0x24
+	.8byte	.LVL1305
+	.4byte	0x27df
+	.uleb128 0x24
+	.8byte	.LVL1306
+	.4byte	0x201d
+	.uleb128 0x24
+	.8byte	.LVL1307
+	.4byte	0x2747
+	.uleb128 0x24
+	.8byte	.LVL1308
+	.4byte	0x1bdb
+	.uleb128 0x24
+	.8byte	.LVL1309
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1311
+	.4byte	0x3fc5
+	.uleb128 0x24
+	.8byte	.LVL1313
+	.4byte	0x4d4b
+	.uleb128 0x24
+	.8byte	.LVL1314
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1315
+	.4byte	0x266c
+	.uleb128 0x24
+	.8byte	.LVL1316
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0xb
+	.4byte	0x4b
+	.4byte	0x59b1
+	.uleb128 0x17
+	.4byte	0x3d
+	.byte	0xc
+	.byte	0
+	.uleb128 0x5
+	.4byte	0x59a1
+	.uleb128 0x32
+	.4byte	.LASF617
+	.byte	0x3
+	.2byte	0x32c
+	.4byte	0x2f
+	.8byte	.LFB153
+	.8byte	.LFE153-.LFB153
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5b74
+	.uleb128 0x46
+	.string	"LUN"
+	.byte	0x3
+	.2byte	0x32c
+	.4byte	0x2dd
+	.4byte	.LLST298
+	.uleb128 0x3c
+	.4byte	.LASF511
+	.byte	0x3
+	.2byte	0x32c
+	.4byte	0x2f3
+	.4byte	.LLST299
+	.uleb128 0x3c
+	.4byte	.LASF512
+	.byte	0x3
+	.2byte	0x32c
+	.4byte	0x2f3
+	.4byte	.LLST300
+	.uleb128 0x3c
+	.4byte	.LASF513
+	.byte	0x3
+	.2byte	0x32c
+	.4byte	0x3ecf
+	.4byte	.LLST301
+	.uleb128 0x4a
+	.string	"ret"
+	.byte	0x3
+	.2byte	0x32e
+	.4byte	0x2f
+	.uleb128 0x1
+	.byte	0x65
+	.uleb128 0x3e
+	.4byte	.LASF609
+	.byte	0x3
+	.2byte	0x32f
+	.4byte	0x2f3
+	.4byte	.LLST302
+	.uleb128 0x3e
+	.4byte	.LASF610
+	.byte	0x3
+	.2byte	0x32f
+	.4byte	0x2f3
+	.4byte	.LLST303
+	.uleb128 0x3e
+	.4byte	.LASF618
+	.byte	0x3
+	.2byte	0x32f
+	.4byte	0x2f3
+	.4byte	.LLST304
+	.uleb128 0x3d
+	.string	"lpa"
+	.byte	0x3
+	.2byte	0x330
+	.4byte	0x2f3
+	.4byte	.LLST305
+	.uleb128 0x3d
+	.string	"ppa"
+	.byte	0x3
+	.2byte	0x330
+	.4byte	0x2f3
+	.4byte	.LLST306
+	.uleb128 0x36
+	.string	"n"
+	.byte	0x3
+	.2byte	0x332
+	.4byte	0x2f3
+	.uleb128 0x3e
+	.4byte	.LASF374
+	.byte	0x3
+	.2byte	0x332
+	.4byte	0x2f3
+	.4byte	.LLST307
+	.uleb128 0x3e
+	.4byte	.LASF611
+	.byte	0x3
+	.2byte	0x332
+	.4byte	0x2f3
+	.4byte	.LLST308
+	.uleb128 0x3e
+	.4byte	.LASF619
+	.byte	0x3
+	.2byte	0x333
+	.4byte	0x2f3
+	.4byte	.LLST309
+	.uleb128 0x35
+	.4byte	.LASF620
+	.byte	0x3
+	.2byte	0x333
+	.4byte	0x2f3
+	.uleb128 0x3e
+	.4byte	.LASF621
+	.byte	0x3
+	.2byte	0x334
+	.4byte	0x2f3
+	.4byte	.LLST310
+	.uleb128 0x3e
+	.4byte	.LASF622
+	.byte	0x3
+	.2byte	0x335
+	.4byte	0x2f3
+	.4byte	.LLST311
+	.uleb128 0x4c
+	.8byte	.LBB296
+	.8byte	.LBE296-.LBB296
+	.4byte	0x5b18
+	.uleb128 0x35
+	.4byte	.LASF389
+	.byte	0x3
+	.2byte	0x379
+	.4byte	0x2e8
+	.uleb128 0x24
+	.8byte	.LVL1535
+	.4byte	0x4d4b
+	.uleb128 0x24
+	.8byte	.LVL1536
+	.4byte	0x208d
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL1506
+	.4byte	0x3dec
+	.uleb128 0x24
+	.8byte	.LVL1515
+	.4byte	0x5815
+	.uleb128 0x24
+	.8byte	.LVL1522
+	.4byte	0x1e7e
+	.uleb128 0x24
+	.8byte	.LVL1524
+	.4byte	0x3fc5
+	.uleb128 0x24
+	.8byte	.LVL1528
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL1534
+	.4byte	0x19ba
+	.uleb128 0x24
+	.8byte	.LVL1541
+	.4byte	0x1a1d
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF623
+	.byte	0x3
+	.2byte	0x325
+	.4byte	0x2f
+	.8byte	.LFB152
+	.8byte	.LFE152-.LFB152
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5ba4
+	.uleb128 0x24
+	.8byte	.LVL1323
+	.4byte	0x5ba4
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF624
+	.byte	0x3
+	.2byte	0x31c
+	.4byte	0x2f
+	.8byte	.LFB151
+	.8byte	.LFE151-.LFB151
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5bfb
+	.uleb128 0x24
+	.8byte	.LVL1319
+	.4byte	0x5815
+	.uleb128 0x24
+	.8byte	.LVL1320
+	.4byte	0x40b4
+	.uleb128 0x24
+	.8byte	.LVL1321
+	.4byte	0x3d8f
+	.uleb128 0x24
+	.8byte	.LVL1322
+	.4byte	0x3b9a
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF625
+	.byte	0x3
+	.2byte	0x2e6
+	.4byte	0x2f
+	.8byte	.LFB150
+	.8byte	.LFE150-.LFB150
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5cba
+	.uleb128 0x35
+	.4byte	.LASF626
+	.byte	0x3
+	.2byte	0x2e8
+	.4byte	0x5cba
+	.uleb128 0x37
+	.4byte	.LASF627
+	.byte	0x3
+	.2byte	0x2f3
+	.uleb128 0x4c
+	.8byte	.LBB306
+	.8byte	.LBE306-.LBB306
+	.4byte	0x5c5e
+	.uleb128 0x36
+	.string	"i"
+	.byte	0x3
+	.2byte	0x310
+	.4byte	0x2f3
+	.uleb128 0x24
+	.8byte	.LVL1721
+	.4byte	0x1e7e
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL1714
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1715
+	.4byte	0x623c
+	.uleb128 0x24
+	.8byte	.LVL1716
+	.4byte	0x6018
+	.uleb128 0x24
+	.8byte	.LVL1717
+	.4byte	0x5f9a
+	.uleb128 0x24
+	.8byte	.LVL1718
+	.4byte	0x4c0c
+	.uleb128 0x24
+	.8byte	.LVL1719
+	.4byte	0x500c
+	.uleb128 0x24
+	.8byte	.LVL1720
+	.4byte	0x2c48
+	.byte	0
+	.uleb128 0x7
+	.byte	0x8
+	.4byte	0x400
+	.uleb128 0x32
+	.4byte	.LASF628
+	.byte	0x3
+	.2byte	0x26e
+	.4byte	0x2f
+	.8byte	.LFB149
+	.8byte	.LFE149-.LFB149
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5e0d
+	.uleb128 0x35
+	.4byte	.LASF497
+	.byte	0x3
+	.2byte	0x270
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF629
+	.byte	0x3
+	.2byte	0x270
+	.4byte	0x2e8
+	.4byte	.LLST331
+	.uleb128 0x3e
+	.4byte	.LASF630
+	.byte	0x3
+	.2byte	0x271
+	.4byte	0x2e8
+	.4byte	.LLST332
+	.uleb128 0x3d
+	.string	"i"
+	.byte	0x3
+	.2byte	0x272
+	.4byte	0x2e8
+	.4byte	.LLST333
+	.uleb128 0x41
+	.4byte	.LASF631
+	.byte	0x3
+	.2byte	0x2bc
+	.8byte	.L1620
+	.uleb128 0x41
+	.4byte	.LASF632
+	.byte	0x3
+	.2byte	0x2cc
+	.8byte	.L1622
+	.uleb128 0x24
+	.8byte	.LVL1681
+	.4byte	0x4c0c
+	.uleb128 0x24
+	.8byte	.LVL1682
+	.4byte	0x500c
+	.uleb128 0x24
+	.8byte	.LVL1683
+	.4byte	0x4e0c
+	.uleb128 0x24
+	.8byte	.LVL1690
+	.4byte	0x5179
+	.uleb128 0x24
+	.8byte	.LVL1691
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL1692
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL1693
+	.4byte	0x309d
+	.uleb128 0x24
+	.8byte	.LVL1698
+	.4byte	0x5e0d
+	.uleb128 0x24
+	.8byte	.LVL1702
+	.4byte	0x629d
+	.uleb128 0x24
+	.8byte	.LVL1703
+	.4byte	0x4c0c
+	.uleb128 0x24
+	.8byte	.LVL1704
+	.4byte	0x5e0d
+	.uleb128 0x24
+	.8byte	.LVL1706
+	.4byte	0x5e0d
+	.uleb128 0x24
+	.8byte	.LVL1710
+	.4byte	0x309d
+	.uleb128 0x24
+	.8byte	.LVL1711
+	.4byte	0x49f7
+	.uleb128 0x24
+	.8byte	.LVL1712
+	.4byte	0x3b9a
+	.uleb128 0x24
+	.8byte	.LVL1713
+	.4byte	0x2c48
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF633
+	.byte	0x3
+	.2byte	0x20f
+	.4byte	0x2f
+	.8byte	.LFB148
+	.8byte	.LFE148-.LFB148
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x5f70
+	.uleb128 0x3c
+	.4byte	.LASF497
+	.byte	0x3
+	.2byte	0x20f
+	.4byte	0x2e8
+	.4byte	.LLST109
+	.uleb128 0x3c
+	.4byte	.LASF634
+	.byte	0x3
+	.2byte	0x20f
+	.4byte	0x2dd
+	.4byte	.LLST110
+	.uleb128 0x3e
+	.4byte	.LASF629
+	.byte	0x3
+	.2byte	0x211
+	.4byte	0x2e8
+	.4byte	.LLST111
+	.uleb128 0x35
+	.4byte	.LASF352
+	.byte	0x3
+	.2byte	0x211
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF373
+	.byte	0x3
+	.2byte	0x212
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF175
+	.byte	0x3
+	.2byte	0x212
+	.4byte	0x2e8
+	.uleb128 0x3e
+	.4byte	.LASF635
+	.byte	0x3
+	.2byte	0x213
+	.4byte	0x2e8
+	.4byte	.LLST112
+	.uleb128 0x3e
+	.4byte	.LASF636
+	.byte	0x3
+	.2byte	0x214
+	.4byte	0x2e8
+	.4byte	.LLST113
+	.uleb128 0x3e
+	.4byte	.LASF637
+	.byte	0x3
+	.2byte	0x215
+	.4byte	0x2e8
+	.4byte	.LLST114
+	.uleb128 0x3e
+	.4byte	.LASF638
+	.byte	0x3
+	.2byte	0x216
+	.4byte	0x2e8
+	.4byte	.LLST115
+	.uleb128 0x41
+	.4byte	.LASF639
+	.byte	0x3
+	.2byte	0x240
+	.8byte	.L419
+	.uleb128 0x24
+	.8byte	.LVL445
+	.4byte	0x1b39
+	.uleb128 0x24
+	.8byte	.LVL448
+	.4byte	0x5333
+	.uleb128 0x24
+	.8byte	.LVL456
+	.4byte	0x1bdb
+	.uleb128 0x24
+	.8byte	.LVL459
+	.4byte	0x5333
+	.uleb128 0x24
+	.8byte	.LVL466
+	.4byte	0x4b47
+	.uleb128 0x24
+	.8byte	.LVL468
+	.4byte	0x1b39
+	.uleb128 0x24
+	.8byte	.LVL475
+	.4byte	0x4dc3
+	.uleb128 0x24
+	.8byte	.LVL476
+	.4byte	0x5f70
+	.uleb128 0x24
+	.8byte	.LVL477
+	.4byte	0x52d4
+	.uleb128 0x24
+	.8byte	.LVL484
+	.4byte	0x4dc3
+	.uleb128 0x24
+	.8byte	.LVL485
+	.4byte	0x5f70
+	.uleb128 0x24
+	.8byte	.LVL486
+	.4byte	0x52d4
+	.byte	0
+	.uleb128 0x33
+	.4byte	.LASF640
+	.byte	0x3
+	.2byte	0x201
+	.4byte	0x2f
+	.byte	0x1
+	.4byte	0x5f9a
+	.uleb128 0x34
+	.4byte	.LASF175
+	.byte	0x3
+	.2byte	0x201
+	.4byte	0x2e8
+	.uleb128 0x35
+	.4byte	.LASF641
+	.byte	0x3
+	.2byte	0x203
+	.4byte	0x2e8
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF642
+	.byte	0x3
+	.2byte	0x1ec
+	.4byte	0x2f
+	.8byte	.LFB146
+	.8byte	.LFE146-.LFB146
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6018
+	.uleb128 0x24
+	.8byte	.LVL802
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL803
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL804
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL805
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL806
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL807
+	.4byte	0x2645
+	.uleb128 0x24
+	.8byte	.LVL808
+	.4byte	0x3738
+	.byte	0
+	.uleb128 0x32
+	.4byte	.LASF643
+	.byte	0x3
+	.2byte	0x116
+	.4byte	0x2f
+	.8byte	.LFB145
+	.8byte	.LFE145-.LFB145
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x623c
+	.uleb128 0x3d
+	.string	"i"
+	.byte	0x3
+	.2byte	0x118
+	.4byte	0x2f3
+	.4byte	.LLST119
+	.uleb128 0x35
+	.4byte	.LASF644
+	.byte	0x3
+	.2byte	0x119
+	.4byte	0x2f3
+	.uleb128 0x2e
+	.4byte	.LASF357
+	.4byte	0x50fc
+	.uleb128 0x9
+	.byte	0x3
+	.8byte	__func__.3388
+	.uleb128 0x24
+	.8byte	.LVL490
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL491
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL492
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL493
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL494
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL495
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL496
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL497
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL498
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL499
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL500
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL501
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL502
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL503
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL504
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL505
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL506
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL507
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL508
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL509
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL510
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL511
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL512
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL513
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL514
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL515
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL516
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL517
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL518
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL519
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL520
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL521
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL522
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL523
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL524
+	.4byte	0x74ce
+	.uleb128 0x24
+	.8byte	.LVL527
+	.4byte	0x74b8
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF645
+	.byte	0x3
+	.byte	0xb6
+	.4byte	0x2f
+	.8byte	.LFB144
+	.8byte	.LFE144-.LFB144
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x629d
+	.uleb128 0x23
+	.4byte	.LASF626
+	.byte	0x3
+	.byte	0xb6
+	.4byte	0x5cba
+	.4byte	.LLST5
+	.uleb128 0x29
+	.string	"i"
+	.byte	0x3
+	.byte	0xb8
+	.4byte	0x2f3
+	.uleb128 0x24
+	.8byte	.LVL19
+	.4byte	0x62e6
+	.uleb128 0x24
+	.8byte	.LVL20
+	.4byte	0x62e6
+	.uleb128 0x24
+	.8byte	.LVL21
+	.4byte	0x629d
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF646
+	.byte	0x3
+	.byte	0xa4
+	.4byte	0x2f
+	.8byte	.LFB143
+	.8byte	.LFE143-.LFB143
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x62ce
+	.uleb128 0x23
+	.4byte	.LASF647
+	.byte	0x3
+	.byte	0xa4
+	.4byte	0x2e8
+	.4byte	.LLST4
+	.byte	0
+	.uleb128 0x4e
+	.4byte	.LASF648
+	.byte	0x3
+	.byte	0x9e
+	.byte	0x1
+	.4byte	0x62e6
+	.uleb128 0x2b
+	.4byte	.LASF649
+	.byte	0x3
+	.byte	0x9e
+	.4byte	0x2f3
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF650
+	.byte	0x3
+	.byte	0x7f
+	.4byte	0x2e8
+	.8byte	.LFB141
+	.8byte	.LFE141-.LFB141
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x632d
+	.uleb128 0x26
+	.string	"num"
+	.byte	0x3
+	.byte	0x7f
+	.4byte	0x2f3
+	.4byte	.LLST3
+	.uleb128 0x29
+	.string	"i"
+	.byte	0x3
+	.byte	0x81
+	.4byte	0x2e8
+	.uleb128 0x20
+	.4byte	.LASF651
+	.byte	0x3
+	.byte	0x82
+	.4byte	0x2f3
+	.uleb128 0x1
+	.byte	0x52
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF652
+	.byte	0x3
+	.byte	0x71
+	.4byte	0x2f
+	.8byte	.LFB140
+	.8byte	.LFE140-.LFB140
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6383
+	.uleb128 0x23
+	.4byte	.LASF82
+	.byte	0x3
+	.byte	0x71
+	.4byte	0xb3
+	.4byte	.LLST66
+	.uleb128 0x29
+	.string	"buf"
+	.byte	0x3
+	.byte	0x73
+	.4byte	0xb3
+	.uleb128 0x24
+	.8byte	.LVL286
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL287
+	.4byte	0x6383
+	.byte	0
+	.uleb128 0x22
+	.4byte	.LASF653
+	.byte	0x3
+	.byte	0xa
+	.4byte	0x2f
+	.8byte	.LFB139
+	.8byte	.LFE139-.LFB139
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x67ad
+	.uleb128 0x23
+	.4byte	.LASF82
+	.byte	0x3
+	.byte	0xa
+	.4byte	0xb3
+	.4byte	.LLST63
+	.uleb128 0x29
+	.string	"i"
+	.byte	0x3
+	.byte	0xc
+	.4byte	0x2f
+	.uleb128 0x29
+	.string	"buf"
+	.byte	0x3
+	.byte	0xd
+	.4byte	0xb3
+	.uleb128 0x4c
+	.8byte	.LBB201
+	.8byte	.LBE201-.LBB201
+	.4byte	0x6406
+	.uleb128 0x28
+	.4byte	.LASF389
+	.byte	0x3
+	.byte	0x57
+	.4byte	0x2e8
+	.4byte	.LLST64
+	.uleb128 0x24
+	.8byte	.LVL277
+	.4byte	0x4707
+	.uleb128 0x24
+	.8byte	.LVL279
+	.4byte	0x74d9
+	.byte	0
+	.uleb128 0x4c
+	.8byte	.LBB202
+	.8byte	.LBE202-.LBB202
+	.4byte	0x6438
+	.uleb128 0x28
+	.4byte	.LASF389
+	.byte	0x3
+	.byte	0x60
+	.4byte	0x2e8
+	.4byte	.LLST65
+	.uleb128 0x24
+	.8byte	.LVL283
+	.4byte	0x74d9
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL206
+	.4byte	0x74e5
+	.uleb128 0x24
+	.8byte	.LVL207
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL208
+	.4byte	0x74e5
+	.uleb128 0x24
+	.8byte	.LVL209
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL210
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL211
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL212
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL213
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL214
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL215
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL216
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL217
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL218
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL219
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL220
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL221
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL222
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL223
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL224
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL225
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL226
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL227
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL228
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL229
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL230
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL231
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL232
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL233
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL234
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL235
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL236
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL237
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL238
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL239
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL240
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL241
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL242
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL243
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL244
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL245
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL246
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL247
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL248
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL249
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL250
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL251
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL252
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL253
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL254
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL255
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL256
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL257
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL258
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL259
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL260
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL261
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL262
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL263
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL264
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL265
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL266
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL267
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL268
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL269
+	.4byte	0x2ba4
+	.uleb128 0x24
+	.8byte	.LVL270
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL271
+	.4byte	0x2b47
+	.uleb128 0x24
+	.8byte	.LVL272
+	.4byte	0x74d9
+	.uleb128 0x24
+	.8byte	.LVL276
+	.4byte	0x74d9
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x1dcf
+	.8byte	.LFB269
+	.8byte	.LFE269-.LFB269
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x680b
+	.uleb128 0x58
+	.4byte	0x1dea
+	.uleb128 0x1
+	.byte	0x51
+	.uleb128 0x58
+	.4byte	0x1df5
+	.uleb128 0x1
+	.byte	0x52
+	.uleb128 0x48
+	.4byte	0x1ddf
+	.uleb128 0x59
+	.4byte	0x1e00
+	.uleb128 0x59
+	.4byte	0x1e0b
+	.uleb128 0x5a
+	.4byte	0x1e16
+	.4byte	.LLST0
+	.uleb128 0x5b
+	.4byte	0x1e21
+	.uleb128 0x1
+	.byte	0x56
+	.uleb128 0x5b
+	.4byte	0x1e2c
+	.uleb128 0x1
+	.byte	0x54
+	.uleb128 0x59
+	.4byte	0x1e37
+	.uleb128 0x5a
+	.4byte	0x1e42
+	.4byte	.LLST1
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x3a1f
+	.8byte	.LFB276
+	.8byte	.LFE276-.LFB276
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6835
+	.uleb128 0x5c
+	.4byte	0x3a2c
+	.4byte	.LLST2
+	.uleb128 0x48
+	.4byte	0x3a38
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x62ce
+	.8byte	.LFB142
+	.8byte	.LFE142-.LFB142
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6858
+	.uleb128 0x58
+	.4byte	0x62da
+	.uleb128 0x1
+	.byte	0x50
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x5f70
+	.8byte	.LFB147
+	.8byte	.LFE147-.LFB147
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6898
+	.uleb128 0x5c
+	.4byte	0x5f81
+	.4byte	.LLST6
+	.uleb128 0x59
+	.4byte	0x5f8d
+	.uleb128 0x5d
+	.4byte	.Ldebug_ranges0+0
+	.uleb128 0x48
+	.4byte	0x5f81
+	.uleb128 0x5d
+	.4byte	.Ldebug_ranges0+0
+	.uleb128 0x59
+	.4byte	0x687c
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x5e
+	.4byte	0x52cc
+	.8byte	.LFB163
+	.8byte	.LFE163-.LFB163
+	.uleb128 0x1
+	.byte	0x9c
+	.uleb128 0x5e
+	.4byte	0x4c00
+	.8byte	.LFB177
+	.8byte	.LFE177-.LFB177
+	.uleb128 0x1
+	.byte	0x9c
+	.uleb128 0x5e
+	.4byte	0x4bf4
+	.8byte	.LFB178
+	.8byte	.LFE178-.LFB178
+	.uleb128 0x1
+	.byte	0x9c
+	.uleb128 0x57
+	.4byte	0x49ad
+	.8byte	.LFB184
+	.8byte	.LFE184-.LFB184
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6953
+	.uleb128 0x5c
+	.4byte	0x49b9
+	.4byte	.LLST29
+	.uleb128 0x59
+	.4byte	0x49c4
+	.uleb128 0x4c
+	.8byte	.LBB177
+	.8byte	.LBE177-.LBB177
+	.4byte	0x6945
+	.uleb128 0x48
+	.4byte	0x49b9
+	.uleb128 0x52
+	.8byte	.LBB178
+	.8byte	.LBE178-.LBB178
+	.uleb128 0x59
+	.4byte	0x6901
+	.uleb128 0x24
+	.8byte	.LVL95
+	.4byte	0x74b8
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL94
+	.4byte	0x4919
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x49d2
+	.8byte	.LFB183
+	.8byte	.LFE183-.LFB183
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x69c9
+	.uleb128 0x5c
+	.4byte	0x49de
+	.4byte	.LLST33
+	.uleb128 0x59
+	.4byte	0x49e9
+	.uleb128 0x4c
+	.8byte	.LBB181
+	.8byte	.LBE181-.LBB181
+	.4byte	0x69bb
+	.uleb128 0x48
+	.4byte	0x49de
+	.uleb128 0x52
+	.8byte	.LBB182
+	.8byte	.LBE182-.LBB182
+	.uleb128 0x59
+	.4byte	0x6977
+	.uleb128 0x24
+	.8byte	.LVL106
+	.4byte	0x74b8
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL105
+	.4byte	0x48a0
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x4688
+	.8byte	.LFB191
+	.8byte	.LFE191-.LFB191
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6aa7
+	.uleb128 0x5c
+	.4byte	0x4699
+	.4byte	.LLST44
+	.uleb128 0x59
+	.4byte	0x46a5
+	.uleb128 0x59
+	.4byte	0x46b1
+	.uleb128 0x59
+	.4byte	0x46bd
+	.uleb128 0x59
+	.4byte	0x46c9
+	.uleb128 0x59
+	.4byte	0x46d5
+	.uleb128 0x59
+	.4byte	0x46e1
+	.uleb128 0x59
+	.4byte	0x46ed
+	.uleb128 0x59
+	.4byte	0x46f9
+	.uleb128 0x52
+	.8byte	.LBB185
+	.8byte	.LBE185-.LBB185
+	.uleb128 0x48
+	.4byte	0x4699
+	.uleb128 0x52
+	.8byte	.LBB186
+	.8byte	.LBE186-.LBB186
+	.uleb128 0x59
+	.4byte	0x69ed
+	.uleb128 0x59
+	.4byte	0x69f2
+	.uleb128 0x5a
+	.4byte	0x69f7
+	.4byte	.LLST45
+	.uleb128 0x59
+	.4byte	0x69fc
+	.uleb128 0x5a
+	.4byte	0x6a01
+	.4byte	.LLST46
+	.uleb128 0x5a
+	.4byte	0x6a06
+	.4byte	.LLST47
+	.uleb128 0x59
+	.4byte	0x6a0b
+	.uleb128 0x59
+	.4byte	0x6a10
+	.uleb128 0x24
+	.8byte	.LVL140
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL144
+	.4byte	0x480c
+	.uleb128 0x24
+	.8byte	.LVL145
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL146
+	.4byte	0x49ad
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x4496
+	.8byte	.LFB194
+	.8byte	.LFE194-.LFB194
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6b35
+	.uleb128 0x5c
+	.4byte	0x44a7
+	.4byte	.LLST48
+	.uleb128 0x5a
+	.4byte	0x44b3
+	.4byte	.LLST49
+	.uleb128 0x59
+	.4byte	0x44bf
+	.uleb128 0x59
+	.4byte	0x44cb
+	.uleb128 0x4c
+	.8byte	.LBB189
+	.8byte	.LBE189-.LBB189
+	.4byte	0x6b27
+	.uleb128 0x48
+	.4byte	0x44a7
+	.uleb128 0x52
+	.8byte	.LBB190
+	.8byte	.LBE190-.LBB190
+	.uleb128 0x59
+	.4byte	0x6acb
+	.uleb128 0x59
+	.4byte	0x6ad4
+	.uleb128 0x59
+	.4byte	0x6ad9
+	.uleb128 0x24
+	.8byte	.LVL153
+	.4byte	0x74b8
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL155
+	.4byte	0x49f7
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x3d6b
+	.8byte	.LFB205
+	.8byte	.LFE205-.LFB205
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6b75
+	.uleb128 0x5c
+	.4byte	0x3d78
+	.4byte	.LLST51
+	.uleb128 0x59
+	.4byte	0x3d84
+	.uleb128 0x5d
+	.4byte	.Ldebug_ranges0+0x60
+	.uleb128 0x48
+	.4byte	0x3d78
+	.uleb128 0x5d
+	.4byte	.Ldebug_ranges0+0x60
+	.uleb128 0x59
+	.4byte	0x6b59
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x3a1f
+	.8byte	.LFB211
+	.8byte	.LFE211-.LFB211
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6bb0
+	.uleb128 0x5c
+	.4byte	0x3a2c
+	.4byte	.LLST52
+	.uleb128 0x5c
+	.4byte	0x3a38
+	.4byte	.LLST53
+	.uleb128 0x24
+	.8byte	.LVL165
+	.4byte	0x680b
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x3191
+	.8byte	.LFB221
+	.8byte	.LFE221-.LFB221
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6c08
+	.uleb128 0x58
+	.4byte	0x319e
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x59
+	.4byte	0x31aa
+	.uleb128 0x52
+	.8byte	.LBB199
+	.8byte	.LBE199-.LBB199
+	.uleb128 0x48
+	.4byte	0x319e
+	.uleb128 0x52
+	.8byte	.LBB200
+	.8byte	.LBE200-.LBB200
+	.uleb128 0x5b
+	.4byte	0x6bd2
+	.uleb128 0x1
+	.byte	0x53
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x2a79
+	.8byte	.LFB236
+	.8byte	.LFE236-.LFB236
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6c45
+	.uleb128 0x5c
+	.4byte	0x2a8a
+	.4byte	.LLST72
+	.uleb128 0x5d
+	.4byte	.Ldebug_ranges0+0x90
+	.uleb128 0x48
+	.4byte	0x2a8a
+	.uleb128 0x24
+	.8byte	.LVL310
+	.4byte	0x49d2
+	.byte	0
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x2010
+	.8byte	.LFB255
+	.8byte	.LFE255-.LFB255
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6c7b
+	.uleb128 0x24
+	.8byte	.LVL363
+	.4byte	0x4d4b
+	.uleb128 0x24
+	.8byte	.LVL364
+	.4byte	0x208d
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x1f66
+	.8byte	.LFB257
+	.8byte	.LFE257-.LFB257
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6d40
+	.uleb128 0x5b
+	.4byte	0x1f77
+	.uleb128 0x1
+	.byte	0x50
+	.uleb128 0x59
+	.4byte	0x1f83
+	.uleb128 0x59
+	.4byte	0x1f8d
+	.uleb128 0x59
+	.4byte	0x1f99
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x120
+	.4byte	0x6d24
+	.uleb128 0x59
+	.4byte	0x6c96
+	.uleb128 0x59
+	.4byte	0x6c9d
+	.uleb128 0x5a
+	.4byte	0x6ca2
+	.4byte	.LLST164
+	.uleb128 0x5b
+	.4byte	0x6ca7
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -64
+	.uleb128 0x4c
+	.8byte	.LBB228
+	.8byte	.LBE228-.LBB228
+	.4byte	0x6d16
+	.uleb128 0x5b
+	.4byte	0x1faa
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -96
+	.uleb128 0x24
+	.8byte	.LVL703
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL704
+	.4byte	0x4d4b
+	.uleb128 0x24
+	.8byte	.LVL705
+	.4byte	0x208d
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL702
+	.4byte	0x3fc5
+	.byte	0
+	.uleb128 0x52
+	.8byte	.LBB235
+	.8byte	.LBE235-.LBB235
+	.uleb128 0x5a
+	.4byte	0x1fb8
+	.4byte	.LLST165
+	.byte	0
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x1ae5
+	.8byte	.LFB264
+	.8byte	.LFE264-.LFB264
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6df9
+	.uleb128 0x5c
+	.4byte	0x1af5
+	.4byte	.LLST198
+	.uleb128 0x59
+	.4byte	0x1b00
+	.uleb128 0x59
+	.4byte	0x1b0b
+	.uleb128 0x59
+	.4byte	0x1b16
+	.uleb128 0x52
+	.8byte	.LBB240
+	.8byte	.LBE240-.LBB240
+	.uleb128 0x48
+	.4byte	0x1af5
+	.uleb128 0x52
+	.8byte	.LBB241
+	.8byte	.LBE241-.LBB241
+	.uleb128 0x59
+	.4byte	0x6d64
+	.uleb128 0x5b
+	.4byte	0x6d69
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -64
+	.uleb128 0x5b
+	.4byte	0x6d6e
+	.uleb128 0x3
+	.byte	0x91
+	.sleb128 -96
+	.uleb128 0x5f
+	.4byte	0x1b21
+	.uleb128 0x24
+	.8byte	.LVL884
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL886
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL887
+	.4byte	0x1b39
+	.uleb128 0x24
+	.8byte	.LVL888
+	.4byte	0x1bdb
+	.uleb128 0x24
+	.8byte	.LVL889
+	.4byte	0x1b39
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x1fc6
+	.8byte	.LFB256
+	.8byte	.LFE256-.LFB256
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6ea8
+	.uleb128 0x5c
+	.4byte	0x1fd7
+	.4byte	.LLST214
+	.uleb128 0x59
+	.4byte	0x1fe3
+	.uleb128 0x59
+	.4byte	0x1fef
+	.uleb128 0x59
+	.4byte	0x1ff9
+	.uleb128 0x59
+	.4byte	0x2003
+	.uleb128 0x5d
+	.4byte	.Ldebug_ranges0+0x1a0
+	.uleb128 0x48
+	.4byte	0x1fd7
+	.uleb128 0x5d
+	.4byte	.Ldebug_ranges0+0x1a0
+	.uleb128 0x5a
+	.4byte	0x6e1d
+	.4byte	.LLST215
+	.uleb128 0x5a
+	.4byte	0x6e22
+	.4byte	.LLST216
+	.uleb128 0x5a
+	.4byte	0x6e27
+	.4byte	.LLST217
+	.uleb128 0x5a
+	.4byte	0x6e2c
+	.4byte	.LLST218
+	.uleb128 0x24
+	.8byte	.LVL968
+	.4byte	0x2010
+	.uleb128 0x24
+	.8byte	.LVL973
+	.4byte	0x4dc3
+	.uleb128 0x24
+	.8byte	.LVL976
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL977
+	.4byte	0x5333
+	.uleb128 0x24
+	.8byte	.LVL978
+	.4byte	0x5179
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x2707
+	.8byte	.LFB240
+	.8byte	.LFE240-.LFB240
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6f52
+	.uleb128 0x5c
+	.4byte	0x2718
+	.4byte	.LLST219
+	.uleb128 0x59
+	.4byte	0x2724
+	.uleb128 0x4c
+	.8byte	.LBB254
+	.8byte	.LBE254-.LBB254
+	.4byte	0x6f44
+	.uleb128 0x48
+	.4byte	0x2718
+	.uleb128 0x52
+	.8byte	.LBB255
+	.8byte	.LBE255-.LBB255
+	.uleb128 0x59
+	.4byte	0x6ecc
+	.uleb128 0x24
+	.8byte	.LVL986
+	.4byte	0x480c
+	.uleb128 0x24
+	.8byte	.LVL987
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL988
+	.4byte	0x2a79
+	.uleb128 0x24
+	.8byte	.LVL989
+	.4byte	0x1fc6
+	.uleb128 0x24
+	.8byte	.LVL991
+	.4byte	0x74b8
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL995
+	.4byte	0x4688
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x3c99
+	.8byte	.LFB207
+	.8byte	.LFE207-.LFB207
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x6fea
+	.uleb128 0x5d
+	.4byte	.Ldebug_ranges0+0x1e0
+	.uleb128 0x5a
+	.4byte	0x3ca7
+	.4byte	.LLST221
+	.uleb128 0x5a
+	.4byte	0x3cb3
+	.4byte	.LLST222
+	.uleb128 0x5a
+	.4byte	0x3cbf
+	.4byte	.LLST223
+	.uleb128 0x5b
+	.4byte	0x3ccb
+	.uleb128 0x2
+	.byte	0x91
+	.sleb128 -32
+	.uleb128 0x59
+	.4byte	0x3cd7
+	.uleb128 0x24
+	.8byte	.LVL1005
+	.4byte	0x3fc5
+	.uleb128 0x24
+	.8byte	.LVL1007
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL1012
+	.4byte	0x1a1d
+	.uleb128 0x24
+	.8byte	.LVL1014
+	.4byte	0x2747
+	.uleb128 0x24
+	.8byte	.LVL1015
+	.4byte	0x1bdb
+	.uleb128 0x24
+	.8byte	.LVL1016
+	.4byte	0x266c
+	.byte	0
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x2fa7
+	.8byte	.LFB225
+	.8byte	.LFE225-.LFB225
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x7013
+	.uleb128 0x24
+	.8byte	.LVL1215
+	.4byte	0x3ed5
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x3a45
+	.8byte	.LFB210
+	.8byte	.LFE210-.LFB210
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x7056
+	.uleb128 0x24
+	.8byte	.LVL1248
+	.4byte	0x3dec
+	.uleb128 0x24
+	.8byte	.LVL1249
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1250
+	.4byte	0x1a1d
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x21e7
+	.8byte	.LFB250
+	.8byte	.LFE250-.LFB250
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x7099
+	.uleb128 0x24
+	.8byte	.LVL1382
+	.4byte	0x21f0
+	.uleb128 0x24
+	.8byte	.LVL1383
+	.4byte	0x3ce5
+	.uleb128 0x24
+	.8byte	.LVL1384
+	.4byte	0x2378
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x1e7e
+	.8byte	.LFB258
+	.8byte	.LFE258-.LFB258
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x731f
+	.uleb128 0x5c
+	.4byte	0x1e8f
+	.4byte	.LLST287
+	.uleb128 0x5c
+	.4byte	0x1e9b
+	.4byte	.LLST288
+	.uleb128 0x59
+	.4byte	0x1ea7
+	.uleb128 0x59
+	.4byte	0x1eb3
+	.uleb128 0x59
+	.4byte	0x1ebf
+	.uleb128 0x59
+	.4byte	0x1ecb
+	.uleb128 0x59
+	.4byte	0x1ed7
+	.uleb128 0x59
+	.4byte	0x1ee3
+	.uleb128 0x59
+	.4byte	0x1eef
+	.uleb128 0x59
+	.4byte	0x1efb
+	.uleb128 0x59
+	.4byte	0x1f07
+	.uleb128 0x59
+	.4byte	0x1f13
+	.uleb128 0x59
+	.4byte	0x1f2f
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x250
+	.4byte	0x7311
+	.uleb128 0x48
+	.4byte	0x1e9b
+	.uleb128 0x48
+	.4byte	0x1e8f
+	.uleb128 0x5d
+	.4byte	.Ldebug_ranges0+0x250
+	.uleb128 0x5a
+	.4byte	0x70c6
+	.4byte	.LLST289
+	.uleb128 0x5a
+	.4byte	0x70cb
+	.4byte	.LLST290
+	.uleb128 0x5a
+	.4byte	0x70d0
+	.4byte	.LLST291
+	.uleb128 0x59
+	.4byte	0x70d5
+	.uleb128 0x59
+	.4byte	0x70da
+	.uleb128 0x5a
+	.4byte	0x70df
+	.4byte	.LLST292
+	.uleb128 0x5a
+	.4byte	0x70e4
+	.4byte	.LLST293
+	.uleb128 0x5a
+	.4byte	0x70e9
+	.4byte	.LLST294
+	.uleb128 0x5a
+	.4byte	0x70ee
+	.4byte	.LLST295
+	.uleb128 0x5a
+	.4byte	0x70f3
+	.4byte	.LLST296
+	.uleb128 0x5f
+	.4byte	0x1f1f
+	.uleb128 0x5f
+	.4byte	0x1f27
+	.uleb128 0x59
+	.4byte	0x70f8
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x290
+	.4byte	0x71ca
+	.uleb128 0x5a
+	.4byte	0x1f3d
+	.4byte	.LLST297
+	.uleb128 0x24
+	.8byte	.LVL1416
+	.4byte	0x2a97
+	.uleb128 0x24
+	.8byte	.LVL1417
+	.4byte	0x4707
+	.uleb128 0x24
+	.8byte	.LVL1420
+	.4byte	0x4707
+	.uleb128 0x24
+	.8byte	.LVL1421
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1424
+	.4byte	0x2010
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL1439
+	.4byte	0x2563
+	.uleb128 0x24
+	.8byte	.LVL1441
+	.4byte	0x309d
+	.uleb128 0x24
+	.8byte	.LVL1445
+	.4byte	0x4707
+	.uleb128 0x24
+	.8byte	.LVL1449
+	.4byte	0x1f66
+	.uleb128 0x24
+	.8byte	.LVL1451
+	.4byte	0x4707
+	.uleb128 0x24
+	.8byte	.LVL1452
+	.4byte	0x1f66
+	.uleb128 0x24
+	.8byte	.LVL1454
+	.4byte	0x266c
+	.uleb128 0x24
+	.8byte	.LVL1458
+	.4byte	0x2563
+	.uleb128 0x24
+	.8byte	.LVL1459
+	.4byte	0x266c
+	.uleb128 0x24
+	.8byte	.LVL1460
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1461
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1462
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1463
+	.4byte	0x309d
+	.uleb128 0x24
+	.8byte	.LVL1464
+	.4byte	0x1f66
+	.uleb128 0x24
+	.8byte	.LVL1479
+	.4byte	0x1d0d
+	.uleb128 0x24
+	.8byte	.LVL1483
+	.4byte	0x74b8
+	.uleb128 0x24
+	.8byte	.LVL1484
+	.4byte	0x3fc5
+	.uleb128 0x24
+	.8byte	.LVL1487
+	.4byte	0x2169
+	.uleb128 0x24
+	.8byte	.LVL1490
+	.4byte	0x259d
+	.uleb128 0x24
+	.8byte	.LVL1491
+	.4byte	0x20cd
+	.uleb128 0x24
+	.8byte	.LVL1494
+	.4byte	0x20cd
+	.uleb128 0x24
+	.8byte	.LVL1495
+	.4byte	0x2707
+	.uleb128 0x24
+	.8byte	.LVL1496
+	.4byte	0x5815
+	.uleb128 0x24
+	.8byte	.LVL1497
+	.4byte	0x40b4
+	.uleb128 0x24
+	.8byte	.LVL1498
+	.4byte	0x3b9a
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL1422
+	.4byte	0x2378
+	.byte	0
+	.uleb128 0x57
+	.4byte	0x2c48
+	.8byte	.LFB231
+	.8byte	.LFE231-.LFB231
+	.uleb128 0x1
+	.byte	0x9c
+	.4byte	0x7499
+	.uleb128 0x59
+	.4byte	0x2c59
+	.uleb128 0x4c
+	.8byte	.LBB303
+	.8byte	.LBE303-.LBB303
+	.4byte	0x7409
+	.uleb128 0x5a
+	.4byte	0x733a
+	.4byte	.LLST330
+	.uleb128 0x2f
+	.4byte	.Ldebug_ranges0+0x300
+	.4byte	0x736c
+	.uleb128 0x59
+	.4byte	0x2c64
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL1667
+	.4byte	0x2ee5
+	.uleb128 0x24
+	.8byte	.LVL1668
+	.4byte	0x2ee5
+	.uleb128 0x24
+	.8byte	.LVL1669
+	.4byte	0x3ce5
+	.uleb128 0x24
+	.8byte	.LVL1670
+	.4byte	0x3ce5
+	.uleb128 0x24
+	.8byte	.LVL1671
+	.4byte	0x40b4
+	.uleb128 0x24
+	.8byte	.LVL1672
+	.4byte	0x3b9a
+	.uleb128 0x24
+	.8byte	.LVL1673
+	.4byte	0x3b9a
+	.uleb128 0x24
+	.8byte	.LVL1676
+	.4byte	0x208d
+	.uleb128 0x24
+	.8byte	.LVL1677
+	.4byte	0x208d
+	.uleb128 0x24
+	.8byte	.LVL1678
+	.4byte	0x27df
+	.uleb128 0x24
+	.8byte	.LVL1679
+	.4byte	0x27df
+	.uleb128 0x24
+	.8byte	.LVL1680
+	.4byte	0x2dfd
+	.byte	0
+	.uleb128 0x24
+	.8byte	.LVL1654
+	.4byte	0x4c0c
+	.uleb128 0x24
+	.8byte	.LVL1655
+	.4byte	0x3a52
+	.uleb128 0x24
+	.8byte	.LVL1656
+	.4byte	0x38fd
+	.uleb128 0x24
+	.8byte	.LVL1657
+	.4byte	0x36fb
+	.uleb128 0x24
+	.8byte	.LVL1658
+	.4byte	0x3781
+	.uleb128 0x24
+	.8byte	.LVL1659
+	.4byte	0x2f6e
+	.uleb128 0x24
+	.8byte	.LVL1660
+	.4byte	0x3a45
+	.uleb128 0x24
+	.8byte	.LVL1661
+	.4byte	0x4ac9
+	.uleb128 0x24
+	.8byte	.LVL1662
+	.4byte	0x2fb0
+	.uleb128 0x24
+	.8byte	.LVL1663
+	.4byte	0x3120
+	.uleb128 0x24
+	.8byte	.LVL1664
+	.4byte	0x3d6b
+	.byte	0
+	.uleb128 0x60
+	.4byte	.LASF654
+	.4byte	.LASF654
+	.byte	0x10
+	.byte	0x35
+	.uleb128 0x61
+	.4byte	.LASF666
+	.4byte	.LASF666
+	.uleb128 0x60
+	.4byte	.LASF655
+	.4byte	.LASF655
+	.byte	0x10
+	.byte	0x31
+	.uleb128 0x60
+	.4byte	.LASF656
+	.4byte	.LASF656
+	.byte	0xa
+	.byte	0x8e
+	.uleb128 0x60
+	.4byte	.LASF657
+	.4byte	.LASF657
+	.byte	0x11
+	.byte	0x2c
+	.uleb128 0x60
+	.4byte	.LASF658
+	.4byte	.LASF658
+	.byte	0xc
+	.byte	0x18
+	.uleb128 0x62
+	.4byte	.LASF659
+	.4byte	.LASF659
+	.byte	0xb
+	.2byte	0x19b
+	.uleb128 0x63
+	.4byte	.LASF667
+	.4byte	.LASF668
+	.byte	0x12
+	.byte	0
+	.4byte	.LASF667
+	.byte	0
+	.section	.debug_abbrev,"",@progbits
+.Ldebug_abbrev0:
+	.uleb128 0x1
+	.uleb128 0x11
+	.byte	0x1
+	.uleb128 0x25
+	.uleb128 0xe
+	.uleb128 0x13
+	.uleb128 0xb
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x1b
+	.uleb128 0xe
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x7
+	.uleb128 0x10
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x2
+	.uleb128 0xf
+	.byte	0
+	.uleb128 0xb
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x24
+	.byte	0
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x3e
+	.uleb128 0xb
+	.uleb128 0x3
+	.uleb128 0x8
+	.byte	0
+	.byte	0
+	.uleb128 0x4
+	.uleb128 0x24
+	.byte	0
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x3e
+	.uleb128 0xb
+	.uleb128 0x3
+	.uleb128 0xe
+	.byte	0
+	.byte	0
+	.uleb128 0x5
+	.uleb128 0x26
+	.byte	0
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x6
+	.uleb128 0x16
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x7
+	.uleb128 0xf
+	.byte	0
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x8
+	.uleb128 0x16
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x9
+	.uleb128 0x15
+	.byte	0
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0xa
+	.uleb128 0x15
+	.byte	0
+	.uleb128 0x27
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0xb
+	.uleb128 0x1
+	.byte	0x1
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0xc
+	.uleb128 0x21
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0xd
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0xe
+	.uleb128 0x13
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3c
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0xf
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0x10
+	.uleb128 0x15
+	.byte	0x1
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x11
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x12
+	.uleb128 0x4
+	.byte	0x1
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x13
+	.uleb128 0x28
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x1c
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x14
+	.uleb128 0x13
+	.byte	0x1
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x15
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x38
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x16
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x38
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x17
+	.uleb128 0x21
+	.byte	0
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2f
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x18
+	.uleb128 0x13
+	.byte	0x1
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0xb
+	.uleb128 0x5
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x19
+	.uleb128 0x21
+	.byte	0
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2f
+	.uleb128 0x5
+	.byte	0
+	.byte	0
+	.uleb128 0x1a
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x38
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x1b
+	.uleb128 0x13
+	.byte	0x1
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0xb
+	.uleb128 0xb
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x1c
+	.uleb128 0xd
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x38
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x1d
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x1e
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x1f
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x20
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x21
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x47
+	.uleb128 0x13
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x22
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x7
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x23
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x24
+	.uleb128 0x4109
+	.byte	0
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x25
+	.uleb128 0x26
+	.byte	0
+	.byte	0
+	.byte	0
+	.uleb128 0x26
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x27
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x7
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2116
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x28
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x29
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x2a
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x20
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x2b
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x2c
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x2d
+	.uleb128 0xa
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x2e
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x34
+	.uleb128 0x19
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x2f
+	.uleb128 0xb
+	.byte	0x1
+	.uleb128 0x55
+	.uleb128 0x17
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x30
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x20
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x32
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x7
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x33
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x20
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x34
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x35
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x36
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x37
+	.uleb128 0xa
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.byte	0
+	.byte	0
+	.uleb128 0x38
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x34
+	.uleb128 0x19
+	.uleb128 0x1c
+	.uleb128 0xe
+	.byte	0
+	.byte	0
+	.uleb128 0x39
+	.uleb128 0xb
+	.byte	0x1
+	.byte	0
+	.byte	0
+	.uleb128 0x3a
+	.uleb128 0xb
+	.byte	0x1
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x3b
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x20
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x3c
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x3d
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x3e
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x20
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x40
+	.uleb128 0xa
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x41
+	.uleb128 0xa
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x11
+	.uleb128 0x1
+	.byte	0
+	.byte	0
+	.uleb128 0x42
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x7
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x43
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x44
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x45
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x46
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x47
+	.uleb128 0x1d
+	.byte	0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x7
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0x5
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x48
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x49
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x7
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x4a
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x4b
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x20
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x4c
+	.uleb128 0xb
+	.byte	0x1
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x7
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x4d
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x4e
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x20
+	.uleb128 0xb
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x4f
+	.uleb128 0x1d
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x7
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x50
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0x8
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x51
+	.uleb128 0x1d
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x52
+	.uleb128 0x1
+	.uleb128 0x55
+	.uleb128 0x17
+	.uleb128 0x58
+	.uleb128 0xb
+	.uleb128 0x59
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x52
+	.uleb128 0xb
+	.byte	0x1
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x7
+	.byte	0
+	.byte	0
+	.uleb128 0x53
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x20
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x54
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x34
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0x55
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x20
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x56
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.uleb128 0x27
+	.uleb128 0x19
+	.uleb128 0x49
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x7
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0x57
+	.uleb128 0x2e
+	.byte	0x1
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x7
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.uleb128 0x1
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x58
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x59
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x5a
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x5b
+	.uleb128 0x34
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x18
+	.byte	0
+	.byte	0
+	.uleb128 0x5c
+	.uleb128 0x5
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x2
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x5d
+	.uleb128 0xb
+	.byte	0x1
+	.uleb128 0x55
+	.uleb128 0x17
+	.byte	0
+	.byte	0
+	.uleb128 0x5e
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.uleb128 0x11
+	.uleb128 0x1
+	.uleb128 0x12
+	.uleb128 0x7
+	.uleb128 0x40
+	.uleb128 0x18
+	.uleb128 0x2117
+	.uleb128 0x19
+	.byte	0
+	.byte	0
+	.uleb128 0x5f
+	.uleb128 0xa
+	.byte	0
+	.uleb128 0x31
+	.uleb128 0x13
+	.byte	0
+	.byte	0
+	.uleb128 0x60
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.uleb128 0x6e
+	.uleb128 0xe
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.byte	0
+	.byte	0
+	.uleb128 0x61
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.uleb128 0x6e
+	.uleb128 0xe
+	.uleb128 0x3
+	.uleb128 0xe
+	.byte	0
+	.byte	0
+	.uleb128 0x62
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.uleb128 0x6e
+	.uleb128 0xe
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0x5
+	.byte	0
+	.byte	0
+	.uleb128 0x63
+	.uleb128 0x2e
+	.byte	0
+	.uleb128 0x3f
+	.uleb128 0x19
+	.uleb128 0x3c
+	.uleb128 0x19
+	.uleb128 0x6e
+	.uleb128 0xe
+	.uleb128 0x3
+	.uleb128 0xe
+	.uleb128 0x3a
+	.uleb128 0xb
+	.uleb128 0x3b
+	.uleb128 0xb
+	.uleb128 0x6e
+	.uleb128 0xe
+	.byte	0
+	.byte	0
+	.byte	0
+	.section	.debug_loc,"",@progbits
+.Ldebug_loc0:
+.LLST334:
+	.8byte	.LVL1722-.Ltext0
+	.8byte	.LVL1724-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST335:
+	.8byte	.LVL1722-.Ltext0
+	.8byte	.LVL1724-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST336:
+	.8byte	.LVL1722-.Ltext0
+	.8byte	.LVL1723-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST202:
+	.8byte	.LVL903-.Ltext0
+	.8byte	.LVL905-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST203:
+	.8byte	.LVL903-.Ltext0
+	.8byte	.LVL905-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST204:
+	.8byte	.LVL903-.Ltext0
+	.8byte	.LVL904-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST116:
+	.8byte	.LVL487-.Ltext0
+	.8byte	.LVL489-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST117:
+	.8byte	.LVL487-.Ltext0
+	.8byte	.LVL489-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST118:
+	.8byte	.LVL487-.Ltext0
+	.8byte	.LVL488-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST199:
+	.8byte	.LVL892-.Ltext0
+	.8byte	.LVL894-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL894-1-.Ltext0
+	.8byte	.LVL900-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL902-.Ltext0
+	.8byte	.LFE265-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST200:
+	.8byte	.LVL892-.Ltext0
+	.8byte	.LVL893-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL893-.Ltext0
+	.8byte	.LVL900-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL902-.Ltext0
+	.8byte	.LFE265-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST201:
+	.8byte	.LVL896-.Ltext0
+	.8byte	.LVL897-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL899-.Ltext0
+	.8byte	.LVL901-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL902-.Ltext0
+	.8byte	.LFE265-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST102:
+	.8byte	.LVL420-.Ltext0
+	.8byte	.LVL425-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL427-.Ltext0
+	.8byte	.LVL428-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST103:
+	.8byte	.LVL420-.Ltext0
+	.8byte	.LVL421-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST104:
+	.8byte	.LVL420-.Ltext0
+	.8byte	.LVL422-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST105:
+	.8byte	.LVL423-.Ltext0
+	.8byte	.LVL426-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL427-.Ltext0
+	.8byte	.LFE263-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST97:
+	.8byte	.LVL403-.Ltext0
+	.8byte	.LVL407-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST98:
+	.8byte	.LVL403-.Ltext0
+	.8byte	.LVL404-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST99:
+	.8byte	.LVL403-.Ltext0
+	.8byte	.LVL405-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL405-.Ltext0
+	.8byte	.LVL409-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL411-.Ltext0
+	.8byte	.LFE262-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	0
+	.8byte	0
+.LLST100:
+	.8byte	.LVL403-.Ltext0
+	.8byte	.LVL411-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL411-.Ltext0
+	.8byte	.LFE262-.Ltext0
+	.2byte	0x1
+	.byte	0x6b
+	.8byte	0
+	.8byte	0
+.LLST101:
+	.8byte	.LVL406-.Ltext0
+	.8byte	.LVL410-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL411-.Ltext0
+	.8byte	.LFE262-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	0
+	.8byte	0
+.LLST86:
+	.8byte	.LVL365-.Ltext0
+	.8byte	.LVL369-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST87:
+	.8byte	.LVL365-.Ltext0
+	.8byte	.LVL366-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST88:
+	.8byte	.LVL365-.Ltext0
+	.8byte	.LVL367-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST89:
+	.8byte	.LVL368-.Ltext0
+	.8byte	.LVL371-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	.LVL372-.Ltext0
+	.8byte	.LFE261-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	0
+	.8byte	0
+.LLST85:
+	.8byte	.LVL357-.Ltext0
+	.8byte	.LVL358-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL358-.Ltext0
+	.8byte	.LVL362-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST84:
+	.8byte	.LVL352-.Ltext0
+	.8byte	.LVL353-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL353-.Ltext0
+	.8byte	.LVL355-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL356-.Ltext0
+	.8byte	.LFE253-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST285:
+	.8byte	.LVL1392-.Ltext0
+	.8byte	.LVL1393-1-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.8byte	.LVL1395-.Ltext0
+	.8byte	.LVL1396-1-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.8byte	.LVL1399-.Ltext0
+	.8byte	.LVL1403-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.8byte	.LVL1404-.Ltext0
+	.8byte	.LVL1405-.Ltext0
+	.2byte	0x1
+	.byte	0x5a
+	.8byte	0
+	.8byte	0
+.LLST286:
+	.8byte	.LVL1400-.Ltext0
+	.8byte	.LVL1401-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST189:
+	.8byte	.LVL846-.Ltext0
+	.8byte	.LVL847-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL847-.Ltext0
+	.8byte	.LVL879-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST190:
+	.8byte	.LVL846-.Ltext0
+	.8byte	.LVL850-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL850-.Ltext0
+	.8byte	.LVL881-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	0
+	.8byte	0
+.LLST191:
+	.8byte	.LVL853-.Ltext0
+	.8byte	.LVL854-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL860-.Ltext0
+	.8byte	.LVL861-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL864-.Ltext0
+	.8byte	.LVL865-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST192:
+	.8byte	.LVL852-.Ltext0
+	.8byte	.LVL855-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL860-.Ltext0
+	.8byte	.LVL862-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL863-.Ltext0
+	.8byte	.LVL865-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST193:
+	.8byte	.LVL859-.Ltext0
+	.8byte	.LVL860-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL868-.Ltext0
+	.8byte	.LVL871-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL872-.Ltext0
+	.8byte	.LVL873-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL875-.Ltext0
+	.8byte	.LVL876-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST194:
+	.8byte	.LVL848-.Ltext0
+	.8byte	.LVL857-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL858-.Ltext0
+	.8byte	.LVL878-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST195:
+	.8byte	.LVL866-.Ltext0
+	.8byte	.LVL871-1-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	.LVL872-.Ltext0
+	.8byte	.LVL874-1-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	.LVL875-.Ltext0
+	.8byte	.LVL876-1-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	0
+	.8byte	0
+.LLST196:
+	.8byte	.LVL851-.Ltext0
+	.8byte	.LVL880-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	0
+	.8byte	0
+.LLST197:
+	.8byte	.LVL869-.Ltext0
+	.8byte	.LVL870-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL872-.Ltext0
+	.8byte	.LVL873-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST280:
+	.8byte	.LVL1346-.Ltext0
+	.8byte	.LVL1349-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1353-.Ltext0
+	.8byte	.LVL1354-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1355-.Ltext0
+	.8byte	.LVL1356-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST281:
+	.8byte	.LVL1366-.Ltext0
+	.8byte	.LVL1370-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL1373-.Ltext0
+	.8byte	.LVL1379-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL1380-.Ltext0
+	.8byte	.LFE247-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST282:
+	.8byte	.LVL1348-.Ltext0
+	.8byte	.LVL1353-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 60
+	.8byte	.LVL1358-.Ltext0
+	.8byte	.LVL1362-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 60
+	.8byte	.LVL1363-.Ltext0
+	.8byte	.LFE247-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 60
+	.8byte	0
+	.8byte	0
+.LLST283:
+	.8byte	.LVL1347-.Ltext0
+	.8byte	.LVL1350-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1353-.Ltext0
+	.8byte	.LVL1357-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1362-.Ltext0
+	.8byte	.LVL1363-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST284:
+	.8byte	.LVL1351-.Ltext0
+	.8byte	.LVL1352-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1367-.Ltext0
+	.8byte	.LFE247-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST80:
+	.8byte	.LVL345-.Ltext0
+	.8byte	.LVL346-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL346-.Ltext0
+	.8byte	.LFE246-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	0
+	.8byte	0
+.LLST81:
+	.8byte	.LVL345-.Ltext0
+	.8byte	.LVL347-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL347-1-.Ltext0
+	.8byte	.LFE246-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.8byte	0
+	.8byte	0
+.LLST82:
+	.8byte	.LVL345-.Ltext0
+	.8byte	.LVL347-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL347-1-.Ltext0
+	.8byte	.LFE246-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.8byte	0
+	.8byte	0
+.LLST83:
+	.8byte	.LVL349-.Ltext0
+	.8byte	.LVL350-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL351-.Ltext0
+	.8byte	.LFE246-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST79:
+	.8byte	.LVL341-.Ltext0
+	.8byte	.LVL342-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL343-.Ltext0
+	.8byte	.LVL344-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST77:
+	.8byte	.LVL334-.Ltext0
+	.8byte	.LVL335-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL336-.Ltext0
+	.8byte	.LVL337-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL338-.Ltext0
+	.8byte	.LFE244-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST78:
+	.8byte	.LVL333-.Ltext0
+	.8byte	.LVL339-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL340-.Ltext0
+	.8byte	.LFE244-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST75:
+	.8byte	.LVL327-.Ltext0
+	.8byte	.LVL328-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL329-.Ltext0
+	.8byte	.LFE243-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST76:
+	.8byte	.LVL326-.Ltext0
+	.8byte	.LVL330-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL331-.Ltext0
+	.8byte	.LFE243-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST220:
+	.8byte	.LVL996-.Ltext0
+	.8byte	.LVL997-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL997-.Ltext0
+	.8byte	.LVL999-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1000-.Ltext0
+	.8byte	.LFE241-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST73:
+	.8byte	.LVL313-.Ltext0
+	.8byte	.LVL314-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL314-.Ltext0
+	.8byte	.LVL321-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL322-.Ltext0
+	.8byte	.LFE239-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST74:
+	.8byte	.LVL318-.Ltext0
+	.8byte	.LVL319-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL322-.Ltext0
+	.8byte	.LVL323-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL324-.Ltext0
+	.8byte	.LFE239-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST266:
+	.8byte	.LVL1286-.Ltext0
+	.8byte	.LVL1288-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1288-.Ltext0
+	.8byte	.LVL1296-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL1297-.Ltext0
+	.8byte	.LFE238-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST267:
+	.8byte	.LVL1287-.Ltext0
+	.8byte	.LVL1296-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1297-.Ltext0
+	.8byte	.LFE238-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST209:
+	.8byte	.LVL925-.Ltext0
+	.8byte	.LVL962-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST210:
+	.8byte	.LVL926-.Ltext0
+	.8byte	.LVL941-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL941-.Ltext0
+	.8byte	.LVL942-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL942-.Ltext0
+	.8byte	.LVL944-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL944-.Ltext0
+	.8byte	.LVL945-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL945-.Ltext0
+	.8byte	.LVL954-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL954-.Ltext0
+	.8byte	.LVL956-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL956-.Ltext0
+	.8byte	.LVL963-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	0
+	.8byte	0
+.LLST211:
+	.8byte	.LVL926-.Ltext0
+	.8byte	.LVL952-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	.LVL953-.Ltext0
+	.8byte	.LVL964-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	0
+	.8byte	0
+.LLST212:
+	.8byte	.LVL947-.Ltext0
+	.8byte	.LVL948-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL949-.Ltext0
+	.8byte	.LVL950-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL957-.Ltext0
+	.8byte	.LVL958-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL959-.Ltext0
+	.8byte	.LVL960-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST213:
+	.8byte	.LVL928-.Ltext0
+	.8byte	.LVL929-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL930-.Ltext0
+	.8byte	.LVL931-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL936-.Ltext0
+	.8byte	.LVL937-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST67:
+	.8byte	.LVL289-.Ltext0
+	.8byte	.LVL291-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL297-.Ltext0
+	.8byte	.LFE235-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST68:
+	.8byte	.LVL289-.Ltext0
+	.8byte	.LVL292-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	.LVL296-.Ltext0
+	.8byte	.LVL304-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	.LVL306-.Ltext0
+	.8byte	.LFE235-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	0
+	.8byte	0
+.LLST69:
+	.8byte	.LVL289-.Ltext0
+	.8byte	.LVL290-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL295-.Ltext0
+	.8byte	.LVL298-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL306-.Ltext0
+	.8byte	.LVL307-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL308-.Ltext0
+	.8byte	.LFE235-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST70:
+	.8byte	.LVL289-.Ltext0
+	.8byte	.LVL292-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.8byte	.LVL294-.Ltext0
+	.8byte	.LVL305-1-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.8byte	.LVL306-.Ltext0
+	.8byte	.LFE235-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.8byte	0
+	.8byte	0
+.LLST71:
+	.8byte	.LVL289-.Ltext0
+	.8byte	.LVL292-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL299-.Ltext0
+	.8byte	.LVL301-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL302-.Ltext0
+	.8byte	.LVL303-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST60:
+	.8byte	.LVL194-.Ltext0
+	.8byte	.LVL196-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL199-.Ltext0
+	.8byte	.LVL203-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST61:
+	.8byte	.LVL197-.Ltext0
+	.8byte	.LVL198-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL203-.Ltext0
+	.8byte	.LVL204-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST62:
+	.8byte	.LVL195-.Ltext0
+	.8byte	.LVL200-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL201-.Ltext0
+	.8byte	.LVL202-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST59:
+	.8byte	.LVL190-.Ltext0
+	.8byte	.LVL191-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL192-.Ltext0
+	.8byte	.LVL193-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST58:
+	.8byte	.LVL183-.Ltext0
+	.8byte	.LVL184-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL184-.Ltext0
+	.8byte	.LVL185-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.8byte	.LVL186-.Ltext0
+	.8byte	.LVL189-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.8byte	0
+	.8byte	0
+.LLST163:
+	.8byte	.LVL693-.Ltext0
+	.8byte	.LVL695-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL696-.Ltext0
+	.8byte	.LFE230-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST186:
+	.8byte	.LVL827-.Ltext0
+	.8byte	.LVL830-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL836-.Ltext0
+	.8byte	.LVL839-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST187:
+	.8byte	.LVL831-.Ltext0
+	.8byte	.LVL834-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL839-.Ltext0
+	.8byte	.LFE229-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	0
+	.8byte	0
+.LLST188:
+	.8byte	.LVL832-.Ltext0
+	.8byte	.LVL835-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL841-.Ltext0
+	.8byte	.LFE229-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	0
+	.8byte	0
+.LLST264:
+	.8byte	.LVL1272-.Ltext0
+	.8byte	.LVL1273-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1278-.Ltext0
+	.8byte	.LVL1284-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1285-.Ltext0
+	.8byte	.LFE228-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST265:
+	.8byte	.LVL1270-.Ltext0
+	.8byte	.LVL1274-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1275-.Ltext0
+	.8byte	.LVL1279-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST242:
+	.8byte	.LVL1133-.Ltext0
+	.8byte	.LVL1134-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1134-.Ltext0
+	.8byte	.LVL1135-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1136-.Ltext0
+	.8byte	.LFE227-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST183:
+	.8byte	.LVL809-.Ltext0
+	.8byte	.LVL818-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL819-.Ltext0
+	.8byte	.LVL825-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST184:
+	.8byte	.LVL811-.Ltext0
+	.8byte	.LVL820-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL821-.Ltext0
+	.8byte	.LVL823-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST185:
+	.8byte	.LVL810-.Ltext0
+	.8byte	.LVL815-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL816-.Ltext0
+	.8byte	.LVL826-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST57:
+	.8byte	.LVL176-.Ltext0
+	.8byte	.LVL177-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL177-.Ltext0
+	.8byte	.LVL179-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL180-.Ltext0
+	.8byte	.LFE223-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST225:
+	.8byte	.LVL1025-.Ltext0
+	.8byte	.LVL1026-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1026-.Ltext0
+	.8byte	.LVL1032-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1038-.Ltext0
+	.8byte	.LFE220-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST226:
+	.8byte	.LVL1029-.Ltext0
+	.8byte	.LVL1037-.Ltext0
+	.2byte	0x1
+	.byte	0x6b
+	.8byte	.LVL1038-.Ltext0
+	.8byte	.LFE220-.Ltext0
+	.2byte	0x1
+	.byte	0x6b
+	.8byte	0
+	.8byte	0
+.LLST227:
+	.8byte	.LVL1027-.Ltext0
+	.8byte	.LVL1028-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1030-.Ltext0
+	.8byte	.LVL1033-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1047-.Ltext0
+	.8byte	.LVL1049-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1055-.Ltext0
+	.8byte	.LVL1056-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1057-.Ltext0
+	.8byte	.LVL1058-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1066-.Ltext0
+	.8byte	.LVL1067-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1074-.Ltext0
+	.8byte	.LVL1076-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1078-.Ltext0
+	.8byte	.LVL1080-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1081-.Ltext0
+	.8byte	.LVL1082-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1084-.Ltext0
+	.8byte	.LVL1086-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1087-.Ltext0
+	.8byte	.LVL1088-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1128-.Ltext0
+	.8byte	.LVL1129-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1130-.Ltext0
+	.8byte	.LVL1131-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1132-.Ltext0
+	.8byte	.LFE220-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST228:
+	.8byte	.LVL1048-.Ltext0
+	.8byte	.LVL1049-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1078-.Ltext0
+	.8byte	.LVL1079-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1083-.Ltext0
+	.8byte	.LVL1085-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1087-.Ltext0
+	.8byte	.LVL1088-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1132-.Ltext0
+	.8byte	.LFE220-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST229:
+	.8byte	.LVL1031-.Ltext0
+	.8byte	.LVL1037-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1046-.Ltext0
+	.8byte	.LVL1051-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1066-.Ltext0
+	.8byte	.LFE220-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	0
+	.8byte	0
+.LLST230:
+	.8byte	.LVL1031-.Ltext0
+	.8byte	.LVL1035-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1044-.Ltext0
+	.8byte	.LVL1051-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1062-.Ltext0
+	.8byte	.LVL1063-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1066-.Ltext0
+	.8byte	.LFE220-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST231:
+	.8byte	.LVL1030-.Ltext0
+	.8byte	.LVL1035-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL1040-.Ltext0
+	.8byte	.LVL1051-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL1052-.Ltext0
+	.8byte	.LVL1053-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1053-.Ltext0
+	.8byte	.LVL1068-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL1069-.Ltext0
+	.8byte	.LVL1070-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL1072-.Ltext0
+	.8byte	.LVL1075-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	0
+	.8byte	0
+.LLST232:
+	.8byte	.LVL1043-.Ltext0
+	.8byte	.LVL1045-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL1059-.Ltext0
+	.8byte	.LVL1061-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL1063-.Ltext0
+	.8byte	.LVL1064-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL1065-.Ltext0
+	.8byte	.LVL1066-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST233:
+	.8byte	.LVL1031-.Ltext0
+	.8byte	.LVL1036-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL1048-.Ltext0
+	.8byte	.LVL1051-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL1074-.Ltext0
+	.8byte	.LVL1092-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL1093-.Ltext0
+	.8byte	.LVL1101-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL1106-.Ltext0
+	.8byte	.LVL1126-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL1128-.Ltext0
+	.8byte	.LFE220-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	0
+	.8byte	0
+.LLST234:
+	.8byte	.LVL1031-.Ltext0
+	.8byte	.LVL1038-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 132
+	.8byte	.LVL1048-.Ltext0
+	.8byte	.LVL1051-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 132
+	.8byte	.LVL1074-.Ltext0
+	.8byte	.LVL1117-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 132
+	.8byte	.LVL1117-.Ltext0
+	.8byte	.LVL1118-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1118-.Ltext0
+	.8byte	.LFE220-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 132
+	.8byte	0
+	.8byte	0
+.LLST235:
+	.8byte	.LVL1031-.Ltext0
+	.8byte	.LVL1038-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 136
+	.8byte	.LVL1048-.Ltext0
+	.8byte	.LVL1051-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 136
+	.8byte	.LVL1074-.Ltext0
+	.8byte	.LFE220-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 136
+	.8byte	0
+	.8byte	0
+.LLST236:
+	.8byte	.LVL1031-.Ltext0
+	.8byte	.LVL1038-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 140
+	.8byte	.LVL1048-.Ltext0
+	.8byte	.LVL1051-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 140
+	.8byte	.LVL1074-.Ltext0
+	.8byte	.LFE220-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 140
+	.8byte	0
+	.8byte	0
+.LLST237:
+	.8byte	.LVL1031-.Ltext0
+	.8byte	.LVL1036-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL1048-.Ltext0
+	.8byte	.LVL1051-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL1074-.Ltext0
+	.8byte	.LVL1092-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL1102-.Ltext0
+	.8byte	.LVL1103-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL1105-.Ltext0
+	.8byte	.LVL1106-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL1126-.Ltext0
+	.8byte	.LFE220-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	0
+	.8byte	0
+.LLST238:
+	.8byte	.LVL1078-.Ltext0
+	.8byte	.LVL1079-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1087-.Ltext0
+	.8byte	.LVL1088-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1098-.Ltext0
+	.8byte	.LVL1099-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1121-.Ltext0
+	.8byte	.LVL1122-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST239:
+	.8byte	.LVL1031-.Ltext0
+	.8byte	.LVL1034-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL1042-.Ltext0
+	.8byte	.LVL1051-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL1059-.Ltext0
+	.8byte	.LFE220-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST240:
+	.8byte	.LVL1108-.Ltext0
+	.8byte	.LVL1109-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST241:
+	.8byte	.LVL1097-.Ltext0
+	.8byte	.LVL1098-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL1111-.Ltext0
+	.8byte	.LVL1112-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL1114-.Ltext0
+	.8byte	.LVL1117-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST157:
+	.8byte	.LVL668-.Ltext0
+	.8byte	.LVL669-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL669-.Ltext0
+	.8byte	.LVL685-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL686-.Ltext0
+	.8byte	.LFE219-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST158:
+	.8byte	.LVL668-.Ltext0
+	.8byte	.LVL670-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL670-1-.Ltext0
+	.8byte	.LFE219-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 44
+	.8byte	0
+	.8byte	0
+.LLST159:
+	.8byte	.LVL671-.Ltext0
+	.8byte	.LVL676-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL680-.Ltext0
+	.8byte	.LVL682-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL686-.Ltext0
+	.8byte	.LFE219-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST160:
+	.8byte	.LVL672-.Ltext0
+	.8byte	.LVL675-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL680-.Ltext0
+	.8byte	.LVL681-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL686-.Ltext0
+	.8byte	.LVL689-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL690-.Ltext0
+	.8byte	.LVL692-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST161:
+	.8byte	.LVL674-.Ltext0
+	.8byte	.LVL684-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL686-.Ltext0
+	.8byte	.LVL687-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL688-.Ltext0
+	.8byte	.LVL691-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST162:
+	.8byte	.LVL673-.Ltext0
+	.8byte	.LVL677-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL680-.Ltext0
+	.8byte	.LVL683-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL686-.Ltext0
+	.8byte	.LVL691-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST55:
+	.8byte	.LVL171-.Ltext0
+	.8byte	.LVL172-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL172-.Ltext0
+	.8byte	.LFE218-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.8byte	0
+	.8byte	0
+.LLST56:
+	.8byte	.LVL171-.Ltext0
+	.8byte	.LVL173-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST182:
+	.8byte	.LVL795-.Ltext0
+	.8byte	.LVL796-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL797-.Ltext0
+	.8byte	.LVL798-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL799-.Ltext0
+	.8byte	.LFE216-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST173:
+	.8byte	.LVL745-.Ltext0
+	.8byte	.LVL748-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL748-.Ltext0
+	.8byte	.LVL770-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL774-.Ltext0
+	.8byte	.LFE214-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST174:
+	.8byte	.LVL746-.Ltext0
+	.8byte	.LVL758-.Ltext0
+	.2byte	0x1
+	.byte	0x6b
+	.8byte	.LVL758-.Ltext0
+	.8byte	.LVL773-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL774-.Ltext0
+	.8byte	.LVL780-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL780-.Ltext0
+	.8byte	.LFE214-.Ltext0
+	.2byte	0x1
+	.byte	0x6b
+	.8byte	0
+	.8byte	0
+.LLST175:
+	.8byte	.LVL761-.Ltext0
+	.8byte	.LVL766-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL774-.Ltext0
+	.8byte	.LVL776-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST176:
+	.8byte	.LVL787-.Ltext0
+	.8byte	.LVL788-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL789-.Ltext0
+	.8byte	.LVL790-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL791-.Ltext0
+	.8byte	.LFE214-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST177:
+	.8byte	.LVL748-.Ltext0
+	.8byte	.LVL749-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL755-.Ltext0
+	.8byte	.LVL760-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL763-.Ltext0
+	.8byte	.LVL766-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL774-.Ltext0
+	.8byte	.LVL775-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL778-.Ltext0
+	.8byte	.LVL779-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL779-.Ltext0
+	.8byte	.LVL781-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL782-.Ltext0
+	.8byte	.LVL783-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL785-.Ltext0
+	.8byte	.LVL786-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL787-.Ltext0
+	.8byte	.LFE214-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST178:
+	.8byte	.LVL751-.Ltext0
+	.8byte	.LVL759-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL764-.Ltext0
+	.8byte	.LVL771-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL779-.Ltext0
+	.8byte	.LFE214-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST179:
+	.8byte	.LVL751-.Ltext0
+	.8byte	.LVL762-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL764-.Ltext0
+	.8byte	.LVL772-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL779-.Ltext0
+	.8byte	.LFE214-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	0
+	.8byte	0
+.LLST180:
+	.8byte	.LVL747-.Ltext0
+	.8byte	.LVL771-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL774-.Ltext0
+	.8byte	.LFE214-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	0
+	.8byte	0
+.LLST181:
+	.8byte	.LVL749-.Ltext0
+	.8byte	.LVL750-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL753-.Ltext0
+	.8byte	.LVL754-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL756-.Ltext0
+	.8byte	.LVL757-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL764-.Ltext0
+	.8byte	.LVL765-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST329:
+	.8byte	.LVL1637-.Ltext0
+	.8byte	.LVL1638-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL1640-.Ltext0
+	.8byte	.LVL1652-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL1653-.Ltext0
+	.8byte	.LFE213-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST54:
+	.8byte	.LVL169-.Ltext0
+	.8byte	.LVL170-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL170-.Ltext0
+	.8byte	.LFE212-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST170:
+	.8byte	.LVL725-.Ltext0
+	.8byte	.LVL730-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL731-.Ltext0
+	.8byte	.LVL742-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL744-.Ltext0
+	.8byte	.LFE209-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	0
+	.8byte	0
+.LLST171:
+	.8byte	.LVL725-.Ltext0
+	.8byte	.LVL728-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL729-.Ltext0
+	.8byte	.LVL732-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL739-.Ltext0
+	.8byte	.LVL741-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL744-.Ltext0
+	.8byte	.LFE209-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST172:
+	.8byte	.LVL725-.Ltext0
+	.8byte	.LVL743-.Ltext0
+	.2byte	0x1
+	.byte	0x6b
+	.8byte	.LVL744-.Ltext0
+	.8byte	.LFE209-.Ltext0
+	.2byte	0x1
+	.byte	0x6b
+	.8byte	0
+	.8byte	0
+.LLST262:
+	.8byte	.LVL1254-.Ltext0
+	.8byte	.LVL1268-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	0
+	.8byte	0
+.LLST263:
+	.8byte	.LVL1253-.Ltext0
+	.8byte	.LVL1264-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1265-.Ltext0
+	.8byte	.LVL1268-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST166:
+	.8byte	.LVL709-.Ltext0
+	.8byte	.LVL710-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL710-.Ltext0
+	.8byte	.LVL716-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL717-.Ltext0
+	.8byte	.LVL719-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL719-.Ltext0
+	.8byte	.LFE206-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST167:
+	.8byte	.LVL713-.Ltext0
+	.8byte	.LVL714-1-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	.LVL717-.Ltext0
+	.8byte	.LVL718-1-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	0
+	.8byte	0
+.LLST168:
+	.8byte	.LVL711-.Ltext0
+	.8byte	.LVL716-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL717-.Ltext0
+	.8byte	.LVL719-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST169:
+	.8byte	.LVL712-.Ltext0
+	.8byte	.LVL714-1-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	.LVL717-.Ltext0
+	.8byte	.LVL718-1-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	0
+	.8byte	0
+.LLST254:
+	.8byte	.LVL1216-.Ltext0
+	.8byte	.LVL1218-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1220-.Ltext0
+	.8byte	.LVL1221-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1225-.Ltext0
+	.8byte	.LVL1227-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST255:
+	.8byte	.LVL1217-.Ltext0
+	.8byte	.LVL1219-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL1220-.Ltext0
+	.8byte	.LVL1222-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL1226-.Ltext0
+	.8byte	.LVL1227-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST256:
+	.8byte	.LVL1228-.Ltext0
+	.8byte	.LVL1230-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1230-.Ltext0
+	.8byte	.LVL1234-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1235-.Ltext0
+	.8byte	.LFE203-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	0
+	.8byte	0
+.LLST257:
+	.8byte	.LVL1228-.Ltext0
+	.8byte	.LVL1229-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1229-.Ltext0
+	.8byte	.LVL1234-.Ltext0
+	.2byte	0x1
+	.byte	0x6b
+	.8byte	.LVL1235-.Ltext0
+	.8byte	.LVL1237-.Ltext0
+	.2byte	0x1
+	.byte	0x6b
+	.8byte	.LVL1237-.Ltext0
+	.8byte	.LVL1245-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1245-.Ltext0
+	.8byte	.LFE203-.Ltext0
+	.2byte	0x1
+	.byte	0x6b
+	.8byte	0
+	.8byte	0
+.LLST258:
+	.8byte	.LVL1228-.Ltext0
+	.8byte	.LVL1235-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL1235-.Ltext0
+	.8byte	.LVL1247-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1247-.Ltext0
+	.8byte	.LFE203-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST259:
+	.8byte	.LVL1231-.Ltext0
+	.8byte	.LVL1232-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1235-.Ltext0
+	.8byte	.LVL1236-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1238-.Ltext0
+	.8byte	.LVL1247-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST260:
+	.8byte	.LVL1239-.Ltext0
+	.8byte	.LVL1240-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1243-.Ltext0
+	.8byte	.LVL1244-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST261:
+	.8byte	.LVL1231-.Ltext0
+	.8byte	.LVL1233-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL1235-.Ltext0
+	.8byte	.LVL1247-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	0
+	.8byte	0
+.LLST248:
+	.8byte	.LVL1194-.Ltext0
+	.8byte	.LVL1196-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1196-.Ltext0
+	.8byte	.LVL1202-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1203-.Ltext0
+	.8byte	.LFE202-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	0
+	.8byte	0
+.LLST249:
+	.8byte	.LVL1194-.Ltext0
+	.8byte	.LVL1197-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1197-.Ltext0
+	.8byte	.LVL1200-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1203-.Ltext0
+	.8byte	.LVL1204-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1204-.Ltext0
+	.8byte	.LVL1212-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1212-.Ltext0
+	.8byte	.LFE202-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST250:
+	.8byte	.LVL1194-.Ltext0
+	.8byte	.LVL1195-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL1195-.Ltext0
+	.8byte	.LVL1201-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL1203-.Ltext0
+	.8byte	.LFE202-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	0
+	.8byte	0
+.LLST251:
+	.8byte	.LVL1198-.Ltext0
+	.8byte	.LVL1199-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1203-.Ltext0
+	.8byte	.LVL1205-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1206-.Ltext0
+	.8byte	.LVL1214-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST252:
+	.8byte	.LVL1207-.Ltext0
+	.8byte	.LVL1208-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL1211-.Ltext0
+	.8byte	.LVL1213-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST253:
+	.8byte	.LVL1198-.Ltext0
+	.8byte	.LVL1200-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL1203-.Ltext0
+	.8byte	.LVL1214-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST151:
+	.8byte	.LVL647-.Ltext0
+	.8byte	.LVL651-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL652-.Ltext0
+	.8byte	.LVL653-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST152:
+	.8byte	.LVL647-.Ltext0
+	.8byte	.LVL649-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL649-.Ltext0
+	.8byte	.LVL664-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL666-.Ltext0
+	.8byte	.LFE201-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST153:
+	.8byte	.LVL647-.Ltext0
+	.8byte	.LVL648-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL648-.Ltext0
+	.8byte	.LVL665-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL666-.Ltext0
+	.8byte	.LFE201-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST154:
+	.8byte	.LVL654-.Ltext0
+	.8byte	.LVL657-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL658-.Ltext0
+	.8byte	.LVL662-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL666-.Ltext0
+	.8byte	.LFE201-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST155:
+	.8byte	.LVL650-.Ltext0
+	.8byte	.LVL664-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL666-.Ltext0
+	.8byte	.LFE201-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST156:
+	.8byte	.LVL661-.Ltext0
+	.8byte	.LVL663-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL667-.Ltext0
+	.8byte	.LFE201-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST224:
+	.8byte	.LVL1018-.Ltext0
+	.8byte	.LVL1020-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1021-.Ltext0
+	.8byte	.LVL1023-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1024-.Ltext0
+	.8byte	.LFE200-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST50:
+	.8byte	.LVL158-.Ltext0
+	.8byte	.LVL160-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL161-.Ltext0
+	.8byte	.LFE199-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST150:
+	.8byte	.LVL644-.Ltext0
+	.8byte	.LVL645-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST140:
+	.8byte	.LVL608-.Ltext0
+	.8byte	.LVL621-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST141:
+	.8byte	.LVL608-.Ltext0
+	.8byte	.LVL623-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST142:
+	.8byte	.LVL608-.Ltext0
+	.8byte	.LVL610-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL610-.Ltext0
+	.8byte	.LVL624-.Ltext0
+	.2byte	0x1
+	.byte	0x6b
+	.8byte	0
+	.8byte	0
+.LLST143:
+	.8byte	.LVL614-.Ltext0
+	.8byte	.LVL615-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST144:
+	.8byte	.LVL609-.Ltext0
+	.8byte	.LVL617-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL618-.Ltext0
+	.8byte	.LVL622-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST135:
+	.8byte	.LVL585-.Ltext0
+	.8byte	.LVL587-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL587-.Ltext0
+	.8byte	.LVL592-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL593-.Ltext0
+	.8byte	.LFE196-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST136:
+	.8byte	.LVL598-.Ltext0
+	.8byte	.LVL600-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL603-.Ltext0
+	.8byte	.LVL606-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL607-.Ltext0
+	.8byte	.LFE196-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST137:
+	.8byte	.LVL597-.Ltext0
+	.8byte	.LVL599-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL603-.Ltext0
+	.8byte	.LVL604-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL605-.Ltext0
+	.8byte	.LFE196-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST138:
+	.8byte	.LVL586-.Ltext0
+	.8byte	.LVL592-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL593-.Ltext0
+	.8byte	.LVL595-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST139:
+	.8byte	.LVL590-.Ltext0
+	.8byte	.LVL591-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL594-.Ltext0
+	.8byte	.LFE196-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST145:
+	.8byte	.LVL625-.Ltext0
+	.8byte	.LVL628-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL628-1-.Ltext0
+	.8byte	.LVL635-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL638-.Ltext0
+	.8byte	.LFE195-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST146:
+	.8byte	.LVL629-.Ltext0
+	.8byte	.LVL636-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL638-.Ltext0
+	.8byte	.LFE195-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	0
+	.8byte	0
+.LLST147:
+	.8byte	.LVL631-.Ltext0
+	.8byte	.LVL635-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL638-.Ltext0
+	.8byte	.LVL641-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL642-.Ltext0
+	.8byte	.LFE195-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST148:
+	.8byte	.LVL626-.Ltext0
+	.8byte	.LVL631-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL633-.Ltext0
+	.8byte	.LVL635-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST149:
+	.8byte	.LVL627-.Ltext0
+	.8byte	.LVL637-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	.LVL638-.Ltext0
+	.8byte	.LFE195-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	0
+	.8byte	0
+.LLST127:
+	.8byte	.LVL563-.Ltext0
+	.8byte	.LVL566-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL566-.Ltext0
+	.8byte	.LVL573-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL577-.Ltext0
+	.8byte	.LFE193-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST128:
+	.8byte	.LVL565-.Ltext0
+	.8byte	.LVL575-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL577-.Ltext0
+	.8byte	.LFE193-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST129:
+	.8byte	.LVL564-.Ltext0
+	.8byte	.LVL571-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL577-.Ltext0
+	.8byte	.LVL582-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST130:
+	.8byte	.LVL564-.Ltext0
+	.8byte	.LVL574-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL577-.Ltext0
+	.8byte	.LFE193-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST131:
+	.8byte	.LVL568-.Ltext0
+	.8byte	.LVL578-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL579-.Ltext0
+	.8byte	.LVL583-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL584-.Ltext0
+	.8byte	.LFE193-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST132:
+	.8byte	.LVL568-.Ltext0
+	.8byte	.LVL572-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL577-.Ltext0
+	.8byte	.LVL580-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL581-.Ltext0
+	.8byte	.LVL582-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST133:
+	.8byte	.LVL569-.Ltext0
+	.8byte	.LVL576-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL582-.Ltext0
+	.8byte	.LFE193-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	0
+	.8byte	0
+.LLST134:
+	.8byte	.LVL570-.Ltext0
+	.8byte	.LVL576-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	.LVL582-.Ltext0
+	.8byte	.LFE193-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	0
+	.8byte	0
+.LLST123:
+	.8byte	.LVL542-.Ltext0
+	.8byte	.LVL543-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL543-.Ltext0
+	.8byte	.LVL553-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL554-.Ltext0
+	.8byte	.LFE192-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST124:
+	.8byte	.LVL542-.Ltext0
+	.8byte	.LVL544-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL545-.Ltext0
+	.8byte	.LVL546-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL548-.Ltext0
+	.8byte	.LVL549-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL555-.Ltext0
+	.8byte	.LVL556-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST125:
+	.8byte	.LVL551-.Ltext0
+	.8byte	.LVL552-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	.LVL558-.Ltext0
+	.8byte	.LFE192-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	0
+	.8byte	0
+.LLST126:
+	.8byte	.LVL547-.Ltext0
+	.8byte	.LVL553-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL554-.Ltext0
+	.8byte	.LFE192-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	0
+	.8byte	0
+.LLST42:
+	.8byte	.LVL128-.Ltext0
+	.8byte	.LVL129-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL129-.Ltext0
+	.8byte	.LVL132-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL134-.Ltext0
+	.8byte	.LFE190-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST43:
+	.8byte	.LVL130-.Ltext0
+	.8byte	.LVL131-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL133-.Ltext0
+	.8byte	.LVL135-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST41:
+	.8byte	.LVL126-.Ltext0
+	.8byte	.LVL127-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST37:
+	.8byte	.LVL115-.Ltext0
+	.8byte	.LVL120-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL122-.Ltext0
+	.8byte	.LVL125-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST38:
+	.8byte	.LVL115-.Ltext0
+	.8byte	.LVL119-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL122-.Ltext0
+	.8byte	.LVL123-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL124-.Ltext0
+	.8byte	.LFE188-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST39:
+	.8byte	.LVL118-.Ltext0
+	.8byte	.LVL121-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST40:
+	.8byte	.LVL116-.Ltext0
+	.8byte	.LVL117-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL122-.Ltext0
+	.8byte	.LFE188-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST34:
+	.8byte	.LVL107-.Ltext0
+	.8byte	.LVL108-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL108-.Ltext0
+	.8byte	.LVL113-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL114-.Ltext0
+	.8byte	.LFE187-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST35:
+	.8byte	.LVL107-.Ltext0
+	.8byte	.LVL110-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST36:
+	.8byte	.LVL109-.Ltext0
+	.8byte	.LVL112-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL114-.Ltext0
+	.8byte	.LFE187-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST30:
+	.8byte	.LVL96-.Ltext0
+	.8byte	.LVL100-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL101-.Ltext0
+	.8byte	.LFE186-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST31:
+	.8byte	.LVL97-.Ltext0
+	.8byte	.LVL103-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	0
+	.8byte	0
+.LLST32:
+	.8byte	.LVL99-.Ltext0
+	.8byte	.LVL101-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
+	.8byte	.LVL102-.Ltext0
+	.8byte	.LFE186-.Ltext0
+	.2byte	0x1
+	.byte	0x5c
+	.8byte	0
+	.8byte	0
+.LLST23:
+	.8byte	.LVL76-.Ltext0
+	.8byte	.LVL80-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL81-.Ltext0
+	.8byte	.LFE185-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST24:
+	.8byte	.LVL77-.Ltext0
+	.8byte	.LVL92-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	0
+	.8byte	0
+.LLST25:
+	.8byte	.LVL82-.Ltext0
+	.8byte	.LVL83-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.8byte	0
+	.8byte	0
+.LLST26:
+	.8byte	.LVL85-.Ltext0
+	.8byte	.LVL86-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	0
+	.8byte	0
+.LLST27:
+	.8byte	.LVL79-.Ltext0
+	.8byte	.LVL81-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.8byte	.LVL84-.Ltext0
+	.8byte	.LFE185-.Ltext0
+	.2byte	0x1
+	.byte	0x56
+	.8byte	0
+	.8byte	0
+.LLST28:
+	.8byte	.LVL79-.Ltext0
+	.8byte	.LVL81-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	.LVL87-.Ltext0
+	.8byte	.LVL88-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	.LVL89-.Ltext0
+	.8byte	.LVL90-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	.LVL91-.Ltext0
+	.8byte	.LFE185-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	0
+	.8byte	0
+.LLST22:
+	.8byte	.LVL72-.Ltext0
+	.8byte	.LVL73-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL74-.Ltext0
+	.8byte	.LVL75-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST21:
+	.8byte	.LVL67-.Ltext0
+	.8byte	.LVL69-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL70-.Ltext0
+	.8byte	.LVL71-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST18:
+	.8byte	.LVL53-.Ltext0
+	.8byte	.LVL54-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL59-.Ltext0
+	.8byte	.LVL62-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL64-.Ltext0
+	.8byte	.LFE180-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST19:
+	.8byte	.LVL53-.Ltext0
+	.8byte	.LVL55-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	.LVL57-.Ltext0
+	.8byte	.LVL58-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	.LVL63-.Ltext0
+	.8byte	.LVL65-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	0
+	.8byte	0
+.LLST20:
+	.8byte	.LVL53-.Ltext0
+	.8byte	.LVL55-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.8byte	.LVL57-.Ltext0
+	.8byte	.LVL60-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.8byte	.LVL61-.Ltext0
+	.8byte	.LVL66-.Ltext0
+	.2byte	0x1
+	.byte	0x58
+	.8byte	0
+	.8byte	0
+.LLST106:
+	.8byte	.LVL432-.Ltext0
+	.8byte	.LVL433-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL433-.Ltext0
+	.8byte	.LVL440-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST107:
+	.8byte	.LVL432-.Ltext0
+	.8byte	.LVL434-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL437-.Ltext0
+	.8byte	.LVL438-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL439-.Ltext0
+	.8byte	.LFE179-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST108:
+	.8byte	.LVL435-.Ltext0
+	.8byte	.LVL440-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST122:
+	.8byte	.LVL539-.Ltext0
+	.8byte	.LVL540-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST93:
+	.8byte	.LVL389-.Ltext0
+	.8byte	.LVL392-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL398-.Ltext0
+	.8byte	.LVL399-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST94:
+	.8byte	.LVL389-.Ltext0
+	.8byte	.LVL390-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL390-.Ltext0
+	.8byte	.LVL397-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL398-.Ltext0
+	.8byte	.LFE175-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST95:
+	.8byte	.LVL394-.Ltext0
+	.8byte	.LVL396-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL399-.Ltext0
+	.8byte	.LFE175-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST96:
+	.8byte	.LVL391-.Ltext0
+	.8byte	.LVL395-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL399-.Ltext0
+	.8byte	.LVL401-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL402-.Ltext0
+	.8byte	.LFE175-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST16:
+	.8byte	.LVL47-.Ltext0
+	.8byte	.LVL49-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL50-.Ltext0
+	.8byte	.LVL52-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST17:
+	.8byte	.LVL47-.Ltext0
+	.8byte	.LVL48-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL50-.Ltext0
+	.8byte	.LVL51-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST15:
+	.8byte	.LVL45-.Ltext0
+	.8byte	.LVL46-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL46-.Ltext0
+	.8byte	.LFE173-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST14:
+	.8byte	.LVL43-.Ltext0
+	.8byte	.LVL44-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL44-.Ltext0
+	.8byte	.LFE172-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST13:
+	.8byte	.LVL41-.Ltext0
+	.8byte	.LVL42-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST246:
+	.8byte	.LVL1164-.Ltext0
+	.8byte	.LVL1193-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	0
+	.8byte	0
+.LLST247:
+	.8byte	.LVL1167-.Ltext0
+	.8byte	.LVL1171-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1172-.Ltext0
+	.8byte	.LVL1181-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1182-.Ltext0
+	.8byte	.LVL1193-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST90:
+	.8byte	.LVL377-.Ltext0
+	.8byte	.LVL380-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL381-.Ltext0
+	.8byte	.LFE169-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST91:
+	.8byte	.LVL378-.Ltext0
+	.8byte	.LVL379-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL381-.Ltext0
+	.8byte	.LVL382-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL383-.Ltext0
+	.8byte	.LVL384-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL385-.Ltext0
+	.8byte	.LFE169-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST92:
+	.8byte	.LVL386-.Ltext0
+	.8byte	.LVL387-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST243:
+	.8byte	.LVL1151-.Ltext0
+	.8byte	.LVL1153-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL1161-.Ltext0
+	.8byte	.LVL1163-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST244:
+	.8byte	.LVL1141-.Ltext0
+	.8byte	.LVL1145-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL1152-.Ltext0
+	.8byte	.LVL1153-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL1154-.Ltext0
+	.8byte	.LVL1155-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL1156-.Ltext0
+	.8byte	.LVL1157-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL1163-.Ltext0
+	.8byte	.LFE168-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST245:
+	.8byte	.LVL1147-.Ltext0
+	.8byte	.LVL1150-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1157-.Ltext0
+	.8byte	.LVL1159-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1160-.Ltext0
+	.8byte	.LVL1161-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST11:
+	.8byte	.LVL34-.Ltext0
+	.8byte	.LVL39-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	.LVL40-.Ltext0
+	.8byte	.LFE167-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	0
+	.8byte	0
+.LLST12:
+	.8byte	.LVL35-.Ltext0
+	.8byte	.LVL37-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	.LVL38-.Ltext0
+	.8byte	.LFE167-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	0
+	.8byte	0
+.LLST205:
+	.8byte	.LVL906-.Ltext0
+	.8byte	.LVL910-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL920-.Ltext0
+	.8byte	.LVL922-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST206:
+	.8byte	.LVL911-.Ltext0
+	.8byte	.LVL920-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL922-.Ltext0
+	.8byte	.LVL924-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST207:
+	.8byte	.LVL908-.Ltext0
+	.8byte	.LVL920-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL922-.Ltext0
+	.8byte	.LVL924-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	0
+	.8byte	0
+.LLST208:
+	.8byte	.LVL910-.Ltext0
+	.8byte	.LVL916-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL917-.Ltext0
+	.8byte	.LVL920-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL922-.Ltext0
+	.8byte	.LVL923-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST120:
+	.8byte	.LVL532-.Ltext0
+	.8byte	.LVL533-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL533-.Ltext0
+	.8byte	.LVL537-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST121:
+	.8byte	.LVL532-.Ltext0
+	.8byte	.LVL534-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL534-.Ltext0
+	.8byte	.LVL537-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST9:
+	.8byte	.LVL30-.Ltext0
+	.8byte	.LVL31-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST10:
+	.8byte	.LVL32-.Ltext0
+	.8byte	.LVL33-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST7:
+	.8byte	.LVL26-.Ltext0
+	.8byte	.LVL27-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL27-.Ltext0
+	.8byte	.LVL29-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST8:
+	.8byte	.LVL28-.Ltext0
+	.8byte	.LVL29-1-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST326:
+	.8byte	.LVL1631-.Ltext0
+	.8byte	.LVL1634-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST327:
+	.8byte	.LVL1631-.Ltext0
+	.8byte	.LVL1633-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST328:
+	.8byte	.LVL1631-.Ltext0
+	.8byte	.LVL1632-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST312:
+	.8byte	.LVL1552-.Ltext0
+	.8byte	.LVL1555-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST313:
+	.8byte	.LVL1552-.Ltext0
+	.8byte	.LVL1554-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST314:
+	.8byte	.LVL1552-.Ltext0
+	.8byte	.LVL1553-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST274:
+	.8byte	.LVL1324-.Ltext0
+	.8byte	.LVL1326-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1326-.Ltext0
+	.8byte	.LVL1329-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1330-.Ltext0
+	.8byte	.LVL1333-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1345-.Ltext0
+	.8byte	.LFE157-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST275:
+	.8byte	.LVL1324-.Ltext0
+	.8byte	.LVL1325-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1325-.Ltext0
+	.8byte	.LVL1328-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1330-.Ltext0
+	.8byte	.LFE157-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST276:
+	.8byte	.LVL1334-.Ltext0
+	.8byte	.LVL1335-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST277:
+	.8byte	.LVL1327-.Ltext0
+	.8byte	.LVL1329-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL1332-.Ltext0
+	.8byte	.LVL1345-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST278:
+	.8byte	.LVL1327-.Ltext0
+	.8byte	.LVL1330-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 24
+	.8byte	.LVL1336-.Ltext0
+	.8byte	.LVL1341-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 24
+	.8byte	.LVL1341-.Ltext0
+	.8byte	.LVL1342-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1342-.Ltext0
+	.8byte	.LVL1345-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 24
+	.8byte	0
+	.8byte	0
+.LLST279:
+	.8byte	.LVL1327-.Ltext0
+	.8byte	.LVL1330-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 28
+	.8byte	.LVL1336-.Ltext0
+	.8byte	.LVL1345-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 28
+	.8byte	0
+	.8byte	0
+.LLST315:
+	.8byte	.LVL1557-.Ltext0
+	.8byte	.LVL1558-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1565-.Ltext0
+	.8byte	.LVL1566-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST316:
+	.8byte	.LVL1557-.Ltext0
+	.8byte	.LVL1559-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1559-.Ltext0
+	.8byte	.LVL1562-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1562-.Ltext0
+	.8byte	.LVL1565-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1565-.Ltext0
+	.8byte	.LVL1630-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1630-.Ltext0
+	.8byte	.LFE156-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST317:
+	.8byte	.LVL1557-.Ltext0
+	.8byte	.LVL1563-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL1565-.Ltext0
+	.8byte	.LFE156-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	0
+	.8byte	0
+.LLST318:
+	.8byte	.LVL1557-.Ltext0
+	.8byte	.LVL1559-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL1559-1-.Ltext0
+	.8byte	.LVL1564-.Ltext0
+	.2byte	0x1
+	.byte	0x6b
+	.8byte	.LVL1565-.Ltext0
+	.8byte	.LFE156-.Ltext0
+	.2byte	0x1
+	.byte	0x6b
+	.8byte	0
+	.8byte	0
+.LLST319:
+	.8byte	.LVL1559-.Ltext0
+	.8byte	.LVL1561-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1573-.Ltext0
+	.8byte	.LVL1588-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1596-.Ltext0
+	.8byte	.LVL1597-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1600-.Ltext0
+	.8byte	.LVL1630-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST320:
+	.8byte	.LVL1559-.Ltext0
+	.8byte	.LVL1561-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL1567-.Ltext0
+	.8byte	.LVL1630-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST321:
+	.8byte	.LVL1568-.Ltext0
+	.8byte	.LVL1569-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1585-.Ltext0
+	.8byte	.LVL1586-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1608-.Ltext0
+	.8byte	.LVL1609-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1610-.Ltext0
+	.8byte	.LVL1611-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1615-.Ltext0
+	.8byte	.LVL1616-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1619-.Ltext0
+	.8byte	.LVL1620-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1625-.Ltext0
+	.8byte	.LVL1626-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST322:
+	.8byte	.LVL1559-.Ltext0
+	.8byte	.LVL1565-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 124
+	.8byte	.LVL1574-.Ltext0
+	.8byte	.LVL1594-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 124
+	.8byte	.LVL1596-.Ltext0
+	.8byte	.LVL1597-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 124
+	.8byte	.LVL1600-.Ltext0
+	.8byte	.LVL1613-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 124
+	.8byte	.LVL1613-.Ltext0
+	.8byte	.LVL1614-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1614-.Ltext0
+	.8byte	.LVL1630-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 124
+	.8byte	0
+	.8byte	0
+.LLST323:
+	.8byte	.LVL1559-.Ltext0
+	.8byte	.LVL1564-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1574-.Ltext0
+	.8byte	.LVL1583-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1584-.Ltext0
+	.8byte	.LVL1594-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1596-.Ltext0
+	.8byte	.LVL1597-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1600-.Ltext0
+	.8byte	.LVL1602-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1605-.Ltext0
+	.8byte	.LVL1606-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1627-.Ltext0
+	.8byte	.LVL1630-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	0
+	.8byte	0
+.LLST324:
+	.8byte	.LVL1559-.Ltext0
+	.8byte	.LVL1563-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	.LVL1570-.Ltext0
+	.8byte	.LVL1630-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	0
+	.8byte	0
+.LLST325:
+	.8byte	.LVL1559-.Ltext0
+	.8byte	.LVL1560-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1572-.Ltext0
+	.8byte	.LVL1578-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1580-.Ltext0
+	.8byte	.LVL1589-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1596-.Ltext0
+	.8byte	.LVL1597-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1599-.Ltext0
+	.8byte	.LVL1630-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST268:
+	.8byte	.LVL1299-.Ltext0
+	.8byte	.LVL1302-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST269:
+	.8byte	.LVL1299-.Ltext0
+	.8byte	.LVL1302-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST270:
+	.8byte	.LVL1299-.Ltext0
+	.8byte	.LVL1300-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST271:
+	.8byte	.LVL1299-.Ltext0
+	.8byte	.LVL1301-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL1301-.Ltext0
+	.8byte	.LVL1317-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST272:
+	.8byte	.LVL1302-.Ltext0
+	.8byte	.LVL1303-.Ltext0
+	.2byte	0x2
+	.byte	0x71
+	.sleb128 -4
+	.8byte	.LVL1303-.Ltext0
+	.8byte	.LVL1310-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 60
+	.8byte	.LVL1310-.Ltext0
+	.8byte	.LFE154-.Ltext0
+	.2byte	0x2
+	.byte	0x71
+	.sleb128 -4
+	.8byte	0
+	.8byte	0
+.LLST273:
+	.8byte	.LVL1302-.Ltext0
+	.8byte	.LVL1305-1-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	.LVL1305-.Ltext0
+	.8byte	.LVL1306-1-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	.LVL1308-.Ltext0
+	.8byte	.LVL1309-1-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	.LVL1309-.Ltext0
+	.8byte	.LVL1311-1-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	.LVL1312-.Ltext0
+	.8byte	.LVL1314-1-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	.LVL1314-.Ltext0
+	.8byte	.LVL1315-1-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	.LVL1315-.Ltext0
+	.8byte	.LVL1316-1-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	.LVL1316-.Ltext0
+	.8byte	.LFE154-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	0
+	.8byte	0
+.LLST298:
+	.8byte	.LVL1504-.Ltext0
+	.8byte	.LVL1505-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1513-.Ltext0
+	.8byte	.LVL1514-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST299:
+	.8byte	.LVL1504-.Ltext0
+	.8byte	.LVL1508-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1513-.Ltext0
+	.8byte	.LFE153-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST300:
+	.8byte	.LVL1504-.Ltext0
+	.8byte	.LVL1512-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL1513-.Ltext0
+	.8byte	.LFE153-.Ltext0
+	.2byte	0x1
+	.byte	0x6b
+	.8byte	0
+	.8byte	0
+.LLST301:
+	.8byte	.LVL1504-.Ltext0
+	.8byte	.LVL1506-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL1506-1-.Ltext0
+	.8byte	.LVL1510-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1510-.Ltext0
+	.8byte	.LVL1513-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL1513-.Ltext0
+	.8byte	.LFE153-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST302:
+	.8byte	.LVL1507-.Ltext0
+	.8byte	.LVL1511-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL1517-.Ltext0
+	.8byte	.LVL1551-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	0
+	.8byte	0
+.LLST303:
+	.8byte	.LVL1507-.Ltext0
+	.8byte	.LVL1510-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL1518-.Ltext0
+	.8byte	.LVL1551-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	0
+	.8byte	0
+.LLST304:
+	.8byte	.LVL1525-.Ltext0
+	.8byte	.LVL1526-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1539-.Ltext0
+	.8byte	.LVL1540-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1542-.Ltext0
+	.8byte	.LVL1543-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST305:
+	.8byte	.LVL1507-.Ltext0
+	.8byte	.LVL1508-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL1519-.Ltext0
+	.8byte	.LVL1551-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST306:
+	.8byte	.LVL1507-.Ltext0
+	.8byte	.LVL1513-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 124
+	.8byte	.LVL1521-.Ltext0
+	.8byte	.LVL1551-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 124
+	.8byte	0
+	.8byte	0
+.LLST307:
+	.8byte	.LVL1507-.Ltext0
+	.8byte	.LVL1512-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1516-.Ltext0
+	.8byte	.LVL1533-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1537-.Ltext0
+	.8byte	.LVL1550-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	0
+	.8byte	0
+.LLST308:
+	.8byte	.LVL1507-.Ltext0
+	.8byte	.LVL1509-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL1520-.Ltext0
+	.8byte	.LVL1551-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST309:
+	.8byte	.LVL1531-.Ltext0
+	.8byte	.LVL1532-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1544-.Ltext0
+	.8byte	.LVL1545-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST310:
+	.8byte	.LVL1507-.Ltext0
+	.8byte	.LVL1513-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL1521-.Ltext0
+	.8byte	.LVL1522-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL1523-.Ltext0
+	.8byte	.LVL1524-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL1527-.Ltext0
+	.8byte	.LVL1528-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL1529-.Ltext0
+	.8byte	.LVL1530-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1546-.Ltext0
+	.8byte	.LVL1547-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL1548-.Ltext0
+	.8byte	.LVL1549-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST311:
+	.8byte	.LVL1507-.Ltext0
+	.8byte	.LVL1513-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	.LVL1521-.Ltext0
+	.8byte	.LVL1522-1-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	.LVL1523-.Ltext0
+	.8byte	.LVL1524-1-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	.LVL1525-.Ltext0
+	.8byte	.LVL1528-1-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	.LVL1538-.Ltext0
+	.8byte	.LVL1541-1-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	.LVL1542-.Ltext0
+	.8byte	.LVL1543-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	0
+	.8byte	0
+.LLST331:
+	.8byte	.LVL1688-.Ltext0
+	.8byte	.LVL1689-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1705-.Ltext0
+	.8byte	.LVL1707-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1708-.Ltext0
+	.8byte	.LVL1709-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST332:
+	.8byte	.LVL1685-.Ltext0
+	.8byte	.LVL1687-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1697-.Ltext0
+	.8byte	.LVL1699-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL1700-.Ltext0
+	.8byte	.LVL1701-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST333:
+	.8byte	.LVL1684-.Ltext0
+	.8byte	.LVL1686-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1694-.Ltext0
+	.8byte	.LVL1695-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1696-.Ltext0
+	.8byte	.LVL1697-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST109:
+	.8byte	.LVL441-.Ltext0
+	.8byte	.LVL443-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL443-.Ltext0
+	.8byte	.LVL472-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL474-.Ltext0
+	.8byte	.LFE148-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	0
+	.8byte	0
+.LLST110:
+	.8byte	.LVL441-.Ltext0
+	.8byte	.LVL442-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL442-.Ltext0
+	.8byte	.LVL472-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL474-.Ltext0
+	.8byte	.LFE148-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST111:
+	.8byte	.LVL444-.Ltext0
+	.8byte	.LVL446-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL447-.Ltext0
+	.8byte	.LVL457-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL458-.Ltext0
+	.8byte	.LVL470-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL474-.Ltext0
+	.8byte	.LVL478-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL479-.Ltext0
+	.8byte	.LFE148-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST112:
+	.8byte	.LVL450-.Ltext0
+	.8byte	.LVL463-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL468-.Ltext0
+	.8byte	.LVL473-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL482-.Ltext0
+	.8byte	.LFE148-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	0
+	.8byte	0
+.LLST113:
+	.8byte	.LVL452-.Ltext0
+	.8byte	.LVL461-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL462-.Ltext0
+	.8byte	.LVL464-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL468-.Ltext0
+	.8byte	.LVL471-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL483-.Ltext0
+	.8byte	.LFE148-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST114:
+	.8byte	.LVL451-.Ltext0
+	.8byte	.LVL453-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL454-.Ltext0
+	.8byte	.LVL455-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL460-.Ltext0
+	.8byte	.LVL465-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL466-.Ltext0
+	.8byte	.LVL467-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL468-.Ltext0
+	.8byte	.LVL469-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL480-.Ltext0
+	.8byte	.LVL483-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST115:
+	.8byte	.LVL449-.Ltext0
+	.8byte	.LVL473-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	.LVL481-.Ltext0
+	.8byte	.LFE148-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	0
+	.8byte	0
+.LLST119:
+	.8byte	.LVL525-.Ltext0
+	.8byte	.LVL526-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL528-.Ltext0
+	.8byte	.LVL529-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL530-.Ltext0
+	.8byte	.LVL531-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST5:
+	.8byte	.LVL17-.Ltext0
+	.8byte	.LVL18-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL18-.Ltext0
+	.8byte	.LFE144-.Ltext0
+	.2byte	0x1
+	.byte	0x57
+	.8byte	0
+	.8byte	0
+.LLST4:
+	.8byte	.LVL13-.Ltext0
+	.8byte	.LVL14-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL15-.Ltext0
+	.8byte	.LVL16-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST3:
+	.8byte	.LVL8-.Ltext0
+	.8byte	.LVL10-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL11-.Ltext0
+	.8byte	.LFE141-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST66:
+	.8byte	.LVL285-.Ltext0
+	.8byte	.LVL286-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL286-1-.Ltext0
+	.8byte	.LVL288-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST63:
+	.8byte	.LVL205-.Ltext0
+	.8byte	.LVL206-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL206-1-.Ltext0
+	.8byte	.LVL274-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL275-.Ltext0
+	.8byte	.LFE139-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST64:
+	.8byte	.LVL278-.Ltext0
+	.8byte	.LVL279-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL280-.Ltext0
+	.8byte	.LVL281-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST65:
+	.8byte	.LVL273-.Ltext0
+	.8byte	.LVL275-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL282-.Ltext0
+	.8byte	.LVL283-1-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	.LVL284-.Ltext0
+	.8byte	.LFE139-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST0:
+	.8byte	.LVL1-.Ltext0
+	.8byte	.LVL4-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST1:
+	.8byte	.LVL4-.Ltext0
+	.8byte	.LVL5-.Ltext0
+	.2byte	0x1
+	.byte	0x53
+	.8byte	0
+	.8byte	0
+.LLST2:
+	.8byte	.LVL6-.Ltext0
+	.8byte	.LVL7-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST6:
+	.8byte	.LVL22-.Ltext0
+	.8byte	.LVL23-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL24-.Ltext0
+	.8byte	.LVL25-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST29:
+	.8byte	.LVL93-.Ltext0
+	.8byte	.LVL94-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST33:
+	.8byte	.LVL104-.Ltext0
+	.8byte	.LVL105-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST44:
+	.8byte	.LVL136-.Ltext0
+	.8byte	.LVL137-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL137-.Ltext0
+	.8byte	.LVL148-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST45:
+	.8byte	.LVL139-.Ltext0
+	.8byte	.LVL149-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST46:
+	.8byte	.LVL142-.Ltext0
+	.8byte	.LVL143-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL146-.Ltext0
+	.8byte	.LVL147-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST47:
+	.8byte	.LVL138-.Ltext0
+	.8byte	.LVL141-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL146-.Ltext0
+	.8byte	.LVL149-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST48:
+	.8byte	.LVL150-.Ltext0
+	.8byte	.LVL152-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL152-.Ltext0
+	.8byte	.LVL153-1-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	.LVL154-.Ltext0
+	.8byte	.LFE194-.Ltext0
+	.2byte	0x1
+	.byte	0x54
+	.8byte	0
+	.8byte	0
+.LLST49:
+	.8byte	.LVL151-.Ltext0
+	.8byte	.LVL153-1-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	.LVL154-.Ltext0
+	.8byte	.LVL156-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	.LVL157-.Ltext0
+	.8byte	.LFE194-.Ltext0
+	.2byte	0x1
+	.byte	0x55
+	.8byte	0
+	.8byte	0
+.LLST51:
+	.8byte	.LVL162-.Ltext0
+	.8byte	.LVL163-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST52:
+	.8byte	.LVL164-.Ltext0
+	.8byte	.LVL165-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL166-.Ltext0
+	.8byte	.LVL168-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST53:
+	.8byte	.LVL164-.Ltext0
+	.8byte	.LVL165-1-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL166-.Ltext0
+	.8byte	.LVL167-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST72:
+	.8byte	.LVL309-.Ltext0
+	.8byte	.LVL310-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL311-.Ltext0
+	.8byte	.LVL312-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST164:
+	.8byte	.LVL701-.Ltext0
+	.8byte	.LVL706-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 -68
+	.8byte	0
+	.8byte	0
+.LLST165:
+	.8byte	.LVL707-.Ltext0
+	.8byte	.LVL708-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST198:
+	.8byte	.LVL882-.Ltext0
+	.8byte	.LVL883-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL883-.Ltext0
+	.8byte	.LVL885-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL890-.Ltext0
+	.8byte	.LVL891-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST214:
+	.8byte	.LVL965-.Ltext0
+	.8byte	.LVL966-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL966-.Ltext0
+	.8byte	.LVL970-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL972-.Ltext0
+	.8byte	.LFE256-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST215:
+	.8byte	.LVL967-.Ltext0
+	.8byte	.LVL970-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL972-.Ltext0
+	.8byte	.LVL974-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL975-.Ltext0
+	.8byte	.LFE256-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST216:
+	.8byte	.LVL967-.Ltext0
+	.8byte	.LVL969-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL972-.Ltext0
+	.8byte	.LVL982-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST217:
+	.8byte	.LVL979-.Ltext0
+	.8byte	.LVL980-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL981-.Ltext0
+	.8byte	.LVL982-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	.LVL983-.Ltext0
+	.8byte	.LFE256-.Ltext0
+	.2byte	0x1
+	.byte	0x64
+	.8byte	0
+	.8byte	0
+.LLST218:
+	.8byte	.LVL967-.Ltext0
+	.8byte	.LVL971-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	.LVL972-.Ltext0
+	.8byte	.LFE256-.Ltext0
+	.2byte	0x1
+	.byte	0x69
+	.8byte	0
+	.8byte	0
+.LLST219:
+	.8byte	.LVL984-.Ltext0
+	.8byte	.LVL985-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL985-.Ltext0
+	.8byte	.LVL990-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL992-.Ltext0
+	.8byte	.LVL993-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	.LVL994-.Ltext0
+	.8byte	.LFE240-.Ltext0
+	.2byte	0x1
+	.byte	0x63
+	.8byte	0
+	.8byte	0
+.LLST221:
+	.8byte	.LVL1004-.Ltext0
+	.8byte	.LVL1009-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	.LVL1011-.Ltext0
+	.8byte	.LVL1017-.Ltext0
+	.2byte	0x1
+	.byte	0x66
+	.8byte	0
+	.8byte	0
+.LLST222:
+	.8byte	.LVL1006-.Ltext0
+	.8byte	.LVL1017-.Ltext0
+	.2byte	0x2
+	.byte	0x91
+	.sleb128 28
+	.8byte	0
+	.8byte	0
+.LLST223:
+	.8byte	.LVL1008-.Ltext0
+	.8byte	.LVL1010-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	.LVL1013-.Ltext0
+	.8byte	.LVL1017-.Ltext0
+	.2byte	0x1
+	.byte	0x68
+	.8byte	0
+	.8byte	0
+.LLST287:
+	.8byte	.LVL1413-.Ltext0
+	.8byte	.LVL1415-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1415-.Ltext0
+	.8byte	.LVL1428-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1431-.Ltext0
+	.8byte	.LVL1440-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1442-.Ltext0
+	.8byte	.LVL1444-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1446-.Ltext0
+	.8byte	.LVL1457-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1501-.Ltext0
+	.8byte	.LVL1502-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST288:
+	.8byte	.LVL1413-.Ltext0
+	.8byte	.LVL1414-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST289:
+	.8byte	.LVL1425-.Ltext0
+	.8byte	.LVL1427-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1432-.Ltext0
+	.8byte	.LVL1433-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1434-.Ltext0
+	.8byte	.LVL1435-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1436-.Ltext0
+	.8byte	.LVL1437-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1438-.Ltext0
+	.8byte	.LVL1446-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1447-.Ltext0
+	.8byte	.LVL1448-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1455-.Ltext0
+	.8byte	.LVL1465-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1466-.Ltext0
+	.8byte	.LVL1493-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	.LVL1499-.Ltext0
+	.8byte	.LVL1500-.Ltext0
+	.2byte	0x1
+	.byte	0x65
+	.8byte	0
+	.8byte	0
+.LLST290:
+	.8byte	.LVL1426-.Ltext0
+	.8byte	.LVL1430-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1443-.Ltext0
+	.8byte	.LVL1446-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1449-.Ltext0
+	.8byte	.LVL1450-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1452-.Ltext0
+	.8byte	.LVL1453-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1456-.Ltext0
+	.8byte	.LVL1486-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	.LVL1492-.Ltext0
+	.8byte	.LVL1501-.Ltext0
+	.2byte	0x1
+	.byte	0x6c
+	.8byte	0
+	.8byte	0
+.LLST291:
+	.8byte	.LVL1426-.Ltext0
+	.8byte	.LVL1431-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 92
+	.8byte	.LVL1443-.Ltext0
+	.8byte	.LVL1446-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 92
+	.8byte	.LVL1449-.Ltext0
+	.8byte	.LVL1450-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 92
+	.8byte	.LVL1452-.Ltext0
+	.8byte	.LVL1453-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 92
+	.8byte	.LVL1456-.Ltext0
+	.8byte	.LVL1485-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 92
+	.8byte	.LVL1485-.Ltext0
+	.8byte	.LVL1488-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1488-.Ltext0
+	.8byte	.LVL1489-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1489-.Ltext0
+	.8byte	.LVL1501-.Ltext0
+	.2byte	0x3
+	.byte	0x91
+	.sleb128 92
+	.8byte	0
+	.8byte	0
+.LLST292:
+	.8byte	.LVL1469-.Ltext0
+	.8byte	.LVL1475-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	.LVL1476-.Ltext0
+	.8byte	.LVL1477-.Ltext0
+	.2byte	0x1
+	.byte	0x51
+	.8byte	0
+	.8byte	0
+.LLST293:
+	.8byte	.LVL1426-.Ltext0
+	.8byte	.LVL1428-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1443-.Ltext0
+	.8byte	.LVL1444-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1449-.Ltext0
+	.8byte	.LVL1450-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1452-.Ltext0
+	.8byte	.LVL1453-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1467-.Ltext0
+	.8byte	.LVL1471-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1473-.Ltext0
+	.8byte	.LVL1481-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1492-.Ltext0
+	.8byte	.LVL1501-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST294:
+	.8byte	.LVL1470-.Ltext0
+	.8byte	.LVL1472-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	.LVL1474-.Ltext0
+	.8byte	.LVL1478-.Ltext0
+	.2byte	0x1
+	.byte	0x52
+	.8byte	0
+	.8byte	0
+.LLST295:
+	.8byte	.LVL1426-.Ltext0
+	.8byte	.LVL1429-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL1443-.Ltext0
+	.8byte	.LVL1446-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL1449-.Ltext0
+	.8byte	.LVL1450-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL1452-.Ltext0
+	.8byte	.LVL1453-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	.LVL1456-.Ltext0
+	.8byte	.LVL1501-.Ltext0
+	.2byte	0x1
+	.byte	0x6a
+	.8byte	0
+	.8byte	0
+.LLST296:
+	.8byte	.LVL1426-.Ltext0
+	.8byte	.LVL1428-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1443-.Ltext0
+	.8byte	.LVL1444-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1449-.Ltext0
+	.8byte	.LVL1450-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1452-.Ltext0
+	.8byte	.LVL1453-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1467-.Ltext0
+	.8byte	.LVL1468-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	.LVL1480-.Ltext0
+	.8byte	.LVL1501-.Ltext0
+	.2byte	0x1
+	.byte	0x67
+	.8byte	0
+	.8byte	0
+.LLST297:
+	.8byte	.LVL1418-.Ltext0
+	.8byte	.LVL1419-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1423-.Ltext0
+	.8byte	.LVL1424-1-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+.LLST330:
+	.8byte	.LVL1665-.Ltext0
+	.8byte	.LVL1666-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	.LVL1674-.Ltext0
+	.8byte	.LVL1675-.Ltext0
+	.2byte	0x1
+	.byte	0x50
+	.8byte	0
+	.8byte	0
+	.section	.debug_aranges,"",@progbits
+	.4byte	0x2c
+	.2byte	0x2
+	.4byte	.Ldebug_info0
+	.byte	0x8
+	.byte	0
+	.2byte	0
+	.2byte	0
+	.8byte	.Ltext0
+	.8byte	.Letext0-.Ltext0
+	.8byte	0
+	.8byte	0
+	.section	.debug_ranges,"",@progbits
+.Ldebug_ranges0:
+	.8byte	.LBB164-.Ltext0
+	.8byte	.LBE164-.Ltext0
+	.8byte	.LBB167-.Ltext0
+	.8byte	.LBE167-.Ltext0
+	.8byte	0
+	.8byte	0
+	.8byte	.LBB168-.Ltext0
+	.8byte	.LBE168-.Ltext0
+	.8byte	.LBB171-.Ltext0
+	.8byte	.LBE171-.Ltext0
+	.8byte	0
+	.8byte	0
+	.8byte	.LBB193-.Ltext0
+	.8byte	.LBE193-.Ltext0
+	.8byte	.LBB196-.Ltext0
+	.8byte	.LBE196-.Ltext0
+	.8byte	0
+	.8byte	0
+	.8byte	.LBB205-.Ltext0
+	.8byte	.LBE205-.Ltext0
+	.8byte	.LBB208-.Ltext0
+	.8byte	.LBE208-.Ltext0
+	.8byte	0
+	.8byte	0
+	.8byte	.LBB213-.Ltext0
+	.8byte	.LBE213-.Ltext0
+	.8byte	.LBB214-.Ltext0
+	.8byte	.LBE214-.Ltext0
+	.8byte	0
+	.8byte	0
+	.8byte	.LBB219-.Ltext0
+	.8byte	.LBE219-.Ltext0
+	.8byte	.LBB220-.Ltext0
+	.8byte	.LBE220-.Ltext0
+	.8byte	0
+	.8byte	0
+	.8byte	.LBB227-.Ltext0
+	.8byte	.LBE227-.Ltext0
+	.8byte	.LBB229-.Ltext0
+	.8byte	.LBE229-.Ltext0
+	.8byte	.LBB230-.Ltext0
+	.8byte	.LBE230-.Ltext0
+	.8byte	.LBB231-.Ltext0
+	.8byte	.LBE231-.Ltext0
+	.8byte	0
+	.8byte	0
+	.8byte	.LBB236-.Ltext0
+	.8byte	.LBE236-.Ltext0
+	.8byte	.LBB237-.Ltext0
+	.8byte	.LBE237-.Ltext0
+	.8byte	0
+	.8byte	0
+	.8byte	.LBB246-.Ltext0
+	.8byte	.LBE246-.Ltext0
+	.8byte	.LBB250-.Ltext0
+	.8byte	.LBE250-.Ltext0
+	.8byte	.LBB251-.Ltext0
+	.8byte	.LBE251-.Ltext0
+	.8byte	0
+	.8byte	0
+	.8byte	.LBB260-.Ltext0
+	.8byte	.LBE260-.Ltext0
+	.8byte	.LBB261-.Ltext0
+	.8byte	.LBE261-.Ltext0
+	.8byte	0
+	.8byte	0
+	.8byte	.LBB264-.Ltext0
+	.8byte	.LBE264-.Ltext0
+	.8byte	.LBB265-.Ltext0
+	.8byte	.LBE265-.Ltext0
+	.8byte	.LBB266-.Ltext0
+	.8byte	.LBE266-.Ltext0
+	.8byte	0
+	.8byte	0
+	.8byte	.LBB287-.Ltext0
+	.8byte	.LBE287-.Ltext0
+	.8byte	.LBB294-.Ltext0
+	.8byte	.LBE294-.Ltext0
+	.8byte	.LBB295-.Ltext0
+	.8byte	.LBE295-.Ltext0
+	.8byte	0
+	.8byte	0
+	.8byte	.LBB289-.Ltext0
+	.8byte	.LBE289-.Ltext0
+	.8byte	.LBB290-.Ltext0
+	.8byte	.LBE290-.Ltext0
+	.8byte	.LBB291-.Ltext0
+	.8byte	.LBE291-.Ltext0
+	.8byte	0
+	.8byte	0
+	.8byte	.LBB297-.Ltext0
+	.8byte	.LBE297-.Ltext0
+	.8byte	.LBB298-.Ltext0
+	.8byte	.LBE298-.Ltext0
+	.8byte	0
+	.8byte	0
+	.8byte	.LBB304-.Ltext0
+	.8byte	.LBE304-.Ltext0
+	.8byte	.LBB305-.Ltext0
+	.8byte	.LBE305-.Ltext0
+	.8byte	0
+	.8byte	0
+	.section	.debug_line,"",@progbits
+.Ldebug_line0:
+	.section	.debug_str,"MS",@progbits,1
+.LASF467:
+	.string	"recovery_flash_mode"
+.LASF43:
+	.string	"root_mountflags"
+.LASF397:
+	.string	"error_phy_page"
+.LASF335:
+	.string	"gc_ink_free_return_value"
+.LASF168:
+	.string	"available_pages"
+.LASF463:
+	.string	"mlc_detected_active_page"
+.LASF385:
+	.string	"spperBlk"
+.LASF359:
+	.string	"FlashReadPages"
+.LASF186:
+	.string	"c_ftl_nand_planes_num"
+.LASF1:
+	.string	"sizetype"
+.LASF590:
+	.string	"re_try_next_blk"
+.LASF19:
+	.string	"saved_command_line"
+.LASF585:
+	.string	"P2V_block_in_plane"
+.LASF340:
+	.string	"ftl_memcmp"
+.LASF213:
+	.string	"g_GlobalSysVersion"
+.LASF261:
+	.string	"g_totle_vendor_block"
+.LASF93:
+	.string	"BlkNum"
+.LASF595:
+	.string	"totle_count"
+.LASF485:
+	.string	"lastWritePage"
+.LASF442:
+	.string	"ftl_check_vpc"
+.LASF350:
+	.string	"request"
+.LASF323:
+	.string	"DeviceCapacity"
+.LASF555:
+	.string	"List_remove_node"
+.LASF132:
+	.string	"PowerOnTimes"
+.LASF495:
+	.string	"FtlLoadEctTbl"
+.LASF382:
+	.string	"req_read_temp"
+.LASF66:
+	.string	"plane_per_die"
+.LASF55:
+	.string	"uint32"
+.LASF446:
+	.string	"FtlSuperblockPowerLostFix"
+.LASF222:
+	.string	"gL2pMapInfo"
+.LASF498:
+	.string	"pMapHeader"
+.LASF357:
+	.string	"__func__"
+.LASF474:
+	.string	"prev_ppa_ver"
+.LASF83:
+	.string	"prev_id"
+.LASF100:
+	.string	"dump_write_en"
+.LASF145:
+	.string	"max_erase_count"
+.LASF225:
+	.string	"req_read"
+.LASF392:
+	.string	"FtlGcScanTempBlk"
+.LASF401:
+	.string	"BOPS_EN"
+.LASF418:
+	.string	"get_new_active_ppa"
+.LASF320:
+	.string	"g_nand_phy_info"
+.LASF400:
+	.string	"FtlGcFreeTempBlock"
+.LASF248:
+	.string	"g_totle_swl_count"
+.LASF560:
+	.string	"tmp_id"
+.LASF91:
+	.string	"sign"
+.LASF229:
+	.string	"req_gc_dst"
+.LASF439:
+	.string	"FtlSysBlkInit"
+.LASF464:
+	.string	"lookup_superblock_id"
+.LASF138:
+	.string	"gc_page_count"
+.LASF563:
+	.string	"tmp_data_count"
+.LASF187:
+	.string	"c_ftl_nand_blk_pre_plane"
+.LASF72:
+	.string	"sec_per_blk"
+.LASF366:
+	.string	"sftl_gc"
+.LASF379:
+	.string	"get_new_gc_superblock"
+.LASF559:
+	.string	"tmp_erase_count"
+.LASF421:
+	.string	"allocate_new_data_superblock"
+.LASF378:
+	.string	"gc_next_superblock"
+.LASF18:
+	.string	"boot_command_line"
+.LASF530:
+	.string	"update_map_block"
+.LASF604:
+	.string	"FtlBbmMapBadBlock"
+.LASF602:
+	.string	"FtlBbtInfoPrint"
+.LASF52:
+	.string	"hex_asc_upper"
+.LASF458:
+	.string	"saved_active_page"
+.LASF502:
+	.string	"re_save_vpndata"
+.LASF532:
+	.string	"region_num"
+.LASF599:
+	.string	"re_save_bbmdata"
+.LASF619:
+	.string	"first_lpa_sctidx"
+.LASF16:
+	.string	"__security_initcall_start"
+.LASF304:
+	.string	"g_totle_slc_erase_count"
+.LASF593:
+	.string	"FtlLoadBbt"
+.LASF172:
+	.string	"check_en"
+.LASF218:
+	.string	"g_MaxLbn"
+.LASF59:
+	.string	"page_addr"
+.LASF394:
+	.string	"totle_num"
+.LASF321:
+	.string	"g_nand_ops"
+.LASF584:
+	.string	"ver2"
+.LASF211:
+	.string	"c_ftl_nand_max_data_blks"
+.LASF210:
+	.string	"c_ftl_nand_data_op_blks_per_plane"
+.LASF567:
+	.string	"FtlFreeSysBlkQueueOut"
+.LASF113:
+	.string	"ftl_data_blk_header"
+.LASF227:
+	.string	"req_erase"
+.LASF611:
+	.string	"num_lpa"
+.LASF196:
+	.string	"c_ftl_nand_byte_pre_oob"
+.LASF507:
+	.string	"FtlEctTblFlush"
+.LASF117:
+	.string	"ftl_sys_blk_header"
+.LASF341:
+	.string	"ftl_memcpy"
+.LASF297:
+	.string	"g_totle_read_page_count"
+.LASF233:
+	.string	"p_sys_data_buf_1"
+.LASF41:
+	.string	"sysctl_panic_on_stackoverflow"
+.LASF199:
+	.string	"c_ftl_nand_map_region_num"
+.LASF49:
+	.string	"SYSTEM_RESTART"
+.LASF122:
+	.string	"activeFlashMode"
+.LASF358:
+	.string	"read_req"
+.LASF257:
+	.string	"p_vendor_block_table"
+.LASF144:
+	.string	"discard_page_count"
+.LASF540:
+	.string	"vpcTbl"
+.LASF272:
+	.string	"g_buffer_superblock"
+.LASF10:
+	.string	"long int"
+.LASF632:
+	.string	"create_first_buffer_superblock"
+.LASF60:
+	.string	"p_data"
+.LASF242:
+	.string	"c_gc_page_buf_num"
+.LASF511:
+	.string	"Index"
+.LASF221:
+	.string	"gSysFreeQueue"
+.LASF141:
+	.string	"l2p_write_count"
+.LASF618:
+	.string	"absolute_sector"
+.LASF553:
+	.string	"pHead"
+.LASF63:
+	.string	"nand_phy_info"
+.LASF181:
+	.string	"c_ftl_nand_type"
+.LASF331:
+	.string	"FtlUpdateVaildLpnCount"
+.LASF367:
+	.string	"FlashTestBlk"
+.LASF668:
+	.string	"__builtin_strcpy"
+.LASF287:
+	.string	"g_gc_bad_block_gc_index"
+.LASF266:
+	.string	"p_free_data_block_list_head"
+.LASF97:
+	.string	"pBlkVpcTbl"
+.LASF579:
+	.string	"high"
+.LASF634:
+	.string	"is_sys_blk"
+.LASF260:
+	.string	"p_vendor_region_ppn_table"
+.LASF542:
+	.string	"load_l2p_region"
+.LASF528:
+	.string	"flush_l2p_region"
+.LASF34:
+	.string	"panic_blink"
+.LASF454:
+	.string	"num_free_node"
+.LASF354:
+	.string	"block_size"
+.LASF343:
+	.string	"pvForm"
+.LASF205:
+	.string	"c_ftl_vendor_part_size"
+.LASF556:
+	.string	"pTmp"
+.LASF386:
+	.string	"FtlGcMarkBadPhyBlk"
+.LASF110:
+	.string	"ftl_bbt_blk_header"
+.LASF440:
+	.string	"ftl_scan_all_data"
+.LASF348:
+	.string	"spare"
+.LASF566:
+	.string	"INSERT_FREE_LIST"
+.LASF51:
+	.string	"hex_asc"
+.LASF4:
+	.string	"signed char"
+.LASF295:
+	.string	"g_totle_read_sector"
+.LASF62:
+	.string	"nand_req"
+.LASF259:
+	.string	"p_vendor_block_ver_table"
+.LASF319:
+	.string	"gNandPhyInfo"
+.LASF480:
+	.string	"FtlL2PDataInit"
+.LASF519:
+	.string	"action"
+.LASF402:
+	.string	"superblock_id"
+.LASF310:
+	.string	"g_gc_head_data_block"
+.LASF50:
+	.string	"system_state"
+.LASF617:
+	.string	"FtlRead"
+.LASF269:
+	.string	"g_num_free_superblocks"
+.LASF589:
+	.string	"pBbtHeader"
+.LASF5:
+	.string	"unsigned char"
+.LASF342:
+	.string	"pvTo"
+.LASF44:
+	.string	"early_boot_irqs_disabled"
+.LASF201:
+	.string	"c_ftl_nand_vendor_region_num"
+.LASF460:
+	.string	"next_free_active_plane"
+.LASF517:
+	.string	"FtlVendorPartWrite"
+.LASF45:
+	.string	"SYSTEM_BOOTING"
+.LASF116:
+	.string	"regionId"
+.LASF609:
+	.string	"start_lpa"
+.LASF307:
+	.string	"g_in_gc_progress"
+.LASF14:
+	.string	"__con_initcall_start"
+.LASF80:
+	.string	"read_page"
+.LASF280:
+	.string	"g_gc_blk_num"
+.LASF428:
+	.string	"GetSwlReplaceBlock"
+.LASF87:
+	.string	"ftl_sys_info"
+.LASF155:
+	.string	"refresh_start_lpa"
+.LASF456:
+	.string	"FtlPowerLostRecovery"
+.LASF557:
+	.string	"insert_free_list"
+.LASF12:
+	.string	"_Bool"
+.LASF457:
+	.string	"FtlRecoverySuperblock"
+.LASF25:
+	.string	"linux_proc_banner"
+.LASF426:
+	.string	"get_new_id"
+.LASF313:
+	.string	"g_cur_erase_blk"
+.LASF347:
+	.string	"table"
+.LASF162:
+	.string	"value"
+.LASF220:
+	.string	"gSysInfo"
+.LASF371:
+	.string	"gc_page_num"
+.LASF346:
+	.string	"FlashGetBadBlockList"
+.LASF86:
+	.string	"BbtMap"
+.LASF2:
+	.string	"char"
+.LASF646:
+	.string	"FtlSysBlkNumInit"
+.LASF655:
+	.string	"memset"
+.LASF325:
+	.string	"TotleReadBufferCount1"
+.LASF157:
+	.string	"totle_read_sector"
+.LASF327:
+	.string	"TotleReadBufferCount3"
+.LASF624:
+	.string	"FtlSysFlush"
+.LASF254:
+	.string	"p_map_block_ver_table"
+.LASF128:
+	.string	"bufferPageOffset"
+.LASF521:
+	.string	"l2p_region_id"
+.LASF407:
+	.string	"FtlGcUpdatePage"
+.LASF433:
+	.string	"maxFreeBlockEraseCount"
+.LASF639:
+	.string	"re_test_next_page"
+.LASF39:
+	.string	"panic_on_io_nmi"
+.LASF422:
+	.string	"allocate_data_superblock"
+.LASF572:
+	.string	"FtlFreeSysBlkQueueIn"
+.LASF488:
+	.string	"pMapBlkHeader"
+.LASF68:
+	.string	"blk_per_die"
+.LASF326:
+	.string	"TotleReadBufferCount2"
+.LASF374:
+	.string	"num_io"
+.LASF581:
+	.string	"pagePreBlk"
+.LASF126:
+	.string	"activePageOffset"
+.LASF74:
+	.string	"reserved_blk"
+.LASF479:
+	.string	"FtlLoadMapInfo"
+.LASF362:
+	.string	"block_index"
+.LASF648:
+	.string	"FtlPrintInfo"
+.LASF477:
+	.string	"FtlReUsePrevPpa"
+.LASF247:
+	.string	"p_swl_mul_table"
+.LASF561:
+	.string	"insert_data_list"
+.LASF642:
+	.string	"FtlVariablesInit"
+.LASF265:
+	.string	"p_data_block_list_table"
+.LASF509:
+	.string	"ec_mod_count"
+.LASF432:
+	.string	"pNode"
+.LASF301:
+	.string	"g_totle_mlc_erase_count"
+.LASF582:
+	.string	"ftl_cmp_data_ver"
+.LASF273:
+	.string	"g_gc_temp_superblock"
+.LASF258:
+	.string	"p_vendor_block_valid_page_count"
+.LASF496:
+	.string	"FtlScanSysBlk"
+.LASF664:
+	.string	"l2p_addr_tran"
+.LASF306:
+	.string	"g_max_erase_count"
+.LASF207:
+	.string	"c_ftl_nand_init_sys_blks_per_plane"
+.LASF179:
+	.string	"ftl_gc_page_buffer"
+.LASF230:
+	.string	"g_req_cache"
+.LASF645:
+	.string	"FtlConstantsInit"
+.LASF448:
+	.string	"pages"
+.LASF417:
+	.string	"update_vpc_list"
+.LASF657:
+	.string	"rknand_print_hex"
+.LASF405:
+	.string	"p_gc_page"
+.LASF651:
+	.string	"limit"
+.LASF391:
+	.string	"Ftl_get_new_temp_ppa"
+.LASF133:
+	.string	"PowerLostTimes"
+.LASF574:
+	.string	"blk_Id"
+.LASF290:
+	.string	"g_gc_merge_free_blk_threshold"
+.LASF35:
+	.string	"oops_in_progress"
+.LASF429:
+	.string	"node_id"
+.LASF131:
+	.string	"cache_write_count"
+.LASF256:
+	.string	"g_totle_map_block"
+.LASF656:
+	.string	"printk"
+.LASF543:
+	.string	"phyAddr"
+.LASF183:
+	.string	"c_ftl_nand_planes_per_die"
+.LASF486:
+	.string	"ppnTbl"
+.LASF372:
+	.string	"gc_blk"
+.LASF481:
+	.string	"FtlLoadVonderInfo"
+.LASF551:
+	.string	"List_get_gc_head_node"
+.LASF500:
+	.string	"pSysHeader"
+.LASF177:
+	.string	"scr_ppa"
+.LASF206:
+	.string	"c_ftl_nand_sys_blks_per_plane"
+.LASF569:
+	.string	"FtlFreeSysBLkSort"
+.LASF263:
+	.string	"p_l2p_map_buf"
+.LASF640:
+	.string	"IsBlkInVendorPart"
+.LASF596:
+	.string	"FtlBbtMemInit"
+.LASF241:
+	.string	"gp_gc_page_buf_info"
+.LASF570:
+	.string	"tmp_blk_id"
+.LASF164:
+	.string	"front"
+.LASF232:
+	.string	"p_sys_data_buf"
+.LASF90:
+	.string	"index"
+.LASF535:
+	.string	"lastMapBlk"
+.LASF621:
+	.string	"last_lpa_nscts"
+.LASF298:
+	.string	"g_tmp_data_superblock_id"
+.LASF244:
+	.string	"gp_ect_tbl_info"
+.LASF652:
+	.string	"rknand_proc_ftlread"
+.LASF539:
+	.string	"ftl_free_no_use_map_blk"
+.LASF662:
+	.string	"/home/ldq/rk-linux/kernel-debug"
+.LASF32:
+	.string	"atomic_notifier_head"
+.LASF381:
+	.string	"FtlReadRefresh"
+.LASF184:
+	.string	"c_ftl_nand_blks_per_die"
+.LASF562:
+	.string	"node_data_count"
+.LASF598:
+	.string	"write_count"
+.LASF238:
+	.string	"p_io_spare_buf"
+.LASF476:
+	.string	"current_ppa_ver"
+.LASF0:
+	.string	"long unsigned int"
+.LASF170:
+	.string	"num_planes"
+.LASF118:
+	.string	"res32_0"
+.LASF119:
+	.string	"res32_1"
+.LASF430:
+	.string	"min_ec_id"
+.LASF356:
+	.string	"check"
+.LASF26:
+	.string	"console_printk"
+.LASF667:
+	.string	"strcpy"
+.LASF58:
+	.string	"status"
+.LASF65:
+	.string	"die_num"
+.LASF625:
+	.string	"sftl_init"
+.LASF289:
+	.string	"g_gc_free_blk_threshold"
+.LASF29:
+	.string	"kptr_restrict"
+.LASF591:
+	.string	"FtlLoadFactoryBbt"
+.LASF404:
+	.string	"scan_page_num"
+.LASF146:
+	.string	"min_erase_count"
+.LASF182:
+	.string	"c_ftl_nand_die_num"
+.LASF303:
+	.string	"g_min_erase_count"
+.LASF478:
+	.string	"ftl_sb_update_avl_pages"
+.LASF102:
+	.string	"region_id"
+.LASF628:
+	.string	"ftl_low_format"
+.LASF339:
+	.string	"str2"
+.LASF92:
+	.string	"maxRegion"
+.LASF322:
+	.string	"ftl_temp_buf"
+.LASF158:
+	.string	"progErrorCount"
+.LASF520:
+	.string	"ram_region_id"
+.LASF332:
+	.string	"check_vpc_table"
+.LASF450:
+	.string	"FtlGcPageRecovery"
+.LASF27:
+	.string	"printk_delay_msec"
+.LASF490:
+	.string	"ftl_get_blk_mode"
+.LASF24:
+	.string	"linux_banner"
+.LASF659:
+	.string	"sprintf"
+.LASF105:
+	.string	"ftl_ect_tbl_info"
+.LASF537:
+	.string	"ftl_map_blk_alloc_new_blk"
+.LASF510:
+	.string	"FtlVendorPartRead"
+.LASF608:
+	.string	"FtlWrite"
+.LASF71:
+	.string	"sec_per_page"
+.LASF67:
+	.string	"blk_per_plane"
+.LASF398:
+	.string	"ReInit"
+.LASF515:
+	.string	"result"
+.LASF96:
+	.string	"pBlkVerTbl"
+.LASF447:
+	.string	"req_temp"
+.LASF114:
+	.string	"lastPpa"
+.LASF318:
+	.string	"g_power_lost_recovery_flag"
+.LASF600:
+	.string	"FtlBbt2Bitmap"
+.LASF69:
+	.string	"page_per_blk"
+.LASF469:
+	.string	"recovery_super_page"
+.LASF309:
+	.string	"g_ftl_nand_free_count"
+.LASF364:
+	.string	"die_index"
+.LASF412:
+	.string	"numREQ"
+.LASF75:
+	.string	"ecc_bits"
+.LASF630:
+	.string	"sys_bad_block_cnt"
+.LASF192:
+	.string	"c_ftl_nand_page_pre_super_blk"
+.LASF174:
+	.string	"reversed"
+.LASF399:
+	.string	"read_super_page"
+.LASF36:
+	.string	"panic_timeout"
+.LASF124:
+	.string	"gcTempFlashMode"
+.LASF292:
+	.string	"g_totle_gc_page_count"
+.LASF234:
+	.string	"p_vendor_data_buf"
+.LASF597:
+	.string	"FtlBbmTblFlush"
+.LASF564:
+	.string	"tmp_multiplier_value"
+.LASF403:
+	.string	"lookup_ppa"
+.LASF8:
+	.string	"long long int"
+.LASF302:
+	.string	"g_totle_avg_erase_count"
+.LASF212:
+	.string	"ftl_gc_temp_power_lost_recovery_flag"
+.LASF548:
+	.string	"prev_valid_page_count"
+.LASF384:
+	.string	"FtlGcFreeBadSuperBlk"
+.LASF219:
+	.string	"gBbtInfo"
+.LASF223:
+	.string	"gVendorBlkInfo"
+.LASF419:
+	.string	"p_superblock"
+.LASF267:
+	.string	"p_data_block_list_head"
+.LASF472:
+	.string	"last_page_version"
+.LASF228:
+	.string	"req_gc"
+.LASF607:
+	.string	"FtlDiscard"
+.LASF33:
+	.string	"panic_notifier_list"
+.LASF284:
+	.string	"g_gc_next_blk"
+.LASF383:
+	.string	"add_count"
+.LASF151:
+	.string	"inkDie_write_and_check_en"
+.LASF578:
+	.string	"FtlGetLastWrittenPage"
+.LASF462:
+	.string	"detected_active_page"
+.LASF506:
+	.string	"FtlUpdateVaildLpn"
+.LASF20:
+	.string	"reset_devices"
+.LASF154:
+	.string	"refresh_enable_mode"
+.LASF603:
+	.string	"FtlBbmIsBadBlock"
+.LASF23:
+	.string	"__icache_flags"
+.LASF388:
+	.string	"FtlGcRefreshBlock"
+.LASF85:
+	.string	"fBbtBlk"
+.LASF533:
+	.string	"blkTbl"
+.LASF377:
+	.string	"p_dataHeader"
+.LASF459:
+	.string	"saved_active_plane"
+.LASF123:
+	.string	"bufferFlashMode"
+.LASF111:
+	.string	"count"
+.LASF130:
+	.string	"gcTempPageOffset"
+.LASF353:
+	.string	"addr"
+.LASF136:
+	.string	"GlobalSysVersion"
+.LASF408:
+	.string	"src_ppa"
+.LASF554:
+	.string	"List_pop_index_node"
+.LASF270:
+	.string	"g_num_data_superblocks"
+.LASF444:
+	.string	"error_flag"
+.LASF661:
+	.string	"drivers/rkflash/rksftl/rk_sftl.c"
+.LASF308:
+	.string	"g_in_swl_replace"
+.LASF166:
+	.string	"ftl_superblock_info"
+.LASF3:
+	.string	"unsigned int"
+.LASF95:
+	.string	"pBlkTbl"
+.LASF165:
+	.string	"rear"
+.LASF189:
+	.string	"c_ftl_nand_bbm_buf_size"
+.LASF216:
+	.string	"g_MaxLpn"
+.LASF538:
+	.string	"blk_index"
+.LASF453:
+	.string	"num_data_node"
+.LASF47:
+	.string	"SYSTEM_HALT"
+.LASF288:
+	.string	"g_gc_bad_block_temp_tbl"
+.LASF30:
+	.string	"kmsg_fops"
+.LASF565:
+	.string	"INSERT_DATA_LIST"
+.LASF612:
+	.string	"sctidx"
+.LASF387:
+	.string	"superBlk"
+.LASF180:
+	.string	"flag"
+.LASF281:
+	.string	"g_gc_page_offset"
+.LASF638:
+	.string	"test_mode"
+.LASF296:
+	.string	"g_totle_discard_page_count"
+.LASF214:
+	.string	"g_GlobalDataVersion"
+.LASF649:
+	.string	"debug_flag"
+.LASF324:
+	.string	"gFtlInitStatus"
+.LASF527:
+	.string	"hit_count"
+.LASF79:
+	.string	"prog_page"
+.LASF127:
+	.string	"bufferSuperblockId"
+.LASF489:
+	.string	"FtlLoadSysInfo"
+.LASF152:
+	.string	"readErrorCount"
+.LASF169:
+	.string	"current_plane"
+.LASF396:
+	.string	"page_count"
+.LASF274:
+	.string	"g_gc_superblock"
+.LASF271:
+	.string	"g_active_superblock"
+.LASF514:
+	.string	"offset"
+.LASF249:
+	.string	"p_valid_page_count_table"
+.LASF194:
+	.string	"c_ftl_nand_sec_pre_page_shift"
+.LASF22:
+	.string	"initcall_debug"
+.LASF389:
+	.string	"block"
+.LASF349:
+	.string	"FlashEraseBlocks"
+.LASF82:
+	.string	"page"
+.LASF410:
+	.string	"IsBlkInGcList"
+.LASF338:
+	.string	"str1"
+.LASF64:
+	.string	"nand_type"
+.LASF613:
+	.string	"nscts"
+.LASF101:
+	.string	"ftl_l2p_ram_map_info"
+.LASF294:
+	.string	"g_totle_write_sector"
+.LASF443:
+	.string	"prev_ppa"
+.LASF77:
+	.string	"get_bad_blk_list"
+.LASF293:
+	.string	"g_totle_write_page_count"
+.LASF643:
+	.string	"FtlMemInit"
+.LASF300:
+	.string	"g_totle_l2p_write_count"
+.LASF586:
+	.string	"P2V_plane"
+.LASF11:
+	.string	"bool"
+.LASF253:
+	.string	"p_map_block_valid_page_count"
+.LASF336:
+	.string	"check_buf"
+.LASF558:
+	.string	"node_erase_count"
+.LASF552:
+	.string	"List_pop_head_node"
+.LASF142:
+	.string	"slc_erase_count"
+.LASF541:
+	.string	"minValidPageCount"
+.LASF641:
+	.string	"ven_blk"
+.LASF190:
+	.string	"c_ftl_nand_page_pre_blk"
+.LASF104:
+	.string	"L2PMap"
+.LASF344:
+	.string	"size"
+.LASF544:
+	.string	"List_update_data_list"
+.LASF305:
+	.string	"g_totle_sys_slc_erase_count"
+.LASF121:
+	.string	"maxDieNum"
+.LASF243:
+	.string	"g_gc_num_req"
+.LASF88:
+	.string	"maxLogicBlk"
+.LASF147:
+	.string	"totle_power_on_run_times"
+.LASF518:
+	.string	"log2phys"
+.LASF466:
+	.string	"detected_error_page"
+.LASF580:
+	.string	"spareBuf"
+.LASF185:
+	.string	"c_ftl_nand_blks_per_die_shift"
+.LASF137:
+	.string	"ftl_sys_ext_info"
+.LASF262:
+	.string	"p_l2p_ram_map"
+.LASF94:
+	.string	"maxBlkNum"
+.LASF658:
+	.string	"ftl_malloc"
+.LASF441:
+	.string	"pDataHeader"
+.LASF167:
+	.string	"current_page"
+.LASF78:
+	.string	"erase_blk"
+.LASF452:
+	.string	"SupperBlkListInit"
+.LASF631:
+	.string	"create_first_active_superblock"
+.LASF163:
+	.string	"sys_blk_queue"
+.LASF31:
+	.string	"file_operations"
+.LASF355:
+	.string	"FlashProgPages"
+.LASF516:
+	.string	"ppn_index"
+.LASF9:
+	.string	"long long unsigned int"
+.LASF217:
+	.string	"g_VaildLpn"
+.LASF246:
+	.string	"p_erase_count_table"
+.LASF525:
+	.string	"select_l2p_ram_region"
+.LASF435:
+	.string	"GetFreeBlockMaxEraseCount"
+.LASF549:
+	.string	"prev_multiplier_value"
+.LASF17:
+	.string	"__security_initcall_end"
+.LASF37:
+	.string	"panic_on_oops"
+.LASF264:
+	.string	"g_l2p_last_update_region_id"
+.LASF198:
+	.string	"c_ftl_nand_totle_phy_blks"
+.LASF633:
+	.string	"FtlLowFormatEraseBlock"
+.LASF73:
+	.string	"byte_per_sec"
+.LASF178:
+	.string	"des_ppa"
+.LASF252:
+	.string	"p_map_block_table"
+.LASF545:
+	.string	"prev_node_id"
+.LASF240:
+	.string	"p_gc_data_buf"
+.LASF529:
+	.string	"FtlMapWritePage"
+.LASF251:
+	.string	"p_blk_mode_table"
+.LASF282:
+	.string	"g_gc_cur_blk_valid_pages"
+.LASF576:
+	.string	"FtlFreeSysBlkQueueEmpty"
+.LASF191:
+	.string	"c_ftl_nand_page_pre_slc_blk"
+.LASF512:
+	.string	"nSec"
+.LASF594:
+	.string	"FtlBbtCalcTotleCnt"
+.LASF193:
+	.string	"c_ftl_nand_sec_pre_page"
+.LASF492:
+	.string	"FtlSlcSuperblockCheck"
+.LASF583:
+	.string	"ver1"
+.LASF150:
+	.string	"SlcPartLbaEndSector"
+.LASF203:
+	.string	"c_ftl_nand_max_map_blks"
+.LASF494:
+	.string	"FtlGcReFreshBadBlk"
+.LASF473:
+	.string	"last_mlc_page_version"
+.LASF505:
+	.string	"FtlMapBlkWriteDump_data"
+.LASF245:
+	.string	"g_ect_tbl_info_size"
+.LASF107:
+	.string	"totleEc"
+.LASF437:
+	.string	"GetFreeBlockMinEraseCount"
+.LASF434:
+	.string	"minDataBlockEraseCount"
+.LASF48:
+	.string	"SYSTEM_POWER_OFF"
+.LASF215:
+	.string	"g_MaxLbaSector"
+.LASF84:
+	.string	"version"
+.LASF28:
+	.string	"dmesg_restrict"
+.LASF461:
+	.string	"next_free_active_page"
+.LASF129:
+	.string	"gcTempSuperblockId"
+.LASF620:
+	.string	"first_lpa_nscts"
+.LASF299:
+	.string	"g_totle_cache_write_count"
+.LASF493:
+	.string	"ftl_set_blk_mode"
+.LASF449:
+	.string	"Ftl_load_ext_data"
+.LASF503:
+	.string	"FtlWriteDump_data"
+.LASF635:
+	.string	"max_test_page_num"
+.LASF390:
+	.string	"Ftl_gc_temp_data_write_back"
+.LASF365:
+	.string	"block_in_die"
+.LASF415:
+	.string	"FtlGcBufInit"
+.LASF231:
+	.string	"p_plane_order_table"
+.LASF98:
+	.string	"pMapPpnTbl"
+.LASF427:
+	.string	"free_data_superblock"
+.LASF143:
+	.string	"sys_slc_erase_count"
+.LASF204:
+	.string	"c_ftl_nand_max_vendor_blks"
+.LASF375:
+	.string	"physical_block"
+.LASF445:
+	.string	"FtlVpcCheckAndModify"
+.LASF276:
+	.string	"g_sys_save_data"
+.LASF81:
+	.string	"ftl_bbt_info"
+.LASF425:
+	.string	"free_blk_index"
+.LASF250:
+	.string	"p_valid_page_count_check_table"
+.LASF209:
+	.string	"c_ftl_nand_data_blks_per_plane"
+.LASF368:
+	.string	"rk_ftl_garbage_collect"
+.LASF654:
+	.string	"memcmp"
+.LASF370:
+	.string	"numPages"
+.LASF311:
+	.string	"g_gc_head_data_block_count"
+.LASF255:
+	.string	"p_map_region_ppn_table"
+.LASF524:
+	.string	"l2p_flush"
+.LASF455:
+	.string	"make_superblock"
+.LASF15:
+	.string	"__con_initcall_end"
+.LASF629:
+	.string	"bad_block_cnt"
+.LASF547:
+	.string	"node_multiplier_value"
+.LASF330:
+	.string	"g_ect_tbl_power_up_flush"
+.LASF316:
+	.string	"g_recovery_ppa_tbl"
+.LASF523:
+	.string	"found_lpa"
+.LASF277:
+	.string	"g_sys_ext_data"
+.LASF351:
+	.string	"flash_type"
+.LASF413:
+	.string	"req_num"
+.LASF508:
+	.string	"forceFlush"
+.LASF53:
+	.string	"uint8"
+.LASF329:
+	.string	"power_up_flag"
+.LASF279:
+	.string	"p_gc_blk_tbl"
+.LASF411:
+	.string	"FtlGcBufAlloc"
+.LASF188:
+	.string	"c_ftl_nand_ext_blk_pre_plane"
+.LASF376:
+	.string	"max_gc_page_num"
+.LASF195:
+	.string	"c_ftl_nand_byte_pre_page"
+.LASF438:
+	.string	"update_multiplier_value"
+.LASF616:
+	.string	"flashType"
+.LASF6:
+	.string	"short int"
+.LASF239:
+	.string	"p_gc_spare_buf"
+.LASF491:
+	.string	"sblk"
+.LASF369:
+	.string	"mode"
+.LASF423:
+	.string	"new_id"
+.LASF626:
+	.string	"pNand"
+.LASF46:
+	.string	"SYSTEM_RUNNING"
+.LASF513:
+	.string	"pBuf"
+.LASF139:
+	.string	"write_page_count"
+.LASF601:
+	.string	"bitmap"
+.LASF197:
+	.string	"c_ftl_nand_reserved_blks"
+.LASF665:
+	.string	"sftl_get_density"
+.LASF637:
+	.string	"test_page_step"
+.LASF592:
+	.string	"blkAddr"
+.LASF283:
+	.string	"g_gc_cur_blk_max_valid_pages"
+.LASF285:
+	.string	"g_gc_next_blk_1"
+.LASF526:
+	.string	"target_region"
+.LASF610:
+	.string	"end_lpa"
+.LASF470:
+	.string	"scan_completed"
+.LASF653:
+	.string	"FtlPrintInfo2buf"
+.LASF361:
+	.string	"p_die"
+.LASF236:
+	.string	"p_io_data_buf_0"
+.LASF237:
+	.string	"p_io_data_buf_1"
+.LASF134:
+	.string	"mlc_erase_count"
+.LASF175:
+	.string	"phyBlk"
+.LASF623:
+	.string	"sftl_deinit"
+.LASF483:
+	.string	"pMapBlockInfo"
+.LASF148:
+	.string	"last_refresh_data_times"
+.LASF663:
+	.string	"system_states"
+.LASF156:
+	.string	"totle_write_sector"
+.LASF226:
+	.string	"req_prgm"
+.LASF588:
+	.string	"FtlMakeBbt"
+.LASF99:
+	.string	"in_gc_mode"
+.LASF431:
+	.string	"min_ec"
+.LASF57:
+	.string	"int16"
+.LASF278:
+	.string	"p_gc_page_info"
+.LASF208:
+	.string	"c_ftl_nand_max_sys_blks"
+.LASF436:
+	.string	"max_ec"
+.LASF235:
+	.string	"p_sys_spare_buf"
+.LASF666:
+	.string	"memcpy"
+.LASF501:
+	.string	"prog_error_count"
+.LASF333:
+	.string	"gc_discard_updated"
+.LASF409:
+	.string	"prev_superblock_id"
+.LASF636:
+	.string	"test_page_num"
+.LASF153:
+	.string	"last_refresh_read_count"
+.LASF475:
+	.string	"lookup_ppa_ver"
+.LASF487:
+	.string	"totleBlkNum"
+.LASF606:
+	.string	"sftl_read"
+.LASF575:
+	.string	"FtlFreeSysBlkQueueFull"
+.LASF406:
+	.string	"FtlGcPageVarInit"
+.LASF109:
+	.string	"padding"
+.LASF171:
+	.string	"flash_mode"
+.LASF465:
+	.string	"recovery_cur_page_ver"
+.LASF534:
+	.string	"ftl_map_blk_gc"
+.LASF605:
+	.string	"sftl_write"
+.LASF115:
+	.string	"ftl_map_blk_header"
+.LASF577:
+	.string	"FtlFreeSysBlkQueueInit"
+.LASF21:
+	.string	"late_time_init"
+.LASF644:
+	.string	"mem_size"
+.LASF482:
+	.string	"FtlMapTblRecovery"
+.LASF420:
+	.string	"new_ppa"
+.LASF424:
+	.string	"num_bad_block"
+.LASF522:
+	.string	"lpn_index"
+.LASF200:
+	.string	"c_ftl_nand_l2pmap_ram_region_num"
+.LASF660:
+	.ascii	"GNU C89 6.3.1 20170404 -mlittle-endian -mgeneral-regs-only -"
+	.ascii	"mpc-relative-literal-loads -march=armv8-a -mabi=lp64 -g -Os "
+	.ascii	"-std=gnu90 -fno-strict-aliasing -fno-common -fno-pic -fno-as"
+	.ascii	"ynchronous-unwind-tables -fno-dele"
+	.string	"te-null-pointer-checks -fno-stack-protector -fno-omit-frame-pointer -fno-optimize-sibling-calls -fno-var-tracking-assignments -fno-strict-overflow -fno-merge-all-constants -fmerge-constants -fstack-check=no -fconserve-stack --param allow-store-data-races=0"
+.LASF622:
+	.string	"sector"
+.LASF504:
+	.string	"num_page"
+.LASF615:
+	.string	"FtlProgPages"
+.LASF414:
+	.string	"FtlGcBufFree"
+.LASF268:
+	.string	"p_data_block_list_tail"
+.LASF395:
+	.string	"current_ppa"
+.LASF61:
+	.string	"p_spare"
+.LASF380:
+	.string	"tmp_blk"
+.LASF291:
+	.string	"g_gc_blk_index"
+.LASF497:
+	.string	"block_in_plane"
+.LASF108:
+	.string	"lastEc"
+.LASF360:
+	.string	"PhyBlk"
+.LASF103:
+	.string	"reserved"
+.LASF314:
+	.string	"g_recovery_page_num"
+.LASF546:
+	.string	"node_valid_page_count"
+.LASF176:
+	.string	"ftl_gc_page_item"
+.LASF140:
+	.string	"read_page_count"
+.LASF416:
+	.string	"decrement_vpc_count"
+.LASF7:
+	.string	"short unsigned int"
+.LASF536:
+	.string	"minValidPageIndex"
+.LASF328:
+	.string	"TotleReadBufferMatchCount"
+.LASF337:
+	.string	"check_spare_buf"
+.LASF571:
+	.string	"tmp_ec"
+.LASF312:
+	.string	"g_gc_skip_write_count"
+.LASF56:
+	.string	"int32"
+.LASF70:
+	.string	"page_per_slc_blk"
+.LASF315:
+	.string	"g_recovery_page_min_ver"
+.LASF224:
+	.string	"req_sys"
+.LASF159:
+	.string	"List_Node"
+.LASF650:
+	.string	"Ftl_log2"
+.LASF149:
+	.string	"all_blk_used_slc_mode"
+.LASF393:
+	.string	"pSuperblock"
+.LASF471:
+	.string	"function_exit"
+.LASF202:
+	.string	"c_ftl_nand_map_blks_per_plane"
+.LASF13:
+	.string	"initcall_t"
+.LASF587:
+	.string	"V2P_block"
+.LASF112:
+	.string	"sysBlksPerPlane"
+.LASF451:
+	.string	"Ftl_save_ext_data"
+.LASF614:
+	.string	"FtlCacheWriteBack"
+.LASF76:
+	.string	"nand_ops"
+.LASF627:
+	.string	"load_bbt"
+.LASF647:
+	.string	"blkNum"
+.LASF363:
+	.string	"page_index"
+.LASF499:
+	.string	"FtlVpcTblFlush"
+.LASF106:
+	.string	"hash"
+.LASF568:
+	.string	"IsInFreeQueue"
+.LASF468:
+	.string	"read_super_page_end"
+.LASF352:
+	.string	"num_req"
+.LASF317:
+	.string	"c_mlc_erase_count_value"
+.LASF550:
+	.string	"pPrev"
+.LASF135:
+	.string	"GlobalDataVersion"
+.LASF38:
+	.string	"panic_on_unrecovered_nmi"
+.LASF160:
+	.string	"next"
+.LASF125:
+	.string	"activeSuperblockId"
+.LASF373:
+	.string	"plane"
+.LASF40:
+	.string	"panic_on_warn"
+.LASF89:
+	.string	"ftl_l2p_map_info"
+.LASF161:
+	.string	"prev"
+.LASF54:
+	.string	"uint16"
+.LASF345:
+	.string	"ftl_memset"
+.LASF531:
+	.string	"Ftl_write_map_blk_to_last_page"
+.LASF42:
+	.string	"crash_kexec_post_notifiers"
+.LASF286:
+	.string	"g_gc_bad_block_temp_num"
+.LASF120:
+	.string	"ftl_sys_save_info"
+.LASF275:
+	.string	"gp_last_act_superblock"
+.LASF573:
+	.string	"erase_flag"
+.LASF484:
+	.string	"blk_id"
+.LASF173:
+	.string	"dump_writed"
+.LASF334:
+	.string	"ftl_gc_temp_block_bops_scan_page_addr"
diff --git a/drivers/rkflash/rkflash_api.h b/drivers/rkflash/rkflash_api.h
new file mode 100644
index 000000000000..7f9a03d920e8
--- /dev/null
+++ b/drivers/rkflash/rkflash_api.h
@@ -0,0 +1,41 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#ifndef __RK_FLASH_API_H
+#define __RK_FLASH_API_H
+
+#ifdef CONFIG_RK_NANDC_NAND
+int sftl_flash_init(void __iomem *reg_addr);
+void sftl_flash_read_id(u8 chip_sel, void *buf);
+int sftl_flash_read(unsigned int sec, unsigned int n_sec, void *p_data);
+int sftl_flash_write(unsigned int sec, unsigned int n_sec, void *p_data);
+unsigned int sftl_flash_get_capacity(void);
+void sftl_flash_deinit(void);
+int sftl_flash_resume(void __iomem *reg_addr);
+void sftl_flash_clean_irq(void);
+#endif
+
+#ifdef CONFIG_RK_SFC_NOR
+int spi_flash_init(void __iomem *reg_addr);
+void spi_flash_read_id(u8 chip_sel, void *buf);
+int snor_read_lba(unsigned int sec, unsigned int n_sec, void *p_data);
+int snor_write_lba(unsigned int sec, unsigned int n_sec, void *p_data);
+unsigned int snor_capacity(void);
+void snor_deinit(void);
+int snor_resume(void __iomem *reg_addr);
+int snor_vendor_read(unsigned int sec, unsigned int n_sec, void *p_data);
+int snor_vendor_write(unsigned int sec, unsigned int n_sec, void *p_data);
+#endif
+
+#ifdef CONFIG_RK_SFC_NAND
+int snand_init(void __iomem *reg_addr);
+int snand_read(unsigned int sec, unsigned int n_sec, void *p_data);
+int snand_write(unsigned int sec, unsigned int n_sec, void *p_data);
+unsigned int snand_get_capacity(void);
+void snand_deinit(void);
+int snand_resume(void __iomem *reg_addr);
+void sfc_clean_irq(void);
+#endif
+
+#endif
diff --git a/drivers/rkflash/rkflash_blk.c b/drivers/rkflash/rkflash_blk.c
new file mode 100644
index 000000000000..61f3cf37b738
--- /dev/null
+++ b/drivers/rkflash/rkflash_blk.c
@@ -0,0 +1,736 @@
+// SPDX-License-Identifier: GPL-2.0
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#include <linux/blkdev.h>
+#include <linux/blkpg.h>
+#include <linux/clk.h>
+#include <linux/delay.h>
+#include <linux/freezer.h>
+#include <linux/fs.h>
+#include <linux/hdreg.h>
+#include <linux/init.h>
+#include <linux/interrupt.h>
+#include <linux/kernel.h>
+#include <linux/kthread.h>
+#include <linux/list.h>
+#include <linux/module.h>
+#include <linux/mutex.h>
+#include <linux/platform_device.h>
+#include <linux/proc_fs.h>
+#include <linux/sched.h>
+#include <linux/semaphore.h>
+#include <linux/slab.h>
+#include <linux/spinlock.h>
+#include <linux/timer.h>
+#include <linux/wait.h>
+#include <linux/version.h>
+
+#include "rkflash_api.h"
+#include "rkflash_blk.h"
+
+#include "../soc/rockchip/flash_vendor_storage.h"
+
+static struct flash_boot_ops nandc_nand_ops = {
+#ifdef	CONFIG_RK_NANDC_NAND
+	FLASH_TYPE_NANDC_NAND,
+	sftl_flash_init,
+	sftl_flash_read,
+	sftl_flash_write,
+	sftl_flash_get_capacity,
+	sftl_flash_deinit,
+	sftl_flash_resume,
+	sftl_flash_read,
+	sftl_flash_write,
+#else
+	-1, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+#endif
+};
+
+static struct flash_boot_ops sfc_nor_ops = {
+#ifdef	CONFIG_RK_SFC_NOR
+	FLASH_TYPE_SFC_NOR,
+	spi_flash_init,
+	snor_read_lba,
+	snor_write_lba,
+	snor_capacity,
+	snor_deinit,
+	snor_resume,
+	snor_vendor_read,
+	snor_vendor_write,
+#else
+	-1, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+#endif
+};
+
+static struct flash_boot_ops sfc_nand_ops = {
+#ifdef	CONFIG_RK_SFC_NAND
+	FLASH_TYPE_SFC_NAND,
+	snand_init,
+	snand_read,
+	snand_write,
+	snand_get_capacity,
+	snand_deinit,
+	snand_resume,
+	snand_read,
+	snand_write,
+#else
+	-1, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
+#endif
+};
+
+static struct flash_boot_ops *g_boot_ops[] = {
+	&nandc_nand_ops,
+	&sfc_nor_ops,
+	&sfc_nand_ops,
+};
+
+static int g_flash_type = -1;
+
+static struct flash_part disk_array[MAX_PART_COUNT];
+static int g_max_part_num = 4;
+#define FW_HRADER_PT_NAME		("fw_header_p")
+static struct flash_part fw_header_p;
+
+#define PART_READONLY 0x85
+#define PART_WRITEONLY 0x86
+#define PART_NO_ACCESS 0x87
+
+static unsigned long totle_read_data;
+static unsigned long totle_write_data;
+static unsigned long totle_read_count;
+static unsigned long totle_write_count;
+static int rkflash_dev_initialised;
+
+static char *mtd_read_temp_buffer;
+#define MTD_RW_SECTORS (512)
+static DEFINE_MUTEX(g_flash_ops_mutex);
+
+static int vendor_read(u32 sec, u32 n_sec, void *p_data)
+{
+	int ret;
+
+	if (g_boot_ops[g_flash_type]->vendor_read) {
+		mutex_lock(&g_flash_ops_mutex);
+		ret = g_boot_ops[g_flash_type]->vendor_read(sec, n_sec, p_data);
+		mutex_unlock(&g_flash_ops_mutex);
+	} else {
+		ret = -EPERM;
+	}
+
+	return ret;
+}
+
+static int vendor_write(u32 sec, u32 n_sec, void *p_data)
+{
+	int ret;
+
+	if (g_boot_ops[g_flash_type]->vendor_write) {
+		mutex_lock(&g_flash_ops_mutex);
+		ret = g_boot_ops[g_flash_type]->vendor_write(sec,
+							     n_sec,
+							     p_data);
+		mutex_unlock(&g_flash_ops_mutex);
+	} else {
+		ret = -EPERM;
+	}
+
+	return ret;
+}
+
+static unsigned int rk_partition_init(struct flash_part *part)
+{
+	int i, part_num = 0;
+	int desity;
+	struct STRUCT_PART_INFO *g_part;  /* size 2KB */
+
+	g_part = kmalloc(sizeof(*g_part), GFP_KERNEL | GFP_DMA);
+	if (!g_part)
+		return 0;
+
+	if (g_boot_ops[g_flash_type]->read(0, 4, g_part) == 0) {
+		if (g_part->hdr.ui_fw_tag == RK_PARTITION_TAG) {
+			part_num = g_part->hdr.ui_part_entry_count;
+			desity = g_boot_ops[g_flash_type]->get_capacity();
+			for (i = 0; i < part_num; i++) {
+				memcpy(part[i].name,
+				       g_part->part[i].sz_name,
+				       32);
+				part[i].offset = g_part->part[i].ui_pt_off;
+				part[i].size = g_part->part[i].ui_pt_sz;
+				part[i].type = 0;
+				if (part[i].size == UINT_MAX)
+					part[i].size = desity - part[i].offset;
+			}
+		}
+	}
+	kfree(g_part);
+
+	memset(&fw_header_p, 0x0, sizeof(fw_header_p));
+	memcpy(fw_header_p.name, FW_HRADER_PT_NAME, strlen(FW_HRADER_PT_NAME));
+	fw_header_p.offset = 0x0;
+	fw_header_p.size = 0x4;
+	fw_header_p.type = 0;
+
+	return part_num;
+}
+
+static int rkflash_proc_show(struct seq_file *m, void *v)
+{
+	seq_printf(m, "Totle Read %ld KB\n", totle_read_data >> 1);
+	seq_printf(m, "Totle Write %ld KB\n", totle_write_data >> 1);
+	seq_printf(m, "totle_write_count %ld\n", totle_write_count);
+	seq_printf(m, "totle_read_count %ld\n", totle_read_count);
+	return 0;
+}
+
+static int rkflash_proc_open(struct inode *inode, struct file *file)
+{
+	return single_open(file, rkflash_proc_show, PDE_DATA(inode));
+}
+
+static const struct file_operations rkflash_proc_fops = {
+	.owner		= THIS_MODULE,
+	.open		= rkflash_proc_open,
+	.read		= seq_read,
+	.llseek		= seq_lseek,
+	.release	= single_release,
+};
+
+static int rkflash_create_procfs(void)
+{
+	struct proc_dir_entry *ent;
+
+	ent = proc_create_data("rkflash", 0x664, NULL, &rkflash_proc_fops,
+			       (void *)0);
+	if (!ent)
+		return -1;
+
+	return 0;
+}
+
+static int rkflash_xfer(struct flash_blk_dev *dev,
+			unsigned long start,
+			unsigned long nsector,
+			char *buf,
+			int cmd,
+			int totle_nsec)
+{
+	int ret;
+
+	if (dev->disable_access ||
+	    (cmd == WRITE && dev->readonly) ||
+	    (cmd == READ && dev->writeonly)) {
+		return -EIO;
+	}
+
+	start += dev->off_size;
+
+	switch (cmd) {
+	case READ:
+		totle_read_data += nsector;
+		totle_read_count++;
+		mutex_lock(&g_flash_ops_mutex);
+		ret = g_boot_ops[g_flash_type]->read(start, nsector, buf);
+		mutex_unlock(&g_flash_ops_mutex);
+		if (ret)
+			ret = -EIO;
+		break;
+
+	case WRITE:
+		totle_write_data += nsector;
+		totle_write_count++;
+		mutex_lock(&g_flash_ops_mutex);
+		ret = g_boot_ops[g_flash_type]->write(start, nsector, buf);
+		mutex_unlock(&g_flash_ops_mutex);
+		if (ret)
+			ret = -EIO;
+		break;
+
+	default:
+		ret = -EIO;
+		break;
+	}
+
+	return ret;
+}
+
+static DECLARE_WAIT_QUEUE_HEAD(rkflash_thread_wait);
+static unsigned long rkflash_req_jiffies;
+static unsigned int rknand_req_do;
+
+static int req_check_buffer_align(struct request *req, char **pbuf)
+{
+	int nr_vec = 0;
+	struct bio_vec bvec;
+	struct req_iterator iter;
+	char *buffer;
+	void *firstbuf = 0;
+	char *nextbuffer = 0;
+
+	rq_for_each_segment(bvec, req, iter) {
+		buffer = page_address(bvec.bv_page) + bvec.bv_offset;
+		if (!firstbuf)
+			firstbuf = buffer;
+		nr_vec++;
+		if (nextbuffer && nextbuffer != buffer)
+			return 0;
+		nextbuffer = buffer + bvec.bv_len;
+	}
+	*pbuf = firstbuf;
+	return 1;
+}
+
+static int rkflash_blktrans_thread(void *arg)
+{
+	struct flash_blk_ops *blk_ops = arg;
+	struct request_queue *rq = blk_ops->rq;
+	struct request *req = NULL;
+	char *buf;
+	struct req_iterator rq_iter;
+	struct bio_vec bvec;
+	unsigned long long sector_index = ULLONG_MAX;
+	unsigned long totle_nsect;
+	unsigned long rq_len = 0;
+	int rw_flag = 0;
+
+	spin_lock_irq(rq->queue_lock);
+	while (!blk_ops->quit) {
+		int res;
+		struct flash_blk_dev *dev;
+		DECLARE_WAITQUEUE(wait, current);
+
+		if (!req)
+			req = blk_fetch_request(rq);
+		if (!req) {
+			add_wait_queue(&blk_ops->thread_wq, &wait);
+			set_current_state(TASK_INTERRUPTIBLE);
+			spin_unlock_irq(rq->queue_lock);
+			rkflash_req_jiffies = HZ / 10;
+			wait_event_timeout(blk_ops->thread_wq,
+					   blk_ops->quit || rknand_req_do,
+					   rkflash_req_jiffies);
+			rknand_req_do = 0;
+			spin_lock_irq(rq->queue_lock);
+			remove_wait_queue(&blk_ops->thread_wq, &wait);
+			continue;
+		} else {
+			rkflash_req_jiffies = 1 * HZ;
+		}
+
+		dev = req->rq_disk->private_data;
+		totle_nsect = (req->__data_len) >> 9;
+		sector_index = blk_rq_pos(req);
+		rq_len = 0;
+		buf = 0;
+		res = 0;
+
+		if (req_op(req) & REQ_OP_DISCARD) {
+			if (!__blk_end_request_cur(req, res))
+				req = NULL;
+			continue;
+		} else if (req->cmd_flags & REQ_PREFLUSH) {
+			if (!__blk_end_request_cur(req, res))
+				req = NULL;
+			continue;
+		}
+
+		rw_flag = req_op(req) & REQ_OP_WRITE;
+		if (rw_flag == READ && mtd_read_temp_buffer) {
+			buf = mtd_read_temp_buffer;
+			req_check_buffer_align(req, &buf);
+			spin_unlock_irq(rq->queue_lock);
+			res = rkflash_xfer(dev,
+					   sector_index,
+					   totle_nsect,
+					   buf,
+					   rw_flag,
+					   totle_nsect);
+			spin_lock_irq(rq->queue_lock);
+			if (buf == mtd_read_temp_buffer) {
+				char *p = buf;
+
+				rq_for_each_segment(bvec, req, rq_iter) {
+					memcpy(page_address(bvec.bv_page) +
+					       bvec.bv_offset,
+					       p,
+					       bvec.bv_len);
+					p += bvec.bv_len;
+				}
+			}
+		} else {
+			rq_for_each_segment(bvec, req, rq_iter) {
+				if ((page_address(bvec.bv_page)
+					+ bvec.bv_offset)
+					== (buf + rq_len)) {
+					rq_len += bvec.bv_len;
+				} else {
+					if (rq_len) {
+						spin_unlock_irq(rq->queue_lock);
+						res = rkflash_xfer(dev,
+								   sector_index,
+								   rq_len >> 9,
+								   buf,
+								   rw_flag,
+								   totle_nsect);
+						spin_lock_irq(rq->queue_lock);
+					}
+					sector_index += rq_len >> 9;
+					buf = (page_address(bvec.bv_page) +
+						bvec.bv_offset);
+					rq_len = bvec.bv_len;
+				}
+			}
+			if (rq_len) {
+				spin_unlock_irq(rq->queue_lock);
+				res = rkflash_xfer(dev,
+						   sector_index,
+						   rq_len >> 9,
+						   buf,
+						   rw_flag,
+						   totle_nsect);
+				spin_lock_irq(rq->queue_lock);
+			}
+		}
+		__blk_end_request_all(req, res);
+		req = NULL;
+	}
+	pr_info("flash th quited\n");
+	blk_ops->flash_th_quited = 1;
+	if (req)
+		__blk_end_request_all(req, -EIO);
+	while ((req = blk_fetch_request(rq)) != NULL)
+		__blk_end_request_all(req, -ENODEV);
+	spin_unlock_irq(rq->queue_lock);
+	complete_and_exit(&blk_ops->thread_exit, 0);
+	return 0;
+}
+
+static void rkflash_blk_request(struct request_queue *rq)
+{
+	struct flash_blk_ops *blk_ops = rq->queuedata;
+	struct request *req = NULL;
+
+	if (blk_ops->flash_th_quited) {
+		while ((req = blk_fetch_request(rq)) != NULL)
+			__blk_end_request_all(req, -ENODEV);
+		return;
+	}
+	rknand_req_do = 1;
+	wake_up(&blk_ops->thread_wq);
+}
+
+static int rkflash_open(struct block_device *bdev, fmode_t mode)
+{
+	return 0;
+}
+
+static void rkflash_release(struct gendisk *disk, fmode_t mode)
+{
+};
+
+#define DISABLE_WRITE _IO('V', 0)
+#define ENABLE_WRITE _IO('V', 1)
+#define DISABLE_READ _IO('V', 2)
+#define ENABLE_READ _IO('V', 3)
+static int rkflash_ioctl(struct block_device *bdev, fmode_t mode,
+			 unsigned int cmd,
+			 unsigned long arg)
+{
+	struct flash_blk_dev *dev = bdev->bd_disk->private_data;
+
+	switch (cmd) {
+	case ENABLE_WRITE:
+		dev->disable_access = 0;
+		dev->readonly = 0;
+		set_disk_ro(dev->blkcore_priv, 0);
+		return 0;
+
+	case DISABLE_WRITE:
+		dev->readonly = 1;
+		set_disk_ro(dev->blkcore_priv, 1);
+		return 0;
+
+	case ENABLE_READ:
+		dev->disable_access = 0;
+		dev->writeonly = 0;
+		return 0;
+
+	case DISABLE_READ:
+		dev->writeonly = 1;
+		return 0;
+	default:
+		return -ENOTTY;
+	}
+}
+
+const struct block_device_operations rkflash_blktrans_ops = {
+	.owner = THIS_MODULE,
+	.open = rkflash_open,
+	.release = rkflash_release,
+	.ioctl = rkflash_ioctl,
+};
+
+static struct flash_blk_ops mytr = {
+	.name =  "rkflash",
+	.major = 31,
+	.minorbits = 0,
+	.owner = THIS_MODULE,
+};
+
+static int rkflash_add_dev(struct flash_blk_ops *blk_ops,
+			   struct flash_part *part)
+{
+	struct flash_blk_dev *dev;
+	struct gendisk *gd;
+
+	if (part->size == 0)
+		return -1;
+
+	dev = kzalloc(sizeof(*dev), GFP_KERNEL);
+	if (!dev)
+		return -ENOMEM;
+
+	gd = alloc_disk(1 << blk_ops->minorbits);
+	if (!gd) {
+		kfree(dev);
+		return -ENOMEM;
+	}
+
+	dev->blk_ops = blk_ops;
+	dev->size = part->size;
+	dev->off_size = part->offset;
+	dev->devnum = blk_ops->last_dev_index;
+	list_add_tail(&dev->list, &blk_ops->devs);
+	blk_ops->last_dev_index++;
+
+	gd->major = blk_ops->major;
+	gd->first_minor = (dev->devnum) << blk_ops->minorbits;
+	gd->fops = &rkflash_blktrans_ops;
+
+	if (part->name[0]) {
+		snprintf(gd->disk_name,
+			 sizeof(gd->disk_name),
+			 "%s",
+			 part->name);
+	} else {
+		gd->flags = GENHD_FL_EXT_DEVT;
+		gd->minors = 255;
+		snprintf(gd->disk_name,
+			 sizeof(gd->disk_name),
+			 "%s%d",
+			 blk_ops->name,
+			 dev->devnum);
+	}
+
+	set_capacity(gd, dev->size);
+
+	gd->private_data = dev;
+	dev->blkcore_priv = gd;
+	gd->queue = blk_ops->rq;
+	gd->queue->bypass_depth = 1;
+
+	if (part->type == PART_NO_ACCESS)
+		dev->disable_access = 1;
+
+	if (part->type == PART_READONLY)
+		dev->readonly = 1;
+
+	if (part->type == PART_WRITEONLY)
+		dev->writeonly = 1;
+
+	if (dev->readonly)
+		set_disk_ro(gd, 1);
+
+	add_disk(gd);
+
+	return 0;
+}
+
+static int rkflash_remove_dev(struct flash_blk_dev *dev)
+{
+	struct gendisk *gd;
+
+	gd = dev->blkcore_priv;
+	list_del(&dev->list);
+	gd->queue = NULL;
+	del_gendisk(gd);
+	put_disk(gd);
+	kfree(dev);
+	return 0;
+}
+
+static int rkflash_blk_register(struct flash_blk_ops *blk_ops)
+{
+	int i, ret;
+	u64 offset;
+
+	rknand_req_do = 0;
+	blk_ops->quit = 0;
+	blk_ops->flash_th_quited = 0;
+
+	mtd_read_temp_buffer = kmalloc(MTD_RW_SECTORS * 512,
+				       GFP_KERNEL | GFP_DMA);
+
+	ret = register_blkdev(blk_ops->major, blk_ops->name);
+	if (ret)
+		return -1;
+
+	spin_lock_init(&blk_ops->queue_lock);
+	init_completion(&blk_ops->thread_exit);
+	init_waitqueue_head(&blk_ops->thread_wq);
+
+	blk_ops->rq = blk_init_queue(rkflash_blk_request, &blk_ops->queue_lock);
+	if (!blk_ops->rq) {
+		unregister_blkdev(blk_ops->major, blk_ops->name);
+		return  -1;
+	}
+
+	blk_queue_max_hw_sectors(blk_ops->rq, MTD_RW_SECTORS);
+	blk_queue_max_segments(blk_ops->rq, MTD_RW_SECTORS);
+
+	queue_flag_set_unlocked(QUEUE_FLAG_DISCARD, blk_ops->rq);
+	blk_queue_max_discard_sectors(blk_ops->rq, UINT_MAX >> 9);
+
+	blk_ops->rq->queuedata = blk_ops;
+	INIT_LIST_HEAD(&blk_ops->devs);
+	kthread_run(rkflash_blktrans_thread, (void *)blk_ops, "rkflash");
+	g_max_part_num = rk_partition_init(disk_array);
+	if (g_max_part_num) {
+		/* partition 0 is save vendor data, need hidden */
+		blk_ops->last_dev_index = 0;
+		for (i = 1; i < g_max_part_num; i++) {
+			offset = (u64)disk_array[i].offset;
+			pr_info("%10s: 0x%09llx -- 0x%09llx (%llu MB)\n",
+				disk_array[i].name,
+				offset * 512,
+				(u64)(offset + disk_array[i].size) * 512,
+				(u64)disk_array[i].size / 2048);
+			rkflash_add_dev(blk_ops, &disk_array[i]);
+		}
+		rkflash_add_dev(blk_ops, &fw_header_p);
+	} else {
+		struct flash_part part;
+
+		part.offset = 0;
+		part.size = g_boot_ops[g_flash_type]->get_capacity();
+		part.type = 0;
+		part.name[0] = 0;
+		rkflash_add_dev(&mytr, &part);
+	}
+	rkflash_create_procfs();
+
+	return 0;
+}
+
+static void rkflash_blk_unregister(struct flash_blk_ops *blk_ops)
+{
+	struct list_head *this, *next;
+
+	blk_ops->quit = 1;
+	wake_up(&blk_ops->thread_wq);
+	wait_for_completion(&blk_ops->thread_exit);
+	list_for_each_safe(this, next, &blk_ops->devs) {
+		struct flash_blk_dev *dev =
+			list_entry(this, struct flash_blk_dev, list);
+
+		rkflash_remove_dev(dev);
+	}
+	blk_cleanup_queue(blk_ops->rq);
+	unregister_blkdev(blk_ops->major, blk_ops->name);
+}
+
+int rkflash_dev_init(void __iomem *reg_addr, enum flash_con_type con_type)
+{
+	int ret;
+	int tmp_id, start_id, end_id;
+
+	pr_err("%s\n", __func__);
+	if (rkflash_dev_initialised) {
+		pr_err("rkflash has already inited as id[%d]\n", g_flash_type);
+		return -1;
+	}
+
+	if (con_type == FLASH_CON_TYPE_NANDC) {
+		start_id = FLASH_TYPE_NANDC_NAND;
+		end_id = FLASH_TYPE_NANDC_NAND;
+	} else {
+		start_id = FLASH_TYPE_SFC_NOR;
+		end_id = FLASH_TYPE_SFC_NAND;
+	}
+	for (tmp_id = start_id; tmp_id <= end_id; tmp_id++) {
+		pr_info("init rkflash[%d]\n", tmp_id);
+		if (g_boot_ops[tmp_id]->id == -1) {
+			pr_err("rkflash[%d] is invalid\n", tmp_id);
+			if (tmp_id == end_id)
+				return -1;
+			continue;
+		}
+		ret = g_boot_ops[tmp_id]->init(reg_addr);
+		if (ret) {
+			pr_err("rkflash[%d] init fail\n", tmp_id);
+			if (tmp_id == end_id)
+				return -1;
+			continue;
+		} else {
+			break;
+		}
+	}
+	pr_info("rkflash[%d] init success\n", tmp_id);
+	g_flash_type = tmp_id;
+	mytr.quit = 1;
+	flash_vendor_dev_ops_register(&vendor_read,
+				      &vendor_write);
+#ifdef CONFIG_RK_SFC_NOR_MTD
+	if (g_flash_type == FLASH_TYPE_SFC_NOR) {
+		pr_info("sfc_nor flash registered as a mtd device\n");
+		rkflash_dev_initialised = 1;
+		return 0;
+	}
+#endif
+	ret = rkflash_blk_register(&mytr);
+	if (ret) {
+		pr_err("rkflash_blk_register fail\n");
+		g_flash_type = -1;
+		return -1;
+	}
+	rkflash_dev_initialised = 1;
+
+	return ret;
+}
+
+int rkflash_dev_exit(void)
+{
+	if (rkflash_dev_initialised) {
+		g_flash_type = -1;
+		rkflash_dev_initialised = 0;
+		rkflash_blk_unregister(&mytr);
+		pr_info("%s:OK\n", __func__);
+	}
+	return 0;
+}
+
+int rkflash_dev_suspend(void)
+{
+	mutex_lock(&g_flash_ops_mutex);
+	return 0;
+}
+
+int rkflash_dev_resume(void __iomem *reg_addr)
+{
+	g_boot_ops[g_flash_type]->resume(reg_addr);
+	mutex_unlock(&g_flash_ops_mutex);
+	return 0;
+}
+
+void rkflash_dev_shutdown(void)
+{
+	pr_info("rkflash_shutdown...\n");
+	if (mytr.quit == 0) {
+		mytr.quit = 1;
+		wake_up(&mytr.thread_wq);
+		wait_for_completion(&mytr.thread_exit);
+	}
+	g_boot_ops[g_flash_type]->deinit();
+	pr_info("rkflash_shutdown:OK\n");
+}
diff --git a/drivers/rkflash/rkflash_blk.h b/drivers/rkflash/rkflash_blk.h
new file mode 100644
index 000000000000..7735910ec2f2
--- /dev/null
+++ b/drivers/rkflash/rkflash_blk.h
@@ -0,0 +1,126 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#ifndef __RKFLASH_BLK_H
+#define __RKFLASH_BLK_H
+
+#include <linux/semaphore.h>
+
+#define MAX_PART_COUNT 32
+#define RK_PARTITION_TAG	0x50464B52
+
+enum flash_con_type {
+	FLASH_CON_TYPE_NANDC = 0,
+	FLASH_CON_TYPE_SFC,
+	FLASH_CON_TYPE_MAX,
+};
+
+enum flash_type {
+	FLASH_TYPE_NANDC_NAND = 0,
+	FLASH_TYPE_SFC_NOR,
+	FLASH_TYPE_SFC_NAND,
+	FLASH_TYPE_MAX,
+};
+
+struct flash_boot_ops {
+	int id;
+	int (*init)(void __iomem *reg_addr);
+	int (*read)(u32 sec, u32 n_sec, void *p_data);
+	int (*write)(u32 sec, u32 n_sec, void *p_data);
+	u32 (*get_capacity)(void);
+	void (*deinit)(void);
+	int (*resume)(void __iomem *reg_addr);
+	int (*vendor_read)(u32 sec, u32 n_sec, void *p_data);
+	int (*vendor_write)(u32 sec, u32 n_sec, void *p_data);
+};
+
+struct flash_part {
+	unsigned char name[32];
+	unsigned int offset;
+	unsigned int size;
+	unsigned char type;
+};
+
+struct flash_blk_ops {
+	char *name;
+	int major;
+	int minorbits;
+	int last_dev_index;
+	struct completion thread_exit;
+	int quit;
+	int flash_th_quited;
+	wait_queue_head_t thread_wq; /* thread wait queue */
+	struct request_queue *rq;
+	spinlock_t queue_lock; /* queue lock */
+	struct list_head devs;
+	struct module *owner;
+};
+
+struct flash_blk_dev {
+	struct flash_blk_ops *blk_ops;
+	struct list_head list;
+	int devnum;
+	unsigned int size;
+	unsigned int off_size;
+	int readonly;
+	int writeonly;
+	int disable_access;
+	void *blkcore_priv;
+};
+
+enum ENUM_PARTITION_TYPE {
+	PART_VENDOR = 1 << 0,
+	PART_IDBLOCK = 1 << 1,
+	PART_KERNEL = 1 << 2,
+	PART_BOOT = 1 << 3,
+	PART_USER = 1 << 31
+};
+
+struct STRUCT_DATETIME {
+	unsigned short	year;
+	unsigned char	month;
+	unsigned char	day;
+	unsigned char	hour;
+	unsigned char	min;
+	unsigned char	sec;
+	unsigned char	reserve;
+};
+
+struct STRUCT_FW_HEADER {
+	unsigned int	ui_fw_tag;	/* "RKFP" */
+	struct STRUCT_DATETIME	dt_release_data_time;
+	unsigned int	ui_fw_ver;
+	unsigned int	ui_size;	/* size of sturct,unit of u8 */
+	unsigned int	ui_part_entry_offset;	/* unit of sector */
+	unsigned int	ui_backup_part_entry_offset;
+	unsigned int	ui_part_entry_size;	/* unit of u8 */
+	unsigned int	ui_part_entry_count;
+	unsigned int	ui_fw_size;	/* unit of u8 */
+	unsigned char	reserved[464];
+	unsigned int	ui_part_entry_crc;
+	unsigned int	ui_header_crc;
+};
+
+struct STRUCT_PART_ENTRY {
+	unsigned char	sz_name[32];
+	enum ENUM_PARTITION_TYPE em_part_type;
+	unsigned int	ui_pt_off;	/* unit of sector */
+	unsigned int	ui_pt_sz;	/* unit of sector */
+	unsigned int	ui_data_length;	/* unit of u8 */
+	unsigned int	ui_part_property;
+	unsigned char	reserved[76];
+};
+
+struct STRUCT_PART_INFO {
+	struct STRUCT_FW_HEADER hdr;	/* 0.5KB */
+	struct STRUCT_PART_ENTRY part[12];	/* 1.5KB */
+} __packed;
+
+int rkflash_dev_suspend(void);
+int rkflash_dev_resume(void __iomem *reg_addr);
+void rkflash_dev_shutdown(void);
+void rkflash_dev_flush(void);
+int rkflash_dev_init(void __iomem *reg_addr, enum flash_con_type type);
+int rkflash_dev_exit(void);
+#endif
diff --git a/drivers/rkflash/rkflash_debug.c b/drivers/rkflash/rkflash_debug.c
new file mode 100644
index 000000000000..8d8e7d6e3b20
--- /dev/null
+++ b/drivers/rkflash/rkflash_debug.c
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#include <linux/kernel.h>
+
+#include "rkflash_debug.h"
+#include "sfc_nor.h"
+#include "typedef.h"
+
+void rknand_print_hex(char *s, void *buf, int width, int len)
+{
+	print_hex_dump(KERN_WARNING, s, DUMP_PREFIX_OFFSET,
+		       16, width, buf, len * width, 0);
+}
+
diff --git a/drivers/rkflash/rkflash_debug.h b/drivers/rkflash/rkflash_debug.h
new file mode 100644
index 000000000000..4ae471834b30
--- /dev/null
+++ b/drivers/rkflash/rkflash_debug.h
@@ -0,0 +1,69 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#ifndef _RKFLASH_DEBUG_H
+#define _RKFLASH_DEBUG_H
+
+/*
+ * Test switch
+ */
+#define BLK_STRESS_TEST_EN	0
+
+/*
+ * Print switch, set to 1 if needed
+ * I - info
+ * E - error
+ * HEX - multiline print
+ */
+
+#define	PRINT_SWI_SFC_I		0
+#define	PRINT_SWI_SFC_E		1
+#define PRINT_SWI_SFC_HEX	1
+
+#define	PRINT_SWI_NANDC_I	0
+#define	PRINT_SWI_NANDC_E	1
+#define PRINT_SWI_NANDC_HEX	1
+
+#if (PRINT_SWI_SFC_I)
+#define PRINT_SFC_I(...) pr_info(__VA_ARGS__)
+#else
+#define PRINT_SFC_I(...)
+#endif
+
+#if (PRINT_SWI_SFC_E)
+#define PRINT_SFC_E(...) pr_info(__VA_ARGS__)
+#else
+#define PRINT_SFC_E(...)
+#endif
+
+#if (PRINT_SWI_SFC_HEX)
+#define PRINT_SFC_HEX(s, buf, width, len)\
+		rknand_print_hex(s, buf, width, len)
+#else
+#define PRINT_SFC_HEX(s, buf, width, len)
+#endif
+
+#if (PRINT_SWI_NANDC_I)
+#define PRINT_NANDC_I(...) pr_info(__VA_ARGS__)
+#else
+#define PRINT_NANDC_I(...)
+#endif
+
+#if (PRINT_SWI_NANDC_E)
+#define PRINT_NANDC_E(...) pr_info(__VA_ARGS__)
+#else
+#define PRINT_NANDC_E(...)
+#endif
+
+#if (PRINT_SWI_NANDC_HEX)
+#define PRINT_NANDC_HEX(s, buf, width, len)\
+		rknand_print_hex(s, buf, width, len)
+#else
+#define PRINT_NANDC_HEX(s, buf, width, len)
+#endif
+
+void rkflash_print_hex(char *s, void *buf, u32 width, u32 len);
+
+#endif
+
diff --git a/drivers/rkflash/rknandc_base.c b/drivers/rkflash/rknandc_base.c
new file mode 100644
index 000000000000..22045f9bb5ae
--- /dev/null
+++ b/drivers/rkflash/rknandc_base.c
@@ -0,0 +1,196 @@
+// SPDX-License-Identifier: GPL-2.0
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#include <asm/cacheflush.h>
+#include <linux/bootmem.h>
+#include <linux/clk.h>
+#include <linux/dma-mapping.h>
+#include <linux/interrupt.h>
+#include <linux/irq.h>
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/platform_device.h>
+#include <linux/sched.h>
+#include <linux/slab.h>
+#ifdef CONFIG_OF
+#include <linux/of.h>
+#endif
+
+#include "nandc.h"
+#include "rkflash_api.h"
+#include "rkflash_blk.h"
+
+#define RKNANDC_VERSION_AND_DATE	"rknandc_base v1.1 2017-01-11"
+#define	RKNANDC_CLK_SET_RATE		(150 * 1000 * 1000)
+
+struct rknandc_info {
+	void __iomem	*reg_base;
+	int	irq;
+	int	clk_rate;
+	struct clk	*clk;		/* controller's clk*/
+	struct clk	*ahb_clk;	/* ahb clk gate*/
+	struct clk	*g_clk;		/* clk_src_en gate*/
+};
+
+static struct rknandc_info g_nandc_info;
+static struct device *g_nandc_dev;
+static struct completion nandc_irq_complete;
+
+unsigned long rknandc_dma_map_single(unsigned long ptr, int size, int dir)
+{
+#ifdef CONFIG_ARM64
+	__dma_map_area((void *)ptr, size, dir);
+	return ((unsigned long)virt_to_phys((void *)ptr));
+#else
+	return dma_map_single(NULL, (void *)ptr, size
+		, dir ? DMA_TO_DEVICE : DMA_FROM_DEVICE);
+#endif
+}
+
+void rknandc_dma_unmap_single(unsigned long ptr, int size, int dir)
+{
+#ifdef CONFIG_ARM64
+	__dma_unmap_area(phys_to_virt(ptr), size, dir);
+#else
+	dma_unmap_single(NULL, (dma_addr_t)ptr, size
+		, dir ? DMA_TO_DEVICE : DMA_FROM_DEVICE);
+#endif
+}
+
+static irqreturn_t rknandc_interrupt(int irq, void *dev_id)
+{
+	nandc_clean_irq();
+	complete(&nandc_irq_complete);
+	return IRQ_HANDLED;
+}
+
+static int rknandc_irq_config(int mode, void *pfun)
+{
+	int ret = 0;
+	int irq = g_nandc_info.irq;
+
+	if (mode)
+		ret = request_irq(irq, pfun, 0, "rknandc",
+				  g_nandc_info.reg_base);
+	else
+		free_irq(irq,  NULL);
+	return ret;
+}
+
+static int rknandc_irq_init(void)
+{
+	init_completion(&nandc_irq_complete);
+	rknandc_irq_config(1, rknandc_interrupt);
+	return 0;
+}
+
+static int rknandc_irq_deinit(void)
+{
+	rknandc_irq_config(0, rknandc_interrupt);
+	return 0;
+}
+
+static int rknandc_probe(struct platform_device *pdev)
+{
+	int irq;
+	struct resource	*mem;
+	void __iomem	*membase;
+	int ret;
+
+	g_nandc_dev = &pdev->dev;
+	mem = platform_get_resource(pdev, IORESOURCE_MEM, 0);
+	membase = devm_ioremap_resource(&pdev->dev, mem);
+	if (!membase) {
+		dev_err(&pdev->dev, "no reg resource?\n");
+		return -1;
+	}
+
+	irq = platform_get_irq(pdev, 0);
+	if (irq < 0) {
+		dev_err(&pdev->dev, "no irq resource?\n");
+		return irq;
+	}
+
+	g_nandc_info.irq = irq;
+	g_nandc_info.reg_base = membase;
+	g_nandc_info.ahb_clk = devm_clk_get(&pdev->dev, "hclk_nandc");
+	g_nandc_info.clk = devm_clk_get(&pdev->dev, "clk_nandc");
+	g_nandc_info.g_clk = devm_clk_get(&pdev->dev, "g_clk_nandc");
+	if (unlikely(IS_ERR(g_nandc_info.clk)) ||
+	    unlikely(IS_ERR(g_nandc_info.ahb_clk))) {
+		dev_err(&pdev->dev, "%s get clk error\n", __func__);
+		return -1;
+	}
+	clk_prepare_enable(g_nandc_info.ahb_clk);
+	if (!(IS_ERR(g_nandc_info.g_clk)))
+		clk_prepare_enable(g_nandc_info.g_clk);
+
+	clk_set_rate(g_nandc_info.clk, RKNANDC_CLK_SET_RATE);
+	g_nandc_info.clk_rate = clk_get_rate(g_nandc_info.clk);
+	clk_prepare_enable(g_nandc_info.clk);
+	dev_info(&pdev->dev,
+		 "%s clk rate = %d\n",
+		 __func__,
+		 g_nandc_info.clk_rate);
+	rknandc_irq_init();
+	ret = rkflash_dev_init(g_nandc_info.reg_base, FLASH_CON_TYPE_NANDC);
+
+	return ret;
+}
+
+static int rknandc_suspend(struct platform_device *pdev, pm_message_t state)
+{
+	return rkflash_dev_suspend();
+}
+
+static int rknandc_resume(struct platform_device *pdev)
+{
+	return rkflash_dev_resume(g_nandc_info.reg_base);
+}
+
+static void rknandc_shutdown(struct platform_device *pdev)
+{
+	rkflash_dev_shutdown();
+}
+
+#ifdef CONFIG_OF
+static const struct of_device_id of_rknandc_match[] = {
+	{.compatible = "rockchip,rk-nandc"},
+	{.compatible = "rockchip,nandc"},
+	{}
+};
+#endif
+
+static struct platform_driver rknandc_driver = {
+	.probe		= rknandc_probe,
+	.suspend	= rknandc_suspend,
+	.resume		= rknandc_resume,
+	.shutdown	= rknandc_shutdown,
+	.driver		= {
+		.name	= "rknandc",
+#ifdef CONFIG_OF
+		.of_match_table	= of_rknandc_match,
+#endif
+	},
+};
+
+static void __exit rknandc_driver_exit(void)
+{
+	rkflash_dev_exit();
+	rknandc_irq_deinit();
+	platform_driver_unregister(&rknandc_driver);
+}
+
+static int __init rknandc_driver_init(void)
+{
+	int ret = 0;
+
+	pr_err("%s\n", RKNANDC_VERSION_AND_DATE);
+	ret = platform_driver_register(&rknandc_driver);
+	return ret;
+}
+
+module_init(rknandc_driver_init);
+module_exit(rknandc_driver_exit);
+MODULE_ALIAS(DRIVER_NAME);
diff --git a/drivers/rkflash/rksfc_base.c b/drivers/rkflash/rksfc_base.c
new file mode 100644
index 000000000000..68394638e2ad
--- /dev/null
+++ b/drivers/rkflash/rksfc_base.c
@@ -0,0 +1,207 @@
+// SPDX-License-Identifier: GPL-2.0
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#include <asm/cacheflush.h>
+#include <linux/bootmem.h>
+#include <linux/clk.h>
+#include <linux/dma-mapping.h>
+#include <linux/interrupt.h>
+#include <linux/irq.h>
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/platform_device.h>
+#include <linux/sched.h>
+#include <linux/slab.h>
+#ifdef CONFIG_OF
+#include <linux/of.h>
+#endif
+
+#include "sfc.h"
+#include "rkflash_api.h"
+#include "rkflash_blk.h"
+
+#define RKSFC_VERSION_AND_DATE  "rksfc_base v1.1 2016-01-08"
+#define	RKSFC_CLK_SET_RATE	(100 * 1000 * 1000)
+
+struct rksfc_info {
+	void __iomem	*reg_base;
+	int	irq;
+	int	clk_rate;
+	struct clk	*clk;		/* sfc clk*/
+	struct clk	*ahb_clk;	/* ahb clk gate*/
+};
+
+static struct rksfc_info g_sfc_info;
+static struct device *g_sfc_dev;
+static struct completion sfc_irq_complete;
+
+unsigned long rksfc_dma_map_single(unsigned long ptr, int size, int dir)
+{
+#ifdef CONFIG_ARM64
+	__dma_map_area((void *)ptr, size, dir);
+	return ((unsigned long)virt_to_phys((void *)ptr));
+#else
+	return dma_map_single(NULL, (void *)ptr, size
+		, dir ? DMA_TO_DEVICE : DMA_FROM_DEVICE);
+#endif
+}
+
+void rksfc_dma_unmap_single(unsigned long ptr, int size, int dir)
+{
+#ifdef CONFIG_ARM64
+	__dma_unmap_area(phys_to_virt(ptr), size, dir);
+#else
+	dma_unmap_single(NULL, (dma_addr_t)ptr, size
+		, dir ? DMA_TO_DEVICE : DMA_FROM_DEVICE);
+#endif
+}
+
+int rksfc_get_reg_addr(unsigned long *p_sfc_addr)
+{
+	*p_sfc_addr = (unsigned long)g_sfc_info.reg_base;
+	return 0;
+}
+
+static irqreturn_t rksfc_interrupt(int irq, void *dev_id)
+{
+	sfc_clean_irq();
+	complete(&sfc_irq_complete);
+	return IRQ_HANDLED;
+}
+
+void rksfc_irq_flag_init(void)
+{
+	init_completion(&sfc_irq_complete);
+}
+
+void rksfc_wait_for_irq_completed(void)
+{
+	wait_for_completion_timeout(&sfc_irq_complete,
+				    msecs_to_jiffies(10));
+}
+
+static int rksfc_irq_config(int mode, void *pfun)
+{
+	int ret = 0;
+	int irq = g_sfc_info.irq;
+
+	if (mode)
+		ret = request_irq(irq, pfun, 0, "rksfc",
+				  g_sfc_info.reg_base);
+	else
+		free_irq(irq,  NULL);
+	return ret;
+}
+
+static int rksfc_irq_init(void)
+{
+	init_completion(&sfc_irq_complete);
+	rksfc_irq_config(1, rksfc_interrupt);
+	return 0;
+}
+
+static int rksfc_irq_deinit(void)
+{
+	rksfc_irq_config(0, rksfc_interrupt);
+	return 0;
+}
+
+static int rksfc_probe(struct platform_device *pdev)
+{
+	int irq;
+	struct resource	*mem;
+	void __iomem	*membase;
+	int ret;
+
+	g_sfc_dev = &pdev->dev;
+	mem = platform_get_resource(pdev, IORESOURCE_MEM, 0);
+	membase = devm_ioremap_resource(&pdev->dev, mem);
+	if (!membase) {
+		dev_err(&pdev->dev, "no reg resource?\n");
+		return -1;
+	}
+
+	irq = platform_get_irq(pdev, 0);
+	if (irq < 0) {
+		dev_err(&pdev->dev, "no irq resource?\n");
+		return irq;
+	}
+
+	g_sfc_info.irq = irq;
+	g_sfc_info.reg_base = membase;
+	g_sfc_info.ahb_clk = devm_clk_get(&pdev->dev, "hclk_sfc");
+	g_sfc_info.clk = devm_clk_get(&pdev->dev, "clk_sfc");
+	if (unlikely(IS_ERR(g_sfc_info.clk)) ||
+	    unlikely(IS_ERR(g_sfc_info.ahb_clk))) {
+		dev_err(&pdev->dev, "%s get clk error\n", __func__);
+		return -1;
+	}
+	clk_prepare_enable(g_sfc_info.ahb_clk);
+	clk_set_rate(g_sfc_info.clk, RKSFC_CLK_SET_RATE);
+	g_sfc_info.clk_rate = clk_get_rate(g_sfc_info.clk);
+	clk_prepare_enable(g_sfc_info.clk);
+	dev_info(&pdev->dev,
+		 "%s clk rate = %d\n",
+		 __func__,
+		 g_sfc_info.clk_rate);
+	rksfc_irq_init();
+	ret = rkflash_dev_init(g_sfc_info.reg_base, FLASH_CON_TYPE_SFC);
+
+	return ret;
+}
+
+static int rksfc_suspend(struct platform_device *pdev, pm_message_t state)
+{
+	return rkflash_dev_suspend();
+}
+
+static int rksfc_resume(struct platform_device *pdev)
+{
+	return rkflash_dev_resume(g_sfc_info.reg_base);
+}
+
+static void rksfc_shutdown(struct platform_device *pdev)
+{
+	rkflash_dev_shutdown();
+}
+
+#ifdef CONFIG_OF
+static const struct of_device_id of_rksfc_match[] = {
+	{.compatible = "rockchip,sfc"},
+	{}
+};
+#endif
+
+static struct platform_driver rksfc_driver = {
+	.probe		= rksfc_probe,
+	.suspend	= rksfc_suspend,
+	.resume		= rksfc_resume,
+	.shutdown	= rksfc_shutdown,
+	.driver		= {
+		.name	= "rksfc",
+#ifdef CONFIG_OF
+		.of_match_table	= of_rksfc_match,
+#endif
+	},
+};
+
+static void __exit rksfc_driver_exit(void)
+{
+	rkflash_dev_exit();
+	rksfc_irq_deinit();
+	platform_driver_unregister(&rksfc_driver);
+}
+
+static int __init rksfc_driver_init(void)
+{
+	int ret = 0;
+
+	pr_err("%s\n", RKSFC_VERSION_AND_DATE);
+	ret = platform_driver_register(&rksfc_driver);
+	return ret;
+}
+
+module_init(rksfc_driver_init);
+module_exit(rksfc_driver_exit);
+MODULE_ALIAS(DRIVER_NAME);
diff --git a/drivers/rkflash/sfc.c b/drivers/rkflash/sfc.c
new file mode 100644
index 000000000000..1b9fc71cdfab
--- /dev/null
+++ b/drivers/rkflash/sfc.c
@@ -0,0 +1,191 @@
+// SPDX-License-Identifier: GPL-2.0
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#include <linux/delay.h>
+#include <linux/dma-mapping.h>
+#include <linux/kernel.h>
+
+#include "sfc.h"
+
+static void __iomem *g_sfc_reg;
+
+static void sfc_reset(void)
+{
+	int timeout = 10000;
+
+	writel(SFC_RESET, g_sfc_reg + SFC_RCVR);
+	while ((readl(g_sfc_reg + SFC_RCVR) == SFC_RESET) && (timeout > 0)) {
+		sfc_delay(1);
+		timeout--;
+	}
+	writel(0xFFFFFFFF, g_sfc_reg + SFC_ICLR);
+}
+
+u16 sfc_get_version(void)
+{
+	return  (u32)(readl(g_sfc_reg + SFC_VER) & 0xffff);
+}
+
+int sfc_init(void __iomem *reg_addr)
+{
+	g_sfc_reg = reg_addr;
+	sfc_reset();
+	writel(0, g_sfc_reg + SFC_CTRL);
+
+	return SFC_OK;
+}
+
+void sfc_clean_irq(void)
+{
+	writel(0xFFFFFFFF, g_sfc_reg + SFC_ICLR);
+	writel(0xFFFFFFFF, g_sfc_reg + SFC_IMR);
+}
+
+int sfc_request(u32 sfcmd, u32 sfctrl, u32 addr, void *data)
+{
+	int ret = SFC_OK;
+	union SFCCMD_DATA cmd;
+	int reg;
+	int timeout = 0;
+
+	reg = readl(g_sfc_reg + SFC_FSR);
+	if (!(reg & SFC_TXEMPTY) || !(reg & SFC_RXEMPTY) ||
+	    (readl(g_sfc_reg + SFC_SR) & SFC_BUSY))
+		sfc_reset();
+
+	cmd.d32 = sfcmd;
+	if (cmd.b.addrbits == SFC_ADDR_XBITS) {
+		union SFCCTRL_DATA ctrl;
+
+		ctrl.d32 = sfctrl;
+		if (!ctrl.b.addrbits)
+			return SFC_PARAM_ERR;
+		/* Controller plus 1 automatically */
+		writel(ctrl.b.addrbits - 1, g_sfc_reg + SFC_ABIT);
+	}
+	/* shift in the data at negedge sclk_out */
+	sfctrl |= 0x2;
+
+	writel(sfctrl, g_sfc_reg + SFC_CTRL);
+	writel(sfcmd, g_sfc_reg + SFC_CMD);
+	if (cmd.b.addrbits)
+		writel(addr, g_sfc_reg + SFC_ADDR);
+	if (!cmd.b.datasize)
+		goto exit_wait;
+	if (SFC_ENABLE_DMA & sfctrl) {
+		unsigned long dma_addr;
+		u8 direction = (cmd.b.rw == SFC_WRITE) ? 1 : 0;
+
+		dma_addr = rksfc_dma_map_single((unsigned long)data,
+						cmd.b.datasize,
+						direction);
+		rksfc_irq_flag_init();
+		writel(0xFFFFFFFF, g_sfc_reg + SFC_ICLR);
+		writel(~(FINISH_INT), g_sfc_reg + SFC_IMR);
+		writel((u32)dma_addr, g_sfc_reg + SFC_DMA_ADDR);
+		writel(SFC_DMA_START, g_sfc_reg + SFC_DMA_TRIGGER);
+
+		timeout = cmd.b.datasize * 10;
+		rksfc_wait_for_irq_completed();
+		while ((readl(g_sfc_reg + SFC_SR) & SFC_BUSY) &&
+		       (timeout-- > 0))
+			sfc_delay(1);
+		writel(0xFFFFFFFF, g_sfc_reg + SFC_ICLR);
+		if (timeout <= 0)
+			ret = SFC_WAIT_TIMEOUT;
+		direction = (cmd.b.rw == SFC_WRITE) ? 1 : 0;
+		rksfc_dma_unmap_single(dma_addr,
+				       cmd.b.datasize,
+				       direction);
+	} else {
+		u32 i, words, count, bytes;
+		union SFCFSR_DATA    fifostat;
+		u32 *p_data = (u32 *)data;
+
+		if (cmd.b.rw == SFC_WRITE) {
+			words  = (cmd.b.datasize + 3) >> 2;
+			while (words) {
+				fifostat.d32 = readl(g_sfc_reg + SFC_FSR);
+				if (fifostat.b.txlevel > 0) {
+					count = words < fifostat.b.txlevel ?
+						words : fifostat.b.txlevel;
+					for (i = 0; i < count; i++) {
+						writel(*p_data++,
+						       g_sfc_reg + SFC_DATA);
+						words--;
+					}
+					if (words == 0)
+						break;
+					timeout = 0;
+				} else {
+					sfc_delay(1);
+					if (timeout++ > 10000) {
+						ret = SFC_TX_TIMEOUT;
+						break;
+					}
+				}
+			}
+		} else {
+			/* SFC_READ == cmd.b.rw */
+			bytes = cmd.b.datasize & 0x3;
+			words = cmd.b.datasize >> 2;
+			while (words) {
+				fifostat.d32 = readl(g_sfc_reg + SFC_FSR);
+				if (fifostat.b.rxlevel > 0) {
+					u32 count;
+
+					count = words < fifostat.b.rxlevel ?
+						words : fifostat.b.rxlevel;
+
+					for (i = 0; i < count; i++) {
+						*p_data++ = readl(g_sfc_reg +
+								  SFC_DATA);
+						words--;
+					}
+					if (words == 0)
+						break;
+					timeout = 0;
+				} else {
+					sfc_delay(1);
+					if (timeout++ > 10000) {
+						ret = SFC_RX_TIMEOUT;
+						break;
+					}
+				}
+			}
+
+			timeout = 0;
+			while (bytes) {
+				fifostat.d32 = readl(g_sfc_reg + SFC_FSR);
+				if (fifostat.b.rxlevel > 0) {
+					u8 *p_data1 = (u8 *)p_data;
+
+					words = readl(g_sfc_reg + SFC_DATA);
+					for (i = 0; i < bytes; i++)
+						p_data1[i] =
+						(u8)((words >> (i * 8)) & 0xFF);
+					break;
+				}
+
+				sfc_delay(1);
+				if (timeout++ > 10000) {
+					ret = SFC_RX_TIMEOUT;
+					break;
+				}
+			}
+		}
+	}
+
+exit_wait:
+	timeout = 0;    /* wait cmd or data send complete */
+	while (!(readl(g_sfc_reg + SFC_FSR) & SFC_TXEMPTY)) {
+		sfc_delay(1);
+		if (timeout++ > 100000) {         /* wait 100ms */
+			ret = SFC_TX_TIMEOUT;
+			break;
+		}
+	}
+	sfc_delay(1); /* CS# High Time (read/write) >100ns */
+	return ret;
+}
diff --git a/drivers/rkflash/sfc.h b/drivers/rkflash/sfc.h
new file mode 100644
index 000000000000..3b84046d64c9
--- /dev/null
+++ b/drivers/rkflash/sfc.h
@@ -0,0 +1,179 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#ifndef _SFC_H
+#define _SFC_H
+
+#define SFC_VER_3		0x3 /* ver 3, else ver 1 */
+
+#define SFC_MAX_IOSIZE		(1024 * 8)    /* 8K byte */
+#define SFC_EN_INT		(0)         /* enable interrupt */
+#define SFC_EN_DMA		(1)         /* enable dma */
+#define SFC_FIFO_DEPTH		(0x10)      /* 16 words */
+
+/* FIFO watermark */
+#define SFC_RX_WMARK		(SFC_FIFO_DEPTH)	/* RX watermark level */
+#define SFC_TX_WMARK		(SFC_FIFO_DEPTH)	/* TX watermark level */
+#define SFC_RX_WMARK_SHIFT	(8)
+#define SFC_TX_WMARK_SHIFT	(0)
+
+/*return value*/
+#define SFC_OK                      (0)
+#define SFC_ERROR                   (-1)
+#define SFC_PARAM_ERR               (-2)
+#define SFC_TX_TIMEOUT              (-3)
+#define SFC_RX_TIMEOUT              (-4)
+#define SFC_WAIT_TIMEOUT            (-5)
+#define SFC_BUSY_TIMEOUT            (-6)
+#define SFC_ECC_FAIL                (-7)
+#define SFC_PROG_FAIL               (-8)
+#define SFC_ERASE_FAIL              (-9)
+
+/* SFC_CMD Register */
+#define SFC_ADDR_0BITS              (0)
+#define SFC_ADDR_24BITS             (1)
+#define SFC_ADDR_32BITS             (2)
+#define SFC_ADDR_XBITS              (3)
+
+#define SFC_WRITE                   (1)
+#define SFC_READ                    (0)
+
+/* SFC_CTRL Register */
+#define SFC_1BITS_LINE              (0)
+#define SFC_2BITS_LINE              (1)
+#define SFC_4BITS_LINE              (2)
+
+#define SFC_ENABLE_DMA              BIT(14)
+#define sfc_delay(us)	udelay(us)
+
+#define DMA_INT		BIT(7)      /* dma interrupt */
+#define NSPIERR_INT	BIT(6)      /* Nspi error interrupt */
+#define AHBERR_INT	BIT(5)      /* Ahb bus error interrupt */
+#define FINISH_INT	BIT(4)      /* Transfer finish interrupt */
+#define TXEMPTY_INT	BIT(3)      /* Tx fifo empty interrupt */
+#define TXOF_INT	BIT(2)      /* Tx fifo overflow interrupt */
+#define RXUF_INT	BIT(1)      /* Rx fifo underflow interrupt */
+#define RXFULL_INT	BIT(0)      /* Rx fifo full interrupt */
+
+/* SFC_FSR Register*/
+#define SFC_RXFULL	BIT(3)      /* rx fifo full */
+#define SFC_RXEMPTY	BIT(2)      /* rx fifo empty */
+#define SFC_TXEMPTY	BIT(1)      /* tx fifo empty */
+#define SFC_TXFULL	BIT(0)      /* tx fifo full */
+
+/* SFC_RCVR Register */
+#define SFC_RESET	BIT(0)     /* controller reset */
+
+/* SFC_SR Register */
+/* sfc busy flag. When busy, don't try to set the control register */
+#define SFC_BUSY	BIT(0)
+
+/* SFC_DMA_TRIGGER Register */
+/* Dma start trigger signal. Auto cleared after write */
+#define SFC_DMA_START	BIT(0)
+
+#define SFC_CTRL	0x00
+#define SFC_IMR		0x04
+#define SFC_ICLR	0x08
+#define SFC_FTLR	0x0C
+#define SFC_RCVR	0x10
+#define SFC_AX		0x14
+#define SFC_ABIT	0x18
+#define SFC_MASKISR	0x1C
+#define SFC_FSR		0x20
+#define SFC_SR		0x24
+#define SFC_RAWISR	0x28
+#define SFC_VER		0x2C
+#define SFC_QOP		0x30
+#define SFC_DMA_TRIGGER	0x80
+#define SFC_DMA_ADDR	0x84
+#define SFC_CMD		0x100
+#define SFC_ADDR	0x104
+#define SFC_DATA	0x108
+
+union SFCFSR_DATA {
+	u32 d32;
+	struct {
+		unsigned txempty : 1;
+		unsigned txfull :  1;
+		unsigned rxempty : 1;
+		unsigned rxfull :  1;
+		unsigned reserved7_4 : 4;
+		unsigned txlevel : 5;
+		unsigned reserved15_13 : 3;
+		unsigned rxlevel : 5;
+		unsigned reserved31_21 : 11;
+	} b;
+};
+
+/*------------------------------ Global Typedefs -----------------------------*/
+enum SFC_DATA_LINES {
+	DATA_LINES_X1 = 0,
+	DATA_LINES_X2,
+	DATA_LINES_X4
+};
+
+union SFCCTRL_DATA {
+	/* raw register data */
+	u32 d32;
+	/* register bits */
+	struct {
+		/* spi mode select */
+		unsigned mode : 1;
+		/*
+		 * Shift in phase selection
+		 * 0: shift in the flash data at posedge sclk_out
+		 * 1: shift in the flash data at negedge sclk_out
+		 */
+		unsigned sps : 1;
+		unsigned reserved3_2 : 2;
+		/* sclk_idle_level_cycles */
+		unsigned scic : 4;
+		/* Cmd bits number */
+		unsigned cmdlines : 2;
+		/* Address bits number */
+		unsigned addrlines : 2;
+		/* Data bits number */
+		unsigned datalines : 2;
+		/* this bit is not exit in regiseter, just use for code param */
+		unsigned enbledma : 1;
+		unsigned reserved15 : 1;
+		unsigned addrbits : 5;
+		unsigned reserved31_21 : 11;
+	} b;
+};
+
+union SFCCMD_DATA {
+	/* raw register data */
+	u32 d32;
+	/* register bits */
+	struct {
+		/* Command that will send to Serial Flash */
+		unsigned cmd : 8;
+		/* Dummy bits number */
+		unsigned dummybits : 4;
+		/* 0: read, 1: write */
+		unsigned rw : 1;
+		/* Continuous read mode */
+		unsigned readmode : 1;
+		/* Address bits number */
+		unsigned addrbits : 2;
+		/* Transferred bytes number */
+		unsigned datasize : 14;
+		/* Chip select */
+		unsigned cs : 2;
+	} b;
+};
+
+int sfc_init(void __iomem *reg_addr);
+int sfc_request(u32 sfcmd, u32 sfctrl, u32 addr, void *data);
+u16 sfc_get_version(void);
+void sfc_clean_irq(void);
+int rksfc_get_reg_addr(unsigned long *p_sfc_addr);
+void sfc_handle_irq(void);
+unsigned long rksfc_dma_map_single(unsigned long ptr, int size, int dir);
+void rksfc_dma_unmap_single(unsigned long ptr, int size, int dir);
+void rksfc_irq_flag_init(void);
+void rksfc_wait_for_irq_completed(void);
+#endif
diff --git a/drivers/rkflash/sfc_nand.c b/drivers/rkflash/sfc_nand.c
new file mode 100644
index 000000000000..5a28f74b48b8
--- /dev/null
+++ b/drivers/rkflash/sfc_nand.c
@@ -0,0 +1,624 @@
+// SPDX-License-Identifier: GPL-2.0
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#include <linux/bug.h>
+#include <linux/delay.h>
+#include <linux/string.h>
+#include <linux/kernel.h>
+
+#include "flash.h"
+#include "flash_com.h"
+#include "rkflash_debug.h"
+#include "sfc.h"
+#include "sfc_nand.h"
+
+static struct nand_info spi_nand_tbl[] = {
+	/* TC58CVG0S0HxAIx */
+	{0x98C2, 4, 64, 1, 1024, 0x13, 0x10, 0x03, 0x02, 0x6B, 0x02, 0xD8, 0x00, 18, 8, 0xB0, 0XFF, 4, 8, NULL},
+	/* TC58CVG1S0HxAIx */
+	{0x98CB, 4, 64, 2, 1024, 0x13, 0x10, 0x03, 0x02, 0x6B, 0x02, 0xD8, 0x00, 19, 8, 0xB0, 0XFF, 4, 8, NULL},
+	/* MX35LF1GE4AB */
+	{0xC212, 4, 64, 1, 1024, 0x13, 0x10, 0x03, 0x02, 0x6B, 0x32, 0xD8, 0x0C, 18, 4, 0xB0, 0, 4, 8, &sfc_nand_ecc_status_sp1},
+	/* MX35LF2GE4AB */
+	{0xC222, 4, 64, 2, 1024, 0x13, 0x10, 0x03, 0x02, 0x6B, 0x32, 0xD8, 0x0C, 19, 4, 0xB0, 0, 4, 8, &sfc_nand_ecc_status_sp1},
+	/* GD5F1GQ4UAYIG */
+	{0xC8F1, 4, 64, 1, 1024, 0x13, 0x10, 0x03, 0x02, 0x6B, 0x32, 0xD8, 0x0C, 18, 8, 0xB0, 0, 4, 8, NULL},
+	/* MT29F1G01ZAC */
+	{0x2C12, 4, 64, 1, 1024, 0x13, 0x10, 0x03, 0x02, 0x6B, 0x32, 0xD8, 0x00, 18, 1, 0xB0, 0, 4, 8, &sfc_nand_ecc_status_sp1},
+	/* GD5F2GQ40BY2GR */
+	{0xC8D2, 4, 64, 2, 1024, 0x13, 0x10, 0x03, 0x02, 0x6B, 0x32, 0xD8, 0x0C, 19, 8, 0xB0, 0, 4, 8, &sfc_nand_ecc_status_sp3},
+	/* GD5F1GQ4U */
+	{0xC8D1, 4, 64, 1, 1024, 0x13, 0x10, 0x03, 0x02, 0x6B, 0x32, 0xD8, 0x0C, 18, 8, 0xB0, 0, 4, 8, &sfc_nand_ecc_status_sp3},
+	/* IS37SML01G1 */
+	{0xC821, 4, 64, 1, 1024, 0x13, 0x10, 0x03, 0x02, 0x6B, 0x32, 0xD8, 0x00, 18, 1, 0xB0, 0XFF, 8, 12, &sfc_nand_ecc_status_sp1},
+	/* W25N01GV */
+	{0xEFAA, 4, 64, 1, 1024, 0x13, 0x10, 0x03, 0x02, 0x6B, 0x32, 0xD8, 0x0C, 18, 1, 0xFF, 0XFF, 4, 20, &sfc_nand_ecc_status_sp1},
+	/* HYF2GQ4UAACAE */
+	{0xC952, 4, 64, 2, 1024, 0x13, 0x10, 0x03, 0x02, 0x6B, 0x32, 0xD8, 0x0C, 19, 14, 0xB0, 0, 4, 36, NULL},
+	/* HYF2GQ4UDACAE */
+	{0xC922, 4, 64, 2, 1024, 0x13, 0x10, 0x03, 0x02, 0x6B, 0x32, 0xD8, 0x0C, 19, 4, 0xB0, 0, 4, 20, NULL},
+	/* HYF1GQ4UDACAE */
+	{0xC921, 4, 64, 2, 1024, 0x13, 0x10, 0x03, 0x02, 0x6B, 0x32, 0xD8, 0x0C, 18, 4, 0xB0, 0, 4, 20, NULL},
+};
+
+static u8 id_byte[8];
+static struct nand_info *p_nand_info;
+static u32 gp_page_buf[SFC_NAND_PAGE_MAX_SIZE / 4];
+static struct SFNAND_DEV sfc_nand_dev;
+
+static struct nand_info *spi_nand_get_info(u8 *nand_id)
+{
+	u32 i;
+	u32 id = (nand_id[0] << 8) | (nand_id[1] << 0);
+
+	for (i = 0; i < ARRAY_SIZE(spi_nand_tbl); i++) {
+		if (spi_nand_tbl[i].id == id)
+			return &spi_nand_tbl[i];
+	}
+	return NULL;
+}
+
+static int sfc_nand_write_en(void)
+{
+	int ret;
+	union SFCCMD_DATA sfcmd;
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = CMD_WRITE_EN;
+	ret = sfc_request(sfcmd.d32, 0, 0, NULL);
+	return ret;
+}
+
+static int sfc_nand_rw_preset(void)
+{
+	int ret;
+	union SFCCTRL_DATA sfctrl;
+	union SFCCMD_DATA sfcmd;
+	u8 status = 0xFF;
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = 0;
+	sfcmd.b.datasize = 1;
+	sfcmd.b.rw = SFC_WRITE;
+
+	sfctrl.b.datalines = 2;
+	ret = sfc_request(sfcmd.d32, sfctrl.d32, 0, &status);
+	return ret;
+}
+
+static int sfc_nand_read_feature(u8 addr, u8 *data)
+{
+	int ret;
+	union SFCCMD_DATA sfcmd;
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = 0x0F;
+	sfcmd.b.datasize = 1;
+	sfcmd.b.addrbits = SFC_ADDR_XBITS;
+	*data = 0;
+
+	ret = sfc_request(sfcmd.d32, 0x8 << 16, addr, data);
+	if (ret != SFC_OK)
+		return ret;
+	return SFC_OK;
+}
+
+static int sfc_nand_write_feature(u32 addr, u8 status)
+{
+	int ret;
+	union SFCCMD_DATA sfcmd;
+
+	sfc_nand_write_en();
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = 0x1F;
+	sfcmd.b.datasize = 1;
+	sfcmd.b.addrbits = SFC_ADDR_XBITS;
+	sfcmd.b.rw = SFC_WRITE;
+
+	ret = sfc_request(sfcmd.d32, 0x8 << 16, addr, &status);
+	if (ret != SFC_OK)
+		return ret;
+	return ret;
+}
+
+static int sfc_nand_wait_busy(u8 *data, int timeout)
+{
+	int ret;
+	int i;
+	u8 status;
+
+	*data = 0;
+	for (i = 0; i < timeout; i++) {
+		ret = sfc_nand_read_feature(0xC0, &status);
+		if (ret != SFC_OK)
+			return ret;
+		*data = status;
+		if (!(status & (1 << 0)))
+			return SFC_OK;
+		sfc_delay(1);
+	}
+	return -1;
+}
+
+/*
+ * ecc default:
+ * 0, No bit errors were detected
+ * 1, Bit errors were detected and corrected.
+ * 2, Multiple bit errors were detected and not corrected.
+ * 3, Bits errors were detected and corrected, bit error count
+ *	exceed the bit flip detection threshold
+ */
+static u32 sfc_nand_ecc_status(void)
+{
+	int ret;
+	u32 i;
+	u8 ecc;
+	u8 status;
+	u32 timeout = 1000 * 1000;
+
+	for (i = 0; i < timeout; i++) {
+		ret = sfc_nand_read_feature(0xC0, &status);
+		if (ret != SFC_OK)
+			return SFC_NAND_ECC_ERROR;
+		if (!(status & (1 << 0)))
+			break;
+		sfc_delay(1);
+	}
+
+	ecc = (status >> 4) & 0x03;
+
+	if (ecc <= 1)
+		ret = SFC_NAND_ECC_OK;
+	else if (ecc == 2)
+		ret = SFC_NAND_ECC_ERROR;
+	else
+		ret = SFC_NAND_ECC_REFRESH;
+
+	return ret;
+}
+
+/*
+ * ecc spectial type1:
+ * 0x00, No bit errors were detected;
+ * 0x01, Bits errors were detected and corrected, bit error count
+ *	may reach the bit flip detection threshold;
+ * 0x10, Multiple bit errors were detected and not corrected;
+ * 0x11, Reserved.
+ */
+u32 sfc_nand_ecc_status_sp1(void)
+{
+	int ret;
+	u32 i;
+	u8 ecc;
+	u8 status;
+	u32 timeout = 1000 * 1000;
+
+	for (i = 0; i < timeout; i++) {
+		ret = sfc_nand_read_feature(0xC0, &status);
+		if (ret != SFC_OK)
+			return SFC_NAND_ECC_ERROR;
+		if (!(status & (1 << 0)))
+			break;
+		sfc_delay(1);
+	}
+
+	ecc = (status >> 4) & 0x03;
+
+	if (ecc == 0)
+		ret = SFC_NAND_ECC_OK;
+	else if (ecc == 1)
+		ret = SFC_NAND_ECC_REFRESH;
+	else
+		ret = SFC_NAND_ECC_ERROR;
+
+	return ret;
+}
+
+/*
+ * ecc spectial type3:
+ * [0x0000, 0x0011], No bit errors were detected;
+ * [0x0100, 0x0111], Bit errors were detected and corrected. Not
+ *	reach Flipping Bits;
+ * [0x1000, 0x1011], Multiple bit errors were detected and
+ *	not corrected.
+ * [0x1100, 0x1111], Bit error count equals the bit flip
+ *	detectionthreshold
+ */
+u32 sfc_nand_ecc_status_sp3(void)
+{
+	int ret;
+	u32 i;
+	u8 ecc;
+	u8 status, status1;
+	u32 timeout = 1000 * 1000;
+
+	for (i = 0; i < timeout; i++) {
+		ret = sfc_nand_read_feature(0xC0, &status);
+		if (ret != SFC_OK)
+			return SFC_NAND_ECC_ERROR;
+		ret = sfc_nand_read_feature(0xF0, &status1);
+		if (ret != SFC_OK)
+			return SFC_NAND_ECC_ERROR;
+		if (!(status & (1 << 0)))
+			break;
+		sfc_delay(1);
+	}
+
+	ecc = (status >> 4) & 0x03;
+	ecc = (ecc << 2) | ((status1 >> 4) & 0x03);
+	if (ecc < 7)
+		ret = SFC_NAND_ECC_OK;
+	else if (ecc == 7 || ecc >= 12)
+		ret = SFC_NAND_ECC_REFRESH;
+	else
+		ret = SFC_NAND_ECC_ERROR;
+
+	return ret;
+}
+
+static u32 sfc_nand_erase_block(u8 cs, u32 addr)
+{
+	int ret;
+	union SFCCMD_DATA sfcmd;
+	u8 status;
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = p_nand_info->block_erase_cmd;
+	sfcmd.b.addrbits = SFC_ADDR_24BITS;
+	sfc_nand_write_en();
+	ret = sfc_request(sfcmd.d32, 0, addr, NULL);
+	if (ret != SFC_OK)
+		return ret;
+	ret = sfc_nand_wait_busy(&status, 1000 * 1000);
+	if (status & (1 << 2))
+		return SFC_NAND_PROG_ERASE_ERROR;
+	return ret;
+}
+
+static u32 sfc_nand_prog_page(u8 cs, u32 addr, u32 *p_data, u32 *p_spare)
+{
+	int ret;
+	union SFCCMD_DATA sfcmd;
+	union SFCCTRL_DATA sfctrl;
+	u8 status;
+	u32 data_sz = 2048;
+	u32 spare_offs_1 = p_nand_info->spare_offs_1;
+	u32 spare_offs_2 = p_nand_info->spare_offs_2;
+
+	memcpy(gp_page_buf, p_data, data_sz);
+	gp_page_buf[(data_sz + spare_offs_1) / 4] = p_spare[0];
+	gp_page_buf[(data_sz + spare_offs_2) / 4] = p_spare[1];
+
+	sfc_nand_write_en();
+	if (sfc_nand_dev.prog_lines == DATA_LINES_X4 &&
+	    p_nand_info->QE_address == 0xFF &&
+	    sfc_get_version() != SFC_VER_3)
+		sfc_nand_rw_preset();
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = sfc_nand_dev.page_prog_cmd;
+	sfcmd.b.addrbits = SFC_ADDR_XBITS;
+	sfcmd.b.datasize = SFC_NAND_PAGE_MAX_SIZE;
+	sfcmd.b.rw = SFC_WRITE;
+
+	sfctrl.d32 = 0;
+	sfctrl.b.datalines = sfc_nand_dev.prog_lines;
+	sfctrl.b.addrbits = 16;
+	sfc_request(sfcmd.d32, sfctrl.d32, 0, gp_page_buf);
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = p_nand_info->page_prog_cmd;
+	sfcmd.b.addrbits = SFC_ADDR_24BITS;
+	sfcmd.b.datasize = 0;
+	sfcmd.b.rw = SFC_WRITE;
+	ret = sfc_request(sfcmd.d32, 0, addr, p_data);
+	if (ret != SFC_OK)
+		return ret;
+	ret = sfc_nand_wait_busy(&status, 1000 * 1000);
+	if (status & (1 << 3))
+		return SFC_NAND_PROG_ERASE_ERROR;
+	return ret;
+}
+
+static u32 sfc_nand_read_page(u8 cs, u32 addr, u32 *p_data, u32 *p_spare)
+{
+	int ret;
+	union SFCCMD_DATA sfcmd;
+	union SFCCTRL_DATA sfctrl;
+	u32 ecc_result;
+	u32 data_sz = 2048;
+	u32 spare_offs_1 = p_nand_info->spare_offs_1;
+	u32 spare_offs_2 = p_nand_info->spare_offs_2;
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = p_nand_info->page_read_cmd;
+	sfcmd.b.datasize = 0;
+	sfcmd.b.addrbits = SFC_ADDR_24BITS;
+	sfc_request(sfcmd.d32, 0, addr, p_data);
+
+	if (p_nand_info->ecc_status)
+		ecc_result = p_nand_info->ecc_status();
+	else
+		ecc_result = sfc_nand_ecc_status();
+
+	if (sfc_nand_dev.read_lines == DATA_LINES_X4 &&
+	    p_nand_info->QE_address == 0xFF &&
+	    sfc_get_version() != SFC_VER_3)
+		sfc_nand_rw_preset();
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = sfc_nand_dev.page_read_cmd;
+	sfcmd.b.datasize = SFC_NAND_PAGE_MAX_SIZE;
+	sfcmd.b.addrbits = SFC_ADDR_24BITS;
+	sfctrl.d32 = 0;
+	sfctrl.b.datalines = sfc_nand_dev.read_lines;
+
+	memset(gp_page_buf, 0, SFC_NAND_PAGE_MAX_SIZE);
+	ret = sfc_request(sfcmd.d32, sfctrl.d32, 0, gp_page_buf);
+
+	memcpy(p_data, gp_page_buf, data_sz);
+	p_spare[0] = gp_page_buf[(data_sz + spare_offs_1) / 4];
+	p_spare[1] = gp_page_buf[(data_sz + spare_offs_2) / 4];
+	if (ret != SFC_OK)
+		return SFC_NAND_ECC_ERROR;
+
+	if (ecc_result != SFC_NAND_ECC_OK) {
+		PRINT_SFC_E("%s[0x%x], ret=0x%x\n", __func__, addr, ecc_result);
+		if (p_data)
+			PRINT_SFC_HEX("data:", p_data, 4, 8);
+		if (p_spare)
+			PRINT_SFC_HEX("spare:", p_spare, 4, 2);
+	}
+	return ecc_result;
+}
+
+static int sfc_nand_read_id_raw(u8 *data)
+{
+	int ret;
+	union SFCCMD_DATA sfcmd;
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = CMD_READ_JEDECID;
+	sfcmd.b.datasize = 3;
+	sfcmd.b.addrbits = SFC_ADDR_XBITS;
+
+	ret = sfc_request(sfcmd.d32, 0x8 << 16, 0, data);
+
+	return ret;
+}
+
+/*
+ * Read the 1st page's 1st byte of a phy_blk
+ * If not FF, it's bad blk
+ */
+static int sfc_nand_get_bad_block_list(u16 *table, u32 die)
+{
+	u16 blk;
+	u32 bad_cnt, page;
+	u32 blk_per_die;
+	u32 *pread;
+	u32 *pspare_read;
+
+	PRINT_SFC_E("%s\n", __func__);
+	pread = ftl_malloc(2048);
+	pspare_read = ftl_malloc(8);
+	bad_cnt = 0;
+	blk_per_die = p_nand_info->plane_per_die *
+			p_nand_info->blk_per_plane;
+	for (blk = 0; blk < blk_per_die; blk++) {
+		page = (blk + blk_per_die * die) *
+			p_nand_info->page_per_blk;
+		sfc_nand_read_page(0, page, pread, pspare_read);
+
+		if (pread[0] != 0xFFFFFFFF ||
+		    pspare_read[0] != 0xFFFFFFFF) {
+			table[bad_cnt++] = blk;
+			PRINT_SFC_E("die[%d], bad_blk[%d]\n", die, blk);
+		}
+	}
+	ftl_free(pread);
+	ftl_free(pspare_read);
+	return (int)bad_cnt;
+}
+
+#if SFC_NAND_STRESS_TEST_EN
+
+#define SFC_NAND_PAGE_SIZE	2048
+#define SFC_NAND_SPARE_SIZE	8
+
+static u16 bad_blk_list[1024];
+static u32 pwrite[SFC_NAND_PAGE_SIZE / 4];
+static u32 pread[SFC_NAND_PAGE_SIZE / 4];
+static u32 pspare_write[SFC_NAND_SPARE_SIZE / 4];
+static u32 pspare_read[SFC_NAND_SPARE_SIZE / 4];
+static u32 bad_blk_num;
+static u32 bad_page_num;
+
+static void sfc_nand_test(void)
+{
+	u32 i, blk, page, bad_cnt, page_addr;
+	int ret;
+	u32 pages_num = 64;
+	u32 blk_addr = 64;
+	u32 is_bad_blk = 0;
+
+	PRINT_SFC_E("%s\n", __func__);
+
+	bad_blk_num = 0;
+	bad_page_num = 0;
+	bad_cnt	= sfc_nand_get_bad_block_list(bad_blk_list, 0);
+
+	for (blk = 0; blk < 1024; blk++) {
+		for (i = 0; i < bad_cnt; i++) {
+			if (bad_blk_list[i] == blk)
+				break;
+		}
+		if (i < bad_cnt)
+			continue;
+		is_bad_blk = 0;
+		PRINT_SFC_E("Flash prog block: %x\n", blk);
+		sfc_nand_erase_block(0, blk * blk_addr);
+		for (page = 0; page < pages_num; page++) {
+			page_addr = blk * blk_addr + page;
+			for (i = 0; i < 512; i++)
+				pwrite[i] = (page_addr << 16) + i;
+			pspare_write[0] = pwrite[0] + 0x5AF0;
+			pspare_write[1] = pspare_write[0] + 1;
+			sfc_nand_prog_page(0, page_addr, pwrite, pspare_write);
+			memset(pread, 0, 2048);
+			memset(pspare_read, 0, 8);
+			ret = sfc_nand_read_page(0, page_addr, pread,
+						 pspare_read);
+			if (ret != SFC_NAND_ECC_OK)
+				is_bad_blk = 1;
+			for (i = 0; i < 512; i++) {
+				if (pwrite[i] != pread[i]) {
+					is_bad_blk = 1;
+					break;
+				}
+			}
+			for (i = 0; i < 2; i++) {
+				if (pspare_write[i] != pspare_read[i]) {
+					is_bad_blk = 1;
+					break;
+				}
+			}
+			if (is_bad_blk) {
+				bad_page_num++;
+				PRINT_SFC_E("ERR:page%x, ret=%x\n",
+					    page_addr, ret);
+				PRINT_SFC_HEX("data:", pread, 4, 8);
+				PRINT_SFC_HEX("spare:", pspare_read, 4, 2);
+			}
+		}
+		sfc_nand_erase_block(0, blk * blk_addr);
+		if (is_bad_blk)
+			bad_blk_num++;
+	}
+	PRINT_SFC_E("bad_blk_num = %d, bad_page_num = %d\n",
+		    bad_blk_num, bad_page_num);
+
+	PRINT_SFC_E("Flash Test Finish!!!\n");
+	while (1)
+		;
+}
+#endif
+
+static void ftl_flash_init(void)
+{
+	/* para init */
+	g_nand_phy_info.nand_type	= 1;
+	g_nand_phy_info.die_num		= 1;
+	g_nand_phy_info.plane_per_die	= p_nand_info->plane_per_die;
+	g_nand_phy_info.blk_per_plane	= p_nand_info->blk_per_plane;
+	g_nand_phy_info.page_per_blk	= p_nand_info->page_per_blk;
+	g_nand_phy_info.page_per_slc_blk = p_nand_info->page_per_blk;
+	g_nand_phy_info.byte_per_sec	= 512;
+	g_nand_phy_info.sec_per_page	= p_nand_info->sec_per_page;
+	g_nand_phy_info.sec_per_blk	= p_nand_info->sec_per_page *
+					  p_nand_info->page_per_blk;
+	g_nand_phy_info.reserved_blk	= 8;
+	g_nand_phy_info.blk_per_die	= p_nand_info->plane_per_die *
+					  p_nand_info->blk_per_plane;
+	g_nand_phy_info.ecc_bits	= p_nand_info->max_ecc_bits;
+
+	/* driver register */
+	g_nand_ops.get_bad_blk_list	= sfc_nand_get_bad_block_list;
+	g_nand_ops.erase_blk		= sfc_nand_erase_block;
+	g_nand_ops.prog_page		= sfc_nand_prog_page;
+	g_nand_ops.read_page		= sfc_nand_read_page;
+}
+
+static int spi_nand_enable_QE(void)
+{
+	int ret = SFC_OK;
+	u8 status;
+	int bit_offset = p_nand_info->QE_bits;
+
+	if (bit_offset == 0xFF)
+		return SFC_OK;
+
+	ret = sfc_nand_read_feature(p_nand_info->QE_address, &status);
+	if (ret != SFC_OK)
+		return ret;
+
+	if (status & (1 << bit_offset))   /* is QE bit set */
+		return SFC_OK;
+
+	status |= (1 << bit_offset);
+		return sfc_nand_write_feature(p_nand_info->QE_address, status);
+
+	return ret;
+}
+
+u32 sfc_nand_init(void)
+{
+	PRINT_SFC_I("...%s enter...\n", __func__);
+
+	sfc_nand_read_id_raw(id_byte);
+	PRINT_SFC_E("sfc_nand id: %x %x %x\n",
+		    id_byte[0], id_byte[1], id_byte[2]);
+	if (id_byte[0] == 0xFF || id_byte[0] == 0x00)
+		return FTL_NO_FLASH;
+
+	p_nand_info = spi_nand_get_info(id_byte);
+	if (!p_nand_info)
+		return FTL_UNSUPPORTED_FLASH;
+
+	sfc_nand_dev.manufacturer = id_byte[0];
+	sfc_nand_dev.mem_type = id_byte[1];
+
+	/* disable block lock */
+	sfc_nand_write_feature(0xA0, 0);
+	sfc_nand_dev.read_lines = DATA_LINES_X1;
+	sfc_nand_dev.prog_lines = DATA_LINES_X1;
+	sfc_nand_dev.page_read_cmd = p_nand_info->read_cache_cmd_1;
+	sfc_nand_dev.page_prog_cmd = p_nand_info->prog_cache_cmd_1;
+	if (p_nand_info->feature & FEA_4BIT_READ) {
+		if (spi_nand_enable_QE() == SFC_OK) {
+			sfc_nand_dev.read_lines = DATA_LINES_X4;
+			sfc_nand_dev.page_read_cmd =
+				p_nand_info->read_cache_cmd_4;
+		}
+	}
+
+	if (p_nand_info->feature & FEA_4BIT_PROG &&
+	    sfc_nand_dev.read_lines == DATA_LINES_X4) {
+		sfc_nand_dev.prog_lines = DATA_LINES_X4;
+		sfc_nand_dev.page_prog_cmd = p_nand_info->prog_cache_cmd_4;
+	}
+
+	if (1) {
+		u8 status;
+
+		sfc_nand_read_feature(0xA0, &status);
+		PRINT_SFC_I("sfc_nand A0 = 0x%x\n", status);
+		sfc_nand_read_feature(0xB0, &status);
+		PRINT_SFC_I("sfc_nand B0 = 0x%x\n", status);
+		sfc_nand_read_feature(0xC0, &status);
+		PRINT_SFC_I("sfc_nand C0 = 0x%x\n", status);
+		PRINT_SFC_I("read_lines = %x\n", sfc_nand_dev.read_lines);
+		PRINT_SFC_I("prog_lines = %x\n", sfc_nand_dev.prog_lines);
+		PRINT_SFC_I("page_read_cmd = %x\n", sfc_nand_dev.page_read_cmd);
+		PRINT_SFC_I("page_prog_cmd = %x\n", sfc_nand_dev.page_prog_cmd);
+	}
+	ftl_flash_init();
+
+	#if SFC_NAND_STRESS_TEST_EN
+	sfc_nand_test();
+	#endif
+
+	return SFC_OK;
+}
+
+void sfc_nand_deinit(void)
+{
+}
+
+int sfc_nand_read_id(u8 *data)
+{
+	memcpy(data, id_byte, 3);
+	return 0;
+}
diff --git a/drivers/rkflash/sfc_nand.h b/drivers/rkflash/sfc_nand.h
new file mode 100644
index 000000000000..8e01801f32a1
--- /dev/null
+++ b/drivers/rkflash/sfc_nand.h
@@ -0,0 +1,124 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#ifndef __SFC_NAND_H
+#define __SFC_NAND_H
+
+#define SFC_NAND_STRESS_TEST_EN		0
+
+#define SFC_NAND_PROG_ERASE_ERROR	-2
+#define SFC_NAND_HW_ERROR		-1
+#define SFC_NAND_ECC_ERROR		NAND_ERROR
+#define SFC_NAND_ECC_REFRESH		NAND_STS_REFRESH
+#define SFC_NAND_ECC_OK			NAND_STS_OK
+
+#define SFC_NAND_PAGE_MAX_SIZE		2112
+
+#define FEA_READ_STATUE_MASK    (0x3 << 0)
+#define FEA_STATUE_MODE1        0
+#define FEA_STATUE_MODE2        1
+#define FEA_4BIT_READ           BIT(2)
+#define FEA_4BIT_PROG           BIT(3)
+#define FEA_4BYTE_ADDR          BIT(4)
+#define FEA_4BYTE_ADDR_MODE	BIT(5)
+
+#define MID_WINBOND             0xEF
+#define MID_GIGADEV             0xC8
+#define MID_MICRON              0x2C
+#define MID_MACRONIX            0xC2
+#define MID_SPANSION            0x01
+#define MID_EON                 0x1C
+#define MID_ST                  0x20
+
+/* Command Set */
+#define CMD_READ_JEDECID        (0x9F)
+#define CMD_READ_DATA           (0x03)
+#define CMD_READ_STATUS         (0x05)
+#define CMD_WRITE_STATUS        (0x01)
+#define CMD_PAGE_PROG           (0x02)
+#define CMD_SECTOR_ERASE        (0x20)
+#define CMD_BLK64K_ERASE        (0xD8)
+#define CMD_BLK32K_ERASE        (0x52)
+#define CMD_CHIP_ERASE          (0xC7)
+#define CMD_WRITE_EN            (0x06)
+#define CMD_WRITE_DIS           (0x04)
+#define CMD_PAGE_READ           (0x13)
+#define CMD_GET_FEATURE         (0x0F)
+#define CMD_SET_FEATURE         (0x1F)
+#define CMD_PROG_LOAD           (0x02)
+#define CMD_PROG_EXEC           (0x10)
+#define CMD_BLOCK_ERASE         (0xD8)
+#define CMD_READ_DATA_X2        (0x3B)
+#define CMD_READ_DATA_X4        (0x6B)
+#define CMD_PROG_LOAD_X4        (0x32)
+#define CMD_READ_STATUS2        (0x35)
+#define CMD_READ_STATUS3        (0x15)
+#define CMD_WRITE_STATUS2       (0x31)
+#define CMD_WRITE_STATUS3       (0x11)
+#define CMD_FAST_READ_X1        (0x0B)  /* X1 cmd, X1 addr, X1 data */
+#define CMD_FAST_READ_X2        (0x3B)  /* X1 cmd, X1 addr, X2 data */
+/* X1 cmd, X1 addr, X4 data SUPPORT GD MARCONIX WINBOND */
+#define CMD_FAST_READ_X4        (0x6B)
+/* X1 cmd, X1 addr, X4 data SUPPORT GD MARCONIX WINBOND */
+#define CMD_FAST_4READ_X4       (0x6C)
+/* X1 cmd, X4 addr, X4 data SUPPORT EON GD MARCONIX WINBOND */
+#define CMD_FAST_READ_A4        (0xEB)
+/* X1 cmd, X1 addr, X4 data, SUPPORT GD WINBOND */
+#define CMD_PAGE_PROG_X4        (0x32)
+/* X1 cmd, X4 addr, X4 data, SUPPORT MARCONIX */
+#define CMD_PAGE_PROG_A4        (0x38)
+#define CMD_RESET_NAND          (0xFF)
+
+#define CMD_ENTER_4BYTE_MODE    (0xB7)
+#define CMD_EXIT_4BYTE_MODE     (0xE9)
+#define CMD_ENABLE_RESER	(0x66)
+#define CMD_RESET_DEVICE	(0x99)
+
+struct SFNAND_DEV {
+	u32 capacity;
+	u32 block_size;
+	u16 page_size;
+	u8 manufacturer;
+	u8 mem_type;
+	u8 read_lines;
+	u8 prog_lines;
+	u8 page_read_cmd;
+	u8 page_prog_cmd;
+};
+
+struct nand_info {
+	u32 id;
+
+	u16 sec_per_page;
+	u16 page_per_blk;
+	u16 plane_per_die;
+	u16 blk_per_plane;
+
+	u8 page_read_cmd;
+	u8 page_prog_cmd;
+	u8 read_cache_cmd_1;
+	u8 prog_cache_cmd_1;
+
+	u8 read_cache_cmd_4;
+	u8 prog_cache_cmd_4;
+	u8 block_erase_cmd;
+	u8 feature;
+
+	u8 density;  /* (1 << density) sectors*/
+	u8 max_ecc_bits;
+	u8 QE_address;
+	u8 QE_bits;
+
+	u8 spare_offs_1;
+	u8 spare_offs_2;
+	u32 (*ecc_status)(void);
+};
+
+u32 sfc_nand_init(void);
+void sfc_nand_deinit(void);
+int sfc_nand_read_id(u8 *buf);
+u32 sfc_nand_ecc_status_sp1(void);
+u32 sfc_nand_ecc_status_sp3(void);
+
+#endif
diff --git a/drivers/rkflash/sfc_nand_boot.c b/drivers/rkflash/sfc_nand_boot.c
new file mode 100644
index 000000000000..60e033efcdde
--- /dev/null
+++ b/drivers/rkflash/sfc_nand_boot.c
@@ -0,0 +1,52 @@
+// SPDX-License-Identifier: GPL-2.0
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#include <linux/kernel.h>
+#include <linux/mutex.h>
+
+#include "rk_sftl.h"
+#include "rkflash_api.h"
+#include "sfc.h"
+#include "sfc_nand.h"
+#include "typedef.h"
+
+int snand_init(void __iomem *reg_addr)
+{
+	int ret;
+
+	sfc_init(reg_addr);
+	ret = sfc_nand_init();
+	if (ret == 0)
+		ret = sftl_init();
+
+	return ret;
+}
+EXPORT_SYMBOL_GPL(snand_init);
+
+unsigned int snand_get_capacity(void)
+{
+	return sftl_get_density();
+}
+
+int snand_write(u32 sec, u32 n_sec, void *p_data)
+{
+	return sftl_write(sec, n_sec, p_data);
+}
+
+int snand_read(u32 sec, u32 n_sec, void *p_data)
+{
+	return sftl_read(sec, n_sec, p_data);
+}
+
+void snand_deinit(void)
+{
+	sftl_deinit();
+	sfc_nand_deinit();
+}
+
+int snand_resume(void __iomem *reg_addr)
+{
+	sfc_init(reg_addr);
+	return sfc_nand_init();
+}
diff --git a/drivers/rkflash/sfc_nor.c b/drivers/rkflash/sfc_nor.c
new file mode 100644
index 000000000000..cc51cac0bc29
--- /dev/null
+++ b/drivers/rkflash/sfc_nor.c
@@ -0,0 +1,656 @@
+// SPDX-License-Identifier: GPL-2.0
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#include <linux/delay.h>
+#include <linux/kernel.h>
+#include <linux/string.h>
+
+#include "sfc_nor.h"
+#include "rkflash_debug.h"
+
+static struct flash_info spi_flash_tbl[] = {
+	/* GD25Q32B */
+	{0xc84016, 128, 8, 0x03, 0x02, 0x6B, 0x32, 0x20, 0xD8, 0x0D, 13, 9, 0},
+	/* GD25Q64B */
+	{0xc84017, 128, 8, 0x03, 0x02, 0x6B, 0x32, 0x20, 0xD8, 0x0D, 14, 9, 0},
+	/* GD25Q127C and GD25Q128C*/
+	{0xc84018, 128, 8, 0x03, 0x02, 0x6B, 0x32, 0x20, 0xD8, 0x0C, 15, 9, 0},
+	/* GD25Q256B */
+	{0xc84019, 128, 8, 0x13, 0x12, 0x6C, 0x3E, 0x21, 0xDC, 0x1C, 16, 6, 0},
+	/* GD25Q512MC */
+	{0xc84020, 128, 8, 0x13, 0x12, 0x6C, 0x3E, 0x21, 0xDC, 0x1C, 17, 6, 0},
+	/* 25Q128FV */
+	{0xef4018, 128, 8, 0x03, 0x02, 0x6B, 0x32, 0x20, 0xD8, 0x0C, 15, 9, 0},
+	/* 25Q256FV */
+	{0xef4019, 128, 8, 0x13, 0x02, 0x6C, 0x32, 0x20, 0xD8, 0x3C, 16, 9, 0},
+	/* XT25F128A */
+	{0x207018, 128, 8, 0x03, 0x02, 0x6B, 0x32, 0x20, 0xD8, 0x00, 15, 0, 0},
+	/* MX25L25635E/F */
+	{0xc22019, 128, 8, 0x03, 0x02, 0x6B, 0x38, 0x20, 0xD8, 0x30, 16, 6, 0},
+};
+
+static const u8 sfnor_dev_code[] = {
+	0x11,
+	0x12,
+	0x13,
+	0x14,
+	0x15,
+	0x16,
+	0x17,
+	0x18,
+	0x19
+};
+
+static const u32 sfnor_capacity[] = {
+	0x20000,        /* 128k-byte */
+	0x40000,        /* 256k-byte */
+	0x80000,        /* 512k-byte */
+	0x100000,       /* 1M-byte */
+	0x200000,       /* 2M-byte */
+	0x400000,       /* 4M-byte */
+	0x800000,       /* 8M-byte */
+	0x1000000,      /* 16M-byte */
+	0x2000000       /* 32M-byte */
+};
+
+struct flash_info *g_spi_flash_info;
+
+static int snor_write_en(void)
+{
+	int ret;
+	union SFCCMD_DATA     sfcmd;
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = CMD_WRITE_EN;
+
+	ret = sfc_request(sfcmd.d32, 0, 0, NULL);
+
+	return ret;
+}
+
+int snor_reset_device(void)
+{
+	int ret;
+	union SFCCMD_DATA sfcmd;
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = CMD_ENABLE_RESER;
+	sfc_request(sfcmd.d32, 0, 0, NULL);
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = CMD_RESET_DEVICE;
+	ret = sfc_request(sfcmd.d32, 0, 0, NULL);
+	/* tRST=30us , delay 1ms here */
+	mdelay(1);
+	return ret;
+}
+
+static int snor_enter_4byte_mode(void)
+{
+	int ret;
+	union SFCCMD_DATA sfcmd;
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = CMD_ENTER_4BYTE_MODE;
+
+	ret = sfc_request(sfcmd.d32, 0, 0, NULL);
+	return ret;
+}
+
+static int snor_read_status(u32 reg_index, u8 *status)
+{
+	int ret;
+	union SFCCMD_DATA sfcmd;
+	u8 read_stat_cmd[] = {CMD_READ_STATUS,
+				CMD_READ_STATUS2, CMD_READ_STATUS3};
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = read_stat_cmd[reg_index];
+	sfcmd.b.datasize = 1;
+
+	ret = sfc_request(sfcmd.d32, 0, 0, status);
+
+	return ret;
+}
+
+static int snor_wait_busy(int timeout)
+{
+	int ret;
+	union SFCCMD_DATA sfcmd;
+	int i;
+	u32 status;
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = CMD_READ_STATUS;
+	sfcmd.b.datasize = 1;
+
+	for (i = 0; i < timeout; i++) {
+		ret = sfc_request(sfcmd.d32, 0, 0, &status);
+		if (ret != SFC_OK)
+			return ret;
+
+		if ((status & 0x01) == 0)
+			return SFC_OK;
+
+		sfc_delay(1);
+	}
+	PRINT_SFC_E("%s  error %x\n", __func__, timeout);
+
+	return SFC_BUSY_TIMEOUT;
+}
+
+static int snor_write_status2(u32 reg_index, u8 status)
+{
+	int ret;
+	union SFCCMD_DATA sfcmd;
+	u8 status2[2];
+	u8 read_index;
+
+	status2[reg_index] = status;
+	read_index = (reg_index == 0) ? 1 : 0;
+	ret = snor_read_status(read_index, &status2[read_index]);
+	if (ret != SFC_OK)
+		return ret;
+
+	snor_write_en();
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = CMD_WRITE_STATUS;
+	sfcmd.b.datasize = 2;
+	sfcmd.b.rw = SFC_WRITE;
+
+	ret = sfc_request(sfcmd.d32, 0, 0, &status2[0]);
+	if (ret != SFC_OK)
+		return ret;
+
+	ret = snor_wait_busy(10000);    /* 10ms */
+
+	return ret;
+}
+
+static int snor_write_status(u32 reg_index, u8 status)
+{
+	int ret;
+	union SFCCMD_DATA sfcmd;
+	u8 write_stat_cmd[] = {CMD_WRITE_STATUS,
+			       CMD_WRITE_STATUS2, CMD_WRITE_STATUS3};
+	snor_write_en();
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = write_stat_cmd[reg_index];
+	sfcmd.b.datasize = 1;
+	sfcmd.b.rw = SFC_WRITE;
+
+	ret = sfc_request(sfcmd.d32, 0, 0, &status);
+	if (ret != SFC_OK)
+		return ret;
+
+	ret = snor_wait_busy(10000);    /* 10ms */
+
+	return ret;
+}
+
+int snor_erase(struct SFNOR_DEV *p_dev,
+	       u32 addr,
+	       enum NOR_ERASE_TYPE erase_type)
+{
+	int ret;
+	union SFCCMD_DATA sfcmd;
+	int timeout[] = {400, 2000, 40000};   /* ms */
+
+	if (erase_type > ERASE_CHIP)
+		return SFC_PARAM_ERR;
+
+	sfcmd.d32 = 0;
+	if (erase_type == ERASE_BLOCK64K)
+		sfcmd.b.cmd = p_dev->blk_erase_cmd;
+	else if (erase_type == ERASE_SECTOR)
+		sfcmd.b.cmd = p_dev->sec_erase_cmd;
+	else
+		sfcmd.b.cmd = CMD_CHIP_ERASE;
+
+	sfcmd.b.addrbits = (erase_type != ERASE_CHIP) ?
+				SFC_ADDR_24BITS : SFC_ADDR_0BITS;
+	if (p_dev->addr_mode == ADDR_MODE_4BYTE && erase_type != ERASE_CHIP)
+		sfcmd.b.addrbits = SFC_ADDR_32BITS;
+
+	snor_write_en();
+
+	ret = sfc_request(sfcmd.d32, 0, addr, NULL);
+	if (ret != SFC_OK)
+		return ret;
+
+	ret = snor_wait_busy(timeout[erase_type] * 1000);
+	return ret;
+}
+
+int snor_prog_page(struct SFNOR_DEV *p_dev,
+		   u32 addr,
+		   void *p_data,
+		   u32 size)
+{
+	int ret;
+	union SFCCMD_DATA sfcmd;
+	union SFCCTRL_DATA sfctrl;
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = p_dev->prog_cmd;
+	sfcmd.b.addrbits = SFC_ADDR_24BITS;
+	sfcmd.b.datasize = size;
+	sfcmd.b.rw = SFC_WRITE;
+
+	sfctrl.d32 = 0;
+	sfctrl.b.datalines = p_dev->prog_lines;
+	sfctrl.b.enbledma = 0;
+	if (p_dev->prog_cmd == CMD_PAGE_PROG_A4)
+		sfctrl.b.addrlines = SFC_4BITS_LINE;
+
+	if (p_dev->addr_mode == ADDR_MODE_4BYTE)
+		sfcmd.b.addrbits = SFC_ADDR_32BITS;
+
+	snor_write_en();
+
+	ret = sfc_request(sfcmd.d32, sfctrl.d32, addr, p_data);
+	if (ret != SFC_OK)
+		return ret;
+
+	ret = snor_wait_busy(10000);
+
+	return ret;
+}
+
+static int snor_prog(struct SFNOR_DEV *p_dev, u32 addr, void *p_data, u32 size)
+{
+	int ret = SFC_OK;
+	u32 page_size, len;
+	u8 *p_buf =  (u8 *)p_data;
+
+	page_size = NOR_PAGE_SIZE;
+	while (size) {
+		len = page_size < size ? page_size : size;
+		ret = snor_prog_page(p_dev, addr, p_buf, len);
+		if (ret != SFC_OK)
+			return ret;
+
+		size -= len;
+		addr += len;
+		p_buf += len;
+	}
+
+	return ret;
+}
+
+static int snor_enable_QE(struct SFNOR_DEV *p_dev)
+{
+	int ret = SFC_OK;
+	int reg_index;
+	int bit_offset;
+	u8 status;
+
+	if (p_dev->manufacturer == MID_GIGADEV ||
+	    p_dev->manufacturer == MID_WINBOND) {
+		reg_index = p_dev->QE_bits >> 3;
+		bit_offset = p_dev->QE_bits & 0x7;
+		ret = snor_read_status(reg_index, &status);
+		if (ret != SFC_OK)
+			return ret;
+
+		if (status & (1 << bit_offset))   /* is QE bit set */
+			return SFC_OK;
+
+		status |= (1 << bit_offset);
+		return p_dev->write_status(reg_index, status);
+	}
+
+	return ret;
+}
+
+int snor_disable_QE(struct SFNOR_DEV *p_dev)
+{
+	int ret = SFC_OK;
+	int reg_index;
+	int bit_offset;
+	u8 status;
+
+	if (p_dev->manufacturer == MID_GIGADEV ||
+	    p_dev->manufacturer == MID_WINBOND) {
+		reg_index = p_dev->QE_bits >> 3;
+		bit_offset = p_dev->QE_bits & 0x7;
+		ret = snor_read_status(reg_index, &status);
+		if (ret != SFC_OK)
+			return ret;
+
+		if (!(status & (1 << bit_offset)))
+			return SFC_OK;
+
+		status &= ~(1 << bit_offset);
+		return p_dev->write_status(reg_index, status);
+	}
+
+	return ret;
+}
+
+#if (SNOR_4BIT_DATA_DETECT_EN)
+static int snor_set_dlines(struct SFNOR_DEV *p_dev, enum SFC_DATA_LINES lines)
+{
+	int ret;
+	u8 read_cmd[] = {CMD_FAST_READ_X1, CMD_FAST_READ_X2, CMD_FAST_READ_X4};
+
+	if (lines == DATA_LINES_X4) {
+		ret = snor_enable_QE(p_dev);
+		if (ret != SFC_OK)
+			return ret;
+	}
+
+	p_dev->read_lines = lines;
+	p_dev->read_cmd = read_cmd[lines];
+
+	if (p_dev->manufacturer == MID_GIGADEV ||
+	    p_dev->manufacturer == MID_WINBOND ||
+	    p_dev->manufacturer == MID_MACRONIX) {
+		p_dev->prog_lines = (lines != DATA_LINES_X2) ?
+				     lines : DATA_LINES_X1;
+		if (lines == DATA_LINES_X1) {
+			p_dev->prog_cmd = CMD_PAGE_PROG;
+		} else {
+			if (p_dev->manufacturer == MID_GIGADEV ||
+			    p_dev->manufacturer == MID_WINBOND)
+				p_dev->prog_cmd = CMD_PAGE_PROG_X4;
+			else
+				p_dev->prog_cmd = CMD_PAGE_PROG_A4;
+		}
+	}
+
+	return SFC_OK;
+}
+#endif
+
+int snor_read_data(struct SFNOR_DEV *p_dev,
+		   u32 addr,
+		   void *p_data,
+		   u32 size)
+{
+	int ret;
+	union SFCCMD_DATA sfcmd;
+	union SFCCTRL_DATA sfctrl;
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = p_dev->read_cmd;
+	sfcmd.b.datasize = size;
+	sfcmd.b.addrbits = SFC_ADDR_24BITS;
+
+	sfctrl.d32 = 0;
+	sfctrl.b.datalines = p_dev->read_lines;
+	if (!(size & 0x3) && size >= 4)
+		sfctrl.b.enbledma = 0;
+
+	if (p_dev->read_cmd == CMD_FAST_READ_X1 ||
+	    p_dev->read_cmd == CMD_FAST_READ_X4 ||
+	    p_dev->read_cmd == CMD_FAST_READ_X2 ||
+	    p_dev->read_cmd == CMD_FAST_4READ_X4) {
+		sfcmd.b.dummybits = 8;
+	} else if (p_dev->read_cmd == CMD_FAST_READ_A4) {
+		sfcmd.b.addrbits = SFC_ADDR_32BITS;
+		addr = (addr << 8) | 0xFF;	/* Set M[7:0] = 0xFF */
+		sfcmd.b.dummybits = 4;
+		sfctrl.b.addrlines = SFC_4BITS_LINE;
+	}
+
+	if (p_dev->addr_mode == ADDR_MODE_4BYTE)
+		sfcmd.b.addrbits = SFC_ADDR_32BITS;
+
+	ret = sfc_request(sfcmd.d32, sfctrl.d32, addr, p_data);
+
+	return ret;
+}
+
+int snor_read(struct SFNOR_DEV *p_dev, u32 sec, u32 n_sec, void *p_data)
+{
+	int ret = SFC_OK;
+	u32 addr, size, len;
+	u8 *p_buf =  (u8 *)p_data;
+
+	if ((sec + n_sec) > p_dev->capacity)
+		return SFC_PARAM_ERR;
+
+	mutex_lock(&p_dev->lock);
+	addr = sec << 9;
+	size = n_sec << 9;
+	while (size) {
+		len = size < SFC_MAX_IOSIZE ? size : SFC_MAX_IOSIZE;
+		ret = snor_read_data(p_dev, addr, p_buf, len);
+		if (ret != SFC_OK) {
+			PRINT_SFC_E("snor_read_data %x ret= %x\n",
+				    addr >> 9, ret);
+			goto out;
+		}
+
+		size -= len;
+		addr += len;
+		p_buf += len;
+	}
+out:
+	mutex_unlock(&p_dev->lock);
+	if (!ret)
+		ret = n_sec;
+
+	return ret;
+}
+
+int snor_write(struct SFNOR_DEV *p_dev, u32 sec, u32 n_sec, void *p_data)
+{
+	int ret = SFC_OK;
+	u32 len, blk_size, offset;
+	u8 *p_buf =  (u8 *)p_data;
+	u32 total_sec = n_sec;
+
+	if ((sec + n_sec) > p_dev->capacity)
+		return SFC_PARAM_ERR;
+
+	mutex_lock(&p_dev->lock);
+	while (n_sec) {
+		if (sec < 512 || sec >= p_dev->capacity  - 512)
+			blk_size = 8;
+		else
+			blk_size = p_dev->blk_size;
+
+		offset = (sec & (blk_size - 1));
+		if (!offset) {
+			ret = snor_erase(p_dev, sec << 9, (blk_size == 8) ?
+				ERASE_SECTOR : ERASE_BLOCK64K);
+			if (ret != SFC_OK) {
+				PRINT_SFC_E("snor_erase %x ret= %x\n",
+					    sec, ret);
+				goto out;
+			}
+		}
+		len = (blk_size - offset) < n_sec ?
+		      (blk_size - offset) : n_sec;
+		ret = snor_prog(p_dev, sec << 9, p_buf, len << 9);
+		if (ret != SFC_OK) {
+			PRINT_SFC_E("snor_prog %x ret= %x\n", sec, ret);
+			goto out;
+		}
+		n_sec -= len;
+		sec += len;
+		p_buf += len << 9;
+	}
+out:
+	mutex_unlock(&p_dev->lock);
+	if (!ret)
+		ret = total_sec;
+
+	return ret;
+}
+
+int snor_read_id(u8 *data)
+{
+	int ret;
+	union SFCCMD_DATA     sfcmd;
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = CMD_READ_JEDECID;
+	sfcmd.b.datasize = 3;
+
+	ret = sfc_request(sfcmd.d32, 0, 0, data);
+
+	return ret;
+}
+
+static int snor_read_parameter(u32 addr, u8 *data)
+{
+	int ret;
+	union SFCCMD_DATA     sfcmd;
+
+	sfcmd.d32 = 0;
+	sfcmd.b.cmd = CMD_READ_PARAMETER;
+	sfcmd.b.datasize = 1;
+	sfcmd.b.addrbits = SFC_ADDR_24BITS;
+	sfcmd.b.dummybits = 8;
+
+	ret = sfc_request(sfcmd.d32, 0, addr, data);
+
+	return ret;
+}
+
+u32 snor_get_capacity(struct SFNOR_DEV *p_dev)
+{
+	return p_dev->capacity;
+}
+
+static void snor_print_spi_chip_info(struct SFNOR_DEV *p_dev)
+{
+	PRINT_SFC_I("addr_mode: %x\n", p_dev->addr_mode);
+	PRINT_SFC_I("read_lines: %x\n", p_dev->read_lines);
+	PRINT_SFC_I("prog_lines: %x\n", p_dev->prog_lines);
+	PRINT_SFC_I("read_cmd: %x\n", p_dev->read_cmd);
+	PRINT_SFC_I("prog_cmd: %x\n", p_dev->prog_cmd);
+	PRINT_SFC_I("blk_erase_cmd: %x\n", p_dev->blk_erase_cmd);
+	PRINT_SFC_I("sec_erase_cmd: %x\n", p_dev->sec_erase_cmd);
+}
+
+static struct flash_info *snor_get_flash_info(u8 *flash_id)
+{
+	u32 i;
+	u32 id = (flash_id[0] << 16) | (flash_id[1] << 8) | (flash_id[2] << 0);
+
+	for (i = 0; i < ARRAY_SIZE(spi_flash_tbl); i++) {
+		if (spi_flash_tbl[i].id == id)
+			return &spi_flash_tbl[i];
+	}
+	return NULL;
+}
+
+/* Adjust flash info in ram base on parameter */
+static void *snor_flash_info_adjust(struct flash_info *spi_flash_info)
+{
+	u32 addr;
+	u8 para_version;
+
+	if (spi_flash_info->id == 0xc84019) {
+		addr = 0x09;
+		snor_read_parameter(addr, &para_version);
+		if (para_version == 0x06) {
+			spi_flash_info->QE_bits = 9;
+			spi_flash_info->prog_cmd_4 = 0x34;
+		}
+	}
+	return 0;
+}
+
+int snor_init(struct SFNOR_DEV *p_dev)
+{
+	u32 i;
+	u8 id_byte[5];
+	int err;
+
+	memset(p_dev, 0, sizeof(struct SFNOR_DEV));
+	snor_read_id(id_byte);
+	PRINT_SFC_E("sfc nor id: %x %x %x\n",
+		    id_byte[0], id_byte[1], id_byte[2]);
+	if (0xFF == id_byte[0] || 0x00 == id_byte[0]) {
+		err = SFC_ERROR;
+		goto err_out;
+	}
+
+	p_dev->manufacturer = id_byte[0];
+	p_dev->mem_type = id_byte[1];
+
+	mutex_init(&p_dev->lock);
+	g_spi_flash_info = snor_get_flash_info(id_byte);
+	if (g_spi_flash_info) {
+		snor_flash_info_adjust(g_spi_flash_info);
+		p_dev->capacity = 1 << g_spi_flash_info->density;
+		p_dev->blk_size = g_spi_flash_info->block_size;
+		p_dev->page_size = NOR_SECS_PAGE;
+		p_dev->read_cmd = g_spi_flash_info->read_cmd;
+		p_dev->prog_cmd = g_spi_flash_info->prog_cmd;
+		p_dev->sec_erase_cmd = g_spi_flash_info->sector_erase_cmd;
+		p_dev->blk_erase_cmd = g_spi_flash_info->block_erase_cmd;
+		p_dev->prog_lines = DATA_LINES_X1;
+		p_dev->read_lines = DATA_LINES_X1;
+		p_dev->QE_bits = g_spi_flash_info->QE_bits;
+
+		i = g_spi_flash_info->feature & FEA_READ_STATUE_MASK;
+		if (i == 0)
+			p_dev->write_status = snor_write_status;
+		else
+			p_dev->write_status = snor_write_status2;
+		if (g_spi_flash_info->feature & FEA_4BIT_READ) {
+			if (snor_enable_QE(p_dev) == SFC_OK) {
+				p_dev->read_lines = DATA_LINES_X4;
+				p_dev->read_cmd = g_spi_flash_info->read_cmd_4;
+			}
+		}
+		if (g_spi_flash_info->feature & FEA_4BIT_PROG &&
+		    p_dev->read_lines == DATA_LINES_X4) {
+			p_dev->prog_lines = DATA_LINES_X4;
+			p_dev->prog_cmd = g_spi_flash_info->prog_cmd_4;
+		}
+
+		if (g_spi_flash_info->feature & FEA_4BYTE_ADDR)
+			p_dev->addr_mode = ADDR_MODE_4BYTE;
+
+		if ((g_spi_flash_info->feature & FEA_4BYTE_ADDR_MODE))
+			snor_enter_4byte_mode();
+#ifdef CONFIG_RK_SFC_NOR_MTD
+		err = sfc_nor_mtd_init(p_dev);
+		if (err)
+			goto err_out;
+#endif
+
+		goto normal_out;
+	}
+
+	for (i = 0; i < sizeof(sfnor_dev_code); i++) {
+		if (id_byte[2] == sfnor_dev_code[i]) {
+			p_dev->capacity = sfnor_capacity[i] >> 9;
+			break;
+		}
+	}
+
+	if (i >= sizeof(sfnor_dev_code)) {
+		err = SFC_ERROR;
+		goto err_out;
+	}
+
+	p_dev->QE_bits = 9;
+	p_dev->blk_size = NOR_SECS_BLK;
+	p_dev->page_size = NOR_SECS_PAGE;
+	p_dev->read_cmd = CMD_READ_DATA;
+	p_dev->prog_cmd = CMD_PAGE_PROG;
+	p_dev->sec_erase_cmd = CMD_SECTOR_ERASE;
+	p_dev->blk_erase_cmd = CMD_BLOCK_ERASE;
+	p_dev->write_status = snor_write_status2;
+	#if (SNOR_4BIT_DATA_DETECT_EN)
+	snor_set_dlines(p_dev, DATA_LINES_X4);
+	#endif
+
+normal_out:
+	snor_print_spi_chip_info(p_dev);
+
+	return SFC_OK;
+
+err_out:
+	return err;
+}
+
diff --git a/drivers/rkflash/sfc_nor.h b/drivers/rkflash/sfc_nor.h
new file mode 100644
index 000000000000..f001a64c08bb
--- /dev/null
+++ b/drivers/rkflash/sfc_nor.h
@@ -0,0 +1,171 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#ifndef _SFNOR_H
+#define _SFNOR_H
+
+#include <linux/mutex.h>
+#include <linux/mtd/mtd.h>
+
+#include "sfc.h"
+
+/* Four line data transmission detection */
+#define SNOR_4BIT_DATA_DETECT_EN	0
+
+#define NOR_PAGE_SIZE		256
+#define NOR_BLOCK_SIZE		(64 * 1024)
+#define NOR_SECS_BLK		(NOR_BLOCK_SIZE / 512)
+#define NOR_SECS_PAGE		4
+
+#define FEA_READ_STATUE_MASK	(0x3 << 0)
+#define FEA_STATUE_MODE1	0
+#define FEA_STATUE_MODE2	1
+#define FEA_4BIT_READ		BIT(2)
+#define FEA_4BIT_PROG		BIT(3)
+#define FEA_4BYTE_ADDR		BIT(4)
+#define FEA_4BYTE_ADDR_MODE	BIT(5)
+
+/*Manufactory ID*/
+#define MID_WINBOND             0xEF
+#define MID_GIGADEV             0xC8
+#define MID_MICRON              0x2C
+#define MID_MACRONIX            0xC2
+#define MID_SPANSION            0x01
+#define MID_EON                 0x1C
+#define MID_ST                  0x20
+
+/*Command Set*/
+#define CMD_READ_JEDECID        (0x9F)
+#define CMD_READ_DATA           (0x03)
+#define CMD_READ_STATUS         (0x05)
+#define CMD_WRITE_STATUS        (0x01)
+#define CMD_PAGE_PROG           (0x02)
+#define CMD_SECTOR_ERASE        (0x20)
+#define CMD_BLK64K_ERASE        (0xD8)
+#define CMD_BLK32K_ERASE        (0x52)
+#define CMD_CHIP_ERASE          (0xC7)
+#define CMD_WRITE_EN            (0x06)
+#define CMD_WRITE_DIS           (0x04)
+#define CMD_PAGE_READ           (0x13)
+#define CMD_GET_FEATURE         (0x0F)
+#define CMD_SET_FEATURE         (0x1F)
+#define CMD_PROG_LOAD           (0x02)
+#define CMD_PROG_EXEC           (0x10)
+#define CMD_BLOCK_ERASE         (0xD8)
+#define CMD_READ_DATA_X2        (0x3B)
+#define CMD_READ_DATA_X4        (0x6B)
+#define CMD_PROG_LOAD_X4        (0x32)
+#define CMD_READ_STATUS2        (0x35)
+#define CMD_READ_STATUS3        (0x15)
+#define CMD_WRITE_STATUS2       (0x31)
+#define CMD_WRITE_STATUS3       (0x11)
+/* X1 cmd, X1 addr, X1 data */
+#define CMD_FAST_READ_X1        (0x0B)
+/* X1 cmd, X1 addr, X2 data */
+#define CMD_FAST_READ_X2        (0x3B)
+/* X1 cmd, X1 addr, X4 data SUPPORT GD MARCONIX WINBOND */
+#define CMD_FAST_READ_X4        (0x6B)
+/* X1 cmd, X1 addr, X4 data SUPPORT GD MARCONIX WINBOND */
+#define CMD_FAST_4READ_X4       (0x6C)
+/* X1 cmd, X4 addr, X4 data SUPPORT EON GD MARCONIX WINBOND */
+#define CMD_FAST_READ_A4        (0xEB)
+/* X1 cmd, X1 addr, X4 data, SUPPORT GD WINBOND */
+#define CMD_PAGE_PROG_X4        (0x32)
+/* X1 cmd, X4 addr, X4 data, SUPPORT MARCONIX */
+#define CMD_PAGE_PROG_A4        (0x38)
+#define CMD_RESET_NAND          (0xFF)
+#define CMD_ENTER_4BYTE_MODE    (0xB7)
+#define CMD_EXIT_4BYTE_MODE     (0xE9)
+#define CMD_ENABLE_RESER	(0x66)
+#define CMD_RESET_DEVICE	(0x99)
+#define CMD_READ_PARAMETER	(0x5A)
+
+enum NOR_ERASE_TYPE {
+	ERASE_SECTOR = 0,
+	ERASE_BLOCK64K,
+	ERASE_CHIP
+};
+
+enum SNOR_IO_MODE {
+	IO_MODE_SPI = 0,
+	IO_MODE_QPI
+};
+
+enum SNOR_READ_MODE {
+	READ_MODE_NOMAL = 0,
+	READ_MODE_FAST
+};
+
+enum SNOR_ADDR_MODE {
+	ADDR_MODE_3BYTE = 0,
+	ADDR_MODE_4BYTE
+};
+
+typedef int (*SNOR_WRITE_STATUS)(u32 reg_index, u8 status);
+
+struct SFNOR_DEV {
+	u32	capacity;
+	u8	manufacturer;
+	u8	mem_type;
+	u16	page_size;
+	u32	blk_size;
+
+	u8	read_cmd;
+	u8	prog_cmd;
+	u8	sec_erase_cmd;
+	u8	blk_erase_cmd;
+	u8	QE_bits;
+
+	enum SNOR_READ_MODE  read_mode;
+	enum SNOR_ADDR_MODE  addr_mode;
+	enum SNOR_IO_MODE    io_mode;
+
+	enum SFC_DATA_LINES read_lines;
+	enum SFC_DATA_LINES prog_lines;
+
+	SNOR_WRITE_STATUS write_status;
+	struct mutex	lock; /* to lock this object */
+#ifdef CONFIG_RK_SFC_NOR_MTD
+	struct mtd_info mtd;
+	u8 *dma_buf;
+#endif
+};
+
+struct flash_info {
+	u32 id;
+
+	u8 block_size;
+	u8 sector_size;
+	u8 read_cmd;
+	u8 prog_cmd;
+
+	u8 read_cmd_4;
+	u8 prog_cmd_4;
+	u8 sector_erase_cmd;
+	u8 block_erase_cmd;
+
+	u8 feature;
+	u8 density;  /* (1 << density) sectors*/
+	u8 QE_bits;
+	u8 reserved2;
+};
+
+int snor_init(struct SFNOR_DEV *p_dev);
+u32 snor_get_capacity(struct SFNOR_DEV *p_dev);
+int snor_read(struct SFNOR_DEV *p_dev, u32 sec, u32 n_sec, void *p_data);
+int snor_write(struct SFNOR_DEV *p_dev, u32 sec, u32 n_sec, void *p_data);
+int snor_erase(struct SFNOR_DEV *p_dev,
+	       u32 addr,
+	       enum NOR_ERASE_TYPE erase_type);
+int snor_read_id(u8 *data);
+int snor_prog_page(struct SFNOR_DEV *p_dev, u32 addr, void *p_data, u32 size);
+int snor_read_data(struct SFNOR_DEV *p_dev, u32 addr, void *p_data, u32 size);
+int snor_reset_device(void);
+int snor_disable_QE(struct SFNOR_DEV *p_dev);
+extern struct flash_info *g_spi_flash_info;
+extern struct SFNOR_DEV sfnor_dev;
+
+int sfc_nor_mtd_init(struct SFNOR_DEV *p_dev);
+
+#endif
diff --git a/drivers/rkflash/sfc_nor_boot.c b/drivers/rkflash/sfc_nor_boot.c
new file mode 100644
index 000000000000..ba00b3acf990
--- /dev/null
+++ b/drivers/rkflash/sfc_nor_boot.c
@@ -0,0 +1,112 @@
+// SPDX-License-Identifier: GPL-2.0
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#include <linux/kernel.h>
+#include <linux/mutex.h>
+
+#include "sfc.h"
+#include "sfc_nor.h"
+#include "rkflash_api.h"
+#include "typedef.h"
+
+#define VENDOR_PART_NUM			4
+
+#define	FLASH_VENDOR_PART_START		8
+#define FLASH_VENDOR_PART_SIZE		8
+#define FLASH_VENDOR_ITEM_NUM		62
+#define	FLASH_VENDOR_PART_END		\
+	(FLASH_VENDOR_PART_START +\
+	FLASH_VENDOR_PART_SIZE * VENDOR_PART_NUM - 1)
+
+struct SFNOR_DEV sfnor_dev;
+
+/* SFNOR_DEV sfnor_dev is in the sfc_nor.h */
+int spi_flash_init(void __iomem	*reg_addr)
+{
+	int ret;
+
+	sfc_init(reg_addr);
+	ret = snor_init(&sfnor_dev);
+
+	return ret;
+}
+EXPORT_SYMBOL_GPL(spi_flash_init);
+
+void spi_flash_read_id(u8 chip_sel, void *buf)
+{
+	snor_read_id(buf);
+}
+EXPORT_SYMBOL_GPL(spi_flash_read_id);
+
+int snor_read_lba(u32 sec, u32 n_sec, void *p_data)
+{
+	int ret = 0;
+	u32 count, offset;
+	char *buf;
+
+	if (sec + n_sec - 1 < FLASH_VENDOR_PART_START ||
+	    sec > FLASH_VENDOR_PART_END) {
+		ret = snor_read(&sfnor_dev, sec, n_sec, p_data);
+	} else {
+		memset(p_data, 0, 512 * n_sec);
+		if (sec < FLASH_VENDOR_PART_START) {
+			count = FLASH_VENDOR_PART_START - sec;
+			buf = p_data;
+			ret = snor_read(&sfnor_dev, sec, count, buf);
+		}
+		if ((sec + n_sec - 1) > FLASH_VENDOR_PART_END) {
+			count = sec + n_sec - 1 - FLASH_VENDOR_PART_END;
+			offset = FLASH_VENDOR_PART_END - sec + 1;
+			buf = p_data + offset * 512;
+			ret = snor_read(&sfnor_dev,
+					FLASH_VENDOR_PART_END + 1,
+					count, buf);
+		}
+	}
+
+	return (u32)ret == n_sec ? 0 : ret;
+}
+
+int snor_write_lba(u32 sec, u32 n_sec, void *p_data)
+{
+	int ret = 0;
+
+	ret = snor_write(&sfnor_dev, sec, n_sec, p_data);
+
+	return (u32)ret == n_sec ? 0 : ret;
+}
+
+int snor_vendor_read(u32 sec, u32 n_sec, void *p_data)
+{
+	int ret = 0;
+
+	ret = snor_read(&sfnor_dev, sec, n_sec, p_data);
+
+	return (u32)ret == n_sec ? 0 : ret;
+}
+
+int snor_vendor_write(u32 sec, u32 n_sec, void *p_data)
+{
+	int ret = 0;
+
+	ret = snor_write(&sfnor_dev, sec, n_sec, p_data);
+
+	return (u32)ret == n_sec ? 0 : ret;
+}
+
+unsigned int snor_capacity(void)
+{
+	return snor_get_capacity(&sfnor_dev);
+}
+
+void snor_deinit(void)
+{
+	snor_disable_QE(&sfnor_dev);
+	snor_reset_device();
+}
+
+int snor_resume(void __iomem *reg_addr)
+{
+	return snor_init(&sfnor_dev);
+}
diff --git a/drivers/rkflash/sfc_nor_mtd.c b/drivers/rkflash/sfc_nor_mtd.c
new file mode 100644
index 000000000000..aefb2923ae56
--- /dev/null
+++ b/drivers/rkflash/sfc_nor_mtd.c
@@ -0,0 +1,224 @@
+// SPDX-License-Identifier: GPL-2.0
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#include <linux/kernel.h>
+#include <linux/mtd/cfi.h>
+#include <linux/mtd/mtd.h>
+#include <linux/mtd/partitions.h>
+#include <linux/slab.h>
+
+#include "sfc_nor.h"
+#include "rkflash_blk.h"
+#include "rkflash_debug.h"
+
+static struct mtd_partition nor_parts[MAX_PART_COUNT];
+
+static inline struct SFNOR_DEV *mtd_to_sfc(struct mtd_info *ptr_mtd)
+{
+	return (struct SFNOR_DEV *)((char *)ptr_mtd -
+		offsetof(struct SFNOR_DEV, mtd));
+}
+
+static int sfc_erase_mtd(struct mtd_info *mtd, struct erase_info *instr)
+{
+	int ret;
+	struct SFNOR_DEV *p_dev = mtd_to_sfc(mtd);
+	u32 addr, len;
+	u32 rem;
+
+	if ((instr->addr + instr->len) > p_dev->capacity << 9)
+		return -EINVAL;
+
+	div_u64_rem(instr->len, mtd->erasesize, &rem);
+	if (rem)
+		return -EINVAL;
+
+	mutex_lock(&p_dev->lock);
+
+	addr = instr->addr;
+	len = instr->len;
+
+	if (len == p_dev->mtd.size) {
+		ret = snor_erase(p_dev, 0, CMD_CHIP_ERASE);
+		if (ret) {
+			PRINT_SFC_E("snor_erase CHIP 0x%x ret=%d\n",
+				    addr, ret);
+			instr->state = MTD_ERASE_FAILED;
+			mutex_unlock(&p_dev->lock);
+			return -EIO;
+		}
+	} else {
+		while (len > 0) {
+			ret = snor_erase(p_dev, addr, ERASE_BLOCK64K);
+			if (ret) {
+				PRINT_SFC_E("snor_erase 0x%x ret=%d\n",
+					    addr, ret);
+				instr->state = MTD_ERASE_FAILED;
+				mutex_unlock(&p_dev->lock);
+				return -EIO;
+			}
+			addr += mtd->erasesize;
+			len -= mtd->erasesize;
+		}
+	}
+
+	mutex_unlock(&p_dev->lock);
+
+	instr->state = MTD_ERASE_DONE;
+	mtd_erase_callback(instr);
+
+	return 0;
+}
+
+static int sfc_write_mtd(struct mtd_info *mtd, loff_t to, size_t len,
+			 size_t *retlen, const u_char *buf)
+{
+	int status;
+	u32 addr, size, chunk, padding;
+	u32 page_align;
+	struct SFNOR_DEV *p_dev = mtd_to_sfc(mtd);
+
+	if ((to + len) > p_dev->capacity << 9)
+		return -EINVAL;
+
+	mutex_lock(&p_dev->lock);
+
+	addr = to;
+	size = len;
+
+	while (size > 0) {
+		page_align = addr & (NOR_PAGE_SIZE - 1);
+		chunk = size;
+		if (chunk > (NOR_PAGE_SIZE - page_align))
+			chunk = NOR_PAGE_SIZE - page_align;
+		memcpy(p_dev->dma_buf, buf, chunk);
+		padding = 0;
+		if (chunk < NOR_PAGE_SIZE) {
+			/* 4 bytes algin */
+			padding = ((chunk + 3) & 0xFFFC) - chunk;
+			memset(p_dev->dma_buf + chunk, 0xFF, padding);
+		}
+		status = snor_prog_page(p_dev, addr, p_dev->dma_buf,
+					chunk + padding);
+		if (status != SFC_OK) {
+			PRINT_SFC_E("snor_prog_page %x ret= %d\n",
+				    addr, status);
+			*retlen = len - size;
+			mutex_unlock(&p_dev->lock);
+			return status;
+		}
+
+		size -= chunk;
+		addr += chunk;
+		buf += chunk;
+	}
+	*retlen = len;
+	mutex_unlock(&p_dev->lock);
+
+	return 0;
+}
+
+static int sfc_read_mtd(struct mtd_info *mtd, loff_t from, size_t len,
+			size_t *retlen, u_char *buf)
+{
+	u32 addr, size, chunk;
+	u8 *p_buf =  (u8 *)buf;
+	int ret = SFC_OK;
+
+	struct SFNOR_DEV *p_dev = mtd_to_sfc(mtd);
+
+	if ((from + len) > p_dev->capacity << 9)
+		return -EINVAL;
+
+	mutex_lock(&p_dev->lock);
+
+	addr = from;
+	size = len;
+
+	while (size > 0) {
+		chunk = (size < NOR_PAGE_SIZE) ? size : NOR_PAGE_SIZE;
+		ret = snor_read_data(p_dev, addr, p_dev->dma_buf, chunk);
+		if (ret != SFC_OK) {
+			PRINT_SFC_E("snor_read_data %x ret=%d\n", addr, ret);
+			*retlen = len - size;
+			mutex_unlock(&p_dev->lock);
+			return ret;
+		}
+		memcpy(p_buf, p_dev->dma_buf, chunk);
+		size -= chunk;
+		addr += chunk;
+		p_buf += chunk;
+	}
+
+	*retlen = len;
+	mutex_unlock(&p_dev->lock);
+	return 0;
+}
+
+int sfc_nor_mtd_init(struct SFNOR_DEV *p_dev)
+{
+	int ret, i, part_num = 0;
+	int capacity;
+	struct STRUCT_PART_INFO *g_part;  /* size 2KB */
+
+	capacity = p_dev->capacity;
+	p_dev->mtd.name = "sfc_nor";
+	p_dev->mtd.type = MTD_NORFLASH;
+	p_dev->mtd.writesize = 1;
+	p_dev->mtd.flags = MTD_CAP_NORFLASH;
+	/* see snor_write */
+	p_dev->mtd.size = capacity << 9;
+	p_dev->mtd._erase = sfc_erase_mtd;
+	p_dev->mtd._read = sfc_read_mtd;
+	p_dev->mtd._write = sfc_write_mtd;
+	p_dev->mtd.erasesize = g_spi_flash_info->block_size << 9;
+	p_dev->mtd.writebufsize = NOR_PAGE_SIZE;
+
+	p_dev->dma_buf = kmalloc(NOR_PAGE_SIZE, GFP_KERNEL | GFP_DMA);
+	if (!p_dev->dma_buf) {
+		PRINT_SFC_E("kmalloc size=0x%x failed\n", NOR_PAGE_SIZE);
+		ret = -ENOMEM;
+		goto out;
+	}
+
+	g_part = kmalloc(sizeof(*g_part), GFP_KERNEL | GFP_DMA);
+	if (!g_part) {
+		ret = -ENOMEM;
+		goto free_dma_buf;
+	}
+	part_num = 0;
+	if (snor_read(p_dev, 0, 4, g_part) == 0) {
+		if (g_part->hdr.ui_fw_tag == RK_PARTITION_TAG) {
+			part_num = g_part->hdr.ui_part_entry_count;
+			for (i = 0; i < part_num; i++) {
+				nor_parts[i].name =
+					kstrdup(g_part->part[i].sz_name,
+						GFP_KERNEL);
+				if (g_part->part[i].ui_pt_sz == 0xFFFFFFFF)
+					g_part->part[i].ui_pt_sz = capacity -
+						g_part->part[i].ui_pt_off;
+				nor_parts[i].offset =
+					(u64)g_part->part[i].ui_pt_off << 9;
+				nor_parts[i].size =
+					(u64)g_part->part[i].ui_pt_sz << 9;
+				nor_parts[i].mask_flags = 0;
+			}
+		}
+	}
+	kfree(g_part);
+	if (part_num == 0) {
+		ret = -1;
+		goto free_dma_buf;
+	}
+	ret = mtd_device_register(&p_dev->mtd, nor_parts, part_num);
+	if (ret != 0)
+		goto free_dma_buf;
+	return ret;
+
+free_dma_buf:
+	kfree(p_dev->dma_buf);
+out:
+	return ret;
+}
+
diff --git a/drivers/rkflash/typedef.h b/drivers/rkflash/typedef.h
new file mode 100644
index 000000000000..bafc85775397
--- /dev/null
+++ b/drivers/rkflash/typedef.h
@@ -0,0 +1,41 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+
+/* Copyright (c) 2018 Rockchip Electronics Co. Ltd. */
+
+#ifndef	__TYPE_DEF_H
+#define	__TYPE_DEF_H
+
+#include <linux/kernel.h>
+
+#ifndef NULL
+#define NULL	0
+#endif
+
+#define OK	0
+#define ERROR	(-1)
+
+#define FTL_ERROR	ERROR
+#define FTL_OK		OK
+#define FTL_NO_FLASH	-2
+#define FTL_NO_IDB	-3
+#define FTL_UNSUPPORTED_FLASH	-4
+
+#define FALSE		0
+#define TRUE		(!FALSE)
+
+#define INVALID_UINT8	((u8)0xFF)
+#define INVALID_UINT16	((u16)0xFFFF)
+#define INVALID_UINT32	((u32)0xFFFFFFFFL)
+
+#define PRINT_E	pr_info
+#define PRINT_I	pr_info
+
+void *ftl_malloc(int n_size);
+void *ftl_memset(void *s, int c, unsigned int n);
+void *ftl_memcpy(void *pv_to,
+		 const void *pv_from,
+		 unsigned int size);
+void ftl_free(void *p);
+void rknand_print_hex(char *s, void *buf, int width, int len);
+
+#endif  /*__TYPEDEF_H */
-- 
2.11.0

