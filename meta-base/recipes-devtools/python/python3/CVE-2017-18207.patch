From 6a05dea4e081e927b6f0ef05b28696a075e1e99f Mon Sep 17 00:00:00 2001
From: Benxi Liu <bxliu@linux.alibaba.com>
Date: Wed, 13 Feb 2019 17:41:09 +0800
Subject: [PATCH] bpo-32056: Improve exceptions in aifc, wave and sunau.
 (GH-5951)

(cherry picked from commit 134cb01)

Co-authored-by: Serhiy Storchaka <storchaka@gmail.com>

The patch comes from:
https://github.com/python/cpython/pull/6139/commits/a7092b98a45663a98d84ece15000f520d789daad

The related new test is not added to this patch.

CVE: CVE-2017-18207
Upstream-Status: Backport

Signed-off-by: Benxi Liu <bxliu@linux.alibaba.com>
---
 Lib/aifc.py                                                |  4 ++++
 Lib/sunau.py                                               |  2 ++
 Lib/wave.py                                                | 14 ++++++++++++--
 .../next/Security/2018-03-01-17-49-56.bpo-32056.IlpfgE.rst |  3 +++
 4 files changed, 21 insertions(+), 2 deletions(-)
 create mode 100644 Misc/NEWS.d/next/Security/2018-03-01-17-49-56.bpo-32056.IlpfgE.rst

diff --git a/Lib/aifc.py b/Lib/aifc.py
index 7ebdbeb..75b09c0 100644
--- a/Lib/aifc.py
+++ b/Lib/aifc.py
@@ -449,6 +449,10 @@ class Aifc_read:
         self._nframes = _read_long(chunk)
         self._sampwidth = (_read_short(chunk) + 7) // 8
         self._framerate = int(_read_float(chunk))
+        if self._sampwidth <= 0:
+            raise Error('bad sample width')
+        if self._nchannels <= 0:
+            raise Error('bad # of channels')
         self._framesize = self._nchannels * self._sampwidth
         if self._aifc:
             #DEBUG: SGI's soundeditor produces a bad size :-(
diff --git a/Lib/sunau.py b/Lib/sunau.py
index 0473e9e..4b65d48 100644
--- a/Lib/sunau.py
+++ b/Lib/sunau.py
@@ -207,6 +207,8 @@ class Au_read:
             raise Error('unknown encoding')
         self._framerate = int(_read_u32(file))
         self._nchannels = int(_read_u32(file))
+        if not self._nchannels:
+            raise Error('bad # of channels')
         self._framesize = self._framesize * self._nchannels
         if self._hdr_size > 24:
             self._info = file.read(self._hdr_size - 24)
diff --git a/Lib/wave.py b/Lib/wave.py
index 8a101e3..b2cc4e6 100644
--- a/Lib/wave.py
+++ b/Lib/wave.py
@@ -252,12 +252,22 @@ class Wave_read:
     #
 
     def _read_fmt_chunk(self, chunk):
-        wFormatTag, self._nchannels, self._framerate, dwAvgBytesPerSec, wBlockAlign = struct.unpack_from('<HHLLH', chunk.read(14))
+        try:
+            wFormatTag, self._nchannels, self._framerate, dwAvgBytesPerSec, wBlockAlign = struct.unpack_from('<HHLLH', chunk.read(14))
+        except struct.error:
+            raise EOFError from None
         if wFormatTag == WAVE_FORMAT_PCM:
-            sampwidth = struct.unpack_from('<H', chunk.read(2))[0]
+            try:
+                sampwidth = struct.unpack_from('<H', chunk.read(2))[0]
+            except struct.error:
+                raise EOFError from None
             self._sampwidth = (sampwidth + 7) // 8
+            if not self._sampwidth:
+                raise Error('bad sample width')
         else:
             raise Error('unknown format: %r' % (wFormatTag,))
+        if not self._nchannels:
+            raise Error('bad # of channels')
         self._framesize = self._nchannels * self._sampwidth
         self._comptype = 'NONE'
         self._compname = 'not compressed'
diff --git a/Misc/NEWS.d/next/Security/2018-03-01-17-49-56.bpo-32056.IlpfgE.rst b/Misc/NEWS.d/next/Security/2018-03-01-17-49-56.bpo-32056.IlpfgE.rst
new file mode 100644
index 0000000..625bba4
--- /dev/null
+++ b/Misc/NEWS.d/next/Security/2018-03-01-17-49-56.bpo-32056.IlpfgE.rst
@@ -0,0 +1,3 @@
+Improved exceptions raised for invalid number of channels and sample width
+when read an audio file in modules :mod:`aifc`, :mod:`wave` and
+:mod:`sunau`.
\ No newline at end of file
-- 
2.7.4

